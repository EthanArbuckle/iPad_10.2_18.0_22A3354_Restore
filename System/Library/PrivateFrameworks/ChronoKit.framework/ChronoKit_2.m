uint64_t sub_1D2658268(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *i;
  unint64_t v18;
  uint64_t v19;
  char v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  BOOL v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v11 = *a1;
  v12 = sub_1D26CE0B8();
  v14 = v13;
  v15 = *(_QWORD *)(v11 + 16);
  if (!v15)
    goto LABEL_25;
  v16 = v12;
  v62 = a7;
  v63 = a5;
  v61 = a6;
  v64 = v11;
  for (i = (char *)(v11 + 64); ; i += 40)
  {
    v19 = *((_QWORD *)i - 2);
    v18 = *((_QWORD *)i - 1);
    v20 = *i;
    v21 = *((_QWORD *)i - 4) == v16 && *((_QWORD *)i - 3) == v14;
    if (v21 || (sub_1D26CE3D0() & 1) != 0)
      break;
    if (!--v15)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v19, v18, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v19, v18, v20);
  v23 = v22;
  v25 = v24;
  sub_1D253FBE8(v19, v18, v20);
  if (!v25)
    return 0;
  if (v23 == a2 && v25 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v27 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    v26 = 0;
    if ((v27 & 1) == 0)
      return v26;
  }
  v28 = sub_1D26CE0B8();
  v30 = v29;
  v31 = *(_QWORD *)(v11 + 16);
  if (!v31)
    goto LABEL_25;
  v32 = v28;
  v33 = (char *)(v64 + 64);
  while (1)
  {
    v34 = *((_QWORD *)v33 - 2);
    v35 = *((_QWORD *)v33 - 1);
    v36 = *v33;
    v37 = *((_QWORD *)v33 - 4) == v32 && *((_QWORD *)v33 - 3) == v30;
    if (v37 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v33 += 40;
    if (!--v31)
      goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v34, v35, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v34, v35, v36);
  v40 = v39;
  v42 = v41;
  sub_1D253FBE8(v34, v35, v36);
  if (!v42)
    return 0;
  if (v40 == a4 && v42 == v63)
  {
    swift_bridgeObjectRelease();
    v43 = v64;
  }
  else
  {
    v44 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    v26 = 0;
    v43 = v64;
    if ((v44 & 1) == 0)
      return v26;
  }
  v45 = sub_1D26CE0B8();
  v47 = v46;
  v48 = *(_QWORD *)(v43 + 16);
  if (!v48)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    v55 = v62;
LABEL_47:
    v26 = v55 == 0;
    swift_bridgeObjectRelease();
    return v26;
  }
  v49 = v45;
  v50 = (char *)(v43 + 64);
  while (1)
  {
    v51 = *((_QWORD *)v50 - 2);
    v52 = *((_QWORD *)v50 - 1);
    v53 = *v50;
    v54 = *((_QWORD *)v50 - 4) == v49 && *((_QWORD *)v50 - 3) == v47;
    if (v54 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v50 += 40;
    if (!--v48)
      goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v51, v52, v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v51, v52, v53);
  v57 = v56;
  v59 = v58;
  sub_1D253FBE8(v51, v52, v53);
  v55 = v62;
  if (!v59)
    goto LABEL_47;
  if (!v62)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v57 == v61 && v59 == v62)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  v60 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  return v60 & 1;
}

uint64_t sub_1D2658664(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2534120((uint64_t)a1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
  v5 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v4, 0, 1, v5);
  sub_1D2658728((uint64_t)v4, a1);
  return sub_1D253703C((uint64_t)v4, &qword_1ED9627C0);
}

uint64_t sub_1D2658728(uint64_t a1, char *a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t Strong;
  uint64_t v36;
  _QWORD *v37;
  os_unfair_lock_s *v38;
  id v39;
  unint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(uint64_t, char *, uint64_t);
  char *v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, int *);
  int *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(unint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(uint64_t, uint64_t, uint64_t);
  int v67;
  void (*v68)(char *, uint64_t);
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  char v85;
  char v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  NSObject *v91;
  os_log_type_t v92;
  uint8_t *v93;
  void *v94;
  uint64_t v95;
  unint64_t v96;
  _QWORD *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  char v105;
  char v106;
  id v107;
  unint64_t v108;
  unint64_t v109;
  char *v110;
  unint64_t v111;
  unint64_t v112;
  char *v113;
  char *v114;
  unint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  unint64_t v123;
  char v124;
  char v125;
  id v126;
  unint64_t v127;
  unint64_t v128;
  unint64_t v129;
  unint64_t v130;
  char *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  unint64_t v138;
  char v139;
  char v140;
  int *v141;
  char *v142;
  uint64_t *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  unint64_t v148;
  char v149;
  char v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  _UNKNOWN **v155;
  id v156;
  _QWORD *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  char v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  _UNKNOWN **v168;
  id v169;
  uint64_t v170;
  _QWORD *v171;
  id v172;
  unint64_t v173;
  unint64_t v174;
  unint64_t v175;
  unint64_t v176;
  _QWORD *v177;
  unint64_t v178;
  uint64_t v179;
  void *v180;
  void *v181;
  id v182;
  id v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  unint64_t v193;
  char v194;
  char v195;
  uint64_t v196;
  unint64_t v197;
  unint64_t v198;
  char v199;
  uint64_t v200;
  unint64_t v201;
  unint64_t v202;
  char v203;
  uint64_t v204;
  unint64_t v205;
  unint64_t v206;
  char v207;
  id v208;
  unint64_t v209;
  unint64_t v210;
  unint64_t v211;
  unint64_t v212;
  _QWORD *v213;
  unint64_t v214;
  void *v215;
  void *v216;
  id v217;
  uint64_t v218;
  unint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  unint64_t v227;
  char v228;
  char v229;
  uint64_t v230;
  unint64_t v231;
  unint64_t v232;
  char v233;
  uint64_t v234;
  unint64_t v235;
  unint64_t v236;
  char v237;
  uint64_t v238;
  unint64_t v239;
  unint64_t v240;
  char v241;
  id v242;
  unint64_t v243;
  unint64_t v244;
  unint64_t v245;
  unint64_t v246;
  _QWORD *v247;
  unint64_t v248;
  void *v249;
  void *v250;
  id v251;
  uint64_t v252;
  unint64_t v253;
  unint64_t v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  unint64_t v261;
  char v262;
  char v263;
  uint64_t v264;
  unint64_t v265;
  unint64_t v266;
  char v267;
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  char v271;
  uint64_t v272;
  unint64_t v273;
  unint64_t v274;
  char v275;
  id v276;
  unint64_t v277;
  unint64_t v278;
  unint64_t v279;
  unint64_t v280;
  _QWORD *v281;
  unint64_t *v282;
  unint64_t v283;
  unint64_t v284;
  uint64_t result;
  void *v286;
  uint64_t v287;
  uint64_t v288;
  void (*v289)(char *, uint64_t);
  uint64_t (*v290)(char *, uint64_t, int *);
  uint64_t v291;
  char *v292;
  uint64_t v293;
  void (*v294)(uint64_t, char *, uint64_t);
  uint64_t v295;
  uint64_t v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  unint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  int64_t v306;
  uint64_t v307;
  char *v308;
  uint64_t v309;
  uint64_t v310;
  char *v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  int *v316;
  id v317;
  unint64_t v318;
  unint64_t v319;
  __int128 v320;
  uint64_t v321;
  _UNKNOWN **v322;
  id v323;
  unint64_t v324;
  unint64_t v325;
  uint64_t v326;
  _UNKNOWN **v327;
  uint64_t v328;

  v4 = v3;
  v313 = a2;
  v315 = a1;
  v328 = *MEMORY[0x1E0C80C00];
  v299 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v298 = *(_QWORD *)(v299 - 8);
  MEMORY[0x1E0C80A78](v299);
  v297 = (char *)&v290 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED9633B8);
  MEMORY[0x1E0C80A78](v6);
  v310 = (uint64_t)&v290 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633B0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v293 = (uint64_t)&v290 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v302 = (uint64_t)&v290 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (unint64_t)&v290 - v13;
  v316 = (int *)type metadata accessor for ExtensionMetadata();
  v15 = *((_QWORD *)v316 - 1);
  v16 = MEMORY[0x1E0C80A78](v316);
  v291 = (uint64_t)&v290 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v296 = (uint64_t)&v290 - v19;
  MEMORY[0x1E0C80A78](v18);
  v312 = (char *)&v290 - v20;
  v314 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v309 = *(_QWORD *)(v314 - 8);
  v21 = MEMORY[0x1E0C80A78](v314);
  v292 = (char *)&v290 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v311 = (char *)&v290 - v24;
  MEMORY[0x1E0C80A78](v23);
  v308 = (char *)&v290 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  v27 = MEMORY[0x1E0C80A78](v26);
  v300 = (uint64_t)&v290 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v27);
  v307 = (uint64_t)&v290 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v305 = (uint64_t)&v290 - v32;
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v290 - v33;
  v306 = v2;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_71;
  v36 = Strong;
  v37 = *(_QWORD **)(Strong + 24);
  v38 = (os_unfair_lock_s *)v37[2];
  swift_retain();
  os_unfair_lock_lock(v38);
  v39 = *(id *)(v36 + 64);
  os_unfair_lock_unlock((os_unfair_lock_t)v37[2]);
  swift_release();
  swift_release();
  if (!v39)
  {
    __break(1u);
    goto LABEL_62;
  }
  v295 = v6;
  v304 = v4;
  v301 = v14;
  sub_1D2537078(v315, (uint64_t)v34, &qword_1ED9627C0);
  v41 = v309;
  v42 = v34;
  v43 = *(void (**)(uint64_t, char *, uint64_t))(v309 + 16);
  v44 = v308;
  v45 = v314;
  v43((uint64_t)v308, v313, v314);
  v46 = *(uint64_t (**)(char *, uint64_t, int *))(v15 + 48);
  v47 = v316;
  v48 = v46(v42, 1, v316);
  v303 = (uint64_t)v42;
  v49 = (uint64_t)v42;
  v50 = v307;
  sub_1D2537078(v49, v307, &qword_1ED9627C0);
  v51 = v311;
  v294 = v43;
  v43((uint64_t)v311, v44, v45);
  if (v48 == 1)
  {
    v52 = *(void (**)(char *, uint64_t))(v41 + 8);
    v52(v51, v45);
    sub_1D253703C(v50, &qword_1ED9627C0);
    v52(v44, v45);
    v6 = v315;
    v53 = (uint64_t)v312;
    v4 = v304;
    v54 = v303;
    goto LABEL_13;
  }
  v55 = v50;
  v56 = v300;
  sub_1D2537078(v55, v300, &qword_1ED9627C0);
  v290 = v46;
  if (v46((char *)v56, 1, v47) == 1)
  {
    sub_1D253703C(v56, &qword_1ED9627C0);
    v57 = v309;
    v58 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v309 + 56);
    v59 = v301;
    v60 = v314;
    v58(v301, 1, 1, v314);
    v61 = v310;
    v62 = v302;
    v4 = v304;
    v294(v302, v311, v60);
  }
  else
  {
    v59 = v301;
    v60 = v314;
    v63 = v294;
    v294(v301, (char *)v56, v314);
    sub_1D25340E4(v56, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    v57 = v309;
    v58 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v309 + 56);
    v58(v59, 0, 1, v60);
    v61 = v310;
    v62 = v302;
    v4 = v304;
    v63(v302, v311, v60);
  }
  v58(v62, 0, 1, v60);
  v64 = v61 + *(int *)(v295 + 48);
  sub_1D2537078(v59, v310, &qword_1ED9633B0);
  v65 = v310;
  sub_1D2537078(v62, v64, &qword_1ED9633B0);
  v66 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  v67 = v66(v65, 1, v60);
  v6 = v315;
  if (v67 == 1)
  {
    sub_1D253703C(v62, &qword_1ED9633B0);
    sub_1D253703C(v59, &qword_1ED9633B0);
    v68 = *(void (**)(char *, uint64_t))(v57 + 8);
    v68(v311, v60);
    sub_1D253703C(v307, &qword_1ED9627C0);
    v68(v308, v60);
    if (v66(v64, 1, v60) == 1)
    {
      sub_1D253703C(v310, &qword_1ED9633B0);
      v54 = v303;
      v46 = v290;
      v53 = (uint64_t)v312;
      goto LABEL_13;
    }
  }
  else
  {
    v69 = v293;
    sub_1D2537078(v65, v293, &qword_1ED9633B0);
    v70 = v66(v64, 1, v60);
    v54 = v303;
    if (v70 != 1)
    {
      v71 = v65;
      v72 = v309;
      v73 = v292;
      (*(void (**)(char *, uint64_t, uint64_t))(v309 + 32))(v292, v64, v60);
      sub_1D2536488(&qword_1ED963380, &qword_1ED9633A0, MEMORY[0x1E0D0FB58]);
      v74 = sub_1D26CD908();
      v75 = *(void (**)(char *, uint64_t))(v72 + 8);
      v75(v73, v60);
      sub_1D253703C(v302, &qword_1ED9633B0);
      sub_1D253703C(v301, &qword_1ED9633B0);
      v75(v311, v60);
      sub_1D253703C(v307, &qword_1ED9627C0);
      v75(v308, v60);
      v75((char *)v69, v60);
      sub_1D253703C(v71, &qword_1ED9633B0);
      v46 = v290;
      v53 = (uint64_t)v312;
      if ((v74 & 1) != 0)
      {
LABEL_13:
        sub_1D253703C(v54, &qword_1ED9627C0);
        v76 = v305;
        sub_1D2537078(v6, v305, &qword_1ED9627C0);
        if (v46((char *)v76, 1, v316) == 1)
        {
          sub_1D253703C(v76, &qword_1ED9627C0);
          v323 = 0;
          v324 = 0xE000000000000000;
          v77 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          v78 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
          MEMORY[0x1D8239188](23);
          v325 = v78;
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          v79 = sub_1D26CBD3C();
          v81 = v80;
          swift_bridgeObjectRetain();
          v82 = sub_1D253FC20(v79, v81);
          v84 = v83;
          v86 = v85;
          sub_1D2641480(v82, v83, v85);
          sub_1D253FBE8(v82, v84, v86);
          swift_bridgeObjectRelease();
          v39 = v323;
          v34 = (char *)v324;
          v36 = v325;
          v37 = sub_1D256230C(0, 1, 1, v77);
          v14 = v37[2];
          v40 = v37[3];
          v2 = v14 + 1;
          if (v14 < v40 >> 1)
          {
LABEL_15:
            v37[2] = v2;
            v87 = &v37[3 * v14];
            v87[4] = v36;
            v87[5] = v39;
            v87[6] = v34;
            v88 = v306;
            goto LABEL_53;
          }
LABEL_62:
          v37 = sub_1D256230C((_QWORD *)(v40 > 1), v2, 1, v37);
          goto LABEL_15;
        }
        sub_1D2539ADC(v76, v53, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
        if (qword_1ED962330 != -1)
          swift_once();
        v89 = sub_1D26CC09C();
        __swift_project_value_buffer(v89, (uint64_t)qword_1ED977D20);
        v90 = v296;
        sub_1D2534120(v53, v296, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
        v91 = sub_1D26CC084();
        v92 = sub_1D26CDD04();
        if (os_log_type_enabled(v91, v92))
        {
          v93 = (uint8_t *)swift_slowAlloc();
          v94 = (void *)swift_slowAlloc();
          v323 = v94;
          *(_DWORD *)v93 = 136446210;
          sub_1D2534120(v90, v291, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
          v95 = sub_1D26CD98C();
          *(_QWORD *)&v320 = sub_1D2537880(v95, v96, (uint64_t *)&v323);
          sub_1D26CDF50();
          swift_bridgeObjectRelease();
          sub_1D25340E4(v90, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
          _os_log_impl(&dword_1D2531000, v91, v92, "inserting metadata %{public}s into store.", v93, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v94, -1, -1);
          MEMORY[0x1D823A5E0](v93, -1, -1);
        }
        else
        {
          sub_1D25340E4(v90, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
        }

        v323 = 0;
        v324 = 0xE000000000000000;
        v97 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        v98 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
        MEMORY[0x1D8239188](23);
        v325 = v98;
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        v99 = sub_1D26CBD3C();
        v101 = v100;
        swift_bridgeObjectRetain();
        v102 = sub_1D253FC20(v99, v101);
        v104 = v103;
        v106 = v105;
        sub_1D2641480(v102, v103, v105);
        sub_1D253FBE8(v102, v104, v106);
        swift_bridgeObjectRelease();
        v107 = v323;
        v108 = v324;
        v109 = v325;
        v110 = (char *)sub_1D256230C(0, 1, 1, v97);
        v112 = *((_QWORD *)v110 + 2);
        v111 = *((_QWORD *)v110 + 3);
        if (v112 >= v111 >> 1)
          v110 = (char *)sub_1D256230C((_QWORD *)(v111 > 1), v112 + 1, 1, v110);
        v113 = v312;
        *((_QWORD *)v110 + 2) = v112 + 1;
        v114 = &v110[24 * v112];
        *((_QWORD *)v114 + 4) = v109;
        *((_QWORD *)v114 + 5) = v107;
        *((_QWORD *)v114 + 6) = v108;
        v323 = 0;
        v324 = 0xE000000000000000;
        v115 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
        MEMORY[0x1D8239188](23);
        v325 = v115;
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        v116 = v297;
        sub_1D26CBD54();
        v117 = v299;
        v118 = sub_1D26CBC88();
        v120 = v119;
        (*(void (**)(char *, uint64_t))(v298 + 8))(v116, v117);
        swift_bridgeObjectRetain();
        v121 = sub_1D253FC20(v118, v120);
        v123 = v122;
        v125 = v124;
        sub_1D2641480(v121, v122, v124);
        sub_1D253FBE8(v121, v123, v125);
        swift_bridgeObjectRelease();
        v126 = v323;
        v127 = v324;
        v128 = v325;
        v130 = *((_QWORD *)v110 + 2);
        v129 = *((_QWORD *)v110 + 3);
        if (v130 >= v129 >> 1)
          v110 = (char *)sub_1D256230C((_QWORD *)(v129 > 1), v130 + 1, 1, v110);
        *((_QWORD *)v110 + 2) = v130 + 1;
        v313 = v110;
        v131 = &v110[24 * v130];
        *((_QWORD *)v131 + 4) = v128;
        *((_QWORD *)v131 + 5) = v126;
        *((_QWORD *)v131 + 6) = v127;
        v323 = 0;
        v324 = 0xE000000000000000;
        v132 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
        MEMORY[0x1D8239188](132);
        v317 = v323;
        v318 = v324;
        v319 = v132;
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        v133 = sub_1D26CBD3C();
        v135 = v134;
        swift_bridgeObjectRetain();
        v136 = sub_1D253FC20(v133, v135);
        v138 = v137;
        v140 = v139;
        sub_1D2641480(v136, v137, v139);
        sub_1D253FBE8(v136, v138, v140);
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        v141 = v316;
        v142 = v113;
        v143 = (uint64_t *)&v113[v316[5]];
        v144 = *v143;
        v145 = v143[1];
        swift_bridgeObjectRetain_n();
        v146 = sub_1D253FC20(v144, v145);
        v148 = v147;
        v150 = v149;
        sub_1D2641480(v146, v147, v149);
        sub_1D253FBE8(v146, v148, v150);
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        v151 = &v142[v141[8]];
        v152 = *((_QWORD *)v151 + 1);
        if (v152)
        {
          v153 = *(_QWORD *)v151;
          v321 = MEMORY[0x1E0DEA968];
          v322 = &off_1E93D5368;
          *(_QWORD *)&v320 = v153;
          *((_QWORD *)&v320 + 1) = v152;
          sub_1D2538F38(&v320, (uint64_t)&v323);
          v154 = v326;
          v155 = v327;
        }
        else
        {
          v156 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
          v154 = sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
          v155 = &off_1E93D56A0;
          v326 = v154;
          v327 = &off_1E93D56A0;
          v323 = v156;
        }
        v157 = __swift_project_boxed_opaque_existential_0(&v323, v154);
        swift_bridgeObjectRetain();
        sub_1D2641654((uint64_t)v157, (uint64_t)&v317, v154, (uint64_t)v155);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v323);
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        v158 = *v143;
        v159 = v143[1];
        swift_bridgeObjectRetain_n();
        v160 = sub_1D253FC20(v158, v159);
        v162 = v161;
        v164 = v163;
        sub_1D2641480(v160, v161, v163);
        sub_1D253FBE8(v160, v162, v164);
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        sub_1D26CE0B8();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        v165 = *((_QWORD *)v151 + 1);
        v37 = v313;
        if (v165)
        {
          v166 = *(_QWORD *)v151;
          v321 = MEMORY[0x1E0DEA968];
          v322 = &off_1E93D5368;
          *(_QWORD *)&v320 = v166;
          *((_QWORD *)&v320 + 1) = v165;
          sub_1D2538F38(&v320, (uint64_t)&v323);
          v167 = v326;
          v168 = v327;
        }
        else
        {
          v169 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
          v167 = sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
          v168 = &off_1E93D56A0;
          v326 = v167;
          v327 = &off_1E93D56A0;
          v323 = v169;
        }
        v6 = v315;
        v170 = (uint64_t)v312;
        v171 = __swift_project_boxed_opaque_existential_0(&v323, v167);
        swift_bridgeObjectRetain();
        sub_1D2641654((uint64_t)v171, (uint64_t)&v317, v167, (uint64_t)v168);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v323);
        v172 = v317;
        v173 = v318;
        v174 = v319;
        v176 = v37[2];
        v175 = v37[3];
        if (v176 >= v175 >> 1)
          v37 = sub_1D256230C((_QWORD *)(v175 > 1), v176 + 1, 1, v37);
        v37[2] = v176 + 1;
        v177 = &v37[3 * v176];
        v177[4] = v174;
        v177[5] = v172;
        v177[6] = v173;
        v178 = *(_QWORD *)(v170 + v316[6]);
        if (v178 >> 62)
        {
          swift_bridgeObjectRetain();
          v179 = sub_1D26CE1F0();
          swift_bridgeObjectRelease();
        }
        else
        {
          v179 = *(_QWORD *)((v178 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        v88 = v306;
        if (v179)
        {
          v180 = (void *)objc_opt_self();
          sub_1D2539514(0, (unint64_t *)&unk_1ED96E0F8);
          swift_bridgeObjectRetain();
          v181 = (void *)sub_1D26CDADC();
          swift_bridgeObjectRelease();
          v323 = 0;
          v182 = objc_msgSend(v180, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v181, 1, &v323);

          v183 = v323;
          if (!v182)
            goto LABEL_60;
          v184 = sub_1D26CB8E0();
          v186 = v185;

          v323 = 0;
          v324 = 0xE000000000000000;
          v187 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
          MEMORY[0x1D8239188](73);
          v325 = v187;
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          v188 = sub_1D26CBD3C();
          v190 = v189;
          swift_bridgeObjectRetain();
          v191 = sub_1D253FC20(v188, v190);
          v193 = v192;
          v195 = v194;
          sub_1D2641480(v191, v192, v194);
          sub_1D253FBE8(v191, v193, v195);
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D253FE08(v184, v186);
          sub_1D253FE08(v184, v186);
          v196 = sub_1D253FC0C(v184, v186);
          v198 = v197;
          LOBYTE(v193) = v199;
          sub_1D2641480(v196, v197, v199);
          sub_1D253FBE8(v196, v198, v193);
          sub_1D253EE04(v184, v186);
          sub_1D26CDA04();
          v200 = sub_1D25410E8(0.0);
          v202 = v201;
          LOBYTE(v193) = v203;
          sub_1D2641480(v200, v201, v203);
          sub_1D253FBE8(v200, v202, v193);
          sub_1D26CDA04();
          v204 = sub_1D253FA04(0);
          v206 = v205;
          LOBYTE(v193) = v207;
          sub_1D2641480(v204, v205, v207);
          sub_1D253FBE8(v204, v206, v193);
          sub_1D26CDA04();
          v208 = v323;
          v209 = v324;
          v210 = v325;
          v212 = v37[2];
          v211 = v37[3];
          if (v212 >= v211 >> 1)
            v37 = sub_1D256230C((_QWORD *)(v211 > 1), v212 + 1, 1, v37);
          v37[2] = v212 + 1;
          v213 = &v37[3 * v212];
          v213[4] = v210;
          v213[5] = v208;
          v213[6] = v209;
          sub_1D253EE04(v184, v186);
          v88 = v306;
          v6 = v315;
          v170 = (uint64_t)v312;
        }
        v214 = *(_QWORD *)(v170 + v316[7]);
        if (v214 >> 62)
        {
          swift_bridgeObjectRetain();
          v287 = sub_1D26CE1F0();
          swift_bridgeObjectRelease();
          if (v287)
          {
LABEL_42:
            v215 = (void *)objc_opt_self();
            sub_1D2539514(0, &qword_1ED963230);
            swift_bridgeObjectRetain();
            v216 = (void *)sub_1D26CDADC();
            swift_bridgeObjectRelease();
            v323 = 0;
            v217 = objc_msgSend(v215, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v216, 1, &v323);

            v183 = v323;
            if (v217)
            {
              v218 = sub_1D26CB8E0();
              v220 = v219;

              v323 = 0;
              v324 = 0xE000000000000000;
              v221 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
              MEMORY[0x1D8239188](73);
              v325 = v221;
              sub_1D26CDA04();
              sub_1D26CE0B8();
              sub_1D26CDA04();
              swift_bridgeObjectRelease();
              sub_1D26CDA04();
              sub_1D26CE0B8();
              sub_1D26CDA04();
              swift_bridgeObjectRelease();
              sub_1D26CDA04();
              sub_1D26CE0B8();
              sub_1D26CDA04();
              swift_bridgeObjectRelease();
              sub_1D26CDA04();
              sub_1D26CE0B8();
              sub_1D26CDA04();
              swift_bridgeObjectRelease();
              sub_1D26CDA04();
              sub_1D26CE0B8();
              sub_1D26CDA04();
              swift_bridgeObjectRelease();
              sub_1D26CDA04();
              v222 = sub_1D26CBD3C();
              v224 = v223;
              swift_bridgeObjectRetain();
              v225 = sub_1D253FC20(v222, v224);
              v227 = v226;
              v229 = v228;
              sub_1D2641480(v225, v226, v228);
              sub_1D253FBE8(v225, v227, v229);
              swift_bridgeObjectRelease();
              sub_1D26CDA04();
              sub_1D253FE08(v218, v220);
              sub_1D253FE08(v218, v220);
              v230 = sub_1D253FC0C(v218, v220);
              v232 = v231;
              LOBYTE(v227) = v233;
              sub_1D2641480(v230, v231, v233);
              sub_1D253FBE8(v230, v232, v227);
              sub_1D253EE04(v218, v220);
              sub_1D26CDA04();
              v234 = sub_1D25410E8(0.0);
              v236 = v235;
              LOBYTE(v227) = v237;
              sub_1D2641480(v234, v235, v237);
              sub_1D253FBE8(v234, v236, v227);
              sub_1D26CDA04();
              v238 = sub_1D253FA04(2);
              v240 = v239;
              LOBYTE(v227) = v241;
              sub_1D2641480(v238, v239, v241);
              sub_1D253FBE8(v238, v240, v227);
              sub_1D26CDA04();
              v242 = v323;
              v243 = v324;
              v244 = v325;
              v246 = v37[2];
              v245 = v37[3];
              if (v246 >= v245 >> 1)
                v37 = sub_1D256230C((_QWORD *)(v245 > 1), v246 + 1, 1, v37);
              v37[2] = v246 + 1;
              v247 = &v37[3 * v246];
              v247[4] = v244;
              v247[5] = v242;
              v247[6] = v243;
              sub_1D253EE04(v218, v220);
              v88 = v306;
              v6 = v315;
              v170 = (uint64_t)v312;
              goto LABEL_46;
            }
LABEL_60:
            v286 = v183;
            swift_bridgeObjectRelease();
            sub_1D26CB76C();

            swift_willThrow();
            return sub_1D25340E4(v170, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
          }
        }
        else if (*(_QWORD *)((v214 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_42;
        }
LABEL_46:
        v248 = *(_QWORD *)(v170 + v316[9]);
        if (v248 >> 62)
        {
          swift_bridgeObjectRetain();
          v288 = sub_1D26CE1F0();
          swift_bridgeObjectRelease();
          if (!v288)
            goto LABEL_52;
        }
        else if (!*(_QWORD *)((v248 & 0xFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_52;
        }
        v249 = (void *)objc_opt_self();
        sub_1D2539514(0, &qword_1ED9638E0);
        swift_bridgeObjectRetain();
        v250 = (void *)sub_1D26CDADC();
        swift_bridgeObjectRelease();
        v323 = 0;
        v251 = objc_msgSend(v249, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v250, 1, &v323);

        v183 = v323;
        if (v251)
        {
          v252 = sub_1D26CB8E0();
          v254 = v253;

          v323 = 0;
          v324 = 0xE000000000000000;
          v255 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
          MEMORY[0x1D8239188](73);
          v325 = v255;
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D26CE0B8();
          sub_1D26CDA04();
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          v256 = sub_1D26CBD3C();
          v258 = v257;
          swift_bridgeObjectRetain();
          v259 = sub_1D253FC20(v256, v258);
          v261 = v260;
          v263 = v262;
          sub_1D2641480(v259, v260, v262);
          sub_1D253FBE8(v259, v261, v263);
          swift_bridgeObjectRelease();
          sub_1D26CDA04();
          sub_1D253FE08(v252, v254);
          sub_1D253FE08(v252, v254);
          v264 = sub_1D253FC0C(v252, v254);
          v266 = v265;
          LOBYTE(v261) = v267;
          sub_1D2641480(v264, v265, v267);
          sub_1D253FBE8(v264, v266, v261);
          sub_1D253EE04(v252, v254);
          sub_1D26CDA04();
          v268 = sub_1D25410E8(0.0);
          v270 = v269;
          LOBYTE(v261) = v271;
          sub_1D2641480(v268, v269, v271);
          sub_1D253FBE8(v268, v270, v261);
          sub_1D26CDA04();
          v272 = sub_1D253FA04(1);
          v274 = v273;
          LOBYTE(v261) = v275;
          sub_1D2641480(v272, v273, v275);
          sub_1D253FBE8(v272, v274, v261);
          sub_1D26CDA04();
          v276 = v323;
          v277 = v324;
          v278 = v325;
          v280 = v37[2];
          v279 = v37[3];
          if (v280 >= v279 >> 1)
            v37 = sub_1D256230C((_QWORD *)(v279 > 1), v280 + 1, 1, v37);
          v37[2] = v280 + 1;
          v281 = &v37[3 * v280];
          v281[4] = v278;
          v281[5] = v276;
          v281[6] = v277;
          sub_1D253EE04(v252, v254);
          v88 = v306;
          v6 = v315;
          v170 = (uint64_t)v312;
LABEL_52:
          sub_1D25340E4(v170, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
          v2 = v37[2];
          if (!v2)
            return swift_bridgeObjectRelease();
LABEL_53:
          swift_bridgeObjectRetain();
          v282 = v37 + 6;
          while (1)
          {
            v283 = *(v282 - 1);
            v284 = *v282;
            v323 = (id)*(v282 - 2);
            v324 = v283;
            v325 = v284;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1D265A864((uint64_t *)&v323, v6, v88);
            if (v4)
              break;
            v282 += 3;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (!--v2)
            {
              swift_bridgeObjectRelease();
              return swift_bridgeObjectRelease();
            }
          }
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        goto LABEL_60;
      }
      goto LABEL_70;
    }
    sub_1D253703C(v302, &qword_1ED9633B0);
    sub_1D253703C(v301, &qword_1ED9633B0);
    v289 = *(void (**)(char *, uint64_t))(v309 + 8);
    v289(v311, v60);
    sub_1D253703C(v307, &qword_1ED9627C0);
    v289(v308, v60);
    v289((char *)v69, v60);
  }
  sub_1D253703C(v310, (uint64_t *)&unk_1ED9633B8);
LABEL_70:
  __break(1u);
LABEL_71:
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t sub_1D265A864(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  _BOOL4 v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  os_log_t v33;
  NSObject *v34;
  NSObject *v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  NSObject *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  os_log_t v63;
  uint64_t v64;
  uint64_t v65;

  v62 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)&v51 - v10;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  v11 = MEMORY[0x1E0C80A78](v57);
  v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v54 = (uint64_t)&v51 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v51 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v51 - v19;
  v21 = *a1;
  v60 = (_QWORD *)a1[1];
  v61 = v21;
  v59 = a1[2];
  if (qword_1ED962330 != -1)
    swift_once();
  v22 = sub_1D26CC09C();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED977D20);
  sub_1D2537078(a2, (uint64_t)v20, &qword_1ED9627C0);
  v58 = v23;
  v24 = sub_1D26CC084();
  v25 = sub_1D26CDCE0();
  v26 = os_log_type_enabled(v24, v25);
  v56 = v6;
  if (v26)
  {
    v52 = v13;
    v27 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v53 = v5;
    v29 = v28;
    v65 = v28;
    v51 = a2;
    *(_DWORD *)v27 = 136446210;
    sub_1D2537078((uint64_t)v20, (uint64_t)v18, &qword_1ED9627C0);
    v30 = sub_1D26CD98C();
    v64 = sub_1D2537880(v30, v31, &v65);
    a2 = v51;
    v13 = v52;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D253703C((uint64_t)v20, &qword_1ED9627C0);
    _os_log_impl(&dword_1D2531000, v24, v25, "Executing metadata update for %{public}s", v27, 0xCu);
    swift_arrayDestroy();
    v32 = v29;
    v5 = v53;
    MEMORY[0x1D823A5E0](v32, -1, -1);
    MEMORY[0x1D823A5E0](v27, -1, -1);
  }
  else
  {
    sub_1D253703C((uint64_t)v20, &qword_1ED9627C0);
  }

  if (swift_weakLoadStrong())
  {
    v33 = v63;
    sub_1D2557230(v61);
    if (v33)
    {
      swift_release();
      sub_1D2537078(a2, (uint64_t)v13, &qword_1ED9627C0);
      v34 = v33;
      v35 = v33;
      v36 = sub_1D26CC084();
      v37 = sub_1D26CDD04();
      if (os_log_type_enabled(v36, (os_log_type_t)v37))
      {
        LODWORD(v61) = v37;
        v63 = v36;
        v38 = swift_slowAlloc();
        v60 = (_QWORD *)swift_slowAlloc();
        v62 = swift_slowAlloc();
        v65 = v62;
        *(_DWORD *)v38 = 136446466;
        v39 = v54;
        sub_1D2537078((uint64_t)v13, v54, &qword_1ED9627C0);
        v40 = type metadata accessor for ExtensionMetadata();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 48))(v39, 1, v40) == 1)
        {
          sub_1D253703C(v39, &qword_1ED9627C0);
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
          sub_1D2536488(&qword_1ED963308, &qword_1ED96FE70, MEMORY[0x1E0D0F968]);
          sub_1D2536488(&qword_1ED963330, &qword_1ED96FE70, MEMORY[0x1E0D0F990]);
          sub_1D2536488(&qword_1ED963310, &qword_1ED96FE70, MEMORY[0x1E0D0F970]);
          sub_1D2536488(&qword_1ED963318, &qword_1ED96FE70, MEMORY[0x1E0D0F978]);
          v41 = v55;
          sub_1D26CBD18();
          v42 = v56;
        }
        else
        {
          v42 = v56;
          (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v9, v39, v5);
          sub_1D25340E4(v39, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
          v41 = v55;
          (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v55, v9, v5);
        }
        sub_1D2536488((unint64_t *)&unk_1ED963390, &qword_1ED9633A0, MEMORY[0x1E0D0FB70]);
        v44 = sub_1D26CE370();
        v46 = v45;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v5);
        v64 = sub_1D2537880(v44, v46, &v65);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        sub_1D253703C((uint64_t)v13, &qword_1ED9627C0);
        *(_WORD *)(v38 + 12) = 2114;
        v47 = v33;
        v48 = _swift_stdlib_bridgeErrorToNSError();
        v64 = v48;
        sub_1D26CDF50();
        v49 = v60;
        *v60 = v48;

        v36 = v63;
        _os_log_impl(&dword_1D2531000, v63, (os_log_type_t)v61, "Unexpected error performing metadata update for %{public}s: %{public}@", (uint8_t *)v38, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v49, -1, -1);
        v50 = v62;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v50, -1, -1);
        MEMORY[0x1D823A5E0](v38, -1, -1);
      }
      else
      {
        sub_1D253703C((uint64_t)v13, &qword_1ED9627C0);

      }
      return swift_willThrow();
    }
    else
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D265AF88()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  if (swift_weakLoadStrong())
  {
    v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    MEMORY[0x1D8239188](12);
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D2557230(v1);
    swift_release();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (!v0)
      return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

unint64_t sub_1D265B0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  BOOL v37;
  char v38;
  char v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v52[2];
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v54 = (uint64_t)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v52 - v4;
  v6 = sub_1D26CB9DC();
  v59 = *(_QWORD *)(v6 - 8);
  v60 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v53 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v58 = (char *)v52 - v9;
  v65 = 0;
  v66 = 0xE000000000000000;
  v10 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](24);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v11 = v66;
  if (!swift_weakLoadStrong())
    goto LABEL_39;
  v12 = sub_1D2557230(v10);
  v52[1] = v0;
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v52[0] = v12;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = sub_1D253E0F4(MEMORY[0x1E0DEE9D8]);
    v65 = v11;
    v57 = *(_QWORD *)(v52[0] + 16);
    if (v57)
    {
      v13 = *(_QWORD *)(v52[0] + 32);
      v55 = v52[0] + 32;
      v56 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14 = sub_1D26CE0B8();
      v63 = *(_QWORD *)(v13 + 16);
      v64 = v15;
      if (!v63)
        goto LABEL_38;
      v16 = v14;
      v61 = 1;
      while (1)
      {
        v17 = 0;
        v62 = v13;
        v18 = (char *)(v13 + 64);
        v19 = (char *)(v13 + 64);
        while (1)
        {
          v20 = v17 + 1;
          if (__OFADD__(v17, 1))
          {
            __break(1u);
LABEL_37:
            swift_bridgeObjectRelease();
            goto LABEL_38;
          }
          v21 = *((_QWORD *)v19 - 2);
          v22 = *((_QWORD *)v19 - 1);
          v23 = *v19;
          v24 = *((_QWORD *)v19 - 4) == v16 && *((_QWORD *)v19 - 3) == v64;
          if (v24 || (sub_1D26CE3D0() & 1) != 0)
            break;
          v19 += 40;
          ++v17;
          if (v20 == v63)
            goto LABEL_38;
        }
        swift_bridgeObjectRetain();
        sub_1D2541E98(v21, v22, v23);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D26507E0(v21, v22, v23);
        v26 = v25;
        v28 = v27;
        sub_1D253FBE8(v21, v22, v23);
        if (!v28)
          goto LABEL_39;
        v29 = sub_1D26CE0B8();
        v31 = v30;
        v32 = *(_QWORD *)(v62 + 16);
        if (!v32)
          goto LABEL_37;
        v33 = v29;
        v64 = v26;
        while (1)
        {
          v34 = *((_QWORD *)v18 - 2);
          v35 = *((_QWORD *)v18 - 1);
          v36 = *v18;
          v37 = *((_QWORD *)v18 - 4) == v33 && *((_QWORD *)v18 - 3) == v31;
          if (v37 || (sub_1D26CE3D0() & 1) != 0)
            break;
          v18 += 40;
          if (!--v32)
            goto LABEL_37;
        }
        swift_bridgeObjectRetain();
        sub_1D2541E98(v34, v35, v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D2650924(v34, v35, v36);
        v39 = v38;
        sub_1D253FBE8(v34, v35, v36);
        if ((v39 & 1) != 0)
        {
          while (1)
          {
LABEL_38:
            swift_bridgeObjectRelease();
LABEL_39:
            sub_1D26CE1D8();
            __break(1u);
          }
        }
        v40 = v58;
        sub_1D26CB988();
        v42 = v59;
        v41 = v60;
        v43 = (uint64_t)v56;
        (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v56, v40, v60);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v43, 1, v41) == 1)
        {
          sub_1D253703C(v43, &qword_1ED96B1E0);
          v44 = v54;
          sub_1D266AE44(v64, v28, v54);
          swift_bridgeObjectRelease();
          sub_1D253703C(v44, &qword_1ED96B1E0);
        }
        else
        {
          v45 = (uint64_t)v53;
          (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v53, v43, v41);
          v46 = v65;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v67 = v46;
          sub_1D266E8D4(v45, v64, v28, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED962128, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D26B5D64);
          v65 = v67;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        (*(void (**)(char *, uint64_t))(v42 + 8))(v40, v41);
        swift_bridgeObjectRelease();
        if (v61 == v57)
          break;
        v48 = v61 + 1;
        v13 = *(_QWORD *)(v55 + 8 * v61);
        swift_bridgeObjectRetain();
        v16 = sub_1D26CE0B8();
        v49 = *(_QWORD *)(v13 + 16);
        v61 = v48;
        v63 = v49;
        v64 = v50;
        if (!v49)
          goto LABEL_38;
      }
      swift_bridgeObjectRelease();
      v11 = v65;
    }
    swift_bridgeObjectRelease();
  }
  return v11;
}

uint64_t sub_1D265B774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t Strong;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t result;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  char v47;
  double v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v56 = a3;
  v57 = a1;
  v58 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_14;
  v13 = Strong;
  v14 = *(_QWORD *)(Strong + 24);
  v15 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v15);
  v16 = *(_QWORD *)(v13 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  swift_release();
  if (!v16)
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_1D2537078(a4, (uint64_t)v7, &qword_1ED96B1E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1D253703C((uint64_t)v7, &qword_1ED96B1E0);
    if (swift_weakLoadStrong())
    {
      v59 = 0;
      v60 = 0xE000000000000000;
      v17 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
      MEMORY[0x1D8239188](43);
      v61 = v17;
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
      v18 = sub_1D26CBD3C();
      v20 = v19;
      swift_bridgeObjectRetain();
      v21 = sub_1D253FC20(v18, v20);
      v23 = v22;
      v25 = v24;
      sub_1D2641480(v21, v22, v24);
      sub_1D253FBE8(v21, v23, v25);
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      v26 = v56;
      swift_bridgeObjectRetain_n();
      v27 = sub_1D253FC20(v58, v26);
      v29 = v28;
      LOBYTE(v23) = v30;
      sub_1D2641480(v27, v28, v30);
      sub_1D253FBE8(v27, v29, v23);
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      v31 = v62;
      sub_1D2557230(v61);
      swift_release();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (!v31)
        return swift_bridgeObjectRelease();
      return result;
    }
LABEL_14:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  v33 = v11;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  if (!swift_weakLoadStrong())
    goto LABEL_14;
  v59 = 0;
  v60 = 0xE000000000000000;
  v34 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](46);
  v61 = v34;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v35 = sub_1D26CBD3C();
  v37 = v36;
  swift_bridgeObjectRetain();
  v38 = sub_1D253FC20(v35, v37);
  v40 = v39;
  v42 = v41;
  sub_1D2641480(v38, v39, v41);
  sub_1D253FBE8(v38, v40, v42);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v43 = v56;
  swift_bridgeObjectRetain_n();
  v44 = sub_1D253FC20(v58, v43);
  v46 = v45;
  LOBYTE(v40) = v47;
  sub_1D2641480(v44, v45, v47);
  sub_1D253FBE8(v44, v46, v40);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CB994();
  v49 = sub_1D25410E8(v48);
  v51 = v50;
  LOBYTE(v46) = v52;
  sub_1D2641480(v49, v50, v52);
  sub_1D253FBE8(v49, v51, v46);
  sub_1D26CDA04();
  v53 = v62;
  sub_1D2557230(v61);
  if (v53)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v8);
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v33, v8);
}

uint64_t sub_1D265BD58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t result;
  uint64_t v18;

  v3 = v2;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v7 = Strong;
  v8 = *(_QWORD *)(Strong + 24);
  v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  v10 = *(_QWORD *)(v7 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  swift_release();
  swift_release();
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  v11 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](31);
  v18 = v11;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v12 = sub_1D253FC20(a1, a2);
  v14 = v13;
  v16 = v15;
  sub_1D2641480(v12, v13, v15);
  sub_1D253FBE8(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1D2557230(v18);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D265BFB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](12);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D2557230(v7);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1D265C158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  BOOL v41;
  char v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v57[2];
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v1 = MEMORY[0x1E0C80A78](v0);
  v60 = (uint64_t)v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v57 - v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v68 = *(_QWORD *)(v5 - 8);
  v69 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v59 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v67 = (char *)v57 - v12;
  v74 = 0;
  v75 = 0xE000000000000000;
  v13 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](28);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
    goto LABEL_39;
  v14 = v73;
  v15 = sub_1D2557230(v13);
  if (v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v58 = v15;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = sub_1D253E4EC(MEMORY[0x1E0DEE9D8]);
    v74 = v13;
    v66 = *(_QWORD *)(v58 + 16);
    if (v66)
    {
      v57[1] = 0;
      v16 = *(_QWORD *)(v58 + 32);
      v61 = v58 + 32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17 = sub_1D26CE0B8();
      v19 = v18;
      v72 = *(_QWORD *)(v16 + 16);
      if (!v72)
        goto LABEL_38;
      v20 = v17;
      v62 = v9;
      v63 = v8;
      v64 = v7;
      v65 = v4;
      v70 = 1;
      while (1)
      {
        v21 = 0;
        v71 = v16;
        v22 = (char *)(v16 + 64);
        v23 = v22;
        v73 = v19;
        while (1)
        {
          v24 = v21 + 1;
          if (__OFADD__(v21, 1))
          {
            __break(1u);
LABEL_37:
            swift_bridgeObjectRelease();
            goto LABEL_38;
          }
          v25 = *((_QWORD *)v23 - 2);
          v26 = *((_QWORD *)v23 - 1);
          v27 = *v23;
          v28 = *((_QWORD *)v23 - 4) == v20 && *((_QWORD *)v23 - 3) == v19;
          if (v28 || (sub_1D26CE3D0() & 1) != 0)
            break;
          v23 += 40;
          ++v21;
          v19 = v73;
          if (v24 == v72)
            goto LABEL_38;
        }
        swift_bridgeObjectRetain();
        sub_1D2541E98(v25, v26, v27);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D26507E0(v25, v26, v27);
        v30 = v29;
        v32 = v31;
        sub_1D253FBE8(v25, v26, v27);
        if (!v32)
          goto LABEL_39;
        v73 = v30;
        v33 = sub_1D26CE0B8();
        v35 = v34;
        v36 = *(_QWORD *)(v71 + 16);
        if (!v36)
          goto LABEL_37;
        v37 = v33;
        while (1)
        {
          v38 = *((_QWORD *)v22 - 2);
          v39 = *((_QWORD *)v22 - 1);
          v40 = *v22;
          v41 = *((_QWORD *)v22 - 4) == v37 && *((_QWORD *)v22 - 3) == v35;
          if (v41 || (sub_1D26CE3D0() & 1) != 0)
            break;
          v22 += 40;
          if (!--v36)
            goto LABEL_37;
        }
        swift_bridgeObjectRetain();
        sub_1D2541E98(v38, v39, v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D2650924(v38, v39, v40);
        v43 = v42;
        sub_1D253FBE8(v38, v39, v40);
        if ((v43 & 1) != 0)
        {
          while (1)
          {
LABEL_38:
            swift_bridgeObjectRelease();
LABEL_39:
            sub_1D26CE1D8();
            __break(1u);
          }
        }
        v44 = v67;
        sub_1D26CB8EC();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632D8);
        sub_1D2536488((unint64_t *)&unk_1ED9632A0, &qword_1ED9632D8, MEMORY[0x1E0D0F968]);
        sub_1D2536488((unint64_t *)&unk_1ED9632C8, &qword_1ED9632D8, MEMORY[0x1E0D0F990]);
        sub_1D2536488(&qword_1ED9632B0, &qword_1ED9632D8, MEMORY[0x1E0D0F970]);
        sub_1D2536488((unint64_t *)&unk_1ED9632B8, &qword_1ED9632D8, MEMORY[0x1E0D0F978]);
        v45 = (uint64_t)v64;
        sub_1D26CBD30();
        v47 = v62;
        v46 = v63;
        v48 = (uint64_t)v65;
        (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v65, v44, v63);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v48, 1, v46) == 1)
        {
          sub_1D253703C(v48, &qword_1ED96B1E0);
          v49 = v60;
          sub_1D266B7C4(v45, v60);
          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v45, v69);
          sub_1D253703C(v49, &qword_1ED96B1E0);
        }
        else
        {
          v50 = (uint64_t)v59;
          (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v59, v48, v46);
          v51 = v74;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v76 = v51;
          sub_1D266F3DC(v50, v45, isUniquelyReferenced_nonNull_native);
          v74 = v76;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v45, v69);
        }
        (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v46);
        swift_bridgeObjectRelease();
        if (v70 == v66)
          break;
        v53 = v70 + 1;
        v16 = *(_QWORD *)(v61 + 8 * v70);
        swift_bridgeObjectRetain();
        v20 = sub_1D26CE0B8();
        v19 = v54;
        v55 = *(_QWORD *)(v16 + 16);
        v70 = v53;
        v72 = v55;
        if (!v55)
          goto LABEL_38;
      }
      swift_bridgeObjectRelease();
      v13 = v74;
    }
    swift_bridgeObjectRelease();
  }
  return v13;
}

unint64_t sub_1D265C8E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  BOOL v33;
  _QWORD v35[5];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v37 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = 0;
  v44 = 0xE000000000000000;
  v4 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](28);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v5 = v43;
  if (!swift_weakLoadStrong())
    goto LABEL_31;
  v6 = sub_1D2557230(v4);
  if (!v0)
  {
    v7 = v6;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v40 = sub_1D253E6A8(MEMORY[0x1E0DEE9D8]);
    if (!*(_QWORD *)(v7 + 16))
    {
      v5 = v40;
      swift_bridgeObjectRelease();
      return v5;
    }
    v39 = 0;
    v8 = *(_QWORD *)(v7 + 32);
    v35[2] = v7 + 32;
    v35[1] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1D26CE0B8();
    v11 = v10;
    v42 = *(_QWORD *)(v8 + 16);
    if (!v42)
      goto LABEL_30;
    v12 = v9;
    v35[4] = v3;
    v35[3] = v1;
    v38 = 1;
    v13 = 0;
    v41 = v8;
    v14 = (char *)(v8 + 64);
    v15 = v14;
    v45 = v10;
    while (1)
    {
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      v17 = *((_QWORD *)v15 - 2);
      v18 = *((_QWORD *)v15 - 1);
      v19 = *v15;
      v20 = *((_QWORD *)v15 - 4) == v12 && *((_QWORD *)v15 - 3) == v11;
      if (v20 || (sub_1D26CE3D0() & 1) != 0)
        break;
      v15 += 40;
      ++v13;
      v11 = v45;
      if (v16 == v42)
        goto LABEL_30;
    }
    swift_bridgeObjectRetain();
    sub_1D2541E98(v17, v18, v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D26507E0(v17, v18, v19);
    v22 = v21;
    v24 = v23;
    sub_1D253FBE8(v17, v18, v19);
    if (v24)
    {
      v25 = sub_1D26CE0B8();
      v27 = v26;
      v28 = *(_QWORD *)(v41 + 16);
      if (v28)
      {
        v29 = v25;
        v45 = v22;
        do
        {
          v31 = *((_QWORD *)v14 - 2);
          v30 = *((_QWORD *)v14 - 1);
          v32 = *v14;
          v33 = *((_QWORD *)v14 - 4) == v29 && *((_QWORD *)v14 - 3) == v27;
          if (v33 || (sub_1D26CE3D0() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1D2541E98(v31, v30, v32);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __asm { BR              X8 }
          }
          v14 += 40;
          --v28;
        }
        while (v28);
      }
LABEL_29:
      swift_bridgeObjectRelease();
LABEL_30:
      swift_bridgeObjectRelease();
    }
LABEL_31:
    sub_1D26CE1D8();
    __break(1u);
    JUMPOUT(0x1D265D140);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v5;
}

void sub_1D265D1C4(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  double v34;
  double v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48[2];
  unint64_t v49;
  uint64_t v50;

  v3 = v2;
  v50 = *MEMORY[0x1E0C80C00];
  v46 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = v1 + 16;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v9 = Strong;
    v10 = *(_QWORD *)(Strong + 24);
    v11 = *(os_unfair_lock_s **)(v10 + 16);
    swift_retain();
    os_unfair_lock_lock(v11);
    v12 = *(_QWORD *)(v9 + 64);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
    swift_release();
    swift_release();
    if (!v12)
      __break(1u);
    if (!a1)
    {
      sub_1D265D6A4();
      return;
    }
    v13 = (void *)objc_opt_self();
    v48[0] = 0;
    v14 = a1;
    v15 = objc_msgSend(v13, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v14, 1, v48);
    v16 = v48[0];
    if (!v15)
    {
      v43 = v16;
      sub_1D26CB76C();

      swift_willThrow();
LABEL_11:

      return;
    }
    v44 = v14;
    v45 = v3;
    v17 = sub_1D26CB8E0();
    v19 = v18;

    v48[0] = 0;
    v48[1] = (id)0xE000000000000000;
    v20 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    MEMORY[0x1D8239188](103);
    v49 = v20;
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v21 = sub_1D26CBD3C();
    v23 = v22;
    swift_bridgeObjectRetain();
    v24 = sub_1D253FC20(v21, v23);
    v26 = v25;
    v28 = v27;
    sub_1D2641480(v24, v25, v27);
    sub_1D253FBE8(v24, v26, v28);
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D253FE08(v17, v19);
    sub_1D253FE08(v17, v19);
    v29 = sub_1D253FC0C(v17, v19);
    v31 = v30;
    v33 = v32;
    sub_1D2641480(v29, v30, v32);
    sub_1D253FBE8(v29, v31, v33);
    sub_1D253EE04(v17, v19);
    sub_1D26CDA04();
    sub_1D26CB9B8();
    sub_1D26CB8F8();
    v35 = v34;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v46);
    v36 = sub_1D25410E8(v35);
    v38 = v37;
    v40 = v39;
    sub_1D2641480(v36, v37, v39);
    sub_1D253FBE8(v36, v38, v40);
    sub_1D26CDA04();
    v41 = v49;
    if (swift_weakLoadStrong())
    {
      v42 = v45;
      sub_1D2557230(v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      v14 = v44;
      if (!v42)
        swift_bridgeObjectRelease();
      sub_1D253EE04(v17, v19);
      goto LABEL_11;
    }
  }
  sub_1D26CE1D8();
  __break(1u);
}

uint64_t sub_1D265D6A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t result;
  uint64_t v17;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](24);
  v17 = v7;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v8 = sub_1D26CBD3C();
  v10 = v9;
  swift_bridgeObjectRetain();
  v11 = sub_1D253FC20(v8, v10);
  v13 = v12;
  v15 = v14;
  sub_1D2641480(v11, v12, v14);
  sub_1D253FBE8(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D265D920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  BOOL v31;
  _QWORD v33[2];
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;

  v38 = sub_1D26CBA24();
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v36 = (char *)v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for RemoteActivitySubscription(0);
  v2 = MEMORY[0x1E0C80A78](v40);
  v35 = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v39 = (char *)v33 - v4;
  v46 = 0;
  v47 = 0xE000000000000000;
  v5 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](28);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_30;
  v7 = Strong;
  v8 = sub_1D2557230(v5);
  if (!v0)
  {
    v9 = v8;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v9 + 16))
    {
      v7 = MEMORY[0x1E0DEE9E0];
      swift_bridgeObjectRelease();
      return v7;
    }
    v43 = 0;
    v10 = *(_QWORD *)(v9 + 32);
    v33[1] = v9 + 32;
    v33[0] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1D26CE0B8();
    v13 = v12;
    v45 = *(_QWORD *)(v10 + 16);
    if (v45)
    {
      v14 = v11;
      v41 = 1;
      v42 = MEMORY[0x1E0DEE9E0];
      v15 = 0;
      v44 = v10;
      v16 = (unsigned __int8 *)(v10 + 64);
      v17 = (char *)(v10 + 64);
      v48 = v12;
      while (1)
      {
        v18 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
          goto LABEL_29;
        }
        v19 = *((_QWORD *)v17 - 2);
        v20 = *((_QWORD *)v17 - 1);
        v21 = *v17;
        v22 = *((_QWORD *)v17 - 4) == v14 && *((_QWORD *)v17 - 3) == v13;
        if (v22 || (sub_1D26CE3D0() & 1) != 0)
          break;
        v17 += 40;
        ++v15;
        v13 = v48;
        if (v18 == v45)
          goto LABEL_29;
      }
      swift_bridgeObjectRetain();
      sub_1D2541E98(v19, v20, v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D253FBE8(v19, v20, v21);
      v23 = sub_1D26CE0B8();
      v25 = v24;
      v26 = *(_QWORD *)(v44 + 16);
      if (v26)
      {
        v27 = v23;
        do
        {
          v28 = *((_QWORD *)v16 - 2);
          v29 = *((_QWORD *)v16 - 1);
          v30 = *v16;
          v31 = *((_QWORD *)v16 - 4) == v27 && *((_QWORD *)v16 - 3) == v25;
          if (v31 || (sub_1D26CE3D0() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1D2541E98(v28, v29, v30);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __asm { BR              X8 }
          }
          v16 += 40;
          --v26;
        }
        while (v26);
      }
    }
LABEL_29:
    swift_bridgeObjectRelease();
LABEL_30:
    sub_1D26CE1D8();
    __break(1u);
    JUMPOUT(0x1D265E0A4);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

uint64_t sub_1D265E124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  uint64_t v25;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong;
    v4 = *(_QWORD *)(Strong + 24);
    v5 = *(os_unfair_lock_s **)(v4 + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    v6 = *(_QWORD *)(v3 + 64);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    swift_release();
    if (v6)
    {
      sub_1D26CB5E0();
      swift_allocObject();
      sub_1D26CB5D4();
      type metadata accessor for RemoteActivitySubscription(0);
      sub_1D25369B0(&qword_1EFC83400, type metadata accessor for RemoteActivitySubscription, (uint64_t)&protocol conformance descriptor for RemoteActivitySubscription);
      v7 = sub_1D26CB5C8();
      if (v1)
        return swift_release();
      v9 = v7;
      v10 = v8;
      v11 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
      MEMORY[0x1D8239188](83);
      v25 = v11;
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      v12 = sub_1D26CB9F4();
      v14 = v13;
      swift_bridgeObjectRetain();
      v15 = sub_1D253FC20(v12, v14);
      v17 = v16;
      v19 = v18;
      sub_1D2641480(v15, v16, v18);
      sub_1D253FBE8(v15, v17, v19);
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D253FE08(v9, v10);
      sub_1D253FE08(v9, v10);
      v20 = sub_1D253FC0C(v9, v10);
      v22 = v21;
      LOBYTE(v15) = v23;
      sub_1D2641480(v20, v21, v23);
      sub_1D253FBE8(v20, v22, v15);
      sub_1D253EE04(v9, v10);
      sub_1D26CDA04();
      if (swift_weakLoadStrong())
      {
        sub_1D2557230(v25);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1D253EE04(v9, v10);
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t sub_1D265E4E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t result;
  uint64_t v17;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](24);
  v17 = v7;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v8 = sub_1D26CB9F4();
  v10 = v9;
  swift_bridgeObjectRetain();
  v11 = sub_1D253FC20(v8, v10);
  v13 = v12;
  v15 = v14;
  sub_1D2641480(v11, v12, v14);
  sub_1D253FBE8(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D265E754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char *v31;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B18);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = 0;
  v30 = 0xE000000000000000;
  v6 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](22);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    v7 = sub_1D2557230(v6);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v9 = v7;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v9 + 16))
    {
      v31 = v5;
      v10 = *(_QWORD *)(v9 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11 = sub_1D26CE0B8();
      v13 = v12;
      v14 = *(_QWORD *)(v10 + 16);
      if (v14)
      {
        v15 = v11;
        v27 = v10;
        v28 = a1;
        v16 = (char *)(v10 + 64);
        while (1)
        {
          v17 = *((_QWORD *)v16 - 2);
          v18 = *((_QWORD *)v16 - 1);
          v19 = *v16;
          v20 = *((_QWORD *)v16 - 4) == v15 && *((_QWORD *)v16 - 3) == v13;
          if (v20 || (sub_1D26CE3D0() & 1) != 0)
            break;
          v16 += 40;
          if (!--v14)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            a1 = v28;
            goto LABEL_19;
          }
        }
        swift_bridgeObjectRetain();
        sub_1D2541E98(v17, v18, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D26507E0(v17, v18, v19);
        v22 = v21;
        sub_1D253FBE8(v17, v18, v19);
        swift_bridgeObjectRelease();
        a1 = v28;
        if (v22)
        {
          v23 = (uint64_t)v31;
          sub_1D26CB9E8();
          swift_bridgeObjectRelease();
          v24 = sub_1D26CBA24();
          v25 = *(_QWORD *)(v24 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) != 1)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(a1, v23, v24);
            return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(a1, 0, 1, v24);
          }
          sub_1D253703C(v23, &qword_1ED961B18);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
LABEL_19:
    v26 = sub_1D26CBA24();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(a1, 1, 1, v26);
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D265EB28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t v17;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  result = sub_1D265EDB8();
  if (v1)
    return result;
  v8 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](38);
  v17 = v8;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v9 = sub_1D26CB9F4();
  v11 = v10;
  swift_bridgeObjectRetain();
  v12 = sub_1D253FC20(v9, v11);
  v14 = v13;
  v16 = v15;
  sub_1D2641480(v12, v13, v15);
  sub_1D253FBE8(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D265EDB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](13);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D265EF6C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t i;
  _QWORD v7[2];
  uint64_t v8;

  v7[0] = 0;
  v7[1] = 0xE000000000000000;
  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](52);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    v2 = sub_1D2557230(v1);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      v4 = v2;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7[0] = MEMORY[0x1E0DEE9E0];
      v5 = *(_QWORD *)(v4 + 16);
      if (v5)
      {
        swift_bridgeObjectRetain();
        for (i = 0; i != v5; ++i)
        {
          v8 = *(_QWORD *)(v4 + 8 * i + 32);
          swift_bridgeObjectRetain();
          sub_1D265F314((uint64_t)v7, &v8);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease_n();
        return v7[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        return MEMORY[0x1E0DEE9E0];
      }
    }
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

void sub_1D265F314(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  char v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  BOOL v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  unint64_t v80;
  char v81;
  BOOL v82;
  uint64_t v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  char v100;
  BOOL v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  unint64_t v113;
  char v114;
  BOOL v115;
  uint64_t v116;
  uint64_t v117;
  char v118;
  char v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  os_log_type_t v131;
  uint64_t v132;
  uint64_t v133;
  void (*v134)(char *, uint64_t, uint64_t);
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  BOOL v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  int v150;
  char *v151;
  char *v152;
  unsigned int *v153;
  uint64_t v154;
  uint64_t v155;
  unint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  NSObject *v161;
  os_log_type_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  void (*v169)(char *, uint64_t);
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  void (*v180)(char *, uint64_t, uint64_t);
  char *v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  unint64_t v185;
  void (*v186)(char *, uint64_t);
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  NSObject *v191;
  os_log_type_t v192;
  uint8_t *v193;
  uint64_t v194;
  uint64_t v195;
  unint64_t v196;
  void (*v197)(char *, uint64_t);
  uint64_t v198;
  uint64_t v199;
  int v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  unint64_t v206;
  NSObject *v207;
  os_log_type_t v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  void (*v216)(uint64_t, char *, uint64_t);
  char *v217;
  void (*v218)(char *, unint64_t *, uint64_t);
  unint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  void (*v222)(char *, uint64_t);
  void (*v223)(char *, uint64_t);
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  unint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  char *v239;
  char *v240;
  char *v241;
  char *v242;
  uint64_t v243;
  char *v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  unint64_t *v254;
  uint64_t v255;
  char *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint8_t *v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263[5];

  v243 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82FC8);
  MEMORY[0x1E0C80A78](v4);
  v242 = (char *)&v224 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = sub_1D26CBE68();
  v253 = *(_QWORD *)(v248 - 8);
  v6 = MEMORY[0x1E0C80A78](v248);
  v241 = (char *)&v224 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v254 = (unint64_t *)((char *)&v224 - v8);
  v9 = sub_1D26CBE8C();
  MEMORY[0x1E0C80A78](v9);
  v251 = (char *)&v224 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CBED4();
  v255 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v240 = (char *)&v224 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v247 = (uint64_t)&v224 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v244 = (char *)&v224 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v252 = (char *)&v224 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v237 = (char *)&v224 - v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v224 - v22;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B18);
  v25 = MEMORY[0x1E0C80A78](v24);
  v246 = (char *)&v224 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v259 = (char *)&v224 - v28;
  MEMORY[0x1E0C80A78](v27);
  v245 = (char *)&v224 - v29;
  v260 = (uint8_t *)sub_1D26CBA24();
  v257 = *((_QWORD *)v260 - 1);
  v30 = MEMORY[0x1E0C80A78](v260);
  v239 = (char *)&v224 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v249 = (char *)&v224 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v258 = (char *)&v224 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v256 = (char *)&v224 - v37;
  MEMORY[0x1E0C80A78](v36);
  v238 = (char *)&v224 - v38;
  v39 = sub_1D26CBEBC();
  v40 = MEMORY[0x1E0C80A78](v39);
  v250 = (uint64_t)&v224 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v40);
  v43 = (char *)&v224 - v42;
  v44 = *a2;
  v45 = sub_1D26CE0B8();
  v47 = v46;
  v48 = *(_QWORD *)(v44 + 16);
  if (!v48)
    goto LABEL_32;
  v49 = v45;
  v235 = v43;
  v236 = v23;
  v234 = v11;
  v263[4] = v2;
  v50 = (char *)(v44 + 64);
  while (1)
  {
    v51 = *((_QWORD *)v50 - 2);
    v52 = *((_QWORD *)v50 - 1);
    v53 = *v50;
    v54 = *((_QWORD *)v50 - 4) == v49 && *((_QWORD *)v50 - 3) == v47;
    if (v54 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v50 += 40;
    if (!--v48)
      goto LABEL_32;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v51, v52, v53);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v51, v52, v53);
  v56 = v55;
  v58 = v57;
  sub_1D253FBE8(v51, v52, v53);
  if (!v58)
    goto LABEL_33;
  v59 = sub_1D26CE0B8();
  v61 = v60;
  v62 = *(_QWORD *)(v44 + 16);
  if (!v62)
    goto LABEL_20;
  v63 = v59;
  v232 = v56;
  v233 = v58;
  v64 = (char *)(v44 + 64);
  while (1)
  {
    v65 = *((_QWORD *)v64 - 2);
    v66 = *((_QWORD *)v64 - 1);
    v67 = *v64;
    v68 = *((_QWORD *)v64 - 4) == v63 && *((_QWORD *)v64 - 3) == v61;
    if (v68 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v64 += 40;
    if (!--v62)
      goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v65, v66, v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v65, v66, v67);
  v70 = v69;
  v72 = v71;
  sub_1D253FBE8(v65, v66, v67);
  if (!v72)
    goto LABEL_32;
  v230 = v70;
  v231 = v72;
  v73 = sub_1D26CE0B8();
  v75 = v74;
  v76 = *(_QWORD *)(v44 + 16);
  if (!v76)
    goto LABEL_31;
  v77 = v73;
  v78 = (char *)(v44 + 64);
  while (1)
  {
    v79 = *((_QWORD *)v78 - 2);
    v80 = *((_QWORD *)v78 - 1);
    v81 = *v78;
    v82 = *((_QWORD *)v78 - 4) == v77 && *((_QWORD *)v78 - 3) == v75;
    if (v82 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v78 += 40;
    if (!--v76)
      goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v79, v80, v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v79, v80, v81);
  v89 = v88;
  v91 = v90;
  sub_1D253FBE8(v79, v80, v81);
  if (!v91)
  {
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_32:
    swift_bridgeObjectRelease();
LABEL_33:
    if (qword_1ED962330 != -1)
      swift_once();
    v83 = sub_1D26CC09C();
    __swift_project_value_buffer(v83, (uint64_t)qword_1ED977D20);
    v84 = sub_1D26CC084();
    v85 = sub_1D26CDCEC();
    if (!os_log_type_enabled(v84, v85))
      goto LABEL_38;
    v86 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v86 = 0;
    _os_log_impl(&dword_1D2531000, v84, v85, "Encountered malformed record metadata", v86, 2u);
    v87 = (uint64_t)v86;
LABEL_37:
    MEMORY[0x1D823A5E0](v87, -1, -1);
LABEL_38:

    return;
  }
  v227 = v89;
  v229 = v91;
  v92 = sub_1D26CE0B8();
  v94 = v93;
  v95 = *(_QWORD *)(v44 + 16);
  if (!v95)
  {
LABEL_48:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v96 = v92;
  v97 = (char *)(v44 + 64);
  while (1)
  {
    v98 = *((_QWORD *)v97 - 2);
    v99 = *((_QWORD *)v97 - 1);
    v100 = *v97;
    v101 = *((_QWORD *)v97 - 4) == v96 && *((_QWORD *)v97 - 3) == v94;
    if (v101 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v97 += 40;
    if (!--v95)
      goto LABEL_48;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v98, v99, v100);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v98, v99, v100);
  v103 = v102;
  v105 = v104;
  sub_1D253FBE8(v98, v99, v100);
  if (!v105)
  {
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  v225 = v103;
  v226 = v105;
  v106 = sub_1D26CE0B8();
  v108 = v107;
  v109 = *(_QWORD *)(v44 + 16);
  if (!v109)
  {
LABEL_59:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_31:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  v110 = v106;
  v111 = (char *)(v44 + 64);
  v228 = v107;
  while (1)
  {
    v112 = *((_QWORD *)v111 - 2);
    v113 = *((_QWORD *)v111 - 1);
    v114 = *v111;
    v115 = *((_QWORD *)v111 - 4) == v110 && *((_QWORD *)v111 - 3) == v108;
    if (v115 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v111 += 40;
    --v109;
    v108 = v228;
    if (!v109)
      goto LABEL_59;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v112, v113, v114);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2650924(v112, v113, v114);
  v117 = v116;
  v119 = v118;
  sub_1D253FBE8(v112, v113, v114);
  v120 = v233;
  if ((v119 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  v228 = v117;
  v121 = v229;
  if (qword_1EFC821A0 != -1)
    swift_once();
  v122 = (uint64_t)v260;
  __swift_project_value_buffer((uint64_t)v260, (uint64_t)qword_1EFC833D8);
  v123 = sub_1D26CB9F4();
  v125 = (uint64_t)v235;
  if (v227 == v123 && v121 == v124)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v126 = 1;
    goto LABEL_76;
  }
  v127 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  if ((v127 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v126 = 1;
    goto LABEL_76;
  }
  v128 = (uint64_t)v245;
  sub_1D26CB9E8();
  v129 = v257;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v257 + 48))(v128, 1, v122) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D253703C(v128, &qword_1ED961B18);
    if (qword_1ED962330 != -1)
      swift_once();
    v130 = sub_1D26CC09C();
    __swift_project_value_buffer(v130, (uint64_t)qword_1ED977D20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v84 = sub_1D26CC084();
    v131 = sub_1D26CDCEC();
    if (!os_log_type_enabled(v84, v131))
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return;
    }
    v132 = swift_slowAlloc();
    v133 = swift_slowAlloc();
    v263[0] = v133;
    *(_DWORD *)v132 = 136446466;
    swift_bridgeObjectRetain();
    v261 = sub_1D2537880(v227, v121, v263);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v132 + 12) = 2082;
    swift_bridgeObjectRetain();
    v261 = sub_1D2537880(v232, v120, v263);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v84, v131, "Malformed relationshipID %{public}s for %{public}s", (uint8_t *)v132, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v133, -1, -1);
    v87 = v132;
    goto LABEL_37;
  }
  swift_bridgeObjectRelease();
  v134 = *(void (**)(char *, uint64_t, uint64_t))(v129 + 32);
  v135 = v238;
  v134(v238, v128, v122);
  v134((char *)v125, (uint64_t)v135, v122);
  v126 = 0;
LABEL_76:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v257 + 56))(v125, v126, 1, v122);
  sub_1D26CBE74();
  sub_1D2534120(v125, v250, (uint64_t (*)(_QWORD))MEMORY[0x1E0D875D8]);
  sub_1D26CBE98();
  v136 = sub_1D26CE0B8();
  v138 = v137;
  v139 = *(_QWORD *)(v44 + 16);
  if (v139)
  {
    v140 = v136;
    v141 = (char *)(v44 + 64);
    while (1)
    {
      v142 = *((_QWORD *)v141 - 2);
      v143 = *((_QWORD *)v141 - 1);
      v144 = *v141;
      v145 = *((_QWORD *)v141 - 4) == v140 && *((_QWORD *)v141 - 3) == v138;
      if (v145 || (sub_1D26CE3D0() & 1) != 0)
        break;
      v141 += 40;
      if (!--v139)
      {
        swift_bridgeObjectRelease();
        v146 = 0;
        v147 = 0;
        goto LABEL_87;
      }
    }
    swift_bridgeObjectRetain();
    sub_1D2541E98(v142, v143, v144);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D26507E0(v142, v143, v144);
    v146 = v148;
    v147 = v149;
    sub_1D253FBE8(v142, v143, v144);
LABEL_87:
    v122 = (uint64_t)v260;
  }
  else
  {
    swift_bridgeObjectRelease();
    v146 = 0;
    v147 = 0;
  }
  if (v228 == 1)
    v150 = 1;
  else
    v150 = 2;
  if (!v228)
    v150 = 0;
  v151 = v236;
  v152 = v252;
  if (v150 != 2)
  {
    if (v150)
    {
      if (!v147)
      {
        swift_bridgeObjectRelease();
        if (qword_1ED962330 != -1)
          swift_once();
        v187 = sub_1D26CC09C();
        __swift_project_value_buffer(v187, (uint64_t)qword_1ED977D20);
        v188 = v255;
        v189 = v237;
        v190 = v234;
        (*(void (**)(char *, char *, uint64_t))(v255 + 16))(v237, v151, v234);
        v191 = sub_1D26CC084();
        v192 = sub_1D26CDCEC();
        if (os_log_type_enabled(v191, v192))
        {
          v193 = (uint8_t *)swift_slowAlloc();
          v194 = swift_slowAlloc();
          v263[0] = v194;
          *(_DWORD *)v193 = 136446210;
          v260 = v193 + 4;
          sub_1D25369B0(&qword_1EFC83430, (uint64_t (*)(uint64_t))MEMORY[0x1E0D875E8], MEMORY[0x1E0D87608]);
          v195 = sub_1D26CE370();
          v261 = sub_1D2537880(v195, v196, v263);
          sub_1D26CDF50();
          swift_bridgeObjectRelease();
          v197 = *(void (**)(char *, uint64_t))(v188 + 8);
          v197(v189, v190);
          _os_log_impl(&dword_1D2531000, v191, v192, "Missing destination IDs for %{public}s", v193, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v194, -1, -1);
          MEMORY[0x1D823A5E0](v193, -1, -1);

          v197(v236, v190);
        }
        else
        {

          v223 = *(void (**)(char *, uint64_t))(v188 + 8);
          v223(v189, v190);
          v223(v236, v190);
        }
        goto LABEL_129;
      }
      v263[0] = v146;
      v263[1] = v147;
      v261 = 124;
      v262 = 0xE100000000000000;
      sub_1D257293C();
      v173 = sub_1D26CDF68();
      swift_bridgeObjectRelease();
      v174 = *(_QWORD *)(v173 + 16);
      if (v174)
      {
        swift_bridgeObjectRetain();
        v252 = (char *)v173;
        v175 = v173 + 40;
        v176 = MEMORY[0x1E0DEE9D8];
        v177 = v257;
        do
        {
          swift_bridgeObjectRetain();
          v178 = (uint64_t)v259;
          sub_1D26CB9E8();
          v179 = v178;
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v177 + 48))(v178, 1, v122) == 1)
          {
            sub_1D253703C(v178, &qword_1ED961B18);
          }
          else
          {
            v180 = *(void (**)(char *, uint64_t, uint64_t))(v177 + 32);
            v181 = v256;
            v180(v256, v179, v122);
            v180(v258, (uint64_t)v181, v122);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v176 = sub_1D2562430(0, *(_QWORD *)(v176 + 16) + 1, 1, v176);
            v183 = *(_QWORD *)(v176 + 16);
            v182 = *(_QWORD *)(v176 + 24);
            if (v183 >= v182 >> 1)
              v176 = sub_1D2562430(v182 > 1, v183 + 1, 1, v176);
            *(_QWORD *)(v176 + 16) = v183 + 1;
            v184 = v257;
            v185 = v176
                 + ((*(unsigned __int8 *)(v184 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v184 + 80))
                 + *(_QWORD *)(v257 + 72) * v183;
            v122 = (uint64_t)v260;
            v180((char *)v185, (uint64_t)v258, (uint64_t)v260);
            v177 = v184;
          }
          v175 += 16;
          --v174;
        }
        while (v174);
        swift_bridgeObjectRelease();
      }
      else
      {
        v176 = MEMORY[0x1E0DEE9D8];
      }
      v154 = v248;
      v155 = v253;
      v157 = (uint64_t)v246;
      swift_bridgeObjectRelease();
      v156 = v254;
      *v254 = v176;
      v153 = (unsigned int *)MEMORY[0x1E0D87588];
    }
    else
    {
      swift_bridgeObjectRelease();
      v153 = (unsigned int *)MEMORY[0x1E0D87590];
      v154 = v248;
      v155 = v253;
      v156 = v254;
      v157 = (uint64_t)v246;
    }
    (*(void (**)(unint64_t *, _QWORD, uint64_t))(v155 + 104))(v156, *v153, v154);
    sub_1D26CB9E8();
    v198 = v257;
    v199 = (uint64_t)v260;
    v200 = (*(uint64_t (**)(uint64_t, uint64_t, uint8_t *))(v257 + 48))(v157, 1, v260);
    v201 = v234;
    if (v200 != 1)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t))(v198 + 32))(v249, v157, v199);
      v216 = *(void (**)(uint64_t, char *, uint64_t))(v255 + 16);
      v217 = v236;
      v216(v247, v236, v201);
      v216((uint64_t)v240, v217, v201);
      (*(void (**)(char *, char *, uint64_t))(v198 + 16))(v239, v249, v199);
      v218 = *(void (**)(char *, unint64_t *, uint64_t))(v155 + 16);
      v219 = v254;
      v218(v241, v254, v154);
      v220 = (uint64_t)v242;
      sub_1D26CBE38();
      v221 = sub_1D26CBE5C();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v221 - 8) + 56))(v220, 0, 1, v221);
      sub_1D25E5F5C(v220, v247);
      (*(void (**)(char *, uint64_t))(v198 + 8))(v249, v199);
      (*(void (**)(unint64_t *, uint64_t))(v253 + 8))(v219, v154);
      (*(void (**)(char *, uint64_t))(v255 + 8))(v236, v234);
      goto LABEL_129;
    }
    sub_1D253703C(v157, &qword_1ED961B18);
    if (qword_1ED962330 != -1)
      swift_once();
    v202 = sub_1D26CC09C();
    __swift_project_value_buffer(v202, (uint64_t)qword_1ED977D20);
    v203 = v255;
    v204 = v244;
    v205 = v236;
    (*(void (**)(char *, char *, uint64_t))(v255 + 16))(v244, v236, v201);
    v206 = v226;
    swift_bridgeObjectRetain();
    v207 = sub_1D26CC084();
    v208 = sub_1D26CDCEC();
    v209 = v208;
    if (!os_log_type_enabled(v207, v208))
    {

      v222 = *(void (**)(char *, uint64_t))(v203 + 8);
      v222(v204, v201);
      swift_bridgeObjectRelease_n();
      (*(void (**)(unint64_t *, uint64_t))(v253 + 8))(v254, v248);
      v222(v205, v201);
      goto LABEL_129;
    }
    v210 = swift_slowAlloc();
    LODWORD(v259) = v209;
    v211 = v210;
    v260 = (uint8_t *)swift_slowAlloc();
    v263[0] = (uint64_t)v260;
    *(_DWORD *)v211 = 136446466;
    swift_bridgeObjectRetain();
    v261 = sub_1D2537880(v225, v206, v263);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v211 + 12) = 2082;
    sub_1D25369B0(&qword_1EFC83430, (uint64_t (*)(uint64_t))MEMORY[0x1E0D875E8], MEMORY[0x1E0D87608]);
    v212 = v234;
    v213 = sub_1D26CE370();
    v261 = sub_1D2537880(v213, v214, v263);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v169 = *(void (**)(char *, uint64_t))(v203 + 8);
    v169(v204, v212);
    _os_log_impl(&dword_1D2531000, v207, (os_log_type_t)v259, "Malformed version %{public}s for %{public}s", (uint8_t *)v211, 0x16u);
    v215 = (uint64_t)v260;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v215, -1, -1);
    MEMORY[0x1D823A5E0](v211, -1, -1);

    (*(void (**)(unint64_t *, uint64_t))(v253 + 8))(v254, v248);
    v171 = v236;
    v172 = v212;
    goto LABEL_124;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1ED962330 != -1)
    swift_once();
  v158 = sub_1D26CC09C();
  __swift_project_value_buffer(v158, (uint64_t)qword_1ED977D20);
  v159 = v255;
  v160 = v234;
  (*(void (**)(char *, char *, uint64_t))(v255 + 16))(v152, v151, v234);
  v161 = sub_1D26CC084();
  v162 = sub_1D26CDCEC();
  if (os_log_type_enabled(v161, v162))
  {
    v163 = swift_slowAlloc();
    v260 = (uint8_t *)swift_slowAlloc();
    v263[0] = (uint64_t)v260;
    *(_DWORD *)v163 = 136446466;
    LOBYTE(v261) = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83428);
    v164 = sub_1D26CD98C();
    v261 = sub_1D2537880(v164, v165, v263);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v163 + 12) = 2082;
    sub_1D25369B0(&qword_1EFC83430, (uint64_t (*)(uint64_t))MEMORY[0x1E0D875E8], MEMORY[0x1E0D87608]);
    v166 = v234;
    v167 = sub_1D26CE370();
    v261 = sub_1D2537880(v167, v168, v263);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v169 = *(void (**)(char *, uint64_t))(v255 + 8);
    v169(v152, v166);
    _os_log_impl(&dword_1D2531000, v161, v162, "Illegal destination type %{public}s for %{public}s", (uint8_t *)v163, 0x16u);
    v170 = (uint64_t)v260;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v170, -1, -1);
    MEMORY[0x1D823A5E0](v163, -1, -1);

    v171 = v236;
    v172 = v166;
LABEL_124:
    v169(v171, v172);
    goto LABEL_129;
  }

  v186 = *(void (**)(char *, uint64_t))(v159 + 8);
  v186(v152, v160);
  v186(v151, v160);
LABEL_129:
  sub_1D25340E4((uint64_t)v235, (uint64_t (*)(_QWORD))MEMORY[0x1E0D875D8]);
}

uint64_t sub_1D2660B8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t Strong;
  uint64_t v18;
  uint64_t v19;
  os_unfair_lock_s *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char v51;
  char v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  char v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  _UNKNOWN **v81;
  unint64_t *v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t result;
  uint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  __int128 v104;
  uint64_t v105;
  _UNKNOWN **v106;
  unint64_t *v107;
  unint64_t v108;
  uint64_t v109;
  _UNKNOWN **v110;
  _QWORD v111[2];
  unint64_t v112;
  uint64_t v113;

  v3 = sub_1D26CBE8C();
  v96 = *(_QWORD *)(v3 - 8);
  v97 = v3;
  MEMORY[0x1E0C80A78](v3);
  v95 = (char *)&v87 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CBEBC();
  MEMORY[0x1E0C80A78](v5);
  v93 = (uint64_t)&v87 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = sub_1D26CBED4();
  v92 = *(_QWORD *)(v100 - 8);
  v7 = MEMORY[0x1E0C80A78](v100);
  v94 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v91 = (uint64_t)&v87 - v9;
  v113 = sub_1D26CBA24();
  v10 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D26CBE68();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = v1 + 16;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_29;
  v18 = Strong;
  v19 = *(_QWORD *)(Strong + 24);
  v20 = *(os_unfair_lock_s **)(v19 + 16);
  swift_retain();
  os_unfair_lock_lock(v20);
  v21 = *(_QWORD *)(v18 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v19 + 16));
  swift_release();
  swift_release();
  if (!v21)
  {
    __break(1u);
    goto LABEL_28;
  }
  sub_1D26CBE2C();
  v22 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  v23 = *MEMORY[0x1E0D87588];
  v102 = v10;
  v103 = v12;
  v90 = v22;
  v89 = v23;
  if (v22 != v23)
  {
    v13 = v113;
    if (v22 == *MEMORY[0x1E0D87590])
    {
      v88 = 0;
      v101 = 0;
      goto LABEL_16;
    }
LABEL_29:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
  v24 = *(_QWORD *)v16;
  v25 = *(_QWORD *)(*(_QWORD *)v16 + 16);
  if (v25)
  {
    v88 = a1;
    v107 = (unint64_t *)MEMORY[0x1E0DEE9D8];
    sub_1D258430C(0, v25, 0);
    v26 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    v87 = v24;
    v27 = v24 + v26;
    v101 = *(_QWORD *)(v10 + 72);
    v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    do
    {
      v29 = v113;
      v28(v12, v27, v113);
      v30 = sub_1D26CB9F4();
      v32 = v31;
      (*(void (**)(char *, uint64_t))(v102 + 8))(v12, v29);
      v33 = v107;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258430C(0, v33[2] + 1, 1);
        v33 = v107;
      }
      v35 = v33[2];
      v34 = v33[3];
      if (v35 >= v34 >> 1)
      {
        sub_1D258430C(v34 > 1, v35 + 1, 1);
        v33 = v107;
      }
      v33[2] = v35 + 1;
      v36 = &v33[2 * v35];
      v36[4] = v30;
      v36[5] = v32;
      v27 += v101;
      --v25;
      v12 = v103;
    }
    while (v25);
    swift_bridgeObjectRelease();
    v10 = v102;
  }
  else
  {
    swift_bridgeObjectRelease();
    v33 = (unint64_t *)MEMORY[0x1E0DEE9D8];
  }
  v107 = v33;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
  v88 = sub_1D26CD8E4();
  v101 = v37;
  swift_bridgeObjectRelease();
  v13 = v113;
LABEL_16:
  v16 = (char *)v93;
  v38 = v91;
  sub_1D26CBE44();
  sub_1D26CBEC8();
  v14 = *(_QWORD *)(v92 + 8);
  ((void (*)(uint64_t, uint64_t))v14)(v38, v100);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v13) == 1)
  {
    LODWORD(v16) = v90;
    LODWORD(v21) = v89;
    if (qword_1EFC821A0 == -1)
    {
LABEL_18:
      __swift_project_value_buffer(v13, (uint64_t)qword_1EFC833D8);
      v91 = sub_1D26CB9F4();
      v92 = v39;
      goto LABEL_20;
    }
LABEL_28:
    swift_once();
    goto LABEL_18;
  }
  v40 = v103;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v103, v16, v13);
  v91 = sub_1D26CB9F4();
  v92 = v41;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v40, v13);
  LODWORD(v16) = v90;
  LODWORD(v21) = v89;
LABEL_20:
  v93 = (_DWORD)v16 == (_DWORD)v21;
  v107 = 0;
  v108 = 0xE000000000000000;
  v42 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](99);
  v111[0] = v107;
  v111[1] = v108;
  v112 = v42;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v43 = v94;
  sub_1D26CBE44();
  v44 = sub_1D26CBEA4();
  v46 = v45;
  v47 = v100;
  ((void (*)(char *, uint64_t))v14)(v43, v100);
  swift_bridgeObjectRetain();
  v48 = sub_1D253FC20(v44, v46);
  v50 = v49;
  v52 = v51;
  sub_1D2641480(v48, v49, v51);
  sub_1D253FBE8(v48, v50, v52);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CBE44();
  v53 = v95;
  sub_1D26CBEB0();
  ((void (*)(char *, uint64_t))v14)(v43, v47);
  v54 = sub_1D26CBE80();
  v56 = v55;
  (*(void (**)(char *, uint64_t))(v96 + 8))(v53, v97);
  swift_bridgeObjectRetain();
  v57 = sub_1D253FC20(v54, v56);
  v59 = v58;
  v61 = v60;
  sub_1D2641480(v57, v58, v60);
  sub_1D253FBE8(v57, v59, v61);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v62 = v92;
  swift_bridgeObjectRetain();
  v63 = sub_1D253FC20(v91, v62);
  v65 = v64;
  LOBYTE(v43) = v66;
  sub_1D2641480(v63, v64, v66);
  sub_1D253FBE8(v63, v65, (char)v43);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v67 = v103;
  sub_1D26CBE50();
  v68 = sub_1D26CB9F4();
  v70 = v69;
  (*(void (**)(char *, uint64_t))(v102 + 8))(v67, v113);
  swift_bridgeObjectRetain();
  v71 = sub_1D253FC20(v68, v70);
  v73 = v72;
  v75 = v74;
  sub_1D2641480(v71, v72, v74);
  sub_1D253FBE8(v71, v73, v75);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v76 = sub_1D253FA04(v93);
  v78 = v77;
  LOBYTE(v73) = v79;
  sub_1D2641480(v76, v77, v79);
  sub_1D253FBE8(v76, v78, v73);
  sub_1D26CDA04();
  if (v101)
  {
    v105 = MEMORY[0x1E0DEA968];
    v106 = &off_1E93D5368;
    *(_QWORD *)&v104 = v88;
    *((_QWORD *)&v104 + 1) = v101;
    sub_1D2538F38(&v104, (uint64_t)&v107);
    v80 = v109;
    v81 = v110;
  }
  else
  {
    v82 = (unint64_t *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v80 = sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
    v81 = &off_1E93D56A0;
    v109 = v80;
    v110 = &off_1E93D56A0;
    v107 = v82;
  }
  v83 = __swift_project_boxed_opaque_existential_0(&v107, v80);
  sub_1D2641654((uint64_t)v83, (uint64_t)v111, v80, (uint64_t)v81);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v107);
  sub_1D26CDA04();
  v84 = v112;
  if (!swift_weakLoadStrong())
    goto LABEL_29;
  v85 = v99;
  sub_1D2557230(v84);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v85)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D26616A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  _QWORD v33[3];
  unint64_t v34;
  uint64_t v35;

  v2 = v1;
  v3 = sub_1D26CBE8C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0 + 16;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v9 = Strong;
  v10 = *(_QWORD *)(Strong + 24);
  v11 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain();
  os_unfair_lock_lock(v11);
  v12 = *(_QWORD *)(v9 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  swift_release();
  swift_release();
  if (!v12)
  {
    __break(1u);
    goto LABEL_8;
  }
  v35 = v2;
  v33[1] = 0;
  v33[2] = 0xE000000000000000;
  v13 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](33);
  v34 = v13;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v14 = sub_1D26CBEA4();
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = sub_1D253FC20(v14, v16);
  v33[0] = v7;
  v19 = v18;
  v21 = v20;
  sub_1D2641480(v17, v18, v20);
  sub_1D253FBE8(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CBEB0();
  v22 = sub_1D26CBE80();
  v24 = v23;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRetain();
  v25 = sub_1D253FC20(v22, v24);
  v27 = v26;
  v29 = v28;
  sub_1D2641480(v25, v26, v28);
  sub_1D253FBE8(v25, v27, v29);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v30 = v34;
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  v31 = v35;
  sub_1D2557230(v30);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v31)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D26619FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](13);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1D2661BB0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  unint64_t v9[2];

  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  v1 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](64);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    v3 = sub_1D2557230(v2);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      v5 = v3;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9[0] = v1;
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        for (i = 0; i != v6; ++i)
        {
          v8 = *(_QWORD *)(v5 + 8 * i + 32);
          swift_bridgeObjectRetain();
          sub_1D2661FD4(v9, &v8);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease_n();
        return v9[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        return MEMORY[0x1E0DEE9D8];
      }
    }
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

void sub_1D2661FD4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  BOOL v61;
  void (*v62)(char *, char *, uint64_t);
  void (*v63)(char *, char *, uint64_t);
  unsigned int (*v64)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v65)(uint64_t, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  BOOL v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  unint64_t v101;
  char v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  BOOL v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  char v130;
  BOOL v131;
  uint64_t v132;
  NSObject *v133;
  os_log_type_t v134;
  uint8_t *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  os_log_type_t v142;
  uint8_t *v143;
  char *v144;
  unsigned int (*v145)(char *, uint64_t, uint64_t);
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  unint64_t v153;
  char v154;
  BOOL v155;
  char *v156;
  char *v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  unsigned int *v166;
  void (*v167)(char *, char *, uint64_t);
  unsigned int *v168;
  void (*v169)(char *, char *, uint64_t);
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t (*v174)(char *, uint64_t);
  uint64_t v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  void (*v181)(char *, char *, uint64_t);
  uint64_t v182;
  unint64_t *v183;
  unint64_t v184;
  char *v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  NSObject *v189;
  os_log_type_t v190;
  uint8_t *v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  void (*v195)(char *, uint64_t);
  void (*v196)(char *, uint64_t);
  char *v197;
  void (*v198)(char *, uint64_t);
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  unint64_t v209;
  char v210;
  BOOL v211;
  void (*v212)(char *, uint64_t);
  uint64_t v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  NSObject *v217;
  os_log_type_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  void (*v222)(char *, uint64_t);
  uint64_t v223;
  unint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  void (*v229)(char *, uint64_t);
  uint64_t v230;
  uint64_t v231;
  NSObject *v232;
  os_log_type_t v233;
  uint8_t *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  unint64_t v239;
  void (*v240)(char *, uint64_t);
  const char *v241;
  void (*v242)(char *, uint64_t);
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  unint64_t v248;
  char *v249;
  uint64_t v250;
  void (*v251)(char *, char *, uint64_t);
  unint64_t v252;
  unint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  void (*v260)(char *, char *, uint64_t);
  unsigned int (*v261)(uint64_t, uint64_t, uint64_t);
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  char *v265;
  char *v266;
  char *v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  char *v273;
  unint64_t *v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  char *v278;
  char *v279;
  char *v280;
  char *v281;
  char *v282;
  char *v283;
  char *v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  char *v289;
  char *v290;
  char *v291;
  char *v292;
  uint64_t v293;
  char *v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  char v298[8];
  char v299[8];
  uint64_t v300;
  char *v301;

  v274 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83418);
  MEMORY[0x1E0C80A78](v4);
  v273 = (char *)&v256 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v275 = sub_1D26CBF88();
  v277 = *(_QWORD *)(v275 - 8);
  v6 = MEMORY[0x1E0C80A78](v275);
  v271 = (char *)&v256 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v276 = (char *)&v256 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v284 = (char *)&v256 - v11;
  MEMORY[0x1E0C80A78](v10);
  v278 = (char *)&v256 - v12;
  v13 = sub_1D26CBF40();
  v285 = *(_QWORD *)(v13 - 8);
  v286 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v272 = (char *)&v256 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v287 = (char *)&v256 - v16;
  v17 = sub_1D26CBF10();
  v293 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v283 = (char *)&v256 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v294 = (char *)&v256 - v20;
  v21 = sub_1D26CBF04();
  v288 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v282 = (char *)&v256 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = MEMORY[0x1E0C80A78](v22);
  v290 = (char *)&v256 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v289 = (char *)&v256 - v27;
  MEMORY[0x1E0C80A78](v26);
  v291 = (char *)&v256 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B18);
  v30 = MEMORY[0x1E0C80A78](v29);
  v267 = (char *)&v256 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = MEMORY[0x1E0C80A78](v30);
  v279 = (char *)&v256 - v33;
  MEMORY[0x1E0C80A78](v32);
  v270 = (char *)&v256 - v34;
  v35 = sub_1D26CBA24();
  v295 = *(_QWORD *)(v35 - 8);
  v36 = MEMORY[0x1E0C80A78](v35);
  v281 = (char *)&v256 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = MEMORY[0x1E0C80A78](v36);
  v280 = (char *)&v256 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v269 = (char *)&v256 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v266 = (char *)&v256 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v265 = (char *)&v256 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v268 = (char *)&v256 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v296 = (char *)&v256 - v49;
  MEMORY[0x1E0C80A78](v48);
  v292 = (char *)&v256 - v50;
  v51 = *a2;
  v52 = sub_1D26CE0B8();
  v54 = v53;
  v55 = *(_QWORD *)(v51 + 16);
  if (!v55)
    goto LABEL_62;
  v56 = v52;
  v263 = v17;
  v262 = v21;
  v264 = v35;
  v297 = v2;
  v57 = (char *)(v51 + 64);
  while (1)
  {
    v58 = *((_QWORD *)v57 - 2);
    v59 = *((_QWORD *)v57 - 1);
    v60 = *v57;
    v61 = *((_QWORD *)v57 - 4) == v56 && *((_QWORD *)v57 - 3) == v54;
    if (v61 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v57 += 40;
    if (!--v55)
      goto LABEL_62;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v58, v59, v60);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v58, v59, v60);
  v63 = v62;
  v65 = v64;
  sub_1D253FBE8(v58, v59, v60);
  if (!v65)
    goto LABEL_63;
  v260 = v63;
  v66 = sub_1D26CE0B8();
  v68 = v67;
  v69 = *(_QWORD *)(v51 + 16);
  if (!v69)
    goto LABEL_51;
  v70 = v66;
  v261 = v65;
  v71 = (char *)(v51 + 64);
  while (1)
  {
    v72 = *((_QWORD *)v71 - 2);
    v73 = *((_QWORD *)v71 - 1);
    v74 = *v71;
    v75 = *((_QWORD *)v71 - 4) == v70 && *((_QWORD *)v71 - 3) == v68;
    if (v75 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v71 += 40;
    if (!--v69)
      goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v72, v73, v74);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2650924(v72, v73, v74);
  v77 = v76;
  v79 = v78;
  sub_1D253FBE8(v72, v73, v74);
  if ((v79 & 1) != 0)
    goto LABEL_62;
  v80 = sub_1D26CE0B8();
  v82 = v81;
  v83 = *(_QWORD *)(v51 + 16);
  if (!v83)
    goto LABEL_51;
  v84 = v80;
  v259 = v77;
  v85 = (char *)(v51 + 64);
  while (1)
  {
    v86 = *((_QWORD *)v85 - 2);
    v87 = *((_QWORD *)v85 - 1);
    v88 = *v85;
    v89 = *((_QWORD *)v85 - 4) == v84 && *((_QWORD *)v85 - 3) == v82;
    if (v89 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v85 += 40;
    if (!--v83)
      goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v86, v87, v88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2650924(v86, v87, v88);
  v91 = v90;
  v93 = v92;
  sub_1D253FBE8(v86, v87, v88);
  if ((v93 & 1) != 0)
    goto LABEL_62;
  v94 = sub_1D26CE0B8();
  v96 = v95;
  v97 = *(_QWORD *)(v51 + 16);
  if (!v97)
    goto LABEL_51;
  v98 = v94;
  v258 = v91;
  v99 = (char *)(v51 + 64);
  while (1)
  {
    v100 = *((_QWORD *)v99 - 2);
    v101 = *((_QWORD *)v99 - 1);
    v102 = *v99;
    v103 = *((_QWORD *)v99 - 4) == v98 && *((_QWORD *)v99 - 3) == v96;
    if (v103 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v99 += 40;
    if (!--v97)
      goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v100, v101, v102);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2650924(v100, v101, v102);
  v105 = v104;
  v107 = v106;
  sub_1D253FBE8(v100, v101, v102);
  if ((v107 & 1) != 0)
    goto LABEL_62;
  v108 = sub_1D26CE0B8();
  v110 = v109;
  v111 = *(_QWORD *)(v51 + 16);
  if (!v111)
  {
LABEL_51:
    swift_bridgeObjectRelease();
LABEL_62:
    swift_bridgeObjectRelease();
LABEL_63:
    if (qword_1ED962330 != -1)
      swift_once();
    v132 = sub_1D26CC09C();
    __swift_project_value_buffer(v132, (uint64_t)qword_1ED977D20);
    v133 = sub_1D26CC084();
    v134 = sub_1D26CDCEC();
    if (os_log_type_enabled(v133, v134))
    {
      v135 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v135 = 0;
      _os_log_impl(&dword_1D2531000, v133, v134, "Encountered malformed pairing relationship", v135, 2u);
      MEMORY[0x1D823A5E0](v135, -1, -1);
    }
LABEL_67:

    return;
  }
  v112 = v108;
  v257 = v105;
  v113 = (char *)(v51 + 64);
  while (1)
  {
    v114 = *((_QWORD *)v113 - 2);
    v115 = *((_QWORD *)v113 - 1);
    v116 = *v113;
    v117 = *((_QWORD *)v113 - 4) == v112 && *((_QWORD *)v113 - 3) == v110;
    if (v117 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v113 += 40;
    if (!--v111)
      goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v114, v115, v116);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2650924(v114, v115, v116);
  v119 = v118;
  v121 = v120;
  sub_1D253FBE8(v114, v115, v116);
  if ((v121 & 1) != 0)
    goto LABEL_62;
  v256 = v119;
  v122 = sub_1D26CE0B8();
  v124 = v123;
  v125 = *(_QWORD *)(v51 + 16);
  if (!v125)
  {
LABEL_61:
    swift_bridgeObjectRelease();
LABEL_75:
    _s9ChronoKit26RemoteActivitySubscriptionV2id10activityID12hostIdentity0G5Owner7metrics6family16subscriptionType12creationDateAC10Foundation4UUIDV_SS0A8Services012DeviceScopedJ0VyAO15TypedIdentifierVyAO0xO0O10WidgetHostOGGAC0D9OwnershipO0yB00D17MetricsDefinitionVA0_0D6FamilyOAC0deO0OAL0Q0VSgtcfcfA__0();
    v140 = v264;
    v139 = v295;
    goto LABEL_76;
  }
  v126 = v122;
  v127 = (char *)(v51 + 64);
  while (1)
  {
    v128 = *((_QWORD *)v127 - 2);
    v129 = *((_QWORD *)v127 - 1);
    v130 = *v127;
    v131 = *((_QWORD *)v127 - 4) == v126 && *((_QWORD *)v127 - 3) == v124;
    if (v131 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v127 += 40;
    if (!--v125)
      goto LABEL_61;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v128, v129, v130);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v128, v129, v130);
  v137 = v136;
  sub_1D253FBE8(v128, v129, v130);
  if (!v137)
    goto LABEL_75;
  v138 = (uint64_t)v270;
  sub_1D26CB9E8();
  swift_bridgeObjectRelease();
  v139 = v295;
  v140 = v264;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v295 + 48))(v138, 1, v264) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1D253703C(v138, &qword_1ED961B18);
    if (qword_1ED962330 != -1)
      swift_once();
    v141 = sub_1D26CC09C();
    __swift_project_value_buffer(v141, (uint64_t)qword_1ED977D20);
    v133 = sub_1D26CC084();
    v142 = sub_1D26CDCEC();
    if (os_log_type_enabled(v133, v142))
    {
      v143 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v143 = 0;
      _os_log_impl(&dword_1D2531000, v133, v142, "Encountered malformed relationship ID", v143, 2u);
      MEMORY[0x1D823A5E0](v143, -1, -1);
    }
    goto LABEL_67;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v292, v138, v140);
LABEL_76:
  v144 = v279;
  sub_1D26CB9E8();
  swift_bridgeObjectRelease();
  v145 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v139 + 48);
  if (v145(v144, 1, v140) == 1)
  {
    __break(1u);
    goto LABEL_138;
  }
  v261 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v145;
  v260 = *(void (**)(char *, char *, uint64_t))(v139 + 32);
  v260(v296, v144, v140);
  v146 = sub_1D26CE0B8();
  v148 = v147;
  v149 = *(_QWORD *)(v51 + 16);
  if (!v149)
  {
LABEL_85:
    swift_bridgeObjectRelease();
LABEL_88:
    swift_bridgeObjectRelease();
    v279 = 0;
    v159 = 0xE000000000000000;
    goto LABEL_89;
  }
  v150 = v146;
  v151 = (char *)(v51 + 64);
  while (1)
  {
    v152 = *((_QWORD *)v151 - 2);
    v153 = *((_QWORD *)v151 - 1);
    v154 = *v151;
    v155 = *((_QWORD *)v151 - 4) == v150 && *((_QWORD *)v151 - 3) == v148;
    if (v155 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v151 += 40;
    if (!--v149)
      goto LABEL_85;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v152, v153, v154);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v152, v153, v154);
  v157 = v156;
  v159 = v158;
  sub_1D253FBE8(v152, v153, v154);
  if (!v159)
    goto LABEL_88;
  v279 = v157;
LABEL_89:
  v160 = v297;
  v161 = v262;
  v162 = v259;
  v163 = v258;
  v164 = v256;
  v165 = v291;
  sub_1D26CBEE0();
  v166 = (unsigned int *)MEMORY[0x1E0D878C8];
  if (v257 != 1)
    v166 = (unsigned int *)MEMORY[0x1E0D878C0];
  (*(void (**)(char *, _QWORD, uint64_t))(v293 + 104))(v294, *v166, v263);
  v167 = *(void (**)(char *, char *, uint64_t))(v288 + 16);
  v167(v289, v165, v161);
  v167(v290, v165, v161);
  v168 = (unsigned int *)MEMORY[0x1E0D878F8];
  v270 = (char *)v159;
  switch(v164)
  {
    case 0:
      goto LABEL_94;
    case 1:
      v168 = (unsigned int *)MEMORY[0x1E0D87908];
      goto LABEL_94;
    case 2:
      v168 = (unsigned int *)MEMORY[0x1E0D87900];
      goto LABEL_94;
    case 3:
      v202 = sub_1D26CE0B8();
      v204 = v203;
      v205 = *(_QWORD *)(v51 + 16);
      if (!v205)
        goto LABEL_116;
      v206 = v202;
      v207 = (char *)(v51 + 64);
      break;
    default:
      swift_bridgeObjectRelease();
      v212 = *(void (**)(char *, uint64_t))(v288 + 8);
      v212(v290, v161);
      v212(v289, v161);
      if (qword_1ED962330 != -1)
        swift_once();
      v213 = sub_1D26CC09C();
      __swift_project_value_buffer(v213, (uint64_t)qword_1ED977D20);
      v214 = v295;
      v215 = v269;
      v216 = v264;
      (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v269, v296, v264);
      v217 = sub_1D26CC084();
      v218 = sub_1D26CDCEC();
      if (os_log_type_enabled(v217, v218))
      {
        v219 = swift_slowAlloc();
        v290 = (char *)swift_slowAlloc();
        v301 = v290;
        *(_DWORD *)v219 = 136446466;
        sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v220 = sub_1D26CE370();
        v300 = sub_1D2537880(v220, v221, (uint64_t *)&v301);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        v222 = *(void (**)(char *, uint64_t))(v214 + 8);
        v222(v215, v216);
        *(_WORD *)(v219 + 12) = 2082;
        LOBYTE(v300) = 4;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83420);
        v223 = sub_1D26CD98C();
        v300 = sub_1D2537880(v223, v224, (uint64_t *)&v301);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v217, v218, "Illegal state for %{public}s: %{public}s", (uint8_t *)v219, 0x16u);
        v225 = v290;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v225, -1, -1);
        MEMORY[0x1D823A5E0](v219, -1, -1);

        (*(void (**)(char *, uint64_t))(v293 + 8))(v294, v263);
        v212(v291, v262);
        v222(v296, v216);
        v222(v292, v216);
        return;
      }

      v198 = *(void (**)(char *, uint64_t))(v214 + 8);
      v198(v215, v216);
      (*(void (**)(char *, uint64_t))(v293 + 8))(v294, v263);
      v212(v291, v262);
      v198(v296, v216);
      v200 = v292;
      v201 = v216;
      goto LABEL_107;
  }
  while (1)
  {
    v208 = *((_QWORD *)v207 - 2);
    v209 = *((_QWORD *)v207 - 1);
    v210 = *v207;
    v211 = *((_QWORD *)v207 - 4) == v206 && *((_QWORD *)v207 - 3) == v204;
    if (v211 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v207 += 40;
    if (!--v205)
    {
LABEL_116:
      swift_bridgeObjectRelease();
      goto LABEL_129;
    }
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v208, v209, v210);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v208, v209, v210);
  v227 = v226;
  sub_1D253FBE8(v208, v209, v210);
  if (!v227)
  {
LABEL_129:
    swift_bridgeObjectRelease();
    v242 = *(void (**)(char *, uint64_t))(v288 + 8);
    v243 = v262;
    v242(v290, v262);
    v290 = (char *)v242;
    v242(v289, v243);
    if (qword_1ED962330 != -1)
      swift_once();
    v244 = sub_1D26CC09C();
    __swift_project_value_buffer(v244, (uint64_t)qword_1ED977D20);
    v245 = v295;
    v246 = v268;
    v237 = v264;
    (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v268, v296, v264);
    v232 = sub_1D26CC084();
    v233 = sub_1D26CDCEC();
    if (os_log_type_enabled(v232, v233))
    {
      v234 = (uint8_t *)swift_slowAlloc();
      v235 = swift_slowAlloc();
      v301 = (char *)v235;
      *(_DWORD *)v234 = 136446210;
      v289 = (char *)(v234 + 4);
      sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v247 = sub_1D26CE370();
      v300 = sub_1D2537880(v247, v248, (uint64_t *)&v301);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v240 = *(void (**)(char *, uint64_t))(v245 + 8);
      v240(v246, v237);
      v241 = "No migrating-from ID for %{public}s";
      goto LABEL_133;
    }

    v198 = *(void (**)(char *, uint64_t))(v245 + 8);
    v198(v246, v237);
    (*(void (**)(char *, uint64_t))(v293 + 8))(v294, v263);
    ((void (*)(char *, uint64_t))v290)(v291, v262);
    v198(v296, v237);
    v200 = v292;
    v201 = v237;
LABEL_107:
    v198(v200, v201);
    return;
  }
  v228 = (uint64_t)v267;
  sub_1D26CB9E8();
  swift_bridgeObjectRelease();
  if (v261(v228, 1, v264) != 1)
  {
    v249 = v265;
    v250 = v264;
    v251 = v260;
    v260(v265, v267, v264);
    v251(v287, v249, v250);
    v168 = (unsigned int *)MEMORY[0x1E0D87918];
    v160 = v297;
    v161 = v262;
    v162 = v259;
    v163 = v258;
LABEL_94:
    (*(void (**)(char *, _QWORD, uint64_t))(v285 + 104))(v287, *v168, v286);
    v169 = *(void (**)(char *, char *, uint64_t))(v295 + 16);
    v170 = v264;
    v169(v280, v296, v264);
    v169(v281, v292, v170);
    if ((v163 & 0x8000000000000000) == 0 && (v162 & 0x8000000000000000) == 0)
    {
      sub_1D26CBEE0();
      (*(void (**)(char *, char *, uint64_t))(v293 + 16))(v283, v294, v263);
      v171 = sub_1D26CBF7C();
      v172 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v273, 1, 1, v171);
      MEMORY[0x1E0C80A78](v172);
      v252 = 0xD000000000000011;
      v253 = 0x80000001D26DF8A0;
      v173 = v289;
      v254 = v289;
      v269 = (char *)sub_1D25C83E0((void (*)(_QWORD *))sub_1D2673B14, (uint64_t)(&v256 - 6), (uint64_t)&unk_1E93D0A98, (uint64_t)v299);
      swift_arrayDestroy();
      v174 = *(uint64_t (**)(char *, uint64_t))(v288 + 8);
      v175 = v174(v173, v161);
      MEMORY[0x1E0C80A78](v175);
      v252 = 0xD000000000000011;
      v253 = 0x80000001D26DF8A0;
      v176 = v290;
      v254 = v290;
      v177 = sub_1D25C8404((void (*)(_QWORD *))sub_1D2673B3C, (uint64_t)(&v256 - 6), (uint64_t)&unk_1E93D0A38, (uint64_t)v298);
      v297 = v160;
      swift_arrayDestroy();
      v290 = (char *)v174;
      v174(v176, v161);
      v178 = v272;
      (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v272, v287, v286);
      v254 = (char *)v177;
      v255 = v178;
      v179 = v278;
      sub_1D26CBF64();
      v180 = v277;
      v181 = *(void (**)(char *, char *, uint64_t))(v277 + 16);
      v182 = v275;
      v181(v284, v179, v275);
      v183 = v274;
      v184 = *v274;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v184 = sub_1D2562444(0, *(_QWORD *)(v184 + 16) + 1, 1, v184);
      v185 = v276;
      v187 = *(_QWORD *)(v184 + 16);
      v186 = *(_QWORD *)(v184 + 24);
      if (v187 >= v186 >> 1)
        v184 = sub_1D2562444(v186 > 1, v187 + 1, 1, v184);
      *(_QWORD *)(v184 + 16) = v187 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v180 + 32))(v184+ ((*(unsigned __int8 *)(v180 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v180 + 80))+ *(_QWORD *)(v180 + 72) * v187, v284, v182);
      *v183 = v184;
      if (qword_1ED962330 != -1)
        swift_once();
      v188 = sub_1D26CC09C();
      __swift_project_value_buffer(v188, (uint64_t)qword_1ED977D20);
      v181(v185, v179, v182);
      v189 = sub_1D26CC084();
      v190 = sub_1D26CDD04();
      if (os_log_type_enabled(v189, v190))
      {
        v289 = (char *)v181;
        v191 = (uint8_t *)swift_slowAlloc();
        v192 = swift_slowAlloc();
        v301 = (char *)v192;
        *(_DWORD *)v191 = 136315138;
        ((void (*)(char *, char *, uint64_t))v289)(v271, v185, v182);
        v193 = sub_1D26CD98C();
        v300 = sub_1D2537880(v193, v194, (uint64_t *)&v301);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        v195 = *(void (**)(char *, uint64_t))(v277 + 8);
        v195(v276, v182);
        _os_log_impl(&dword_1D2531000, v189, v190, "Parsed stored remote device: %s", v191, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v192, -1, -1);
        MEMORY[0x1D823A5E0](v191, -1, -1);

        v195(v278, v182);
      }
      else
      {

        v196 = *(void (**)(char *, uint64_t))(v180 + 8);
        v196(v185, v182);
        v196(v179, v182);
      }
      (*(void (**)(char *, uint64_t))(v285 + 8))(v287, v286);
      (*(void (**)(char *, uint64_t))(v293 + 8))(v294, v263);
      ((void (*)(char *, uint64_t))v290)(v291, v262);
      v197 = v296;
      v198 = *(void (**)(char *, uint64_t))(v295 + 8);
      v199 = v264;
      goto LABEL_106;
    }
LABEL_138:
    LODWORD(v254) = 0;
    v253 = 3451;
    LOBYTE(v252) = 2;
    sub_1D26CE1CC();
    __break(1u);
    JUMPOUT(0x1D2663B2CLL);
  }
  swift_bridgeObjectRelease();
  v229 = *(void (**)(char *, uint64_t))(v288 + 8);
  v230 = v262;
  v229(v290, v262);
  v290 = (char *)v229;
  v229(v289, v230);
  sub_1D253703C((uint64_t)v267, &qword_1ED961B18);
  if (qword_1ED962330 != -1)
    swift_once();
  v231 = sub_1D26CC09C();
  __swift_project_value_buffer(v231, (uint64_t)qword_1ED977D20);
  (*(void (**)(char *, char *, uint64_t))(v295 + 16))(v266, v296, v264);
  v232 = sub_1D26CC084();
  v233 = sub_1D26CDCEC();
  if (!os_log_type_enabled(v232, v233))
  {

    v198 = *(void (**)(char *, uint64_t))(v295 + 8);
    v199 = v264;
    v198(v266, v264);
    (*(void (**)(char *, uint64_t))(v293 + 8))(v294, v263);
    ((void (*)(char *, uint64_t))v290)(v291, v262);
    v197 = v296;
LABEL_106:
    v198(v197, v199);
    v200 = v292;
    v201 = v199;
    goto LABEL_107;
  }
  v234 = (uint8_t *)swift_slowAlloc();
  v235 = swift_slowAlloc();
  v301 = (char *)v235;
  *(_DWORD *)v234 = 136446210;
  sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v236 = v266;
  v237 = v264;
  v238 = sub_1D26CE370();
  v300 = sub_1D2537880(v238, v239, (uint64_t *)&v301);
  sub_1D26CDF50();
  swift_bridgeObjectRelease();
  v240 = *(void (**)(char *, uint64_t))(v295 + 8);
  v240(v236, v237);
  v241 = "Bad migrating-from ID for %{public}s";
LABEL_133:
  _os_log_impl(&dword_1D2531000, v232, v233, v241, v234, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x1D823A5E0](v235, -1, -1);
  MEMORY[0x1D823A5E0](v234, -1, -1);

  (*(void (**)(char *, uint64_t))(v293 + 8))(v294, v263);
  ((void (*)(char *, uint64_t))v290)(v291, v262);
  v240(v296, v237);
  v240(v292, v237);
}

uint64_t sub_1D2663B3C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t, uint64_t, char *))
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v11 = sub_1D26CBF04();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v14 = a1[1];
  (*(void (**)(char *, uint64_t))(v16 + 16))(v13, a4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a6(v15, v14, a2, a3, v13);
}

uint64_t sub_1D2663C14(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  char v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char v62;
  char v63;
  double v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  double v68;
  double v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char v75;
  char v76;
  double v77;
  double v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  char v82;
  char v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  char v87;
  char v88;
  uint64_t v89;
  _UNKNOWN **v90;
  id v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t result;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  __int128 v110;
  uint64_t v111;
  _UNKNOWN **v112;
  double v113;
  unint64_t v114;
  uint64_t v115;
  _UNKNOWN **v116;
  _QWORD v117[2];
  unint64_t v118;

  v101 = sub_1D26CB9DC();
  v99 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v100 = (char *)&v95 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D26CBF04();
  v107 = *(_QWORD *)(v3 - 8);
  v108 = v3;
  MEMORY[0x1E0C80A78](v3);
  v105 = (char *)&v95 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1D26CBF10();
  v5 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v7 = (char *)&v95 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CBA24();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v95 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D26CBF40();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = a1;
  sub_1D26CBF4C();
  v16 = (*(uint64_t (**)(char *, uint64_t))(v13 + 88))(v15, v12);
  v17 = *MEMORY[0x1E0D87918];
  v106 = v8;
  v104 = v9;
  if (v16 == v17)
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
    v95 = sub_1D26CB9F4();
    v97 = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v19 = 3;
LABEL_3:
    v98 = v19;
    goto LABEL_6;
  }
  if (v16 != *MEMORY[0x1E0D878F8])
  {
    if (v16 == *MEMORY[0x1E0D87908])
    {
      v95 = 0;
      v97 = 0;
      v19 = 1;
    }
    else
    {
      if (v16 != *MEMORY[0x1E0D87900])
        goto LABEL_26;
      v95 = 0;
      v97 = 0;
      v19 = 2;
    }
    goto LABEL_3;
  }
  v95 = 0;
  v97 = 0;
  v98 = 0;
LABEL_6:
  sub_1D26CBF1C();
  v20 = v103;
  v21 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v103);
  v22 = *MEMORY[0x1E0D878C8];
  v96 = v21;
  v13 = v22;
  if (v21 != (_DWORD)v22)
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
  v113 = 0.0;
  v114 = 0xE000000000000000;
  v23 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](147);
  *(double *)v117 = v113;
  v117[1] = v114;
  v118 = v23;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CBF28();
  v24 = sub_1D26CB9F4();
  v26 = v25;
  v27 = *(void (**)(char *, uint64_t))(v104 + 8);
  v28 = v106;
  v27(v11, v106);
  swift_bridgeObjectRetain();
  v29 = sub_1D253FC20(v24, v26);
  v31 = v30;
  v33 = v32;
  sub_1D2641480(v29, v30, v32);
  v34 = v33;
  v15 = v109;
  sub_1D253FBE8(v29, v31, v34);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CBF58();
  v35 = sub_1D26CB9F4();
  v37 = v36;
  v27(v11, v28);
  swift_bridgeObjectRetain();
  v38 = sub_1D253FC20(v35, v37);
  v40 = v39;
  v42 = v41;
  sub_1D2641480(v38, v39, v41);
  sub_1D253FBE8(v38, v40, v42);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v43 = sub_1D26CBF70();
  v45 = v44;
  swift_bridgeObjectRetain();
  v46 = sub_1D253FC20(v43, v45);
  v48 = v47;
  v50 = v49;
  sub_1D2641480(v46, v47, v49);
  sub_1D253FBE8(v46, v48, v50);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v51 = v105;
  sub_1D26CBF34();
  v12 = sub_1D26CBEF8();
  v52 = v108;
  v53 = *(void (**)(char *, uint64_t))(v107 + 8);
  v53(v51, v108);
  if (v12 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v54 = sub_1D253FA04(v12);
  v56 = v55;
  v58 = v57;
  sub_1D2641480(v54, v55, v57);
  sub_1D253FBE8(v54, v56, v58);
  sub_1D26CDA04();
  sub_1D26CBF34();
  v12 = sub_1D26CBEEC();
  v53(v51, v52);
  if (v12 < 0)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v59 = sub_1D253FA04(v12);
  v61 = v60;
  v63 = v62;
  sub_1D2641480(v59, v60, v62);
  sub_1D253FBE8(v59, v61, v63);
  sub_1D26CDA04();
  v64 = 0.0;
  v65 = MEMORY[0x1E0DEB070];
  if (v96 == (_DWORD)v13)
    v64 = 1.0;
  v115 = MEMORY[0x1E0DEB070];
  v116 = &off_1E93D5370;
  v113 = v64;
  v66 = __swift_project_boxed_opaque_existential_0(&v113, MEMORY[0x1E0DEB070]);
  sub_1D2641654((uint64_t)v66, (uint64_t)v117, v65, (uint64_t)&off_1E93D5370);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
  sub_1D26CDA04();
  v67 = v100;
  sub_1D26CB9B8();
  sub_1D26CB994();
  v69 = v68;
  v70 = *(void (**)(char *, uint64_t))(v99 + 8);
  v71 = v101;
  v70(v67, v101);
  v72 = sub_1D25410E8(v69);
  v74 = v73;
  v76 = v75;
  sub_1D2641480(v72, v73, v75);
  sub_1D253FBE8(v72, v74, v76);
  sub_1D26CDA04();
  sub_1D26CB9B8();
  sub_1D26CB994();
  v78 = v77;
  v70(v67, v71);
  v79 = sub_1D25410E8(v78);
  v81 = v80;
  v83 = v82;
  sub_1D2641480(v79, v80, v82);
  sub_1D253FBE8(v79, v81, v83);
  sub_1D26CDA04();
  v84 = sub_1D253FA04(v98);
  v86 = v85;
  v88 = v87;
  sub_1D2641480(v84, v85, v87);
  sub_1D253FBE8(v84, v86, v88);
  sub_1D26CDA04();
  v13 = v97;
  if (v97)
  {
    v111 = MEMORY[0x1E0DEA968];
    v112 = &off_1E93D5368;
    *(_QWORD *)&v110 = v95;
    *((_QWORD *)&v110 + 1) = v97;
    sub_1D2538F38(&v110, (uint64_t)&v113);
    v89 = v115;
    v90 = v116;
  }
  else
  {
    v91 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v89 = sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
    v90 = &off_1E93D56A0;
    v115 = v89;
    v116 = &off_1E93D56A0;
    v113 = *(double *)&v91;
  }
  v92 = __swift_project_boxed_opaque_existential_0(&v113, v89);
  sub_1D2641654((uint64_t)v92, (uint64_t)v117, v89, (uint64_t)v90);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
  sub_1D26CDA04();
  v12 = v118;
  if (!swift_weakLoadStrong())
  {
    while (1)
    {
LABEL_25:
      v16 = sub_1D26CE1D8();
      __break(1u);
LABEL_26:
      if (v16 != *MEMORY[0x1E0D87910])
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    }
  }
  v93 = v102;
  sub_1D2557230(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v93)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D2664774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t result;
  uint64_t v17;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](24);
  v17 = v7;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v8 = sub_1D26CB9F4();
  v10 = v9;
  swift_bridgeObjectRetain();
  v11 = sub_1D253FC20(v8, v10);
  v13 = v12;
  v15 = v14;
  sub_1D2641480(v11, v12, v14);
  sub_1D253FBE8(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D26649E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](13);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1D2664B94()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  unint64_t v9[2];

  v9[0] = 0;
  v9[1] = 0xE000000000000000;
  v1 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](40);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    v3 = sub_1D2557230(v2);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      v5 = v3;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9[0] = v1;
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        for (i = 0; i != v6; ++i)
        {
          v8 = *(_QWORD *)(v5 + 8 * i + 32);
          swift_bridgeObjectRetain();
          sub_1D2664EBC(v9, &v8);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease_n();
        return v9[0];
      }
      else
      {
        swift_bridgeObjectRelease();
        return MEMORY[0x1E0DEE9D8];
      }
    }
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

void sub_1D2664EBC(unint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;
  char v47;
  BOOL v48;
  unint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  id v67;
  char v68;
  unint64_t *v69;
  uint64_t v70;
  char v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  _BOOL4 v78;
  uint64_t v79;
  id v80;
  uint8_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  unint64_t *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;

  v91 = type metadata accessor for WidgetExtensionInfo();
  v5 = *(_QWORD *)(v91 - 8);
  v6 = MEMORY[0x1E0C80A78](v91);
  v90 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v82 - v8;
  v10 = *a2;
  v11 = sub_1D26CE0B8();
  v13 = v12;
  v14 = *(_QWORD *)(v10 + 16);
  if (!v14)
    goto LABEL_35;
  v15 = v11;
  v87 = v5;
  v88 = a1;
  v89 = v9;
  v94 = v2;
  v16 = (char *)(v10 + 64);
  while (1)
  {
    v17 = *((_QWORD *)v16 - 2);
    v18 = *((_QWORD *)v16 - 1);
    v19 = *v16;
    v20 = *((_QWORD *)v16 - 4) == v15 && *((_QWORD *)v16 - 3) == v13;
    if (v20 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v16 += 40;
    if (!--v14)
      goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v17, v18, v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v17, v18, v19);
  v22 = v21;
  v24 = v23;
  sub_1D253FBE8(v17, v18, v19);
  if (!v24)
    goto LABEL_36;
  v25 = sub_1D26CE0B8();
  v27 = v26;
  v28 = *(_QWORD *)(v10 + 16);
  if (!v28)
  {
LABEL_34:
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRelease();
LABEL_36:
    if (qword_1ED962330 != -1)
      swift_once();
    v50 = sub_1D26CC09C();
    __swift_project_value_buffer(v50, (uint64_t)qword_1ED977D20);
    v51 = sub_1D26CC084();
    v52 = sub_1D26CDCEC();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v53 = 0;
      _os_log_impl(&dword_1D2531000, v51, v52, "Encountered malformed remote extension", v53, 2u);
      MEMORY[0x1D823A5E0](v53, -1, -1);
    }

    return;
  }
  v29 = v25;
  v85 = v22;
  v86 = v24;
  v30 = (char *)(v10 + 64);
  while (1)
  {
    v31 = *((_QWORD *)v30 - 2);
    v32 = *((_QWORD *)v30 - 1);
    v33 = *v30;
    v34 = *((_QWORD *)v30 - 4) == v29 && *((_QWORD *)v30 - 3) == v27;
    if (v34 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v30 += 40;
    if (!--v28)
      goto LABEL_34;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v31, v32, v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v31, v32, v33);
  v36 = v35;
  v38 = v37;
  sub_1D253FBE8(v31, v32, v33);
  if (!v38)
    goto LABEL_35;
  v84 = v36;
  v39 = sub_1D26CE0B8();
  v41 = v40;
  v42 = *(_QWORD *)(v10 + 16);
  if (!v42)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    goto LABEL_34;
  }
  v43 = v39;
  v44 = (char *)(v10 + 64);
  while (1)
  {
    v45 = *((_QWORD *)v44 - 2);
    v46 = *((_QWORD *)v44 - 1);
    v47 = *v44;
    v48 = *((_QWORD *)v44 - 4) == v43 && *((_QWORD *)v44 - 3) == v41;
    if (v48 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v44 += 40;
    if (!--v42)
      goto LABEL_31;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v45, v46, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2650688(v45, v46, v47);
  sub_1D253FBE8(v45, v46, v47);
  v49 = v93;
  if (v93 >> 60 == 15)
    goto LABEL_34;
  v54 = v92;
  sub_1D26CDE54();
  v55 = (void *)sub_1D26CDE30();
  v56 = v94;
  if (v55)
  {
    v57 = v55;
    if ((objc_msgSend(v55, sel_isRemote) & 1) != 0)
    {
      sub_1D26CB5BC();
      swift_allocObject();
      sub_1D26CB5B0();
      sub_1D25369B0(&qword_1EFC83410, (uint64_t (*)(uint64_t))type metadata accessor for WidgetExtensionInfo, (uint64_t)&protocol conformance descriptor for WidgetExtensionInfo);
      v58 = (uint64_t)v89;
      sub_1D26CB5A4();
      if (v56)
      {
        sub_1D2541EBC(v54, v49);
        swift_release();

        swift_bridgeObjectRelease();
        return;
      }
      swift_release();
      sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
      v67 = *(id *)v58;
      v68 = sub_1D26CDECC();

      v83 = v54;
      v86 = v57;
      if ((v68 & 1) != 0)
      {
        if (*(_QWORD *)(v58 + 8) == v84 && v38 == *(_QWORD *)(v58 + 16))
        {
          swift_bridgeObjectRelease();
          v69 = v88;
          v70 = (uint64_t)v90;
LABEL_61:
          sub_1D2534120(v58, v70, (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
          v72 = *v69;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v72 = sub_1D2562458(0, *(_QWORD *)(v72 + 16) + 1, 1, v72);
          v74 = *(_QWORD *)(v72 + 16);
          v73 = *(_QWORD *)(v72 + 24);
          if (v74 >= v73 >> 1)
            v72 = sub_1D2562458(v73 > 1, v74 + 1, 1, v72);
          *(_QWORD *)(v72 + 16) = v74 + 1;
          sub_1D2539ADC(v70, v72+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(_QWORD *)(v87 + 72) * v74, (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
          sub_1D2541EBC(v83, v49);

          *v69 = v72;
          sub_1D25340E4(v58, (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
          return;
        }
        v71 = sub_1D26CE3D0();
        swift_bridgeObjectRelease();
        v69 = v88;
        v70 = (uint64_t)v90;
        if ((v71 & 1) != 0)
          goto LABEL_61;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      if (qword_1ED962330 != -1)
        swift_once();
      v75 = sub_1D26CC09C();
      __swift_project_value_buffer(v75, (uint64_t)qword_1ED977D20);
      v76 = sub_1D26CC084();
      v77 = sub_1D26CDCEC();
      v78 = os_log_type_enabled(v76, v77);
      v79 = v83;
      v80 = v86;
      if (v78)
      {
        v81 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v81 = 0;
        _os_log_impl(&dword_1D2531000, v76, v77, "Unexpected mismatch in serialized info", v81, 2u);
        MEMORY[0x1D823A5E0](v81, -1, -1);
      }
      sub_1D2541EBC(v79, v49);

      sub_1D25340E4(v58, (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1ED962330 != -1)
        swift_once();
      v63 = sub_1D26CC09C();
      __swift_project_value_buffer(v63, (uint64_t)qword_1ED977D20);
      v64 = sub_1D26CC084();
      v65 = sub_1D26CDCEC();
      if (os_log_type_enabled(v64, v65))
      {
        v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v66 = 0;
        _os_log_impl(&dword_1D2531000, v64, v65, "Encountered non-remote extension", v66, 2u);
        MEMORY[0x1D823A5E0](v66, -1, -1);
        sub_1D2541EBC(v54, v49);

      }
      else
      {
        sub_1D2541EBC(v54, v49);

      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    if (qword_1ED962330 != -1)
      swift_once();
    v59 = sub_1D26CC09C();
    __swift_project_value_buffer(v59, (uint64_t)qword_1ED977D20);
    v60 = sub_1D26CC084();
    v61 = sub_1D26CDCEC();
    if (os_log_type_enabled(v60, v61))
    {
      v62 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v62 = 0;
      _os_log_impl(&dword_1D2531000, v60, v61, "Encountered malformed extension identity", v62, 2u);
      MEMORY[0x1D823A5E0](v62, -1, -1);
    }
    sub_1D2541EBC(v54, v49);

  }
}

uint64_t ChronoMetadataStore.RemoteExtensionStore.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

unint64_t sub_1D266579C()
{
  return sub_1D2664B94();
}

uint64_t sub_1D26657C0(uint64_t a1)
{
  return ChronoMetadataStore.MutableRemoteExtensionStore.update(remoteWidgetExtensionInfo:)(a1);
}

uint64_t sub_1D26657E0(void *a1)
{
  return ChronoMetadataStore.MutableRemoteExtensionStore.removeExtension(with:)(a1);
}

void sub_1D2665800()
{
  ChronoMetadataStore.MutableRemoteExtensionStore.removeAllExtensions()();
}

uint64_t sub_1D2665820(uint64_t a1, char a2, uint64_t (*a3)(_QWORD *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  uint64_t result;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  unint64_t v48;
  _QWORD v50[4];

  v50[3] = a4;
  if (a1 < 0)
    goto LABEL_42;
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = MEMORY[0x1E0DEE9D8];
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = 15;
  v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (v12 = HIBYTE(a6) & 0xF) : (v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0)
      v11 = a5 & 0xFFFFFFFFFFFFLL;
    v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0)
      v30 = 11;
    sub_1D2665CBC(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    v13 = *(_QWORD **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  v42 = a1;
  v43 = v10;
  v48 = 4 * v12;
  v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v14 = 15;
  v15 = 15;
  v16 = 15;
  while (1)
  {
    v50[0] = sub_1D26CDA34();
    v50[1] = v17;
    v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) != 0)
      break;
    v14 = sub_1D26CD9EC();
LABEL_9:
    if (v48 == v14 >> 14)
      goto LABEL_29;
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    v14 = sub_1D26CD9EC();
    *(_QWORD *)(v47 + 16) = v14;
    v15 = v14;
    v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14)
    goto LABEL_41;
  v20 = sub_1D26CDA40();
  v44 = v21;
  v45 = v20;
  v23 = v22;
  v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v13 = sub_1D25620AC(0, v13[2] + 1, 1, v13);
  v27 = v13[2];
  v26 = v13[3];
  if (v27 >= v26 >> 1)
    v13 = sub_1D25620AC((_QWORD *)(v26 > 1), v27 + 1, 1, v13);
  v13[2] = v27 + 1;
  v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(_QWORD *)(v43 + 16) = v13;
  v29 = sub_1D26CD9EC();
  v14 = v29;
  *(_QWORD *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    v15 = v29;
    v16 = v29;
    goto LABEL_9;
  }
  v16 = v29;
  v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    v31 = sub_1D26CDA40();
    v33 = v32;
    v35 = v34;
    v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_1D25620AC(0, v13[2] + 1, 1, v13);
    v39 = v13[2];
    v38 = v13[3];
    if (v39 >= v38 >> 1)
      v13 = sub_1D25620AC((_QWORD *)(v38 > 1), v39 + 1, 1, v13);
    v13[2] = v39 + 1;
    v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(_QWORD *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_1D26CE1CC();
  __break(1u);
LABEL_42:
  result = sub_1D26CE1CC();
  __break(1u);
  return result;
}

uint64_t sub_1D2665CBC(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t result;

  v4 = *(_QWORD *)(a2 + 16) >> 14;
  v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1)
    return v5 ^ 1u;
  if (a1 >> 14 >= v4)
  {
    v7 = sub_1D26CDA40();
    v9 = v8;
    v11 = v10;
    v13 = v12;
    v14 = *(_QWORD **)(a4 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v14 = sub_1D25620AC(0, v14[2] + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v17 = v14[2];
    v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      v14 = sub_1D25620AC((_QWORD *)(v16 > 1), v17 + 1, 1, v14);
      *(_QWORD *)(a4 + 16) = v14;
    }
    v14[2] = v17 + 1;
    v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  result = sub_1D26CE1CC();
  __break(1u);
  return result;
}

uint64_t sub_1D2665E14(id *a1, __int128 *a2, _QWORD *a3)
{
  id v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  sub_1D26CE460();
  v6 = *a1;
  sub_1D26CDED8();

  type metadata accessor for ActivityKey(0);
  sub_1D26CBAF0();
  sub_1D25369B0(&qword_1ED962FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F840]);
  sub_1D26CD8D8();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  sub_1D26CD65C();
  sub_1D25369B0(&qword_1ED963218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0938]);
  sub_1D26CD8D8();
  type metadata accessor for ActivityVariantKey(0);
  sub_1D26CD3F8();
  sub_1D25369B0(&qword_1ED962928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF01F8]);
  sub_1D26CD8D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
  sub_1D26CD8D8();
  sub_1D26CE49C();
  v8 = sub_1D26CDFF8();
  *(_QWORD *)((char *)a3 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v8;
  sub_1D2673BA8((uint64_t)a1, a3[6] + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v8);
  result = sub_1D2538F38(a2, a3[7] + 40 * v8);
  ++a3[2];
  return result;
}

uint64_t sub_1D2666058(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9622F8);
  v40 = a2;
  v6 = sub_1D26CE208();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = *(_QWORD *)(v5 + 56) + 24 * v21;
      v34 = *(_QWORD *)v32;
      v33 = *(_QWORD *)(v32 + 8);
      v35 = *(_BYTE *)(v32 + 16);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1D2541E98(v34, v33, v35);
      }
      sub_1D26CE460();
      sub_1D26CD9D4();
      result = sub_1D26CE49C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = *(_QWORD *)(v7 + 56) + 24 * v17;
      *(_QWORD *)v19 = v34;
      *(_QWORD *)(v19 + 8) = v33;
      *(_BYTE *)(v19 + 16) = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D2666380(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0E0);
  v35 = a2;
  v6 = sub_1D26CE208();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1D2538448(v22, v36);
    }
    else
    {
      sub_1D2537950((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1D26CD938();
    sub_1D26CE460();
    sub_1D26CD9D4();
    v24 = sub_1D26CE49C();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1D2538448(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D26666B8(uint64_t a1, int a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (**v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  int64_t v51;
  _QWORD *v52;
  void (**v53)(char *, unint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t (**v58)(unint64_t, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;

  v4 = sub_1D26CD56C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v50 = v2;
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D558);
  v57 = a2;
  v12 = sub_1D26CE208();
  v13 = (_QWORD *)v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 64);
    v52 = (_QWORD *)(v11 + 64);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v51 = (unint64_t)(v14 + 63) >> 6;
    v53 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v58 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
    v18 = v12 + 64;
    result = swift_retain();
    v20 = 0;
    v54 = v11;
    while (1)
    {
      if (v17)
      {
        v60 = (v17 - 1) & v17;
        v23 = __clz(__rbit64(v17)) | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v24 >= v51)
          goto LABEL_34;
        v25 = v52[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v51)
            goto LABEL_34;
          v25 = v52[v20];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v51)
            {
LABEL_34:
              swift_release();
              v47 = v50;
              if ((v57 & 1) != 0)
              {
                v48 = 1 << *(_BYTE *)(v11 + 32);
                if (v48 >= 64)
                  bzero(v52, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v52 = -1 << v48;
                *(_QWORD *)(v11 + 16) = 0;
              }
              result = swift_release();
              goto LABEL_41;
            }
            v25 = v52[v26];
            if (!v25)
            {
              while (1)
              {
                v20 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_43;
                if (v20 >= v51)
                  goto LABEL_34;
                v25 = v52[v20];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v20 = v26;
          }
        }
LABEL_21:
        v60 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = *(_QWORD *)(v55 + 72);
      v28 = *(_QWORD *)(v11 + 48) + v27 * v23;
      v61 = v20;
      v59 = v27;
      if ((v57 & 1) != 0)
      {
        sub_1D2539ADC(v28, (uint64_t)v10, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        v29 = (void (**)(char *, unint64_t, uint64_t))v58;
      }
      else
      {
        sub_1D2534120(v28, (uint64_t)v10, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        v29 = v53;
      }
      v30 = *(_QWORD *)(v11 + 56);
      v31 = v5;
      v32 = *(_QWORD *)(v5 + 72);
      v33 = v7;
      v34 = v4;
      (*v29)(v7, v30 + v32 * v23, v4);
      sub_1D26CE460();
      sub_1D26CB9DC();
      sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
      sub_1D26CD8D8();
      sub_1D26CD1DC();
      sub_1D25369B0(&qword_1ED96D4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC70]);
      sub_1D26CD8D8();
      v35 = v13;
      v37 = v10[3];
      v36 = v10[4];
      __swift_project_boxed_opaque_existential_0(v10, v37);
      v38 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v36 + 16);
      v39 = v36;
      v13 = v35;
      v38(&v62, v37, v39);
      sub_1D26CE46C();
      result = sub_1D26CE49C();
      v40 = -1 << *((_BYTE *)v35 + 32);
      v41 = result & ~v40;
      v42 = v41 >> 6;
      if (((-1 << v41) & ~*(_QWORD *)(v18 + 8 * (v41 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v41) & ~*(_QWORD *)(v18 + 8 * (v41 >> 6)))) | v41 & 0x7FFFFFFFFFFFFFC0;
        v4 = v34;
        v5 = v31;
        v7 = v33;
      }
      else
      {
        v43 = 0;
        v44 = (unint64_t)(63 - v40) >> 6;
        v4 = v34;
        v5 = v31;
        v7 = v33;
        do
        {
          if (++v42 == v44 && (v43 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v45 = v42 == v44;
          if (v42 == v44)
            v42 = 0;
          v43 |= v45;
          v46 = *(_QWORD *)(v18 + 8 * v42);
        }
        while (v46 == -1);
        v21 = __clz(__rbit64(~v46)) + (v42 << 6);
      }
      v22 = v59;
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      sub_1D2539ADC((uint64_t)v10, v13[6] + v22 * v21, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      result = (*v58)(v13[7] + v32 * v21, v7, v4);
      ++v13[2];
      v11 = v54;
      v17 = v60;
      v20 = v61;
    }
  }
  result = swift_release();
  v47 = v50;
LABEL_41:
  *v47 = v13;
  return result;
}

uint64_t sub_1D2666B98(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0C0);
  v6 = sub_1D26CE208();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v13 << 6);
      }
      else
      {
        v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33)
          goto LABEL_34;
        v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          v13 = v18 + 1;
          if (v18 + 1 >= v33)
            goto LABEL_34;
          v19 = v34[v13];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 >= 64)
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v34 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                v13 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_41;
                if (v13 >= v33)
                  goto LABEL_34;
                v19 = v34[v13];
                ++v20;
                if (v19)
                  goto LABEL_21;
              }
            }
            v13 = v20;
          }
        }
LABEL_21:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      v21 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v17);
      v23 = *v21;
      v22 = v21[1];
      v24 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v17);
      if ((a2 & 1) != 0)
      {
        sub_1D2538448(v24, v35);
      }
      else
      {
        sub_1D2537950((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1D26CE460();
      sub_1D26CD9D4();
      result = sub_1D26CE49C();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      v15 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v14);
      *v15 = v23;
      v15[1] = v22;
      result = (uint64_t)sub_1D2538448(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D2666E94(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  void *v21;
  _OWORD *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  char v35;
  _OWORD v36[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0D8);
  v35 = a2;
  v6 = sub_1D26CE208();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v34 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v33 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33)
      break;
    v18 = (_QWORD *)(v5 + 64);
    v19 = *(_QWORD *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      v13 = v17 + 1;
      if (v17 + 1 >= v33)
        goto LABEL_34;
      v19 = *(_QWORD *)(v34 + 8 * v13);
      if (!v19)
      {
        v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v19 = *(_QWORD *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            v13 = v20 + 1;
            if (__OFADD__(v20, 1))
              goto LABEL_43;
            if (v13 >= v33)
              goto LABEL_34;
            v19 = *(_QWORD *)(v34 + 8 * v13);
            ++v20;
            if (v19)
              goto LABEL_21;
          }
        }
        v13 = v20;
      }
    }
LABEL_21:
    v10 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    v21 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * v16);
    if ((v35 & 1) != 0)
    {
      sub_1D2538448(v22, v36);
    }
    else
    {
      sub_1D2537950((uint64_t)v22, (uint64_t)v36);
      v23 = v21;
    }
    sub_1D26CD938();
    sub_1D26CE460();
    sub_1D26CD9D4();
    v24 = sub_1D26CE49C();
    result = swift_bridgeObjectRelease();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = v24 & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      v14 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v14) = v21;
    result = (uint64_t)sub_1D2538448(v36, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v14));
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v18 = (_QWORD *)(v5 + 64);
  if ((v35 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v18 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D26671CC(uint64_t a1, int a2)
{
  return sub_1D2667764(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED962128);
}

uint64_t sub_1D26671E0(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26[2];

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (id *)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963240);
  v10 = (_QWORD *)sub_1D26CE208();
  if (*(_QWORD *)(v9 + 16))
  {
    v25 = v3;
    v11 = 1 << *(_BYTE *)(v9 + 32);
    v12 = (_QWORD *)(v9 + 64);
    v13 = -1;
    if (v11 < 64)
      v13 = ~(-1 << v11);
    v14 = v13 & *(_QWORD *)(v9 + 64);
    v15 = (unint64_t)(v11 + 63) >> 6;
    result = swift_retain();
    v17 = 0;
    while (1)
    {
      if (v14)
      {
        v18 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v19 = v18 | (v17 << 6);
      }
      else
      {
        v20 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v20 >= v15)
          goto LABEL_23;
        v21 = v12[v20];
        ++v17;
        if (!v21)
        {
          v17 = v20 + 1;
          if (v20 + 1 >= v15)
            goto LABEL_23;
          v21 = v12[v17];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v3 = v25;
                goto LABEL_30;
              }
              v24 = 1 << *(_BYTE *)(v9 + 32);
              if (v24 >= 64)
                bzero((void *)(v9 + 64), ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v12 = -1 << v24;
              v3 = v25;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v21 = v12[v22];
            if (!v21)
            {
              while (1)
              {
                v17 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_32;
                if (v17 >= v15)
                  goto LABEL_23;
                v21 = v12[v17];
                ++v22;
                if (v21)
                  goto LABEL_20;
              }
            }
            v17 = v22;
          }
        }
LABEL_20:
        v14 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v17 << 6);
      }
      v23 = *(_QWORD *)(v9 + 48) + *(_QWORD *)(v6 + 72) * v19;
      if ((a2 & 1) != 0)
      {
        sub_1D2673BA8(v23, (uint64_t)v8);
        sub_1D2538F38((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v19), (uint64_t)v26);
      }
      else
      {
        sub_1D2537078(v23, (uint64_t)v8, &qword_1ED963110);
        sub_1D2538510(*(_QWORD *)(v9 + 56) + 40 * v19, (uint64_t)v26);
      }
      result = sub_1D2665E14(v8, v26, v10);
    }
  }
  result = swift_release();
LABEL_30:
  *v3 = v10;
  return result;
}

uint64_t sub_1D2667450(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963248);
  v36 = a2;
  v6 = sub_1D26CE208();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1D26CE460();
    sub_1D26CD9D4();
    result = sub_1D26CE49C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D2667764(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  int v46;
  char *v47;
  uint64_t v48;

  v6 = v4;
  v48 = a3(0);
  v8 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)&v42 - v9;
  v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v46 = a2;
  v11 = sub_1D26CE208();
  v12 = v11;
  if (*(_QWORD *)(v10 + 16))
  {
    v43 = v4;
    v13 = 1 << *(_BYTE *)(v10 + 32);
    v14 = *(_QWORD *)(v10 + 64);
    v45 = (_QWORD *)(v10 + 64);
    if (v13 < 64)
      v15 = ~(-1 << v13);
    else
      v15 = -1;
    v16 = v15 & v14;
    v44 = (unint64_t)(v13 + 63) >> 6;
    v17 = v11 + 64;
    result = swift_retain();
    v19 = 0;
    while (1)
    {
      if (v16)
      {
        v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v23 = v22 | (v19 << 6);
      }
      else
      {
        v24 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v44)
          goto LABEL_34;
        v25 = v45[v24];
        ++v19;
        if (!v25)
        {
          v19 = v24 + 1;
          if (v24 + 1 >= v44)
            goto LABEL_34;
          v25 = v45[v19];
          if (!v25)
          {
            v26 = v24 + 2;
            if (v26 >= v44)
            {
LABEL_34:
              swift_release();
              v6 = v43;
              if ((v46 & 1) != 0)
              {
                v41 = 1 << *(_BYTE *)(v10 + 32);
                if (v41 >= 64)
                  bzero(v45, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v45 = -1 << v41;
                *(_QWORD *)(v10 + 16) = 0;
              }
              break;
            }
            v25 = v45[v26];
            if (!v25)
            {
              while (1)
              {
                v19 = v26 + 1;
                if (__OFADD__(v26, 1))
                  goto LABEL_41;
                if (v19 >= v44)
                  goto LABEL_34;
                v25 = v45[v19];
                ++v26;
                if (v25)
                  goto LABEL_21;
              }
            }
            v19 = v26;
          }
        }
LABEL_21:
        v16 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v19 << 6);
      }
      v27 = *(_QWORD *)(v10 + 56);
      v28 = v10;
      v29 = (uint64_t *)(*(_QWORD *)(v10 + 48) + 16 * v23);
      v31 = *v29;
      v30 = v29[1];
      v32 = *(_QWORD *)(v8 + 72);
      v33 = v27 + v32 * v23;
      if ((v46 & 1) != 0)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v47, v33, v48);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v47, v33, v48);
        swift_bridgeObjectRetain();
      }
      sub_1D26CE460();
      sub_1D26CD9D4();
      result = sub_1D26CE49C();
      v34 = -1 << *(_BYTE *)(v12 + 32);
      v35 = result & ~v34;
      v36 = v35 >> 6;
      if (((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6))) != 0)
      {
        v20 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v17 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v37 = 0;
        v38 = (unint64_t)(63 - v34) >> 6;
        do
        {
          if (++v36 == v38 && (v37 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v39 = v36 == v38;
          if (v36 == v38)
            v36 = 0;
          v37 |= v39;
          v40 = *(_QWORD *)(v17 + 8 * v36);
        }
        while (v40 == -1);
        v20 = __clz(__rbit64(~v40)) + (v36 << 6);
      }
      *(_QWORD *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      v21 = (_QWORD *)(*(_QWORD *)(v12 + 48) + 16 * v20);
      *v21 = v31;
      v21[1] = v30;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v12 + 56) + v32 * v20, v47, v48);
      ++*(_QWORD *)(v12 + 16);
      v10 = v28;
    }
  }
  result = swift_release();
  *v6 = v12;
  return result;
}

uint64_t sub_1D2667AC8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  int64_t v49;
  char *v50;
  uint64_t v51;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963940);
  v48 = a2;
  v10 = sub_1D26CE208();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v50 = v8;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v45 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v43 = v2;
  v44 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  v46 = v9;
  v47 = v6;
  v51 = v5;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v18 << 6);
      goto LABEL_22;
    }
    v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v44)
      break;
    v24 = v45;
    v25 = v45[v23];
    ++v18;
    if (!v25)
    {
      v18 = v23 + 1;
      if (v23 + 1 >= v44)
        goto LABEL_34;
      v25 = v45[v18];
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v44)
        {
LABEL_34:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v25 = v45[v26];
        if (!v25)
        {
          while (1)
          {
            v18 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_43;
            if (v18 >= v44)
              goto LABEL_34;
            v25 = v45[v18];
            ++v26;
            if (v25)
              goto LABEL_21;
          }
        }
        v18 = v26;
      }
    }
LABEL_21:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v18 << 6);
LABEL_22:
    v27 = *(_QWORD *)(v6 + 72);
    v28 = *(_QWORD *)(v9 + 48) + v27 * v22;
    v49 = v18;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v50, v28, v51);
      v29 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 24 * v22);
      v30 = *v29;
      v31 = v29[1];
      v32 = v29[2];
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v50, v28, v51);
      v33 = (uint64_t *)(*(_QWORD *)(v9 + 56) + 24 * v22);
      v30 = *v33;
      v31 = v33[1];
      v32 = v33[2];
      sub_1D253FE08(*v33, v31);
      swift_bridgeObjectRetain();
    }
    sub_1D2536488(&qword_1ED9632E8, &qword_1ED9632F8, MEMORY[0x1E0D0F978]);
    result = sub_1D26CD8CC();
    v34 = -1 << *(_BYTE *)(v11 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v16 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
      v6 = v47;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      v6 = v47;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v16 + 8 * v36);
      }
      while (v40 == -1);
      v19 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v27 * v19, v50, v51);
    v20 = (uint64_t *)(*(_QWORD *)(v11 + 56) + 24 * v19);
    *v20 = v30;
    v20[1] = v31;
    v20[2] = v32;
    ++*(_QWORD *)(v11 + 16);
    v9 = v46;
    v18 = v49;
  }
  swift_release();
  v3 = v43;
  v24 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v9 + 32);
  if (v41 >= 64)
    bzero(v24, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v41;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1D2667EAC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1D26CBA24();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83448);
  v11 = sub_1D26CE208();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1D2536488(&qword_1ED963318, &qword_1ED96FE70, MEMORY[0x1E0D0F978]);
    result = sub_1D26CD8CC();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1D26682A8(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963950);
  v40 = a2;
  v10 = sub_1D26CE208();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_1D2538F38((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_1D2538510(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_1D2536488((unint64_t *)&unk_1ED963370, &qword_1ED9633A0, MEMORY[0x1E0D0FB50]);
    result = sub_1D26CD8CC();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_1D2538F38(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1D2668654(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;

  v3 = v2;
  v5 = type metadata accessor for RemoteActivityArchiveBudget();
  v42 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83408);
  v43 = a2;
  v9 = sub_1D26CE208();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v41 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = v2;
  v40 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40)
      break;
    v23 = v41;
    v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      v17 = v22 + 1;
      if (v22 + 1 >= v40)
        goto LABEL_34;
      v24 = v41[v17];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          v3 = v39;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            v17 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v17 >= v40)
              goto LABEL_34;
            v24 = v41[v17];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v17 = v25;
      }
    }
LABEL_21:
    v14 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    v26 = (uint64_t *)(*(_QWORD *)(v8 + 48) + 16 * v21);
    v28 = *v26;
    v27 = v26[1];
    v29 = *(_QWORD *)(v42 + 72);
    v30 = *(_QWORD *)(v8 + 56) + v29 * v21;
    if ((v43 & 1) != 0)
    {
      sub_1D2539ADC(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
    }
    else
    {
      sub_1D2534120(v30, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
      swift_bridgeObjectRetain();
    }
    sub_1D26CE460();
    sub_1D26CD9D4();
    result = sub_1D26CE49C();
    v31 = -1 << *(_BYTE *)(v10 + 32);
    v32 = result & ~v31;
    v33 = v32 >> 6;
    if (((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v34 = 0;
      v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v36 = v33 == v35;
        if (v33 == v35)
          v33 = 0;
        v34 |= v36;
        v37 = *(_QWORD *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    v19 = (_QWORD *)(*(_QWORD *)(v10 + 48) + 16 * v18);
    *v19 = v28;
    v19[1] = v27;
    result = sub_1D2539ADC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v29 * v18, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v39;
  v23 = v41;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v38 = 1 << *(_BYTE *)(v8 + 32);
  if (v38 >= 64)
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v38;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1D26689D4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  unint64_t v20;
  int64_t v21;
  void *v22;
  __int128 *v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963978);
  v6 = sub_1D26CE208();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_41;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v33 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 64;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v10)
    {
      v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11)
      break;
    v19 = (_QWORD *)(v5 + 64);
    v20 = *(_QWORD *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v11)
        goto LABEL_34;
      v20 = *(_QWORD *)(v33 + 8 * v14);
      if (!v20)
      {
        v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v20 = *(_QWORD *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            v14 = v21 + 1;
            if (__OFADD__(v21, 1))
              goto LABEL_43;
            if (v14 >= v11)
              goto LABEL_34;
            v20 = *(_QWORD *)(v33 + 8 * v14);
            ++v21;
            if (v20)
              goto LABEL_21;
          }
        }
        v14 = v21;
      }
    }
LABEL_21:
    v10 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    v22 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v23 = (__int128 *)(*(_QWORD *)(v5 + 56) + 40 * v17);
    if ((a2 & 1) != 0)
    {
      sub_1D2538F38(v23, (uint64_t)v34);
    }
    else
    {
      sub_1D2538510((uint64_t)v23, (uint64_t)v34);
      v24 = v22;
    }
    result = sub_1D26CDEC0();
    v25 = -1 << *(_BYTE *)(v7 + 32);
    v26 = result & ~v25;
    v27 = v26 >> 6;
    if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v30 = v27 == v29;
        if (v27 == v29)
          v27 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v12 + 8 * v27);
      }
      while (v31 == -1);
      v15 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15) = v22;
    result = sub_1D2538F38(v34, *(_QWORD *)(v7 + 56) + 40 * v15);
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v19 = (_QWORD *)(v5 + 64);
  if ((a2 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v32 = 1 << *(_BYTE *)(v5 + 32);
  if (v32 >= 64)
    bzero(v19, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v19 = -1 << v32;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D2668CB0(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  _QWORD *v36;
  __int128 v37;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83458);
  v6 = a2;
  v7 = sub_1D26CE208();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v36 = (_QWORD *)(v5 + 64);
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v35 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v22 = v21 | (v14 << 6);
      }
      else
      {
        v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v35)
          goto LABEL_33;
        v24 = v36[v23];
        ++v14;
        if (!v24)
        {
          v14 = v23 + 1;
          if (v23 + 1 >= v35)
            goto LABEL_33;
          v24 = v36[v14];
          if (!v24)
          {
            v25 = v23 + 2;
            if (v25 >= v35)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v6 & 1) != 0)
              {
                v34 = 1 << *(_BYTE *)(v5 + 32);
                if (v34 >= 64)
                  bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v36 = -1 << v34;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v24 = v36[v25];
            if (!v24)
            {
              while (1)
              {
                v14 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_40;
                if (v14 >= v35)
                  goto LABEL_33;
                v24 = v36[v14];
                ++v25;
                if (v24)
                  goto LABEL_30;
              }
            }
            v14 = v25;
          }
        }
LABEL_30:
        v11 = (v24 - 1) & v24;
        v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      v30 = 16 * v22;
      v31 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v30);
      v33 = *v31;
      v32 = v31[1];
      v37 = *(_OWORD *)(*(_QWORD *)(v5 + 56) + v30);
      if ((v6 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1D26CE460();
      sub_1D26CD9D4();
      result = sub_1D26CE49C();
      v15 = -1 << *(_BYTE *)(v8 + 32);
      v16 = result & ~v15;
      v17 = v16 >> 6;
      if (((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        v18 = __clz(__rbit64((-1 << v16) & ~*(_QWORD *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v26 = 0;
        v27 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v28 = v17 == v27;
          if (v17 == v27)
            v17 = 0;
          v26 |= v28;
          v29 = *(_QWORD *)(v12 + 8 * v17);
        }
        while (v29 == -1);
        v18 = __clz(__rbit64(~v29)) + (v17 << 6);
      }
      *(_QWORD *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      v19 = 16 * v18;
      v20 = (_QWORD *)(*(_QWORD *)(v8 + 48) + v19);
      *v20 = v33;
      v20[1] = v32;
      *(_OWORD *)(*(_QWORD *)(v8 + 56) + v19) = v37;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
  *v3 = v8;
  return result;
}

uint64_t sub_1D2668FB8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  _QWORD *v24;
  unint64_t v25;
  int64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  int64_t v40;
  uint64_t v41;
  char v42;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC823E0);
  v42 = a2;
  v6 = sub_1D26CE208();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v41 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v39 = v2;
  v40 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40)
      break;
    v24 = (_QWORD *)(v5 + 64);
    v25 = *(_QWORD *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      v13 = v23 + 1;
      if (v23 + 1 >= v40)
        goto LABEL_33;
      v25 = *(_QWORD *)(v41 + 8 * v13);
      if (!v25)
      {
        v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          v3 = v39;
          if ((v42 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v25 = *(_QWORD *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            v13 = v26 + 1;
            if (__OFADD__(v26, 1))
              goto LABEL_42;
            if (v13 >= v40)
              goto LABEL_33;
            v25 = *(_QWORD *)(v41 + 8 * v13);
            ++v26;
            if (v25)
              goto LABEL_30;
          }
        }
        v13 = v26;
      }
    }
LABEL_30:
    v10 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    v31 = 16 * v22;
    v32 = (uint64_t *)(*(_QWORD *)(v5 + 48) + v31);
    v34 = *v32;
    v33 = v32[1];
    v35 = (uint64_t *)(*(_QWORD *)(v5 + 56) + v31);
    v36 = *v35;
    v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D26CE460();
    sub_1D26CD9D4();
    result = sub_1D26CE49C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v27 = 0;
      v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v29 = v16 == v28;
        if (v16 == v28)
          v16 = 0;
        v27 |= v29;
        v30 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = 16 * v17;
    v19 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v18);
    *v19 = v34;
    v19[1] = v33;
    v20 = (_QWORD *)(*(_QWORD *)(v7 + 56) + v18);
    *v20 = v36;
    v20[1] = v37;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v39;
  v24 = (_QWORD *)(v5 + 64);
  if ((v42 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v38 = 1 << *(_BYTE *)(v5 + 32);
  if (v38 >= 64)
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v24 = -1 << v38;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D26692DC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962138);
  v36 = a2;
  v6 = sub_1D26CE208();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v34)
        goto LABEL_33;
      v23 = *(_QWORD *)(v35 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v34)
              goto LABEL_33;
            v23 = *(_QWORD *)(v35 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1D26CE460();
    sub_1D26CD9D4();
    result = sub_1D26CE49C();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v22 = (_QWORD *)(v5 + 64);
  if ((v36 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v33 = 1 << *(_BYTE *)(v5 + 32);
  if (v33 >= 64)
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v33;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D26695F0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1D26CB9DC();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFC823D0);
  v11 = sub_1D26CE208();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
    result = sub_1D26CD8CC();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1D26699EC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t i;
  int v42;

  v3 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC823C0);
  v42 = a2;
  v10 = sub_1D26CE208();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v40 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v38 = v2;
  v39 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  for (i = v9; ; v9 = i)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v39)
      break;
    v23 = v40;
    v24 = v40[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v39)
        goto LABEL_34;
      v24 = v40[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v39)
              goto LABEL_34;
            v24 = v40[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v42 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      v28 = *(id *)(*(_QWORD *)(v9 + 56) + 8 * v21);
    }
    sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
    result = sub_1D26CD8CC();
    v29 = -1 << *(_BYTE *)(v11 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v16 + 8 * v31);
      }
      while (v35 == -1);
      v19 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v19) = v28;
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v38;
  v23 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v9 + 32);
  if (v36 >= 64)
    bzero(v23, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v36;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_1D2669D84(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  int64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t i;
  int v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for RemoteActivitySubscription(0);
  v46 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CBA24();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83440);
  v48 = a2;
  v12 = sub_1D26CE208();
  v13 = v12;
  if (!*(_QWORD *)(v11 + 16))
    goto LABEL_42;
  v14 = 1 << *(_BYTE *)(v11 + 32);
  v15 = *(_QWORD *)(v11 + 64);
  v45 = (_QWORD *)(v11 + 64);
  if (v14 < 64)
    v16 = ~(-1 << v14);
  else
    v16 = -1;
  v17 = v16 & v15;
  v43 = v2;
  v44 = (unint64_t)(v14 + 63) >> 6;
  v18 = v12 + 64;
  result = swift_retain();
  v20 = 0;
  v21 = v11;
  for (i = v11; ; v21 = i)
  {
    if (v17)
    {
      v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v25 >= v44)
      break;
    v26 = v45;
    v27 = v45[v25];
    ++v20;
    if (!v27)
    {
      v20 = v25 + 1;
      if (v25 + 1 >= v44)
        goto LABEL_35;
      v27 = v45[v20];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_35:
          swift_release();
          v3 = v43;
          if ((v48 & 1) == 0)
            goto LABEL_42;
          goto LABEL_36;
        }
        v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            v20 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_44;
            if (v20 >= v44)
              goto LABEL_35;
            v27 = v45[v20];
            ++v28;
            if (v27)
              goto LABEL_21;
          }
        }
        v20 = v28;
      }
    }
LABEL_21:
    v17 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    v29 = *(_QWORD *)(v8 + 72);
    v30 = *(_QWORD *)(v21 + 48) + v29 * v24;
    if ((v48 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 32))(v10, v30, v7);
      v31 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1D2539ADC(v31 + v32 * v24, v49, type metadata accessor for RemoteActivitySubscription);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v10, v30, v7);
      v33 = *(_QWORD *)(v21 + 56);
      v32 = *(_QWORD *)(v46 + 72);
      sub_1D2534120(v33 + v32 * v24, v49, type metadata accessor for RemoteActivitySubscription);
    }
    sub_1D25369B0(&qword_1EFC825D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
    result = sub_1D26CD8CC();
    v34 = -1 << *(_BYTE *)(v13 + 32);
    v35 = result & ~v34;
    v36 = v35 >> 6;
    if (((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v35) & ~*(_QWORD *)(v18 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v39 = v36 == v38;
        if (v36 == v38)
          v36 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v18 + 8 * v36);
      }
      while (v40 == -1);
      v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(_QWORD *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(*(_QWORD *)(v13 + 48) + v29 * v22, v10, v7);
    result = sub_1D2539ADC(v49, *(_QWORD *)(v13 + 56) + v32 * v22, type metadata accessor for RemoteActivitySubscription);
    ++*(_QWORD *)(v13 + 16);
  }
  swift_release();
  v3 = v43;
  v26 = v45;
  if ((v48 & 1) == 0)
    goto LABEL_42;
LABEL_36:
  v41 = 1 << *(_BYTE *)(i + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(i + 16) = 0;
LABEL_42:
  result = swift_release();
  *v3 = v13;
  return result;
}

uint64_t sub_1D266A1A0(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t result;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  _QWORD *v26;
  unint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  unint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[4];
  int v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = v2;
  v5 = sub_1D26CBE5C();
  v51 = *(_QWORD *)(v5 - 8);
  v52 = v5;
  MEMORY[0x1E0C80A78](v5);
  v50 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1D26CBED4();
  v49 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83438);
  v11 = sub_1D26CE208();
  v12 = v11;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_41;
  v13 = 1 << *(_BYTE *)(v10 + 32);
  v14 = *(_QWORD *)(v10 + 64);
  v46 = (_QWORD *)(v10 + 64);
  if (v13 < 64)
    v15 = ~(-1 << v13);
  else
    v15 = -1;
  v16 = v15 & v14;
  v44 = v2;
  v45 = (unint64_t)(v13 + 63) >> 6;
  v17 = v11 + 64;
  v48 = v10;
  result = swift_retain();
  v19 = 0;
  v43 = a2;
  v20 = 16;
  if ((a2 & 1) != 0)
    v20 = 32;
  v47 = v20;
  v21 = v20;
  while (1)
  {
    if (v16)
    {
      v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v24 = v23 | (v19 << 6);
      goto LABEL_24;
    }
    v25 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45)
      break;
    v26 = v46;
    v27 = v46[v25];
    ++v19;
    if (!v27)
    {
      v19 = v25 + 1;
      if (v25 + 1 >= v45)
        goto LABEL_34;
      v27 = v46[v19];
      if (!v27)
      {
        v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          v40 = v48;
          swift_release();
          v3 = v44;
          if ((v43 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            v19 = v28 + 1;
            if (__OFADD__(v28, 1))
              goto LABEL_43;
            if (v19 >= v45)
              goto LABEL_34;
            v27 = v46[v19];
            ++v28;
            if (v27)
              goto LABEL_23;
          }
        }
        v19 = v28;
      }
    }
LABEL_23:
    v16 = (v27 - 1) & v27;
    v24 = __clz(__rbit64(v27)) + (v19 << 6);
LABEL_24:
    v29 = v48;
    v30 = *(_QWORD *)(v49 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v49 + v21))(v9, *(_QWORD *)(v48 + 48) + v30 * v24, v7);
    v31 = *(_QWORD *)(v29 + 56);
    v32 = *(_QWORD *)(v51 + 72);
    (*(void (**)(_BYTE *, unint64_t, uint64_t))(v51 + v21))(v50, v31 + v32 * v24, v52);
    sub_1D25369B0(&qword_1EFC82968, (uint64_t (*)(uint64_t))MEMORY[0x1E0D875E8], MEMORY[0x1E0D875F8]);
    result = sub_1D26CD8CC();
    v33 = -1 << *(_BYTE *)(v12 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v36 = 0;
      v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v38 = v35 == v37;
        if (v35 == v37)
          v35 = 0;
        v36 |= v38;
        v39 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v39 == -1);
      v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*(void (**)(unint64_t, _BYTE *, uint64_t))(v49 + 32))(*(_QWORD *)(v12 + 48) + v30 * v22, v9, v7);
    result = (*(uint64_t (**)(unint64_t, _BYTE *, uint64_t))(v51 + 32))(*(_QWORD *)(v12 + 56) + v32 * v22, v50, v52);
    ++*(_QWORD *)(v12 + 16);
  }
  v40 = v48;
  swift_release();
  v3 = v44;
  v26 = v46;
  if ((v43 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v41 = 1 << *(_BYTE *)(v40 + 32);
  if (v41 >= 64)
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v26 = -1 << v41;
  *(_QWORD *)(v40 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v12;
  return result;
}

uint64_t sub_1D266A598(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  int v42;

  v3 = v2;
  v5 = type metadata accessor for ExtensionMetadata();
  v41 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963970);
  v42 = a2;
  v9 = sub_1D26CE208();
  v10 = v9;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_41;
  v38 = v2;
  v11 = 1 << *(_BYTE *)(v8 + 32);
  v12 = *(_QWORD *)(v8 + 64);
  v40 = (_QWORD *)(v8 + 64);
  if (v11 < 64)
    v13 = ~(-1 << v11);
  else
    v13 = -1;
  v14 = v13 & v12;
  v39 = (unint64_t)(v11 + 63) >> 6;
  v15 = v9 + 64;
  result = swift_retain();
  v17 = 0;
  while (1)
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v39)
      break;
    v22 = v40;
    v23 = v40[v21];
    ++v17;
    if (!v23)
    {
      v17 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v17];
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v39)
        {
LABEL_34:
          swift_release();
          v3 = v38;
          if ((v42 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v23 = v40[v24];
        if (!v23)
        {
          while (1)
          {
            v17 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_43;
            if (v17 >= v39)
              goto LABEL_34;
            v23 = v40[v17];
            ++v24;
            if (v23)
              goto LABEL_21;
          }
        }
        v17 = v24;
      }
    }
LABEL_21:
    v14 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    v25 = *(void **)(*(_QWORD *)(v8 + 48) + 8 * v20);
    v26 = *(_QWORD *)(v41 + 72);
    v27 = *(_QWORD *)(v8 + 56) + v26 * v20;
    if ((v42 & 1) != 0)
    {
      sub_1D2539ADC(v27, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    }
    else
    {
      sub_1D2534120(v27, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      v28 = v25;
    }
    result = sub_1D26CDEC0();
    v29 = -1 << *(_BYTE *)(v10 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v15 + 8 * v31);
      }
      while (v35 == -1);
      v18 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v18) = v25;
    result = sub_1D2539ADC((uint64_t)v7, *(_QWORD *)(v10 + 56) + v26 * v18, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    ++*(_QWORD *)(v10 + 16);
  }
  swift_release();
  v3 = v38;
  v22 = v40;
  if ((v42 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v36 = 1 << *(_BYTE *)(v8 + 32);
  if (v36 >= 64)
    bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v36;
  *(_QWORD *)(v8 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v10;
  return result;
}

uint64_t sub_1D266A8EC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  _QWORD *v38;
  uint64_t i;
  char v40;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962850);
  v40 = a2;
  v6 = sub_1D26CE208();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v38 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    for (i = v5; ; v5 = i)
    {
      if (v10)
      {
        v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v21 = v20 | (v13 << 6);
      }
      else
      {
        v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37)
          goto LABEL_33;
        v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          v13 = v22 + 1;
          if (v22 + 1 >= v37)
            goto LABEL_33;
          v23 = v38[v13];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              v3 = v2;
              if ((v40 & 1) != 0)
              {
                v36 = 1 << *(_BYTE *)(v5 + 32);
                if (v36 >= 64)
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v38 = -1 << v36;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                v13 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_40;
                if (v13 >= v37)
                  goto LABEL_33;
                v23 = v38[v13];
                ++v24;
                if (v23)
                  goto LABEL_30;
              }
            }
            v13 = v24;
          }
        }
LABEL_30:
        v10 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v21);
      v30 = *v29;
      v31 = v29[1];
      v32 = (uint64_t *)(*(_QWORD *)(v5 + 56) + 24 * v21);
      v34 = *v32;
      v33 = v32[1];
      v35 = v32[2];
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        sub_1D253FE08(v34, v33);
        swift_bridgeObjectRetain();
      }
      sub_1D26CE460();
      sub_1D26CD9D4();
      result = sub_1D26CE49C();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v27 = v16 == v26;
          if (v16 == v26)
            v16 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
      *v18 = v30;
      v18[1] = v31;
      v19 = (uint64_t *)(*(_QWORD *)(v7 + 56) + 24 * v17);
      *v19 = v34;
      v19[1] = v33;
      v19[2] = v35;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1D266AC18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D2589364(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D266FE3C();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    sub_1D25340E4(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_1D26CD56C();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_1D266BCA4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = sub_1D26CD56C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

double sub_1D266AD54@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  double result;
  uint64_t v13;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1D25891F4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v13 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2670108();
      v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_1D2538448((_OWORD *)(*(_QWORD *)(v11 + 56) + 32 * v8), a3);
    sub_1D266C018(v8, v11);
    *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1D266AE44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1D25891F4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v18 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2670C74((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED962128);
      v11 = v18;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = sub_1D26CB9DC();
    v14 = MEMORY[0x1E0CB0870];
    v15 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a3, v12 + *(_QWORD *)(v15 + 72) * v8, v13);
    sub_1D266CFBC(v8, v11, (uint64_t (*)(_QWORD))v14);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v17 = sub_1D26CB9DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
  }
}

uint64_t sub_1D266AF90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1D2589590(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v11 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D26704BC();
    v7 = v11;
  }
  v8 = *(void **)(*(_QWORD *)(v7 + 48) + (v4 << 6));
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1D266C1F8(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1D266B070(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_1D2589600(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v11 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D26706AC();
    v7 = v11;
  }
  v8 = *(void **)(*(_QWORD *)(v7 + 48) + 40 * v4);
  swift_bridgeObjectRelease();

  v9 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_1D266C4C8(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v9;
}

double sub_1D266B140@<D0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D25896D8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D267088C();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
    sub_1D253703C(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, &qword_1ED963110);
    sub_1D2538F38((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_1D266C750(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1D266B248(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D25891F4(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *v3;
  v12 = *v3;
  *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D2670AC0();
    v9 = v12;
  }
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v6);
  sub_1D266CB38(v6, v9);
  *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1D266B314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D25898B8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v18 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2671CF0((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], &qword_1ED96FE70, &qword_1EFC83448);
      v9 = v18;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_1D26CBA24();
    v14 = MEMORY[0x1E0CB0998];
    v15 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a2, v12 + *(_QWORD *)(v15 + 72) * v6, v13);
    sub_1D266D388(v6, v9, &qword_1ED96FE70, &qword_1ED963318, MEMORY[0x1E0D0F978], (uint64_t (*)(_QWORD))v14);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v17 = sub_1D26CBA24();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
}

double sub_1D266B498@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double result;
  uint64_t v13;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D25363D0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v13 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2671170();
      v9 = v13;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    sub_1D2538F38((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_1D266CD0C(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1D266B5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1D25891F4(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v11 = *v4;
    v17 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D26713B8();
      v11 = v17;
    }
    swift_bridgeObjectRelease();
    v12 = *(_QWORD *)(v11 + 56);
    v13 = type metadata accessor for RemoteActivityArchiveBudget();
    v14 = *(_QWORD *)(v13 - 8);
    sub_1D2539ADC(v12 + *(_QWORD *)(v14 + 72) * v8, a3, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
    sub_1D266CFBC(v8, v11, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
    *v4 = v11;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
  else
  {
    v16 = type metadata accessor for RemoteActivityArchiveBudget();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
  }
}

double sub_1D266B6D8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  double result;
  uint64_t v11;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D25393D8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v11 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D26715FC();
      v9 = v11;
    }

    sub_1D2538F38((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v6), a2);
    sub_1D266D1C4(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1D266B7C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D2589970(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v18 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D2671CF0((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED96FD28, (uint64_t *)&unk_1EFC823D0);
      v9 = v18;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_1D26CB9DC();
    v14 = MEMORY[0x1E0CB0870];
    v15 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 32))(a2, v12 + *(_QWORD *)(v15 + 72) * v6, v13);
    sub_1D266D388(v6, v9, &qword_1ED96FD28, &qword_1ED963340, MEMORY[0x1E0D0FB50], (uint64_t (*)(_QWORD))v14);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v15 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v17 = sub_1D26CB9DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
}

uint64_t sub_1D266B948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D2589A24(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v17 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D26724CC();
      v9 = v17;
    }
    v10 = *(_QWORD *)(v9 + 48);
    v11 = sub_1D26CBED4();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * v6, v11);
    v12 = *(_QWORD *)(v9 + 56);
    v13 = sub_1D26CBE5C();
    v14 = *(_QWORD *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 32))(a2, v12 + *(_QWORD *)(v14 + 72) * v6, v13);
    sub_1D266D8FC(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v13);
  }
  else
  {
    v16 = sub_1D26CBE5C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

uint64_t sub_1D266BA84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v3 = v2;
  swift_bridgeObjectRetain();
  v6 = sub_1D25393D8(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    v15 = *v3;
    *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D26727AC();
      v9 = v15;
    }

    v10 = *(_QWORD *)(v9 + 56);
    v11 = type metadata accessor for ExtensionMetadata();
    v12 = *(_QWORD *)(v11 - 8);
    sub_1D2539ADC(v10 + *(_QWORD *)(v12 + 72) * v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    sub_1D266DBD0(v6, v9);
    *v3 = v9;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
  }
  else
  {
    v14 = type metadata accessor for ExtensionMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 1, 1, v14);
  }
}

uint64_t sub_1D266BBA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  uint64_t result;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = v3;
  swift_bridgeObjectRetain();
  v8 = sub_1D25891F4(a1, a2);
  LOBYTE(a2) = v9;
  result = swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v12 = *v4;
    v15 = *v4;
    *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1D26729DC();
      v12 = v15;
    }
    swift_bridgeObjectRelease();
    v13 = *(_QWORD *)(v12 + 56) + 24 * v8;
    v14 = *(_QWORD *)(v13 + 16);
    *(_OWORD *)a3 = *(_OWORD *)v13;
    *(_QWORD *)(a3 + 16) = v14;
    sub_1D266DDA8(v8, v12);
    *v4 = v12;
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(_QWORD *)a3 = 0;
    *(_QWORD *)(a3 + 8) = 0;
    *(_QWORD *)(a3 + 16) = 0;
  }
  return result;
}

unint64_t sub_1D266BCA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t result;
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v39 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v3 = *(_QWORD *)(v39 - 8);
  result = MEMORY[0x1E0C80A78](v39);
  v7 = (uint64_t *)((char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (v5 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    v12 = v5;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (result + 1) & v11;
      v14 = *(_QWORD *)(v3 + 72);
      v37 = v14;
      v38 = a2 + 64;
      do
      {
        v15 = v14 * v10;
        sub_1D2534120(*(_QWORD *)(a2 + 48) + v14 * v10, (uint64_t)v7, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        v16 = a2;
        sub_1D26CE460();
        v17 = v13;
        sub_1D26CB9DC();
        sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
        sub_1D26CD8D8();
        sub_1D26CD1DC();
        sub_1D25369B0(&qword_1ED96D4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC70]);
        sub_1D26CD8D8();
        v18 = v11;
        v19 = v7[3];
        v20 = v7[4];
        __swift_project_boxed_opaque_existential_0(v7, v19);
        v21 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 16);
        v22 = v20;
        v11 = v18;
        v13 = v17;
        v21(&v40, v19, v22);
        sub_1D26CE46C();
        v23 = sub_1D26CE49C();
        result = sub_1D25340E4((uint64_t)v7, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        v24 = v23 & v11;
        v25 = v12;
        if (v12 >= (uint64_t)v17)
        {
          if (v24 < v17)
          {
            v8 = v38;
            a2 = v16;
          }
          else
          {
            v8 = v38;
            a2 = v16;
            if (v12 >= (uint64_t)v24)
              goto LABEL_13;
          }
        }
        else
        {
          v8 = v38;
          a2 = v16;
          if (v24 >= v13 || v12 >= (uint64_t)v24)
          {
LABEL_13:
            v14 = v37;
            if (v37 * v12 < v15
              || *(_QWORD *)(a2 + 48) + v37 * v12 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v37))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v37 * v12 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = *(_QWORD *)(*(_QWORD *)(sub_1D26CD56C() - 8) + 72);
            v28 = v27 * v12;
            result = v26 + v27 * v12;
            v29 = v27 * v10;
            if (v27 * v12 < (uint64_t)(v27 * v10) || result >= v26 + v27 * v10 + v27)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              v25 = v10;
            }
            else
            {
              v25 = v10;
              if (v28 != v29)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v25 = v10;
              }
            }
            goto LABEL_6;
          }
        }
        v14 = v37;
LABEL_6:
        v12 = v25;
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v30 = (uint64_t *)(v8 + 8 * ((unint64_t)v12 >> 6));
    v31 = *v30;
    v32 = (-1 << v12) - 1;
  }
  else
  {
    v30 = (uint64_t *)(v8 + 8 * (v5 >> 6));
    v32 = *v30;
    v31 = (-1 << v5) - 1;
  }
  *v30 = v32 & v31;
  v33 = *(_QWORD *)(a2 + 16);
  v34 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D266C018(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1D26CE460();
        swift_bridgeObjectRetain();
        sub_1D26CD9D4();
        v10 = sub_1D26CE49C();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D266C1EC(unint64_t a1, uint64_t a2)
{
  return sub_1D266CFBC(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

void sub_1D266C1F8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 *v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v2 = a2;
  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1D26CDFEC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v33 = v4;
      v34 = v2;
      v31 = (v8 + 1) & v7;
      v32 = v7;
      do
      {
        v35 = v6 << 6;
        v9 = *(_QWORD *)(v2 + 48) + (v6 << 6);
        v10 = *(void **)v9;
        v11 = *(_QWORD *)(v9 + 32);
        v12 = *(_BYTE *)(v9 + 56);
        sub_1D26CE460();
        swift_bridgeObjectRetain();
        v13 = v10;
        swift_bridgeObjectRetain();
        sub_1D26CDED8();

        swift_bridgeObjectRetain();
        sub_1D26CD9D4();
        swift_bridgeObjectRelease();
        sub_1D26CE478();
        if (v11)
        {
          swift_bridgeObjectRetain();
          sub_1D26CD9D4();
          swift_bridgeObjectRelease();
        }
        sub_1D26CE478();
        v4 = v33;
        v2 = v34;
        if ((v12 & 1) == 0)
          sub_1D26CE46C();
        sub_1D26CE46C();
        v14 = sub_1D26CE49C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        v15 = v14 & v32;
        if (v3 >= (uint64_t)v31)
        {
          if (v15 < v31)
            goto LABEL_5;
        }
        else if (v15 >= v31)
        {
          goto LABEL_15;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_15:
          v16 = *(_QWORD *)(v34 + 48);
          v17 = (__int128 *)(v16 + (v3 << 6));
          v18 = (__int128 *)(v16 + v35);
          if (v3 << 6 != v35 || v17 >= v18 + 4)
          {
            v19 = *v18;
            v20 = v18[1];
            v21 = v18[3];
            v17[2] = v18[2];
            v17[3] = v21;
            *v17 = v19;
            v17[1] = v20;
          }
          v22 = *(_QWORD *)(v34 + 56);
          v23 = (_QWORD *)(v22 + 8 * v3);
          v24 = (_QWORD *)(v22 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v23 >= v24 + 1))
          {
            *v23 = *v24;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v32;
      }
      while (((*(_QWORD *)(v33 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v26 = *v25;
    v27 = (-1 << v3) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(v2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v30;
    ++*(_DWORD *)(v2 + 36);
  }
}

void sub_1D266C4C8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  char v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = a2;
  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1D26CDFEC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v32 = v4;
      v33 = v2;
      v30 = (v8 + 1) & v7;
      v31 = v7;
      do
      {
        v9 = 40 * v6;
        v10 = *(_QWORD *)(v2 + 48) + 40 * v6;
        v11 = *(void **)v10;
        v12 = *(_BYTE *)(v10 + 32);
        sub_1D26CE460();
        v13 = v11;
        swift_bridgeObjectRetain();
        sub_1D26CDED8();

        swift_bridgeObjectRetain();
        sub_1D26CD9D4();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0)
          sub_1D26CE46C();
        sub_1D26CE46C();
        sub_1D26CE478();
        v14 = sub_1D26CE49C();
        swift_bridgeObjectRelease();

        v15 = v14 & v31;
        v2 = v33;
        if (v3 >= (uint64_t)v30)
        {
          v4 = v32;
          if (v15 < v30)
            goto LABEL_5;
        }
        else
        {
          v4 = v32;
          if (v15 >= v30)
            goto LABEL_13;
        }
        if (v3 >= (uint64_t)v15)
        {
LABEL_13:
          v16 = *(_QWORD *)(v33 + 48);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + v9);
          if (40 * v3 < v9 || v17 >= (unint64_t)v18 + 40 || v3 != v6)
          {
            v19 = *v18;
            v20 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v19;
            *(_OWORD *)(v17 + 16) = v20;
          }
          v21 = *(_QWORD *)(v33 + 56);
          v22 = (_QWORD *)(v21 + 8 * v3);
          v23 = (_QWORD *)(v21 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v22 >= v23 + 1))
          {
            *v22 = *v23;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v31;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v24 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v25 = *v24;
    v26 = (-1 << v3) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(v2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v29;
    ++*(_DWORD *)(v2 + 36);
  }
}

unint64_t sub_1D266C750(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  int64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  __int128 *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  v4 = *(_QWORD *)(v34 - 8);
  result = MEMORY[0x1E0C80A78](v34);
  v7 = (id *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v12 = (result + 1) & v11;
      v13 = *(_QWORD *)(v4 + 72);
      v32 = a2;
      v33 = a2 + 64;
      v31 = v13;
      do
      {
        v16 = v13 * v10;
        sub_1D2537078(*(_QWORD *)(a2 + 48) + v13 * v10, (uint64_t)v7, &qword_1ED963110);
        sub_1D26CE460();
        v17 = *v7;
        sub_1D26CDED8();

        type metadata accessor for ActivityKey(0);
        sub_1D26CBAF0();
        sub_1D25369B0(&qword_1ED962FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F840]);
        sub_1D26CD8D8();
        swift_bridgeObjectRetain();
        sub_1D26CD9D4();
        swift_bridgeObjectRelease();
        sub_1D26CD65C();
        sub_1D25369B0(&qword_1ED963218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0938]);
        sub_1D26CD8D8();
        type metadata accessor for ActivityVariantKey(0);
        sub_1D26CD3F8();
        sub_1D25369B0(&qword_1ED962928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF01F8]);
        sub_1D26CD8D8();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
        sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
        sub_1D26CD8D8();
        v18 = sub_1D26CE49C();
        result = sub_1D253703C((uint64_t)v7, &qword_1ED963110);
        v19 = v18 & v11;
        if (a1 >= (uint64_t)v12)
        {
          if (v19 < v12)
          {
            a2 = v32;
            v8 = v33;
            v13 = v31;
          }
          else
          {
            a2 = v32;
            v8 = v33;
            v13 = v31;
            if (a1 >= (uint64_t)v19)
              goto LABEL_12;
          }
        }
        else
        {
          a2 = v32;
          v8 = v33;
          v13 = v31;
          if (v19 >= v12 || a1 >= (uint64_t)v19)
          {
LABEL_12:
            v20 = *(_QWORD *)(a2 + 48);
            result = v20 + v13 * a1;
            if (v13 * a1 < v16 || result >= v20 + v16 + v13)
            {
              result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
            }
            v21 = *(_QWORD *)(a2 + 56);
            v22 = v21 + 40 * a1;
            v23 = (__int128 *)(v21 + 40 * v10);
            if (a1 != v10 || (a1 = v10, v22 >= (unint64_t)v23 + 40))
            {
              v14 = *v23;
              v15 = v23[1];
              *(_QWORD *)(v22 + 32) = *((_QWORD *)v23 + 4);
              *(_OWORD *)v22 = v14;
              *(_OWORD *)(v22 + 16) = v15;
              a1 = v10;
            }
          }
        }
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v25 = *v24;
    v26 = (-1 << a1) - 1;
  }
  else
  {
    v24 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v26 = *v24;
    v25 = (-1 << a1) - 1;
  }
  *v24 = v26 & v25;
  v27 = *(_QWORD *)(a2 + 16);
  v28 = __OFSUB__(v27, 1);
  v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D266CB38(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1D26CE460();
        swift_bridgeObjectRetain();
        sub_1D26CD9D4();
        v9 = sub_1D26CE49C();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_QWORD *)(v14 + 8 * v3);
          v16 = (_QWORD *)(v14 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D266CD0C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1D2536488((unint64_t *)&unk_1ED963370, &qword_1ED9633A0, MEMORY[0x1E0D0FB50]);
        v18 = sub_1D26CD8CC();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = v23 + 40 * a1;
            v25 = (__int128 *)(v23 + 40 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= (unint64_t)v25 + 40))
            {
              v26 = *v25;
              v27 = v25[1];
              *(_QWORD *)(v24 + 32) = *((_QWORD *)v25 + 4);
              *(_OWORD *)v24 = v26;
              *(_OWORD *)(v24 + 16) = v27;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D266CFBC(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_1D26CE460();
        swift_bridgeObjectRetain();
        sub_1D26CD9D4();
        v11 = sub_1D26CE49C();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1D266D1C4(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1D26CDFEC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v13 = sub_1D26CDEC0();

        v14 = v13 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v14 >= v9 && v3 >= (uint64_t)v14)
          {
LABEL_16:
            v17 = *(_QWORD *)(a2 + 48);
            v18 = (_QWORD *)(v17 + 8 * v3);
            v19 = (_QWORD *)(v17 + 8 * v6);
            if (v3 != v6 || v18 >= v19 + 1)
              *v18 = *v19;
            v20 = *(_QWORD *)(a2 + 56);
            v21 = v20 + 40 * v3;
            v22 = (__int128 *)(v20 + 40 * v6);
            if (v3 != v6 || (v3 = v6, v21 >= (unint64_t)v22 + 40))
            {
              v10 = *v22;
              v11 = v22[1];
              *(_QWORD *)(v21 + 32) = *((_QWORD *)v22 + 4);
              *(_OWORD *)v21 = v10;
              *(_OWORD *)(v21 + 16) = v11;
              v3 = v6;
            }
          }
        }
        else if (v14 >= v9 || v3 >= (uint64_t)v14)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v23 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v24 = *v23;
    v25 = (-1 << v3) - 1;
  }
  else
  {
    v23 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v25 = *v23;
    v24 = (-1 << a1) - 1;
  }
  *v23 = v25 & v24;
  v26 = *(_QWORD *)(a2 + 16);
  v27 = __OFSUB__(v26, 1);
  v28 = v26 - 1;
  if (v27)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v28;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1D266D388(int64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v8;
  unint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  unint64_t v30;
  BOOL v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);
  void (*v40)(char *, unint64_t, uint64_t);
  unint64_t v41;
  uint64_t *v42;
  unint64_t *v43;
  uint64_t v44;
  uint64_t v45;

  v39 = a6;
  v43 = a4;
  v44 = a5;
  v42 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v45 = *(_QWORD *)(v8 - 8);
  result = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = a2 + 64;
  v13 = -1 << *(_BYTE *)(a2 + 32);
  v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(_QWORD *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    v15 = ~v13;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      v41 = (result + 1) & v15;
      v16 = *(_QWORD *)(v45 + 72);
      v40 = *(void (**)(char *, unint64_t, uint64_t))(v45 + 16);
      v17 = v15;
      do
      {
        v18 = v12;
        v19 = v16;
        v20 = v16 * v14;
        v40(v11, *(_QWORD *)(a2 + 48) + v16 * v14, v8);
        v21 = v17;
        sub_1D2536488(v43, v42, v44);
        v22 = sub_1D26CD8CC();
        result = (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v11, v8);
        v23 = v22 & v21;
        v17 = v21;
        if (a1 >= (uint64_t)v41)
        {
          if (v23 >= v41 && a1 >= (uint64_t)v23)
          {
LABEL_16:
            if (v19 * a1 < v20
              || *(_QWORD *)(a2 + 48) + v19 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v20 + v19))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v19 * a1 != v20)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v26 = *(_QWORD *)(a2 + 56);
            v27 = *(_QWORD *)(*(_QWORD *)(v39(0) - 8) + 72);
            v28 = v27 * a1;
            result = v26 + v27 * a1;
            v29 = v27 * v14;
            v30 = v26 + v27 * v14 + v27;
            v31 = v28 < v29 || result >= v30;
            v12 = v18;
            if (v31)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v14;
              v17 = v21;
            }
            else
            {
              a1 = v14;
              v17 = v21;
              if (v28 != v29)
              {
                result = swift_arrayInitWithTakeBackToFront();
                a1 = v14;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v23 >= v41 || a1 >= (uint64_t)v23)
        {
          goto LABEL_16;
        }
        v12 = v18;
LABEL_5:
        v14 = (v14 + 1) & v17;
        v16 = v19;
      }
      while (((*(_QWORD *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
    }
    v32 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v33 = *v32;
    v34 = (-1 << a1) - 1;
  }
  else
  {
    v32 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v34 = *v32;
    v33 = (-1 << a1) - 1;
  }
  *v32 = v34 & v33;
  v35 = *(_QWORD *)(a2 + 16);
  v36 = __OFSUB__(v35, 1);
  v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v37;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D266D658(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v35 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v34 = (result + 1) & v11;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v33(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
        v18 = sub_1D26CD8CC();
        result = (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v22 = *(_QWORD *)(a2 + 48);
            result = v22 + v15 * a1;
            v8 = v14;
            if (v15 * a1 < v16 || (v12 = v15, result >= v22 + v16 + v15))
            {
              result = swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v13 = v17;
              v12 = v15;
            }
            else if (v15 * a1 != v16)
            {
              result = swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v23 = *(_QWORD *)(a2 + 56);
            v24 = (_QWORD *)(v23 + 8 * a1);
            v25 = (_QWORD *)(v23 + 8 * v10);
            if (a1 != v10 || (a1 = v10, v24 >= v25 + 1))
            {
              *v24 = *v25;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
        v12 = v15;
LABEL_5:
        v10 = (v10 + 1) & v13;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1D266D8FC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, unint64_t, uint64_t);
  unint64_t v36;
  uint64_t v37;

  v4 = sub_1D26CBED4();
  v37 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a2 + 64;
  v9 = -1 << *(_BYTE *)(a2 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    v11 = ~v9;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v36 = (result + 1) & v11;
      v12 = *(_QWORD *)(v37 + 72);
      v35 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v13 = v11;
      do
      {
        v14 = v8;
        v15 = v12;
        v16 = v12 * v10;
        v17 = v13;
        v35(v7, *(_QWORD *)(a2 + 48) + v12 * v10, v4);
        sub_1D25369B0(&qword_1EFC82968, (uint64_t (*)(uint64_t))MEMORY[0x1E0D875E8], MEMORY[0x1E0D875F8]);
        v18 = sub_1D26CD8CC();
        result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v7, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v36)
        {
          if (v19 >= v36 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v8 = v14;
            if (v15 * a1 < v16
              || *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = *(_QWORD *)(*(_QWORD *)(sub_1D26CBE5C() - 8) + 72);
            v24 = v23 * a1;
            result = v22 + v23 * a1;
            v25 = v23 * v10;
            v26 = v22 + v23 * v10 + v23;
            if (v24 < v25 || result >= v26)
            {
              result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              v13 = v17;
            }
            else
            {
              a1 = v10;
              v13 = v17;
              if (v24 != v25)
              {
                result = swift_arrayInitWithTakeBackToFront();
                v13 = v17;
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v36 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v8 = v14;
LABEL_5:
        v10 = (v10 + 1) & v13;
        v12 = v15;
      }
      while (((*(_QWORD *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v28;
    v30 = (-1 << a1) - 1;
  }
  else
  {
    v28 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    v30 = *v28;
    v29 = (-1 << a1) - 1;
  }
  *v28 = v30 & v29;
  v31 = *(_QWORD *)(a2 + 16);
  v32 = __OFSUB__(v31, 1);
  v33 = v31 - 1;
  if (v32)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v33;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1D266DBD0(unint64_t a1, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;

  v3 = a1;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    v8 = sub_1D26CDFEC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        v11 = sub_1D26CDEC0();

        v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 < v9 || v3 < (uint64_t)v12)
            goto LABEL_6;
        }
        else if (v12 < v9 && v3 < (uint64_t)v12)
        {
          goto LABEL_6;
        }
        v15 = *(_QWORD *)(a2 + 48);
        v16 = (_QWORD *)(v15 + 8 * v3);
        v17 = (_QWORD *)(v15 + 8 * v6);
        if (v3 != v6 || v16 >= v17 + 1)
          *v16 = *v17;
        v18 = *(_QWORD *)(a2 + 56);
        v19 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for ExtensionMetadata() - 8) + 72);
        v20 = v19 * v3;
        v21 = v18 + v19 * v3;
        v22 = v19 * v6;
        v23 = v18 + v19 * v6 + v19;
        if (v20 < v22 || v21 >= v23)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v20 == v22)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v26 = *v25;
    v27 = (-1 << v3) - 1;
  }
  else
  {
    v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    v27 = *v25;
    v26 = (-1 << a1) - 1;
  }
  *v25 = v27 & v26;
  v28 = *(_QWORD *)(a2 + 16);
  v29 = __OFSUB__(v28, 1);
  v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1D266DDA8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1D26CDFEC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1D26CE460();
        swift_bridgeObjectRetain();
        sub_1D26CD9D4();
        v10 = sub_1D26CE49C();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = v15 + 24 * v3;
          v17 = (__int128 *)(v15 + 24 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= (unint64_t)v17 + 24))
          {
            v9 = *v17;
            *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
            *(_OWORD *)v16 = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_1D266DF90(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  unint64_t v25;
  char v26;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1D25891F4(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 24 * v16;
        result = sub_1D253FBE8(*(_QWORD *)v23, *(_QWORD *)(v23 + 8), *(_BYTE *)(v23 + 16));
        *(_QWORD *)v23 = a1;
        *(_QWORD *)(v23 + 8) = a2;
        *(_BYTE *)(v23 + 16) = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_1D266FC64();
      goto LABEL_7;
    }
    sub_1D2666058(v19, a6 & 1);
    v25 = sub_1D25891F4(a4, a5);
    if ((v20 & 1) == (v26 & 1))
    {
      v16 = v25;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B5B88(v16, a4, a5, a1, a2, a3, v22);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

_OWORD *sub_1D266E0E4(_OWORD *a1, void *a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1D25892E0((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = *(_QWORD *)(v7 + 24);
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(*(_QWORD *)(v15 + 56) + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_1D2538448(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1D26702EC(&qword_1ED96C0E0);
      goto LABEL_7;
    }
    sub_1D2666380(v12, a3 & 1);
    v18 = sub_1D25892E0((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B5BDC(v9, a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for RBLayerCopyImageKey(0);
  result = (_OWORD *)sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266E20C(uint64_t a1, _QWORD *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1D2589364(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = v11[3];
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v19 = *v4;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v20 = v19[7];
        v21 = sub_1D26CD56C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v13, a1, v21);
      }
      goto LABEL_11;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1D266FE3C();
      goto LABEL_7;
    }
    sub_1D26666B8(v16, a3 & 1);
    v23 = sub_1D2589364(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v19 = *v4;
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D2534120((uint64_t)a2, (uint64_t)v10, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      return sub_1D26B5BE0(v13, (uint64_t)v10, a1, v19);
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

_OWORD *sub_1D266E394(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  _OWORD *v19;
  _OWORD *result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1D25891F4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = (_OWORD *)(v18[7] + 32 * v12);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
        return sub_1D2538448(a1, v19);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D2670108();
      goto LABEL_7;
    }
    sub_1D2666B98(v15, a4 & 1);
    v21 = sub_1D25891F4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B5C98(v12, a2, a3, a1, v18);
      return (_OWORD *)swift_bridgeObjectRetain();
    }
  }
  result = (_OWORD *)sub_1D26CE424();
  __break(1u);
  return result;
}

_OWORD *sub_1D266E4C4(_OWORD *a1, void *a2, char a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *result;
  unint64_t v18;
  char v19;

  v4 = v3;
  v7 = *v3;
  v9 = sub_1D25892E4((uint64_t)a2);
  v10 = *(_QWORD *)(v7 + 16);
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = *(_QWORD *)(v7 + 24);
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = (_OWORD *)(*(_QWORD *)(v15 + 56) + 32 * v9);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
        return sub_1D2538448(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1D26702EC(&qword_1ED96C0D8);
      goto LABEL_7;
    }
    sub_1D2666E94(v12, a3 & 1);
    v18 = sub_1D25892E4((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B5BDC(v9, a2, a1, v15);
      return a2;
    }
  }
  type metadata accessor for FileAttributeKey(0);
  result = (_OWORD *)sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266E5EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1D266E8D4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED962128, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D26B5D64);
}

uint64_t sub_1D266E608(__int128 *a1, id *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)*v3;
  v13 = sub_1D25896D8(a2);
  v14 = v11[2];
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = v11[3];
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v19 = *v4;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v20 = v19[7] + 40 * v13;
        __swift_destroy_boxed_opaque_existential_1(v20);
        return sub_1D2538F38(a1, v20);
      }
      goto LABEL_11;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1D267088C();
      goto LABEL_7;
    }
    sub_1D26671E0(v16, a3 & 1);
    v22 = sub_1D25896D8(a2);
    if ((v17 & 1) == (v23 & 1))
    {
      v13 = v22;
      v19 = *v4;
      if ((v17 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D2537078((uint64_t)a2, (uint64_t)v10, &qword_1ED963110);
      return sub_1D26B5D70(v13, (uint64_t)v10, a1, v19);
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266E78C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  char v22;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1D25891F4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        result = swift_release();
        *(_QWORD *)(v19 + 8 * v12) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D2670AC0();
      goto LABEL_7;
    }
    sub_1D2667450(v15, a4 & 1);
    v21 = sub_1D25891F4(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      v12 = v21;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B5E18(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266E8B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_1D266E8D4(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F670], &qword_1ED962B78, (void (*)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D26B5E60);
}

uint64_t sub_1D266E8D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(_QWORD), uint64_t *a6, void (*a7)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v10;
  uint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  _BOOL8 v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  unint64_t v27;
  char v28;

  v10 = v7;
  v15 = *v7;
  v17 = sub_1D25891F4(a2, a3);
  v18 = *(_QWORD *)(v15 + 16);
  v19 = (v16 & 1) == 0;
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    v21 = v16;
    v22 = *(_QWORD *)(v15 + 24);
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      v23 = *v10;
      if ((v21 & 1) != 0)
      {
LABEL_8:
        v24 = *(_QWORD *)(v23 + 56);
        v25 = a5(0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v17, a1, v25);
      }
      goto LABEL_11;
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      sub_1D2670C74(a5, a6);
      goto LABEL_7;
    }
    sub_1D2667764(v20, a4 & 1, a5, a6);
    v27 = sub_1D25891F4(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      v17 = v27;
      v23 = *v10;
      if ((v21 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      a7(v17, a2, a3, a1, v23);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266EA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t result;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;

  v6 = (_QWORD **)v5;
  v28 = a2;
  v29 = a3;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)*v5;
  v16 = sub_1D258989C(a4);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_14;
  }
  v20 = v15;
  v21 = v14[3];
  if (v21 >= v19 && (a5 & 1) != 0)
  {
LABEL_7:
    v22 = *v6;
    if ((v20 & 1) != 0)
    {
LABEL_8:
      v23 = (uint64_t *)(v22[7] + 24 * v16);
      sub_1D253EE04(*v23, v23[1]);
      result = swift_bridgeObjectRelease();
      v25 = v28;
      *v23 = a1;
      v23[1] = v25;
      v23[2] = v29;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= v19 && (a5 & 1) == 0)
  {
    sub_1D2670ED0();
    goto LABEL_7;
  }
  sub_1D2667AC8(v19, a5 & 1);
  v26 = sub_1D258989C(a4);
  if ((v20 & 1) != (v27 & 1))
  {
LABEL_14:
    result = sub_1D26CE424();
    __break(1u);
    return result;
  }
  v16 = v26;
  v22 = *v6;
  if ((v20 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  return sub_1D26B5EFC(v16, (uint64_t)v13, a1, v28, v29, v22);
}

uint64_t sub_1D266EBD0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D25898B8(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_1D26CBA24();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1D2671CF0((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998], &qword_1ED96FE70, &qword_1EFC83448);
      goto LABEL_7;
    }
    sub_1D2667EAC(v17, a3 & 1);
    v24 = sub_1D25898B8(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1D26B5FB4(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266ED74(__int128 *a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t result;
  unint64_t v23;
  char v24;
  uint64_t v25;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D25363D0(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7] + 40 * v14;
        __swift_destroy_boxed_opaque_existential_1(v21);
        return sub_1D2538F38(a1, v21);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1D2671170();
      goto LABEL_7;
    }
    sub_1D26682A8(v17, a3 & 1);
    v23 = sub_1D25363D0(a2);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1D26B5FC8(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266EEF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  unint64_t v22;
  char v23;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_1D25891F4(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];
        v20 = type metadata accessor for RemoteActivityArchiveBudget();
        return sub_1D2673B64(a1, v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v12, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_1D26713B8();
      goto LABEL_7;
    }
    sub_1D2668654(v15, a4 & 1);
    v22 = sub_1D25891F4(a2, a3);
    if ((v16 & 1) == (v23 & 1))
    {
      v12 = v22;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B6070(v12, a2, a3, a1, v18);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

id sub_1D266F038(__int128 *a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  id result;
  unint64_t v18;
  char v19;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1D25393D8((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7] + 40 * v9;
        __swift_destroy_boxed_opaque_existential_1(v16);
        return (id)sub_1D2538F38(a1, v16);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1D26715FC();
      goto LABEL_7;
    }
    sub_1D26689D4(v12, a3 & 1);
    v18 = sub_1D25393D8((uint64_t)a2);
    if ((v13 & 1) == (v19 & 1))
    {
      v9 = v18;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B6100(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1D26CDE54();
  result = (id)sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266F15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1D25891F4(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        result = swift_release();
        *v21 = a1;
        v21[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1D26717C4();
      goto LABEL_7;
    }
    sub_1D2668CB0(v17, a5 & 1);
    v23 = sub_1D25891F4(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B6168(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266F29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _QWORD *v5;
  _QWORD **v6;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t result;
  unint64_t v23;
  char v24;

  v6 = (_QWORD **)v5;
  v12 = (_QWORD *)*v5;
  v14 = sub_1D25891F4(a3, a4);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a5 & 1) != 0)
    {
LABEL_7:
      v20 = *v6;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = (uint64_t *)(v20[7] + 16 * v14);
        result = swift_bridgeObjectRelease();
        *v21 = a1;
        v21[1] = a2;
        return result;
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_1D2671984();
      goto LABEL_7;
    }
    sub_1D2668FB8(v17, a5 & 1);
    v23 = sub_1D25891F4(a3, a4);
    if ((v18 & 1) == (v24 & 1))
    {
      v14 = v23;
      v20 = *v6;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B6168(v14, a3, a4, a1, a2, v20);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266F3DC(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D2589970(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_1D26CB9DC();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1D2671CF0((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED96FD28, (uint64_t *)&unk_1EFC823D0);
      goto LABEL_7;
    }
    sub_1D26695F0(v17, a3 & 1);
    v24 = sub_1D2589970(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1D26B61B8(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

void sub_1D266F580(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;

  v4 = (_QWORD **)v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D2589970(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];

      *(_QWORD *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D2671FD4();
    goto LABEL_7;
  }
  sub_1D26699EC(v17, a3 & 1);
  v22 = sub_1D2589970(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_1D26CE424();
    __break(1u);
    return;
  }
  v14 = v22;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1D26B6288(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1D266F6E0(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1D26CBA24();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D258998C(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      v21 = v20[7];
      v22 = type metadata accessor for RemoteActivitySubscription(0);
      return sub_1D2673B64(a1, v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, type metadata accessor for RemoteActivitySubscription);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1D2672204();
    goto LABEL_7;
  }
  sub_1D2669D84(v17, a3 & 1);
  v24 = sub_1D258998C(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    result = sub_1D26CE424();
    __break(1u);
    return result;
  }
  v14 = v24;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_1D26B6324(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_1D266F850(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  char v25;
  uint64_t v26;

  v4 = (_QWORD **)v3;
  v8 = sub_1D26CBED4();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_1D2589A24(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
  }
  else
  {
    v18 = v13;
    v19 = v12[3];
    if (v19 >= v17 && (a3 & 1) != 0)
    {
LABEL_7:
      v20 = *v4;
      if ((v18 & 1) != 0)
      {
LABEL_8:
        v21 = v20[7];
        v22 = sub_1D26CBE5C();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v21 + *(_QWORD *)(*(_QWORD *)(v22 - 8) + 72) * v14, a1, v22);
      }
      goto LABEL_11;
    }
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_1D26724CC();
      goto LABEL_7;
    }
    sub_1D266A1A0(v17, a3 & 1);
    v24 = sub_1D2589A24(a2);
    if ((v18 & 1) == (v25 & 1))
    {
      v14 = v24;
      v20 = *v4;
      if ((v18 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_1D26B63DC(v14, (uint64_t)v11, a1, v20);
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

id sub_1D266F9D8(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v7;
  char v8;
  unint64_t v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  id result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v7 = (_QWORD *)*v3;
  v9 = sub_1D25393D8((uint64_t)a2);
  v10 = v7[2];
  v11 = (v8 & 1) == 0;
  v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
  }
  else
  {
    v13 = v8;
    v14 = v7[3];
    if (v14 >= v12 && (a3 & 1) != 0)
    {
LABEL_7:
      v15 = *v4;
      if ((v13 & 1) != 0)
      {
LABEL_8:
        v16 = v15[7];
        v17 = type metadata accessor for ExtensionMetadata();
        return (id)sub_1D2673B64(a1, v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v9, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      }
      goto LABEL_11;
    }
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1D26727AC();
      goto LABEL_7;
    }
    sub_1D266A598(v12, a3 & 1);
    v19 = sub_1D25393D8((uint64_t)a2);
    if ((v13 & 1) == (v20 & 1))
    {
      v9 = v19;
      v15 = *v4;
      if ((v13 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B6494(v9, (uint64_t)a2, a1, v15);
      return a2;
    }
  }
  sub_1D26CDE54();
  result = (id)sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D266FB08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t *v23;
  uint64_t result;
  unint64_t v25;
  char v26;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_1D25891F4(a4, a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= v19 && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = (uint64_t *)(v22[7] + 24 * v16);
        sub_1D253EE04(*v23, v23[1]);
        result = swift_bridgeObjectRelease();
        *v23 = a1;
        v23[1] = a2;
        v23[2] = a3;
        return result;
      }
      goto LABEL_11;
    }
    if (v21 >= v19 && (a6 & 1) == 0)
    {
      sub_1D26729DC();
      goto LABEL_7;
    }
    sub_1D266A8EC(v19, a6 & 1);
    v25 = sub_1D25891F4(a4, a5);
    if ((v20 & 1) == (v26 & 1))
    {
      v16 = v25;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_1D26B6520(v16, a4, a5, a1, a2, a3, v22);
      return swift_bridgeObjectRetain();
    }
  }
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

void *sub_1D266FC64()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  char v25;
  uint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9622F8);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v2 + 56) + v20;
    v22 = *(_QWORD *)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    v25 = *(_BYTE *)(v21 + 16);
    *v24 = v19;
    v24[1] = v18;
    v26 = *(_QWORD *)(v4 + 56) + v20;
    *(_QWORD *)v26 = v22;
    *(_QWORD *)(v26 + 8) = v23;
    *(_BYTE *)(v26 + 16) = v25;
    swift_bridgeObjectRetain();
    result = (void *)sub_1D2541E98(v22, v23, v25);
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D266FE3C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v36 = sub_1D26CD56C();
  v1 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v35 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v37 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D558);
  v31 = v0;
  v5 = *v0;
  v6 = sub_1D26CE1FC();
  v7 = *(_QWORD *)(v5 + 16);
  v39 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v29 = v39;
    v28 = v31;
LABEL_25:
    *v28 = v29;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v39;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v38 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v32 = v5 + 64;
  v33 = (unint64_t)(v12 + 63) >> 6;
  v15 = (uint64_t)v34;
  v16 = v36;
  for (i = v39;
        ;
        result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(_QWORD *)(i + 56) + v22, v24, v16))
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v11 << 6);
      v20 = v38;
      goto LABEL_9;
    }
    v25 = v11 + 1;
    v20 = v38;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      v11 = v25 + 1;
      if (v25 + 1 >= v33)
        goto LABEL_23;
      v26 = *(_QWORD *)(v32 + 8 * v11);
      if (!v26)
        break;
    }
LABEL_22:
    v14 = (v26 - 1) & v26;
    v19 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    v21 = *(_QWORD *)(v37 + 72) * v19;
    sub_1D2534120(*(_QWORD *)(v20 + 48) + v21, v15, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    v22 = *(_QWORD *)(v1 + 72) * v19;
    v23 = *(_QWORD *)(v20 + 56) + v22;
    v24 = v35;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v35, v23, v16);
    sub_1D2539ADC(v15, *(_QWORD *)(i + 48) + v21, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  }
  v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    result = (void *)swift_release();
    v28 = v31;
    v29 = v39;
    goto LABEL_25;
  }
  v26 = *(_QWORD *)(v32 + 8 * v27);
  if (v26)
  {
    v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v11 >= v33)
      goto LABEL_23;
    v26 = *(_QWORD *)(v32 + 8 * v11);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D2670108()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  _OWORD v26[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0C0);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v4;
    return result;
  }
  v25 = v1;
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = 32 * v15;
    sub_1D2537950(*(_QWORD *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    sub_1D2538448(v26, (_OWORD *)(*(_QWORD *)(v4 + 56) + v20));
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D26702EC(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  _OWORD v23[2];

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_1D26CE1FC();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v2 = v5;
    return result;
  }
  result = (id)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v20);
    ++v10;
    if (!v21)
    {
      v10 = v20 + 1;
      if (v20 + 1 >= v14)
        goto LABEL_26;
      v21 = *(_QWORD *)(v7 + 8 * v10);
      if (!v21)
        break;
    }
LABEL_25:
    v13 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(void **)(*(_QWORD *)(v3 + 48) + 8 * v16);
    v19 = 32 * v16;
    sub_1D2537950(*(_QWORD *)(v3 + 56) + 32 * v16, (uint64_t)v23);
    *(_QWORD *)(*(_QWORD *)(v5 + 48) + v17) = v18;
    sub_1D2538448(v23, (_OWORD *)(*(_QWORD *)(v5 + 56) + v19));
    result = v18;
  }
  v22 = v20 + 2;
  if (v22 >= v14)
    goto LABEL_26;
  v21 = *(_QWORD *)(v7 + 8 * v22);
  if (v21)
  {
    v10 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v21 = *(_QWORD *)(v7 + 8 * v10);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D26704A8()
{
  return sub_1D2670C74((uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870], &qword_1ED962128);
}

void *sub_1D26704BC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963CC8);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      v9 = v29 + 1;
      if (v29 + 1 >= v13)
        goto LABEL_26;
      v30 = *(_QWORD *)(v6 + 8 * v9);
      if (!v30)
        break;
    }
LABEL_25:
    v12 = (v30 - 1) & v30;
    v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    v16 = v15 << 6;
    v17 = *(_QWORD *)(v2 + 48) + (v15 << 6);
    v19 = *(void **)v17;
    v18 = *(_QWORD *)(v17 + 8);
    v21 = *(_QWORD *)(v17 + 16);
    v20 = *(_QWORD *)(v17 + 24);
    v22 = *(_QWORD *)(v17 + 32);
    v23 = *(_BYTE *)(v17 + 40);
    v24 = *(_QWORD *)(v17 + 48);
    LOBYTE(v17) = *(_BYTE *)(v17 + 56);
    v25 = 8 * v15;
    v26 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v25);
    v27 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v27 = v19;
    *(_QWORD *)(v27 + 8) = v18;
    *(_QWORD *)(v27 + 16) = v21;
    *(_QWORD *)(v27 + 24) = v20;
    *(_QWORD *)(v27 + 32) = v22;
    *(_BYTE *)(v27 + 40) = v23;
    *(_QWORD *)(v27 + 48) = v24;
    *(_BYTE *)(v27 + 56) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v25) = v26;
    swift_bridgeObjectRetain();
    swift_retain();
    v28 = v19;
    result = (void *)swift_bridgeObjectRetain();
  }
  v31 = v29 + 2;
  if (v31 >= v13)
    goto LABEL_26;
  v30 = *(_QWORD *)(v6 + 8 * v31);
  if (v30)
  {
    v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v30 = *(_QWORD *)(v6 + 8 * v9);
    ++v31;
    if (v30)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D26706AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83450);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      v9 = v27 + 1;
      if (v27 + 1 >= v13)
        goto LABEL_26;
      v28 = *(_QWORD *)(v6 + 8 * v9);
      if (!v28)
        break;
    }
LABEL_25:
    v12 = (v28 - 1) & v28;
    v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    v16 = 40 * v15;
    v17 = *(_QWORD *)(v2 + 48) + 40 * v15;
    v18 = *(void **)v17;
    v19 = *(_QWORD *)(v17 + 8);
    v21 = *(_QWORD *)(v17 + 16);
    v20 = *(_QWORD *)(v17 + 24);
    v22 = *(_BYTE *)(v17 + 32);
    v23 = 8 * v15;
    v24 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v23);
    LOBYTE(v17) = *(_BYTE *)(v17 + 33);
    v25 = *(_QWORD *)(v4 + 48) + v16;
    *(_QWORD *)v25 = v18;
    *(_QWORD *)(v25 + 8) = v19;
    *(_QWORD *)(v25 + 16) = v21;
    *(_QWORD *)(v25 + 24) = v20;
    *(_BYTE *)(v25 + 32) = v22;
    *(_BYTE *)(v25 + 33) = v17;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v23) = v24;
    v26 = v18;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v29 = v27 + 2;
  if (v29 >= v13)
    goto LABEL_26;
  v28 = *(_QWORD *)(v6 + 8 * v29);
  if (v28)
  {
    v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v29 + 1;
    if (__OFADD__(v29, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v28 = *(_QWORD *)(v6 + 8 * v9);
    ++v29;
    if (v28)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D267088C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t *v24;
  __int128 v25[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963240);
  v6 = *v0;
  v7 = sub_1D26CE1FC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = v6 + 64;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v16)
      goto LABEL_23;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_23;
      v22 = *(_QWORD *)(v10 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_22:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_9:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    sub_1D2537078(*(_QWORD *)(v6 + 48) + v19, (uint64_t)v5, &qword_1ED963110);
    v20 = 40 * v18;
    sub_1D2538510(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v25);
    sub_1D2673BA8((uint64_t)v5, *(_QWORD *)(v8 + 48) + v19);
    result = (void *)sub_1D2538F38(v25, *(_QWORD *)(v8 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_25;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_23;
    v22 = *(_QWORD *)(v10 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D2670AC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963248);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D2670C74(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *result;
  unint64_t v12;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;

  v37 = a1(0);
  v4 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v6 = (char *)&v33 - v5;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v7 = *v2;
  v8 = sub_1D26CE1FC();
  v9 = *(_QWORD *)(v7 + 16);
  v38 = v8;
  if (!v9)
  {
    result = (void *)swift_release();
    v32 = v38;
    v31 = v34;
LABEL_28:
    *v31 = v32;
    return result;
  }
  v10 = v8;
  result = (void *)(v8 + 64);
  v12 = (unint64_t)((1 << *(_BYTE *)(v10 + 32)) + 63) >> 6;
  if (v10 != v7 || (unint64_t)result >= v7 + 64 + 8 * v12)
  {
    result = memmove(result, (const void *)(v7 + 64), 8 * v12);
    v10 = v38;
  }
  v35 = v7 + 64;
  v14 = 0;
  *(_QWORD *)(v10 + 16) = *(_QWORD *)(v7 + 16);
  v15 = 1 << *(_BYTE *)(v7 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v7 + 64);
  v36 = (unint64_t)(v15 + 63) >> 6;
  v18 = v37;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v14 << 6);
      goto LABEL_12;
    }
    v28 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v28);
    ++v14;
    if (!v29)
    {
      v14 = v28 + 1;
      if (v28 + 1 >= v36)
        goto LABEL_26;
      v29 = *(_QWORD *)(v35 + 8 * v14);
      if (!v29)
        break;
    }
LABEL_25:
    v17 = (v29 - 1) & v29;
    v20 = __clz(__rbit64(v29)) + (v14 << 6);
LABEL_12:
    v21 = 16 * v20;
    v22 = (uint64_t *)(*(_QWORD *)(v7 + 48) + 16 * v20);
    v24 = *v22;
    v23 = v22[1];
    v25 = *(_QWORD *)(v4 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(_QWORD *)(v7 + 56) + v25, v18);
    v26 = v38;
    v27 = (_QWORD *)(*(_QWORD *)(v38 + 48) + v21);
    *v27 = v24;
    v27[1] = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(_QWORD *)(v26 + 56) + v25, v6, v18);
    result = (void *)swift_bridgeObjectRetain();
  }
  v30 = v28 + 2;
  if (v30 >= v36)
  {
LABEL_26:
    result = (void *)swift_release();
    v31 = v34;
    v32 = v38;
    goto LABEL_28;
  }
  v29 = *(_QWORD *)(v35 + 8 * v30);
  if (v29)
  {
    v14 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    v14 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v14 >= v36)
      goto LABEL_26;
    v29 = *(_QWORD *)(v35 + 8 * v14);
    ++v30;
    if (v29)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

char *sub_1D2670ED0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  char *v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int64_t v43;

  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v39 = (char *)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963940);
  v35 = v0;
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = *(_QWORD *)(v2 + 16);
  v42 = v3;
  if (!v4)
  {
    result = (char *)swift_release();
    v33 = v42;
    v32 = v35;
LABEL_25:
    *v32 = v33;
    return result;
  }
  v5 = v3;
  result = (char *)(v3 + 64);
  v7 = (char *)(v2 + 64);
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  v36 = v2 + 64;
  if (v5 != v2 || result >= &v7[8 * v8])
  {
    result = (char *)memmove(result, v7, 8 * v8);
    v5 = v42;
  }
  v9 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v41 = v2;
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v37 = (unint64_t)(v10 + 63) >> 6;
  v13 = v38;
  v14 = v39;
  v15 = v40;
  v16 = v42;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v43 = v9;
      v18 = v17 | (v9 << 6);
      v19 = v41;
      goto LABEL_9;
    }
    v28 = v9 + 1;
    v19 = v41;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v28 >= v37)
      goto LABEL_23;
    v29 = *(_QWORD *)(v36 + 8 * v28);
    v30 = v9 + 1;
    if (!v29)
    {
      v30 = v28 + 1;
      if (v28 + 1 >= v37)
        goto LABEL_23;
      v29 = *(_QWORD *)(v36 + 8 * v30);
      if (!v29)
        break;
    }
LABEL_22:
    v12 = (v29 - 1) & v29;
    v43 = v30;
    v18 = __clz(__rbit64(v29)) + (v30 << 6);
LABEL_9:
    v20 = *(_QWORD *)(v13 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v14, *(_QWORD *)(v19 + 48) + v20, v15);
    v21 = *(_QWORD *)(v19 + 56);
    v22 = 24 * v18;
    v23 = (uint64_t *)(v21 + 24 * v18);
    v24 = *v23;
    v25 = v23[1];
    v26 = v23[2];
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(_QWORD *)(v16 + 48) + v20, v14, v15);
    v27 = (uint64_t *)(*(_QWORD *)(v16 + 56) + v22);
    *v27 = v24;
    v27[1] = v25;
    v27[2] = v26;
    sub_1D253FE08(v24, v25);
    result = (char *)swift_bridgeObjectRetain();
    v9 = v43;
  }
  v31 = v28 + 2;
  if (v31 >= v37)
  {
LABEL_23:
    result = (char *)swift_release();
    v32 = v35;
    v33 = v42;
    goto LABEL_25;
  }
  v29 = *(_QWORD *)(v36 + 8 * v31);
  if (v29)
  {
    v30 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v30 >= v37)
      goto LABEL_23;
    v29 = *(_QWORD *)(v36 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D2671170()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  __int128 v26[2];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963950);
  v6 = *v0;
  v7 = sub_1D26CE1FC();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v8;
    return result;
  }
  v24 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v25 = v6 + 64;
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v12 = 1 << *(_BYTE *)(v6 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v6 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v15)
        goto LABEL_23;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_22:
    v14 = (v21 - 1) & v21;
    v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    v18 = *(_QWORD *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v18, v2);
    v19 = 40 * v17;
    sub_1D2538510(*(_QWORD *)(v6 + 56) + v19, (uint64_t)v26);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v18, v5, v2);
    result = (void *)sub_1D2538F38(v26, *(_QWORD *)(v8 + 56) + v19);
  }
  v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v24;
    goto LABEL_25;
  }
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v15)
      goto LABEL_23;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1D26713B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;

  v1 = v0;
  v2 = type metadata accessor for RemoteActivityArchiveBudget();
  v29 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83408);
  v5 = *v0;
  v6 = sub_1D26CE1FC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v26 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v27 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v28 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v23 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v23);
    ++v11;
    if (!v24)
    {
      v11 = v23 + 1;
      if (v23 + 1 >= v28)
        goto LABEL_26;
      v24 = *(_QWORD *)(v27 + 8 * v11);
      if (!v24)
        break;
    }
LABEL_25:
    v14 = (v24 - 1) & v24;
    v16 = __clz(__rbit64(v24)) + (v11 << 6);
LABEL_12:
    v17 = 16 * v16;
    v18 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v16);
    v19 = *v18;
    v20 = v18[1];
    v21 = *(_QWORD *)(v29 + 72) * v16;
    sub_1D2534120(*(_QWORD *)(v5 + 56) + v21, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
    v22 = (_QWORD *)(*(_QWORD *)(v7 + 48) + v17);
    *v22 = v19;
    v22[1] = v20;
    sub_1D2539ADC((uint64_t)v4, *(_QWORD *)(v7 + 56) + v21, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v28)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_28;
  }
  v24 = *(_QWORD *)(v27 + 8 * v25);
  if (v24)
  {
    v11 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v11 >= v28)
      goto LABEL_26;
    v24 = *(_QWORD *)(v27 + 8 * v11);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1D26715FC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  __int128 v22[2];

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963978);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      v9 = v19 + 1;
      if (v19 + 1 >= v13)
        goto LABEL_26;
      v20 = *(_QWORD *)(v6 + 8 * v9);
      if (!v20)
        break;
    }
LABEL_25:
    v12 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 40 * v15;
    sub_1D2538510(*(_QWORD *)(v2 + 56) + 40 * v15, (uint64_t)v22);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    sub_1D2538F38(v22, *(_QWORD *)(v4 + 56) + v18);
    result = v17;
  }
  v21 = v19 + 2;
  if (v21 >= v13)
    goto LABEL_26;
  v20 = *(_QWORD *)(v6 + 8 * v21);
  if (v20)
  {
    v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v20 = *(_QWORD *)(v6 + 8 * v9);
    ++v21;
    if (v20)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D26717C4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83458);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = *(_OWORD *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = v19;
    v21[1] = v18;
    *(_OWORD *)(*(_QWORD *)(v4 + 56) + v16) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D2671984()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC823E0);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      v9 = v25 + 1;
      if (v25 + 1 >= v13)
        goto LABEL_26;
      v26 = *(_QWORD *)(v6 + 8 * v9);
      if (!v26)
        break;
    }
LABEL_25:
    v12 = (v26 - 1) & v26;
    v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + v16);
    v19 = *v17;
    v18 = v17[1];
    v20 = (uint64_t *)(*(_QWORD *)(v2 + 56) + v16);
    v21 = *v20;
    v22 = v20[1];
    v23 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v23 = v19;
    v23[1] = v18;
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 56) + v16);
    *v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v27 = v25 + 2;
  if (v27 >= v13)
    goto LABEL_26;
  v26 = *(_QWORD *)(v6 + 8 * v27);
  if (v26)
  {
    v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v26 = *(_QWORD *)(v6 + 8 * v9);
    ++v27;
    if (v26)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D2671B3C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962138);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = (void *)swift_bridgeObjectRetain();
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

char *sub_1D2671CF0(uint64_t (*a1)(_QWORD), uint64_t *a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *result;
  char *v13;
  unint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  int64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;

  v46 = a1(0);
  v42 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v45 = (char *)&v38 - v6;
  v44 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v41 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v38 = v3;
  v8 = *v3;
  v9 = sub_1D26CE1FC();
  v10 = *(_QWORD *)(v8 + 16);
  v48 = v9;
  if (!v10)
  {
    result = (char *)swift_release();
    v37 = v48;
    v36 = v38;
LABEL_25:
    *v36 = v37;
    return result;
  }
  v11 = v9;
  result = (char *)(v9 + 64);
  v13 = (char *)(v8 + 64);
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  v39 = v8 + 64;
  if (v11 != v8 || result >= &v13[8 * v14])
  {
    result = (char *)memmove(result, v13, 8 * v14);
    v11 = v48;
  }
  v15 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v16 = 1 << *(_BYTE *)(v8 + 32);
  v47 = v8;
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(v8 + 64);
  v40 = (unint64_t)(v16 + 63) >> 6;
  v19 = v41;
  v20 = v42;
  v22 = v43;
  v21 = v44;
  v23 = v46;
  v24 = v48;
  while (1)
  {
    if (v18)
    {
      v25 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v49 = v15;
      v26 = v25 | (v15 << 6);
      v27 = v47;
      goto LABEL_9;
    }
    v32 = v15 + 1;
    v27 = v47;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v32 >= v40)
      goto LABEL_23;
    v33 = *(_QWORD *)(v39 + 8 * v32);
    v34 = v15 + 1;
    if (!v33)
    {
      v34 = v32 + 1;
      if (v32 + 1 >= v40)
        goto LABEL_23;
      v33 = *(_QWORD *)(v39 + 8 * v34);
      if (!v33)
        break;
    }
LABEL_22:
    v18 = (v33 - 1) & v33;
    v49 = v34;
    v26 = __clz(__rbit64(v33)) + (v34 << 6);
LABEL_9:
    v28 = *(_QWORD *)(v19 + 72) * v26;
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v22, *(_QWORD *)(v27 + 48) + v28, v21);
    v29 = *(_QWORD *)(v20 + 72) * v26;
    v30 = *(_QWORD *)(v27 + 56) + v29;
    v31 = v45;
    (*(void (**)(char *, unint64_t, uint64_t))(v20 + 16))(v45, v30, v23);
    (*(void (**)(unint64_t, char *, uint64_t))(v19 + 32))(*(_QWORD *)(v24 + 48) + v28, v22, v21);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v20 + 32))(*(_QWORD *)(v24 + 56) + v29, v31, v23);
    v15 = v49;
  }
  v35 = v32 + 2;
  if (v35 >= v40)
  {
LABEL_23:
    result = (char *)swift_release();
    v36 = v38;
    v37 = v48;
    goto LABEL_25;
  }
  v33 = *(_QWORD *)(v39 + 8 * v35);
  if (v33)
  {
    v34 = v35;
    goto LABEL_22;
  }
  while (1)
  {
    v34 = v35 + 1;
    if (__OFADD__(v35, 1))
      break;
    if (v34 >= v40)
      goto LABEL_23;
    v33 = *(_QWORD *)(v39 + 8 * v34);
    ++v35;
    if (v33)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1D2671FD4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  int64_t v25;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC823C0);
  v23 = v0;
  v5 = *v0;
  v6 = sub_1D26CE1FC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_23:
    result = (id)swift_release();
    *v23 = v7;
    return result;
  }
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v10 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v11 = 1 << *(_BYTE *)(v5 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v5 + 64);
  v24 = v5 + 64;
  v25 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v25)
        goto LABEL_23;
      v20 = *(_QWORD *)(v24 + 8 * v10);
      if (!v20)
        break;
    }
LABEL_22:
    v13 = (v20 - 1) & v20;
    v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    v16 = *(_QWORD *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v16, v1);
    v17 = 8 * v15;
    v18 = *(void **)(*(_QWORD *)(v5 + 56) + v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v16, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v17) = v18;
    result = v18;
  }
  v21 = v19 + 2;
  if (v21 >= v25)
    goto LABEL_23;
  v20 = *(_QWORD *)(v24 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v25)
      goto LABEL_23;
    v20 = *(_QWORD *)(v24 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1D2672204()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t i;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  int64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v1 = type metadata accessor for RemoteActivitySubscription(0);
  v36 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = sub_1D26CBA24();
  v3 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v33 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83440);
  v30 = v0;
  v5 = *v0;
  v6 = sub_1D26CE1FC();
  v7 = *(_QWORD *)(v5 + 16);
  v38 = v6;
  if (!v7)
  {
    result = (void *)swift_release();
    v28 = v38;
    v27 = v30;
LABEL_25:
    *v27 = v28;
    return result;
  }
  v8 = v6;
  result = (void *)(v6 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    v8 = v38;
  }
  v11 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v37 = v5;
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v31 = v5 + 64;
  v32 = (unint64_t)(v12 + 63) >> 6;
  v16 = v33;
  v15 = v34;
  v17 = (uint64_t)v35;
  for (i = v38;
        ;
        result = (void *)sub_1D2539ADC(v17, *(_QWORD *)(i + 56) + v23, type metadata accessor for RemoteActivitySubscription))
  {
    if (v14)
    {
      v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v20 = v19 | (v11 << 6);
      v21 = v37;
      goto LABEL_9;
    }
    v24 = v11 + 1;
    v21 = v37;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      v11 = v24 + 1;
      if (v24 + 1 >= v32)
        goto LABEL_23;
      v25 = *(_QWORD *)(v31 + 8 * v11);
      if (!v25)
        break;
    }
LABEL_22:
    v14 = (v25 - 1) & v25;
    v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    v22 = *(_QWORD *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(_QWORD *)(v21 + 48) + v22, v15);
    v23 = *(_QWORD *)(v36 + 72) * v20;
    sub_1D2534120(*(_QWORD *)(v21 + 56) + v23, v17, type metadata accessor for RemoteActivitySubscription);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(i + 48) + v22, v16, v15);
  }
  v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    result = (void *)swift_release();
    v27 = v30;
    v28 = v38;
    goto LABEL_25;
  }
  v25 = *(_QWORD *)(v31 + 8 * v26);
  if (v25)
  {
    v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v11 >= v32)
      goto LABEL_23;
    v25 = *(_QWORD *)(v31 + 8 * v11);
    ++v26;
    if (v25)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

char *sub_1D26724CC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *result;
  char *v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;

  v41 = sub_1D26CBE5C();
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v40 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_1D26CBED4();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v38 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83438);
  v33 = v0;
  v3 = *v0;
  v4 = sub_1D26CE1FC();
  v5 = *(_QWORD *)(v3 + 16);
  v43 = v4;
  if (!v5)
  {
    result = (char *)swift_release();
    v32 = v43;
    v31 = v33;
LABEL_25:
    *v31 = v32;
    return result;
  }
  v6 = v4;
  result = (char *)(v4 + 64);
  v8 = (char *)(v3 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v6 + 32)) + 63) >> 6;
  v34 = v3 + 64;
  if (v6 != v3 || result >= &v8[8 * v9])
  {
    result = (char *)memmove(result, v8, 8 * v9);
    v6 = v43;
  }
  v10 = 0;
  *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v42 = v3;
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v35 = (unint64_t)(v11 + 63) >> 6;
  v14 = v36;
  v15 = v37;
  v17 = v38;
  v16 = v39;
  v18 = v41;
  v19 = v43;
  while (1)
  {
    if (v13)
    {
      v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v44 = v10;
      v21 = v20 | (v10 << 6);
      v22 = v42;
      goto LABEL_9;
    }
    v27 = v10 + 1;
    v22 = v42;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v27);
    v29 = v10 + 1;
    if (!v28)
    {
      v29 = v27 + 1;
      if (v27 + 1 >= v35)
        goto LABEL_23;
      v28 = *(_QWORD *)(v34 + 8 * v29);
      if (!v28)
        break;
    }
LABEL_22:
    v13 = (v28 - 1) & v28;
    v44 = v29;
    v21 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    v23 = *(_QWORD *)(v14 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v17, *(_QWORD *)(v22 + 48) + v23, v16);
    v24 = *(_QWORD *)(v15 + 72) * v21;
    v25 = *(_QWORD *)(v22 + 56) + v24;
    v26 = v40;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v40, v25, v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(_QWORD *)(v19 + 48) + v23, v17, v16);
    result = (char *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(_QWORD *)(v19 + 56) + v24, v26, v18);
    v10 = v44;
  }
  v30 = v27 + 2;
  if (v30 >= v35)
  {
LABEL_23:
    result = (char *)swift_release();
    v31 = v33;
    v32 = v43;
    goto LABEL_25;
  }
  v28 = *(_QWORD *)(v34 + 8 * v30);
  if (v28)
  {
    v29 = v30;
    goto LABEL_22;
  }
  while (1)
  {
    v29 = v30 + 1;
    if (__OFADD__(v30, 1))
      break;
    if (v29 >= v35)
      goto LABEL_23;
    v28 = *(_QWORD *)(v34 + 8 * v29);
    ++v30;
    if (v28)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_1D26727AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for ExtensionMetadata();
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963970);
  v5 = *v0;
  v6 = sub_1D26CE1FC();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (id)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (id)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_1D2534120(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    sub_1D2539ADC((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    result = v19;
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (id)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D26729DC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  int64_t v26;
  unint64_t v27;
  int64_t v28;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962850);
  v2 = *v0;
  v3 = sub_1D26CE1FC();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      v9 = v26 + 1;
      if (v26 + 1 >= v13)
        goto LABEL_26;
      v27 = *(_QWORD *)(v6 + 8 * v9);
      if (!v27)
        break;
    }
LABEL_25:
    v12 = (v27 - 1) & v27;
    v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = *(_QWORD *)(v2 + 56);
    v18 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v19 = v18[1];
    v20 = 24 * v15;
    v21 = *(_QWORD *)(v17 + v20);
    v22 = *(_QWORD *)(v17 + v20 + 8);
    v23 = *(_QWORD *)(v17 + v20 + 16);
    v24 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v24 = *v18;
    v24[1] = v19;
    v25 = (uint64_t *)(*(_QWORD *)(v4 + 56) + v20);
    *v25 = v21;
    v25[1] = v22;
    v25[2] = v23;
    swift_bridgeObjectRetain();
    sub_1D253FE08(v21, v22);
    result = (void *)swift_bridgeObjectRetain();
  }
  v28 = v26 + 2;
  if (v28 >= v13)
    goto LABEL_26;
  v27 = *(_QWORD *)(v6 + 8 * v28);
  if (v27)
  {
    v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v27 = *(_QWORD *)(v6 + 8 * v9);
    ++v28;
    if (v27)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableStore()
{
  return objc_opt_self();
}

_QWORD *sub_1D2672BD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for ChronoMetadataStore.MutableExtensionStore();
  v1 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[2] = v1;
  type metadata accessor for ChronoMetadataStore.MutableRemoteExtensionStore();
  v2 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[3] = v2;
  type metadata accessor for ChronoMetadataStore.MutableConfiguredWidgetStore();
  v3 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[4] = v3;
  type metadata accessor for ChronoMetadataStore.MutableHostConfigurationStore();
  v4 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[5] = v4;
  type metadata accessor for ChronoMetadataStore.MutableSnapshotConfigurationStore();
  v5 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[6] = v5;
  type metadata accessor for ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore();
  v6 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[7] = v6;
  type metadata accessor for ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore();
  v7 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[8] = v7;
  type metadata accessor for ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore();
  v8 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[9] = v8;
  type metadata accessor for ChronoMetadataStore.MutableRemoteActivitySubscriptionStore();
  v9 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[10] = v9;
  type metadata accessor for ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore();
  v10 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[11] = v10;
  type metadata accessor for ChronoMetadataStore.MutablePushSubcriptionStore();
  v11 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[12] = v11;
  type metadata accessor for ChronoMetadataStore.MutablePublicTokenStore();
  v12 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[13] = v12;
  type metadata accessor for ChronoMetadataStore.MutablePushTokenStore();
  v13 = swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  v0[14] = v13;
  return v0;
}

uint64_t sub_1D2672E50(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  id v12;

  v8 = *(_QWORD **)(a3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  v9 = sub_1D2672BD8();
  v10 = *(_QWORD *)(a3 + 128);
  v11 = *(os_unfair_lock_s **)(v10 + 16);
  v12 = a4;
  swift_retain();
  os_unfair_lock_lock(v11);
  swift_retain();
  sub_1D255A95C(a1, a2, v8, (uint64_t)v9, v12);

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  swift_release();
  sub_1D265505C();
  return swift_release();
}

uint64_t sub_1D2672F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D26730C0(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t))sub_1D255C7EC);
}

uint64_t sub_1D2672F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for ExtensionMetadata();
  v7 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v11 = a2 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v12 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_1D2534120(v11, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      sub_1D2534120((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v6, 0, 1, v15);
      sub_1D2658728((uint64_t)v6, v9);
      sub_1D253703C((uint64_t)v6, &qword_1ED9627C0);
      sub_1D25340E4((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      if (v2)
        break;
      v11 += v12;
      --v10;
    }
    while (v10);
  }
  return 1;
}

uint64_t sub_1D26730A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D26730C0(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t))sub_1D255CFBC);
}

uint64_t sub_1D26730C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t))
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;

  v10 = *(_QWORD *)(a3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  v11 = sub_1D2672BD8();
  v12 = *(_QWORD *)(a3 + 128);
  v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_retain();
  a5(a1, a2, v10, v11, a4);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1D265505C();
  return swift_release();
}

uint64_t type metadata accessor for ChronoMetadataStore.ExtensionStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ChronoMetadataStore.RemoteExtensionStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ChronoMetadataStore.ConfiguredWidgetStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ChronoMetadataStore.SnapshotConfigurationStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ChronoMetadataStore.StateReplicatorDeviceMetadataStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ChronoMetadataStore.StateReplicatorRecordMetadataStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ChronoMetadataStore.StateReplicatorPairingRelationshipStore()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for ChronoMetadataStore.RemoteActivitySubscriptionStore()
{
  return objc_opt_self();
}

uint64_t sub_1D26732A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = type metadata accessor for ExtensionMetadata();
  v29 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (!v6)
    return v7;
  v32 = MEMORY[0x1E0DEE9D8];
  sub_1D2584448(0, v6, 0);
  v7 = v32;
  result = sub_1D2597D84(a1);
  v10 = result;
  v11 = 0;
  v12 = a1 + 64;
  v13 = *(_BYTE *)(a1 + 32);
  v26 = a1 + 88;
  v27 = v6;
  v28 = a1;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << v13)
  {
    v16 = (unint64_t)v10 >> 6;
    if ((*(_QWORD *)(v12 + 8 * ((unint64_t)v10 >> 6)) & (1 << v10)) == 0)
      goto LABEL_28;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v9)
      goto LABEL_29;
    v31 = v11;
    v17 = v9;
    v18 = swift_bridgeObjectRetain();
    sub_1D265625C(v18, (uint64_t)v5);
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v7;
    }
    v30 = 0;
    swift_bridgeObjectRelease();
    v32 = v7;
    v20 = *(_QWORD *)(v7 + 16);
    v19 = *(_QWORD *)(v7 + 24);
    if (v20 >= v19 >> 1)
    {
      sub_1D2584448(v19 > 1, v20 + 1, 1);
      v7 = v32;
    }
    *(_QWORD *)(v7 + 16) = v20 + 1;
    result = sub_1D2539ADC((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))+ *(_QWORD *)(v29 + 72) * v20, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    a1 = v28;
    v13 = *(_BYTE *)(v28 + 32);
    v14 = 1 << v13;
    if (v10 >= 1 << v13)
      goto LABEL_30;
    v21 = *(_QWORD *)(v12 + 8 * v16);
    if ((v21 & (1 << v10)) == 0)
      goto LABEL_31;
    v9 = v17;
    if (*(_DWORD *)(v28 + 36) != (_DWORD)v17)
      goto LABEL_32;
    v22 = v21 & (-2 << (v10 & 0x3F));
    if (v22)
    {
      v14 = __clz(__rbit64(v22)) | v10 & 0xFFFFFFFFFFFFFFC0;
      v1 = v30;
      v15 = v27;
    }
    else
    {
      v23 = v16 + 1;
      v24 = (v14 + 63) >> 6;
      v1 = v30;
      v15 = v27;
      if (v16 + 1 < v24)
      {
        v25 = *(_QWORD *)(v12 + 8 * v23);
        if (!v25)
        {
          v23 = v16 + 2;
          if (v16 + 2 >= v24)
            goto LABEL_4;
          v25 = *(_QWORD *)(v12 + 8 * v23);
          if (!v25)
          {
            while (v24 - 3 != v16)
            {
              v25 = *(_QWORD *)(v26 + 8 * v16++);
              if (v25)
              {
                v23 = v16 + 2;
                goto LABEL_18;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_18:
        v14 = __clz(__rbit64(v25)) + (v23 << 6);
      }
    }
LABEL_4:
    v11 = v31 + 1;
    v10 = v14;
    if (v31 + 1 == v15)
      return v7;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ChronoMetadataStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.__allocating_init(storage:corruptionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t method lookup function for ChronoMetadataStore.MutableStore()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ChronoMetadataStore.DatabaseAccessor()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.DatabaseAccessor()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for ChronoMetadataStore.ExtensionStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.ExtensionStore.metadata(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableExtensionStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutableExtensionStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableExtensionStore.set(metadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableExtensionStore.set(metadata:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableExtensionStore.removeAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t method lookup function for ChronoMetadataStore.ConfiguredWidgetStore()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableConfiguredWidgetStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutableConfiguredWidgetStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableConfiguredWidgetStore.addIfNotPresent(identity:widgetID:date:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableConfiguredWidgetStore.delete(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableConfiguredWidgetStore.deleteAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t method lookup function for ChronoMetadataStore.SnapshotConfigurationStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.SnapshotConfigurationStore.allConfigurations()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableSnapshotConfigurationStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutableSnapshotConfigurationStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableSnapshotConfigurationStore.set(configuration:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t method lookup function for ChronoMetadataStore.RemoteActivitySubscriptionStore()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableRemoteActivitySubscriptionStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutableRemoteActivitySubscriptionStore()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for ChronoMetadataStore.StateReplicatorDeviceMetadataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.StateReplicatorDeviceMetadataStore.localDeviceID()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore.set(localDeviceID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore.remove()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t method lookup function for ChronoMetadataStore.StateReplicatorRecordMetadataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore.update(recordMetadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore.removeAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t method lookup function for ChronoMetadataStore.StateReplicatorPairingRelationshipStore()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore()
{
  return swift_lookUpClassMethod();
}

uint64_t method lookup function for ChronoMetadataStore.RemoteExtensionStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.RemoteExtensionStore.allExtensions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableRemoteExtensionStore()
{
  return objc_opt_self();
}

uint64_t sub_1D2673930(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  unint64_t v10;
  unint64_t i;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23[4];

  v3 = a1 + 64;
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v10 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v10 | (v9 << 6); ; i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    v15 = 16 * i;
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + v15);
    v17 = *v16;
    v18 = v16[1];
    v19 = (uint64_t *)(*(_QWORD *)(a1 + 56) + v15);
    v20 = *v19;
    v21 = v19[1];
    v23[0] = v17;
    v23[1] = v18;
    v23[2] = v20;
    v23[3] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1D2654E08(v23);
    if (v1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v9 >= v7)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v9);
    if (!v13)
    {
      v14 = v9 + 1;
      if (v9 + 1 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v3 + 8 * v14);
      if (v13)
        goto LABEL_14;
      v14 = v9 + 2;
      if (v9 + 2 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v3 + 8 * v14);
      if (v13)
        goto LABEL_14;
      v14 = v9 + 3;
      if (v9 + 3 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v3 + 8 * v14);
      if (v13)
      {
LABEL_14:
        v9 = v14;
        goto LABEL_15;
      }
      v22 = v9 + 4;
      if (v9 + 4 >= v7)
        return swift_release();
      v13 = *(_QWORD *)(v3 + 8 * v22);
      v9 += 4;
      if (!v13)
        break;
    }
LABEL_15:
    v6 = (v13 - 1) & v13;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v7)
      return swift_release();
    v13 = *(_QWORD *)(v3 + 8 * v9);
    ++v22;
    if (v13)
      goto LABEL_15;
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_1D2673B04(unint64_t result)
{
  if (result >= 4)
    return 4;
  return result;
}

uint64_t sub_1D2673B14(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1D2663B3C(a1, v2[2], v2[3], v2[4], a2, MEMORY[0x1E0D877E0]);
}

uint64_t sub_1D2673B3C(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_1D2663B3C(a1, v2[2], v2[3], v2[4], a2, MEMORY[0x1E0D87648]);
}

uint64_t sub_1D2673B64(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2673BA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D2673BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  id v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  _QWORD v16[2];
  uint64_t v17;

  v15[0] = a1;
  v1 = sub_1D26CBAA8();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = 0;
  v16[1] = 0xE000000000000000;
  v5 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](27);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v6 = objc_allocWithZone(MEMORY[0x1E0CB36A8]);
  v7 = objc_msgSend(v6, sel_init, v15[0]);
  sub_1D26CBA9C();
  v8 = (void *)sub_1D26CBA84();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v7, sel_setTimeZone_, v8);

  v9 = v15[1];
  v10 = sub_1D2557230(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v9)
  {

  }
  else
  {
    v16[0] = sub_1D253DB20(MEMORY[0x1E0DEE9D8]);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      swift_bridgeObjectRetain();
      v12 = 0;
      do
      {
        v13 = *(_QWORD *)(v10 + 8 * v12++ + 32);
        v17 = v13;
        swift_bridgeObjectRetain();
        sub_1D2654624(&v17, v7, v16);
        swift_bridgeObjectRelease();
      }
      while (v11 != v12);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_retain();
    v14 = swift_bridgeObjectRetain();
    sub_1D2673930(v14);
    swift_bridgeObjectRelease_n();

    swift_release();
  }
}

uint64_t sub_1D2673EAC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1])
    return 1;
  else
    return sub_1D26CE3D0() & 1;
}

unint64_t sub_1D2673F00()
{
  unint64_t result;

  result = qword_1EFC83460;
  if (!qword_1EFC83460)
  {
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EFC83460);
  }
  return result;
}

uint64_t sub_1D2673F44()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2673F68()
{
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for StateReplicatorEnumValues.DestinationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2673FC4 + 4 * byte_1D26D9B24[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2673FF8 + 4 * byte_1D26D9B1F[v4]))();
}

uint64_t sub_1D2673FF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2674000(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2674008);
  return result;
}

uint64_t sub_1D2674014(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D267401CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2674020(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2674028(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateReplicatorEnumValues.DestinationType()
{
  return &type metadata for StateReplicatorEnumValues.DestinationType;
}

ValueMetadata *type metadata accessor for StateReplicatorEnumValues()
{
  return &type metadata for StateReplicatorEnumValues;
}

uint64_t storeEnumTagSinglePayload for StateReplicatorEnumValues.RelationshipState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D26740A0 + 4 * byte_1D26D9B2E[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D26740D4 + 4 * byte_1D26D9B29[v4]))();
}

uint64_t sub_1D26740D4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D26740DC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D26740E4);
  return result;
}

uint64_t sub_1D26740F0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D26740F8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D26740FC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2674104(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for StateReplicatorEnumValues.RelationshipState()
{
  return &type metadata for StateReplicatorEnumValues.RelationshipState;
}

unint64_t sub_1D2674124()
{
  unint64_t result;

  result = qword_1EFC83468;
  if (!qword_1EFC83468)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DA16C, &type metadata for StateReplicatorEnumValues.RelationshipState);
    atomic_store(result, (unint64_t *)&qword_1EFC83468);
  }
  return result;
}

unint64_t sub_1D267416C()
{
  unint64_t result;

  result = qword_1EFC83470;
  if (!qword_1EFC83470)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DA20C, &type metadata for StateReplicatorEnumValues.DestinationType);
    atomic_store(result, (unint64_t *)&qword_1EFC83470);
  }
  return result;
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableSnapshotConfigurationStore.delete(_:)()
{
  return dispatch thunk of ChronoMetadataStore.MutableExtensionStore.set(metadata:)();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableRemoteActivitySubscriptionStore.update(subscription:)()
{
  return dispatch thunk of ChronoMetadataStore.MutableStateReplicatorDeviceMetadataStore.set(localDeviceID:)();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableRemoteActivitySubscriptionStore.delete(subscriptionID:)()
{
  return dispatch thunk of ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore.update(recordMetadata:)();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore.remove(recordID:)()
{
  return dispatch thunk of ChronoMetadataStore.MutableExtensionStore.set(metadata:)();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore.update(remoteDevice:)()
{
  return dispatch thunk of ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore.update(recordMetadata:)();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore.remove(remoteDeviceID:)()
{
  return dispatch thunk of ChronoMetadataStore.MutableExtensionStore.set(metadata:)();
}

uint64_t dispatch thunk of ChronoMetadataStore.ExtensionStore.allExtensions()()
{
  return dispatch thunk of ChronoMetadataStore.RemoteExtensionStore.allExtensions()();
}

uint64_t dispatch thunk of ChronoMetadataStore.SnapshotConfigurationStore.allCreationDates()()
{
  return dispatch thunk of ChronoMetadataStore.RemoteExtensionStore.allExtensions()();
}

uint64_t dispatch thunk of ChronoMetadataStore.RemoteActivitySubscriptionStore.allSubscriptions()()
{
  return dispatch thunk of ChronoMetadataStore.RemoteExtensionStore.allExtensions()();
}

uint64_t dispatch thunk of ChronoMetadataStore.StateReplicatorRecordMetadataStore.recordMetadata()()
{
  return dispatch thunk of ChronoMetadataStore.RemoteExtensionStore.allExtensions()();
}

uint64_t dispatch thunk of ChronoMetadataStore.StateReplicatorPairingRelationshipStore.remoteDevices()()
{
  return dispatch thunk of ChronoMetadataStore.RemoteExtensionStore.allExtensions()();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableStateReplicatorPairingRelationshipStore.removeAll()()
{
  return dispatch thunk of ChronoMetadataStore.MutableStateReplicatorRecordMetadataStore.removeAll()();
}

uint64_t dispatch thunk of ChronoMetadataStore.ConfiguredWidgetStore.startDatesForWidgetIDs()()
{
  return dispatch thunk of ChronoMetadataStore.RemoteExtensionStore.allExtensions()();
}

uint64_t getEnumTagSinglePayload for FeatureFlags.Widgets(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureFlags.Widgets(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1D2674400 + 4 * byte_1D26DA27D[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1D2674434 + 4 * byte_1D26DA278[v4]))();
}

uint64_t sub_1D2674434(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D267443C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2674444);
  return result;
}

uint64_t sub_1D2674450(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2674458);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1D267445C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2674464(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags.Widgets()
{
  return &type metadata for FeatureFlags.Widgets;
}

uint64_t storeEnumTagSinglePayload for FeatureFlags.SpringBoard(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D26744CC + 4 * byte_1D26DA287[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D2674500 + 4 * byte_1D26DA282[v4]))();
}

uint64_t sub_1D2674500(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2674508(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2674510);
  return result;
}

uint64_t sub_1D267451C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2674524);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D2674528(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2674530(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureFlags.SpringBoard()
{
  return &type metadata for FeatureFlags.SpringBoard;
}

unint64_t sub_1D2674550()
{
  unint64_t result;

  result = qword_1EFC83478;
  if (!qword_1EFC83478)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DA308, &type metadata for FeatureFlags.SpringBoard);
    atomic_store(result, (unint64_t *)&qword_1EFC83478);
  }
  return result;
}

uint64_t sub_1D2674594(unsigned __int8 a1)
{
  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1D26745C0 + 4 * byte_1D26DA28C[a1]))("BackgroundAbsentCheck", 21);
}

const char *sub_1D26745C0()
{
  return "AnimatedTransition";
}

const char *sub_1D2674620()
{
  return "AnimatedTransitionWatchOS";
}

const char *sub_1D2674634()
{
  return "ContextualWidgets";
}

const char *sub_1D2674648()
{
  return "ControlsBuildAndRunHack";
}

const char *sub_1D267465C()
{
  return "RelevanceDuringTimelineReload";
}

const char *sub_1D2674670()
{
  return "Widgets";
}

uint64_t sub_1D2674684()
{
  unsigned __int8 *v0;

  return sub_1D2674594(*v0);
}

unint64_t sub_1D26746A4()
{
  unint64_t result;

  result = qword_1EFC83480;
  if (!qword_1EFC83480)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DA370, &type metadata for FeatureFlags.Widgets);
    atomic_store(result, (unint64_t *)&qword_1EFC83480);
  }
  return result;
}

const char *sub_1D26746E8()
{
  return "SpringBoard";
}

uint64_t sub_1D26746FC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(const char *, uint64_t))((char *)sub_1D2674724 + 4 * byte_1D26DA297[*v0]))("Papaya", 6);
}

const char *sub_1D2674724()
{
  return "Autobahn";
}

const char *sub_1D2674738()
{
  return "Maglev";
}

uint64_t ActivityArchivedViewCollection.ViewEntry.containsPrivacyRedactions.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83488);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CD6D4();
  v3 = sub_1D26CD68C();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1D253703C((uint64_t)v2, &qword_1EFC83488);
    v5 = 0;
  }
  else
  {
    v5 = sub_1D26CD680();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5 & 1;
}

uint64_t ActivityArchivedViewCollection.ViewEntry.entryData.getter()
{
  return 0;
}

uint64_t sub_1D267482C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CD6BC();
  *a1 = result;
  return result;
}

uint64_t sub_1D2674850()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D26748C0()
{
  return 0;
}

uint64_t sub_1D26748CC()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83488);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CD6D4();
  v3 = sub_1D26CD68C();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1D253703C((uint64_t)v2, &qword_1EFC83488);
    v5 = 0;
  }
  else
  {
    v5 = sub_1D26CD680();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5 & 1;
}

uint64_t sub_1D2674994()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC9ChronoKit36ActivityPreviewHostingViewController15StateController__stateIndex;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D26749E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ActivityPreviewHostingViewController.StateController(0);
  result = sub_1D26CC12C();
  *a1 = result;
  return result;
}

void sub_1D2674A24()
{
  qword_1EFC8AAA8 = 0x4020000000000000;
}

double sub_1D2674A34()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1D2674A78(double a1, double a2)
{
  uint64_t v2;
  double *v5;
  uint64_t result;

  v5 = (double *)(v2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize);
  result = swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1D2674ACC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double sub_1D2674B10()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1D2674B54(double a1)
{
  uint64_t v1;
  double *v3;
  uint64_t result;

  v3 = (double *)(v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D2674BA4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_1D2674BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double v4;
  double v5;
  uint64_t v7;

  v0 = sub_1D26CD458();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2675F68((uint64_t)v3);
  sub_1D26CD434();
  v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v5;
}

double sub_1D2674C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  double Width;
  uint64_t v6;
  CGRect v7;
  CGRect v8;

  v0 = sub_1D26CD458();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2675F68((uint64_t)v3);
  sub_1D26CD44C();
  Width = CGRectGetWidth(v7);
  sub_1D26CD44C();
  CGRectGetHeight(v8);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return Width;
}

uint64_t sub_1D2674D14()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_autoupdatingPreviewView + 24);
}

uint64_t sub_1D2674D28()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D2674D6C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D2674DB4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ActivityPreviewHostingViewController.viewKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind;
  v4 = sub_1D26CD5E4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D2674E3C()
{
  return sub_1D26CC660();
}

uint64_t sub_1D2674E64(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2674ECC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D2674F20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D2674F7C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

char *ActivityPreviewHostingViewController.__allocating_init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, double a9, char a10, uint64_t a11, uint64_t a12)
{
  objc_class *v12;
  int v19;
  id v20;

  v19 = a8 & 1;
  v20 = objc_allocWithZone(v12);
  return ActivityPreviewHostingViewController.init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)(a1, a2, a3, a4, a5, a6, a7, v19, a9, a10, a11, a12);
}

char *ActivityPreviewHostingViewController.init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, double a9, unsigned __int8 a10, uint64_t a11, uint64_t a12)
{
  _BYTE *v12;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  double *v20;
  double *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  double v31;
  double v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  char *v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  double *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *result;
  char *v48;
  id v49;
  uint64_t v50;
  double v51;
  double v52;
  char *v53;
  id v54;
  uint64_t v55;
  id v56;
  char *v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  LODWORD(v71) = a8;
  v68 = *(double *)&a6;
  v69 = *(double *)&a7;
  v66 = a5;
  v76 = a4;
  v75 = a10;
  v73 = a12;
  v74 = a3;
  v72 = a11;
  v63 = sub_1D26CD458();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v61 = (uint64_t)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0);
  MEMORY[0x1E0C80A78](v67);
  v19 = (uint64_t *)((char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (double *)&v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize];
  *v20 = 0.0;
  v20[1] = 0.0;
  v21 = (double *)&v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric];
  *(_QWORD *)&v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric] = 0;
  v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewCollections] = a1;
  v65 = a1;
  v70 = type metadata accessor for ActivityPreviewHostingViewController.StateController(0);
  v22 = swift_allocObject();
  v64 = v22;
  swift_beginAccess();
  v80 = a2;
  v23 = v12;
  swift_bridgeObjectRetain();
  sub_1D26CC1B0();
  swift_endAccess();
  *(_QWORD *)&v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_stateController] = v22;
  v24 = &v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_environment];
  v25 = sub_1D26CC7A4();
  v60 = *(_QWORD *)(v25 - 8);
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
  v26(v24, a4, v25);
  v27 = &v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind];
  *(double *)&v28 = COERCE_DOUBLE(sub_1D26CD5E4());
  v59 = *(_QWORD *)(v28 - 8);
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v30 = v66;
  v29(v27, v66, v28);
  swift_beginAccess();
  *v21 = a9;
  if ((v71 & 1) != 0)
    v31 = 0.0;
  else
    v31 = v69;
  if ((v71 & 1) != 0)
    v32 = 0.0;
  else
    v32 = v68;
  swift_beginAccess();
  *v20 = v32;
  v20[1] = v31;
  v33 = &v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName];
  v35 = v72;
  v34 = v73;
  *(_QWORD *)v33 = v72;
  *((_QWORD *)v33 + 1) = v34;
  v36 = (int *)v67;
  v37 = (char *)v19 + *(int *)(v67 + 32);
  v71 = v25;
  v26(v37, v76, v25);
  v38 = (char *)v19 + v36[9];
  v69 = *(double *)&v28;
  v29(v38, v30, v28);
  v19[2] = 0;
  v39 = (uint64_t *)((char *)v19 + v36[12]);
  v77 = 0;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1D26CCF18();
  v40 = v79;
  *v39 = v78;
  v39[1] = v40;
  v19[4] = v65;
  sub_1D25369B0(&qword_1EFC834D0, type metadata accessor for ActivityPreviewHostingViewController.StateController, (uint64_t)&unk_1D26DA5B8);
  *v19 = sub_1D26CC39C();
  v19[1] = v41;
  v19[3] = v74;
  v42 = (double *)((char *)v19 + v36[10]);
  *v42 = v32;
  v42[1] = v31;
  v43 = (uint64_t *)((char *)v19 + v36[11]);
  *v43 = v35;
  v43[1] = v34;
  v44 = (uint64_t)&v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_autoupdatingPreviewView];
  sub_1D2677070((uint64_t)v19, (uint64_t)&v23[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_autoupdatingPreviewView]);

  sub_1D2534120(v44, (uint64_t)v19, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
  sub_1D25369B0(&qword_1EFC834D8, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView, (uint64_t)&unk_1D26DA568);
  v45 = sub_1D26CCFC0();
  v46 = sub_1D25878D8(v45, 0, 1, v75);
  result = (char *)objc_msgSend(v46, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  v48 = result;
  v49 = objc_msgSend(result, sel_layer);

  v50 = v61;
  sub_1D2675F68(v61);
  sub_1D26CD434();
  v52 = v51;
  (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v50, v63);
  objc_msgSend(v49, sel_setCornerRadius_, v52);

  result = (char *)objc_msgSend(v46, sel_view);
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v53 = result;
  v54 = objc_msgSend(result, sel_layer);

  objc_msgSend(v54, sel_setMasksToBounds_, 1);
  v55 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController;
  v56 = *(id *)&v46[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController];
  sub_1D26CC8B8();

  result = (char *)objc_msgSend(*(id *)&v46[v55], sel_view);
  if (result)
  {
    v57 = result;
    v58 = objc_msgSend((id)objc_opt_self(), sel_blackColor);
    objc_msgSend(v57, sel_setBackgroundColor_, v58);

    (*(void (**)(uint64_t, double))(v59 + 8))(v30, COERCE_DOUBLE(*(_QWORD *)&v69));
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v76, v71);
    return v46;
  }
LABEL_13:
  __break(1u);
  return result;
}

id ActivityPreviewHostingViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void ActivityPreviewHostingViewController.init(coder:)()
{
  _BYTE *v0;
  _QWORD *v1;

  v1 = &v0[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize];
  *v1 = 0;
  v1[1] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric] = 0;
  v0[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced] = 0;

  sub_1D26CE1D8();
  __break(1u);
}

uint64_t sub_1D267574C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    return sub_1D26CC1EC();
  }
  else
  {
    if (qword_1ED962F08 != -1)
      swift_once();
    MEMORY[0x1E0C80A78](qword_1ED977E20);
    return sub_1D26CC378();
  }
}

uint64_t sub_1D2675840()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t sub_1D26758C0()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewCollections)
                   + 16);
}

uint64_t sub_1D26758D4()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D267595C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  result = swift_release();
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewCollections);
  v5 = *(_QWORD *)(v4 + 16);
  if ((uint64_t)v9 >= v5)
  {
    if (v5)
    {
      v6 = sub_1D26CD734();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(a1, v8, v6);
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    result = swift_release();
    if ((v9 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v9 < *(_QWORD *)(v4 + 16))
    {
      v6 = sub_1D26CD734();
      v7 = *(_QWORD *)(v6 - 8);
      v8 = v4
         + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
         + *(_QWORD *)(v7 + 72) * v9;
      return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(a1, v8, v6);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2675AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;

  v56 = a1;
  v53 = sub_1D26CD6E0();
  v51 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v54 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D26CD41C();
  v49 = *(_QWORD *)(v3 - 8);
  v50 = v3;
  MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1D26CD734();
  v5 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC834E0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v42 - v12;
  v14 = sub_1D26CD5E4();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v42 - v19;
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v21((char *)&v42 - v19, v1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind, v14);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v20, v14) != *MEMORY[0x1E0CF0870])
    goto LABEL_5;
  v43 = v5;
  v44 = v1;
  v22 = v55;
  v45 = v11;
  v46 = v13;
  v47 = v20;
  v21(v18, (uint64_t)v20, v14);
  v48 = v15;
  (*(void (**)(char *, uint64_t))(v15 + 96))(v18, v14);
  v23 = sub_1D26CD5D8();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = v14;
  if ((*(unsigned int (**)(char *, uint64_t))(v24 + 88))(v18, v23) != *MEMORY[0x1E0CF0850])
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v23);
    v20 = v47;
    v15 = v48;
LABEL_5:
    v30 = sub_1D26CD458();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v56, 1, 1, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
  v26 = v7;
  sub_1D267595C((uint64_t)v7);
  *v22 = 1;
  v28 = v49;
  v27 = v50;
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v49 + 104))(v22, *MEMORY[0x1E0CF02A8], v50);
  v29 = (uint64_t)v46;
  sub_1D26CD728();
  (*(void (**)(_BYTE *, uint64_t))(v28 + 8))(v22, v27);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v26, v52);
  v32 = v56;
  v33 = v53;
  v34 = v51;
  v35 = v47;
  v36 = (uint64_t)v45;
  sub_1D2537078(v29, (uint64_t)v45, &qword_1EFC834E0);
  v37 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v36, 1, v33);
  v38 = v54;
  v39 = v48;
  if (v37 == 1)
  {
    sub_1D253703C(v29, &qword_1EFC834E0);
    sub_1D253703C(v36, &qword_1EFC834E0);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v35, v25);
    v40 = sub_1D26CD458();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v32, 1, 1, v40);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v54, v36, v33);
    sub_1D26CD6C8();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v33);
    sub_1D253703C(v29, &qword_1EFC834E0);
    v41 = sub_1D26CD458();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v32, 0, 1, v41);
    return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v35, v25);
  }
}

uint64_t sub_1D2675F68@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t (*v63)(char *, uint64_t);
  int v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  char *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(_BYTE *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  void (*v96)(_BYTE *, uint64_t);
  _BYTE *v97;
  void (*v98)(_QWORD, _QWORD, _QWORD);
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t (*v103)(uint64_t, uint64_t, uint64_t);
  int v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(_QWORD, _QWORD);
  void (*v119)(char *, uint64_t);
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t result;
  char *v128;
  double Width;
  char *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  NSObject *v138;
  os_log_type_t v139;
  uint8_t *v140;
  uint64_t v141;
  os_log_type_t v142;
  uint8_t *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  _BYTE *v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  uint64_t v171;
  void (*v172)(_QWORD, _QWORD, _QWORD);
  uint64_t v173;
  char *v174;
  uint64_t v175;
  char *v176;
  CGRect v177;
  CGRect v178;
  CGRect v179;
  CGRect v180;

  v173 = a1;
  v2 = sub_1D26CD458();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v144 = (char *)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v148 = (char *)&v144 - v7;
  MEMORY[0x1E0C80A78](v6);
  v147 = (char *)&v144 - v8;
  v160 = sub_1D26CD6E0();
  v162 = *(_QWORD *)(v160 - 8);
  v9 = MEMORY[0x1E0C80A78](v160);
  v153 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v154 = (char *)&v144 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC834E0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v152 = (uint64_t)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v158 = (uint64_t)&v144 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v163 = (uint64_t)&v144 - v18;
  MEMORY[0x1E0C80A78](v17);
  v159 = (uint64_t)&v144 - v19;
  v20 = sub_1D26CD41C();
  v166 = *(_QWORD *)(v20 - 8);
  v167 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v157 = (char *)&v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v156 = (char *)&v144 - v24;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v144 - v25;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC835A0);
  v28 = MEMORY[0x1E0C80A78](v27);
  v151 = (char *)&v144 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v150 = (char *)&v144 - v31;
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v144 - v32;
  v34 = sub_1D26CD6EC();
  v164 = *(_QWORD *)(v34 - 8);
  v165 = v34;
  v35 = MEMORY[0x1E0C80A78](v34);
  v149 = (char *)&v144 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x1E0C80A78](v35);
  v146 = (char *)&v144 - v38;
  MEMORY[0x1E0C80A78](v37);
  v155 = (char *)&v144 - v39;
  v40 = sub_1D26CD5E4();
  v41 = *(_QWORD *)(v40 - 8);
  v42 = MEMORY[0x1E0C80A78](v40);
  v44 = (char *)&v144 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v42);
  v46 = (char *)&v144 - v45;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC835A8);
  v48 = MEMORY[0x1E0C80A78](v47);
  v170 = (char *)&v144 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x1E0C80A78](v48);
  v145 = (uint64_t)&v144 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v161 = (char *)&v144 - v53;
  MEMORY[0x1E0C80A78](v52);
  v55 = (char *)&v144 - v54;
  v56 = sub_1D26CD734();
  v168 = *(_QWORD *)(v56 - 8);
  v169 = v56;
  MEMORY[0x1E0C80A78](v56);
  v175 = (uint64_t)&v144 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D267595C(v175);
  v171 = v3;
  v172 = (void (*)(_QWORD, _QWORD, _QWORD))v2;
  v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v176 = v55;
  v59 = v2;
  v60 = v1;
  v58(v55, 1, 1, v59);
  v61 = &v1[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind];
  v62 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
  v62(v46, v61, v40);
  v63 = *(uint64_t (**)(char *, uint64_t))(v41 + 88);
  v174 = v46;
  v64 = v63(v46, v40);
  if (v64 != *MEMORY[0x1E0CF0870])
  {
    if (v64 == *MEMORY[0x1E0CF0878])
    {
      v76 = v166;
      v75 = v167;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v166 + 104))(v26, *MEMORY[0x1E0CF02B8], v167);
      v77 = v175;
      sub_1D26CD710();
      (*(void (**)(_BYTE *, uint64_t))(v76 + 8))(v26, v75);
      v79 = v164;
      v78 = v165;
      v80 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v164 + 48))(v33, 1, v165);
      v99 = v171;
      if (v80 == 1)
      {
        sub_1D253703C((uint64_t)v33, &qword_1EFC835A0);
      }
      else
      {
        v87 = v155;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v155, v33, v78);
        v88 = (uint64_t)v161;
        sub_1D26CD71C();
        (*(void (**)(char *, uint64_t))(v79 + 8))(v87, v78);
        v89 = (uint64_t)v176;
        sub_1D253703C((uint64_t)v176, &qword_1EFC835A8);
        sub_1D25384CC(v88, v89, &qword_1EFC835A8);
      }
      v98 = v172;
      goto LABEL_28;
    }
    goto LABEL_40;
  }
  v62(v44, v174, v40);
  (*(void (**)(char *, uint64_t))(v41 + 96))(v44, v40);
  v65 = sub_1D26CD5D8();
  v66 = *(_QWORD *)(v65 - 8);
  v67 = (*(uint64_t (**)(char *, uint64_t))(v66 + 88))(v44, v65);
  if (v67 != *MEMORY[0x1E0CF0850])
  {
    if (v67 == *MEMORY[0x1E0CF0858])
    {
      *v26 = 3;
      v82 = v166;
      v81 = v167;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v166 + 104))(v26, *MEMORY[0x1E0CF02A8], v167);
      v83 = v151;
      v77 = v175;
      sub_1D26CD710();
      v84 = (uint64_t)v83;
      (*(void (**)(_BYTE *, uint64_t))(v82 + 8))(v26, v81);
      v85 = v164;
      v86 = v165;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v84, 1, v165) == 1)
      {
        sub_1D253703C(v84, &qword_1EFC835A0);
        v99 = v171;
        v98 = v172;
LABEL_28:
        v121 = (uint64_t)v170;
        goto LABEL_29;
      }
      v109 = v86;
      v155 = v60;
      v110 = v149;
      (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v149, v84, v109);
      v111 = (uint64_t)v161;
      sub_1D26CD71C();
      v112 = (uint64_t)v176;
      sub_1D253703C((uint64_t)v176, &qword_1EFC835A8);
      sub_1D25384CC(v111, v112, &qword_1EFC835A8);
      v113 = v112;
      v114 = v145;
      sub_1D2537078(v113, v145, &qword_1EFC835A8);
      v99 = v171;
      v98 = v172;
      if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v171 + 48))(v114, 1, v172) == 1)
      {
        (*(void (**)(char *, uint64_t))(v85 + 8))(v110, v165);
        sub_1D253703C(v114, &qword_1EFC835A8);
        goto LABEL_28;
      }
      v128 = v144;
      (*(void (**)(char *, uint64_t, _QWORD))(v99 + 32))(v144, v114, v98);
      sub_1D26CD44C();
      Width = CGRectGetWidth(v180);
      v130 = &v155[OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize];
      v131 = swift_beginAccess();
      if (Width >= *((double *)v130 + 1))
      {
        (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v99 + 8))(v128, v98);
        (*(void (**)(char *, uint64_t))(v164 + 8))(v149, v165);
        goto LABEL_28;
      }
      CGSizeMake(v131, v132, v133, v134);
      sub_1D26CD434();
      v135 = v161;
      sub_1D26CD440();
      (*(void (**)(char *, void (*)(_QWORD, _QWORD, _QWORD)))(v99 + 8))(v128, v98);
      (*(void (**)(char *, uint64_t))(v164 + 8))(v149, v165);
      v136 = (uint64_t)v176;
      sub_1D253703C((uint64_t)v176, &qword_1EFC835A8);
      v58(v135, 0, 1, (uint64_t)v98);
      v125 = (uint64_t)v135;
      v126 = v136;
      goto LABEL_27;
    }
    v77 = v175;
    if (v67 == *MEMORY[0x1E0CF0860])
    {
      *v26 = 0;
      v91 = v166;
      v90 = v167;
      (*(void (**)(_BYTE *, _QWORD, uint64_t))(v166 + 104))(v26, *MEMORY[0x1E0CF02A8], v167);
      v92 = (uint64_t)v150;
      sub_1D26CD710();
      (*(void (**)(_BYTE *, uint64_t))(v91 + 8))(v26, v90);
      v94 = v164;
      v93 = v165;
      v95 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v164 + 48))(v92, 1, v165);
      v99 = v171;
      v98 = v172;
      if (v95 == 1)
      {
        sub_1D253703C(v92, &qword_1EFC835A0);
        goto LABEL_28;
      }
      v122 = v146;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 32))(v146, v92, v93);
      v123 = v161;
      sub_1D26CD71C();
      (*(void (**)(char *, uint64_t))(v94 + 8))(v122, v93);
      v124 = (uint64_t)v176;
      sub_1D253703C((uint64_t)v176, &qword_1EFC835A8);
      v125 = (uint64_t)v123;
      v126 = v124;
LABEL_27:
      sub_1D25384CC(v125, v126, &qword_1EFC835A8);
      goto LABEL_28;
    }
    (*(void (**)(char *, uint64_t))(v66 + 8))(v44, v65);
LABEL_40:
    if (qword_1EFC821F8 != -1)
      swift_once();
    v141 = sub_1D26CC09C();
    __swift_project_value_buffer(v141, (uint64_t)qword_1EFC8AB28);
    v138 = sub_1D26CC084();
    v142 = sub_1D26CDCEC();
    if (os_log_type_enabled(v138, v142))
    {
      v143 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v143 = 0;
      _os_log_impl(&dword_1D2531000, v138, v142, "Unknown view kind when fetching metrics", v143, 2u);
      MEMORY[0x1D823A5E0](v143, -1, -1);
    }
    goto LABEL_44;
  }
  v151 = (char *)v58;
  v164 = v40;
  v165 = v41;
  v68 = v60;
  v69 = v156;
  *v156 = 1;
  v70 = *MEMORY[0x1E0CF02A8];
  v71 = v166;
  v72 = v167;
  v73 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v166 + 104);
  v73(v69, v70, v167);
  v155 = v68;
  v74 = v159;
  sub_1D26CD728();
  v96 = *(void (**)(_BYTE *, uint64_t))(v71 + 8);
  v96(v69, v72);
  v97 = v157;
  *v157 = 2;
  v73(v97, v70, v72);
  sub_1D26CD728();
  v96(v97, v72);
  v99 = v171;
  v98 = v172;
  v40 = v164;
  v100 = v160;
  v101 = v162;
  v102 = v158;
  sub_1D2537078(v74, v158, &qword_1EFC834E0);
  v103 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v101 + 48);
  v104 = v103(v102, 1, v100);
  v41 = v165;
  if (v104 == 1)
  {
    sub_1D253703C(v163, &qword_1EFC834E0);
    sub_1D253703C(v74, &qword_1EFC834E0);
    v105 = v102;
  }
  else
  {
    v106 = v154;
    v172 = *(void (**)(_QWORD, _QWORD, _QWORD))(v101 + 32);
    v172(v154, v102, v100);
    v107 = v163;
    v108 = v152;
    sub_1D2537078(v163, v152, &qword_1EFC834E0);
    if (v103(v108, 1, v100) != 1)
    {
      v172(v153, v108, v100);
      v115 = v147;
      sub_1D26CD6C8();
      v116 = v148;
      sub_1D26CD6C8();
      sub_1D26CD44C();
      CGRectGetWidth(v177);
      swift_beginAccess();
      sub_1D26CD44C();
      CGRectGetWidth(v178);
      if (qword_1EFC821B0 != -1)
        swift_once();
      sub_1D26CD44C();
      CGRectGetHeight(v179);
      sub_1D26CD434();
      v117 = (uint64_t)v161;
      sub_1D26CD440();
      v118 = *(void (**)(_QWORD, _QWORD))(v99 + 8);
      v118(v116, v98);
      v118(v115, v98);
      v119 = *(void (**)(char *, uint64_t))(v162 + 8);
      v119(v153, v100);
      v119(v106, v100);
      sub_1D253703C(v163, &qword_1EFC834E0);
      sub_1D253703C(v159, &qword_1EFC834E0);
      v120 = (uint64_t)v176;
      sub_1D253703C((uint64_t)v176, &qword_1EFC835A8);
      ((void (*)(uint64_t, _QWORD, uint64_t, void (*)(_QWORD, _QWORD, _QWORD)))v151)(v117, 0, 1, v98);
      sub_1D25384CC(v117, v120, &qword_1EFC835A8);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v106, v100);
    sub_1D253703C(v107, &qword_1EFC834E0);
    sub_1D253703C(v159, &qword_1EFC834E0);
    v105 = v108;
  }
  sub_1D253703C(v105, &qword_1EFC834E0);
LABEL_25:
  v121 = (uint64_t)v170;
  v77 = v175;
LABEL_29:
  (*(void (**)(char *, uint64_t))(v41 + 8))(v174, v40);
  sub_1D2537078((uint64_t)v176, v121, &qword_1EFC835A8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(v99 + 48))(v121, 1, v98) != 1)
  {
    sub_1D253703C((uint64_t)v176, &qword_1EFC835A8);
    (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v77, v169);
    return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v99 + 32))(v173, v121, v98);
  }
  sub_1D253703C(v121, &qword_1EFC835A8);
  if (qword_1EFC821F8 != -1)
    swift_once();
  v137 = sub_1D26CC09C();
  __swift_project_value_buffer(v137, (uint64_t)qword_1EFC8AB28);
  v138 = sub_1D26CC084();
  v139 = sub_1D26CDCEC();
  if (os_log_type_enabled(v138, v139))
  {
    v140 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v140 = 0;
    _os_log_impl(&dword_1D2531000, v138, v139, "No activity metrics found", v140, 2u);
    MEMORY[0x1D823A5E0](v140, -1, -1);
  }
LABEL_44:

  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1EFC83508);
}

uint64_t type metadata accessor for ActivityPreviewHostingViewController.StateController(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1EFC834F8);
}

uint64_t sub_1D2677070(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D26770B4()
{
  return sub_1D2675840();
}

uint64_t sub_1D26770CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[6];

  v2 = v1;
  v4 = sub_1D26CD6E0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC834E0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v20 - v12;
  sub_1D2677370(a1, (void (*)(_QWORD, _QWORD, _QWORD))((char *)v20 - v12));
  sub_1D2537078((uint64_t)v13, (uint64_t)v11, &qword_1EFC834E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    sub_1D253703C((uint64_t)v13, &qword_1EFC834E0);
    sub_1D253703C((uint64_t)v11, &qword_1EFC834E0);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    v14 = sub_1D26CD6BC();
    v15 = *(void **)(v2 + 16);
    if (v15)
    {
      type metadata accessor for TintedWidgetViewModel();
      v20[0] = v7;
      swift_allocObject();
      swift_beginAccess();
      v20[5] = v15;
      sub_1D25E55D4();
      v16 = v15;
      sub_1D26CC1B0();
      swift_endAccess();
      sub_1D25369B0((unint64_t *)&qword_1ED96D168, (uint64_t (*)(uint64_t))type metadata accessor for TintedWidgetViewModel, (uint64_t)&protocol conformance descriptor for TintedWidgetViewModel);
      swift_retain_n();
      swift_retain();
      v20[1] = sub_1D26CC39C();
      v20[2] = v17;
      v20[3] = v14;
      v20[4] = v14;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F68);
      sub_1D2536488(&qword_1EFC82F70, &qword_1EFC82F68, (uint64_t)&protocol conformance descriptor for TintedWidgetView<A, B>);
      v7 = (char *)v20[0];
      v18 = sub_1D26CCFC0();
      swift_release();
      swift_release();

      v14 = v18;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1D253703C((uint64_t)v13, &qword_1EFC834E0);
  }
  return v14;
}

uint64_t sub_1D2677370@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, uint64_t, uint64_t, char *);
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, _QWORD *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v54;
  void (*v55)(_QWORD, _QWORD, _QWORD);
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v60)(char *, uint64_t, uint64_t, char *);
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v68 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83488);
  MEMORY[0x1E0C80A78](v4);
  v56 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CD6E0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CC7A4();
  v65 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  MEMORY[0x1E0C80A78](v9);
  v63 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (_QWORD *)sub_1D26CC438();
  v62 = *(v11 - 1);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v54 - v15;
  v17 = sub_1D26CD734();
  v71 = *(_QWORD *)(v17 - 8);
  v72 = v17;
  MEMORY[0x1E0C80A78](v17);
  v70 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC834E0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v59 = (char *)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v64 = (uint64_t)&v54 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v57 = (uint64_t)&v54 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v61 = (uint64_t)&v54 - v27;
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v54 - v28;
  v67 = v7;
  v30 = *(void (**)(char *, uint64_t, uint64_t, char *))(v7 + 56);
  v69 = (char *)v6;
  v60 = v30;
  v30((char *)&v54 - v28, 1, 1, (char *)v6);
  v31 = *(_QWORD *)(v2 + 8);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  swift_release();
  v32 = *(char **)(v2 + 32);
  if (v73 >= *((_QWORD *)v32 + 2))
    return sub_1D25384CC((uint64_t)v29, (uint64_t)a2, &qword_1EFC834E0);
  v55 = a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  swift_release();
  if (v73 < 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  if ((unint64_t)v73 >= *((_QWORD *)v32 + 2))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v33 = (unint64_t)&v32[((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))
                             + *(_QWORD *)(v71 + 72) * v73];
  v32 = v70;
  (*(void (**)(char *, unint64_t, uint64_t))(v71 + 16))(v70, v33, v72);
  v34 = v2
      + *(int *)(type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0)
               + 32);
  sub_1D26CC4F8();
  sub_1D26CC420();
  sub_1D25369B0((unint64_t *)&qword_1ED96C308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA028]);
  v35 = sub_1D26CDFBC();
  v36 = *(void (**)(char *, _QWORD *))(v62 + 8);
  v36(v14, v11);
  v36(v16, v11);
  v54 = v34;
  if ((v35 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 16))(v63, v34, v66);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC826C8);
    v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1D26D1280;
    sub_1D26CC42C();
    v73 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
    sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
    sub_1D26CDFE0();
    sub_1D26CC504();
    v38 = v61;
    v11 = 0;
    sub_1D26CD728();
    v16 = v69;
    v31 = v67;
    v39 = v57;
    sub_1D2537078(v38, v57, &qword_1EFC834E0);
    v40 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(v31 + 48))(v39, 1, v16);
    if (v40 == 1)
    {
      sub_1D253703C(v38, &qword_1EFC834E0);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v66);
      sub_1D253703C(v39, &qword_1EFC834E0);
      goto LABEL_17;
    }
    a2 = *(void (**)(_QWORD, _QWORD, _QWORD))(v31 + 32);
    a2(v58, v39, v16);
    v41 = (uint64_t)v56;
    sub_1D26CD6D4();
    v42 = sub_1D26CD68C();
    v43 = *(_QWORD *)(v42 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
    {
      sub_1D253703C(v41, &qword_1EFC83488);
      v32 = v70;
LABEL_16:
      (*(void (**)(char *, char *))(v31 + 8))(v58, v16);
      sub_1D253703C(v61, &qword_1EFC834E0);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v66);
      goto LABEL_17;
    }
    v44 = v41;
    v45 = sub_1D26CD680();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v44, v42);
    v32 = v70;
    if ((v45 & 1) == 0)
      goto LABEL_16;
    if (qword_1EFC821F8 == -1)
    {
LABEL_13:
      v46 = sub_1D26CC09C();
      __swift_project_value_buffer(v46, (uint64_t)qword_1EFC8AB28);
      v47 = sub_1D26CC084();
      v48 = sub_1D26CDCE0();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v49 = 0;
        _os_log_impl(&dword_1D2531000, v47, v48, "Preview placeholder containsPrivacyRedactions, switching to privacy", v49, 2u);
        MEMORY[0x1D823A5E0](v49, -1, -1);
      }

      sub_1D253703C(v61, &qword_1EFC834E0);
      (*(void (**)(char *, uint64_t))(v65 + 8))(v63, v66);
      sub_1D253703C((uint64_t)v29, &qword_1EFC834E0);
      a2(v29, v58, v16);
      v60(v29, 0, 1, v16);
      goto LABEL_17;
    }
LABEL_27:
    swift_once();
    goto LABEL_13;
  }
  v11 = 0;
  v16 = v69;
  v31 = v67;
LABEL_17:
  v50 = v64;
  sub_1D2537078((uint64_t)v29, v64, &qword_1EFC834E0);
  v51 = (*(uint64_t (**)(uint64_t, uint64_t, char *))(v31 + 48))(v50, 1, v16);
  sub_1D253703C(v50, &qword_1EFC834E0);
  if (v51 == 1)
  {
    v52 = (uint64_t)v59;
    sub_1D26CD728();
    if (v11)
    {

      (*(void (**)(char *, uint64_t))(v71 + 8))(v32, v72);
      sub_1D253703C((uint64_t)v29, &qword_1EFC834E0);
      v60((char *)v52, 1, 1, v16);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v71 + 8))(v32, v72);
      sub_1D253703C((uint64_t)v29, &qword_1EFC834E0);
    }
    sub_1D25384CC(v52, (uint64_t)v29, &qword_1EFC834E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v71 + 8))(v32, v72);
  }
  a2 = v55;
  return sub_1D25384CC((uint64_t)v29, (uint64_t)a2, &qword_1EFC834E0);
}

uint64_t sub_1D2677BC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  NSObject *v64;
  os_log_type_t v65;
  _BOOL4 v66;
  uint8_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint8_t *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  void (*v76)(char *, uint64_t, uint64_t);
  int v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(_BYTE *, uint64_t, uint64_t);
  void (*v87)(_QWORD, _QWORD, _QWORD);
  void (*v88)(_BYTE *, uint64_t);
  void (*v89)(_QWORD, _QWORD, _QWORD);
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  id v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  void (*v100)(_QWORD, _QWORD, _QWORD);
  void (*v101)(uint64_t, uint64_t);
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t);
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t (*v129)(uint64_t, uint64_t, uint64_t);
  int v130;
  unsigned int *v131;
  uint64_t v132;
  void (*v133)(_BYTE *, uint64_t, uint64_t);
  uint64_t v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, uint64_t);
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  void (*v144)(_QWORD, _QWORD, _QWORD);
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  uint64_t v147;
  _QWORD *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char v152;
  void (*v153)(char *, uint64_t);
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  void *v160;
  void (*v161)(char *, uint64_t);
  void (*v162)(_QWORD, _QWORD, _QWORD);
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  NSObject *v172;
  os_log_type_t v173;
  _BOOL4 v174;
  uint64_t v175;
  uint64_t v176;
  uint8_t *v177;
  int v178;
  uint64_t v179;
  int v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  _QWORD *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t (*v199)(void);
  uint64_t KeyPath;
  uint64_t *v201;
  void (*v202)(char *, char *, uint64_t);
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t result;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  int v214;
  _QWORD *v215;
  void (*v216)(_QWORD, _QWORD, _QWORD);
  void (*v217)(char *, _QWORD, uint64_t);
  void (*v218)(_QWORD, _QWORD, _QWORD);
  uint64_t v219;
  double v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  id v224;
  uint64_t v225;
  _QWORD *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  int v231;
  uint64_t *v232;
  uint64_t v233;
  uint64_t v234;
  char v235;
  uint64_t v236;
  char v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  void *v243;
  id v244;
  uint64_t v245;
  uint64_t v246;
  id v247;
  uint64_t v248;
  void *v249;
  void (*v250)(char *, uint64_t);
  uint64_t v251;
  void (*v252)(char *, uint64_t);
  char *v253;
  char **v254;
  char *v255;
  uint64_t v256;
  char *v257;
  char *v258;
  char **v259;
  char *v260;
  char *v261;
  uint64_t v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char **v266;
  char **v267;
  uint64_t v268;
  void (*v269)(uint64_t, uint64_t);
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  char *v277;
  char *v278;
  id v279;
  char **v280;
  uint64_t v281;
  uint64_t *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t *v291;
  uint64_t v292;
  _QWORD *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  _BYTE *v297;
  uint64_t v298;
  id v299;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  _BYTE v308[7];
  char v309;
  _BYTE v310[7];
  char v311;
  _BYTE v312[7];
  char v313;
  _BYTE v314[7];
  char v315;
  _BYTE v316[7];
  char v317;
  _DWORD v318[2];
  uint64_t v319;
  uint64_t v320;
  _BYTE v321[81];
  __int128 v322;
  _OWORD v323[3];
  _BYTE v324[24];
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  char v335;
  _BYTE v336[168];
  void *v337;

  v292 = a1;
  v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963CA8);
  MEMORY[0x1E0C80A78](v290);
  v291 = (uint64_t *)((char *)&v253 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v284 = sub_1D26CC444();
  MEMORY[0x1E0C80A78](v284);
  v287 = (char *)&v253 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F30);
  MEMORY[0x1E0C80A78](v4);
  v282 = (uint64_t *)((char *)&v253 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F38);
  MEMORY[0x1E0C80A78](v281);
  v285 = (uint64_t)&v253 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83518);
  MEMORY[0x1E0C80A78](v283);
  v288 = (char *)&v253 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v286 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83520);
  MEMORY[0x1E0C80A78](v286);
  v289 = (uint64_t)&v253 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83528);
  MEMORY[0x1E0C80A78](v9);
  v253 = (char *)&v253 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CD6E0();
  v293 = *(_QWORD **)(v11 - 8);
  v294 = v11;
  v12 = MEMORY[0x1E0C80A78](v11);
  v257 = (char *)&v253 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v260 = (char *)&v253 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v255 = (char *)&v253 - v17;
  MEMORY[0x1E0C80A78](v16);
  v261 = (char *)&v253 - v18;
  v274 = sub_1D26CD3F8();
  v300 = *(_QWORD *)(v274 - 8);
  v19 = MEMORY[0x1E0C80A78](v274);
  v277 = (char *)&v253 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v278 = (char *)&v253 - v21;
  v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83530);
  MEMORY[0x1E0C80A78](v271);
  v273 = (char *)&v253 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83488);
  v24 = MEMORY[0x1E0C80A78](v23);
  v258 = (char *)&v253 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v263 = (char *)&v253 - v26;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83538);
  v28 = MEMORY[0x1E0C80A78](v27);
  v264 = (uint64_t)&v253 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x1E0C80A78](v28);
  v275 = (uint64_t)&v253 - v31;
  MEMORY[0x1E0C80A78](v30);
  v276 = (uint64_t)&v253 - v32;
  v298 = sub_1D26CD41C();
  v303 = *(_QWORD *)(v298 - 8);
  MEMORY[0x1E0C80A78](v298);
  v297 = (char *)&v253 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC834E0);
  v35 = MEMORY[0x1E0C80A78](v34);
  v256 = (uint64_t)&v253 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x1E0C80A78](v35);
  v262 = (uint64_t)&v253 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v266 = (char **)((char *)&v253 - v40);
  v41 = MEMORY[0x1E0C80A78](v39);
  v267 = (char **)((char *)&v253 - v42);
  v43 = MEMORY[0x1E0C80A78](v41);
  v265 = (uint64_t)&v253 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v254 = (char **)((char *)&v253 - v46);
  v47 = MEMORY[0x1E0C80A78](v45);
  v259 = (char **)((char *)&v253 - v48);
  v49 = MEMORY[0x1E0C80A78](v47);
  v270 = (uint64_t)&v253 - v50;
  MEMORY[0x1E0C80A78](v49);
  v280 = (char **)((char *)&v253 - v51);
  v52 = sub_1D26CD5E4();
  v302 = *(_QWORD *)(v52 - 8);
  v53 = MEMORY[0x1E0C80A78](v52);
  v269 = (void (*)(uint64_t, uint64_t))((char *)&v253 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v53);
  v301 = (char *)&v253 - v55;
  v306 = type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0);
  v56 = MEMORY[0x1E0C80A78](v306);
  v272 = (uint64_t)&v253 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v56);
  v59 = (char *)&v253 - v58;
  v60 = sub_1D26CC2C4();
  v61 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v63 = (char *)&v253 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  v299 = (id)objc_opt_self();
  v279 = objc_msgSend(v299, sel_clearColor);
  if (qword_1EFC821F8 != -1)
    swift_once();
  v268 = sub_1D26CC09C();
  __swift_project_value_buffer(v268, (uint64_t)qword_1EFC8AB28);
  v307 = v1;
  sub_1D2534120(v1, (uint64_t)v59, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
  v64 = sub_1D26CC084();
  v65 = sub_1D26CDCE0();
  v66 = os_log_type_enabled(v64, v65);
  v295 = v52;
  v296 = v60;
  v304 = v63;
  v305 = v61;
  if (v66)
  {
    v67 = (uint8_t *)swift_slowAlloc();
    v68 = swift_slowAlloc();
    v319 = v68;
    *(_DWORD *)v67 = 136446210;
    v69 = v306;
    v70 = sub_1D26CC48C();
    *(_QWORD *)v336 = sub_1D2537880(v70, v71, &v319);
    v52 = v295;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D25340E4((uint64_t)v59, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
    _os_log_impl(&dword_1D2531000, v64, v65, "Trying to use preview view for environment: %{public}s", v67, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v68, -1, -1);
    v72 = v67;
    v63 = v304;
    MEMORY[0x1D823A5E0](v72, -1, -1);

  }
  else
  {
    sub_1D25340E4((uint64_t)v59, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);

    v69 = v306;
  }
  v73 = v307;
  v75 = v301;
  v74 = v302;
  v76 = *(void (**)(char *, uint64_t, uint64_t))(v302 + 16);
  v76(v301, v307 + *(int *)(v69 + 36), v52);
  v77 = (*(uint64_t (**)(char *, uint64_t))(v74 + 88))(v75, v52);
  if (v77 != *MEMORY[0x1E0CF0870])
  {
    v94 = v298;
    if (v77 != *MEMORY[0x1E0CF0878])
      goto LABEL_72;
    v95 = v69;
    v96 = objc_msgSend(v299, sel_systemBackgroundColor);

    v97 = v303;
    v98 = *(void **)(v303 + 104);
    v99 = (uint64_t)v297;
    LODWORD(v266) = *MEMORY[0x1E0CF02B8];
    v279 = v98;
    ((void (*)(_BYTE *))v98)(v297);
    v299 = v96;
    v100 = (void (*)(_QWORD, _QWORD, _QWORD))v280;
    sub_1D2677370(v99, (void (*)(_QWORD, _QWORD, _QWORD))v280);
    v101 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
    v101(v99, v94);
    v102 = v270;
    sub_1D2537078((uint64_t)v100, v270, &qword_1EFC834E0);
    v104 = v293;
    v103 = v294;
    v267 = (char **)v293[6];
    v105 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v267)(v102, 1, v294);
    v106 = (uint64_t)v273;
    v269 = v101;
    if (v105 == 1)
    {
      sub_1D253703C(v102, &qword_1EFC834E0);
    }
    else
    {
      v108 = (uint64_t)v263;
      sub_1D26CD6D4();
      ((void (*)(uint64_t, uint64_t))v104[1])(v102, v103);
      v109 = sub_1D26CD68C();
      v110 = *(_QWORD *)(v109 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109) != 1)
      {
        v123 = v276;
        sub_1D26CD668();
        v124 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
        v114 = v123;
        v124(v108, v109);
        v112 = v300;
        v113 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + 56);
        v111 = v274;
        v113(v123, 0, 1, v274);
        v95 = v306;
LABEL_26:
        v125 = v307;
        v126 = v275;
        v270 = v307 + *(int *)(v95 + 32);
        sub_1D26CC660();
        v113(v126, 0, 1, v111);
        v127 = v106 + *(int *)(v271 + 48);
        sub_1D2537078(v114, v106, &qword_1EFC83538);
        sub_1D2537078(v126, v127, &qword_1EFC83538);
        v128 = v114;
        v129 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v112 + 48);
        v130 = v129(v106, 1, v111);
        v131 = (unsigned int *)MEMORY[0x1E0CF01C8];
        if (v130 == 1)
        {
          sub_1D253703C(v126, &qword_1EFC83538);
          sub_1D253703C(v128, &qword_1EFC83538);
          if (v129(v127, 1, v111) == 1)
          {
            sub_1D253703C(v106, &qword_1EFC83538);
            v132 = v272;
            sub_1D2534120(v307, v272, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
            v133 = (void (*)(_BYTE *, uint64_t, uint64_t))v279;
LABEL_36:
            sub_1D25340E4(v132, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
            goto LABEL_37;
          }
        }
        else
        {
          v134 = v264;
          sub_1D2537078(v106, v264, &qword_1EFC83538);
          if (v129(v127, 1, v111) != 1)
          {
            v150 = v300;
            v151 = v278;
            (*(void (**)(char *, uint64_t, uint64_t))(v300 + 32))(v278, v127, v111);
            sub_1D25369B0(&qword_1EFC83570, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF0200]);
            v152 = sub_1D26CD908();
            v153 = *(void (**)(char *, uint64_t))(v150 + 8);
            v153(v151, v111);
            sub_1D253703C(v275, &qword_1EFC83538);
            sub_1D253703C(v276, &qword_1EFC83538);
            v153((char *)v134, v111);
            sub_1D253703C(v106, &qword_1EFC83538);
            v132 = v272;
            sub_1D2534120(v125, v272, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
            v133 = (void (*)(_BYTE *, uint64_t, uint64_t))v279;
            if ((v152 & 1) != 0)
              goto LABEL_36;
LABEL_32:
            v135 = v278;
            sub_1D26CC660();
            v136 = v300;
            v137 = v277;
            (*(void (**)(char *, _QWORD, uint64_t))(v300 + 104))(v277, *v131, v111);
            sub_1D25369B0(&qword_1ED963210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF0208]);
            sub_1D26CDAC4();
            sub_1D26CDAC4();
            v138 = v319;
            v139 = *(_QWORD *)v336;
            v140 = *(void (**)(char *, uint64_t))(v136 + 8);
            v140(v137, v111);
            v140(v135, v111);
            sub_1D25340E4(v132, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
            if (v138 == v139)
            {
              v142 = v297;
              v141 = v298;
              *v297 = 1;
              v143 = *MEMORY[0x1E0CF02A8];
              v133(v142, v143, v141);
              v144 = (void (*)(_QWORD, _QWORD, _QWORD))v259;
              v145 = v307;
              sub_1D2677370((uint64_t)v142, (void (*)(_QWORD, _QWORD, _QWORD))v259);
              v146 = v269;
              v269((uint64_t)v142, v141);
              v147 = v294;
              v148 = v267;
              if (((unsigned int (*)(_QWORD, uint64_t, uint64_t))v267)(v144, 1, v294) == 1)
              {
                v149 = v304;
                sub_1D253703C((uint64_t)v144, &qword_1EFC834E0);
                v303 = 0;
              }
              else
              {
                v215 = v293;
                v216 = v144;
                v217 = (void (*)(char *, _QWORD, uint64_t))v293[4];
                v217(v261, v216, v147);
                *v142 = 2;
                ((void (*)(_BYTE *, uint64_t, uint64_t))v279)(v142, v143, v141);
                v218 = (void (*)(_QWORD, _QWORD, _QWORD))v254;
                sub_1D2677370((uint64_t)v142, (void (*)(_QWORD, _QWORD, _QWORD))v254);
                v146((uint64_t)v142, v141);
                if (((unsigned int (*)(_QWORD, uint64_t, uint64_t))v148)(v218, 1, v147) != 1)
                {
                  v217(v255, v218, v147);
                  v232 = (uint64_t *)(v145 + *(int *)(v306 + 44));
                  v233 = v232[1];
                  v303 = *v232;
                  swift_bridgeObjectRetain();
                  v298 = sub_1D26CD6BC();
                  sub_1D26CD008();
                  sub_1D26CC324();
                  v234 = v325;
                  v235 = BYTE8(v325);
                  v236 = v326;
                  v237 = BYTE8(v326);
                  v238 = *((_QWORD *)&v327 + 1);
                  v297 = (_BYTE *)v327;
                  v239 = sub_1D26CD6BC();
                  sub_1D26CD008();
                  sub_1D26CC324();
                  v317 = v235;
                  v315 = v237;
                  v313 = v336[8];
                  v311 = v336[24];
                  v309 = 0;
                  v319 = v303;
                  v320 = v233;
                  v321[0] = 1;
                  *(_DWORD *)&v321[1] = v318[0];
                  *(_DWORD *)&v321[4] = *(_DWORD *)((char *)v318 + 3);
                  *(_QWORD *)&v321[8] = v298;
                  *(_QWORD *)&v321[16] = v234;
                  v240 = v307;
                  v321[24] = v235;
                  *(_DWORD *)&v321[25] = *(_DWORD *)v316;
                  *(_DWORD *)&v321[28] = *(_DWORD *)&v316[3];
                  *(_QWORD *)&v321[32] = v236;
                  v321[40] = v315;
                  *(_DWORD *)&v321[44] = *(_DWORD *)&v314[3];
                  *(_DWORD *)&v321[41] = *(_DWORD *)v314;
                  *(_QWORD *)&v321[48] = v297;
                  *(_QWORD *)&v321[56] = v238;
                  *(_QWORD *)&v321[64] = v239;
                  *(_QWORD *)&v321[72] = *(_QWORD *)v336;
                  v321[80] = v336[8];
                  *(_DWORD *)((char *)&v322 + 3) = *(_DWORD *)&v312[3];
                  LODWORD(v322) = *(_DWORD *)v312;
                  *(_QWORD *)((char *)&v322 + 7) = *(_QWORD *)&v336[16];
                  HIBYTE(v322) = v336[24];
                  *(_DWORD *)((char *)v323 + 3) = *(_DWORD *)&v310[3];
                  LODWORD(v323[0]) = *(_DWORD *)v310;
                  *(_OWORD *)((char *)v323 + 7) = *(_OWORD *)&v336[32];
                  *(_OWORD *)((char *)&v323[1] + 7) = xmmword_1D26DA400;
                  *(_QWORD *)((char *)&v323[2] + 7) = 0x403827EF9DB22D0FLL;
                  HIBYTE(v323[2]) = 0;
                  *(_DWORD *)&v324[3] = *(_DWORD *)&v308[3];
                  *(_DWORD *)v324 = *(_DWORD *)v308;
                  *(_QWORD *)&v324[7] = 0;
                  *(_QWORD *)&v324[15] = 0;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83560);
                  sub_1D2536488(&qword_1EFC83568, &qword_1EFC83560, (uint64_t)&protocol conformance descriptor for WatchExpandedJindoView<A, B>);
                  v241 = sub_1D26CCFC0();
                  v242 = v241;
                  v243 = *(void **)(v240 + 16);
                  if (v243)
                  {
                    type metadata accessor for TintedWidgetViewModel();
                    swift_allocObject();
                    swift_beginAccess();
                    v337 = v243;
                    sub_1D25E55D4();
                    v244 = v243;
                    sub_1D26CC1B0();
                    swift_endAccess();
                    sub_1D25369B0((unint64_t *)&qword_1ED96D168, (uint64_t (*)(uint64_t))type metadata accessor for TintedWidgetViewModel, (uint64_t)&protocol conformance descriptor for TintedWidgetViewModel);
                    swift_retain_n();
                    swift_retain();
                    v319 = sub_1D26CC39C();
                    v320 = v245;
                    *(_QWORD *)v321 = v242;
                    *(_QWORD *)&v321[8] = v242;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F68);
                    sub_1D2536488(&qword_1EFC82F70, &qword_1EFC82F68, (uint64_t)&protocol conformance descriptor for TintedWidgetView<A, B>);
                    v246 = sub_1D26CCFC0();
                    swift_release();
                    swift_release();

                    v303 = v246;
                  }
                  else
                  {
                    v303 = v241;
                  }
                  v149 = v304;
                  v111 = v274;
                  v156 = v300;
                  v251 = v294;
                  v252 = (void (*)(char *, uint64_t))v293[1];
                  v252(v255, v294);
                  v252(v261, v251);
LABEL_39:
                  v157 = v278;
                  sub_1D26CC660();
                  v158 = v277;
                  (*(void (**)(char *, _QWORD, uint64_t))(v156 + 104))(v277, *MEMORY[0x1E0CF01C8], v111);
                  sub_1D25369B0(&qword_1ED963210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF0208]);
                  sub_1D26CDAC4();
                  sub_1D26CDAC4();
                  v159 = v319;
                  v160 = v337;
                  v161 = *(void (**)(char *, uint64_t))(v156 + 8);
                  v161(v158, v111);
                  v161(v157, v111);
                  if ((void *)v159 == v160)
                  {
                    v162 = (void (*)(_QWORD, _QWORD, _QWORD))v280;
                    v163 = v265;
                    sub_1D2537078((uint64_t)v280, v265, &qword_1EFC834E0);
                    v164 = v294;
                    v63 = v149;
                    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v267)(v163, 1, v294) != 1)
                    {
                      v210 = v258;
                      sub_1D26CD6D4();
                      v211 = (uint64_t)v210;
                      ((void (*)(uint64_t, uint64_t))v293[1])(v163, v164);
                      v212 = sub_1D26CD68C();
                      v213 = *(_QWORD *)(v212 - 8);
                      v214 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v213 + 48))(v211, 1, v212);
                      v166 = v301;
                      v122 = v306;
                      if (v214 != 1)
                      {
                        v228 = (uint64_t)v253;
                        sub_1D26CD674();
                        (*(void (**)(uint64_t, uint64_t))(v213 + 8))(v211, v212);
                        v229 = sub_1D26CD3D4();
                        v230 = *(_QWORD *)(v229 - 8);
                        v231 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v230 + 48))(v228, 1, v229);
                        v73 = v307;
                        if (v231 == 1)
                        {
                          sub_1D253703C((uint64_t)v162, &qword_1EFC834E0);

                          sub_1D253703C(v228, &qword_1EFC83528);
                          v165 = v295;
                        }
                        else
                        {
                          v300 = sub_1D26CD3C8();
                          v247 = v299;

                          sub_1D253703C((uint64_t)v162, &qword_1EFC834E0);
                          v248 = v229;
                          v249 = (void *)v300;
                          (*(void (**)(uint64_t, uint64_t))(v230 + 8))(v228, v248);
                          if (v249)
                          {

                            v299 = v249;
                          }
                          v165 = v295;
                        }
LABEL_45:
                        v121 = v303;
                        (*(void (**)(char *, uint64_t))(v302 + 8))(v166, v165);
                        if (!v121)
                          goto LABEL_47;
                        goto LABEL_46;
                      }
                      sub_1D253703C((uint64_t)v162, &qword_1EFC834E0);

                      sub_1D253703C(v211, &qword_1EFC83488);
                      v165 = v295;
LABEL_44:
                      v73 = v307;
                      goto LABEL_45;
                    }
                    sub_1D253703C((uint64_t)v162, &qword_1EFC834E0);

                    sub_1D253703C(v163, &qword_1EFC834E0);
                    v165 = v295;
                    v166 = v301;
                  }
                  else
                  {
                    sub_1D253703C((uint64_t)v280, &qword_1EFC834E0);

                    v165 = v295;
                    v166 = v301;
                    v63 = v149;
                  }
                  v122 = v306;
                  goto LABEL_44;
                }
                v149 = v304;
                ((void (*)(char *, uint64_t))v215[1])(v261, v147);
                sub_1D253703C((uint64_t)v218, &qword_1EFC834E0);
                v303 = 0;
                v111 = v274;
              }
LABEL_38:
              v156 = v300;
              goto LABEL_39;
            }
LABEL_37:
            v149 = v304;
            v155 = (uint64_t)v297;
            v154 = v298;
            v133(v297, v266, v298);
            v303 = sub_1D26770CC(v155);
            v269(v155, v154);
            goto LABEL_38;
          }
          sub_1D253703C(v275, &qword_1EFC83538);
          sub_1D253703C(v276, &qword_1EFC83538);
          (*(void (**)(uint64_t, uint64_t))(v300 + 8))(v134, v111);
        }
        sub_1D253703C(v106, &qword_1EFC83530);
        v132 = v272;
        sub_1D2534120(v307, v272, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
        v133 = (void (*)(_BYTE *, uint64_t, uint64_t))v279;
        goto LABEL_32;
      }
      sub_1D253703C(v108, &qword_1EFC83488);
      v95 = v306;
    }
    v111 = v274;
    v112 = v300;
    v113 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v300 + 56);
    v114 = v276;
    v113(v276, 1, 1, v274);
    goto LABEL_26;
  }
  v78 = (char *)v269;
  v76((char *)v269, (uint64_t)v75, v52);
  (*(void (**)(char *, uint64_t))(v74 + 96))(v78, v52);
  v79 = sub_1D26CD5D8();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = (*(uint64_t (**)(char *, uint64_t))(v80 + 88))(v78, v79);
  v82 = v298;
  if (v81 == *MEMORY[0x1E0CF0850])
  {
    v299 = objc_msgSend(v299, sel_blackColor);

    v83 = v297;
    *v297 = 1;
    v84 = *MEMORY[0x1E0CF02A8];
    v85 = v303;
    v86 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v303 + 104);
    v86(v83, v84, v82);
    v87 = (void (*)(_QWORD, _QWORD, _QWORD))v267;
    sub_1D2677370((uint64_t)v83, (void (*)(_QWORD, _QWORD, _QWORD))v267);
    v88 = *(void (**)(_BYTE *, uint64_t))(v85 + 8);
    v88(v83, v82);
    *v83 = 2;
    v86(v83, v84, v82);
    v89 = (void (*)(_QWORD, _QWORD, _QWORD))v266;
    sub_1D2677370((uint64_t)v83, (void (*)(_QWORD, _QWORD, _QWORD))v266);
    v88(v83, v82);
    v90 = v262;
    sub_1D2537078((uint64_t)v87, v262, &qword_1EFC834E0);
    v92 = v293;
    v91 = v294;
    v93 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v293[6];
    if (v93(v90, 1, v294) == 1)
    {
      sub_1D253703C((uint64_t)v89, &qword_1EFC834E0);
      sub_1D253703C((uint64_t)v87, &qword_1EFC834E0);
LABEL_20:
      sub_1D253703C(v90, &qword_1EFC834E0);
      (*(void (**)(char *, uint64_t))(v302 + 8))(v301, v295);
LABEL_47:
      v171 = v63;
      if (qword_1ED96C188 != -1)
        swift_once();
      __swift_project_value_buffer(v268, (uint64_t)qword_1ED977F68);
      v172 = sub_1D26CC084();
      v173 = sub_1D26CDCE0();
      v174 = os_log_type_enabled(v172, v173);
      v175 = v296;
      v176 = v305;
      if (v174)
      {
        v177 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v177 = 0;
        _os_log_impl(&dword_1D2531000, v172, v173, "No view found in activity preview view collection: showing empty view.", v177, 2u);
        MEMORY[0x1D823A5E0](v177, -1, -1);
      }

      (*(void (**)(char *, _QWORD, uint64_t))(v176 + 104))(v171, *MEMORY[0x1E0CD86E0], v175);
      v170 = v176;
      v121 = sub_1D26CCFC0();
      v167 = 0xEF295954504D4528;
      v168 = 0x2057454956455250;
      v169 = v73;
      v122 = v306;
      goto LABEL_52;
    }
    v115 = (uint64_t)v89;
    v116 = (void (*)(char *, uint64_t, uint64_t))v92[4];
    v117 = v260;
    v116(v260, v90, v91);
    v90 = v256;
    sub_1D2537078(v115, v256, &qword_1EFC834E0);
    if (v93(v90, 1, v91) == 1)
    {
      sub_1D253703C(v115, &qword_1EFC834E0);
      sub_1D253703C((uint64_t)v87, &qword_1EFC834E0);
      ((void (*)(char *, uint64_t))v293[1])(v117, v91);
      goto LABEL_20;
    }
    v219 = (uint64_t)v257;
    v116(v257, v90, v91);
    v122 = v306;
    v220 = *(double *)(v73 + *(int *)(v306 + 40));
    v221 = sub_1D26CC7B0();
    sub_1D2679AC4(v219, (uint64_t)&v325, v220);
    *(_OWORD *)&v336[71] = v329;
    *(_OWORD *)&v336[55] = v328;
    *(_OWORD *)&v336[119] = v332;
    *(_OWORD *)&v336[135] = v333;
    *(_OWORD *)&v336[151] = v334;
    v336[167] = v335;
    *(_OWORD *)&v336[87] = v330;
    *(_OWORD *)&v336[103] = v331;
    *(_OWORD *)&v336[7] = v325;
    *(_OWORD *)&v336[23] = v326;
    *(_OWORD *)&v336[39] = v327;
    v323[1] = *(_OWORD *)&v336[112];
    v323[2] = *(_OWORD *)&v336[128];
    *(_OWORD *)v324 = *(_OWORD *)&v336[144];
    *(_OWORD *)&v321[49] = *(_OWORD *)&v336[48];
    *(_OWORD *)&v321[65] = *(_OWORD *)&v336[64];
    v322 = *(_OWORD *)&v336[80];
    v323[0] = *(_OWORD *)&v336[96];
    *(_OWORD *)&v321[1] = *(_OWORD *)v336;
    *(_OWORD *)&v321[17] = *(_OWORD *)&v336[16];
    LOBYTE(v318[0]) = 0;
    v319 = v221;
    v320 = 0;
    v321[0] = 0;
    *(_QWORD *)&v324[16] = *(_QWORD *)&v336[160];
    *(_OWORD *)&v321[33] = *(_OWORD *)&v336[32];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83550);
    sub_1D2536488(&qword_1EFC83558, &qword_1EFC83550, MEMORY[0x1E0CDFB10]);
    v222 = sub_1D26CCFC0();
    v223 = *(void **)(v73 + 16);
    if (v223)
    {
      type metadata accessor for TintedWidgetViewModel();
      swift_allocObject();
      swift_beginAccess();
      v337 = v223;
      sub_1D25E55D4();
      v224 = v223;
      v73 = v307;
      sub_1D26CC1B0();
      swift_endAccess();
      sub_1D25369B0((unint64_t *)&qword_1ED96D168, (uint64_t (*)(uint64_t))type metadata accessor for TintedWidgetViewModel, (uint64_t)&protocol conformance descriptor for TintedWidgetViewModel);
      swift_retain_n();
      swift_retain();
      v319 = sub_1D26CC39C();
      v320 = v225;
      *(_QWORD *)v321 = v222;
      *(_QWORD *)&v321[8] = v222;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F68);
      sub_1D2536488(&qword_1EFC82F70, &qword_1EFC82F68, (uint64_t)&protocol conformance descriptor for TintedWidgetView<A, B>);
      v226 = v293;
      v227 = sub_1D26CCFC0();
      swift_release();
      swift_release();

      v222 = v227;
      v91 = v294;
    }
    else
    {
      v226 = v293;
    }
    sub_1D253703C((uint64_t)v266, &qword_1EFC834E0);
    sub_1D253703C((uint64_t)v267, &qword_1EFC834E0);
    v250 = (void (*)(char *, uint64_t))v226[1];
    v250(v257, v91);
    v250(v260, v91);
    (*(void (**)(char *, uint64_t))(v302 + 8))(v301, v295);
    v121 = v222;
LABEL_46:
    sub_1D26CC474();
    v167 = 0xE700000000000000;
    v168 = 0x57454956455250;
    v169 = v73;
    v170 = v305;
LABEL_52:
    swift_retain();
    v178 = sub_1D26CCB7C();
    v179 = v121;
    v303 = v121;
    v180 = v178;
    v181 = sub_1D26CD008();
    v182 = (uint64_t)v282;
    *v282 = v181;
    *(_QWORD *)(v182 + 8) = v183;
    v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F48);
    sub_1D25E457C(v179, v180, v168, v167, (_QWORD *)(v182 + *(int *)(v184 + 44)));
    swift_release();
    swift_bridgeObjectRelease();
    v185 = v299;
    v186 = MEMORY[0x1D82386A8]();
    LOBYTE(v180) = sub_1D26CCB7C();
    v187 = v285;
    sub_1D2537078(v182, v285, &qword_1EFC82F30);
    v188 = v187 + *(int *)(v281 + 36);
    *(_QWORD *)v188 = v186;
    *(_BYTE *)(v188 + 8) = v180;
    sub_1D253703C(v182, &qword_1EFC82F30);
    v189 = (uint64_t *)(v169 + *(int *)(v122 + 48));
    v190 = *v189;
    v191 = v189[1];
    v319 = v190;
    v320 = v191;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83540);
    sub_1D26CCF24();
    v192 = v337;
    v193 = v287;
    v194 = &v287[*(int *)(v284 + 20)];
    v195 = *MEMORY[0x1E0CDB0C0];
    v196 = sub_1D26CC828();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v196 - 8) + 104))(v194, v195, v196);
    *v193 = v192;
    v193[1] = v192;
    v197 = (uint64_t)v288;
    v198 = (uint64_t)&v288[*(int *)(v283 + 36)];
    v199 = MEMORY[0x1E0CDA088];
    sub_1D2534120((uint64_t)v193, v198, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDA088]);
    *(_BYTE *)(v198 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBD8) + 36)) = 0;
    sub_1D2537078(v187, v197, &qword_1EFC82F38);
    sub_1D25340E4((uint64_t)v193, (uint64_t (*)(_QWORD))v199);
    sub_1D253703C(v187, &qword_1EFC82F38);
    KeyPath = swift_getKeyPath();
    v201 = v291;
    v202 = *(void (**)(char *, char *, uint64_t))(v170 + 16);
    v203 = v304;
    v204 = v296;
    v202((char *)v291 + *(int *)(v290 + 28), v304, v296);
    *v201 = KeyPath;
    v205 = v289;
    sub_1D2537078(v197, v289, &qword_1EFC83518);
    sub_1D2537078((uint64_t)v201, v205 + *(int *)(v286 + 36), &qword_1ED963CA8);
    swift_retain();
    sub_1D253703C((uint64_t)v201, &qword_1ED963CA8);
    swift_release();

    swift_release();
    sub_1D253703C(v197, &qword_1EFC83518);
    v206 = swift_getKeyPath();
    v207 = v292;
    sub_1D2537078(v205, v292, &qword_1EFC83520);
    v208 = v207 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83548) + 36);
    *(_QWORD *)v208 = v206;
    *(_BYTE *)(v208 + 8) = 1;
    sub_1D253703C(v205, &qword_1EFC83520);
    return (*(uint64_t (**)(char *, uint64_t))(v305 + 8))(v203, v204);
  }
  if (v81 == *MEMORY[0x1E0CF0858])
  {
    v299 = objc_msgSend(v299, sel_blackColor);

    v107 = (uint64_t)v297;
    *v297 = 3;
    goto LABEL_23;
  }
  if (v81 == *MEMORY[0x1E0CF0860])
  {
    v299 = objc_msgSend(v299, sel_blackColor);

    v107 = (uint64_t)v297;
    *v297 = 0;
LABEL_23:
    v118 = v303;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v303 + 104))(v107, *MEMORY[0x1E0CF02A8], v82);
    v119 = sub_1D26770CC(v107);
    v120 = v107;
    v121 = v119;
    (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v120, v82);
    (*(void (**)(char *, uint64_t))(v74 + 8))(v75, v52);
    v122 = v306;
    if (!v121)
      goto LABEL_47;
    goto LABEL_46;
  }
  (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v79);
LABEL_72:
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

__n128 sub_1D2679AC4@<Q0>(uint64_t a1@<X2>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_BYTE *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __n128 result;
  _BYTE v32[4];
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _OWORD v46[10];
  char v47;
  char v48;
  char v49;
  char v50;
  unsigned __int8 v51;
  char v52;
  char v53;
  char v54;
  uint64_t v55;
  double v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  unsigned __int8 v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __n128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  char v99;

  v45 = a1;
  v5 = sub_1D26CD3F8();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0];
  v7 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = &v32[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v32[-v11];
  type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(0);
  sub_1D26CC660();
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v10, *MEMORY[0x1E0CF01C8], v5);
  sub_1D25369B0(&qword_1ED963210, v6, MEMORY[0x1E0CF0208]);
  sub_1D26CDAC4();
  sub_1D26CDAC4();
  v13 = v89;
  v14 = v55;
  v15 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v15(v10, v5);
  v15(v12, v5);
  if (v13 == v14)
  {
    v16 = sub_1D26CC7B0();
    v17 = sub_1D26CD6BC();
    v18 = sub_1D26CD6BC();
    v55 = v16;
    v56 = 0.0;
    v57 = 1;
    v58 = 0;
    LOBYTE(v59) = 1;
    v60 = v17;
    v61 = v18;
    v62 = 0;
    LOBYTE(v63) = 1;
    sub_1D267B288((uint64_t)&v55);
    sub_1D25384CC((uint64_t)&v55, (uint64_t)v46, &qword_1EFC83578);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83580);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83588);
    sub_1D2536488(&qword_1EFC83590, &qword_1EFC83580, MEMORY[0x1E0CDFB10]);
    sub_1D2536488(&qword_1EFC83598, &qword_1EFC83588, MEMORY[0x1E0CE0680]);
    sub_1D26CC90C();
  }
  else
  {
    v42 = sub_1D26CC7B0();
    v44 = sub_1D26CD6BC();
    v43 = sub_1D26CD6BC();
    v45 = sub_1D26CCEA0();
    if (qword_1EFC821B0 != -1)
      swift_once();
    sub_1D26CD008();
    sub_1D26CC450();
    v19 = v76;
    v40 = v77;
    v41 = v75;
    v20 = v78;
    v38 = v81;
    v39 = v79;
    v21 = v82;
    v22 = v84;
    v36 = v85;
    v37 = v83;
    v23 = v86;
    v34 = v88;
    v35 = v87;
    v54 = 0;
    v53 = v76;
    v52 = v78;
    v51 = v80;
    v50 = v82;
    v49 = v84;
    v48 = v86;
    v33 = v80;
    v24 = v44;
    swift_retain_n();
    v25 = v43;
    swift_retain_n();
    v26 = v45;
    swift_retain();
    swift_release();
    swift_release();
    v55 = v42;
    v56 = a3;
    v57 = 0;
    v58 = v24;
    v59 = v25;
    v60 = v26;
    v61 = v41;
    LOBYTE(v62) = v19;
    v63 = v40;
    v64 = v20;
    v65 = v39;
    v66 = v33;
    v67 = v38;
    v68 = v21;
    v69 = v37;
    v70 = v22;
    v71 = v36;
    v72 = v23;
    v73 = v35;
    v74 = v34;
    sub_1D267B27C((uint64_t)&v55);
    sub_1D25384CC((uint64_t)&v55, (uint64_t)&v89, &qword_1EFC83578);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83580);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83588);
    sub_1D2536488(&qword_1EFC83590, &qword_1EFC83580, MEMORY[0x1E0CDFB10]);
    sub_1D2536488(&qword_1EFC83598, &qword_1EFC83588, MEMORY[0x1E0CE0680]);
    sub_1D26CC90C();
    swift_release();
    swift_release();
    swift_release();
    v97 = v46[8];
    v98 = v46[9];
    v99 = v47;
    v93 = v46[4];
    v94 = v46[5];
    v95 = v46[6];
    v96 = v46[7];
    v89 = v46[0];
    v90 = v46[1];
    v91 = v46[2];
    v92 = (__n128)v46[3];
  }
  v27 = v98;
  *(_OWORD *)(a2 + 128) = v97;
  *(_OWORD *)(a2 + 144) = v27;
  *(_BYTE *)(a2 + 160) = v99;
  v28 = v94;
  *(_OWORD *)(a2 + 64) = v93;
  *(_OWORD *)(a2 + 80) = v28;
  v29 = v96;
  *(_OWORD *)(a2 + 96) = v95;
  *(_OWORD *)(a2 + 112) = v29;
  v30 = v90;
  *(_OWORD *)a2 = v89;
  *(_OWORD *)(a2 + 16) = v30;
  result = v92;
  *(_OWORD *)(a2 + 32) = v91;
  *(__n128 *)(a2 + 48) = result;
  return result;
}

id sub_1D267A030()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  char *v6;
  char *v7;
  id result;
  void *v9;
  void *v10;
  objc_class *v11;
  _BYTE v12[24];
  objc_super v13;
  CGRect v14;
  CGRect v15;

  v1 = v0;
  v2 = sub_1D26CD458();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = &v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize];
  swift_beginAccess();
  if (*v6 != 1)
    goto LABEL_7;
  sub_1D2675F68((uint64_t)v5);
  sub_1D26CD44C();
  CGRectGetWidth(v14);
  sub_1D26CD44C();
  CGRectGetHeight(v15);
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  v7 = &v1[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming];
  swift_beginAccess();
  if (*v7 == 1)
  {
    result = objc_msgSend(v1, sel_view);
    if (!result)
      goto LABEL_9;
    v9 = result;
    objc_msgSend(result, sel_frame);
    objc_msgSend(v9, sel_setFrame_);

  }
  result = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController], sel_view);
  if (result)
  {
    v10 = result;
    objc_msgSend(result, sel_frame);
    objc_msgSend(v10, sel_setFrame_);

LABEL_7:
    v11 = (objc_class *)type metadata accessor for ActivityPreviewHostingViewController(0);
    v13.receiver = v1;
    v13.super_class = v11;
    return objc_msgSendSuper2(&v13, sel_viewWillLayoutSubviews);
  }
  __break(1u);
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1D267A224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1D25340E4(v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_autoupdatingPreviewView, type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView);
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_environment;
  v2 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_viewKind;
  v4 = sub_1D26CD5E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  return swift_release();
}

id ActivityPreviewHostingViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ActivityPreviewHostingViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D267A3BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D267A43C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t type metadata accessor for ActivityPreviewHostingViewController(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1EFC834E8);
}

__n128 sub_1D267A4C4@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v3;
  __n128 result;

  v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize);
  swift_beginAccess();
  result = *v3;
  *a2 = *v3;
  return result;
}

uint64_t sub_1D267A514(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_islandSize);
  result = swift_beginAccess();
  *v4 = v2;
  v4[1] = v3;
  return result;
}

double sub_1D267A568@<D0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  double *v3;
  double result;

  v3 = (double *)(*a1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric);
  swift_beginAccess();
  result = *v3;
  *a2 = *(_QWORD *)v3;
  return result;
}

uint64_t sub_1D267A5B8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_apertureTopEdgeMetric);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1D267A60C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1D267A65C(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_isLuminanceReduced);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1D267A6A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC9ChronoKit36ActivityPreviewHostingViewController_appName);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D267A700()
{
  return type metadata accessor for ActivityPreviewHostingViewController(0);
}

uint64_t sub_1D267A708()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for ActivityPreviewHostingViewController._ActivityAutoupdatingPreviewView(319);
  if (v1 <= 0x3F)
  {
    result = sub_1D26CC7A4();
    if (v2 <= 0x3F)
    {
      result = sub_1D26CD5E4();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for ActivityPreviewHostingViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.islandSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.islandSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.islandSize.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.apertureTopEdgeMetric.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.apertureTopEdgeMetric.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.apertureTopEdgeMetric.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.widgetSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x278))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.widgetLocation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x280))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.isLuminanceReduced.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x288))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.isLuminanceReduced.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x290))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.isLuminanceReduced.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x298))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.activityFamily.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.appName.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.appName.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.appName.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D0))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.__allocating_init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v8 + 728))(a1, a2, a3, a4, a5, a6, a7, a8 & 1);
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.updateCurrentState(to:disableAnimations:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2F8))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.numberOfStates.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x300))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.currentStateIndex.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x308))();
}

uint64_t dispatch thunk of ActivityPreviewHostingViewController.leadingCompactMetrics.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x318))();
}

uint64_t sub_1D267AA2C()
{
  return type metadata accessor for ActivityPreviewHostingViewController.StateController(0);
}

uint64_t *sub_1D267AA34(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v28 = *a2;
    *a1 = *a2;
    v4 = (uint64_t *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v9 = (void *)a2[2];
    v8 = a2[3];
    a1[2] = (uint64_t)v9;
    a1[3] = v8;
    v10 = a3[8];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    v13 = sub_1D26CC7A4();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_retain();
    v15 = v9;
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v16 = a3[9];
    v17 = (char *)v4 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1D26CD5E4();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[11];
    *(_OWORD *)((char *)v4 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
    v21 = (uint64_t *)((char *)v4 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[12];
    v25 = (uint64_t *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1D267AB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 36);
  v7 = sub_1D26CD5E4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  return swift_release();
}

_QWORD *sub_1D267AC0C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v8 = (void *)a2[2];
  v7 = a2[3];
  a1[2] = v8;
  a1[3] = v7;
  a1[4] = a2[4];
  v9 = a3[8];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D26CC7A4();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_retain();
  v14 = v8;
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v15 = a3[9];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_1D26CD5E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = a3[12];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *sub_1D267AD18(_QWORD *a1, _QWORD *a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = (void *)a1[2];
  v7 = (void *)a2[2];
  a1[2] = v7;
  v8 = v7;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a3[8];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D26CC7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[9];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1D26CD5E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = a3[10];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  v20 = a3[11];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (_QWORD *)((char *)a2 + v20);
  *v21 = *v22;
  v21[1] = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[12];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (_QWORD *)((char *)a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D267AE70(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[9];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1D26CD5E4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  return a1;
}

_QWORD *sub_1D267AF38(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  v8 = a2[4];
  a1[3] = a2[3];
  a1[4] = v8;
  swift_bridgeObjectRelease();
  v9 = a3[8];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D26CC7A4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[9];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1D26CD5E4();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v21 = *v19;
  v20 = v19[1];
  *v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  v22 = a3[12];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_release();
  return a1;
}

uint64_t sub_1D267B040()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D267B04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D26CC7A4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 32);
    }
    else
    {
      v10 = sub_1D26CD5E4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1D267B0EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D267B0F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = sub_1D26CC7A4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = sub_1D26CD5E4();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 36);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1D267B194()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CC7A4();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CD5E4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D267B25C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D267B27C(uint64_t result)
{
  *(_BYTE *)(result + 160) = 1;
  return result;
}

uint64_t sub_1D267B288(uint64_t result)
{
  *(_BYTE *)(result + 160) = 0;
  return result;
}

unint64_t sub_1D267B294()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC835B0;
  if (!qword_1EFC835B0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC83548);
    v2[0] = sub_1D267B318();
    v2[1] = sub_1D2536488(&qword_1ED96B298, &qword_1ED96B2A0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC835B0);
  }
  return result;
}

unint64_t sub_1D267B318()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC835B8;
  if (!qword_1EFC835B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC83520);
    v2[0] = sub_1D267B39C();
    v2[1] = sub_1D2536488(&qword_1ED963CA0, &qword_1ED963CA8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC835B8);
  }
  return result;
}

unint64_t sub_1D267B39C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC835C0;
  if (!qword_1EFC835C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC83518);
    v2[0] = sub_1D25E57E4();
    v2[1] = sub_1D2536488(&qword_1ED96CBD0, &qword_1ED96CBD8, MEMORY[0x1E0CDBE48]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC835C0);
  }
  return result;
}

_QWORD *BlockAssertion.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  _DWORD *v6;

  v4 = (_QWORD *)swift_allocObject();
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *v6 = 0;
  *(_QWORD *)(v5 + 16) = v6;
  v4[2] = v5;
  v4[3] = a1;
  v4[4] = a2;
  sub_1D25495F4(0);
  return v4;
}

uint64_t Assertion.mergingLifetimes(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t result;
  uint64_t v19;

  v8 = *(_QWORD *)(a2 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, a2);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = a2;
  *((_QWORD *)v13 + 3) = a3;
  *((_QWORD *)v13 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v13[v12], v10, a2);
  v14 = type metadata accessor for BlockAssertion();
  v15 = (_QWORD *)swift_allocObject();
  type metadata accessor for UnfairLock();
  v16 = swift_allocObject();
  swift_bridgeObjectRetain();
  v17 = (_DWORD *)swift_slowAlloc();
  *v17 = 0;
  *(_QWORD *)(v16 + 16) = v17;
  v15[2] = v16;
  v15[3] = sub_1D267B778;
  v15[4] = v13;
  result = sub_1D25495F4(0);
  a4[3] = v14;
  a4[4] = &protocol witness table for BlockAssertion;
  *a4 = v15;
  return result;
}

uint64_t sub_1D267B5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[3];
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1D2538510(v7, (uint64_t)v11);
      v8 = v12;
      v9 = v13;
      __swift_project_boxed_opaque_existential_0(v11, v12);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
}

_QWORD *BlockAssertion.init(_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  _DWORD *v6;

  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *v6 = 0;
  *(_QWORD *)(v5 + 16) = v6;
  v2[2] = v5;
  v2[3] = a1;
  v2[4] = a2;
  sub_1D25495F4(0);
  return v2;
}

uint64_t sub_1D267B70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D267B778()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1D267B5E0(v0[4], (uint64_t)v0 + ((v2 + 40) & ~v2), v1, v0[3]);
}

uint64_t type metadata accessor for BlockAssertion()
{
  return objc_opt_self();
}

Swift::Void __swiftcall BlockAssertion.invalidate()()
{
  _QWORD *v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t v3;

  v1 = v0[2];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v1 + 16));
  v2 = (void (*)(uint64_t))v0[3];
  v0[3] = 0;
  v0[4] = 0;
  sub_1D2549DF0((uint64_t)v2);
  sub_1D25495F4((uint64_t)v2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  if (v2)
  {
    v3 = swift_retain();
    v2(v3);
    sub_1D25495F4((uint64_t)v2);
    sub_1D25495F4((uint64_t)v2);
  }
}

uint64_t BlockAssertion.deinit()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 24);
  if (v1)
  {
    v2 = swift_retain();
    v1(v2);
    sub_1D25495F4((uint64_t)v1);
  }
  swift_release();
  sub_1D25495F4(*(_QWORD *)(v0 + 24));
  return v0;
}

uint64_t BlockAssertion.__deallocating_deinit()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(v0 + 24);
  if (v1)
  {
    v2 = swift_retain();
    v1(v2);
    sub_1D25495F4((uint64_t)v1);
  }
  swift_release();
  sub_1D25495F4(*(_QWORD *)(v0 + 24));
  return swift_deallocClassInstance();
}

void sub_1D267B904()
{
  BlockAssertion.invalidate()();
}

uint64_t dispatch thunk of Assertion.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for BlockAssertion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BlockAssertion.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D267B940(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  v6 = sub_1D26CE388();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  v9 = (void *)sub_1D26CB760();

  v10 = objc_msgSend(v9, sel_debugDescription);
  v11 = sub_1D26CD938();

  return v11;
}

uint64_t sub_1D267BA60()
{
  uint64_t result;

  sub_1D267BED0();
  result = sub_1D26CDF20();
  qword_1ED977D50 = result;
  return result;
}

uint64_t sub_1D267BAC4()
{
  uint64_t result;

  sub_1D267BED0();
  result = sub_1D26CDF20();
  qword_1ED977FC0 = result;
  return result;
}

uint64_t sub_1D267BB24()
{
  uint64_t result;

  sub_1D267BED0();
  result = sub_1D26CDF20();
  qword_1EFC8AAC0 = result;
  return result;
}

uint64_t sub_1D267BB80(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED9780A8);
}

uint64_t sub_1D267BBA8(uint64_t a1)
{
  return sub_1D267BC50(a1, qword_1ED977F80, &qword_1ED96C1C0, (id *)&qword_1ED977FC0);
}

uint64_t sub_1D267BBCC(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977E08);
}

uint64_t sub_1D267BBE4(uint64_t a1)
{
  return sub_1D267BC50(a1, qword_1ED977D08, &qword_1ED9627A8, (id *)&qword_1ED977D50);
}

uint64_t sub_1D267BC08(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977D70);
}

uint64_t sub_1D267BC2C(uint64_t a1)
{
  return sub_1D267BC50(a1, qword_1EFC8AAC8, qword_1EFC821B8, (id *)&qword_1EFC8AAC0);
}

uint64_t sub_1D267BC50(uint64_t a1, uint64_t *a2, _QWORD *a3, id *a4)
{
  uint64_t v7;
  id v8;

  v7 = sub_1D26CC09C();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  if (*a3 != -1)
    swift_once();
  v8 = *a4;
  return sub_1D26CC0A8();
}

uint64_t sub_1D267BCD8(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977CF0);
}

uint64_t sub_1D267BCFC(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977DD0);
}

uint64_t sub_1D267BD20(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977DB8);
}

uint64_t sub_1D267BD44(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977F68);
}

uint64_t sub_1D267BD60(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977D20);
}

uint64_t sub_1D267BD80(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977E78);
}

uint64_t sub_1D267BDA4(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED9780C0);
}

uint64_t sub_1D267BDD0(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977F08);
}

uint64_t sub_1D267BDFC(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977DE8);
}

uint64_t sub_1D267BE1C(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1EFC8AAE0);
}

uint64_t sub_1D267BE3C(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977E60);
}

uint64_t sub_1D267BE64(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1EFC8AAF8);
}

uint64_t sub_1D267BE84(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1EFC8AB10);
}

uint64_t sub_1D267BEB0(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1EFC8AB28);
}

unint64_t sub_1D267BED0()
{
  unint64_t result;

  result = qword_1ED96C0A0;
  if (!qword_1ED96C0A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96C0A0);
  }
  return result;
}

uint64_t sub_1D267BF0C(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977D58);
}

uint64_t sub_1D267BF30(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977F20);
}

uint64_t sub_1D267BF4C(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977EB8);
}

uint64_t sub_1D267BF74(uint64_t a1)
{
  return sub_1D267BF98(a1, qword_1ED977ED0);
}

uint64_t sub_1D267BF98(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1D26CC09C();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1D26CC090();
}

void sub_1D267C010(uint64_t a1, unint64_t a2)
{
  void *v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  os_log_type_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  id v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;

  v4 = (void *)sub_1D26CB760();
  if (a2)
  {
    v5 = v4;
    swift_bridgeObjectRetain_n();
    v27 = v5;
    v6 = sub_1D26CC084();
    v7 = sub_1D26CDCEC();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v28 = v9;
      *(_DWORD *)v8 = 136446978;
      swift_bridgeObjectRetain();
      sub_1D2537880(a1, a2, &v28);
      sub_1D26CDF50();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v8 + 12) = 2082;
      v10 = objc_msgSend(v27, sel_domain);
      v11 = sub_1D26CD938();
      v13 = v12;

      sub_1D2537880(v11, v13, &v28);
      sub_1D26CDF50();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 22) = 2048;
      objc_msgSend(v27, sel_code);

      sub_1D26CDF50();
      *(_WORD *)(v8 + 32) = 2082;
      v14 = objc_msgSend(v27, sel_debugDescription);
      v15 = sub_1D26CD938();
      v17 = v16;

      sub_1D2537880(v15, v17, &v28);
      sub_1D26CDF50();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v6, v7, "%{public}s: %{public}s (%ld) %{public}s", (uint8_t *)v8, 0x2Au);
LABEL_6:
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v9, -1, -1);
      MEMORY[0x1D823A5E0](v8, -1, -1);

      return;
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v27 = v4;
    v6 = sub_1D26CC084();
    v18 = sub_1D26CDCEC();
    if (os_log_type_enabled(v6, v18))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v28 = v9;
      *(_DWORD *)v8 = 136446722;
      v19 = objc_msgSend(v27, sel_domain);
      v20 = sub_1D26CD938();
      v22 = v21;

      sub_1D2537880(v20, v22, &v28);
      sub_1D26CDF50();

      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 12) = 2048;
      objc_msgSend(v27, sel_code);

      sub_1D26CDF50();
      *(_WORD *)(v8 + 22) = 2082;
      v23 = objc_msgSend(v27, sel_debugDescription);
      v24 = sub_1D26CD938();
      v26 = v25;

      sub_1D2537880(v24, v26, &v28);
      sub_1D26CDF50();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v6, v18, "%{public}s (%ld) %{public}s", (uint8_t *)v8, 0x20u);
      goto LABEL_6;
    }
  }

}

void TimelineKey.init(widget:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;

  v4 = objc_msgSend(a1, sel_extensionIdentity);
  v5 = objc_msgSend(a1, sel_kind);
  v6 = sub_1D26CD938();
  v8 = v7;

  v9 = objc_msgSend(a1, sel_intentReference);
  *a2 = v4;
  a2[1] = v6;
  a2[2] = v8;
  a2[3] = v9;
}

id TimelineKey.extensionIdentity.getter()
{
  id *v0;

  return *v0;
}

uint64_t TimelineKey.extensionBundleIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + *MEMORY[0x1E0D0FE30];
  swift_beginAccess();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t TimelineKey.containerBundleIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  return sub_1D2647B54(v3, a1);
}

uint64_t TimelineKey.kind.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void *TimelineKey.intentReference.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  v2 = v1;
  return v1;
}

uint64_t TimelineKey.init(extensionIdentity:kind:intentReference:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t TimelineKey.init(widgetEntryKey:)@<X0>(id *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t result;

  v4 = *a1;
  v5 = objc_msgSend(v4, sel_extensionIdentity);
  v6 = objc_msgSend(v4, sel_kind);
  v7 = sub_1D26CD938();
  v9 = v8;

  v10 = objc_msgSend(v4, sel_intentReference);
  result = sub_1D25A1D94((uint64_t)a1);
  *a2 = v5;
  a2[1] = v7;
  a2[2] = v9;
  a2[3] = v10;
  return result;
}

uint64_t TimelineKey.matches(personality:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  void (*v14)(char *, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  char v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v23[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v23 - v8;
  v10 = v1[1];
  v11 = v1[2];
  v12 = *v1 + *MEMORY[0x1E0D0FE30];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, v12, v3);
  v13 = objc_msgSend(a1, sel_extensionBundleIdentifier);
  sub_1D26CD938();

  sub_1D26CBC7C();
  sub_1D267C9D8();
  sub_1D26CDAC4();
  sub_1D26CDAC4();
  if (v23[3] == v23[1] && v23[4] == v23[2])
  {
    swift_bridgeObjectRelease_n();
    v14 = *(void (**)(char *, uint64_t))(v4 + 8);
    v14(v7, v3);
    v14(v9, v3);
  }
  else
  {
    v15 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 = *(void (**)(char *, uint64_t))(v4 + 8);
    v16(v7, v3);
    v16(v9, v3);
    v17 = 0;
    if ((v15 & 1) == 0)
      return v17 & 1;
  }
  v18 = objc_msgSend(a1, sel_kind);
  v19 = sub_1D26CD938();
  v21 = v20;

  if (v10 == v19 && v11 == v21)
    v17 = 1;
  else
    v17 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  return v17 & 1;
}

unint64_t sub_1D267C9D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED963328;
  if (!qword_1ED963328)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96FE70);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0D0F988], v1);
    atomic_store(result, (unint64_t *)&qword_1ED963328);
  }
  return result;
}

uint64_t TimelineKey.matches(widget:)(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  char v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  char v14;
  id v15;
  id v16;
  id v17;
  id v18;

  v3 = v1[1];
  v4 = v1[2];
  v5 = (void *)v1[3];
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
  v6 = objc_msgSend(a1, sel_extensionIdentity);
  v7 = sub_1D26CDECC();

  if ((v7 & 1) != 0)
  {
    v8 = objc_msgSend(a1, sel_kind);
    v9 = sub_1D26CD938();
    v11 = v10;

    if (v3 == v9 && v4 == v11)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
      v14 = 0;
      if ((v13 & 1) == 0)
        return v14 & 1;
    }
    v15 = v5;
    v16 = objc_msgSend(a1, sel_intentReference);
    v17 = v16;
    if (v5)
    {
      if (!v16)
      {
        v14 = 0;
        goto LABEL_17;
      }
      sub_1D2539514(0, &qword_1ED9638B8);
      v18 = v15;
      v14 = sub_1D26CDECC();

    }
    else
    {
      if (!v16)
      {
        v14 = 1;
        return v14 & 1;
      }
      v14 = 0;
    }
    v15 = v17;
LABEL_17:

    return v14 & 1;
  }
  v14 = 0;
  return v14 & 1;
}

void TimelineKey.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 24);
  v2 = *(id *)v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CE478();
  if (v1)
  {
    v3 = v1;
    sub_1D26CDED8();

  }
}

uint64_t TimelineKey.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 24);
  sub_1D26CE460();
  v3 = v1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CE478();
  if (v2)
  {
    v4 = v2;
    sub_1D26CDED8();

  }
  return sub_1D26CE49C();
}

void sub_1D267CD34()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 24);
  v2 = *(id *)v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CE478();
  if (v1)
  {
    v3 = v1;
    sub_1D26CDED8();

  }
}

uint64_t sub_1D267CDF4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 24);
  sub_1D26CE460();
  v3 = v1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CE478();
  if (v2)
  {
    v4 = v2;
    sub_1D26CDED8();

  }
  return sub_1D26CE49C();
}

uint64_t TimelineKey.description.getter()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;

  v1 = *(void **)v0;
  v2 = *(void **)(v0 + 24);
  if (v2)
  {
    v3 = v2;
    objc_msgSend(v3, sel_stableHash);
    sub_1D26CE370();
    sub_1D26CDA04();

    swift_bridgeObjectRelease();
  }
  v4 = v1;
  v5 = objc_msgSend(v4, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 91;
}

BOOL _s9ChronoKit11TimelineKeyV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  char v9;
  _BOOL8 result;
  id v11;
  id v12;
  char v13;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  v8 = v2 == v5 && v3 == v6;
  if (v8 || (v9 = sub_1D26CE3D0(), result = 0, (v9 & 1) != 0))
  {
    result = (v4 | v7) == 0;
    if (v4)
    {
      if (v7)
      {
        sub_1D2539514(0, &qword_1ED9638B8);
        v11 = (id)v7;
        v12 = (id)v4;
        v13 = sub_1D26CDECC();

        return v13 & 1;
      }
    }
  }
  return result;
}

unint64_t sub_1D267D104()
{
  unint64_t result;

  result = qword_1ED9623C0;
  if (!qword_1ED9623C0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for TimelineKey, &type metadata for TimelineKey);
    atomic_store(result, (unint64_t *)&qword_1ED9623C0);
  }
  return result;
}

void destroy for TimelineKey(id *a1)
{

  swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for TimelineKey(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v5;
  v6 = v3;
  swift_bridgeObjectRetain();
  v7 = v5;
  return a1;
}

uint64_t assignWithCopy for TimelineKey(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(void **)(a1 + 24);
  v8 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for TimelineKey(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  return a1;
}

uint64_t DescriptorCollection.descriptors.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_getKeyPath();
  sub_1D26CDE54();
  v0 = sub_1D26CDBA8();
  sub_1D267DFDC();
  v1 = sub_1D26CD89C();
  swift_bridgeObjectRetain();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DEA0D0], v1);
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF38], v0);
  v2 = sub_1D26CDAAC();
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t DescriptorCollection.descriptors<A>(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(_QWORD))(a3 + 24))(*(_QWORD *)(v3 + 16));
}

uint64_t DescriptorCollection.count.getter()
{
  uint64_t v0;

  DescriptorCollection.descriptors.getter();
  v0 = MEMORY[0x1D8239320]();
  swift_bridgeObjectRelease();
  return v0;
}

id WidgetDescriptorPredicate.widget.getter()
{
  id *v0;

  return *v0;
}

void WidgetDescriptorPredicate.widget.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*WidgetDescriptorPredicate.widget.modify())()
{
  return CGSizeMake;
}

uint64_t sub_1D267D43C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = WidgetDescriptorPredicate.evaluate(with:)();
  *a1 = result;
  return result;
}

uint64_t (*ControlDescriptorPredicate.control.modify())()
{
  return CGSizeMake;
}

uint64_t _s9ChronoKit25WidgetDescriptorPredicateV8evaluate4withSo09CHSWidgetD0CSgSDySo20CHSExtensionIdentityCSayAGGG_tF_0(uint64_t a1)
{
  id *v1;
  id v3;
  id v4;
  id v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *v1;
  v4 = objc_msgSend(*v1, sel_extensionIdentity);
  v5 = v4;
  if (*(_QWORD *)(a1 + 16) && (v6 = sub_1D25393D8((uint64_t)v4), (v7 & 1) != 0))
  {
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v6);
    swift_bridgeObjectRetain();

    v5 = v3;
    v9 = sub_1D267EF58(v8, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }

  return v9;
}

uint64_t (*IdentityDescriptorPredicate.identity.modify())()
{
  return CGSizeMake;
}

uint64_t IdentityDescriptorPredicate.evaluate(with:)(uint64_t a1)
{
  return sub_1D267D5AC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D26B68BC, &qword_1ED96C898);
}

uint64_t DescriptorCollection.__allocating_init(descriptorsByExtensionIdentity:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_1D267D574@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D267D648((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D26B68BC, &qword_1ED96C898, a1);
}

uint64_t (*IdentityControlDescriptorPredicate.identity.modify())()
{
  return CGSizeMake;
}

uint64_t IdentityControlDescriptorPredicate.evaluate(with:)(uint64_t a1)
{
  return sub_1D267D5AC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D26B68C8, &qword_1ED963180);
}

uint64_t sub_1D267D5AC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t *a3)
{
  id *v3;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = *v3;
  v7 = swift_bridgeObjectRetain();
  v8 = sub_1D267F41C(v7, v6, a2);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v8;
  return result;
}

uint64_t sub_1D267D634@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D267D648((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1D26B68C8, &qword_1ED963180, a1);
}

uint64_t sub_1D267D648@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t *a2@<X4>, uint64_t *a3@<X8>)
{
  id *v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v7 = *v3;
  v8 = swift_bridgeObjectRetain();
  v9 = sub_1D267F41C(v8, v7, a1);
  swift_bridgeObjectRelease();

  __swift_instantiateConcreteTypeFromMangledName(a2);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v9;
  *a3 = result;
  return result;
}

uint64_t ContainerKindDescriptorPredicate.containerBundleIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ContainerKindDescriptorPredicate.containerBundleIdentifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ContainerKindDescriptorPredicate.containerBundleIdentifier.modify())()
{
  return CGSizeMake;
}

uint64_t ContainerKindDescriptorPredicate.kind.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ContainerKindDescriptorPredicate() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContainerKindDescriptorPredicate.kind.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ContainerKindDescriptorPredicate() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

double (*ContainerKindDescriptorPredicate.kind.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ContainerKindDescriptorPredicate();
  return CGSizeMake;
}

id ContainerKindDescriptorPredicate.evaluate(with:)(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id result;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  int64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  char *v45;
  char v46;
  void (*v47)(uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  unint64_t v60;
  int64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  id v73;

  v63 = type metadata accessor for ContainerKindDescriptorPredicate();
  MEMORY[0x1E0C80A78](v63);
  v3 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v62 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962940);
  MEMORY[0x1E0C80A78](v67);
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v56 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v56 - v16;
  v18 = *(_QWORD *)(a1 + 64);
  v57 = a1 + 64;
  v19 = 1 << *(_BYTE *)(a1 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & v18;
  v58 = (unint64_t)(v19 + 63) >> 6;
  v59 = a1;
  result = (id)swift_bridgeObjectRetain();
  v23 = 0;
  v65 = v12;
  v66 = v8;
  v71 = v3;
  v64 = v17;
  while (1)
  {
    if (v21)
    {
      v24 = __clz(__rbit64(v21));
      v25 = (v21 - 1) & v21;
      v26 = v24 | (v23 << 6);
    }
    else
    {
      v27 = v23 + 1;
      if (__OFADD__(v23, 1))
        goto LABEL_47;
      if (v27 >= v58)
        goto LABEL_45;
      v28 = *(_QWORD *)(v57 + 8 * v27);
      ++v23;
      if (!v28)
      {
        v23 = v27 + 1;
        if (v27 + 1 >= v58)
          goto LABEL_45;
        v28 = *(_QWORD *)(v57 + 8 * v23);
        if (!v28)
        {
          v23 = v27 + 2;
          if (v27 + 2 >= v58)
            goto LABEL_45;
          v28 = *(_QWORD *)(v57 + 8 * v23);
          if (!v28)
          {
            v29 = v27 + 3;
            if (v29 >= v58)
              goto LABEL_45;
            v28 = *(_QWORD *)(v57 + 8 * v29);
            if (!v28)
            {
              while (1)
              {
                v23 = v29 + 1;
                if (__OFADD__(v29, 1))
                  goto LABEL_48;
                if (v23 >= v58)
                  break;
                v28 = *(_QWORD *)(v57 + 8 * v23);
                ++v29;
                if (v28)
                  goto LABEL_20;
              }
LABEL_45:
              swift_release();
              return 0;
            }
            v23 = v29;
          }
        }
      }
LABEL_20:
      v25 = (v28 - 1) & v28;
      v26 = __clz(__rbit64(v28)) + (v23 << 6);
    }
    v60 = v25;
    v61 = v23;
    v30 = *(_QWORD *)(*(_QWORD *)(v59 + 56) + 8 * v26);
    if (v30 >> 62)
      break;
    v31 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v31)
      goto LABEL_23;
LABEL_4:
    result = (id)swift_bridgeObjectRelease_n();
    v21 = v60;
    v23 = v61;
  }
  swift_bridgeObjectRetain_n();
  v31 = sub_1D26CE1F0();
  swift_bridgeObjectRelease();
  if (!v31)
    goto LABEL_4;
LABEL_23:
  v69 = v30;
  v70 = v30 & 0xC000000000000001;
  v32 = 4;
  v68 = v31;
  while (1)
  {
    v34 = v32 - 4;
    if (!v70)
      break;
    result = (id)MEMORY[0x1D8239890](v32 - 4, v30);
    v35 = v32 - 3;
    if (__OFADD__(v34, 1))
      goto LABEL_46;
LABEL_31:
    v73 = result;
    v36 = objc_msgSend(result, sel_extensionIdentity);
    v37 = (uint64_t)v36 + *MEMORY[0x1E0D0FE18];
    swift_beginAccess();
    sub_1D2647B54(v37, (uint64_t)v17);

    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v72, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v15, 0, 1, v4);
    v38 = (uint64_t)&v8[*(int *)(v67 + 48)];
    sub_1D2647B54((uint64_t)v17, (uint64_t)v8);
    sub_1D2647B54((uint64_t)v15, v38);
    v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v39((uint64_t)v8, 1, v4) == 1)
    {
      v40 = v39(v38, 1, v4);
      v41 = (uint64_t)v71;
      if (v40 != 1)
        goto LABEL_36;
      sub_1D253703C((uint64_t)v8, &qword_1ED963300);
      sub_1D253703C((uint64_t)v15, &qword_1ED963300);
      sub_1D253703C((uint64_t)v17, &qword_1ED963300);
      sub_1D267F600(v72, v41);
    }
    else
    {
      v42 = (uint64_t)v15;
      v43 = (uint64_t)v65;
      sub_1D2647B54((uint64_t)v8, (uint64_t)v65);
      v44 = v39(v38, 1, v4);
      v41 = (uint64_t)v71;
      if (v44 == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v43, v4);
        v15 = (char *)v42;
        v17 = v64;
LABEL_36:
        sub_1D253703C((uint64_t)v8, (uint64_t *)&unk_1ED962940);
        sub_1D253703C((uint64_t)v15, &qword_1ED963300);
        sub_1D253703C((uint64_t)v17, &qword_1ED963300);
        sub_1D267F600(v72, v41);
LABEL_37:
        sub_1D267F644(v41);
        goto LABEL_25;
      }
      v45 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v62, v38, v4);
      sub_1D267F680();
      v46 = sub_1D26CD908();
      v47 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v47(v43, v4);
      v48 = v45;
      v8 = v66;
      v47((uint64_t)v48, v4);
      sub_1D253703C((uint64_t)v8, &qword_1ED963300);
      v15 = (char *)v42;
      sub_1D253703C(v42, &qword_1ED963300);
      v17 = v64;
      sub_1D253703C((uint64_t)v64, &qword_1ED963300);
      sub_1D267F600(v72, v41);
      if ((v46 & 1) == 0)
        goto LABEL_37;
    }
    v49 = v5;
    v50 = objc_msgSend(v73, sel_kind);
    v51 = v41;
    v52 = sub_1D26CD938();
    v54 = v53;

    v55 = (_QWORD *)(v51 + *(int *)(v63 + 20));
    if (v52 == *v55 && v54 == v55[1])
    {
      swift_bridgeObjectRelease();
      sub_1D267F644((uint64_t)v71);
LABEL_44:
      swift_release();
      swift_bridgeObjectRelease_n();
      return v73;
    }
    v33 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    sub_1D267F644((uint64_t)v71);
    v5 = v49;
    v8 = v66;
    if ((v33 & 1) != 0)
      goto LABEL_44;
LABEL_25:

    ++v32;
    v30 = v69;
    if (v35 == v68)
      goto LABEL_4;
  }
  result = *(id *)(v30 + 8 * v32);
  v35 = v32 - 3;
  if (!__OFADD__(v34, 1))
    goto LABEL_31;
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

id sub_1D267DE78@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = ContainerKindDescriptorPredicate.evaluate(with:)(a1);
  *a2 = result;
  return result;
}

id static DescriptorPredicate<>.identityWithControls(_:)@<X0>(id a1@<X0>, id *a2@<X8>)
{
  *a2 = a1;
  return a1;
}

uint64_t static DescriptorPredicate<>.container(_:kind:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a4, a1, v8);
  v9 = (_QWORD *)(a4 + *(int *)(type metadata accessor for ContainerKindDescriptorPredicate() + 20));
  *v9 = a2;
  v9[1] = a3;
  return swift_bridgeObjectRetain();
}

uint64_t DescriptorCollectionFilter.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

ChronoKit::DescriptorCollectionFilter __swiftcall DescriptorCollectionFilter.init(rawValue:)(ChronoKit::DescriptorCollectionFilter rawValue)
{
  ChronoKit::DescriptorCollectionFilter *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static DescriptorCollectionFilter.excludeInternal.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static DescriptorCollectionFilter.remoteSupportedOnly.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static DescriptorCollectionFilter.excludeDisabled.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

uint64_t DescriptorCollection.descriptorsByExtensionIdentity.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_1D267DF50(id *a1)
{
  id v1;

  v1 = *a1;
  swift_bridgeObjectRetain();
  swift_getAtKeyPath();
  swift_bridgeObjectRelease();

}

void sub_1D267DFC4(id *a1)
{
  sub_1D267DF50(a1);
}

unint64_t sub_1D267DFDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96D528;
  if (!qword_1ED96D528)
  {
    v1 = sub_1D26CDE54();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96D528);
  }
  return result;
}

void DescriptorCollection.isEmpty.getter()
{
  sub_1D26CDE54();
  sub_1D26CDBA8();
  sub_1D267DFDC();
  JUMPOUT(0x1D8239020);
}

uint64_t DescriptorCollection.allExtensionIdentities.getter()
{
  uint64_t v0;

  sub_1D26CDE54();
  sub_1D26CDBA8();
  sub_1D267DFDC();
  v0 = sub_1D26CD83C();
  swift_bridgeObjectRetain();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DE9ED0], v0);
  return sub_1D26CDC38();
}

uint64_t DescriptorCollection.init(descriptorsByExtensionIdentity:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t DescriptorCollection.filter(_:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v2 = *a1;
  v3 = *(_QWORD *)(v1 + 16);
  if ((*a1 & 1) != 0)
  {
    MEMORY[0x1E0C80A78](a1);
    sub_1D26CDE54();
    sub_1D26CDBA8();
    sub_1D267DFDC();
    v4 = sub_1D26CD818();
    v3 = v4;
    if ((v2 & 2) == 0)
      goto LABEL_6;
    goto LABEL_5;
  }
  v4 = swift_bridgeObjectRetain();
  if ((v2 & 2) != 0)
  {
LABEL_5:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9639A8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1D26D5A90;
    sub_1D26CBC70();
    sub_1D26CBC70();
    sub_1D25F4DA8(v5);
    swift_setDeallocating();
    swift_arrayDestroy();
    v6 = swift_deallocClassInstance();
    MEMORY[0x1E0C80A78](v6);
    sub_1D26CDE54();
    sub_1D26CDBA8();
    sub_1D267DFDC();
    v3 = sub_1D26CD854();
    v4 = swift_bridgeObjectRelease();
  }
LABEL_6:
  if ((v2 & 4) != 0)
  {
    MEMORY[0x1E0C80A78](v4);
    sub_1D26CDE54();
    sub_1D26CDBA8();
    sub_1D267DFDC();
    v7 = sub_1D26CD818();
    swift_bridgeObjectRelease();
    v3 = v7;
  }
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  return result;
}

BOOL sub_1D267E3F4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1 + *MEMORY[0x1E0D0FE30];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  LOBYTE(a3) = sub_1D25D0B68((uint64_t)v8, a3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (a3 & 1) == 0;
}

uint64_t sub_1D267E4D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1D26CDBA8();
  swift_bridgeObjectRetain();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF60], v2);
  v3 = sub_1D26CE10C();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF50], v2);
  result = sub_1D26CDC8C();
  if ((result & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    v3 = 0;
  }
  *a1 = v3;
  return result;
}

uint64_t DescriptorCollection.filter(_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t i;
  uint64_t result;
  int64_t v9;
  uint64_t v11;
  int64_t v12;
  id v13;
  id v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;

  sub_1D26CDE54();
  v2 = sub_1D26CDBA8();
  sub_1D267DFDC();
  v17 = sub_1D26CD7C4();
  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v3 + 64);
  v15 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  i = v6 & v4;
  v16 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  if (i)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v9++, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v9 >= v16)
    goto LABEL_25;
  v11 = *(_QWORD *)(v15 + 8 * v9);
  if (v11)
    goto LABEL_15;
  v12 = v9 + 1;
  if (v9 + 1 >= v16)
  {
LABEL_25:
    swift_release();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v17;
    return result;
  }
  v11 = *(_QWORD *)(v15 + 8 * v12);
  if (!v11)
  {
    v12 = v9 + 2;
    if (v9 + 2 < v16)
    {
      v11 = *(_QWORD *)(v15 + 8 * v12);
      if (v11)
        goto LABEL_14;
      while (1)
      {
        v9 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        if (v9 >= v16)
          goto LABEL_25;
        v11 = *(_QWORD *)(v15 + 8 * v9);
        ++v12;
        if (v11)
          goto LABEL_15;
      }
LABEL_27:
      __break(1u);
      return result;
    }
    goto LABEL_25;
  }
LABEL_14:
  v9 = v12;
LABEL_15:
  for (i = (v11 - 1) & v11; ; i &= i - 1)
  {
    MEMORY[0x1E0C80A78](result);
    v14 = v13;
    swift_bridgeObjectRetain();
    MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF60], v2);
    sub_1D26CE10C();
    if (v1)
      break;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF50], v2);
    if ((sub_1D26CDC8C() & 1) != 0)
    {

      result = swift_bridgeObjectRelease();
      if (!i)
        goto LABEL_7;
    }
    else
    {
      sub_1D26CD89C();
      result = sub_1D26CD8C0();
      if (!i)
        goto LABEL_7;
    }
LABEL_6:
    ;
  }
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t DescriptorCollection.filterIdentities(_:)(uint64_t (*a1)(id))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t i;
  unint64_t v14;
  int64_t v15;
  id v16;
  char v17;
  uint64_t v19;

  sub_1D26CDE54();
  sub_1D26CDBA8();
  sub_1D267DFDC();
  v19 = sub_1D26CD7C4();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = v3 + 64;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  if (v7)
    goto LABEL_6;
LABEL_7:
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v10 >= v8)
    goto LABEL_25;
  v14 = *(_QWORD *)(v4 + 8 * v10);
  if (v14)
    goto LABEL_15;
  v15 = v10 + 1;
  if (v10 + 1 >= v8)
  {
LABEL_25:
    swift_release();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v19;
    return result;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (!v14)
  {
    v15 = v10 + 2;
    if (v10 + 2 < v8)
    {
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (v14)
        goto LABEL_14;
      while (1)
      {
        v10 = v15 + 1;
        if (__OFADD__(v15, 1))
          break;
        if (v10 >= v8)
          goto LABEL_25;
        v14 = *(_QWORD *)(v4 + 8 * v10);
        ++v15;
        if (v14)
          goto LABEL_15;
      }
LABEL_27:
      __break(1u);
      return result;
    }
    goto LABEL_25;
  }
LABEL_14:
  v10 = v15;
LABEL_15:
  v7 = (v14 - 1) & v14;
  for (i = __clz(__rbit64(v14)) + (v10 << 6); ; i = v11 | (v10 << 6))
  {
    v16 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * i);
    swift_bridgeObjectRetain();
    v17 = a1(v16);
    if (v2)
      break;
    if ((v17 & 1) != 0)
    {
      sub_1D26CD89C();
      result = sub_1D26CD8C0();
      if (!v7)
        goto LABEL_7;
    }
    else
    {

      result = swift_bridgeObjectRelease();
      if (!v7)
        goto LABEL_7;
    }
LABEL_6:
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
  }
  swift_release();

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t DescriptorCollection.mapDescriptors<A>(_:)(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];
  _QWORD v14[2];

  v7 = *v3;
  v14[1] = DescriptorCollection.descriptors.getter();
  v13[2] = *(_QWORD *)(v7 + 80);
  v13[3] = a3;
  v13[4] = a1;
  v13[5] = a2;
  v8 = sub_1D26CDBA8();
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
  v10 = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF50], v8);
  v11 = sub_1D25B585C((void (*)(char *, char *))sub_1D267F750, (uint64_t)v13, v8, a3, v9, v10, MEMORY[0x1E0DEDB38], (uint64_t)v14);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t DescriptorCollection.compactMapDescriptors<A>(_:)()
{
  uint64_t v0;
  uint64_t v1;

  DescriptorCollection.descriptors.getter();
  v0 = sub_1D26CDBA8();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF38], v0);
  v1 = sub_1D26CDA64();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t DescriptorCollection.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DescriptorCollection.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DescriptorCollection.makeIterator()()
{
  return DescriptorCollection.descriptors.getter();
}

uint64_t sub_1D267EC68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = DescriptorCollection.makeIterator()();
  result = swift_release();
  *a1 = v2;
  a1[1] = 0;
  return result;
}

uint64_t sub_1D267ECA4()
{
  uint64_t v0;

  v0 = sub_1D267EDA0();
  swift_release();
  return v0;
}

void *DescriptorCollection<>.descriptor(matching:)(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  id v4;
  void *v5;

  sub_1D2539514(0, &qword_1ED963230);
  swift_getKeyPath();
  swift_retain();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1D267EDA4(v2);
  swift_bridgeObjectRelease();
  swift_release_n();
  v4 = a1;
  v5 = sub_1D267F118(v3, v4);
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_1D267EDA4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v6)
      goto LABEL_23;
    v13 = *(_QWORD *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_23;
      v13 = *(_QWORD *)(v2 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v6)
          goto LABEL_23;
        v13 = *(_QWORD *)(v2 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v6)
            goto LABEL_23;
          v13 = *(_QWORD *)(v2 + 8 * v8);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    v11 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();

    result = sub_1D25F6BC8(v15);
  }
  v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  v13 = *(_QWORD *)(v2 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v6)
      goto LABEL_23;
    v13 = *(_QWORD *)(v2 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D267EF58(unint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v17;
  void *v20;

  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    v3 = sub_1D26CE1F0();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      for (i = 4; ; ++i)
      {
        v5 = i - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          v6 = (id)MEMORY[0x1D8239890](i - 4, a1);
          v7 = i - 3;
          if (__OFADD__(v5, 1))
            goto LABEL_18;
        }
        else
        {
          v6 = *(id *)(a1 + 8 * i);
          v7 = i - 3;
          if (__OFADD__(v5, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        v20 = v6;
        v8 = objc_msgSend(v6, sel_kind);
        v9 = sub_1D26CD938();
        v11 = v10;

        v12 = objc_msgSend(a2, sel_kind);
        v13 = sub_1D26CD938();
        v15 = v14;

        if (v9 == v13 && v11 == v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_17:
          v3 = (uint64_t)v20;
          swift_bridgeObjectRelease();
          return v3;
        }
        v17 = sub_1D26CE3D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) != 0)
          goto LABEL_17;

        if (v7 == v3)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1D267F118(unint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;

  if (a1 >> 62)
    goto LABEL_14;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; v4 = sub_1D26CE1F0())
  {
    v5 = 4;
    while (1)
    {
      v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D8239890](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      v7 = v6;
      v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1))
        break;
      if (objc_msgSend(a2, sel_matches_, v6))
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4)
        goto LABEL_10;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D267F220(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  void *v13;
  id v14;
  char v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v22 = result;
  v6 = 0;
  v24 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v10)
      return a5(v22, a2, v23, a3);
    v17 = *(_QWORD *)(v24 + 8 * v16);
    ++v6;
    if (!v17)
    {
      v6 = v16 + 1;
      if (v16 + 1 >= v10)
        return a5(v22, a2, v23, a3);
      v17 = *(_QWORD *)(v24 + 8 * v6);
      if (!v17)
      {
        v6 = v16 + 2;
        if (v16 + 2 >= v10)
          return a5(v22, a2, v23, a3);
        v17 = *(_QWORD *)(v24 + 8 * v6);
        if (!v17)
          break;
      }
    }
LABEL_20:
    v9 = (v17 - 1) & v17;
    v12 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_5:
    v13 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v12);
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
    v14 = v13;
    swift_bridgeObjectRetain();
    v15 = sub_1D26CDECC();

    result = swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
      *(_QWORD *)(v22 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return a5(v22, a2, v23, a3);
      }
    }
  }
  v18 = v16 + 3;
  if (v18 >= v10)
    return a5(v22, a2, v23, a3);
  v17 = *(_QWORD *)(v24 + 8 * v18);
  if (v17)
  {
    v6 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v6 >= v10)
      return a5(v22, a2, v23, a3);
    v17 = *(_QWORD *)(v24 + 8 * v6);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1D267F41C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  char v6;
  unsigned int v7;
  unint64_t v8;
  uint64_t isStackAllocationSafe;
  void *v10;
  char *v11;
  id v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v6 = *(_BYTE *)(a1 + 32);
  v7 = v6 & 0x3F;
  v8 = (unint64_t)((1 << v6) + 63) >> 6;
  isStackAllocationSafe = a2;
  v10 = (void *)isStackAllocationSafe;
  if (v7 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v11 = (char *)v17 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v11, 8 * v8);
    v12 = v10;
    v13 = sub_1D267F220((uint64_t)v11, v8, a1, (uint64_t)v12, a3);

    if (v3)
      swift_willThrow();

  }
  else
  {
    v14 = (void *)swift_slowAlloc();
    bzero(v14, 8 * v8);
    v15 = v10;
    v13 = sub_1D267F220((uint64_t)v14, v8, a1, (uint64_t)v15, a3);

    MEMORY[0x1D823A5E0](v14, -1, -1);
  }
  return v13;
}

uint64_t type metadata accessor for ContainerKindDescriptorPredicate()
{
  uint64_t result;

  result = qword_1EFC835C8;
  if (!qword_1EFC835C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D267F600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ContainerKindDescriptorPredicate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D267F644(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ContainerKindDescriptorPredicate();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D267F680()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED9632F0;
  if (!qword_1ED9632F0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED9632F8);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0D0F980], v1);
    atomic_store(result, (unint64_t *)&qword_1ED9632F0);
  }
  return result;
}

uint64_t sub_1D267F6CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D267E4D4(a1);
}

BOOL sub_1D267F6EC(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D267E3F4(a1, a2, *(_QWORD *)(v2 + 24));
}

uint64_t sub_1D267F708@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D267E4D4(a1);
}

uint64_t sub_1D267F728(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 24))(*a1) & 1;
}

uint64_t sub_1D267F750(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD))(v2 + 32))(*a1);
  if (v3)
    *a2 = v3;
  return result;
}

uint64_t sub_1D267F784(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 32))(*a1);
}

unint64_t sub_1D267F7AC()
{
  unint64_t result;

  result = qword_1ED963198;
  if (!qword_1ED963198)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for DescriptorCollectionFilter, &type metadata for DescriptorCollectionFilter);
    atomic_store(result, (unint64_t *)&qword_1ED963198);
  }
  return result;
}

unint64_t sub_1D267F7F4()
{
  unint64_t result;

  result = qword_1ED9631A0;
  if (!qword_1ED9631A0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for DescriptorCollectionFilter, &type metadata for DescriptorCollectionFilter);
    atomic_store(result, (unint64_t *)&qword_1ED9631A0);
  }
  return result;
}

unint64_t sub_1D267F83C()
{
  unint64_t result;

  result = qword_1ED963190;
  if (!qword_1ED963190)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for DescriptorCollectionFilter, &type metadata for DescriptorCollectionFilter);
    atomic_store(result, (unint64_t *)&qword_1ED963190);
  }
  return result;
}

unint64_t sub_1D267F884()
{
  unint64_t result;

  result = qword_1ED9631A8;
  if (!qword_1ED9631A8)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for DescriptorCollectionFilter, &type metadata for DescriptorCollectionFilter);
    atomic_store(result, (unint64_t *)&qword_1ED9631A8);
  }
  return result;
}

void sub_1D267F8C8()
{
  JUMPOUT(0x1D823A4E4);
}

uint64_t dispatch thunk of DescriptorPredicate.evaluate(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for WidgetDescriptorPredicate()
{
  return &type metadata for WidgetDescriptorPredicate;
}

ValueMetadata *type metadata accessor for ControlDescriptorPredicate()
{
  return &type metadata for ControlDescriptorPredicate;
}

ValueMetadata *type metadata accessor for IdentityDescriptorPredicate()
{
  return &type metadata for IdentityDescriptorPredicate;
}

ValueMetadata *type metadata accessor for IdentityControlDescriptorPredicate()
{
  return &type metadata for IdentityControlDescriptorPredicate;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContainerKindDescriptorPredicate(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for ContainerKindDescriptorPredicate(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ContainerKindDescriptorPredicate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContainerKindDescriptorPredicate()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D267FBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for ContainerKindDescriptorPredicate()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D267FC5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_1D267FCDC()
{
  unint64_t v0;

  sub_1D267FD4C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D267FD4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFC835D8)
  {
    v0 = sub_1D26CBCA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFC835D8);
  }
}

ValueMetadata *type metadata accessor for DescriptorCollectionFilter()
{
  return &type metadata for DescriptorCollectionFilter;
}

uint64_t sub_1D267FDB0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DescriptorCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DescriptorCollection);
}

uint64_t method lookup function for DescriptorCollection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DescriptorCollection.__allocating_init(descriptorsByExtensionIdentity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1D267FE14(id *a1)
{
  return objc_msgSend(*a1, sel_isInternal) ^ 1;
}

id sub_1D267FE48(id *a1)
{
  return objc_msgSend(*a1, sel_isEnabled);
}

uint64_t sub_1D267FEA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1D267FF08(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1D26CD488();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1D267FFCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D2680030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1D268009C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t WidgetEntry.key.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D257F290(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, a1);
}

uint64_t WidgetEntry.entrySupportsRendering.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_entrySupportsRendering);
}

uint64_t sub_1D2680104@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2680870(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry, (uint64_t *)&unk_1ED96BF50, a1);
}

void sub_1D2680118(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t *v28;
  _QWORD *v29;
  uint64_t v30;
  char *v31;
  char v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[3];
  uint64_t v41;

  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v34 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v34 - v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock)
                                                       + 16));
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher) & 1) == 0)
  {
    v38 = v1;
    v39 = a1;
    v35 = v6;
    v36 = v13;
    v19 = (_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry);
    swift_beginAccess();
    v20 = v19[3];
    v37 = v19;
    if (v20)
    {
      v21 = __swift_project_boxed_opaque_existential_0(v19, v20);
      v34 = (uint64_t)&v34;
      v22 = *(_QWORD *)(v20 - 8);
      MEMORY[0x1E0C80A78](v21);
      v24 = (char *)&v34 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v22 + 16))(v24);
      sub_1D26CD3E0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v20);
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v25(v18, 0, 1, v3);
    }
    else
    {
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v25(v18, 1, 1, v3);
    }
    sub_1D2537078(v39, (uint64_t)v40, &qword_1ED96BF40);
    if (v41)
    {
      __swift_project_boxed_opaque_existential_0(v40, v41);
      sub_1D26CD3E0();
      v25(v16, 0, 1, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    }
    else
    {
      sub_1D253703C((uint64_t)v40, &qword_1ED96BF40);
      v25(v16, 1, 1, v3);
    }
    v26 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_1D2537078((uint64_t)v18, (uint64_t)v9, &qword_1ED96B1E0);
    sub_1D2537078((uint64_t)v16, v26, &qword_1ED96B1E0);
    v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    if (v27((uint64_t)v9, 1, v3) == 1)
    {
      sub_1D253703C((uint64_t)v16, &qword_1ED96B1E0);
      sub_1D253703C((uint64_t)v18, &qword_1ED96B1E0);
      if (v27(v26, 1, v3) == 1)
      {
        v28 = &qword_1ED96B1E0;
        v29 = v9;
LABEL_16:
        sub_1D253703C((uint64_t)v29, v28);
        return;
      }
    }
    else
    {
      v30 = (uint64_t)v36;
      sub_1D2537078((uint64_t)v9, (uint64_t)v36, &qword_1ED96B1E0);
      if (v27(v26, 1, v3) != 1)
      {
        v31 = v35;
        (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v35, v26, v3);
        sub_1D25369B0((unint64_t *)&qword_1ED96B1D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        v32 = sub_1D26CD908();
        v33 = *(void (**)(char *, uint64_t))(v4 + 8);
        v33(v31, v3);
        sub_1D253703C((uint64_t)v16, &qword_1ED96B1E0);
        sub_1D253703C((uint64_t)v18, &qword_1ED96B1E0);
        v33((char *)v30, v3);
        sub_1D253703C((uint64_t)v9, &qword_1ED96B1E0);
        if ((v32 & 1) != 0)
          return;
        goto LABEL_15;
      }
      sub_1D253703C((uint64_t)v16, &qword_1ED96B1E0);
      sub_1D253703C((uint64_t)v18, &qword_1ED96B1E0);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v30, v3);
    }
    sub_1D253703C((uint64_t)v9, &qword_1ED96B1E8);
LABEL_15:
    sub_1D2537078((uint64_t)v37, (uint64_t)v40, &qword_1ED96BF40);
    sub_1D26CC138();
    v29 = v40;
    v28 = &qword_1ED96BF40;
    goto LABEL_16;
  }
}

uint64_t sub_1D26805AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2680870(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry, &qword_1ED96BF40, a1);
}

uint64_t sub_1D26805C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  _BYTE v7[40];
  _BYTE v8[40];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2537078(a1, (uint64_t)v8, &qword_1ED96BF40);
  v5 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
  swift_beginAccess();
  sub_1D2537078(v5, (uint64_t)v7, &qword_1ED96BF40);
  swift_beginAccess();
  sub_1D26106B4((uint64_t)v8, v5, &qword_1ED96BF40);
  swift_endAccess();
  sub_1D2680118((uint64_t)v7);
  sub_1D253703C((uint64_t)v8, &qword_1ED96BF40);
  sub_1D253703C((uint64_t)v7, &qword_1ED96BF40);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return sub_1D253703C(a1, &qword_1ED96BF40);
}

uint64_t sub_1D26806C4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider);
  a1[3] = type metadata accessor for DescriptorMixedEnvironmentProviderAdapter();
  a1[4] = &off_1E93D2380;
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_1D2680708(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _BYTE v7[24];
  uint64_t v8;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1D26106B4(a1, v3, &qword_1ED96BF68);
  swift_endAccess();
  sub_1D2537078(v3, (uint64_t)v7, &qword_1ED96BF68);
  v4 = v8;
  sub_1D253703C((uint64_t)v7, &qword_1ED96BF68);
  if (v4)
  {
    v5 = (_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    *v5 = 0;
    v5[1] = 0;
    swift_bridgeObjectRelease();
  }
  return sub_1D253703C(a1, &qword_1ED96BF68);
}

uint64_t sub_1D26807C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;

  v7 = *a1;
  v8 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  v10 = v7 + *a2;
  swift_beginAccess();
  sub_1D2537078(v10, a4, a3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  return swift_release();
}

uint64_t sub_1D268085C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2680870(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content, &qword_1ED96BF68, a1);
}

uint64_t sub_1D2680870@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  v9 = v3 + *a1;
  swift_beginAccess();
  sub_1D2537078(v9, a3, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  return swift_release();
}

uint64_t sub_1D2680908(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D26809C8(v1, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
  sub_1D26CC1A4();
  return sub_1D253703C(a1, &qword_1ED96BF68);
}

uint64_t sub_1D26809C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v20[3];
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96BF50);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_entrySupportsRendering) == 1)
  {
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock)
                                                         + 16));
    v11 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher;
    if (*(_BYTE *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher) == 1)
    {
      sub_1D2537078(a2, (uint64_t)&v22, &qword_1ED96BF68);
      sub_1D2680708((uint64_t)&v22);
      v12 = sub_1D26CD56C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v10, 1, 1, v12);
      v13 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry;
      swift_beginAccess();
      sub_1D25AB51C((uint64_t)v10, v13, (uint64_t *)&unk_1ED96BF50);
      swift_endAccess();
      v24 = 0;
      v22 = 0u;
      v23 = 0u;
      v14 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
      swift_beginAccess();
      sub_1D2537078(v14, (uint64_t)v20, &qword_1ED96BF40);
      swift_beginAccess();
      sub_1D26106B4((uint64_t)&v22, v14, &qword_1ED96BF40);
      swift_endAccess();
      sub_1D2680118((uint64_t)v20);
      sub_1D253703C((uint64_t)&v22, &qword_1ED96BF40);
      sub_1D253703C((uint64_t)v20, &qword_1ED96BF40);
    }
    else
    {
      *(_BYTE *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher) = 1;
      sub_1D2537078(a2, (uint64_t)&v22, &qword_1ED96BF68);
      sub_1D2680708((uint64_t)&v22);
      v15 = sub_1D26CD56C();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 1, 1, v15);
      v16 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry;
      swift_beginAccess();
      sub_1D25AB51C((uint64_t)v10, v16, (uint64_t *)&unk_1ED96BF50);
      swift_endAccess();
      v24 = 0;
      v22 = 0u;
      v23 = 0u;
      v17 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
      swift_beginAccess();
      sub_1D2537078(v17, (uint64_t)v20, &qword_1ED96BF40);
      swift_beginAccess();
      sub_1D26106B4((uint64_t)&v22, v17, &qword_1ED96BF40);
      swift_endAccess();
      sub_1D2680118((uint64_t)v20);
      sub_1D253703C((uint64_t)&v22, &qword_1ED96BF40);
      sub_1D253703C((uint64_t)v20, &qword_1ED96BF40);
      *(_BYTE *)(a1 + v11) = 0;
    }
    sub_1D26CB9D0();
    sub_1D2682A6C((uint64_t)v7, (uint64_t)&v22);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return sub_1D253703C((uint64_t)&v22, &qword_1ED96BF40);
  }
  else
  {
    sub_1D2537078(a2, (uint64_t)v20, &qword_1ED96BF68);
    if (v21)
    {
      __swift_project_boxed_opaque_existential_0(v20, v21);
      sub_1D26CD5A8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    else
    {
      sub_1D253703C((uint64_t)v20, &qword_1ED96BF68);
      v22 = 0u;
      v23 = 0u;
      v24 = 0;
    }
    return sub_1D2680708((uint64_t)&v22);
  }
}

void (*sub_1D2680DA4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = malloc(0x78uLL);
  *a1 = v3;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v3[13] = v1;
  v3[14] = v4;
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1D2537078(v6, (uint64_t)v3, &qword_1ED96BF68);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  return sub_1D2680E58;
}

void sub_1D2680E58(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v2 = (_QWORD *)*a1;
  if ((a2 & 1) != 0)
  {
    v4 = v2[13];
    v3 = v2[14];
    sub_1D2537078(*a1, (uint64_t)(v2 + 5), &qword_1ED96BF68);
    v5 = *(os_unfair_lock_s **)(v3 + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    sub_1D26809C8(v4, (uint64_t)(v2 + 5));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
    sub_1D26CC1A4();
    sub_1D253703C((uint64_t)(v2 + 5), &qword_1ED96BF68);
  }
  else
  {
    v7 = v2[13];
    v6 = v2[14];
    v8 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v8);
    sub_1D26809C8(v7, (uint64_t)v2);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
    sub_1D26CC1A4();
  }
  sub_1D253703C((uint64_t)v2, &qword_1ED96BF68);
  free(v2);
}

uint64_t sub_1D2680FC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1D2537078(v6, a2, &qword_1ED96B1E0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1D268105C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2537078(a1, (uint64_t)v4, &qword_1ED96B1E0);
  return sub_1D26810F4((uint64_t)v4);
}

uint64_t sub_1D26810E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2680870(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate, &qword_1ED96B1E0, a1);
}

uint64_t sub_1D26810F4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_1D2537078(a1, (uint64_t)v8, &qword_1ED96B1E0);
  sub_1D25384CC((uint64_t)v8, (uint64_t)v6, &qword_1ED96B1E0);
  v11 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1D25AB51C((uint64_t)v6, v11, &qword_1ED96B1E0);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  return sub_1D253703C(a1, &qword_1ED96B1E0);
}

void (*sub_1D268121C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0) - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1D2537078(v8, (uint64_t)v5, &qword_1ED96B1E0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  return sub_1D26812FC;
}

void sub_1D26812FC(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 32);
  v4 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    sub_1D2537078(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v3, &qword_1ED96B1E0);
    sub_1D26810F4((uint64_t)v3);
    sub_1D253703C((uint64_t)v4, &qword_1ED96B1E0);
  }
  else
  {
    sub_1D26810F4(*(_QWORD *)(*(_QWORD *)a1 + 40));
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_1D2681380(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1D2683BE0(v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26813C0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1D2537078(v3, (uint64_t)v7, &qword_1ED96BF68);
  v4 = v8;
  sub_1D253703C((uint64_t)v7, &qword_1ED96BF68);
  v5 = 0;
  if (!v4)
  {
    v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    swift_bridgeObjectRetain();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v5;
}

uint64_t sub_1D2681494(uint64_t a1, uint64_t a2)
{
  sub_1D2683BE0(a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D26814B8(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  *a1 = sub_1D26813C0();
  a1[1] = v3;
  return sub_1D26814EC;
}

uint64_t sub_1D26814EC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  _QWORD *v7;
  _QWORD *v8;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock(v6);
    v7 = (_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    *v7 = v4;
    v7[1] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(v6);
    v8 = (_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    *v8 = v4;
    v8[1] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26815D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1D2682A6C(a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

uint64_t WidgetEntry.objectWillChange.getter()
{
  return swift_retain();
}

uint64_t WidgetEntry.contentDidChangePublisher.getter()
{
  return swift_retain();
}

uint64_t WidgetEntry.descriptorDidChangePublisher.getter()
{
  return swift_retain();
}

void *sub_1D2681668()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  void *v3;
  os_unfair_lock_s *v4;
  id v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor);
  v4 = *(os_unfair_lock_s **)(v1 + 16);
  v5 = v3;
  os_unfair_lock_unlock(v4);
  swift_release();
  return v3;
}

char *WidgetEntry.__allocating_init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return WidgetEntry.init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)(a1, a2, a3, a4, a5);
}

char *WidgetEntry.init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _DWORD *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  id *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t (*v38)(void);
  id v39;
  void *v40;
  void *v41;
  id v42;
  uint64_t v43;
  id v44;
  objc_class *v45;
  char *v46;
  uint64_t v47;
  void (*v48)(void);
  char *v49;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  objc_super v62;
  id v63;
  _OWORD v64[2];
  uint64_t v65;

  v58 = a5;
  v59 = (_QWORD *)a4;
  v60 = a2;
  v57 = a3;
  v61 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C078);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B210);
  v10 = *(_QWORD *)(v9 - 8);
  v55 = v9;
  v56 = v10;
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock;
  type metadata accessor for UnfairLock();
  v13 = swift_allocObject();
  v14 = v5;
  v15 = (_DWORD *)swift_slowAlloc();
  *v15 = 0;
  *(_QWORD *)(v13 + 16) = v15;
  *(_QWORD *)&v5[v12] = v13;
  v16 = &v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry];
  v17 = sub_1D26CD56C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_1D26CB910();
  v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_shouldSilencePublisher] = 0;
  v18 = &v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  *((_QWORD *)v18 + 4) = 0;
  v19 = (uint64_t)&v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content];
  *(_QWORD *)(v19 + 32) = 0;
  *(_OWORD *)v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  v20 = &v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate];
  v21 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  v22 = &v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__objectWillChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B250);
  swift_allocObject();
  v24 = sub_1D26CC150();
  *(_QWORD *)&v14[v23] = v24;
  v25 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__contentDidChangePublisher;
  v51 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__contentDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  *(_QWORD *)&v14[v25] = sub_1D26CC150();
  v26 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__descriptorDidChangePublisher;
  v52 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__descriptorDidChangePublisher;
  swift_allocObject();
  *(_QWORD *)&v14[v26] = sub_1D26CC150();
  v53 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor] = 0;
  *(_QWORD *)&v64[0] = v24;
  v27 = (void *)objc_opt_self();
  swift_retain();
  v63 = objc_msgSend(v27, sel_mainRunLoop);
  v28 = sub_1D26CDEE4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v8, 1, 1, v28);
  sub_1D2539514(0, (unint64_t *)&unk_1ED96C090);
  sub_1D2536488(&qword_1ED96B248, &qword_1ED96B250, MEMORY[0x1E0C95F48]);
  sub_1D2683C60();
  v29 = v54;
  sub_1D26CC258();
  sub_1D253703C((uint64_t)v8, &qword_1ED96C078);

  swift_release();
  sub_1D2536488(&qword_1ED96B208, &qword_1ED96B210, MEMORY[0x1E0C95CB8]);
  v30 = v55;
  v31 = sub_1D26CC204();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v29, v30);
  *(_QWORD *)&v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_objectWillChange] = v31;
  *(_QWORD *)&v64[0] = *(_QWORD *)&v14[v51];
  sub_1D2536488((unint64_t *)&unk_1ED96FC70, &qword_1ED96FC80, MEMORY[0x1E0C95F48]);
  *(_QWORD *)&v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_contentDidChangePublisher] = sub_1D26CC204();
  *(_QWORD *)&v64[0] = *(_QWORD *)&v14[v52];
  *(_QWORD *)&v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorDidChangePublisher] = sub_1D26CC204();
  v32 = (id *)&v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key];
  sub_1D257F290(v61, (uint64_t)&v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key]);
  v33 = &v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType];
  v34 = sub_1D26CD488();
  v35 = *(_QWORD *)(v34 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v33, v60, v34);
  v65 = 0;
  memset(v64, 0, sizeof(v64));
  swift_beginAccess();
  sub_1D25AB51C((uint64_t)v64, v19, &qword_1ED96BF68);
  swift_endAccess();
  *(_OWORD *)v22 = xmmword_1D26DAB70;
  swift_bridgeObjectRelease();
  v36 = v59;
  sub_1D2538510((uint64_t)v59, (uint64_t)&v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver]);
  v37 = v36[4];
  __swift_project_boxed_opaque_existential_0(v36, v36[3]);
  v38 = *(uint64_t (**)(void))(v37 + 8);
  v39 = *v32;
  v40 = (void *)v38();

  v41 = *(void **)&v14[v53];
  *(_QWORD *)&v14[v53] = v40;
  v42 = v40;

  v43 = v57;
  sub_1D2538510(v57, (uint64_t)v64);
  type metadata accessor for DescriptorMixedEnvironmentProviderAdapter();
  swift_allocObject();
  v44 = v42;
  *(_QWORD *)&v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider] = sub_1D25CC51C((uint64_t)v64, v40);
  v14[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_entrySupportsRendering] = v58;

  v45 = (objc_class *)type metadata accessor for WidgetEntry(0);
  v62.receiver = v14;
  v62.super_class = v45;
  v46 = (char *)objc_msgSendSuper2(&v62, sel_init);
  v47 = *(_QWORD *)&v46[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver + 32];
  __swift_project_boxed_opaque_existential_0(&v46[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver], *(_QWORD *)&v46[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver + 24]);
  v48 = *(void (**)(void))(v47 + 16);
  v49 = v46;
  v48();

  __swift_destroy_boxed_opaque_existential_1(v43);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v60, v34);
  sub_1D25340E4(v61, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
  return v49;
}

uint64_t sub_1D2681D28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver + 24);
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver), v1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 24))(v0, v1, v2);
}

uint64_t sub_1D2681DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  os_unfair_lock_s *v10;

  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_1D2681E78(v4, a2, a1, a3, a4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  return swift_release();
}

uint64_t sub_1D2681E78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  _QWORD v82[4];
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;

  v73 = a4;
  v75 = a3;
  v67 = sub_1D26CD1A0();
  v66 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v65 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = sub_1D26CD1DC();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v62 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96BF50);
  v11 = MEMORY[0x1E0C80A78](v10);
  v61 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v72 = (char *)&v58 - v13;
  v70 = sub_1D26CD56C();
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v60 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v68 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v58 - v18;
  v20 = sub_1D26CB9DC();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v58 - v25;
  v27 = a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1D2537078(v27, (uint64_t)&v76, &qword_1ED96BF68);
  if (!v77)
  {
    sub_1D253703C((uint64_t)&v76, &qword_1ED96BF68);
    v36 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
    v37 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError + 8);
    *a5 = v36;
    a5[1] = v37;
    type metadata accessor for WidgetEntry.WidgetEntryError(0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C128);
    swift_storeEnumTagMultiPayload();
    return swift_bridgeObjectRetain();
  }
  v74 = a1;
  sub_1D2538F38(&v76, (uint64_t)&v83);
  v59 = a2;
  sub_1D2537078(a2, (uint64_t)v19, &qword_1ED96B1E0);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  v29 = v28(v19, 1, v20);
  v71 = a5;
  if (v29 == 1)
  {
    sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
    v30 = v74 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
    swift_beginAccess();
    sub_1D2537078(v30, (uint64_t)&v79, &qword_1ED96BF40);
    if (*((_QWORD *)&v80 + 1))
    {
LABEL_4:
      v31 = v21;
      sub_1D2538F38(&v79, (uint64_t)v82);
      __swift_project_boxed_opaque_existential_0(&v83, v84);
      __swift_project_boxed_opaque_existential_0(v82, v82[3]);
      sub_1D26CD3E0();
      v32 = (uint64_t)v72;
      v33 = v85;
      sub_1D26CD590();
      v85 = v33;
      if (v33)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v20);
        v34 = (uint64_t)v71;
        sub_1D2538510((uint64_t)v82, (uint64_t)v71);
        *(_QWORD *)(v34 + 40) = v85;
        type metadata accessor for WidgetEntry.WidgetEntryError(0);
        swift_storeEnumTagMultiPayload();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C128);
        swift_storeEnumTagMultiPayload();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
        v85 = 0;
        return result;
      }
      (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v20);
      v40 = v69;
      v41 = v70;
      v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 48))(v32, 1, v70);
      v43 = (uint64_t)v71;
      if (v42 == 1)
      {
        sub_1D253703C(v32, (uint64_t *)&unk_1ED96BF50);
        sub_1D2538510((uint64_t)v82, v43);
        __swift_project_boxed_opaque_existential_0(&v83, v84);
        v44 = v62;
        sub_1D26CD578();
        v45 = v66;
        v46 = v65;
        v47 = v67;
        (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v65, *MEMORY[0x1E0CEFC20], v67);
        v48 = sub_1D26CD17C();
        (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v47);
        (*(void (**)(char *, uint64_t))(v63 + 8))(v44, v64);
        *(_QWORD *)&v79 = v48;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
        sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
        v49 = sub_1D26CD8E4();
        v51 = v50;
        swift_bridgeObjectRelease();
        *(_QWORD *)(v43 + 40) = v49;
        *(_QWORD *)(v43 + 48) = v51;
        type metadata accessor for WidgetEntry.WidgetEntryError(0);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        v54 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
        v55 = v60;
        v54(v60, v32, v41);
        v56 = (uint64_t)v61;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v61, v55, v41);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v56, 0, 1, v41);
        v57 = v74 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_cachedViewableEntry;
        swift_beginAccess();
        sub_1D25AB51C(v56, v57, (uint64_t *)&unk_1ED96BF50);
        swift_endAccess();
        v54((char *)v43, (uint64_t)v55, v41);
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C128);
      swift_storeEnumTagMultiPayload();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v82);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v26, v19, v20);
    sub_1D26831B4((uint64_t)&v76);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v26, v20);
    if (v77 == 1)
    {
      sub_1D253703C((uint64_t)&v76, &qword_1ED96C7F0);
      v79 = 0u;
      v80 = 0u;
      v81 = 0;
    }
    else
    {
      sub_1D25384CC((uint64_t)&v76, (uint64_t)&v79, &qword_1ED96BF40);
      sub_1D253703C((uint64_t)&v78, &qword_1ED96BF40);
    }
    a5 = v71;
    if (*((_QWORD *)&v80 + 1))
      goto LABEL_4;
  }
  sub_1D253703C((uint64_t)&v79, &qword_1ED96BF40);
  v38 = v59;
  if (v28((char *)v59, 1, v20) == 1)
  {
    v39 = v74 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_configuredDate;
    swift_beginAccess();
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v21 + 16))(a5, v39, v20);
LABEL_17:
    type metadata accessor for WidgetEntry.WidgetEntryError(0);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C128);
    swift_storeEnumTagMultiPayload();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v83);
  }
  v52 = v38;
  v53 = v68;
  sub_1D2537078(v52, v68, &qword_1ED96B1E0);
  result = v28((char *)v53, 1, v20);
  if ((_DWORD)result != 1)
  {
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(v21 + 32))(a5, v53, v20);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2682720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  _BYTE v16[24];
  uint64_t v17;
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v5);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  sub_1D2537078(a1, (uint64_t)v7, &qword_1ED96B1E0);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_1D253703C((uint64_t)v7, &qword_1ED96B1E0);
    v14 = v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
    swift_beginAccess();
    sub_1D2537078(v14, a2, &qword_1ED96BF40);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(v11, v7, v8);
    sub_1D26831B4((uint64_t)v16);
    (*(void (**)(_BYTE *, uint64_t))(v9 + 8))(v11, v8);
    if (v17 == 1)
    {
      sub_1D253703C((uint64_t)v16, &qword_1ED96C7F0);
      *(_QWORD *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
    else
    {
      sub_1D25384CC((uint64_t)v16, a2, &qword_1ED96BF40);
      sub_1D253703C((uint64_t)&v18, &qword_1ED96BF40);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  return swift_release();
}

uint64_t sub_1D2682908(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  id v11;
  id v12;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor;
  v7 = *(void **)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor);
  if (a1)
  {
    if (!v7)
    {
LABEL_6:
      *(_QWORD *)(v2 + v6) = a1;
      v11 = a1;

      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
      swift_release();
      v12 = v11;
      sub_1D25CCAE8(a1);

      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
      sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
      return sub_1D26CC1A4();
    }
    sub_1D2539514(0, (unint64_t *)&unk_1ED96E0F8);
    v8 = v7;
    v9 = a1;
    v10 = sub_1D26CDECC();

    if ((v10 & 1) == 0)
    {
      v7 = *(void **)(v2 + v6);
      goto LABEL_6;
    }
  }
  else if (v7)
  {
    goto LABEL_6;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1D2682A6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t result;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t);
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  void *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  _QWORD v46[2];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  _BYTE v57[40];
  _QWORD v58[3];
  uint64_t v59;
  uint64_t v60;
  char v61[8];
  char v62[8];

  v3 = v2;
  v54 = sub_1D26CC00C();
  v53 = *(_QWORD *)(v54 - 8);
  MEMORY[0x1E0C80A78](v54);
  v52 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CB9DC();
  v56 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v55 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v51 = (uint64_t)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v46 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v46 - v18;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock)
                                                       + 16));
  sub_1D26831B4((uint64_t)v58);
  if (v59 == 1)
  {
    result = sub_1D253703C((uint64_t)v58, &qword_1ED96C7F0);
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  v48 = a1;
  sub_1D25384CC((uint64_t)v58, (uint64_t)v62, &qword_1ED96BF40);
  sub_1D25384CC((uint64_t)&v60, (uint64_t)v61, &qword_1ED96BF40);
  sub_1D2537078((uint64_t)v62, (uint64_t)v58, &qword_1ED96BF40);
  if (v59)
  {
    __swift_project_boxed_opaque_existential_0(v58, v59);
    v3 = v2;
    sub_1D26CD3E0();
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
    v21(v19, 0, 1, v7);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  }
  else
  {
    sub_1D253703C((uint64_t)v58, &qword_1ED96BF40);
    v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
    v21(v19, 1, 1, v7);
  }
  v50 = a2;
  v49 = v3;
  v22 = v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry;
  swift_beginAccess();
  v47 = v22;
  sub_1D2537078(v22, (uint64_t)v58, &qword_1ED96BF40);
  v23 = v59;
  if (v59)
  {
    v24 = __swift_project_boxed_opaque_existential_0(v58, v59);
    v46[1] = v46;
    v25 = *(_QWORD *)(v23 - 8);
    MEMORY[0x1E0C80A78](v24);
    v27 = (char *)v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v25 + 16))(v27);
    sub_1D253703C((uint64_t)v58, &qword_1ED96BF40);
    sub_1D26CD3E0();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v23);
    v21(v17, 0, 1, v7);
  }
  else
  {
    sub_1D253703C((uint64_t)v58, &qword_1ED96BF40);
    v21(v17, 1, 1, v7);
  }
  v28 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1D2537078((uint64_t)v19, (uint64_t)v11, &qword_1ED96B1E0);
  sub_1D2537078((uint64_t)v17, v28, &qword_1ED96B1E0);
  v29 = v56;
  v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  if (v30((uint64_t)v11, 1, v7) != 1)
  {
    v34 = v51;
    sub_1D2537078((uint64_t)v11, v51, &qword_1ED96B1E0);
    v35 = v30(v28, 1, v7);
    v32 = v50;
    v33 = v49;
    if (v35 != 1)
    {
      v36 = v34;
      v37 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v55, v28, v7);
      sub_1D25369B0((unint64_t *)&qword_1ED96B1D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v38 = sub_1D26CD908();
      v39 = *(void (**)(char *, uint64_t))(v29 + 8);
      v39(v37, v7);
      sub_1D253703C((uint64_t)v17, &qword_1ED96B1E0);
      sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
      v40 = v36;
      v32 = v50;
      v39((char *)v40, v7);
      sub_1D253703C((uint64_t)v11, &qword_1ED96B1E0);
      if ((v38 & 1) != 0)
        goto LABEL_17;
LABEL_16:
      sub_1D26CDE24();
      sub_1D2539514(0, (unint64_t *)&qword_1ED96C0A0);
      v41 = (void *)sub_1D26CDF14();
      v42 = v52;
      sub_1D26CC000();
      sub_1D26CBFDC();

      (*(void (**)(char *, uint64_t))(v53 + 8))(v42, v54);
      sub_1D2537078((uint64_t)v62, (uint64_t)v58, &qword_1ED96BF40);
      v43 = v47;
      sub_1D2537078(v47, (uint64_t)v57, &qword_1ED96BF40);
      swift_beginAccess();
      sub_1D26106B4((uint64_t)v58, v43, &qword_1ED96BF40);
      swift_endAccess();
      sub_1D2680118((uint64_t)v57);
      sub_1D253703C((uint64_t)v58, &qword_1ED96BF40);
      sub_1D253703C((uint64_t)v57, &qword_1ED96BF40);
      v44 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v55, v48, v7);
      v45 = v33 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_configuredDate;
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v29 + 40))(v45, v44, v7);
      swift_endAccess();
      goto LABEL_17;
    }
    sub_1D253703C((uint64_t)v17, &qword_1ED96B1E0);
    sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v34, v7);
LABEL_14:
    sub_1D253703C((uint64_t)v11, &qword_1ED96B1E8);
    goto LABEL_16;
  }
  sub_1D253703C((uint64_t)v17, &qword_1ED96B1E0);
  sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
  v31 = v30(v28, 1, v7);
  v32 = v50;
  v33 = v49;
  if (v31 != 1)
    goto LABEL_14;
  sub_1D253703C((uint64_t)v11, &qword_1ED96B1E0);
LABEL_17:
  sub_1D253703C((uint64_t)v62, &qword_1ED96BF40);
  return sub_1D25384CC((uint64_t)v61, v32, &qword_1ED96BF40);
}

uint64_t sub_1D26831B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD v16[3];
  _BYTE v17[40];
  _BYTE v18[24];
  uint64_t v19;
  _QWORD v20[3];
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock)
                                                       + 16));
  v7 = v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1D2537078(v7, (uint64_t)&v22, &qword_1ED96BF68);
  if (v23)
  {
    sub_1D2538F38(&v22, (uint64_t)v24);
    __swift_project_boxed_opaque_existential_0(v24, v25);
    sub_1D26CD59C();
    sub_1D25384CC((uint64_t)v18, (uint64_t)v20, &qword_1ED96BF40);
    sub_1D2537078((uint64_t)&v22, (uint64_t)v18, &qword_1ED96BF40);
    v8 = v19;
    sub_1D253703C((uint64_t)v18, &qword_1ED96BF40);
    if (v8)
      goto LABEL_6;
    sub_1D2537078((uint64_t)v20, (uint64_t)v18, &qword_1ED96BF40);
    v9 = v19;
    sub_1D253703C((uint64_t)v18, &qword_1ED96BF40);
    if (!v9)
      goto LABEL_6;
    v16[2] = v26;
    result = (uint64_t)__swift_project_boxed_opaque_existential_0(v24, v25);
    v16[1] = result;
    v11 = v21;
    if (v21)
    {
      v12 = __swift_project_boxed_opaque_existential_0(v20, v21);
      v13 = *(_QWORD *)(v11 - 8);
      MEMORY[0x1E0C80A78](v12);
      v15 = (char *)v16 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v13 + 16))(v15);
      sub_1D26CD3E0();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
      sub_1D26CD59C();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_1D253703C((uint64_t)&v22, &qword_1ED96BF40);
      sub_1D25384CC((uint64_t)v18, (uint64_t)&v22, &qword_1ED96BF40);
      sub_1D25AB51C((uint64_t)v17, (uint64_t)v20, &qword_1ED96BF40);
LABEL_6:
      sub_1D25384CC((uint64_t)&v22, a1, &qword_1ED96BF40);
      sub_1D2537078((uint64_t)v20, a1 + 40, &qword_1ED96BF40);
      sub_1D253703C((uint64_t)v20, &qword_1ED96BF40);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    }
    __break(1u);
  }
  else
  {
    result = sub_1D253703C((uint64_t)&v22, &qword_1ED96BF68);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
    *(_QWORD *)(a1 + 24) = 1;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
  }
  return result;
}

id WidgetEntry.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WidgetEntry.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WidgetEntry.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetEntry(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D26836D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content;
  swift_beginAccess();
  sub_1D2537078(v6, a1, &qword_1ED96BF68);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1D2683768(uint64_t a1)
{
  return sub_1D2680908(a1);
}

void (*sub_1D2683788(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1D2680DA4(v2);
  return sub_1D2591674;
}

uint64_t sub_1D26837D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = v3 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1D2537078(v6, a1, &qword_1ED96B1E0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1D2683864(uint64_t a1)
{
  return sub_1D26810F4(a1);
}

void (*sub_1D2683884(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1D268121C(v2);
  return sub_1D2591674;
}

uint64_t sub_1D26838CC()
{
  return sub_1D26813C0();
}

uint64_t sub_1D26838EC(uint64_t a1, uint64_t a2)
{
  sub_1D2683BE0(a1, a2);
  return swift_bridgeObjectRelease();
}

void (*sub_1D2683914(uint64_t **a1))(_QWORD *)
{
  uint64_t *v2;

  v2 = (uint64_t *)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t)sub_1D26814B8(v2);
  return sub_1D2591674;
}

uint64_t sub_1D268395C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D26839C4()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *v0;
  v2 = (_QWORD *)(*v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorObserver);
  v3 = v2[3];
  v4 = v2[4];
  __swift_project_boxed_opaque_existential_0(v2, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v1, v3, v4);
}

unint64_t WidgetEntry.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[4];
  unint64_t v9;
  unint64_t v10;

  v1 = sub_1D26CD488();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = 0;
  v8[2] = 0xE000000000000000;
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  v9 = 0xD000000000000011;
  v10 = 0x80000001D26E50D0;
  WidgetEntryKey.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v6 = v0 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v1);
  sub_1D25369B0(&qword_1ED962050, v2, MEMORY[0x1E0CF0468]);
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
  return v9;
}

uint64_t sub_1D2683BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  _QWORD *v7;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  v7 = (_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_contentLoadError);
  *v7 = a1;
  v7[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

unint64_t sub_1D2683C60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96C080;
  if (!qword_1ED96C080)
  {
    v1 = sub_1D2539514(255, (unint64_t *)&unk_1ED96C090);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB2358], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96C080);
  }
  return result;
}

uint64_t type metadata accessor for WidgetEntry(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96B4F0);
}

uint64_t sub_1D2683CCC()
{
  return sub_1D25369B0(&qword_1EFC835E8, type metadata accessor for WidgetEntry.WidgetEntryError, (uint64_t)&protocol conformance descriptor for WidgetEntry.WidgetEntryError);
}

uint64_t type metadata accessor for WidgetEntry.WidgetEntryError(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96B470);
}

uint64_t sub_1D2683D14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D26807C0(a1, &OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry, &qword_1ED96BF40, a2);
}

uint64_t sub_1D2683D38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, &qword_1ED96BF40, (uint64_t (*)(_BYTE *))sub_1D26805C0);
}

uint64_t sub_1D2683D4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D26807C0(a1, &OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content, &qword_1ED96BF68, a2);
}

uint64_t sub_1D2683D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_2Tm(a1, a2, a3, a4, &qword_1ED96BF68, (uint64_t (*)(_BYTE *))sub_1D2680908);
}

uint64_t keypath_set_2Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(_BYTE *))
{
  _BYTE v8[40];

  sub_1D2537078(a1, (uint64_t)v8, a5);
  return a6(v8);
}

uint64_t sub_1D2683DCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D26813C0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D2683DF8()
{
  return type metadata accessor for WidgetEntry(0);
}

void sub_1D2683E00()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_1D26CD488();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WidgetEntryKey();
    if (v1 <= 0x3F)
    {
      sub_1D2568174(319, &qword_1ED96BF60, (void (*)(uint64_t))MEMORY[0x1E0CF0738]);
      if (v2 <= 0x3F)
      {
        sub_1D26CB9DC();
        if (v3 <= 0x3F)
        {
          sub_1D2568174(319, (unint64_t *)&qword_1ED96F0B0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for WidgetEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetEntry.protectionType.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of WidgetEntry.protectionType.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of WidgetEntry.protectionType.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of WidgetEntry.cachedViewableEntry.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of WidgetEntry.currentEntry.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of WidgetEntry.environmentProvider.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of WidgetEntry.content.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of WidgetEntry.content.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of WidgetEntry.content.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadErrorDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadErrorDate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadErrorDate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadError.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x218))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadError.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x220))();
}

uint64_t dispatch thunk of WidgetEntry.contentLoadError.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x228))();
}

uint64_t dispatch thunk of WidgetEntry.advanceToEntry(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of WidgetEntry.descriptor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of WidgetEntry.__allocating_init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 600))();
}

uint64_t dispatch thunk of WidgetEntry.invalidate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of WidgetEntry.currentViewableEntry(with:overrideDate:ignoringEnvironmentKeys:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of WidgetEntry.timelineEntry(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x270))();
}

uint64_t dispatch thunk of WidgetEntry._updateDescriptor(descriptor:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x278))();
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetEntry.WidgetEntryError(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1D2684204 + 4 * byte_1D26DAB80[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void destroy for WidgetEntry.WidgetEntryError(uint64_t a1)
{
  uint64_t v2;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      goto LABEL_8;
    case 1u:
      if (*(_QWORD *)(a1 + 24))
        __swift_destroy_boxed_opaque_existential_1(a1);

      break;
    case 2u:
      v2 = sub_1D26CB9DC();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      break;
    case 3u:
      if (*(_QWORD *)(a1 + 24))
        __swift_destroy_boxed_opaque_existential_1(a1);
LABEL_8:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

void initializeWithCopy for WidgetEntry.WidgetEntryError()
{
  char *v0;

  v0 = (char *)sub_1D2684424 + 4 * byte_1D26DAB88[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1D2684424()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for WidgetEntry.WidgetEntryError(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1D25340E4(result, type metadata accessor for WidgetEntry.WidgetEntryError);
    v2 = (char *)&loc_1D268458C + 4 * byte_1D26DAB8C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *initializeWithTake for WidgetEntry.WidgetEntryError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    v6 = sub_1D26CB9DC();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for WidgetEntry.WidgetEntryError(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1D25340E4((uint64_t)a1, type metadata accessor for WidgetEntry.WidgetEntryError);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      v6 = sub_1D26CB9DC();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D26847E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB9DC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t WidgetUpdateTimer.publisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B240);
  sub_1D2536488(&qword_1ED96B238, &qword_1ED96B240, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t WidgetUpdateTimer.__allocating_init(quantum:queue:)(uint64_t a1, double a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  WidgetUpdateTimer.init(quantum:queue:)(a1, a2);
  return v4;
}

uint64_t WidgetUpdateTimer.init(quantum:queue:)(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  _QWORD v13[6];

  v5 = sub_1D26CDD88();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CDD40();
  MEMORY[0x1E0C80A78](v9);
  v10 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B240);
  swift_allocObject();
  *(_QWORD *)(v2 + 16) = sub_1D26CC150();
  result = sub_1D26CB91C();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer) = 0;
  if (a2 < 0.0 || (*(_QWORD *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    __break(1u);
  }
  else
  {
    *(double *)(v2 + 24) = a2;
    v13[4] = sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
    v13[2] = sub_1D26CE508();
    v13[3] = a1;
    v13[1] = v12;
    sub_1D26CD0BC();
    v13[5] = MEMORY[0x1E0DEE9D8];
    sub_1D25369B0((unint64_t *)&qword_1ED96EE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
    sub_1D2536488((unint64_t *)&qword_1ED96EE28, &qword_1ED96EE20, MEMORY[0x1E0DEAF38]);
    sub_1D26CDFE0();
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF8D8], v5);
    *(_QWORD *)(v2 + 32) = sub_1D26CDDB8();
    return v2;
  }
  return result;
}

uint64_t WidgetUpdateTimer.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[4];
  uint64_t v14;
  uint64_t v15;

  v1 = sub_1D26CB9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = 0;
  v13[2] = 0xE000000000000000;
  sub_1D26CE0A0();
  v5 = sub_1D26CE508();
  v7 = v6;
  swift_bridgeObjectRelease();
  v14 = v5;
  v15 = v7;
  sub_1D26CDA04();
  v8 = v0 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer_scheduledDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
  if (qword_1ED96C7C0 != -1)
    swift_once();
  v9 = (id)qword_1ED96C848;
  v10 = (void *)sub_1D26CB940();
  v11 = objc_msgSend(v9, sel_stringFromDate_, v10);

  sub_1D26CD938();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return v14;
}

uint64_t WidgetUpdateTimer.description.getter()
{
  return sub_1D26CE508();
}

uint64_t sub_1D2684D3C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD v32[2];
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD aBlock[7];

  v1 = v0;
  v37 = *v0;
  v2 = sub_1D26CD068();
  v44 = *(_QWORD *)(v2 - 8);
  v45 = v2;
  MEMORY[0x1E0C80A78](v2);
  v43 = (_QWORD *)((char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1D26CD11C();
  v41 = *(_QWORD *)(v4 - 8);
  v42 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CD074();
  v38 = *(_QWORD *)(v6 - 8);
  v39 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CD0C8();
  v35 = *(_QWORD *)(v9 - 8);
  v36 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D26CDDD0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D26CD128();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (_QWORD *)((char *)v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = (void *)v1[4];
  *v19 = v20;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v17 + 104))(v19, *MEMORY[0x1E0DEF740], v16);
  v34 = v20;
  LOBYTE(v20) = sub_1D26CD134();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v17 + 8))(v19, v16);
  if ((v20 & 1) != 0)
  {
    v22 = OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer;
    if (*(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer))
    {
      v23 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer);
    }
    else
    {
      v33 = v1[2];
      v32[1] = sub_1D2539514(0, (unint64_t *)&unk_1ED96C018);
      aBlock[0] = MEMORY[0x1E0DEE9D8];
      sub_1D25369B0(&qword_1ED96C010, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF938], MEMORY[0x1E0DEF948]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF88);
      sub_1D2536488((unint64_t *)&unk_1ED96BF90, &qword_1ED96BF88, MEMORY[0x1E0DEAF38]);
      sub_1D26CDFE0();
      v23 = sub_1D26CDDDC();
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
      ObjectType = swift_getObjectType();
      v25 = swift_allocObject();
      v26 = v37;
      *(_QWORD *)(v25 + 16) = v33;
      *(_QWORD *)(v25 + 24) = v26;
      aBlock[4] = sub_1D26864DC;
      aBlock[5] = v25;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1D25351AC;
      aBlock[3] = &block_descriptor_6_1;
      v27 = _Block_copy(aBlock);
      swift_retain();
      _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
      sub_1D2685460();
      sub_1D26CDDE8();
      _Block_release(v27);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v39);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v36);
      swift_release();
      v28 = v40;
      sub_1D26CD104();
      v30 = v43;
      v29 = v44;
      *v43 = 0;
      v31 = v45;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v29 + 104))(v30, *MEMORY[0x1E0DEF480], v45);
      MEMORY[0x1D8239638](v28, v30, ObjectType, INFINITY);
      (*(void (**)(_QWORD *, uint64_t))(v29 + 8))(v30, v31);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v42);
      sub_1D26CDE00();
      *(_QWORD *)((char *)v1 + v22) = v23;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
    }
    swift_unknownObjectRetain();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D268516C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = sub_1D26CB9DC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v24 - v7;
  sub_1D26CB9D0();
  if (qword_1ED96C188 != -1)
    swift_once();
  v9 = sub_1D26CC09C();
  __swift_project_value_buffer(v9, (uint64_t)qword_1ED977F68);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  v10 = sub_1D26CC084();
  v11 = sub_1D26CDCE0();
  if (os_log_type_enabled(v10, v11))
  {
    v26 = a1;
    v12 = swift_slowAlloc();
    v25 = swift_slowAlloc();
    v28 = v25;
    *(_DWORD *)v12 = 136446466;
    v13 = sub_1D26CE508();
    v27 = sub_1D2537880(v13, v14, &v28);
    v24[1] = &v28;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v24[0] = v12 + 14;
    if (qword_1ED96C7C0 != -1)
      swift_once();
    v15 = (id)qword_1ED96C848;
    v16 = (void *)sub_1D26CB940();
    v17 = objc_msgSend(v15, sel_stringFromDate_, v16, v24[0]);

    v18 = sub_1D26CD938();
    v20 = v19;

    v27 = sub_1D2537880(v18, v20, &v28);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v21(v6, v2);
    _os_log_impl(&dword_1D2531000, v10, v11, "%{public}s update: %s, privacy: .public)", (uint8_t *)v12, 0x16u);
    v22 = v25;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v22, -1, -1);
    MEMORY[0x1D823A5E0](v12, -1, -1);

  }
  else
  {
    v21 = *(void (**)(char *, uint64_t))(v3 + 8);
    v21(v6, v2);

  }
  sub_1D26CC138();
  return ((uint64_t (*)(char *, uint64_t))v21)(v8, v2);
}

uint64_t sub_1D2685460()
{
  sub_1D26CD074();
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
  return sub_1D26CDFE0();
}

uint64_t sub_1D2685514()
{
  uint64_t result;
  double v1;
  double v2;
  double v3;

  result = sub_1D26CB994();
  if (v1 > 9.22337204e18)
    v1 = 9.22337204e18;
  if (v1 >= 9.22337204e18)
  {
    result = 0x7FFFFFFFFFFFFFFFLL;
LABEL_9:
    v3 = (v1 - (double)result) * 1000000000.0;
    if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
    {
      if (v3 > -9.22337204e18)
      {
        if (v3 < 9.22337204e18)
          return sub_1D26CD110();
        goto LABEL_15;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v2 = floor(v1);
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v2 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v2 < 9.22337204e18)
  {
    result = (uint64_t)v2;
    goto LABEL_9;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_1D2685600(uint64_t *a1@<X8>)
{
  uint64_t v1;
  double v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(double *)(v1 + 24);
  if (v3 >= 9.22337204e18)
  {
    v4 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_6;
  }
  if ((~*(_QWORD *)&v3 & 0x7FF0000000000000) != 0)
  {
    if (v3 > -9.22337204e18)
    {
      v4 = (uint64_t)v3;
LABEL_6:
      *a1 = v4;
      v5 = *MEMORY[0x1E0DEF4A0];
      v6 = sub_1D26CD068();
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(a1, v5, v6);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1D2685694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t result;
  long double v16;
  char v17;
  long double v18;
  uint64_t v19;

  v5 = sub_1D26CB9DC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CD128();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = *(void **)(v2 + 32);
  *v12 = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DEF740], v9);
  v14 = v13;
  LOBYTE(v13) = sub_1D26CD134();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) != 0)
  {
    v16 = *(double *)(v2 + 24);
    if (v16 > 0.0
      && (sub_1D26CB91C(),
          v17 = sub_1D26CB958(),
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5),
          (v17 & 1) != 0))
    {
      sub_1D26CB8F8();
      fmod(v18, v16);
      return sub_1D26CB8EC();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a1, v5);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2685810(uint64_t a1)
{
  uint64_t **v1;
  uint64_t **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t **v18;
  uint64_t *v19;
  uint64_t *v20;
  char *v21;
  uint64_t result;
  uint64_t v23;
  NSObject *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t ObjectType;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[3];

  v2 = v1;
  v51 = *v1;
  v4 = sub_1D26CD068();
  v56 = *(_QWORD *)(v4 - 8);
  v57 = v4;
  MEMORY[0x1E0C80A78](v4);
  v55 = (uint64_t *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1D26CD11C();
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v48 - v13;
  v15 = sub_1D26CD128();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (uint64_t **)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = v2[4];
  *v18 = v19;
  (*(void (**)(uint64_t **, _QWORD, uint64_t))(v16 + 104))(v18, *MEMORY[0x1E0DEF740], v15);
  v20 = v19;
  LOBYTE(v19) = sub_1D26CD134();
  (*(void (**)(uint64_t **, uint64_t))(v16 + 8))(v18, v15);
  if ((v19 & 1) == 0)
  {
    __break(1u);
    goto LABEL_19;
  }
  v21 = (char *)v2 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer_scheduledDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 24))(v21, a1, v8);
  swift_endAccess();
  sub_1D26CB91C();
  LOBYTE(v21) = sub_1D26CB958();
  v16 = *(_QWORD *)(v9 + 8);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v14, v8);
  if ((v21 & 1) != 0)
  {
    if (qword_1ED96C188 == -1)
    {
LABEL_4:
      v23 = sub_1D26CC09C();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED977F68);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
      swift_retain_n();
      v24 = sub_1D26CC084();
      v25 = sub_1D26CDCE0();
      if (os_log_type_enabled(v24, (os_log_type_t)v25))
      {
        v50 = v25;
        v26 = swift_slowAlloc();
        v49 = swift_slowAlloc();
        v59[0] = v49;
        *(_DWORD *)v26 = 136446466;
        v27 = sub_1D26CE508();
        v58 = sub_1D2537880(v27, v28, v59);
        v51 = v59;
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v26 + 12) = 2080;
        v48 = v26 + 14;
        if (qword_1ED96C7C0 != -1)
          swift_once();
        v29 = (id)qword_1ED96C848;
        v30 = (void *)sub_1D26CB940();
        v31 = objc_msgSend(v29, sel_stringFromDate_, v30, v48);

        v32 = sub_1D26CD938();
        v34 = v33;

        v58 = sub_1D2537880(v32, v34, v59);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v16)(v12, v8);
        _os_log_impl(&dword_1D2531000, v24, (os_log_type_t)v50, "%{public}s next update: %s, privacy: .public)", (uint8_t *)v26, 0x16u);
        v35 = v49;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v35, -1, -1);
        MEMORY[0x1D823A5E0](v26, -1, -1);
      }
      else
      {
        swift_release_n();
        ((void (*)(char *, uint64_t))v16)(v12, v8);
      }

      v45 = v52;
      sub_1D2685514();
      sub_1D2684D3C();
      ObjectType = swift_getObjectType();
      v47 = v55;
      sub_1D2685600(v55);
      MEMORY[0x1D8239638](v45, v47, ObjectType, INFINITY);
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t *, uint64_t))(v56 + 8))(v47, v57);
      return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v45, v54);
    }
LABEL_19:
    swift_once();
    goto LABEL_4;
  }
  v36 = OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer;
  if (*(uint64_t **)((char *)v2 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer__timer))
  {
    v37 = qword_1ED96C188;
    swift_unknownObjectRetain();
    if (v37 != -1)
      swift_once();
    v38 = sub_1D26CC09C();
    __swift_project_value_buffer(v38, (uint64_t)qword_1ED977F68);
    swift_retain_n();
    v39 = sub_1D26CC084();
    v40 = sub_1D26CDCE0();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v59[0] = v42;
      *(_DWORD *)v41 = 136446210;
      v43 = sub_1D26CE508();
      v58 = sub_1D2537880(v43, v44, v59);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v39, v40, "%{public}s canceled", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v42, -1, -1);
      MEMORY[0x1D823A5E0](v41, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_getObjectType();
    sub_1D26CDDF4();
    swift_unknownObjectRelease();
    *(uint64_t **)((char *)v2 + v36) = 0;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t WidgetUpdateTimer.scheduleUpdate(on:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];

  v3 = sub_1D26CD074();
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CD0C8();
  v17 = *(_QWORD *)(v6 - 8);
  v18 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CB9DC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v16[1] = *(_QWORD *)(v1 + 32);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v9);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v13 + v12, (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  aBlock[4] = sub_1D26861EC;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D25351AC;
  aBlock[3] = &block_descriptor_15;
  v14 = _Block_copy(aBlock);
  swift_retain();
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  MEMORY[0x1D823956C](0, v8, v5, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v18);
  return swift_release();
}

uint64_t sub_1D26860E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2685694(a2, (uint64_t)v6);
  sub_1D2685810((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1D2686178()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1D26CB9DC();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D26861EC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D26CB9DC() - 8) + 80);
  return sub_1D26860E8(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

uint64_t WidgetUpdateTimer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer_scheduledDate;
  v2 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t WidgetUpdateTimer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit17WidgetUpdateTimer_scheduledDate;
  v2 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D26862F0()
{
  return WidgetUpdateTimer.description.getter();
}

uint64_t sub_1D2686310()
{
  return WidgetUpdateTimer.debugDescription.getter();
}

uint64_t sub_1D2686330()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B240);
  sub_1D2536488(&qword_1ED96B238, &qword_1ED96B240, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t sub_1D26863A0(uint64_t a1)
{
  return WidgetUpdateTimer.scheduleUpdate(on:)(a1);
}

uint64_t sub_1D26863C0()
{
  return type metadata accessor for WidgetUpdateTimer();
}

uint64_t type metadata accessor for WidgetUpdateTimer()
{
  uint64_t result;

  result = qword_1ED96B570;
  if (!qword_1ED96B570)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2686404()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB9DC();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for WidgetUpdateTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetUpdateTimer.__allocating_init(quantum:queue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1D26864B8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D26864DC()
{
  uint64_t v0;

  return sub_1D268516C(*(_QWORD *)(v0 + 16));
}

uint64_t ReloadTaskPair.__allocating_init()()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_QWORD *)(result + 24) = 0;
  return result;
}

uint64_t ReloadTaskPair.__allocating_init(currentTask:queuedTask:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t ReloadTaskPair.init(currentTask:queuedTask:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  swift_release();
  return v2;
}

uint64_t sub_1D2686584()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
  {
    if (*(_QWORD *)(v0 + 24))
    {
      swift_retain();
      swift_retain();
      sub_1D26CE0A0();
      sub_1D26CDA04();
      type metadata accessor for ReloadTask();
    }
    swift_retain();
    sub_1D26CDA04();
    type metadata accessor for ReloadTask();
  }
  return 0x6B736174206F6E3CLL;
}

uint64_t sub_1D2686738(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  if (*(_QWORD *)(v2 + 16))
  {
    swift_retain();
    sub_1D25CDCF8(a1, a2);
    swift_release();
  }
  if (*(_QWORD *)(v2 + 24))
  {
    swift_retain();
    sub_1D25CDCF8(a1, a2);
    swift_release();
  }
  *(_QWORD *)(v2 + 16) = 0;
  swift_release();
  *(_QWORD *)(v2 + 24) = 0;
  return swift_release();
}

uint64_t ReloadTaskPair.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t ReloadTaskPair.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2686810()
{
  return sub_1D2686584();
}

uint64_t sub_1D2686830()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1D2686838()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1D2686840()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for ReloadTaskPair()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for ReloadTaskPair()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReloadTaskPair.__allocating_init(currentTask:queuedTask:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ReloadTaskPair.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_1D26868AC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1D258430C(0, v1, 0);
    v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8) - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      swift_getKeyPath();
      swift_getAtKeyPath();
      swift_release();
      v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258430C(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v2 = v13;
      }
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1D258430C(v7 > 1, v8 + 1, 1);
        v2 = v13;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      v9 = v2 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v11;
      *(_QWORD *)(v9 + 40) = v12;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D26869F0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1D26CE3D0();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1D26CE3D0() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

BOOL sub_1D2686AB4(_BOOL8 result, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t i;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  v3 = result;
  if (*(_BYTE *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 33; ; ++i)
  {
    v5 = i - 31;
    if (__OFADD__(i - 32, 1))
      break;
    v6 = *(unsigned __int8 *)(a2 + i);
    result = v6 == v3;
    if (v6 == v3 || v5 == v2)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2686B14(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  char v7;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unint64_t v12;
  id v13;
  char v14;

  if (a2 >> 62)
    goto LABEL_20;
  v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v3; v3 = sub_1D26CE1F0())
  {
    v4 = a2 & 0xC000000000000001;
    if ((a2 & 0xC000000000000001) == 0)
    {
      v5 = *(id *)(a2 + 32);
      goto LABEL_5;
    }
    while (1)
    {
      v5 = (id)MEMORY[0x1D8239890](0, a2);
LABEL_5:
      v6 = v5;
      sub_1D26CDE54();
      v7 = sub_1D26CDECC();

      if ((v7 & 1) != 0)
      {
LABEL_6:
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v3 == 1)
        goto LABEL_18;
      if (v4)
        break;
      v4 = 5;
      while (1)
      {
        v12 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
          break;
        v13 = *(id *)(a2 + 8 * v4);
        v14 = sub_1D26CDECC();

        if ((v14 & 1) != 0)
          goto LABEL_6;
        ++v4;
        if (v12 == v3)
          goto LABEL_18;
      }
      __break(1u);
    }
    v9 = 1;
    while (1)
    {
      MEMORY[0x1D8239890](v9, a2);
      v10 = v9 + 1;
      if (__OFADD__(v9, 1))
        break;
      v11 = sub_1D26CDECC();
      swift_unknownObjectRelease();
      if ((v11 & 1) != 0)
        goto LABEL_6;
      ++v9;
      if (v10 == v3)
        goto LABEL_18;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1D2686C88(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  BOOL v5;
  char v6;
  uint64_t result;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *i;
  BOOL v11;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (v6 = sub_1D26CE3D0(), result = 0, (v6 & 1) != 0))
  {
    v8 = v2 - 1;
    if (!v8)
      return 1;
    v9 = a2 + 7;
    for (i = a1 + 7; ; i += 2)
    {
      v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1D26CE3D0() & 1) == 0)
        break;
      v9 += 2;
      if (!--v8)
        return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1D2686D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void (*v18)(char *, uint64_t);
  BOOL v20;
  uint64_t v22;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v22 - v9;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11 == *(_QWORD *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      v17 = 1;
    }
    else
    {
      v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v22 = *(_QWORD *)(v8 + 72);
      v23 = v8;
      v13 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      v14 = v11 - 1;
      do
      {
        v15 = a1;
        v13(v10, a1 + v12, v4);
        v16 = a2;
        v13(v7, a2 + v12, v4);
        sub_1D2536488((unint64_t *)&qword_1ED9632F0, &qword_1ED9632F8, MEMORY[0x1E0D0F980]);
        v17 = sub_1D26CD908();
        v18 = *(void (**)(char *, uint64_t))(v23 + 8);
        v18(v7, v4);
        v18(v10, v4);
        v20 = v14-- != 0;
        if ((v17 & 1) == 0)
          break;
        v12 += v22;
        a2 = v16;
        a1 = v15;
      }
      while (v20);
    }
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

id sub_1D2686ED4(unint64_t a1, unint64_t a2)
{
  return sub_1D2539560(a1, a2, (uint64_t)&qword_1ED963230);
}

unint64_t sub_1D2686EE8(uint64_t a1)
{
  unint64_t result;

  result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      result = 0xD00000000000001CLL;
      break;
    case 2:
      result = 0xD000000000000024;
      break;
    case 3:
      result = 0xD000000000000023;
      break;
    case 4:
      result = 0xD000000000000017;
      break;
    case 5:
      result = 0xD000000000000027;
      break;
    case 6:
      return result;
    default:
      result = 0xD00000000000002BLL;
      break;
  }
  return result;
}

unint64_t sub_1D2686F8C()
{
  uint64_t *v0;

  return sub_1D2686EE8(*v0);
}

uint64_t sub_1D2686F94()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for NominatedContainerPermissions();
  swift_initStackObject();
  v0 = *(_QWORD *)(sub_1D258BC4C() + 16);
  swift_bridgeObjectRetain();
  result = swift_release();
  qword_1ED962478 = v0;
  return result;
}

uint64_t sub_1D2686FEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  result = sub_1D26CBC88();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D2687020()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  return sub_1D26CBC94();
}

uint64_t sub_1D268706C(void *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _DWORD *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  uint64_t *v52;
  void *v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  void *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned int (*v66)(char *, uint64_t, uint64_t);
  id v67;
  id v68;
  id v69;
  void *v70;
  uint64_t v71;
  id v72;
  id v73;
  id v74;
  const __CFURL *v75;
  __CFBundle *v76;
  CFArrayRef v77;
  CFArrayRef v78;
  uint64_t v79;
  id v80;
  id v81;
  __CFBundle *v82;
  __CFString *v83;
  CFTypeRef v84;
  char v85;
  uint64_t **v86;
  uint64_t *v87;
  id v88;
  _QWORD *v89;
  uint64_t v90;
  _BYTE *v91;
  NSObject *v92;
  NSObject *v93;
  int v94;
  _BOOL4 v95;
  uint8_t *v96;
  uint64_t v97;
  id v98;
  void *v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  id v103;
  _QWORD *v104;
  _QWORD *v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __CFBundle *v111;
  __CFString *v112;
  CFTypeRef v113;
  uint64_t v114;
  _QWORD *v115;
  id v116;
  id v117;
  uint64_t v118;
  id v119;
  void *v120;
  id v121;
  NSObject *v122;
  uint64_t v123;
  uint64_t v124;
  id v125;
  id v126;
  NSObject *v127;
  os_log_type_t v128;
  uint8_t *v129;
  _QWORD *v130;
  NSObject *v131;
  os_log_type_t v132;
  uint8_t *v133;
  _QWORD *v134;
  uint64_t v135;
  NSObject *v137;
  int v138;
  uint8_t *v139;
  id v140;
  void *v141;
  uint64_t v142;
  unint64_t v143;
  unint64_t v144;
  int64_t v145;
  uint64_t v146;
  _QWORD *v147;
  unint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  unsigned int v152;
  id v153;
  void *v154;
  id v155;
  id v156;
  void *v157;
  id v158;
  id v159;
  void *v160;
  id v161;
  int v162;
  void *v163;
  _BYTE *v164;
  id v165;
  void *v166;
  void *v167;
  id v168;
  char v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  uint64_t v173;
  id v174;
  uint64_t v176;
  uint64_t v177;
  int v178;
  uint64_t v179;
  id v180;
  id v181;
  void *v182;
  id v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  int v187;
  uint64_t v188;
  uint64_t v189;
  id v190;
  void *v191;
  id v192;
  uint64_t v193;
  id v194;
  void *v195;
  id v196;
  uint64_t v197;
  id v198;
  void *v199;
  id v200;
  uint64_t v201;
  id v202;
  void *v203;
  id v204;
  uint64_t v205;
  id v206;
  void *v207;
  uint64_t v208;
  uint64_t v209;
  id v210;
  uint64_t v211;
  uint64_t v212;
  id v213;
  uint64_t v214;
  id v215;
  id v216;
  void *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unsigned int v222;
  void (*v223)(uint64_t, char *, uint64_t);
  id v224;
  uint64_t v225;
  uint64_t v226;
  id v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  id v231;
  uint64_t v232;
  id v233;
  void *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char v240;
  id v241;
  int v242;
  uint64_t v243;
  _QWORD *v244;
  uint64_t v245;
  void (*v246)(char *, uint64_t);
  NSObject *v247;
  uint64_t v248;
  uint64_t v249;
  NSObject *v250;
  os_log_type_t v251;
  uint8_t *v252;
  char v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  int v257;
  unsigned int v258;
  uint64_t v259;
  int v260;
  uint64_t v261;
  uint64_t v262;
  id v263;
  id v264;
  uint64_t v265;
  void (*v266)(uint64_t, uint64_t, uint64_t, uint64_t);
  unsigned int (*v267)(uint64_t, uint64_t, uint64_t);
  id v268;
  uint64_t *v269;
  int v270;
  id v271;
  uint64_t v272;
  id v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  _QWORD *v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  char *v289;
  char *v290;
  char *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  _BYTE *v298;
  uint64_t v299;
  uint64_t v300;
  __int128 v301;
  __int128 v302;
  uint64_t v303;
  uint64_t v304;
  NSObject *ObjCClassFromMetadata;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v4);
  v283 = (uint64_t)&v254 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v6);
  v276 = (uint64_t)&v254 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v275 = sub_1D26CB9DC();
  v274 = *(_QWORD *)(v275 - 8);
  MEMORY[0x1E0C80A78](v275);
  v282 = (uint64_t)&v254 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CBA24();
  MEMORY[0x1E0C80A78](v9);
  v288 = (uint64_t)&v254 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WidgetExtensionInfo();
  MEMORY[0x1E0C80A78](v11);
  v281 = (uint64_t *)((char *)&v254 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  MEMORY[0x1E0C80A78](v13);
  v278 = (uint64_t)&v254 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  MEMORY[0x1E0C80A78](v15);
  v277 = (uint64_t)&v254 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v292 = *(_QWORD *)(v17 - 8);
  v293 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char **)((char *)&v254 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v21 = MEMORY[0x1E0C80A78](v20);
  v279 = (uint64_t)&v254 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v280 = (uint64_t)&v254 - v24;
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v254 - v25;
  v27 = sub_1D26CB880();
  v28 = *(_QWORD *)(v27 - 8);
  v295 = v27;
  v296 = v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v287 = (uint64_t)&v254 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v286 = (uint64_t)&v254 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v285 = (uint64_t)&v254 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v284 = (uint64_t)&v254 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v290 = (char *)&v254 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v289 = (char *)&v254 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v254 - v42;
  MEMORY[0x1E0C80A78](v41);
  v291 = (char *)&v254 - v44;
  v45 = OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeLock;
  type metadata accessor for UnfairLock();
  v46 = swift_allocObject();
  v47 = (_DWORD *)swift_slowAlloc();
  *v47 = 0;
  *(_QWORD *)(v1 + v45) = v46;
  *(_QWORD *)(v46 + 16) = v47;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateInitial) = 1;
  v297 = v1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateRequired) = 1;
  v48 = objc_msgSend(a1, sel_identifier);
  if (!v48)
  {
    __break(1u);
    goto LABEL_205;
  }
  v49 = v48;
  sub_1D26CD938();

  v50 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
  v51 = sub_1D2536A30();
  v52 = v2;
  if (v2)
  {
    v53 = (void *)sub_1D26CB760();
    v54 = objc_msgSend(v53, sel_domain);
    v55 = sub_1D26CD938();
    v57 = v56;

    if (v55 == sub_1D26CD938() && v57 == v58)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v85 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v85 & 1) == 0)
      {
LABEL_20:
        sub_1D268AE64();
        swift_allocError();
        *v86 = v2;
        v87 = v2;
        swift_willThrow();

        goto LABEL_56;
      }
    }
    if (objc_msgSend(v53, sel_code) != (id)4099)
      goto LABEL_20;
LABEL_205:
    if (qword_1ED9621C0 == -1)
      goto LABEL_206;
    goto LABEL_211;
  }
  v273 = v51;
  v59 = objc_msgSend(v273, sel_dataContainerURL);
  if (!v59)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v296 + 56))(v26, 1, 1, v295);
    goto LABEL_22;
  }
  v60 = v59;
  sub_1D26CB850();

  v61 = v296;
  v62 = *(void (**)(char *, char *, uint64_t))(v296 + 32);
  v63 = v43;
  v64 = v295;
  v62(v26, v63, v295);
  v65 = *(_QWORD *)(v61 + 56);
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v65)(v26, 0, 1, v64);
  v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
  if (v66(v26, 1, v64) == 1)
  {
LABEL_22:
    v88 = v273;

    sub_1D253703C((uint64_t)v26, (uint64_t *)&unk_1ED96FC50);
    sub_1D268AE64();
    swift_allocError();
    *v89 = 2;
    swift_willThrow();

    goto LABEL_56;
  }
  v62(v291, v26, v64);
  v67 = objc_msgSend(v273, sel_containingBundleRecord);
  if (!v67)
  {
    if (qword_1ED9621C0 != -1)
      goto LABEL_203;
    goto LABEL_24;
  }
  v68 = v67;
  while (1)
  {
    v69 = objc_msgSend(v68, sel_bundleIdentifier);
    if (!v69)
    {
      v103 = v273;

      sub_1D268AE64();
      swift_allocError();
      *v104 = 4;
      swift_willThrow();

      goto LABEL_55;
    }
    v70 = v69;
    v266 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65;
    v267 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v66;
    v262 = sub_1D26CD938();
    v272 = v71;

    *(_QWORD *)(v297 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension) = a1;
    v268 = a1;
    v72 = v273;
    v73 = objc_msgSend(v273, sel_URL);
    sub_1D26CB850();

    v74 = objc_msgSend(v68, sel_URL);
    sub_1D26CB850();

    v75 = (const __CFURL *)sub_1D26CB7D8();
    v76 = CFBundleCreate(0, v75);

    v263 = v68;
    if (v76)
    {
      v77 = CFBundleCopyBundleLocalizations(v76);
      if (!v77 || (v78 = v77, v303 = 0, sub_1D26CDAE8(), v78, (v79 = v303) == 0))
      {
        v80 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
        v81 = objc_msgSend(v80, sel_localizations);

        v79 = sub_1D26CDAF4();
        swift_bridgeObjectRelease();

      }
      v82 = v76;
      v83 = (__CFString *)sub_1D26CD914();
      v84 = (id)CFBundleGetValueForInfoDictionaryKey(v82, v83);

      if (v84 && (v303 = (uint64_t)v84, swift_dynamicCast()))
        v260 = v301;
      else
        v260 = 0;
      if (qword_1ED962480 != -1)
        swift_once();
      v105 = (_QWORD *)qword_1ED962478;
      swift_bridgeObjectRetain();
      v106 = objc_msgSend(v268, sel_identifier);
      if (!v106)
        goto LABEL_210;
      v107 = v106;
      v108 = sub_1D26CD938();
      v110 = v109;

      LOBYTE(v107) = sub_1D26869F0(v108, v110, v105);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v259 = v79;
      if ((v107 & 1) != 0)
      {
        v111 = v82;
        v112 = (__CFString *)sub_1D26CD914();
        v113 = (id)CFBundleGetValueForInfoDictionaryKey(v111, v112);

        v114 = MEMORY[0x1E0DEE9D8];
        v269 = v52;
        ObjCClassFromMetadata = v111;
        if (v113)
        {
          v303 = (uint64_t)v113;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
          v115 = swift_dynamicCast() ? (_QWORD *)v301 : (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        else
        {
          v115 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        v145 = v115[2];
        if (v145)
        {
          v303 = v114;
          sub_1D2584370(0, v145, 0);
          v146 = v303;
          v298 = v115;
          v147 = v115 + 5;
          do
          {
            swift_bridgeObjectRetain();
            sub_1D26CBC7C();
            v303 = v146;
            v149 = *(_QWORD *)(v146 + 16);
            v148 = *(_QWORD *)(v146 + 24);
            if (v149 >= v148 >> 1)
            {
              sub_1D2584370(v148 > 1, v149 + 1, 1);
              v146 = v303;
            }
            v147 += 2;
            *(_QWORD *)(v146 + 16) = v149 + 1;
            (*(void (**)(unint64_t, char **, uint64_t))(v292 + 32))(v146+ ((*(unsigned __int8 *)(v292 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v292 + 80))+ *(_QWORD *)(v292 + 72) * v149, v19, v293);
            --v145;
          }
          while (v145);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          v146 = MEMORY[0x1E0DEE9D8];
        }
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963998);
        v150 = swift_allocObject();
        *(_OWORD *)(v150 + 16) = xmmword_1D26D5A90;
        sub_1D26CBC70();
        sub_1D26CBC70();
        v151 = v269;
        v261 = sub_1D268B0FC(v146, v150);
        v52 = v151;

        swift_bridgeObjectRelease();
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v118 = v297;
        v72 = v273;
        v68 = v263;
      }
      else
      {

        v261 = MEMORY[0x1E0DEE9D8];
        v118 = v297;
        v72 = v273;
        v68 = v263;
      }
    }
    else
    {
      v116 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v117 = objc_msgSend(v116, sel_localizations);

      v259 = sub_1D26CDAF4();
      v260 = 0;
      v261 = MEMORY[0x1E0DEE9D8];
      v118 = v297;
    }
    v152 = objc_msgSend(v68, sel_developerType);
    v153 = objc_msgSend(v72, sel_entitlements);
    v154 = (void *)sub_1D26CD914();
    v294 = sub_1D2539514(0, (unint64_t *)&qword_1ED96C070);
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v155 = objc_msgSend(v153, sel_objectForKey_ofClass_, v154);

    if (v155)
    {
      sub_1D26CDFA4();
      swift_unknownObjectRelease();
    }
    else
    {
      v301 = 0u;
      v302 = 0u;
    }
    sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
    if (v304)
    {
      if (swift_dynamicCast())
      {
        v257 = v299;
        goto LABEL_79;
      }
    }
    else
    {
      sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
    }
    v257 = 0;
LABEL_79:
    v156 = objc_msgSend(v72, sel_entitlements);
    v157 = (void *)sub_1D26CD914();
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FCD0);
    v265 = swift_getObjCClassFromMetadata();
    v158 = objc_msgSend(v156, sel_objectForKey_ofClass_, v157);

    if (v158)
    {
      sub_1D26CDFA4();
      swift_unknownObjectRelease();
    }
    else
    {
      v301 = 0u;
      v302 = 0u;
    }
    sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
    if (v304)
    {
      if (swift_dynamicCast())
      {
        v256 = v299;
        v255 = v300;
        goto LABEL_87;
      }
    }
    else
    {
      sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
    }
    v256 = 0;
    v255 = 0;
LABEL_87:
    v159 = objc_msgSend(v72, sel_entitlements);
    v160 = (void *)sub_1D26CD914();
    v161 = objc_msgSend(v159, sel_objectForKey_ofClass_, v160, v265);

    if (v161)
    {
      sub_1D26CDFA4();
      swift_unknownObjectRelease();
    }
    else
    {
      v301 = 0u;
      v302 = 0u;
    }
    sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
    v269 = v52;
    if (v304)
    {
      type metadata accessor for FileProtectionType(0);
      v162 = swift_dynamicCast();
      v163 = (void *)v299;
      if (!v162)
        v163 = 0;
      v264 = v163;
    }
    else
    {
      sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
      v264 = 0;
    }
    v164 = (_BYTE *)sub_1D25F48BC((uint64_t)&unk_1E93D1840);
    swift_arrayDestroy();
    v19 = &selRef_BOOLValue;
    v165 = objc_msgSend(v72, sel_infoDictionary);
    v298 = v164;
    v166 = (void *)sub_1D26CDBF0();
    v271 = objc_msgSend(v165, sel_objectsForKeys_, v166);

    v66 = (unsigned int (*)(char *, uint64_t, uint64_t))objc_msgSend(v72, sel_infoDictionary);
    v167 = (void *)sub_1D26CD914();
    v168 = objc_msgSend(v66, sel_objectForKey_ofClass_, v167, ObjCClassFromMetadata);

    if (v168)
    {
      sub_1D26CDFA4();
      swift_unknownObjectRelease();
    }
    else
    {
      v301 = 0u;
      v302 = 0u;
    }
    sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
    v258 = v152;
    if (v304)
    {
      if (swift_dynamicCast())
      {
        v169 = v299;
        goto LABEL_103;
      }
    }
    else
    {
      sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
    }
    v169 = 0;
LABEL_103:
    v270 = 0;
    v170 = 0;
    *(_BYTE *)(v118 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_disablesImplicitDescriptorDiscovery) = v169;
    v171 = v298 + 56;
    v172 = 1 << v298[32];
    v173 = -1;
    if (v172 < 64)
      v173 = ~(-1 << v172);
    v65 = v173 & *((_QWORD *)v298 + 7);
    a1 = (void *)((unint64_t)(v172 + 63) >> 6);
    v52 = &qword_1ED96FCE0;
    v64 = MEMORY[0x1E0DEE9B8] + 8;
LABEL_106:
    v174 = v271;
    while (v65)
    {
      v65 &= v65 - 1;
LABEL_121:
      swift_bridgeObjectRetain();
      v19 = (char **)sub_1D26CD914();
      swift_bridgeObjectRelease();
      v66 = (unsigned int (*)(char *, uint64_t, uint64_t))objc_msgSend(v174, sel_objectForKey_ofClass_, v19, ObjCClassFromMetadata);

      if (v66)
      {
        sub_1D26CDFA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v301 = 0u;
        v302 = 0u;
      }
      sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
      if (v304)
      {
        if ((swift_dynamicCast() & 1) != 0)
        {
          v66 = (unsigned int (*)(char *, uint64_t, uint64_t))v299;
          v19 = (char **)sub_1D26CDEB4();
          v178 = sub_1D26CDECC();

          v270 |= v178;
          goto LABEL_106;
        }
      }
      else
      {
        sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
      }
    }
    if (__OFADD__(v170++, 1))
    {
      __break(1u);
      goto LABEL_202;
    }
    if (v170 >= (uint64_t)a1)
      goto LABEL_131;
    v176 = *(_QWORD *)&v171[8 * v170];
    if (v176)
      goto LABEL_120;
    v177 = v170 + 1;
    if (v170 + 1 >= (uint64_t)a1)
      goto LABEL_131;
    v176 = *(_QWORD *)&v171[8 * v177];
    if (v176)
      goto LABEL_119;
    v177 = v170 + 2;
    if (v170 + 2 >= (uint64_t)a1)
      goto LABEL_131;
    v176 = *(_QWORD *)&v171[8 * v177];
    if (v176)
    {
LABEL_119:
      v170 = v177;
LABEL_120:
      v65 = (v176 - 1) & v176;
      goto LABEL_121;
    }
    v177 = v170 + 3;
    if (v170 + 3 >= (uint64_t)a1)
    {
LABEL_131:
      v179 = v262;
      swift_release();
      v180 = v273;
      v181 = objc_msgSend(v273, sel_infoDictionary);
      v182 = (void *)sub_1D26CD914();
      v183 = objc_msgSend(v181, sel_objectForKey_ofClass_, v182, v265);

      v184 = v295;
      v185 = v279;
      v186 = v272;
      if (v183)
      {
        sub_1D26CDFA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v301 = 0u;
        v302 = 0u;
      }
      sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
      if (v304)
      {
        v187 = swift_dynamicCast();
        v188 = v299;
        if (!v187)
          v188 = 0;
        v294 = v188;
        if (v187)
          v189 = v300;
        else
          v189 = 0;
        v265 = v189;
      }
      else
      {
        sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
        v294 = 0;
        v265 = 0;
      }
      v298 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10098]), sel_init);
      v190 = objc_msgSend(v180, sel_entitlements);
      v191 = (void *)sub_1D26CD914();
      v192 = objc_msgSend(v190, sel_objectForKey_ofClass_, v191, ObjCClassFromMetadata);

      if (v192)
      {
        sub_1D26CDFA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v301 = 0u;
        v302 = 0u;
      }
      sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
      if (v304)
      {
        if (swift_dynamicCast())
        {
          v193 = v299;
          goto LABEL_150;
        }
      }
      else
      {
        sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
      }
      v193 = 0;
LABEL_150:
      objc_msgSend(v298, sel_setCanOpenSystemURLs_, v193);
      v194 = objc_msgSend(v180, sel_entitlements);
      v195 = (void *)sub_1D26CD914();
      v196 = objc_msgSend(v194, sel_objectForKey_ofClass_, v195, ObjCClassFromMetadata);

      if (v196)
      {
        sub_1D26CDFA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v301 = 0u;
        v302 = 0u;
      }
      sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
      if (v304)
      {
        if (swift_dynamicCast())
        {
          v197 = v299;
          goto LABEL_158;
        }
      }
      else
      {
        sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
      }
      v197 = 0;
LABEL_158:
      objc_msgSend(v298, sel_setUsesEventService_, v197);
      v198 = objc_msgSend(v180, sel_entitlements);
      v199 = (void *)sub_1D26CD914();
      v200 = objc_msgSend(v198, sel_objectForKey_ofClass_, v199, ObjCClassFromMetadata);

      if (v200)
      {
        sub_1D26CDFA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v301 = 0u;
        v302 = 0u;
      }
      sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
      if (v304)
      {
        if (swift_dynamicCast())
        {
          v201 = v299;
          goto LABEL_166;
        }
      }
      else
      {
        sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
      }
      v201 = 0;
LABEL_166:
      objc_msgSend(v298, sel_setCanKeepAlive_, v201);
      v202 = objc_msgSend(v180, sel_entitlements);
      v203 = (void *)sub_1D26CD914();
      v204 = objc_msgSend(v202, sel_objectForKey_ofClass_, v203, ObjCClassFromMetadata);

      if (v204)
      {
        sub_1D26CDFA4();
        swift_unknownObjectRelease();
      }
      else
      {
        v301 = 0u;
        v302 = 0u;
      }
      sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
      if (v304)
      {
        if (swift_dynamicCast())
        {
          v205 = v299;
          goto LABEL_174;
        }
      }
      else
      {
        sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
      }
      v205 = 0;
LABEL_174:
      objc_msgSend(v298, sel_setInvalidatesOnStorefrontChange_, v205);
      v206 = objc_msgSend(v268, sel_identifier);
      if (!v206)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        __break(1u);
LABEL_210:
        __break(1u);
LABEL_211:
        swift_once();
LABEL_206:
        v249 = sub_1D26CC09C();
        __swift_project_value_buffer(v249, (uint64_t)qword_1ED977CF0);
        v250 = sub_1D26CC084();
        v251 = sub_1D26CDCEC();
        if (os_log_type_enabled(v250, v251))
        {
          v252 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v252 = 0;
          _os_log_impl(&dword_1D2531000, v250, v251, "Received connection invalidated from LSD.  We must be shutting down... exiting.", v252, 2u);
          MEMORY[0x1D823A5E0](v252, -1, -1);
        }

        exit(0);
      }
      v207 = v206;
      sub_1D26CDE54();
      sub_1D26CD938();

      sub_1D26CBC7C();
      swift_bridgeObjectRetain();
      v208 = v278;
      sub_1D26CBC7C();
      v209 = 1;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v292 + 56))(v208, 0, 1, v293);
      ObjCClassFromMetadata = sub_1D26CDE3C();
      v210 = v273;
      v211 = sub_1D26CDD10();
      v292 = v212;
      v293 = v211;

      v213 = objc_msgSend(v210, sel_localizedName);
      v278 = sub_1D26CD938();
      v277 = v214;

      v215 = objc_msgSend(v210, sel_uniqueIdentifier);
      sub_1D26CBA0C();

      v216 = objc_msgSend(v210, sel_executableURL);
      if (v216)
      {
        v217 = v216;
        sub_1D26CB850();

        v209 = 0;
      }
      v266(v185, v209, 1, v184);
      v218 = v280;
      sub_1D25384CC(v185, v280, (uint64_t *)&unk_1ED96FC50);
      if (v267(v218, 1, v184) == 1)
      {
        sub_1D253703C(v218, (uint64_t *)&unk_1ED96FC50);
        v219 = v276;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v274 + 56))(v276, 1, 1, v275);
        goto LABEL_180;
      }
      v219 = v276;
      URL.lastModifiedDate.getter(v276);
      (*(void (**)(uint64_t, uint64_t))(v296 + 8))(v218, v184);
      v220 = v274;
      v221 = v275;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v274 + 48))(v219, 1, v275) == 1)
      {
LABEL_180:
        sub_1D26CB988();
        sub_1D253703C(v219, &qword_1ED96B1E0);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v220 + 32))(v282, v219, v221);
      }
      v222 = v258;
      v223 = *(void (**)(uint64_t, char *, uint64_t))(v296 + 16);
      v223(v284, v289, v184);
      v223(v285, v291, v184);
      sub_1D26CB814();
      if (v264)
      {
        v224 = v264;
        sub_1D26CD494();
      }
      else
      {
        v225 = sub_1D26CD488();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v225 - 8) + 56))(v283, 1, 1, v225);
      }
      v226 = v265;
      v223(v287, v290, v184);
      if (v226)
      {
        swift_bridgeObjectRelease();
        v186 = v226;
      }
      else
      {
        v294 = v179;
      }
      v272 = v186;
      v227 = v263;
      v228 = objc_msgSend(v263, sel_localizedName);
      v229 = sub_1D26CD938();
      v280 = v230;

      v231 = v227;
      v279 = sub_1D26CDD10();
      v276 = v232;

      v233 = objc_msgSend(v210, sel_SDKVersion);
      if (v233)
      {
        v234 = v233;
        v235 = sub_1D26CD938();
        v237 = v236;

      }
      else
      {
        v235 = sub_1D26CD938();
        v237 = v238;
      }
      LODWORD(v275) = v222 == 1;
      objc_msgSend(v210, sel_platform);

      v239 = CHSPlatformFromDYLDPlatform();
      if (objc_msgSend(v231, sel_developerType) == 1)
        v240 = 0;
      else
        v240 = v257;
      v241 = v298;
      objc_msgSend(v298, sel_copy);
      sub_1D26CDFA4();
      swift_unknownObjectRelease();
      sub_1D2539514(0, &qword_1ED9638D8);
      v242 = swift_dynamicCast();
      v243 = v301;
      if (!v242)
        v243 = 0;
      v253 = v240;
      v244 = v281;
      WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)((uint64_t)ObjCClassFromMetadata, v293, v292, v278, v277, v288, v282, v275, v281, v284, v285, v286, v283, v270 & 1, v287, v294, v272, v229, v280,
        v279,
        v276,
        v235,
        v237,
        v239,
        0,
        0,
        v256,
        v255,
        v253,
        v259,
        v260,
        v261,
        v243);

      v245 = v295;
      v246 = *(void (**)(char *, uint64_t))(v296 + 8);
      v246(v290, v295);
      v246(v289, v245);

      v246(v291, v245);
      v135 = v297;
      sub_1D268B4A4((uint64_t)v244, v297 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info);
      return v135;
    }
    v176 = *(_QWORD *)&v171[8 * v177];
    if (v176)
      goto LABEL_119;
    while (1)
    {
      v170 = v177 + 1;
      if (__OFADD__(v177, 1))
        break;
      if (v170 >= (uint64_t)a1)
        goto LABEL_131;
      v176 = *(_QWORD *)&v171[8 * v170];
      ++v177;
      if (v176)
        goto LABEL_120;
    }
LABEL_202:
    __break(1u);
LABEL_203:
    swift_once();
LABEL_24:
    v267 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v66;
    v90 = sub_1D26CC09C();
    v91 = (_BYTE *)__swift_project_value_buffer(v90, (uint64_t)qword_1ED977CF0);
    v92 = v273;
    v298 = v91;
    v93 = sub_1D26CC084();
    v94 = sub_1D26CDD04();
    v95 = os_log_type_enabled(v93, (os_log_type_t)v94);
    ObjCClassFromMetadata = v92;
    v266 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65;
    if (v95)
    {
      LODWORD(v294) = v94;
      v269 = v52;
      v96 = (uint8_t *)swift_slowAlloc();
      v97 = swift_slowAlloc();
      v303 = v97;
      *(_DWORD *)v96 = 136446210;
      v98 = -[NSObject bundleIdentifier](v92, sel_bundleIdentifier);
      if (v98)
      {
        v99 = v98;
        v100 = sub_1D26CD938();
        v102 = v101;

      }
      else
      {
        v100 = 7104878;
        v102 = 0xE300000000000000;
      }
      *(_QWORD *)&v301 = sub_1D2537880(v100, v102, &v303);
      sub_1D26CDF50();
      v92 = ObjCClassFromMetadata;

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v93, (os_log_type_t)v294, "No direct container found for extension: %{public}s - looking for effective container bundle identifier.", v96, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v97, -1, -1);
      MEMORY[0x1D823A5E0](v96, -1, -1);

      v64 = v295;
      v52 = v269;
    }
    else
    {

    }
    v119 = -[NSObject entitlements](v92, sel_entitlements);
    v120 = (void *)sub_1D26CD914();
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FCD0);
    v121 = objc_msgSend(v119, sel_objectForKey_ofClass_, v120, swift_getObjCClassFromMetadata());

    if (v121)
    {
      sub_1D26CDFA4();
      swift_unknownObjectRelease();
    }
    else
    {
      v301 = 0u;
      v302 = 0u;
    }
    sub_1D25384CC((uint64_t)&v301, (uint64_t)&v303, &qword_1ED96FCE0);
    v122 = ObjCClassFromMetadata;
    if (!v304)
      break;
    if ((swift_dynamicCast() & 1) == 0)
    {

      goto LABEL_52;
    }
    v123 = v299;
    v124 = v300;
    v125 = objc_allocWithZone(MEMORY[0x1E0CA5870]);
    v126 = sub_1D268AD8C(v123, v124, 0);
    if (v52)
    {

      v127 = sub_1D26CC084();
      v128 = sub_1D26CDD04();
      if (os_log_type_enabled(v127, v128))
      {
        v129 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v129 = 0;
        _os_log_impl(&dword_1D2531000, v127, v128, "No effective container bundle identifier found.", v129, 2u);
        MEMORY[0x1D823A5E0](v129, -1, -1);
      }

      sub_1D268AE64();
      swift_allocError();
      *v130 = 3;
      swift_willThrow();

      goto LABEL_55;
    }
    v68 = v126;
    v137 = sub_1D26CC084();
    v138 = sub_1D26CDD04();
    if (os_log_type_enabled(v137, (os_log_type_t)v138))
    {
      LODWORD(v298) = v138;
      ObjCClassFromMetadata = v137;
      v269 = 0;
      v139 = (uint8_t *)swift_slowAlloc();
      v294 = swift_slowAlloc();
      v303 = v294;
      *(_DWORD *)v139 = 136446210;
      v263 = v68;
      v140 = objc_msgSend(v68, sel_bundleIdentifier);
      if (v140)
      {
        v141 = v140;
        v142 = sub_1D26CD938();
        v144 = v143;

      }
      else
      {
        v142 = 7104878;
        v144 = 0xE300000000000000;
      }
      *(_QWORD *)&v301 = sub_1D2537880(v142, v144, &v303);
      sub_1D26CDF50();
      v68 = v263;

      swift_bridgeObjectRelease();
      v247 = ObjCClassFromMetadata;
      _os_log_impl(&dword_1D2531000, ObjCClassFromMetadata, (os_log_type_t)v298, "Found effective container bundle identifier: %{public}s", v139, 0xCu);
      v248 = v294;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v248, -1, -1);
      MEMORY[0x1D823A5E0](v139, -1, -1);

      v64 = v295;
      v52 = v269;
    }
    else
    {

    }
    v66 = (unsigned int (*)(char *, uint64_t, uint64_t))v267;
    v65 = (uint64_t)v266;
  }

  sub_1D253703C((uint64_t)&v303, &qword_1ED96FCE0);
LABEL_52:
  v131 = sub_1D26CC084();
  v132 = sub_1D26CDD04();
  if (os_log_type_enabled(v131, v132))
  {
    v133 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v133 = 0;
    _os_log_impl(&dword_1D2531000, v131, v132, "No effective container bundle identifier found.", v133, 2u);
    MEMORY[0x1D823A5E0](v133, -1, -1);
  }

  sub_1D268AE64();
  swift_allocError();
  *v134 = 3;
  swift_willThrow();

LABEL_55:
  (*(void (**)(char *, uint64_t))(v296 + 8))(v291, v64);
LABEL_56:
  v135 = v297;
  swift_release();
  type metadata accessor for WidgetExtension();
  swift_deallocPartialClassInstance();
  return v135;
}

uint64_t sub_1D2689754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  void *v5;
  id v6;
  uint64_t v7;
  _QWORD v9[5];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeLock);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2539D4C(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  sub_1D26CD320();
  v5 = *(void **)(v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension);
  v9[3] = sub_1D2539514(0, &qword_1ED9620B0);
  v9[0] = v5;
  v6 = v5;
  v7 = MEMORY[0x1D8238AC8](v9, a1, 0, 0);
  sub_1D253703C((uint64_t)v9, &qword_1ED96FCE0);
  return v7;
}

void sub_1D2689828()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  id v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  id v16;
  void *v17;
  id *v18;
  void *v19;
  unsigned int v20;
  id v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  id v43[2];

  v1 = v0;
  v43[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = sub_1D26CC09C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9621C0 != -1)
    swift_once();
  v6 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED977CF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  swift_retain_n();
  v7 = sub_1D26CC084();
  v8 = sub_1D26CDD04();
  if (os_log_type_enabled(v7, v8))
  {
    v40 = v6;
    v9 = (uint8_t *)swift_slowAlloc();
    v39 = (void *)swift_slowAlloc();
    v43[0] = v39;
    *(_DWORD *)v9 = 136315138;
    v10 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension], sel_identifier);
    v41 = v1;
    if (!v10)
    {
      swift_release();
      __break(1u);
      return;
    }
    v11 = v10;
    v12 = sub_1D26CD938();
    v14 = v13;

    v42 = sub_1D2537880(v12, v14, (uint64_t *)v43);
    sub_1D26CDF50();
    v1 = v41;
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v7, v8, "Killing %s.", v9, 0xCu);
    v15 = v39;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v15, -1, -1);
    MEMORY[0x1D823A5E0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  v16 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  if (!v16)
    __break(1u);
  v17 = v16;
  v18 = (id *)&v1[OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info];
  type metadata accessor for WidgetExtensionInfo();
  v19 = (void *)sub_1D26CB7D8();
  v43[0] = 0;
  v20 = objc_msgSend(v17, sel_terminatePlugInAtURL_withError_, v19, v43);

  if (v20)
  {
    v21 = v43[0];
  }
  else
  {
    v41 = (char *)v43[0];
    v22 = v43[0];
    v23 = (void *)sub_1D26CB76C();

    swift_willThrow();
    swift_retain();
    v24 = v23;
    swift_retain();
    v25 = v23;
    v26 = sub_1D26CC084();
    v27 = sub_1D26CDD04();
    if (os_log_type_enabled(v26, v27))
    {
      v28 = swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      v30 = (void *)swift_slowAlloc();
      v41 = v1;
      v31 = v30;
      v43[0] = v30;
      *(_DWORD *)v28 = 136315394;
      v32 = objc_msgSend(*v18, sel_tokenString);
      v33 = sub_1D26CD938();
      v35 = v34;

      v42 = sub_1D2537880(v33, v35, (uint64_t *)v43);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2112;
      v36 = v23;
      v37 = _swift_stdlib_bridgeErrorToNSError();
      v42 = v37;
      sub_1D26CDF50();
      *v29 = v37;

      _os_log_impl(&dword_1D2531000, v26, v27, "Error terminating plugin %s: %@", (uint8_t *)v28, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v29, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v31, -1, -1);
      MEMORY[0x1D823A5E0](v28, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1D2689D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  char *v5;
  id *v6;
  id v7;
  id v8;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = sub_1D26CBA24();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v11 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (id *)(v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info);
  type metadata accessor for WidgetExtensionInfo();
  sub_1D25369B0(&qword_1EFC825D8, v3, MEMORY[0x1E0CB09C8]);
  sub_1D26CD8D8();
  v7 = objc_msgSend(*v6, sel_tokenString);
  sub_1D26CD938();

  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  v8 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                             + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid));
  sub_1D26CBA0C();

  sub_1D26CD8D8();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v5, v2);
}

uint64_t sub_1D2689F68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void (*v10)(char *, uint64_t);
  uint64_t v11;
  id v12;
  char v13;
  char v14;
  uint64_t v16;
  _BYTE v17[40];

  v2 = v1;
  v4 = sub_1D26CBA24();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D2538510(a1, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
  type metadata accessor for WidgetExtension();
  if (!swift_dynamicCast())
    goto LABEL_7;
  v8 = v16;
  type metadata accessor for WidgetExtensionInfo();
  v9 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                             + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid));
  sub_1D26CBA0C();

  LOBYTE(v9) = sub_1D26CBA00();
  v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  if ((v9 & 1) == 0
    || (v11 = v8 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info, (sub_1D26CBA00() & 1) == 0)
    || (v12 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v8
                                                                    + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid)),
        sub_1D26CBA0C(),
        v12,
        v13 = sub_1D26CBA00(),
        v10(v7, v4),
        (v13 & 1) == 0))
  {
    swift_release();
LABEL_7:
    v14 = 0;
    return v14 & 1;
  }
  v14 = WidgetExtensionInfo.matches(_:)(v11);
  swift_release();
  return v14 & 1;
}

uint64_t sub_1D268A130()
{
  uint64_t v0;

  sub_1D2538928(v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D268A180()
{
  return type metadata accessor for WidgetExtension();
}

uint64_t type metadata accessor for WidgetExtension()
{
  uint64_t result;

  result = qword_1ED961CA8;
  if (!qword_1ED961CA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D268A1C4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WidgetExtensionInfo();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetExtensionError(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFF9 && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483641);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 5;
  if (v5 >= 7)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WidgetExtensionError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFF9)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483641;
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFF9)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 6;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetExtensionError()
{
  return &type metadata for WidgetExtensionError;
}

uint64_t sub_1D268A320()
{
  _QWORD *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(*v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info), sel_tokenString);
  v2 = sub_1D26CD938();

  return v2;
}

uint64_t sub_1D268A380@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  v5 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_1D268A3D8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 36));
}

uint64_t sub_1D268A410@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  v5 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_1D268A468@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  v5 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_1D268A4C0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  v5 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_1D268A518@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v4 = type metadata accessor for WidgetExtensionInfo();
  return sub_1D2537078(v3 + *(int *)(v4 + 52), a1, &qword_1ED96FC90);
}

uint64_t sub_1D268A564()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 56));
}

uint64_t sub_1D268A59C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  v5 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_1D268A5F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info) + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v4 = sub_1D26CBC88();
    swift_endAccess();
    return v4;
  }
  return result;
}

uint64_t sub_1D268A69C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D268A6E8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D268A734()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 80));
}

uint64_t sub_1D268A76C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D268A7B8()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 92));
}

uint64_t sub_1D268A7F0()
{
  type metadata accessor for WidgetExtensionInfo();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D268A828()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 100));
}

uint64_t sub_1D268A860()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for WidgetExtensionInfo();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1D26868AC(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_1D268A8CC()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v2 = *(void **)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 108));
  v3 = v2;
  return v2;
}

uint64_t sub_1D268A90C()
{
  _QWORD *v0;

  return *(unsigned __int8 *)(*v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_disablesImplicitDescriptorDiscovery);
}

uint64_t sub_1D268A920(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _BYTE v14[40];

  v3 = sub_1D26CD4C4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v7 = sub_1D26CD62C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v14[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D2537078(a2, (uint64_t)v14, &qword_1ED962B58);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0CF04D0], v3);
  sub_1D26CD608();
  sub_1D26CD614();
  sub_1D26CD5FC();
  v11 = sub_1D2689754((uint64_t)v10);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v11;
}

uint64_t sub_1D268AA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;
  _BYTE v15[40];

  v14 = a4;
  v5 = sub_1D26CD4C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1D26CD62C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D2537078(a2, (uint64_t)v15, &qword_1ED962B58);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CF04D0], v5);
  sub_1D26CD608();
  sub_1D26CD614();
  sub_1D26CD5FC();
  sub_1D25349A8();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1D268AB90(uint64_t a1)
{
  return sub_1D2689754(a1);
}

void sub_1D268ABB0()
{
  sub_1D2689828();
}

uint64_t sub_1D268ABD0(uint64_t a1)
{
  return sub_1D2689F68(a1) & 1;
}

uint64_t sub_1D268ABF4(uint64_t *a1, uint64_t *a2)
{
  return sub_1D268AEA8(*a1, *a2);
}

uint64_t sub_1D268AC00()
{
  sub_1D26CE460();
  sub_1D2689D90();
  return sub_1D26CE49C();
}

uint64_t sub_1D268AC40()
{
  return sub_1D2689D90();
}

uint64_t sub_1D268AC60()
{
  sub_1D26CE460();
  sub_1D2689D90();
  return sub_1D26CE49C();
}

uint64_t sub_1D268AC9C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x1D823A4E4](&unk_1D26DAFD8, a1);
  return Extension.description.getter(a1, v2);
}

id sub_1D268ACD0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;

  v2 = *(void **)(*v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info);
  *a1 = v2;
  return v2;
}

uint64_t sub_1D268ACE8()
{
  return sub_1D25369B0(&qword_1ED963580, (uint64_t (*)(uint64_t))type metadata accessor for WidgetExtension, (uint64_t)&unk_1D26DAFB0);
}

uint64_t sub_1D268AD14(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1D25369B0((unint64_t *)&unk_1ED961C90, (uint64_t (*)(uint64_t))type metadata accessor for WidgetExtension, (uint64_t)&unk_1D26DAF48);
  a1[2] = sub_1D25369B0(&qword_1ED963580, (uint64_t (*)(uint64_t))type metadata accessor for WidgetExtension, (uint64_t)&unk_1D26DAFB0);
  result = sub_1D25369B0(&qword_1ED963588, (uint64_t (*)(uint64_t))type metadata accessor for WidgetExtension, (uint64_t)&unk_1D26DAF10);
  a1[3] = result;
  return result;
}

id sub_1D268AD8C(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_allowPlaceholder_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1D26CB76C();

    swift_willThrow();
  }
  return v6;
}

unint64_t sub_1D268AE64()
{
  unint64_t result;

  result = qword_1ED963B20;
  if (!qword_1ED963B20)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DAFF4, &type metadata for WidgetExtensionError);
    atomic_store(result, (unint64_t *)&qword_1ED963B20);
  }
  return result;
}

uint64_t sub_1D268AEA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  char v24;
  id v25;
  id v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;

  v4 = sub_1D26CBA24();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v32 - v9;
  v11 = OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v12 = a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  type metadata accessor for WidgetExtensionInfo();
  v13 = a2 + v11;
  if ((sub_1D26CBA00() & 1) == 0)
    goto LABEL_14;
  v32 = a2;
  v33 = v8;
  v34 = v5;
  v35 = v4;
  v14 = objc_msgSend(*(id *)v12, sel_tokenString);
  v15 = sub_1D26CD938();
  v17 = v16;

  v18 = objc_msgSend(*(id *)v13, sel_tokenString);
  v19 = sub_1D26CD938();
  v21 = v20;

  if (v15 == v19 && v17 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v23 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v24 = 0;
    if ((v23 & 1) == 0)
      return v24 & 1;
  }
  if (*(_QWORD *)(v12 + 8) == *(_QWORD *)(v13 + 8) && *(_QWORD *)(v12 + 16) == *(_QWORD *)(v13 + 16)
    || (v24 = 0, (sub_1D26CE3D0() & 1) != 0))
  {
    if ((sub_1D26CB9A0() & 1) != 0)
    {
      v25 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                                  + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid));
      sub_1D26CBA0C();

      v26 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v32
                                                                  + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension), sel_uuid));
      v27 = v33;
      sub_1D26CBA0C();

      v24 = sub_1D26CBA00();
      v28 = *(void (**)(char *, uint64_t))(v34 + 8);
      v29 = v27;
      v30 = v35;
      v28(v29, v35);
      v28(v10, v30);
      return v24 & 1;
    }
LABEL_14:
    v24 = 0;
  }
  return v24 & 1;
}

uint64_t sub_1D268B0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  void (*v49)(char *, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v35 - v10;
  MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v35 - v12;
  result = MEMORY[0x1E0DEE9D8];
  v51 = MEMORY[0x1E0DEE9D8];
  v43 = *(_QWORD *)(a1 + 16);
  if (!v43)
    return result;
  v35 = v2;
  v14 = 0;
  v15 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v16 = *(_QWORD *)(v6 + 72);
  v42 = a1 + v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v41 = a2 + v15;
  v38 = a2 + v15 + v16;
  v39 = v15;
  v50 = v16;
  v37 = a2 + v15 + 2 * v16;
  v45 = MEMORY[0x1E0DEE9D8];
  v47 = v11;
  v18 = v48;
  v36 = a2;
  v40 = v6;
  v49 = v17;
  v17(v48, v42, v5);
  while (1)
  {
    v19 = *(_QWORD *)(a2 + 16);
    if (!v19)
      goto LABEL_11;
    v17(v11, v41, v5);
    v20 = v6;
    v21 = sub_1D2536488((unint64_t *)&qword_1ED9632F0, &qword_1ED9632F8, MEMORY[0x1E0D0F980]);
    swift_bridgeObjectRetain();
    v22 = sub_1D26CD908();
    v23 = *(void (**)(char *, uint64_t))(v20 + 8);
    v23(v11, v5);
    if ((v22 & 1) == 0)
    {
      v44 = v21;
      if (v19 == 1)
        goto LABEL_10;
      v49(v11, v38, v5);
      v29 = sub_1D26CD908();
      v23(v11, v5);
      if ((v29 & 1) == 0)
        break;
    }
    swift_bridgeObjectRelease();
    v6 = v40;
LABEL_4:
    v23(v18, v5);
    v17 = v49;
LABEL_5:
    if (++v14 == v43)
      return v51;
    v17(v18, v42 + v50 * v14, v5);
  }
  if (v19 == 2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    v17 = v49;
    v6 = v40;
LABEL_11:
    v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v24(v46, v18, v5);
    v25 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      sub_1D2584370(0, *(_QWORD *)(v25 + 16) + 1, 1);
    v26 = v51;
    v28 = *(_QWORD *)(v51 + 16);
    v27 = *(_QWORD *)(v51 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1D2584370(v27 > 1, v28 + 1, 1);
      v26 = v51;
    }
    *(_QWORD *)(v26 + 16) = v28 + 1;
    v45 = v26;
    v24((char *)(v26 + v39 + v28 * v50), v46, v5);
    v11 = v47;
    v18 = v48;
    goto LABEL_5;
  }
  v30 = v37;
  v31 = 2;
  while (1)
  {
    v32 = v47;
    result = ((uint64_t (*)(char *, uint64_t, uint64_t))v49)(v47, v30, v5);
    v33 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    v34 = sub_1D26CD908();
    v23(v32, v5);
    if ((v34 & 1) != 0)
    {
      a2 = v36;
      swift_bridgeObjectRelease();
      v6 = v40;
      v11 = v47;
      v18 = v48;
      goto LABEL_4;
    }
    ++v31;
    v30 += v50;
    if (v33 == v19)
    {
      a2 = v36;
      swift_bridgeObjectRelease();
      v6 = v40;
      v18 = v48;
      v17 = v49;
      goto LABEL_11;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D268B4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetExtensionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D268B4E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  result = sub_1D26CBC88();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t PowerlogUpdateIdentity.init(widget:identifier:location:suggestionIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  char v8;

  v7 = *a4;
  v8 = *((_BYTE *)a4 + 8);
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = a2;
  *(_QWORD *)(a7 + 16) = a3;
  *(_QWORD *)(a7 + 24) = a5;
  *(_QWORD *)(a7 + 32) = a6;
  *(_QWORD *)(a7 + 40) = v7;
  *(_BYTE *)(a7 + 48) = v8;
  return result;
}

uint64_t PowerlogControlUpdateIdentity.init(control:identifier:location:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  char v6;

  v5 = *a4;
  v6 = *((_BYTE *)a4 + 8);
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = v5;
  *(_BYTE *)(a5 + 32) = v6;
  return result;
}

ChronoKit::PowerlogUpdateCost_optional __swiftcall PowerlogUpdateCost.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ChronoKit::PowerlogUpdateCost_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D26CE250();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t PowerlogUpdateCost.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1701147238;
  else
    return 0x6465746567647562;
}

uint64_t sub_1D268B5E8()
{
  sub_1D26CE460();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D268B660()
{
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D268B6B4()
{
  sub_1D26CE460();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

ChronoKit::PowerlogUpdateCost_optional sub_1D268B728(Swift::String *a1)
{
  return PowerlogUpdateCost.init(rawValue:)(*a1);
}

void sub_1D268B734(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701147238;
  if (!*v1)
    v2 = 0x6465746567647562;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D268B76C(char *a1, char *a2)
{
  return sub_1D25E80A8(*a1, *a2);
}

ChronoKit::PowerlogWakeReason_optional __swiftcall PowerlogWakeReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  ChronoKit::PowerlogWakeReason_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1D26CE250();
  result.value = swift_bridgeObjectRelease();
  v5 = 14;
  if (v3 < 0xE)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PowerlogWakeReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D268B800 + 4 * byte_1D26DB070[*v0]))(0x746C7561666564, 0xE700000000000000);
}

uint64_t sub_1D268B800()
{
  return 0x656C617473;
}

uint64_t sub_1D268B814()
{
  return 0x6765726F46707061;
}

uint64_t sub_1D268B838()
{
  return 0x6973736553707061;
}

unint64_t sub_1D268B854()
{
  return 0xD000000000000011;
}

uint64_t sub_1D268B87C()
{
  return 0x6C616E7265747865;
}

uint64_t sub_1D268B8A0()
{
  return 0x65526D6574737973;
}

uint64_t sub_1D268B8C4()
{
  return 0x746F687370616E73;
}

uint64_t sub_1D268B8DC()
{
  return 0x6775626564;
}

uint64_t sub_1D268B8F0()
{
  return 0x6D706F6C65766564;
}

uint64_t sub_1D268B910()
{
  return 0x7463617265746E69;
}

uint64_t sub_1D268B930()
{
  return 0x65737561706E75;
}

uint64_t sub_1D268B944()
{
  return 0x726568746FLL;
}

uint64_t sub_1D268B958()
{
  sub_1D26CE460();
  PowerlogWakeReason.rawValue.getter();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D268B9BC()
{
  PowerlogWakeReason.rawValue.getter();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D268BA0C()
{
  sub_1D26CE460();
  PowerlogWakeReason.rawValue.getter();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

ChronoKit::PowerlogWakeReason_optional sub_1D268BA6C(Swift::String *a1)
{
  return PowerlogWakeReason.init(rawValue:)(*a1);
}

uint64_t sub_1D268BA78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PowerlogWakeReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D268BA9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D25E8144(*a1, *a2);
}

id PowerlogUpdateIdentity.widget.getter()
{
  id *v0;

  return *v0;
}

uint64_t PowerlogUpdateIdentity.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PowerlogUpdateIdentity.suggestionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void PowerlogUpdateIdentity.location.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PowerlogUpdateIdentity.init(widget:identifier:location:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  char v6;

  v5 = *a4;
  v6 = *((_BYTE *)a4 + 8);
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_QWORD *)(a5 + 24) = 0;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = v5;
  *(_BYTE *)(a5 + 48) = v6;
  return result;
}

uint64_t PowerlogUpdateIdentity.description.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  v2 = objc_msgSend(v1, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  PowerlogWidgetLocation.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 0;
}

uint64_t PowerlogUpdateIdentity.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_BYTE *)(v0 + 48);
  v3 = *(id *)v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1D26CE478();
    swift_bridgeObjectRetain();
    sub_1D26CD9D4();
    swift_bridgeObjectRelease();
    if ((v2 & 1) != 0)
      return sub_1D26CE46C();
  }
  else
  {
    sub_1D26CE478();
    if ((v2 & 1) != 0)
      return sub_1D26CE46C();
  }
  sub_1D26CE46C();
  return sub_1D26CE46C();
}

uint64_t PowerlogUpdateIdentity.hashValue.getter()
{
  sub_1D26CE460();
  PowerlogUpdateIdentity.hash(into:)();
  return sub_1D26CE49C();
}

void sub_1D268BE54(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1D268BE6C()
{
  sub_1D26CE460();
  PowerlogUpdateIdentity.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D268BED8()
{
  sub_1D26CE460();
  PowerlogUpdateIdentity.hash(into:)();
  return sub_1D26CE49C();
}

id PowerlogControlUpdateIdentity.control.getter()
{
  id *v0;

  return *v0;
}

uint64_t PowerlogControlUpdateIdentity.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void PowerlogControlUpdateIdentity.location.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PowerlogControlUpdateIdentity.description.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  v2 = objc_msgSend(v1, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  PowerlogWidgetLocation.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 0;
}

uint64_t PowerlogControlUpdateIdentity.hash(into:)()
{
  uint64_t v0;
  char v1;
  id v2;

  v1 = *(_BYTE *)(v0 + 32);
  v2 = *(id *)v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
    sub_1D26CE46C();
  return sub_1D26CE46C();
}

uint64_t PowerlogControlUpdateIdentity.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_BYTE *)(v0 + 32);
  sub_1D26CE460();
  v3 = v1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    sub_1D26CE46C();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D268C240()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_BYTE *)(v0 + 32);
  sub_1D26CE460();
  v3 = v1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    sub_1D26CE46C();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

BOOL _s9ChronoKit22PowerlogUpdateIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  _BOOL8 result;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_BYTE *)(a1 + 48);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  v14 = *(_QWORD *)(a2 + 16);
  v15 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 48);
  sub_1D257C290();
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  if (v2 != v5 || v17 != v14)
  {
    v10 = sub_1D26CE3D0();
    result = 0;
    if ((v10 & 1) == 0)
      return result;
  }
  if (!v15)
  {
    if (!v8)
      goto LABEL_14;
    return 0;
  }
  if (!v8)
    return 0;
  if (v16 == v6 && v15 == v8 || (v12 = sub_1D26CE3D0(), result = 0, (v12 & 1) != 0))
  {
LABEL_14:
    if ((v4 & 1) != 0)
    {
      if (!v9)
        return qword_1D26DB450[v3] == 3;
    }
    else if ((v9 & 1) == 0)
    {
      return v3 == v7;
    }
    __asm { BR              X10 }
  }
  return result;
}

BOOL _s9ChronoKit29PowerlogControlUpdateIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  BOOL v10;
  char v11;
  _BOOL8 result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v9 = *(unsigned __int8 *)(a2 + 32);
  sub_1D257C290();
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  v10 = v2 == v6 && v3 == v7;
  if (v10 || (v11 = sub_1D26CE3D0(), result = 0, (v11 & 1) != 0))
  {
    if ((v5 & 1) != 0)
    {
      if (!v9)
        return qword_1D26DB450[v4] == 3;
    }
    else if ((v9 & 1) == 0)
    {
      return v4 == v8;
    }
    __asm { BR              X10 }
  }
  return result;
}

unint64_t sub_1D268C59C()
{
  unint64_t result;

  result = qword_1EFC83650;
  if (!qword_1EFC83650)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogUpdateCost, &type metadata for PowerlogUpdateCost);
    atomic_store(result, (unint64_t *)&qword_1EFC83650);
  }
  return result;
}

unint64_t sub_1D268C5E4()
{
  unint64_t result;

  result = qword_1EFC83658;
  if (!qword_1EFC83658)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogWakeReason, &type metadata for PowerlogWakeReason);
    atomic_store(result, (unint64_t *)&qword_1EFC83658);
  }
  return result;
}

unint64_t sub_1D268C628(uint64_t a1)
{
  unint64_t result;

  result = sub_1D268C64C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D268C64C()
{
  unint64_t result;

  result = qword_1ED96E298;
  if (!qword_1ED96E298)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogUpdateIdentity, &type metadata for PowerlogUpdateIdentity);
    atomic_store(result, (unint64_t *)&qword_1ED96E298);
  }
  return result;
}

unint64_t sub_1D268C694()
{
  unint64_t result;

  result = qword_1ED96E2A0[0];
  if (!qword_1ED96E2A0[0])
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogUpdateIdentity, &type metadata for PowerlogUpdateIdentity);
    atomic_store(result, qword_1ED96E2A0);
  }
  return result;
}

unint64_t sub_1D268C6D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1D268C6FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D268C6FC()
{
  unint64_t result;

  result = qword_1ED96B120;
  if (!qword_1ED96B120)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogControlUpdateIdentity, &type metadata for PowerlogControlUpdateIdentity);
    atomic_store(result, (unint64_t *)&qword_1ED96B120);
  }
  return result;
}

unint64_t sub_1D268C744()
{
  unint64_t result;

  result = qword_1ED96B128;
  if (!qword_1ED96B128)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogControlUpdateIdentity, &type metadata for PowerlogControlUpdateIdentity);
    atomic_store(result, (unint64_t *)&qword_1ED96B128);
  }
  return result;
}

uint64_t dispatch thunk of PowerlogUpdateServicing.timelineUpdated(for:hostIdentity:cost:reason:remainingBudget:executionTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 24))();
}

uint64_t dispatch thunk of PowerlogUpdateServicing.flush()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t getEnumTagSinglePayload for PowerlogWakeReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t initializeWithCopy for PowerlogUpdateIdentity(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PowerlogUpdateIdentity(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for PowerlogUpdateIdentity(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerlogUpdateIdentity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 49))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerlogUpdateIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 49) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t initializeWithCopy for PowerlogControlUpdateIdentity(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PowerlogControlUpdateIdentity(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PowerlogControlUpdateIdentity(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerlogControlUpdateIdentity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerlogControlUpdateIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogControlUpdateIdentity()
{
  return &type metadata for PowerlogControlUpdateIdentity;
}

uint64_t sub_1D268CBE4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE v13[32];
  uint64_t v14;

  v2 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1D25844CC(0, v6, 0);
    v8 = a1 + 32;
    do
    {
      sub_1D2537950(v8, (uint64_t)v13);
      swift_dynamicCast();
      v7 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D25844CC(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v14;
      }
      v10 = *(_QWORD *)(v7 + 16);
      v9 = *(_QWORD *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_1D25844CC(v9 > 1, v10 + 1, 1);
        v7 = v14;
      }
      *(_QWORD *)(v7 + 16) = v10 + 1;
      sub_1D2539ADC((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v10, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
      v8 += 32;
      --v6;
    }
    while (v6);
  }
  return v7;
}

_QWORD *sub_1D268CD5C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD v15[2];

  v1 = v0;
  v2 = sub_1D26CDD40();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v2);
  v4 = sub_1D26CDD88();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v8);
  sub_1D2544658();
  sub_1D26CD0B0();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D8], v4);
  v15[1] = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, v3, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D25369F0((unint64_t *)&qword_1ED96EE28, &qword_1ED96EE20);
  sub_1D26CDFE0();
  v0[2] = sub_1D26CDDB8();
  type metadata accessor for UnfairLock();
  v9 = swift_allocObject();
  v10 = (_DWORD *)swift_slowAlloc();
  *v10 = 0;
  *(_QWORD *)(v9 + 16) = v10;
  v11 = MEMORY[0x1E0DEE9E0];
  v1[3] = v9;
  v1[4] = v11;
  v1[5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E10]), sel_init);
  v12 = (char *)v1 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest;
  v13 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *((_BYTE *)v1 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_processQueueEnqueued) = 0;
  return v1;
}

uint64_t sub_1D268CFAC(void (*a1)(char *, char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  char *v50;
  __int128 v51[2];
  _BYTE v52[48];

  v48 = a4;
  v41 = a3;
  v39 = a2;
  v49 = a1;
  v4 = sub_1D26CD1DC();
  v46 = *(_QWORD *)(v4 - 8);
  v47 = v4;
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CC7A4();
  v42 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v40 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v38 - v9;
  v44 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  v11 = MEMORY[0x1E0C80A78](v44);
  v43 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v50 = (char *)&v38 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CB9DC();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v38 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v38 - v25;
  sub_1D2537078((uint64_t)v49, (uint64_t)v16, &qword_1ED96B1E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
    return sub_1D253703C((uint64_t)v16, &qword_1ED96B1E0);
  v49 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v38 = v26;
  v49(v26, v16, v17);
  sub_1D2538510(v39, (uint64_t)v52);
  v28 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  v28(v24, v26, v17);
  v29 = v42;
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  v30(v10, v41, v6);
  v30(v50, (uint64_t)v10, v6);
  sub_1D2538510((uint64_t)v52, (uint64_t)v51);
  v28(v21, v24, v17);
  v30(v40, (uint64_t)v10, v6);
  v31 = v45;
  sub_1D26CD1B8();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v6);
  v32 = *(void (**)(char *, uint64_t))(v18 + 8);
  v32(v24, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v33 = (uint64_t)v50;
  v34 = (uint64_t)&v50[*(int *)(v44 + 20)];
  sub_1D2538F38(v51, v34);
  v35 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v49((char *)(v34 + *(int *)(v35 + 20)), v21, v17);
  (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v34 + *(int *)(v35 + 24), v31, v47);
  v36 = *(void **)(v48 + 40);
  sub_1D2534120(v33, v43, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  v37 = v36;
  objc_msgSend(v37, sel_addObject_, sub_1D26CE40C());

  swift_unknownObjectRelease();
  sub_1D268D390();
  sub_1D25340E4(v33, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  return ((uint64_t (*)(char *, uint64_t))v32)(v38, v17);
}

void sub_1D268D390()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD aBlock[6];

  v1 = sub_1D26CD074();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CD0C8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 24) + 16));
  if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_processQueueEnqueued) & 1) == 0)
  {
    *(_BYTE *)(v0 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_processQueueEnqueued) = 1;
    v14 = *(_QWORD *)(v0 + 16);
    v9 = swift_allocObject();
    v13 = v2;
    v10 = v9;
    swift_weakInit();
    aBlock[4] = sub_1D2690714;
    aBlock[5] = v10;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D25351AC;
    aBlock[3] = &block_descriptor_16;
    v11 = _Block_copy(aBlock);
    swift_retain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D25369F0((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00);
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v8, v4, v11);
    _Block_release(v11);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v4, v1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1D268D5B0()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D268D604();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D268D604()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  void *v17;
  id v18;
  uint64_t result;
  uint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  os_unfair_lock_s *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD v57[3];
  uint64_t v58;
  uint64_t v59;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v2);
  v52 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96BF50);
  MEMORY[0x1E0C80A78](v4);
  v51 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  v53 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v50 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDD8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v47 - v12;
  v13 = sub_1D26CD128();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = *(void **)(v1 + 16);
  *v16 = v17;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v18 = v17;
  LOBYTE(v17) = sub_1D26CD134();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v17 & 1) != 0)
  {
    v20 = *(_QWORD *)(v1 + 24);
    v21 = *(os_unfair_lock_s **)(v20 + 16);
    swift_retain();
    os_unfair_lock_lock(v21);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_processQueueEnqueued) = 0;
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
    swift_release();
    v22 = 0;
    v23 = (uint64_t)v54;
    v48 = v6;
    v49 = v1;
    v24 = (uint64_t)v50;
    while (1)
    {
      v25 = *(os_unfair_lock_s **)(v20 + 16);
      swift_retain();
      os_unfair_lock_lock(v25);
      v26 = (uint64_t)objc_msgSend(*(id *)(v1 + 40), sel_count);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
      result = swift_release();
      if (v26 < 1)
        break;
      v27 = *(os_unfair_lock_s **)(v20 + 16);
      swift_retain();
      os_unfair_lock_lock(v27);
      sub_1D268DA80(v1, v23);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
      swift_release();
      sub_1D2537078(v23, (uint64_t)v11, &qword_1ED96CDD8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v11, 1, v6) == 1)
      {
        sub_1D253703C(v23, &qword_1ED96CDD8);
        return sub_1D253703C((uint64_t)v11, &qword_1ED96CDD8);
      }
      sub_1D2539ADC((uint64_t)v11, v24, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
      v28 = (_QWORD *)(v24 + *(int *)(v6 + 20));
      v29 = v28[3];
      v30 = v28[4];
      __swift_project_boxed_opaque_existential_0(v28, v29);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v30 + 24))(v57, v29, v30);
      v32 = v58;
      v31 = v59;
      v56 = __swift_project_boxed_opaque_existential_0(v57, v58);
      v34 = v28[3];
      v33 = v28[4];
      __swift_project_boxed_opaque_existential_0(v28, v34);
      v35 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v34, v33);
      v36 = (char *)v28 + *(int *)(type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0) + 20);
      v37 = sub_1D26CB9DC();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
      v55 = v22;
      v40 = v11;
      v41 = v52;
      v39(v52, v36, v37);
      v42 = v37;
      v1 = v49;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v41, 0, 1, v42);
      v43 = (uint64_t)v51;
      v44 = v32;
      v6 = v48;
      (*(void (**)(void *, char *, uint64_t, uint64_t, uint64_t))(v31 + 8))(v35, v41, v24, v44, v31);
      v23 = (uint64_t)v54;

      v45 = (uint64_t)v41;
      v11 = v40;
      sub_1D253703C(v45, &qword_1ED96B1E0);
      v46 = *(os_unfair_lock_s **)(v20 + 16);
      swift_retain();
      os_unfair_lock_lock(v46);
      v22 = v55;
      sub_1D268DC44(v1, v43);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v20 + 16));
      swift_release();
      sub_1D253703C(v23, &qword_1ED96CDD8);
      sub_1D253703C(v43, (uint64_t *)&unk_1ED96BF50);
      sub_1D25340E4(v24, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v57);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D268DA80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD v15[2];
  _BYTE v16[24];
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDD8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v15 - v8;
  if (objc_msgSend(*(id *)(a1 + 40), sel_firstObject))
  {
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
  }
  sub_1D25384CC((uint64_t)v15, (uint64_t)v16, &qword_1ED96FCE0);
  if (v17)
  {
    v10 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
    v11 = swift_dynamicCast();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, v11 ^ 1u, 1, v10);
  }
  else
  {
    sub_1D253703C((uint64_t)v16, &qword_1ED96FCE0);
    v12 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v9, 1, 1, v12);
  }
  sub_1D25384CC((uint64_t)v9, (uint64_t)v7, &qword_1ED96CDD8);
  v13 = a1 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest;
  swift_beginAccess();
  sub_1D26906A8((uint64_t)v7, v13);
  swift_endAccess();
  return sub_1D2537078(v13, a2, &qword_1ED96CDD8);
}

uint64_t sub_1D268DC44(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;

  v27 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96BF50);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDD8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v28 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - v12;
  v14 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v27 - v19;
  v21 = a1;
  v22 = a1 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest;
  swift_beginAccess();
  sub_1D2537078(v22, (uint64_t)v13, &qword_1ED96CDD8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    return sub_1D253703C((uint64_t)v13, &qword_1ED96CDD8);
  sub_1D2539ADC((uint64_t)v13, (uint64_t)v20, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  sub_1D2534120((uint64_t)&v20[*(int *)(v14 + 20)], (uint64_t)v8, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1D2537078(v27, (uint64_t)v5, (uint64_t *)&unk_1ED96BF50);
  swift_beginAccess();
  sub_1D25E5880((uint64_t)v5, v8);
  swift_endAccess();
  v24 = *(void **)(v21 + 40);
  sub_1D2534120((uint64_t)v20, (uint64_t)v18, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  v25 = v24;
  objc_msgSend(v25, sel_removeObject_, sub_1D26CE40C());

  swift_unknownObjectRelease();
  sub_1D25340E4((uint64_t)v20, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  v26 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v28, 1, 1, v14);
  swift_beginAccess();
  sub_1D26906A8(v26, v22);
  return swift_endAccess();
}

uint64_t sub_1D268DF2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  os_unfair_lock_s *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  os_unfair_lock_s *v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD v81[3];
  uint64_t v82;
  uint64_t v83;

  v79 = a1;
  v80 = a3;
  v78 = a4;
  v6 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v73 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v70 = (uint64_t *)((char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = MEMORY[0x1E0C80A78](v7);
  v71 = (uint64_t)&v66 - v10;
  MEMORY[0x1E0C80A78](v9);
  v72 = (char *)&v66 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96BF50);
  v13 = MEMORY[0x1E0C80A78](v12);
  v69 = (uint64_t)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v76 = (char *)&v66 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v66 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v66 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B280);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDC0);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v66 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v66 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v66 - v32;
  v34 = sub_1D26CC7A4();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  v75 = a2;
  v36(v24, a2, v34);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v24, 0, 1, v34);
  sub_1D268E71C(v79, v80, (uint64_t)v24, (uint64_t)v33);
  sub_1D253703C((uint64_t)v24, &qword_1ED96B280);
  v37 = *(_QWORD *)(v4 + 24);
  v38 = *(os_unfair_lock_s **)(v37 + 16);
  swift_retain();
  os_unfair_lock_lock(v38);
  v77 = v4;
  sub_1D268E4FC((uint64_t)v33, v4, (uint64_t)v21);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
  swift_release();
  sub_1D2537078((uint64_t)v21, (uint64_t)v19, (uint64_t *)&unk_1ED96BF50);
  v39 = sub_1D26CD56C();
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v19, 1, v39) == 1)
  {
    v41 = v72;
    v67 = v28;
    v68 = v21;
    sub_1D253703C((uint64_t)v19, (uint64_t *)&unk_1ED96BF50);
    sub_1D2537078((uint64_t)v33, (uint64_t)v31, &qword_1ED96CDC0);
    v42 = v74;
    v73 = *(_QWORD *)(v73 + 48);
    v43 = ((uint64_t (*)(char *, uint64_t, uint64_t))v73)(v31, 1, v74);
    v44 = v77;
    v45 = v79;
    if (v43 == 1)
    {
      sub_1D253703C((uint64_t)v31, &qword_1ED96CDC0);
    }
    else
    {
      sub_1D2539ADC((uint64_t)v31, (uint64_t)v41, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      v48 = *(os_unfair_lock_s **)(v37 + 16);
      swift_retain();
      os_unfair_lock_lock(v48);
      sub_1D268EC2C(v44, v41);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
      swift_release();
      sub_1D25340E4((uint64_t)v41, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    }
    v49 = v45[3];
    v50 = v45[4];
    __swift_project_boxed_opaque_existential_0(v45, v49);
    v51 = v42;
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v50 + 24))(v81, v49, v50);
    v52 = v82;
    v53 = v83;
    __swift_project_boxed_opaque_existential_0(v81, v82);
    v55 = v45[3];
    v54 = v45[4];
    __swift_project_boxed_opaque_existential_0(v45, v55);
    v56 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 8))(v55, v54);
    v57 = (uint64_t)v76;
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8))(v56, v80, v75, v52, v53);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    v58 = (uint64_t)v67;
    sub_1D2537078((uint64_t)v33, (uint64_t)v67, &qword_1ED96CDC0);
    v59 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v73)(v58, 1, v51);
    v60 = v78;
    v61 = (uint64_t)v68;
    if (v59 == 1)
    {
      sub_1D253703C((uint64_t)v68, (uint64_t *)&unk_1ED96BF50);
      sub_1D253703C((uint64_t)v33, &qword_1ED96CDC0);
    }
    else
    {
      v62 = v71;
      sub_1D2539ADC(v58, v71, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      v63 = *(os_unfair_lock_s **)(v37 + 16);
      swift_retain();
      os_unfair_lock_lock(v63);
      v64 = v70;
      sub_1D2534120(v62, (uint64_t)v70, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      v65 = v69;
      sub_1D2537078(v57, v69, (uint64_t *)&unk_1ED96BF50);
      swift_beginAccess();
      sub_1D25E5880(v65, v64);
      swift_endAccess();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
      swift_release();
      sub_1D253703C(v61, (uint64_t *)&unk_1ED96BF50);
      sub_1D25340E4(v62, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      v58 = (uint64_t)v33;
    }
    sub_1D253703C(v58, &qword_1ED96CDC0);
    return sub_1D25384CC(v57, v60, (uint64_t *)&unk_1ED96BF50);
  }
  else
  {
    sub_1D253703C((uint64_t)v21, (uint64_t *)&unk_1ED96BF50);
    sub_1D253703C((uint64_t)v33, &qword_1ED96CDC0);
    v46 = v78;
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v78, v19, v39);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56))(v46, 0, 1, v39);
  }
}

uint64_t sub_1D268E4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDC0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D2537078(a1, (uint64_t)v8, &qword_1ED96CDC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1D253703C((uint64_t)v8, &qword_1ED96CDC0);
    v13 = sub_1D26CD56C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
  }
  else
  {
    sub_1D2539ADC((uint64_t)v8, (uint64_t)v12, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    swift_beginAccess();
    v15 = *(_QWORD *)(a2 + 32);
    if (*(_QWORD *)(v15 + 16))
    {
      swift_bridgeObjectRetain();
      v16 = sub_1D2589364(v12);
      if ((v17 & 1) != 0)
      {
        v18 = v16;
        v19 = *(_QWORD *)(v15 + 56);
        v20 = sub_1D26CD56C();
        v21 = *(_QWORD *)(v20 - 8);
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(a3, v19 + *(_QWORD *)(v21 + 72) * v18, v20);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(a3, 0, 1, v20);
      }
      else
      {
        v23 = sub_1D26CD56C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a3, 1, 1, v23);
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = sub_1D26CD56C();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a3, 1, 1, v22);
    }
    return sub_1D25340E4((uint64_t)v12, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  }
}

uint64_t sub_1D268E71C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  os_unfair_lock_s *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  _QWORD v54[4];

  v44 = a3;
  v47 = a4;
  v43 = sub_1D26CD1DC();
  v42 = *(_QWORD *)(v43 - 8);
  MEMORY[0x1E0C80A78](v43);
  v41 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B280);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_1D26CC7A4();
  v45 = *(_QWORD *)(v46 - 8);
  v10 = MEMORY[0x1E0C80A78](v46);
  v39 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v38 = (char *)&v37 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D26CB9DC();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v37 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v37 - v20;
  v22 = a1[3];
  v23 = a1[4];
  v40 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v22);
  v24 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v26 = *(os_unfair_lock_s **)(v25 + 16);
  swift_retain();
  os_unfair_lock_lock(v26);
  sub_1D2537078(a2, (uint64_t)v15, &qword_1ED96B1E0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1D253703C((uint64_t)v15, &qword_1ED96B1E0);
    v27 = (uint64_t)&v24[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
    swift_beginAccess();
    sub_1D2537078(v27, (uint64_t)&v51, &qword_1ED96BF40);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v15, v16);
    sub_1D26831B4((uint64_t)&v48);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    if (v49 == 1)
    {
      sub_1D253703C((uint64_t)&v48, &qword_1ED96C7F0);
      v51 = 0u;
      v52 = 0u;
      v53 = 0;
    }
    else
    {
      sub_1D25384CC((uint64_t)&v48, (uint64_t)&v51, &qword_1ED96BF40);
      sub_1D253703C((uint64_t)&v50, &qword_1ED96BF40);
    }
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v25 + 16));

  swift_release();
  if (!*((_QWORD *)&v52 + 1))
  {
    sub_1D253703C((uint64_t)&v51, &qword_1ED96BF40);
    goto LABEL_10;
  }
  sub_1D2538F38(&v51, (uint64_t)v54);
  sub_1D2537078(v44, (uint64_t)v9, &qword_1ED96B280);
  v28 = v45;
  v29 = v46;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v9, 1, v46) == 1)
  {
    sub_1D253703C((uint64_t)v9, &qword_1ED96B280);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
LABEL_10:
    v30 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v47, 1, 1, v30);
  }
  v32 = v38;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v38, v9, v29);
  sub_1D2538510((uint64_t)v40, (uint64_t)&v48);
  __swift_project_boxed_opaque_existential_0(v54, v54[3]);
  v33 = v37;
  sub_1D26CD3E0();
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v39, v32, v29);
  v34 = v41;
  sub_1D26CD1B8();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v32, v29);
  v35 = v47;
  sub_1D2538F38(&v48, v47);
  v36 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v35 + *(int *)(v36 + 20), v33, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v35 + *(int *)(v36 + 24), v34, v43);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
}

uint64_t sub_1D268EC2C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  void *v35;
  id v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v41 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v4 = MEMORY[0x1E0C80A78](v41);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v38 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v46 = (uint64_t)&v38 - v11;
  MEMORY[0x1E0C80A78](v10);
  v45 = (uint64_t)&v38 - v12;
  v47 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
  v13 = *(_QWORD *)(v47 - 8);
  v14 = MEMORY[0x1E0C80A78](v47);
  v39 = (uint64_t)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v48 = (uint64_t)&v38 - v16;
  v40 = a1;
  v17 = objc_msgSend(*(id *)(a1 + 40), sel_array);
  v18 = sub_1D26CDAF4();

  v19 = sub_1D268CBE4(v18);
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v38 = v19;
    v21 = v19 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v42 = *(_QWORD *)(v13 + 72);
    v43 = v9;
    v22 = v48;
    v44 = v6;
    do
    {
      sub_1D2534120(v21, v22, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
      v25 = (_QWORD *)(v22 + *(int *)(v47 + 20));
      v27 = v25[3];
      v26 = v25[4];
      __swift_project_boxed_opaque_existential_0(v25, v27);
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v26 + 16))((char *)&v49 + 1, v27, v26);
      LODWORD(v26) = BYTE1(v49);
      v29 = a2[3];
      v28 = a2[4];
      __swift_project_boxed_opaque_existential_0(a2, v29);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v28 + 16))(&v49, v29, v28);
      v30 = v49;
      v31 = v45;
      sub_1D2534120((uint64_t)v25, v45, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      v32 = v46;
      sub_1D2534120((uint64_t)a2, v46, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      if ((_DWORD)v26 == v30)
      {
        v33 = sub_1D26CD1AC();
        sub_1D25340E4(v32, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        sub_1D25340E4(v31, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        v23 = (uint64_t)v43;
        sub_1D2534120((uint64_t)v25, (uint64_t)v43, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        v24 = (uint64_t)v44;
        sub_1D2534120((uint64_t)a2, (uint64_t)v44, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        if ((v33 & 1) != 0)
        {
          v34 = sub_1D26CB9A0();
          sub_1D25340E4(v24, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
          sub_1D25340E4(v23, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
          v22 = v48;
          if ((v34 & 1) != 0)
          {
            v35 = *(void **)(v40 + 40);
            sub_1D2534120(v48, v39, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
            v36 = v35;
            v22 = v48;
            objc_msgSend(v36, sel_removeObject_, sub_1D26CE40C(), v38);

            swift_unknownObjectRelease();
          }
          goto LABEL_5;
        }
      }
      else
      {
        sub_1D25340E4(v32, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        sub_1D25340E4(v31, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        v23 = (uint64_t)v43;
        sub_1D2534120((uint64_t)v25, (uint64_t)v43, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
        v24 = (uint64_t)v44;
        sub_1D2534120((uint64_t)a2, (uint64_t)v44, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      }
      sub_1D25340E4(v24, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      sub_1D25340E4(v23, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
      v22 = v48;
LABEL_5:
      sub_1D25340E4(v22, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
      v21 += v42;
      --v20;
    }
    while (v20);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D268F030()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest, &qword_1ED96CDD8);
  return swift_deallocClassInstance();
}

uint64_t sub_1D268F088()
{
  return type metadata accessor for LiveWidgetEntryViewableEntryCache(0);
}

uint64_t type metadata accessor for LiveWidgetEntryViewableEntryCache(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96CDE8);
}

void sub_1D268F0A4()
{
  unint64_t v0;

  sub_1D268F144();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1D268F144()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED96CDE0)
  {
    type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(255);
    v0 = sub_1D26CDF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED96CDE0);
  }
}

uint64_t type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96CDC8);
}

_QWORD *sub_1D268F1AC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)v4 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_1D26CB9DC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)v4 + v12;
    v14 = (uint64_t)a2 + v12;
    v15 = sub_1D26CD1DC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return v4;
}

uint64_t sub_1D268F288(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_1D26CD1DC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_1D268F2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D26CD1DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t *sub_1D268F3A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  __swift_assign_boxed_opaque_existential_1(a1, a2);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1D26CD1DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1D268F434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D26CD1DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1D268F4D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D26CD1DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1D268F578()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D268F584(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D26CB9DC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = sub_1D26CD1DC();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1D268F624()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D268F630(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v8 = sub_1D26CB9DC();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = sub_1D26CD1DC();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96CDB0);
}

uint64_t sub_1D268F6E0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CB9DC();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CD1DC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_1D268F770(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CC7A4();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = &a1[v8];
    v10 = (char *)a2 + v8;
    v11 = *(_OWORD *)(v10 + 24);
    *(_OWORD *)&a1[v8 + 24] = v11;
    (**(void (***)(char *, char *))(v11 - 8))(&a1[v8], v10);
    v12 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    v13 = *(int *)(v12 + 20);
    v14 = &v9[v13];
    v15 = &v10[v13];
    v16 = sub_1D26CB9DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = *(int *)(v12 + 24);
    v18 = &v9[v17];
    v19 = &v10[v17];
    v20 = sub_1D26CD1DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return a1;
}

uint64_t sub_1D268F884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  __swift_destroy_boxed_opaque_existential_1(v5);
  v6 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v7 = v5 + *(int *)(v6 + 20);
  v8 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = v5 + *(int *)(v6 + 24);
  v10 = sub_1D26CD1DC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

uint64_t sub_1D268F928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(v9 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v10;
  (**(void (***)(uint64_t, uint64_t))(v10 - 8))(a1 + v7, v9);
  v11 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v12 = *(int *)(v11 + 20);
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  v16 = *(int *)(v11 + 24);
  v17 = v8 + v16;
  v18 = v9 + v16;
  v19 = sub_1D26CD1DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t sub_1D268FA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  v6 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + v7), v9);
  v10 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v11 = *(int *)(v10 + 20);
  v12 = v8 + v11;
  v13 = (char *)v9 + v11;
  v14 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = *(int *)(v10 + 24);
  v16 = v8 + v15;
  v17 = (char *)v9 + v15;
  v18 = sub_1D26CD1DC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

uint64_t sub_1D268FAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_OWORD *)(a2 + v7 + 16);
  *(_OWORD *)v8 = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(a2 + v7 + 32);
  v11 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v12 = *(int *)(v11 + 20);
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = *(int *)(v11 + 24);
  v17 = v8 + v16;
  v18 = v9 + v16;
  v19 = sub_1D26CD1DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t sub_1D268FBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  __swift_destroy_boxed_opaque_existential_1(a1 + v7);
  v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(_QWORD *)(v8 + 32) = *(_QWORD *)(v9 + 32);
  v11 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v12 = *(int *)(v11 + 20);
  v13 = v8 + v12;
  v14 = v9 + v12;
  v15 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  v16 = *(int *)(v11 + 24);
  v17 = v8 + v16;
  v18 = v9 + v16;
  v19 = sub_1D26CD1DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  return a1;
}

uint64_t sub_1D268FC9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D268FCA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1D26CC7A4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1D268FD1C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D268FD28(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1D26CC7A4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D268FDA4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CC7A4();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D268FE28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  sub_1D26CE460();
  v3 = (_QWORD *)(v1 + *(int *)(a1 + 20));
  type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  sub_1D26CD1DC();
  sub_1D25369B0(&qword_1ED96D4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC70]);
  sub_1D26CD8D8();
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_0(v3, v4);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 16))(&v7, v4, v5);
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D268FF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3 = (_QWORD *)(v2 + *(int *)(a2 + 20));
  type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  sub_1D26CD1DC();
  sub_1D25369B0(&qword_1ED96D4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC70]);
  sub_1D26CD8D8();
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_0(v3, v4);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 16))(&v7, v4, v5);
  return sub_1D26CE46C();
}

uint64_t sub_1D269002C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  sub_1D26CE460();
  v4 = (_QWORD *)(v2 + *(int *)(a2 + 20));
  type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  sub_1D26CD1DC();
  sub_1D25369B0(&qword_1ED96D4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC70]);
  sub_1D26CD8D8();
  v5 = v4[3];
  v6 = v4[4];
  __swift_project_boxed_opaque_existential_0(v4, v5);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 16))(&v8, v5, v6);
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D2690130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D2690478((_QWORD *)(a1 + *(int *)(a3 + 20)), (_QWORD *)(a2 + *(int *)(a3 + 20)));
}

uint64_t sub_1D2690140()
{
  return sub_1D25369B0((unint64_t *)&unk_1EFC83660, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest, (uint64_t)&unk_1D26DB538);
}

uint64_t sub_1D269016C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1D26CE460();
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  sub_1D26CD1DC();
  sub_1D25369B0(&qword_1ED96D4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC70]);
  sub_1D26CD8D8();
  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_0(v0, v1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 16))(&v4, v1, v2);
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D2690264()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  sub_1D26CD1DC();
  sub_1D25369B0(&qword_1ED96D4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC70]);
  sub_1D26CD8D8();
  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_0(v0, v1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 16))(&v4, v1, v2);
  return sub_1D26CE46C();
}

uint64_t sub_1D2690354()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_1D26CE460();
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  sub_1D26CD1DC();
  sub_1D25369B0(&qword_1ED96D4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC70]);
  sub_1D26CD8D8();
  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_0(v0, v1);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v2 + 16))(&v4, v1, v2);
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D269044C()
{
  return sub_1D25369B0(&qword_1ED96CDA8, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey, (uint64_t)&unk_1D26DB5A0);
}

uint64_t sub_1D2690478(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  char v22;
  uint64_t v24;
  uint64_t v25;

  v24 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v4 = MEMORY[0x1E0C80A78](v24);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v24 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v24 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v24 - v13;
  v16 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v16);
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v15 + 16))((char *)&v25 + 1, v16, v15);
  v17 = BYTE1(v25);
  v18 = a2[3];
  v19 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 16))(&v25, v18, v19);
  v20 = v25;
  sub_1D2534120((uint64_t)a1, (uint64_t)v14, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1D2534120((uint64_t)a2, (uint64_t)v12, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  if (v17 != v20)
  {
    sub_1D25340E4((uint64_t)v12, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    sub_1D25340E4((uint64_t)v14, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    sub_1D2534120((uint64_t)a1, (uint64_t)v9, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    sub_1D2534120((uint64_t)a2, (uint64_t)v6, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    goto LABEL_5;
  }
  v21 = sub_1D26CD1AC();
  sub_1D25340E4((uint64_t)v12, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1D25340E4((uint64_t)v14, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1D2534120((uint64_t)a1, (uint64_t)v9, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1D2534120((uint64_t)a2, (uint64_t)v6, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  if ((v21 & 1) == 0)
  {
LABEL_5:
    v22 = 0;
    goto LABEL_6;
  }
  v22 = sub_1D26CB9A0();
LABEL_6:
  sub_1D25340E4((uint64_t)v6, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  sub_1D25340E4((uint64_t)v9, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  return v22 & 1;
}

uint64_t sub_1D26906A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D26906F0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2690714()
{
  return sub_1D268D5B0();
}

uint64_t InteractionAuthenticationPolicy.init(actionPolicy:)@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  char v7;

  v4 = sub_1D26CD698();
  v5 = *(_QWORD *)(v4 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 88))(a1, v4);
  if ((_DWORD)result == *MEMORY[0x1E0CF09A8])
    goto LABEL_7;
  if ((_DWORD)result != *MEMORY[0x1E0CF09A0])
  {
    if ((_DWORD)result == *MEMORY[0x1E0CF0998])
    {
      v7 = 1;
      goto LABEL_8;
    }
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
LABEL_7:
    v7 = 0;
    goto LABEL_8;
  }
  v7 = 2;
LABEL_8:
  *a2 = v7;
  return result;
}

BOOL static InteractionSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t InteractionSource.hash(into:)()
{
  return sub_1D26CE46C();
}

uint64_t sub_1D269080C()
{
  uint64_t v0;

  v0 = sub_1D26CC09C();
  __swift_allocate_value_buffer(v0, qword_1EFC83670);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EFC83670);
  return sub_1D26CC090();
}

void sub_1D2690888(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1D26908DC()
{
  void *v0;
  uint64_t v1;
  id v2;
  id v3;

  v2 = v0;
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v2, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2691ACC(v0, 0);
  return v1 - 10;
}

void sub_1D2690ABC()
{
  uint64_t v0;

  sub_1D2690888(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

_QWORD *InteractiveWidgetActionRunner.__allocating_init(extensionIdentity:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  objc_class *v8;
  char *v9;
  void (**v10)(void *);
  objc_super v12;

  v6 = (_QWORD *)swift_allocObject();
  v6[2] = 0;
  v6[3] = 0;
  v6[4] = a1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  v8 = (objc_class *)type metadata accessor for InteractiveWidgetActionRunner.Delegate();
  v9 = (char *)objc_allocWithZone(v8);
  v10 = (void (**)(void *))&v9[OBJC_IVAR____TtCC9ChronoKit29InteractiveWidgetActionRunnerP33_1C4DBC0C4C60E41750913BD55B2D37FB8Delegate_completion];
  *v10 = sub_1D2690CF0;
  v10[1] = (void (*)(void *))v7;
  v12.receiver = v9;
  v12.super_class = v8;
  swift_retain();
  v6[5] = objc_msgSendSuper2(&v12, sel_init);
  v6[6] = a2;
  v6[7] = a3;
  return v6;
}

_QWORD *InteractiveWidgetActionRunner.init(extensionIdentity:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  objc_class *v7;
  char *v8;
  void (**v9)(void *);
  objc_super v11;

  v3[2] = 0;
  v3[3] = 0;
  v3[4] = a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v7 = (objc_class *)type metadata accessor for InteractiveWidgetActionRunner.Delegate();
  v8 = (char *)objc_allocWithZone(v7);
  v9 = (void (**)(void *))&v8[OBJC_IVAR____TtCC9ChronoKit29InteractiveWidgetActionRunnerP33_1C4DBC0C4C60E41750913BD55B2D37FB8Delegate_completion];
  *v9 = sub_1D2691C5C;
  v9[1] = (void (*)(void *))v6;
  v11.receiver = v8;
  v11.super_class = v7;
  swift_retain();
  v3[5] = objc_msgSendSuper2(&v11, sel_init);
  v3[6] = a2;
  v3[7] = a3;
  return v3;
}

void sub_1D2690C44(void *a1, void (*a2)(void *))
{
  void *v4;
  uint64_t v5;
  id v6;
  id v7;

  if (a1)
  {
    sub_1D26917AC();
    v4 = (void *)swift_allocError();
    *(_QWORD *)v5 = a1;
    *(_BYTE *)(v5 + 8) = 1;
  }
  else
  {
    v4 = 0;
  }
  v6 = a1;
  v7 = a1;
  a2(v4);

}

uint64_t sub_1D2690CCC()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D2690CF0(void *a1)
{
  uint64_t v1;

  sub_1D2690C44(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t type metadata accessor for InteractiveWidgetActionRunner.Delegate()
{
  return objc_opt_self();
}

void sub_1D2690D18(void *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void (*v21)(void *);
  void *v22;
  uint64_t v23;
  void (*v24)(void *);
  void *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  void (*v29)(void *);
  void *v30;
  void *v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  id v35;
  id v36;
  NSObject *v37;
  os_log_type_t v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  id v51;
  NSObject *v52;
  int v53;
  _BOOL4 v54;
  uint64_t v55;
  id v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  void *v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  id v65;
  void *v66;
  id v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t v70;
  os_log_t v71;
  uint64_t v72;
  void *v73;
  void *v74;
  id v75;
  void *v76;
  void *v77;
  id v78;
  _QWORD v79[3];
  _QWORD *v80;
  int v81;
  uint64_t v82;
  os_log_t v83;
  uint64_t v84;
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88[3];
  uint64_t v89;
  char v90;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a2;
  v16 = *a3;
  objc_opt_self();
  v17 = swift_dynamicCastObjCClass();
  if (!v17)
  {
    v24 = (void (*)(void *))v4[6];
    sub_1D26917AC();
    v25 = (void *)swift_allocError();
    *(_QWORD *)v26 = a1;
    *(_BYTE *)(v26 + 8) = 0;
    v27 = a1;
    swift_retain();
    v24(v25);

    goto LABEL_5;
  }
  v18 = (void *)v17;
  v19 = (void *)v4[4];
  v20 = a1;
  if ((objc_msgSend(v19, sel_isRemote) & 1) != 0)
  {
    v21 = (void (*)(void *))v4[6];
    sub_1D26917AC();
    v22 = (void *)swift_allocError();
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 3;
    swift_retain();
    v21(v22);

LABEL_5:
    swift_release();
    return;
  }
  v28 = v4[4] + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  sub_1D2647B54(v28, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D26917F0((uint64_t)v10);
    v29 = (void (*)(void *))v4[6];
    v30 = (void *)v4[4];
    sub_1D26917AC();
    v31 = (void *)swift_allocError();
    *(_QWORD *)v32 = v30;
    *(_BYTE *)(v32 + 8) = 2;
    swift_retain();
    v33 = v30;
    v29(v31);

    swift_release();
    if (qword_1EFC82208 != -1)
      swift_once();
    v34 = sub_1D26CC09C();
    __swift_project_value_buffer(v34, (uint64_t)qword_1EFC83670);
    v35 = v20;
    swift_retain_n();
    v36 = v35;
    v37 = sub_1D26CC084();
    v38 = sub_1D26CDCEC();
    if (os_log_type_enabled(v37, v38))
    {
      v39 = swift_slowAlloc();
      v40 = (_QWORD *)swift_slowAlloc();
      v87 = swift_slowAlloc();
      v88[0] = v87;
      *(_DWORD *)v39 = 136446466;
      v41 = objc_msgSend(v18, sel_identifier);
      v42 = sub_1D26CD938();
      v44 = v43;

      v89 = sub_1D2537880(v42, v44, v88);
      sub_1D26CDF50();

      swift_bridgeObjectRelease();
      *(_WORD *)(v39 + 12) = 2114;
      v45 = (void *)v4[4];
      v89 = (uint64_t)v45;
      v46 = v45;
      sub_1D26CDF50();
      *v40 = v45;
      swift_release_n();
      _os_log_impl(&dword_1D2531000, v37, v38, "Unable to execute LNAction %{public}s for invalid identity: %{public}@", (uint8_t *)v39, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v40, -1, -1);
      v47 = v87;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v47, -1, -1);
      MEMORY[0x1D823A5E0](v39, -1, -1);

    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v48 = 9;
    if (v15 < 2)
      v48 = 2;
    v84 = v48;
    if (qword_1EFC82208 != -1)
      swift_once();
    v85 = v16;
    v49 = sub_1D26CC09C();
    __swift_project_value_buffer(v49, (uint64_t)qword_1EFC83670);
    v50 = v20;
    swift_retain_n();
    v51 = v50;
    v52 = sub_1D26CC084();
    v53 = sub_1D26CDCE0();
    v54 = os_log_type_enabled(v52, (os_log_type_t)v53);
    v86 = v51;
    v87 = (uint64_t)v14;
    if (v54)
    {
      v81 = v53;
      v83 = v52;
      v55 = swift_slowAlloc();
      v80 = (_QWORD *)swift_slowAlloc();
      v82 = swift_slowAlloc();
      v88[0] = v82;
      *(_DWORD *)v55 = 136315906;
      v79[1] = v55 + 4;
      v56 = objc_msgSend(v18, sel_identifier);
      v57 = sub_1D26CD938();
      v59 = v58;

      v89 = sub_1D2537880(v57, v59, v88);
      v79[2] = &v90;
      sub_1D26CDF50();

      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 12) = 2080;
      v60 = objc_msgSend(v18, sel_mangledTypeName);
      if (v60)
      {
        v61 = v60;
        v62 = sub_1D26CD938();
        v64 = v63;

      }
      else
      {
        v64 = 0xE200000000000000;
        v62 = 11565;
      }
      v89 = sub_1D2537880(v62, v64, v88);
      sub_1D26CDF50();
      v65 = v86;

      swift_bridgeObjectRelease();
      *(_WORD *)(v55 + 22) = 2112;
      v66 = (void *)v4[4];
      v89 = (uint64_t)v66;
      v67 = v66;
      sub_1D26CDF50();
      v68 = v80;
      *v80 = v66;
      swift_release_n();
      *(_WORD *)(v55 + 32) = 2080;
      LOBYTE(v89) = v15;
      v69 = sub_1D26CD98C();
      v89 = sub_1D2537880(v69, v70, v88);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v71 = v83;
      _os_log_impl(&dword_1D2531000, v83, (os_log_type_t)v81, "Started executing LNAction %s(%s) in %@ from %s.", (uint8_t *)v55, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v68, -1, -1);
      v72 = v82;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v72, -1, -1);
      MEMORY[0x1D823A5E0](v55, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_1D26CBC88();
    v73 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v74 = (void *)v4[4];
    swift_beginAccess();
    v75 = v74;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    sub_1D26CBC88();
    v76 = (void *)sub_1D26CD914();
    swift_endAccess();
    swift_bridgeObjectRelease();

    swift_beginAccess();
    if (v4[3])
    {
      swift_bridgeObjectRetain();
      v77 = (void *)sub_1D26CD914();
      swift_bridgeObjectRelease();
    }
    else
    {
      v77 = 0;
    }
    v78 = objc_msgSend((id)objc_opt_self(), sel_newClientWithLinkAction_appBundleIdentifier_extensionBundleIdentifier_runSource_launchOriginOverride_authenticationPolicy_, v18, v73, v76, v84, v77, v85);

    objc_msgSend(v78, sel_setDelegate_, v4[5]);
    objc_msgSend(v78, sel_start);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v87, v11);
  }
}

id sub_1D26916F4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveWidgetActionRunner.Delegate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t InteractiveWidgetActionRunner.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return v0;
}

uint64_t InteractiveWidgetActionRunner.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1D26917AC()
{
  unint64_t result;

  result = qword_1EFC83690;
  if (!qword_1EFC83690)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DB7F8, &type metadata for InteractiveWidgetActionRunner.Errors);
    atomic_store(result, (unint64_t *)&qword_1EFC83690);
  }
  return result;
}

uint64_t sub_1D26917F0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D2691834()
{
  unint64_t result;

  result = qword_1EFC83698;
  if (!qword_1EFC83698)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for InteractionAuthenticationPolicy, &type metadata for InteractionAuthenticationPolicy);
    atomic_store(result, (unint64_t *)&qword_1EFC83698);
  }
  return result;
}

unint64_t sub_1D269187C()
{
  unint64_t result;

  result = qword_1EFC836A0;
  if (!qword_1EFC836A0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for InteractionSource, &type metadata for InteractionSource);
    atomic_store(result, (unint64_t *)&qword_1EFC836A0);
  }
  return result;
}

uint64_t sub_1D26918C0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for InteractionAuthenticationPolicy()
{
  return &type metadata for InteractionAuthenticationPolicy;
}

uint64_t _s9ChronoKit31InteractionAuthenticationPolicyOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D2691970 + 4 * byte_1D26DB615[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D26919A4 + 4 * byte_1D26DB610[v4]))();
}

uint64_t sub_1D26919A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D26919AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D26919B4);
  return result;
}

uint64_t sub_1D26919C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D26919C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D26919CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D26919D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InteractionSource()
{
  return &type metadata for InteractionSource;
}

uint64_t type metadata accessor for InteractiveWidgetActionRunner()
{
  return objc_opt_self();
}

uint64_t method lookup function for InteractiveWidgetActionRunner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.launchOriginOverride.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.launchOriginOverride.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.launchOriginOverride.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.__allocating_init(extensionIdentity:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of InteractiveWidgetActionRunner.start(lnAction:source:authenticationPolicy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t initializeBufferWithCopyOfBuffer for InteractiveWidgetActionRunner.Errors(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1D2691A98(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

id sub_1D2691A98(id result, unsigned __int8 a2)
{
  if (a2 <= 2u)
    return result;
  return result;
}

void destroy for InteractiveWidgetActionRunner.Errors(uint64_t a1)
{
  sub_1D2691ACC(*(id *)a1, *(_BYTE *)(a1 + 8));
}

void sub_1D2691ACC(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u)

}

uint64_t assignWithCopy for InteractiveWidgetActionRunner.Errors(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1D2691A98(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1D2691ACC(v5, v6);
  return a1;
}

uint64_t assignWithTake for InteractiveWidgetActionRunner.Errors(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1D2691ACC(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractiveWidgetActionRunner.Errors(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InteractiveWidgetActionRunner.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D2691C08(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1D2691C20(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for InteractiveWidgetActionRunner.Errors()
{
  return &type metadata for InteractiveWidgetActionRunner.Errors;
}

uint64_t sub_1D2691C60(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1D258430C(0, v1, 0);
    v4 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8) - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      swift_getKeyPath();
      swift_getAtKeyPath();
      swift_release();
      v2 = v13;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258430C(0, *(_QWORD *)(v13 + 16) + 1, 1);
        v2 = v13;
      }
      v8 = *(_QWORD *)(v2 + 16);
      v7 = *(_QWORD *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1D258430C(v7 > 1, v8 + 1, 1);
        v2 = v13;
      }
      *(_QWORD *)(v2 + 16) = v8 + 1;
      v9 = v2 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v11;
      *(_QWORD *)(v9 + 40) = v12;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1D2691DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id *v5;
  id v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[2];

  v1 = sub_1D26CB9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D26CDA04();
  v5 = (id *)(v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20));
  v6 = *v5;
  v7 = objc_msgSend(v6, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v8 = type metadata accessor for WidgetExtensionInfo();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, (char *)v5 + *(int *)(v8 + 32), v1);
  if (qword_1ED96C7C0 != -1)
    swift_once();
  v9 = (id)qword_1ED96C848;
  v10 = (void *)sub_1D26CB940();
  v11 = objc_msgSend(v9, sel_stringFromDate_, v10);

  sub_1D26CD938();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return v13[0];
}

uint64_t RemoteWidgetExtension.session.getter()
{
  return swift_retain();
}

uint64_t RemoteWidgetExtension.info.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RemoteWidgetExtension();
  return sub_1D2534120(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
}

uint64_t type metadata accessor for RemoteWidgetExtension()
{
  uint64_t result;

  result = qword_1ED9636D8;
  if (!qword_1ED9636D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RemoteWidgetExtension.identifier.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + *(int *)(type metadata accessor for RemoteWidgetExtension()
                                                                      + 20)), sel_tokenString));
  v2 = sub_1D26CD938();

  return v2;
}

uint64_t RemoteWidgetExtension.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20) + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RemoteWidgetExtension.isInternal.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 36));
}

uint64_t RemoteWidgetExtension.isDevelopmentExtension.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 92));
}

uint64_t RemoteWidgetExtension.pluginUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  v5 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.lastModifiedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  v5 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.bundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  v5 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.containerBundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  v5 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.containerBundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.containerBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20)) + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v1, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v4 = sub_1D26CBC88();
    swift_endAccess();
    return v4;
  }
  return result;
}

uint64_t RemoteWidgetExtension.effectiveContainerBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.sdkVersion.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.watchKitExtensionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.pushEnvironment.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t RemoteWidgetExtension.dataContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  v5 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.systemDataContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  v5 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t RemoteWidgetExtension.wantsLocation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 56));
}

uint64_t RemoteWidgetExtension.availableLocalizations.getter()
{
  type metadata accessor for RemoteWidgetExtension();
  type metadata accessor for WidgetExtensionInfo();
  return swift_bridgeObjectRetain();
}

uint64_t RemoteWidgetExtension.allowsMixedLocalizations.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  return *(unsigned __int8 *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 100));
}

void *RemoteWidgetExtension.entitlements.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;

  v1 = v0 + *(int *)(type metadata accessor for RemoteWidgetExtension() + 20);
  v2 = *(void **)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 108));
  v3 = v2;
  return v2;
}

uint64_t RemoteWidgetExtension.requestedDataProtection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t RemoteWidgetExtension.nominatedContainingBundleIdentifiers.getter()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for RemoteWidgetExtension();
  type metadata accessor for WidgetExtensionInfo();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1D2691C60(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t RemoteWidgetExtension.init(info:session:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t result;

  v6 = type metadata accessor for RemoteWidgetExtension();
  result = sub_1D2539ADC(a1, (uint64_t)a3 + *(int *)(v6 + 20), (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
  *a3 = a2;
  return result;
}

uint64_t sub_1D269286C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D2534120(v2 + *(int *)(a1 + 20), a2, (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
}

uint64_t sub_1D2692894(uint64_t a1)
{
  uint64_t v1;
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(*(id *)(v1 + *(int *)(a1 + 20)), sel_tokenString);
  v3 = sub_1D26CD938();

  return v3;
}

uint64_t sub_1D26928EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 20) + 8);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D2692920@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  v6 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_1D2692970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  v6 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_1D26929C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(a1 + 20);
  return *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 36));
}

uint64_t sub_1D26929F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  v6 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_1D2692A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  v6 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_1D2692A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  v6 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_1D2692AE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1D2692B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(a1 + 20);
  return *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 56));
}

uint64_t sub_1D2692B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = v4 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  v6 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a2, v5, v6);
}

uint64_t sub_1D2692B9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 20)) + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 48))(v2, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v5 = sub_1D26CBC88();
    swift_endAccess();
    return v5;
  }
  return result;
}

uint64_t sub_1D2692C3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 20);
  v3 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1D2692C80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 20);
  v3 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1D2692CC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 20);
  v3 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1D2692D08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 20);
  v3 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1D2692D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1 + *(int *)(a1 + 20);
  v3 = *(_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1D2692D90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(a1 + 20);
  return *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 92));
}

uint64_t sub_1D2692DC0()
{
  type metadata accessor for WidgetExtensionInfo();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2692DF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(int *)(a1 + 20);
  return *(unsigned __int8 *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 100));
}

uint64_t sub_1D2692E20()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for WidgetExtensionInfo();
  v0 = swift_bridgeObjectRetain();
  v1 = sub_1D2691C60(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_1D2692E84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;

  v2 = v1 + *(int *)(a1 + 20);
  v3 = *(void **)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 108));
  v4 = v3;
  return v3;
}

uint64_t sub_1D2692EBC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  _BYTE v16[40];

  v4 = sub_1D26CD4C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1D26CD62C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D269310C(a2, (uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CF04D0], v4);
  sub_1D26CD608();
  sub_1D26CD614();
  sub_1D26CD5FC();
  v12 = *v2;
  v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v13(v11, v8);
  return v12;
}

uint64_t RemoteWidgetExtension.makeSession(requiresUserInteractivePriority:suspensionObserver:)(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  _BYTE v16[40];

  v4 = sub_1D26CD4C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v8 = sub_1D26CD62C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D269310C(a2, (uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0CF04D0], v4);
  sub_1D26CD608();
  sub_1D26CD614();
  sub_1D26CD5FC();
  v12 = *v2;
  v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  swift_retain();
  v13(v11, v8);
  return v12;
}

uint64_t sub_1D269310C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962B58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2693154(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v14)(_QWORD);
  _BYTE v15[40];

  v14 = a3;
  v5 = sub_1D26CD4C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1D26CD62C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D269310C(a2, (uint64_t)v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CF04D0], v5);
  sub_1D26CD608();
  sub_1D26CD614();
  sub_1D26CD5FC();
  v14(*v3);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t RemoteWidgetExtension.makeSessionAsync(requiresUserInteractivePriority:suspensionObserver:completion:)(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v14)(_QWORD);
  _BYTE v15[40];

  v14 = a3;
  v5 = sub_1D26CD4C4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v9 = sub_1D26CD62C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = &v15[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D269310C(a2, (uint64_t)v15);
  (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0CF04D0], v5);
  sub_1D26CD608();
  sub_1D26CD614();
  sub_1D26CD5FC();
  v14(*v3);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_1D26933B4()
{
  return swift_retain();
}

uint64_t RemoteWidgetExtension.makeSession(options:)()
{
  return swift_retain();
}

uint64_t sub_1D26933C4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  _QWORD *v2;

  return a2(*v2);
}

uint64_t RemoteWidgetExtension.makeSessionAsync(options:completion:)(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  _QWORD *v2;

  return a2(*v2);
}

uint64_t sub_1D2693410(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_0(a1, v2);
  return sub_1D2693634((uint64_t)v4, v1, v2, v3);
}

uint64_t RemoteWidgetExtension.matches(_:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_0(a1, v2);
  return sub_1D2693634((uint64_t)v4, v1, v2, v3);
}

uint64_t sub_1D2693488(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t *boxed_opaque_existential_1;
  int v12;
  void (*v13)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char v14;
  _BYTE v16[40];
  uint64_t v17[5];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83728);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v16[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = type metadata accessor for RemoteWidgetExtension();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17[3] = v8;
  v17[4] = sub_1D25369B0(&qword_1EFC82E98, (uint64_t (*)(uint64_t))type metadata accessor for RemoteWidgetExtension, (uint64_t)&protocol conformance descriptor for RemoteWidgetExtension);
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  sub_1D2534120(a2, (uint64_t)boxed_opaque_existential_1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteWidgetExtension);
  sub_1D2538510((uint64_t)v17, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
  v12 = swift_dynamicCast();
  v13 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  if (v12)
  {
    v13(v5, 0, 1, v6);
    sub_1D2539ADC((uint64_t)v5, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for RemoteWidgetExtension);
    v14 = WidgetExtensionInfo.matches(_:)((uint64_t)&v10[*(int *)(v6 + 20)]);
    sub_1D2694BB8((uint64_t)v10);
  }
  else
  {
    v13(v5, 1, 1, v6);
    sub_1D2694B78((uint64_t)v5);
    v14 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return v14 & 1;
}

id sub_1D2693624@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *v3;

  v3 = *(void **)(v2 + *(int *)(a1 + 20));
  *a2 = v3;
  return v3;
}

uint64_t sub_1D2693634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t *boxed_opaque_existential_1;
  int v15;
  void (*v16)(_BYTE *, uint64_t, uint64_t, uint64_t);
  char v17;
  _BYTE v19[40];
  uint64_t v20[5];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83728);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v19[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = type metadata accessor for RemoteWidgetExtension();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = &v19[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v20[3] = a3;
  v20[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a1, a3);
  sub_1D2538510((uint64_t)v20, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
  v15 = swift_dynamicCast();
  v16 = *(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v15)
  {
    v16(v9, 0, 1, v10);
    sub_1D2539ADC((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RemoteWidgetExtension);
    v17 = WidgetExtensionInfo.matches(_:)((uint64_t)&v13[*(int *)(v10 + 20)]);
    sub_1D2694BB8((uint64_t)v13);
  }
  else
  {
    v16(v9, 1, 1, v10);
    sub_1D2694B78((uint64_t)v9);
    v17 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return v17 & 1;
}

uint64_t sub_1D26937B8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1D25369B0(&qword_1EFC83710, (uint64_t (*)(uint64_t))type metadata accessor for RemoteWidgetExtension, (uint64_t)&protocol conformance descriptor for RemoteWidgetExtension);
  a1[2] = sub_1D25369B0(&qword_1EFC83718, (uint64_t (*)(uint64_t))type metadata accessor for RemoteWidgetExtension, (uint64_t)&protocol conformance descriptor for RemoteWidgetExtension);
  result = sub_1D25369B0(&qword_1EFC83720, (uint64_t (*)(uint64_t))type metadata accessor for RemoteWidgetExtension, (uint64_t)&protocol conformance descriptor for RemoteWidgetExtension);
  a1[3] = result;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteWidgetExtension(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  id v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;
  char *v61;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v32 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = *(int *)(a3 + 20);
    v6 = (uint64_t *)((char *)a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    v9 = *(void **)((char *)a2 + v5);
    v8 = *(uint64_t *)((char *)a2 + v5 + 8);
    *v6 = v9;
    v6[1] = v8;
    v10 = v7[3];
    v6[2] = v7[2];
    v6[3] = v10;
    v6[4] = v7[4];
    v11 = (int *)type metadata accessor for WidgetExtensionInfo();
    v12 = v11[7];
    v61 = (char *)v6 + v12;
    v13 = (char *)v7 + v12;
    v14 = sub_1D26CBA24();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    v16 = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v61, v13, v14);
    v17 = v11[8];
    v18 = (char *)v6 + v17;
    v19 = (char *)v7 + v17;
    v20 = sub_1D26CB9DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
    *((_BYTE *)v6 + v11[9]) = *((_BYTE *)v7 + v11[9]);
    v21 = v11[10];
    v22 = (char *)v6 + v21;
    v23 = (char *)v7 + v21;
    v24 = sub_1D26CB880();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    v25((char *)v6 + v11[11], (char *)v7 + v11[11], v24);
    v25((char *)v6 + v11[12], (char *)v7 + v11[12], v24);
    v26 = v11[13];
    v27 = (char *)v6 + v26;
    v28 = (char *)v7 + v26;
    v29 = sub_1D26CD488();
    v30 = *(_QWORD *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    *((_BYTE *)v6 + v11[14]) = *((_BYTE *)v7 + v11[14]);
    v25((char *)v6 + v11[15], (char *)v7 + v11[15], v24);
    v33 = v11[16];
    v34 = (_QWORD *)((char *)v6 + v33);
    v35 = (_QWORD *)((char *)v7 + v33);
    v36 = v35[1];
    *v34 = *v35;
    v34[1] = v36;
    v37 = v11[17];
    v38 = (_QWORD *)((char *)v6 + v37);
    v39 = (_QWORD *)((char *)v7 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    v41 = v11[18];
    v42 = (_QWORD *)((char *)v6 + v41);
    v43 = (_QWORD *)((char *)v7 + v41);
    v44 = v43[1];
    *v42 = *v43;
    v42[1] = v44;
    v45 = v11[19];
    v46 = (_QWORD *)((char *)v6 + v45);
    v47 = (_QWORD *)((char *)v7 + v45);
    v48 = v47[1];
    *v46 = *v47;
    v46[1] = v48;
    *(_QWORD *)((char *)v6 + v11[20]) = *(_QWORD *)((char *)v7 + v11[20]);
    v49 = v11[21];
    v50 = (_QWORD *)((char *)v6 + v49);
    v51 = (_QWORD *)((char *)v7 + v49);
    v52 = v51[1];
    *v50 = *v51;
    v50[1] = v52;
    v53 = v11[22];
    v54 = (_QWORD *)((char *)v6 + v53);
    v55 = (_QWORD *)((char *)v7 + v53);
    v56 = v55[1];
    *v54 = *v55;
    v54[1] = v56;
    *((_BYTE *)v6 + v11[23]) = *((_BYTE *)v7 + v11[23]);
    *(_QWORD *)((char *)v6 + v11[24]) = *(_QWORD *)((char *)v7 + v11[24]);
    *((_BYTE *)v6 + v11[25]) = *((_BYTE *)v7 + v11[25]);
    *(_QWORD *)((char *)v6 + v11[26]) = *(_QWORD *)((char *)v7 + v11[26]);
    v57 = v11[27];
    v58 = *(void **)((char *)v7 + v57);
    *(_QWORD *)((char *)v6 + v57) = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v59 = v58;
    return a1;
  }
  return (uint64_t *)v32;
}

void destroy for RemoteWidgetExtension(uint64_t a1, uint64_t a2)
{
  id *v4;
  int *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  char *v13;
  uint64_t v14;
  uint64_t v15;

  swift_release();
  v4 = (id *)(a1 + *(int *)(a2 + 20));

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for WidgetExtensionInfo();
  v6 = (char *)v4 + v5[7];
  v7 = sub_1D26CBA24();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (char *)v4 + v5[8];
  v9 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  v10 = (char *)v4 + v5[10];
  v11 = sub_1D26CB880();
  v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v12(v10, v11);
  v12((char *)v4 + v5[11], v11);
  v12((char *)v4 + v5[12], v11);
  v13 = (char *)v4 + v5[13];
  v14 = sub_1D26CD488();
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  v12((char *)v4 + v5[15], v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for RemoteWidgetExtension(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  id v56;
  char *v58;

  *a1 = *a2;
  v3 = *(int *)(a3 + 20);
  v4 = (_QWORD *)((char *)a1 + v3);
  v5 = (_QWORD *)((char *)a2 + v3);
  v7 = *(void **)((char *)a2 + v3);
  v6 = *(_QWORD *)((char *)a2 + v3 + 8);
  *v4 = v7;
  v4[1] = v6;
  v8 = v5[3];
  v4[2] = v5[2];
  v4[3] = v8;
  v4[4] = v5[4];
  v9 = (int *)type metadata accessor for WidgetExtensionInfo();
  v10 = v9[7];
  v58 = (char *)v4 + v10;
  v11 = (char *)v5 + v10;
  v12 = sub_1D26CBA24();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_retain();
  v14 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v58, v11, v12);
  v15 = v9[8];
  v16 = (char *)v4 + v15;
  v17 = (char *)v5 + v15;
  v18 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  *((_BYTE *)v4 + v9[9]) = *((_BYTE *)v5 + v9[9]);
  v19 = v9[10];
  v20 = (char *)v4 + v19;
  v21 = (char *)v5 + v19;
  v22 = sub_1D26CB880();
  v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  v23((char *)v4 + v9[11], (char *)v5 + v9[11], v22);
  v23((char *)v4 + v9[12], (char *)v5 + v9[12], v22);
  v24 = v9[13];
  v25 = (char *)v4 + v24;
  v26 = (char *)v5 + v24;
  v27 = sub_1D26CD488();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *((_BYTE *)v4 + v9[14]) = *((_BYTE *)v5 + v9[14]);
  v23((char *)v4 + v9[15], (char *)v5 + v9[15], v22);
  v30 = v9[16];
  v31 = (_QWORD *)((char *)v4 + v30);
  v32 = (_QWORD *)((char *)v5 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v34 = v9[17];
  v35 = (_QWORD *)((char *)v4 + v34);
  v36 = (_QWORD *)((char *)v5 + v34);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = v9[18];
  v39 = (_QWORD *)((char *)v4 + v38);
  v40 = (_QWORD *)((char *)v5 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v9[19];
  v43 = (_QWORD *)((char *)v4 + v42);
  v44 = (_QWORD *)((char *)v5 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  *(_QWORD *)((char *)v4 + v9[20]) = *(_QWORD *)((char *)v5 + v9[20]);
  v46 = v9[21];
  v47 = (_QWORD *)((char *)v4 + v46);
  v48 = (_QWORD *)((char *)v5 + v46);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = v9[22];
  v51 = (_QWORD *)((char *)v4 + v50);
  v52 = (_QWORD *)((char *)v5 + v50);
  v53 = v52[1];
  *v51 = *v52;
  v51[1] = v53;
  *((_BYTE *)v4 + v9[23]) = *((_BYTE *)v5 + v9[23]);
  *(_QWORD *)((char *)v4 + v9[24]) = *(_QWORD *)((char *)v5 + v9[24]);
  *((_BYTE *)v4 + v9[25]) = *((_BYTE *)v5 + v9[25]);
  *(_QWORD *)((char *)v4 + v9[26]) = *(_QWORD *)((char *)v5 + v9[26]);
  v54 = v9[27];
  v55 = *(void **)((char *)v5 + v54);
  *(_QWORD *)((char *)v4 + v54) = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v56 = v55;
  return a1;
}

_QWORD *assignWithCopy for RemoteWidgetExtension(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  id v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  void *v54;
  void *v55;
  id v56;
  void (*v58)(char *, char *, uint64_t);
  _QWORD *v59;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v59 = a1;
  v7 = (char *)a1 + v6;
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = *(void **)((char *)a2 + v6);
  v10 = *(void **)v7;
  *(_QWORD *)v7 = v9;
  v11 = v9;

  *((_QWORD *)v7 + 1) = v8[1];
  *((_QWORD *)v7 + 2) = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 3) = v8[3];
  *((_QWORD *)v7 + 4) = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for WidgetExtensionInfo();
  v13 = v12[7];
  v14 = &v7[v13];
  v15 = (char *)v8 + v13;
  v16 = sub_1D26CBA24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = v12[8];
  v18 = &v7[v17];
  v19 = (char *)v8 + v17;
  v20 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  v7[v12[9]] = *((_BYTE *)v8 + v12[9]);
  v21 = v12[10];
  v22 = &v7[v21];
  v23 = (char *)v8 + v21;
  v24 = sub_1D26CB880();
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 24);
  v25(v22, v23, v24);
  v25(&v7[v12[11]], (char *)v8 + v12[11], v24);
  v58 = v25;
  v25(&v7[v12[12]], (char *)v8 + v12[12], v24);
  v26 = v12[13];
  v27 = &v7[v26];
  v28 = (char *)v8 + v26;
  v29 = sub_1D26CD488();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v27, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_7:
  v7[v12[14]] = *((_BYTE *)v8 + v12[14]);
  v58(&v7[v12[15]], (char *)v8 + v12[15], v24);
  v35 = v12[16];
  v36 = &v7[v35];
  v37 = (_QWORD *)((char *)v8 + v35);
  *(_QWORD *)v36 = *v37;
  *((_QWORD *)v36 + 1) = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = v12[17];
  v39 = &v7[v38];
  v40 = (_QWORD *)((char *)v8 + v38);
  *(_QWORD *)v39 = *v40;
  *((_QWORD *)v39 + 1) = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = v12[18];
  v42 = &v7[v41];
  v43 = (_QWORD *)((char *)v8 + v41);
  *(_QWORD *)v42 = *v43;
  *((_QWORD *)v42 + 1) = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = v12[19];
  v45 = &v7[v44];
  v46 = (_QWORD *)((char *)v8 + v44);
  *(_QWORD *)v45 = *v46;
  *((_QWORD *)v45 + 1) = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v7[v12[20]] = *(_QWORD *)((char *)v8 + v12[20]);
  v47 = v12[21];
  v48 = &v7[v47];
  v49 = (_QWORD *)((char *)v8 + v47);
  *(_QWORD *)v48 = *v49;
  *((_QWORD *)v48 + 1) = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = v12[22];
  v51 = &v7[v50];
  v52 = (_QWORD *)((char *)v8 + v50);
  *(_QWORD *)v51 = *v52;
  *((_QWORD *)v51 + 1) = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v12[23]] = *((_BYTE *)v8 + v12[23]);
  *(_QWORD *)&v7[v12[24]] = *(_QWORD *)((char *)v8 + v12[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[v12[25]] = *((_BYTE *)v8 + v12[25]);
  *(_QWORD *)&v7[v12[26]] = *(_QWORD *)((char *)v8 + v12[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = v12[27];
  v54 = *(void **)&v7[v53];
  v55 = *(void **)((char *)v8 + v53);
  *(_QWORD *)&v7[v53] = v55;
  v56 = v55;

  return v59;
}

_QWORD *initializeWithTake for RemoteWidgetExtension(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)v5 = *(_QWORD *)((char *)a2 + v4);
  *(_OWORD *)(v5 + 8) = *(_OWORD *)((char *)a2 + v4 + 8);
  *(_OWORD *)(v5 + 24) = *(_OWORD *)((char *)a2 + v4 + 24);
  v7 = (int *)type metadata accessor for WidgetExtensionInfo();
  v8 = v7[7];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_1D26CBA24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = v7[8];
  v13 = &v5[v12];
  v14 = &v6[v12];
  v15 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v5[v7[9]] = v6[v7[9]];
  v16 = v7[10];
  v17 = &v5[v16];
  v18 = &v6[v16];
  v19 = sub_1D26CB880();
  v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v20(&v5[v7[11]], &v6[v7[11]], v19);
  v20(&v5[v7[12]], &v6[v7[12]], v19);
  v21 = v7[13];
  v22 = &v5[v21];
  v23 = &v6[v21];
  v24 = sub_1D26CD488();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  v5[v7[14]] = v6[v7[14]];
  v20(&v5[v7[15]], &v6[v7[15]], v19);
  *(_OWORD *)&v5[v7[16]] = *(_OWORD *)&v6[v7[16]];
  *(_OWORD *)&v5[v7[17]] = *(_OWORD *)&v6[v7[17]];
  *(_OWORD *)&v5[v7[18]] = *(_OWORD *)&v6[v7[18]];
  *(_OWORD *)&v5[v7[19]] = *(_OWORD *)&v6[v7[19]];
  *(_QWORD *)&v5[v7[20]] = *(_QWORD *)&v6[v7[20]];
  *(_OWORD *)&v5[v7[21]] = *(_OWORD *)&v6[v7[21]];
  *(_OWORD *)&v5[v7[22]] = *(_OWORD *)&v6[v7[22]];
  v5[v7[23]] = v6[v7[23]];
  *(_QWORD *)&v5[v7[24]] = *(_QWORD *)&v6[v7[24]];
  v5[v7[25]] = v6[v7[25]];
  *(_QWORD *)&v5[v7[26]] = *(_QWORD *)&v6[v7[26]];
  *(_QWORD *)&v5[v7[27]] = *(_QWORD *)&v6[v7[27]];
  return a1;
}

_QWORD *assignWithTake for RemoteWidgetExtension(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void (*v68)(char *, char *, uint64_t);
  _QWORD *v69;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v69 = a1;
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = *(void **)((char *)a1 + v6);
  *(_QWORD *)((char *)a1 + v6) = *(_QWORD *)((char *)a2 + v6);

  v10 = v8[2];
  v7[1] = v8[1];
  v7[2] = v10;
  swift_bridgeObjectRelease();
  v11 = v8[4];
  v7[3] = v8[3];
  v7[4] = v11;
  swift_bridgeObjectRelease();
  v12 = (int *)type metadata accessor for WidgetExtensionInfo();
  v13 = v12[7];
  v14 = (char *)v7 + v13;
  v15 = (char *)v8 + v13;
  v16 = sub_1D26CBA24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = v12[8];
  v18 = (char *)v7 + v17;
  v19 = (char *)v8 + v17;
  v20 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  *((_BYTE *)v7 + v12[9]) = *((_BYTE *)v8 + v12[9]);
  v21 = v12[10];
  v22 = (char *)v7 + v21;
  v23 = (char *)v8 + v21;
  v24 = sub_1D26CB880();
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40);
  v25(v22, v23, v24);
  v25((char *)v7 + v12[11], (char *)v8 + v12[11], v24);
  v68 = v25;
  v25((char *)v7 + v12[12], (char *)v8 + v12[12], v24);
  v26 = v12[13];
  v27 = (char *)v7 + v26;
  v28 = (char *)v8 + v26;
  v29 = sub_1D26CD488();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (!v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v27, v28, v29);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v29);
    goto LABEL_6;
  }
  if (v33)
  {
LABEL_6:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
LABEL_7:
  *((_BYTE *)v7 + v12[14]) = *((_BYTE *)v8 + v12[14]);
  v68((char *)v7 + v12[15], (char *)v8 + v12[15], v24);
  v35 = v12[16];
  v36 = (_QWORD *)((char *)v7 + v35);
  v37 = (_QWORD *)((char *)v8 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = v12[17];
  v41 = (_QWORD *)((char *)v7 + v40);
  v42 = (_QWORD *)((char *)v8 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = v12[18];
  v46 = (_QWORD *)((char *)v7 + v45);
  v47 = (_QWORD *)((char *)v8 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  v50 = v12[19];
  v51 = (_QWORD *)((char *)v7 + v50);
  v52 = (_QWORD *)((char *)v8 + v50);
  v54 = *v52;
  v53 = v52[1];
  *v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v7 + v12[20]) = *(_QWORD *)((char *)v8 + v12[20]);
  v55 = v12[21];
  v56 = (_QWORD *)((char *)v7 + v55);
  v57 = (_QWORD *)((char *)v8 + v55);
  v59 = *v57;
  v58 = v57[1];
  *v56 = v59;
  v56[1] = v58;
  swift_bridgeObjectRelease();
  v60 = v12[22];
  v61 = (_QWORD *)((char *)v7 + v60);
  v62 = (_QWORD *)((char *)v8 + v60);
  v64 = *v62;
  v63 = v62[1];
  *v61 = v64;
  v61[1] = v63;
  swift_bridgeObjectRelease();
  *((_BYTE *)v7 + v12[23]) = *((_BYTE *)v8 + v12[23]);
  *(_QWORD *)((char *)v7 + v12[24]) = *(_QWORD *)((char *)v8 + v12[24]);
  swift_bridgeObjectRelease();
  *((_BYTE *)v7 + v12[25]) = *((_BYTE *)v8 + v12[25]);
  *(_QWORD *)((char *)v7 + v12[26]) = *(_QWORD *)((char *)v8 + v12[26]);
  swift_bridgeObjectRelease();
  v65 = v12[27];
  v66 = *(void **)((char *)v7 + v65);
  *(_QWORD *)((char *)v7 + v65) = *(_QWORD *)((char *)v8 + v65);

  return v69;
}

uint64_t getEnumTagSinglePayload for RemoteWidgetExtension()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2694A04(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for WidgetExtensionInfo();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for RemoteWidgetExtension()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D2694A8C(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for WidgetExtensionInfo();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D2694B00()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WidgetExtensionInfo();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D2694B78(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83728);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2694BB8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RemoteWidgetExtension();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D2694BFC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  unint64_t v6;

  v2 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](88);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    v3 = sub_1D2557230(v2);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      v5 = v3;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_retain();
      v6 = sub_1D2697FB0(v5, v0);
      swift_bridgeObjectRelease();
      swift_release();
      return v6;
    }
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D26950B8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  BOOL v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  BOOL v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  unint64_t v89;
  char v90;
  BOOL v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t result;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  char *v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  id v119;
  void *v120;
  uint64_t v121;
  uint64_t *v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t v148;
  uint64_t v149;

  v143 = type metadata accessor for Budget();
  v5 = MEMORY[0x1E0C80A78](v143);
  v142 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v145 = (uint64_t)&v131 - v7;
  v8 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v141 = (char *)&v131 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v144 = (char *)&v131 - v12;
  v13 = *a1;
  v14 = sub_1D26CE0B8();
  v16 = v15;
  v17 = *(_QWORD *)(v13 + 16);
  if (!v17)
    goto LABEL_22;
  v18 = v14;
  v139 = v9;
  v140 = v8;
  v146 = v2;
  v147 = a2;
  v19 = (char *)(v13 + 64);
  while (1)
  {
    v20 = *((_QWORD *)v19 - 2);
    v21 = *((_QWORD *)v19 - 1);
    v22 = *v19;
    v23 = *((_QWORD *)v19 - 4) == v18 && *((_QWORD *)v19 - 3) == v16;
    if (v23 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v19 += 40;
    if (!--v17)
      goto LABEL_70;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v20, v21, v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v20, v21, v22);
  v25 = v24;
  v27 = v26;
  sub_1D253FBE8(v20, v21, v22);
  a2 = v147;
  if (!v27)
    goto LABEL_71;
  v28 = sub_1D26CE0B8();
  v30 = v29;
  v31 = *(_QWORD *)(v13 + 16);
  if (!v31)
    goto LABEL_21;
  v32 = v28;
  v137 = v25;
  v138 = v27;
  v33 = (char *)(v13 + 64);
  while (1)
  {
    v34 = *((_QWORD *)v33 - 2);
    v35 = *((_QWORD *)v33 - 1);
    v36 = *v33;
    v37 = *((_QWORD *)v33 - 4) == v32 && *((_QWORD *)v33 - 3) == v30;
    if (v37 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v33 += 40;
    if (!--v31)
      goto LABEL_52;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v34, v35, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507D4(v34, v35, v36);
  v39 = v38;
  v41 = v40;
  sub_1D253FBE8(v34, v35, v36);
  if ((v41 & 1) != 0)
    goto LABEL_70;
  v42 = sub_1D26CE0B8();
  v44 = v43;
  v45 = *(_QWORD *)(v13 + 16);
  if (!v45)
    goto LABEL_52;
  v46 = v42;
  v136 = v39;
  v47 = (char *)(v13 + 64);
  while (1)
  {
    v48 = *((_QWORD *)v47 - 2);
    v49 = *((_QWORD *)v47 - 1);
    v50 = *v47;
    v51 = *((_QWORD *)v47 - 4) == v46 && *((_QWORD *)v47 - 3) == v44;
    if (v51 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v47 += 40;
    if (!--v45)
      goto LABEL_52;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v48, v49, v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507D4(v48, v49, v50);
  v53 = v52;
  v55 = v54;
  sub_1D253FBE8(v48, v49, v50);
  if ((v55 & 1) != 0)
    goto LABEL_70;
  v56 = sub_1D26CE0B8();
  v58 = v57;
  v59 = *(_QWORD *)(v13 + 16);
  if (!v59)
    goto LABEL_52;
  v60 = v56;
  v135 = v53;
  v61 = (char *)(v13 + 64);
  while (1)
  {
    v62 = *((_QWORD *)v61 - 2);
    v63 = *((_QWORD *)v61 - 1);
    v64 = *v61;
    v65 = *((_QWORD *)v61 - 4) == v60 && *((_QWORD *)v61 - 3) == v58;
    if (v65 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v61 += 40;
    if (!--v59)
      goto LABEL_52;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v62, v63, v64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D2650918(v62, v63, v64);
  v67 = v66;
  sub_1D253FBE8(v62, v63, v64);
  if ((v67 & 1) != 0)
    goto LABEL_70;
  v68 = sub_1D26CE0B8();
  v70 = v69;
  v71 = *(_QWORD *)(v13 + 16);
  if (!v71)
  {
LABEL_52:
    swift_bridgeObjectRelease();
    goto LABEL_70;
  }
  v72 = v68;
  v73 = (char *)(v13 + 64);
  while (1)
  {
    v74 = *((_QWORD *)v73 - 2);
    v75 = *((_QWORD *)v73 - 1);
    v76 = *v73;
    v77 = *((_QWORD *)v73 - 4) == v72 && *((_QWORD *)v73 - 3) == v70;
    if (v77 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v73 += 40;
    if (!--v71)
      goto LABEL_52;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v74, v75, v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507D4(v74, v75, v76);
  v79 = v78;
  v81 = v80;
  sub_1D253FBE8(v74, v75, v76);
  a2 = v147;
  if ((v81 & 1) != 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_71:
    v117 = type metadata accessor for PushSubscription();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 56))(a2, 1, 1, v117);
  }
  v82 = sub_1D26CE0B8();
  v84 = v83;
  v85 = *(_QWORD *)(v13 + 16);
  if (!v85)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  v86 = v82;
  v134 = v79;
  v87 = (char *)(v13 + 64);
  while (1)
  {
    v88 = *((_QWORD *)v87 - 2);
    v89 = *((_QWORD *)v87 - 1);
    v90 = *v87;
    v91 = *((_QWORD *)v87 - 4) == v86 && *((_QWORD *)v87 - 3) == v84;
    if (v91 || (sub_1D26CE3D0() & 1) != 0)
      break;
    v87 += 40;
    if (!--v85)
      goto LABEL_52;
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v88, v89, v90);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26507E0(v88, v89, v90);
  v93 = v92;
  v95 = v94;
  sub_1D253FBE8(v88, v89, v90);
  if (!v95)
  {
LABEL_70:
    swift_bridgeObjectRelease();
    a2 = v147;
    goto LABEL_71;
  }
  v132 = v93;
  v133 = v95;
  result = sub_1D26CDA28();
  v98 = v139;
  v97 = v140;
  v99 = v134;
  if ((result & 1) != 0)
  {
    v100 = sub_1D26CD9E0();
    v101 = sub_1D2594B10(v100);
    v103 = v102;
    v105 = v104;
    v107 = v106;
    swift_bridgeObjectRelease();
    v137 = MEMORY[0x1D823917C](v101, v103, v105, v107);
    v138 = v108;
    swift_bridgeObjectRelease();
    v109 = v144;
    sub_1D26CB8EC();
    LOBYTE(v103) = v99 != 0;
    v110 = v141;
    (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v141, v109, v97);
    v111 = v142;
    sub_1D26CB910();
    v112 = (int *)v143;
    v113 = *(int *)(v143 + 20);
    *(_QWORD *)&v111[v113] = 0;
    (*(void (**)(char *, char *, uint64_t))(v98 + 40))(v111, v110, v97);
    *(_QWORD *)&v111[v113] = v135;
    v111[v112[6]] = v103;
    *(_QWORD *)&v111[v112[7]] = 0;
    *(_QWORD *)&v111[v112[8]] = 0;
    v114 = (uint64_t)v111;
    v115 = v145;
    sub_1D2539ADC(v114, v145, (uint64_t (*)(_QWORD))type metadata accessor for Budget);
    if (v136)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D269949C(v115);
      (*(void (**)(char *, uint64_t))(v98 + 8))(v109, v97);
LABEL_69:
      v116 = type metadata accessor for PushSubscription();
      return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v116 - 8) + 56))(v147, 1, 1, v116);
    }
    v118 = v138;
    v119 = sub_1D2697774(v13);
    if (!v119)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D269949C(v145);
      (*(void (**)(char *, uint64_t))(v139 + 8))(v144, v140);
      goto LABEL_69;
    }
    v120 = v119;
    v121 = type metadata accessor for PushSubscription();
    v122 = v147;
    v123 = v145;
    sub_1D257B420(v145, (uint64_t)v147 + *(int *)(v121 + 24));
    v124 = objc_msgSend(v120, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    v125 = sub_1D26CBC88();
    v127 = v126;
    swift_endAccess();

    v148 = v125;
    v149 = v127;
    sub_1D26CDA04();
    v128 = objc_msgSend(v120, sel_kind);
    sub_1D26CD938();

    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v129 = v149;
    v122[2] = v148;
    v122[3] = v129;
    v130 = v132;
    v122[4] = (uint64_t)v120;
    v122[5] = v130;
    v122[6] = v133;
    *v122 = v137;
    v122[1] = v118;
    sub_1D269949C(v123);
    (*(void (**)(char *, uint64_t))(v139 + 8))(v144, v140);
    return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 56))(v122, 0, 1, v121);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1D26959F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  char v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  char v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  char v73;
  _UNKNOWN **v74;
  id v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  char v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  char v92;
  char v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  char v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  unint64_t v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  char v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  char v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  char v121;
  id v122;
  uint64_t v123;
  _UNKNOWN **v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  _UNKNOWN **v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  _UNKNOWN **v144;
  _QWORD v145[2];
  unint64_t v146;

  v2 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_19;
  v5 = Strong;
  v6 = *(_QWORD *)(Strong + 24);
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = *(_QWORD *)(v5 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  swift_release();
  if (!v8)
  {
    __break(1u);
LABEL_19:
    sub_1D26CE1D8();
    __break(1u);
    return;
  }
  v9 = a1 + *(int *)(type metadata accessor for PushSubscription() + 24);
  sub_1D26CB8F8();
  v11 = v10;
  v12 = type metadata accessor for Budget();
  v136 = *(_QWORD *)(v9 + *(int *)(v12 + 20));
  v137 = *(unsigned __int8 *)(v9 + *(int *)(v12 + 24));
  v14 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v15 = *(void **)(a1 + 32);
  v131 = *(_QWORD *)(a1 + 40);
  v16 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRetain();
  v17 = v15;
  swift_bridgeObjectRetain();
  v18 = objc_msgSend(v17, sel_intentReference);
  if (v18)
  {
    v19 = v18;
    sub_1D26CBE20();
    v20 = v19;
    v21 = sub_1D26CBE14();
    if (v2)
    {
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      return;
    }
    v129 = v21;
    v130 = 0;
    v128 = v22;

    v141 = objc_msgSend(v20, sel_stableHash);
    v134 = sub_1D26CE370();
    v135 = v23;

  }
  else
  {
    v129 = 0;
    v130 = v2;
    v128 = 0xF000000000000000;
    v134 = 0;
    v135 = 0xE000000000000000;
  }
  v24 = objc_msgSend(v17, sel_extensionIdentity);
  v25 = objc_msgSend(v24, sel_tokenString);

  v132 = sub_1D26CD938();
  v27 = v26;

  v28 = objc_msgSend(v17, sel_kind);
  v133 = sub_1D26CD938();
  v30 = v29;
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v141 = 0;
  v142 = 0xE000000000000000;
  v31 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](275);
  v145[0] = 0;
  v145[1] = 0xE000000000000000;
  v146 = v31;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v32 = sub_1D253FC20(v14, v13);
  v34 = v33;
  v36 = v35;
  sub_1D2641480(v32, v33, v35);
  sub_1D253FBE8(v32, v34, v36);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v37 = sub_1D253FC20(v131, v16);
  v39 = v38;
  LOBYTE(v32) = v40;
  sub_1D2641480(v37, v38, v40);
  sub_1D253FBE8(v37, v39, v32);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v41 = *(_QWORD *)(a1 + 8);
  v141 = *(id *)a1;
  v142 = v41;
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  v42 = sub_1D253FC20((uint64_t)v141, v142);
  v44 = v43;
  LOBYTE(v32) = v45;
  sub_1D2641480(v42, v43, v45);
  sub_1D253FBE8(v42, v44, v32);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v46 = sub_1D25410E8(v11);
  v48 = v47;
  LOBYTE(v44) = v49;
  sub_1D2641480(v46, v47, v49);
  sub_1D253FBE8(v46, v48, v44);
  sub_1D26CDA04();
  v50 = sub_1D253FA04(v136);
  v52 = v51;
  LOBYTE(v44) = v53;
  sub_1D2641480(v50, v51, v53);
  sub_1D253FBE8(v50, v52, v44);
  sub_1D26CDA04();
  v54 = sub_1D253FA04(v137);
  v56 = v55;
  LOBYTE(v44) = v57;
  sub_1D2641480(v54, v55, v57);
  sub_1D253FBE8(v54, v56, v44);
  sub_1D26CDA04();
  v58 = sub_1D253FA04(0);
  v60 = v59;
  LOBYTE(v44) = v61;
  sub_1D2641480(v58, v59, v61);
  sub_1D253FBE8(v58, v60, v44);
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v62 = sub_1D253FC20(v132, v27);
  v64 = v63;
  LOBYTE(v44) = v65;
  sub_1D2641480(v62, v63, v65);
  sub_1D253FBE8(v62, v64, v44);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v66 = sub_1D253FC20(v133, v30);
  v68 = v67;
  LOBYTE(v44) = v69;
  sub_1D2641480(v66, v67, v69);
  sub_1D253FBE8(v66, v68, v44);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v70 = sub_1D253FC20(v134, v135);
  v72 = v71;
  LOBYTE(v44) = v73;
  sub_1D2641480(v70, v71, v73);
  sub_1D253FBE8(v70, v72, v44);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v74 = &off_1E93D56A0;
  if (v128 >> 60 == 15)
  {
    v75 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v76 = sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
    v143 = v76;
    v144 = &off_1E93D56A0;
    v141 = v75;
    v77 = v129;
  }
  else
  {
    v139 = MEMORY[0x1E0CB0338];
    v140 = &off_1E93D09D0;
    v77 = v129;
    *(_QWORD *)&v138 = v129;
    *((_QWORD *)&v138 + 1) = v128;
    sub_1D2538F38(&v138, (uint64_t)&v141);
    v76 = v143;
    v74 = v144;
  }
  v78 = __swift_project_boxed_opaque_existential_0(&v141, v76);
  sub_1D2541ED0(v77, v128);
  sub_1D2641654((uint64_t)v78, (uint64_t)v145, v76, (uint64_t)v74);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v79 = *(_QWORD *)(a1 + 40);
  v80 = *(_QWORD *)(a1 + 48);
  swift_bridgeObjectRetain_n();
  v81 = sub_1D253FC20(v79, v80);
  v83 = v82;
  v85 = v84;
  sub_1D2641480(v81, v82, v84);
  sub_1D253FBE8(v81, v83, v85);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v86 = *(_QWORD *)(a1 + 8);
  v141 = *(id *)a1;
  v142 = v86;
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  v88 = (uint64_t)v141;
  v87 = v142;
  swift_bridgeObjectRetain();
  v89 = sub_1D253FC20(v88, v87);
  v91 = v90;
  v93 = v92;
  sub_1D2641480(v89, v90, v92);
  sub_1D253FBE8(v89, v91, v93);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v94 = sub_1D25410E8(v11);
  v96 = v95;
  LOBYTE(v91) = v97;
  sub_1D2641480(v94, v95, v97);
  sub_1D253FBE8(v94, v96, v91);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v98 = sub_1D253FA04(v136);
  v100 = v99;
  LOBYTE(v91) = v101;
  sub_1D2641480(v98, v99, v101);
  sub_1D253FBE8(v98, v100, v91);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v102 = sub_1D253FA04(v137);
  v104 = v103;
  LOBYTE(v91) = v105;
  sub_1D2641480(v102, v103, v105);
  sub_1D253FBE8(v102, v104, v91);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v106 = sub_1D253FA04(0);
  v108 = v107;
  LOBYTE(v91) = v109;
  sub_1D2641480(v106, v107, v109);
  sub_1D253FBE8(v106, v108, v91);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  v110 = sub_1D253FC20(v132, v27);
  v112 = v111;
  LOBYTE(v91) = v113;
  sub_1D2641480(v110, v111, v113);
  sub_1D253FBE8(v110, v112, v91);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  v114 = sub_1D253FC20(v133, v30);
  v116 = v115;
  LOBYTE(v91) = v117;
  sub_1D2641480(v114, v115, v117);
  sub_1D253FBE8(v114, v116, v91);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  v118 = sub_1D253FC20(v134, v135);
  v120 = v119;
  LOBYTE(v91) = v121;
  sub_1D2641480(v118, v119, v121);
  sub_1D253FBE8(v118, v120, v91);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (v128 >> 60 == 15)
  {
    v122 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    v123 = sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
    v124 = &off_1E93D56A0;
    v143 = v123;
    v144 = &off_1E93D56A0;
    v141 = v122;
  }
  else
  {
    v139 = MEMORY[0x1E0CB0338];
    v140 = &off_1E93D09D0;
    *(_QWORD *)&v138 = v77;
    *((_QWORD *)&v138 + 1) = v128;
    sub_1D2538F38(&v138, (uint64_t)&v141);
    v123 = v143;
    v124 = v144;
  }
  v125 = v77;
  v126 = __swift_project_boxed_opaque_existential_0(&v141, v123);
  sub_1D2541ED0(v77, v128);
  sub_1D2641654((uint64_t)v126, (uint64_t)v145, v123, (uint64_t)v124);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v141);
  v127 = v146;
  if (!swift_weakLoadStrong())
    goto LABEL_19;
  sub_1D2557230(v127);
  if (!v130)
    swift_bridgeObjectRelease();
  sub_1D2541EBC(v125, v128);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
}

uint64_t sub_1D26969EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t result;
  uint64_t v18;

  v3 = v2;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v7 = Strong;
  v8 = *(_QWORD *)(Strong + 24);
  v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  v10 = *(_QWORD *)(v7 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  swift_release();
  swift_release();
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  v11 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](24);
  v18 = v11;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v12 = sub_1D253FC20(a1, a2);
  v14 = v13;
  v16 = v15;
  sub_1D2641480(v12, v13, v15);
  sub_1D253FBE8(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D2696C54()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](40);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    v2 = sub_1D2557230(v1);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      v3 = v2;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v1 = sub_1D2698680(v3);
      swift_bridgeObjectRelease();
    }
    return v1;
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2696F00(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;

  v3 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](35);
  v18 = v3;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v4 = *a1;
  v5 = a1[1];
  sub_1D253FE08(*a1, v5);
  sub_1D253FE08(v4, v5);
  v6 = sub_1D253FC0C(v4, v5);
  v8 = v7;
  v10 = v9;
  sub_1D2641480(v6, v7, v9);
  sub_1D253FBE8(v6, v8, v10);
  sub_1D253EE04(v4, v5);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v11 = a1[2];
  v12 = a1[3];
  swift_bridgeObjectRetain_n();
  v13 = sub_1D253FC20(v11, v12);
  v15 = v14;
  LOBYTE(v6) = v16;
  sub_1D2641480(v13, v14, v16);
  sub_1D253FBE8(v13, v15, v6);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    sub_1D2557230(v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_release();
    if (!v1)
      return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D26971D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;

  v5 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](31);
  v17 = v5;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
  v7 = sub_1D25412CC((uint64_t)v6);
  v9 = v8;
  v11 = v10;
  sub_1D2641480(v7, v8, v10);
  sub_1D253FBE8(v7, v9, v11);

  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v12 = sub_1D253FC20(a1, a2);
  v14 = v13;
  LOBYTE(v7) = v15;
  sub_1D2641480(v12, v13, v15);
  sub_1D253FBE8(v12, v14, v7);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    sub_1D2557230(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_release();
    if (!v2)
      return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D2697494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;

  v5 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](31);
  v17 = v5;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
  v7 = sub_1D25412CC((uint64_t)v6);
  v9 = v8;
  v11 = v10;
  sub_1D2641480(v7, v8, v10);
  sub_1D253FBE8(v7, v9, v11);

  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v12 = sub_1D253FC20(a1, a2);
  v14 = v13;
  LOBYTE(v7) = v15;
  sub_1D2641480(v12, v13, v15);
  sub_1D253FBE8(v12, v14, v7);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    sub_1D2557230(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_release();
    if (!v2)
      return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

uint64_t ChronoMetadataStore.MutablePushTokenStore.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

id sub_1D2697774(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  BOOL v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 *v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  BOOL v45;
  uint64_t v46;
  void *v47;
  unint64_t v48;
  uint64_t v49;
  NSObject *v50;
  os_log_type_t v51;
  uint8_t *v52;
  uint64_t v53;
  void *v54;
  id v55;
  void *v56;
  void *v57;
  uint64_t v58;
  unsigned __int8 *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v2 = sub_1D26CE0B8();
  v4 = v3;
  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    v6 = v2;
    v7 = (char *)(a1 + 64);
    v8 = *(_QWORD *)(a1 + 16);
    while (1)
    {
      v9 = *((_QWORD *)v7 - 2);
      v10 = *((_QWORD *)v7 - 1);
      v11 = *v7;
      v12 = *((_QWORD *)v7 - 4) == v6 && *((_QWORD *)v7 - 3) == v4;
      if (v12 || (sub_1D26CE3D0() & 1) != 0)
        break;
      v7 += 40;
      if (!--v8)
        goto LABEL_9;
    }
    swift_bridgeObjectRetain();
    sub_1D2541E98(v9, v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D26507E0(v9, v10, v11);
    v20 = v19;
    v22 = v21;
    sub_1D253FBE8(v9, v10, v11);
    if (v22)
    {
      v59 = v22;
      v60 = v5;
      v58 = v20;
      v23 = sub_1D26CE0B8();
      v25 = v24;
      v26 = 0;
      v27 = (char *)(a1 + 64);
      while (1)
      {
        v28 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_48;
        }
        v29 = *((_QWORD *)v27 - 2);
        v30 = *((_QWORD *)v27 - 1);
        v31 = *v27;
        v32 = *((_QWORD *)v27 - 4) == v23 && *((_QWORD *)v27 - 3) == v25;
        if (v32 || (sub_1D26CE3D0() & 1) != 0)
          break;
        v27 += 40;
        ++v26;
        if (v28 == v60)
        {
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRetain();
      sub_1D2541E98(v29, v30, v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D26507E0(v29, v30, v31);
      v34 = v33;
      sub_1D253FBE8(v29, v30, v31);
      if (!v34)
        goto LABEL_9;
      sub_1D26CDE54();
      v35 = v59;
      swift_bridgeObjectRetain();
      v36 = v58;
      v37 = sub_1D26CDE30();
      if (v37)
      {
        v57 = (void *)v37;
        v38 = sub_1D26CE0B8();
        v40 = v39;
        v41 = 0;
        v35 = (unsigned __int8 *)(a1 + 64);
        while (1)
        {
          v42 = v41 + 1;
          if (__OFADD__(v41, 1))
            break;
          v43 = *((_QWORD *)v35 - 2);
          v44 = *((_QWORD *)v35 - 1);
          v36 = *v35;
          v45 = *((_QWORD *)v35 - 4) == v38 && *((_QWORD *)v35 - 3) == v40;
          if (v45 || (sub_1D26CE3D0() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1D2541E98(v43, v44, v36);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1D2650688(v43, v44, v36);
            sub_1D253FBE8(v43, v44, v36);
            v46 = v61;
            v48 = v62;
            if (v62 >> 60 == 15)
            {
              v47 = 0;
LABEL_43:
              v54 = v57;
            }
            else
            {
              sub_1D26CBE20();
              sub_1D2539514(0, &qword_1ED9638B8);
              sub_1D253FE08(v61, v62);
              v47 = (void *)sub_1D26CBE08();
              sub_1D2541EBC(v61, v62);
              v54 = v57;
            }
            swift_bridgeObjectRelease();
            v55 = objc_allocWithZone(MEMORY[0x1E0D10000]);
            v56 = (void *)sub_1D26CD914();
            swift_bridgeObjectRelease();
            v17 = objc_msgSend(v55, sel_initWithExtensionIdentity_kind_intentReference_, v54, v56, v47);

            sub_1D2541EBC(v46, v48);
            return v17;
          }
          v35 += 40;
          ++v41;
          if (v42 == v60)
          {
            swift_bridgeObjectRelease();
            v46 = 0;
            v47 = 0;
            v48 = 0xF000000000000000;
            goto LABEL_43;
          }
        }
        __break(1u);
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_1ED962330 == -1)
          goto LABEL_39;
      }
      swift_once();
LABEL_39:
      v49 = sub_1D26CC09C();
      __swift_project_value_buffer(v49, (uint64_t)qword_1ED977D20);
      swift_bridgeObjectRetain();
      v50 = sub_1D26CC084();
      v51 = sub_1D26CDCEC();
      if (os_log_type_enabled(v50, v51))
      {
        v52 = (uint8_t *)swift_slowAlloc();
        v53 = swift_slowAlloc();
        v61 = v53;
        *(_DWORD *)v52 = 136315138;
        swift_bridgeObjectRetain();
        v63 = sub_1D2537880(v36, (unint64_t)v35, &v61);
        sub_1D26CDF50();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D2531000, v50, v51, "Encountered malformed subscription extension, %s.", v52, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v53, -1, -1);
        MEMORY[0x1D823A5E0](v52, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
  }
  if (qword_1ED962330 != -1)
LABEL_48:
    swift_once();
  v13 = sub_1D26CC09C();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED977D20);
  v14 = sub_1D26CC084();
  v15 = sub_1D26CDCEC();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v16 = 0;
    _os_log_impl(&dword_1D2531000, v14, v15, "Encountered malformed result for control identity in push subscription.", v16, 2u);
    MEMORY[0x1D823A5E0](v16, -1, -1);
  }

  return 0;
}

unint64_t sub_1D2697FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963100);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = type metadata accessor for PushSubscription();
  v7 = *(_QWORD *)(v20 - 8);
  v8 = MEMORY[0x1E0C80A78](v20);
  v19 = (uint64_t)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v18 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (!v12)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v13 = 0;
  v14 = MEMORY[0x1E0DEE9D8];
  v18 = a1;
  do
  {
    v22 = *(_QWORD *)(a1 + 8 * v13 + 32);
    swift_bridgeObjectRetain();
    sub_1D26950B8(&v22, v6);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v14;
    }
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v20) == 1)
    {
      sub_1D253703C((uint64_t)v6, &qword_1ED963100);
    }
    else
    {
      sub_1D2539ADC((uint64_t)v6, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for PushSubscription);
      sub_1D2539ADC((uint64_t)v11, v19, (uint64_t (*)(_QWORD))type metadata accessor for PushSubscription);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_1D256246C(0, *(_QWORD *)(v14 + 16) + 1, 1, v14);
      v16 = *(_QWORD *)(v14 + 16);
      v15 = *(_QWORD *)(v14 + 24);
      if (v16 >= v15 >> 1)
        v14 = sub_1D256246C(v15 > 1, v16 + 1, 1, v14);
      *(_QWORD *)(v14 + 16) = v16 + 1;
      sub_1D2539ADC(v19, v14+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, (uint64_t (*)(_QWORD))type metadata accessor for PushSubscription);
      a1 = v18;
    }
    ++v13;
  }
  while (v12 != v13);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D2698210()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](277);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1D2698680(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v36[8];
  __int128 v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v38 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v36 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963208);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = type metadata accessor for PushToken();
  v47 = *(_QWORD *)(v45 - 8);
  v10 = MEMORY[0x1E0C80A78](v45);
  v43 = (uint64_t)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v12);
  v40 = (uint64_t)v36 - v14;
  v44 = *(_QWORD *)(a1 + 16);
  if (!v44)
    return MEMORY[0x1E0DEE9D8];
  v36[5] = v13;
  v42 = a1 + 32;
  v39 = a1;
  swift_bridgeObjectRetain();
  v15 = 0;
  v48 = MEMORY[0x1E0DEE9D8];
  v36[4] = "controlIdentity: ";
  v36[6] = 0x80000001D26DF340;
  v37 = xmmword_1D26D4560;
  v36[7] = v6;
  v41 = v9;
  do
  {
    v49 = v15;
    v16 = *(_QWORD *)(v42 + 8 * v15);
    swift_bridgeObjectRetain();
    v17 = sub_1D26CE0B8();
    v19 = v18;
    v20 = *(_QWORD *)(v16 + 16);
    v50 = v16;
    if (v20)
    {
      v21 = v17;
      v22 = (unsigned __int8 *)(v16 + 64);
      v46 = v22;
      v51 = v20;
      v23 = v20;
      do
      {
        v25 = *((_QWORD *)v22 - 2);
        v24 = *((_QWORD *)v22 - 1);
        v26 = *v22;
        v27 = *((_QWORD *)v22 - 4) == v21 && *((_QWORD *)v22 - 3) == v19;
        if (v27 || (sub_1D26CE3D0() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          sub_1D2541E98(v25, v24, v26);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __asm { BR              X8 }
        }
        v22 += 40;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      v9 = v41;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v28 = v47;
    v29 = v45;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v47 + 56))(v9, 1, 1, v45);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v9, 1, v29) == 1)
    {
      sub_1D253703C((uint64_t)v9, &qword_1ED963208);
    }
    else
    {
      v30 = v40;
      sub_1D2539ADC((uint64_t)v9, v40, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      sub_1D2539ADC(v30, v43, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        v31 = v48;
      else
        v31 = sub_1D2562480(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
      v33 = *(_QWORD *)(v31 + 16);
      v32 = *(_QWORD *)(v31 + 24);
      if (v33 >= v32 >> 1)
        v31 = sub_1D2562480(v32 > 1, v33 + 1, 1, v31);
      *(_QWORD *)(v31 + 16) = v33 + 1;
      v34 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      v48 = v31;
      sub_1D2539ADC(v43, v31 + v34 + *(_QWORD *)(v47 + 72) * v33, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
    }
    v15 = v49 + 1;
  }
  while (v49 + 1 != v44);
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t type metadata accessor for ChronoMetadataStore.PushSubscriptionStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.PushSubscriptionStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.PushSubscriptionStore.pushSubscriptions()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutablePushSubcriptionStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutablePushSubcriptionStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushSubcriptionStore.update(subscription:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t type metadata accessor for ChronoMetadataStore.PushTokenStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.PushTokenStore()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutablePushTokenStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutablePushTokenStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushTokenStore.update(token:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushTokenStore.remove(subscriptionIdentifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushTokenStore.remove(environmentName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1D269949C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePushSubcriptionStore.remove(subscriptionIdentifier:)()
{
  return dispatch thunk of ChronoMetadataStore.MutablePushTokenStore.remove(environmentName:)();
}

uint64_t dispatch thunk of ChronoMetadataStore.PushTokenStore.pushTokens()()
{
  return dispatch thunk of ChronoMetadataStore.PushSubscriptionStore.pushSubscriptions()();
}

uint64_t DuetWidgetViewEntry.identity.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v2 = v1[3];
  v4 = (void *)v1[4];
  v3 = v1[5];
  v5 = v1[6];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  v6 = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2699550()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint8_t *v28;
  uint8_t *v29;
  void (*v30)(char *, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  NSObject *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36[3];

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CB9DC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v28 - v10;
  BSDispatchQueueAssertMain();
  sub_1D26CB9D0();
  v12 = v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
  swift_beginAccess();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13(v9, v12, v5);
  v14 = sub_1D26CB94C();
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v5);
  if ((v14 & 1) != 0)
  {
    v13(v4, (uint64_t)v11, v5);
  }
  else
  {
    if (qword_1ED962860 != -1)
      swift_once();
    v16 = sub_1D26CC09C();
    __swift_project_value_buffer(v16, (uint64_t)qword_1ED977E08);
    swift_retain();
    v17 = sub_1D26CC084();
    v18 = sub_1D26CDCD4();
    v33 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      v32 = v17;
      v19 = (uint8_t *)swift_slowAlloc();
      v36[0] = swift_slowAlloc();
      v34 = v1;
      v20 = v36[0];
      v30 = v13;
      v31 = v15;
      *(_DWORD *)v19 = 136446210;
      v28 = v19 + 4;
      v29 = v19;
      v21 = *(_QWORD *)(v34 + 40);
      v22 = *(_QWORD *)(v34 + 48);
      swift_bridgeObjectRetain();
      v23 = v21;
      v13 = v30;
      v35 = sub_1D2537880(v23, v22, v36);
      v15 = v31;
      sub_1D26CDF50();
      swift_release();
      swift_bridgeObjectRelease();
      v24 = v29;
      _os_log_impl(&dword_1D2531000, v32, (os_log_type_t)v33, "End view date < start view date for: %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      v25 = v20;
      v1 = v34;
      MEMORY[0x1D823A5E0](v25, -1, -1);
      MEMORY[0x1D823A5E0](v24, -1, -1);

    }
    else
    {

      swift_release();
    }
    v13(v9, v12, v5);
    sub_1D26CB934();
    v15(v9, v5);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  v26 = v1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
  swift_beginAccess();
  sub_1D25D4E78((uint64_t)v4, v26);
  swift_endAccess();
  return ((uint64_t (*)(char *, uint64_t))v15)(v11, v5);
}

uint64_t sub_1D26998A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v2);
  v18 = (uint64_t)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D26CB9DC();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v1 + 32);
  swift_bridgeObjectRetain();
  v10 = v9;
  swift_bridgeObjectRetain_n();
  sub_1D26CD9D4();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v11 = v1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v11, v4);
  sub_1D25369B0(&qword_1ED96C8C0, v5, MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  v12 = *(void (**)(char *, uint64_t))(v6 + 8);
  v12(v8, v4);
  sub_1D26CD8D8();
  v13 = v1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
  swift_beginAccess();
  v14 = v13;
  v15 = v18;
  sub_1D25D4E30(v14, v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v15, 1, v4) == 1)
    return sub_1D26CE478();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v8, v15, v4);
  sub_1D26CE478();
  sub_1D26CD8D8();
  return ((uint64_t (*)(char *, uint64_t))v12)(v8, v4);
}

uint64_t DuetWidgetViewEntry.deinit()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v2 = v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
  v3 = sub_1D26CB9DC();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_staleContentDate, v3);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate, &qword_1ED96B1E0);
  return v0;
}

uint64_t DuetWidgetViewEntry.__deallocating_deinit()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);

  v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v2 = v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
  v3 = sub_1D26CB9DC();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_staleContentDate, v3);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate, &qword_1ED96B1E0);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2699C1C()
{
  sub_1D26CE460();
  sub_1D26998A8();
  return sub_1D26CE49C();
}

uint64_t sub_1D2699C58()
{
  sub_1D26CE460();
  sub_1D26998A8();
  return sub_1D26CE49C();
}

uint64_t sub_1D2699C98()
{
  return sub_1D26998A8();
}

uint64_t sub_1D2699CB8()
{
  sub_1D26CE460();
  sub_1D26998A8();
  return sub_1D26CE49C();
}

uint64_t sub_1D2699CF4(uint64_t *a1, uint64_t *a2)
{
  return _s9ChronoKit19DuetWidgetViewEntryC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1D2699D00@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  char *v28;
  void *v29;
  char *v30;
  id v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  char *v37;
  void *v38;
  void *v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  char *v44;
  double v45;
  double v46;
  void (*v47)(char *, uint64_t);
  id v48;
  void *v49;
  id v50;
  uint64_t v51;
  _QWORD *v52;
  void *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  _QWORD *v59;
  void (*v60)(char *, uint64_t, uint64_t);
  char *v61;

  v59 = a3;
  v60 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CB9DC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v57 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v54 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v54 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v54 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v54 - v20;
  v22 = a1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
  swift_beginAccess();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v61 = v21;
  v55 = v22;
  v23(v21, v22, v7);
  v24 = a1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
  swift_beginAccess();
  sub_1D25D4E30(v24, (uint64_t)v6);
  v25 = v60;
  v60 = v23;
  v23(v16, (uint64_t)v25, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v26(v19, v16, v7);
    sub_1D253703C((uint64_t)v6, &qword_1ED96B1E0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    v26 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v26(v19, v6, v7);
  }
  sub_1D25369B0((unint64_t *)&qword_1ED96B1C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B0]);
  v27 = v61;
  if ((sub_1D26CD8FC() & 1) != 0)
    v28 = v19;
  else
    v28 = v27;
  v60(v13, (uint64_t)v28, v7);
  v56 = *(void (**)(char *, uint64_t))(v8 + 8);
  v56(v19, v7);
  v26(v19, v13, v7);
  v58 = a1;
  v54 = *(void **)(a1 + 32);
  v29 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30 = v19;
  v31 = objc_msgSend(v29, sel_extensionBundleIdentifier);
  sub_1D26CD938();

  v32 = objc_allocWithZone(MEMORY[0x1E0D1D960]);
  v33 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v34 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v35 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v36 = (void *)sub_1D26CB940();
  v37 = v30;
  v38 = v54;
  v39 = (void *)sub_1D26CB940();
  v40 = objc_msgSend(v32, sel_initWithViewID_budgetID_extensionBundleID_from_to_, v33, v34, v35, v36, v39);

  v41 = objc_msgSend(v38, sel_container);
  if (v41)
  {
    v42 = v41;
    v43 = objc_msgSend(v41, sel_isStack);

  }
  else
  {
    v43 = 0;
  }
  objc_msgSend(v40, sel_setInStack_, v43);
  v44 = v57;
  v60(v57, v55, v7);
  sub_1D26CB928();
  v46 = v45;
  v47 = v56;
  v56(v44, v7);
  objc_msgSend(v40, sel_setTimeUntilContentExpiration_, v46);
  v48 = objc_msgSend(v38, sel_container);
  if (v48)
  {
    v49 = v48;
    if (objc_msgSend(v48, sel_location) == (id)2)
      v50 = (id)*MEMORY[0x1E0D1DA50];
    else
      v50 = objc_msgSend(v49, sel_page);
    objc_msgSend(v40, sel_setPageID_, v50);

  }
  v51 = sub_1D2539514(0, &qword_1ED962880);
  v52 = v59;
  v59[3] = v51;
  *v52 = v40;
  v47(v37, v7);
  return ((uint64_t (*)(char *, uint64_t))v47)(v61, v7);
}

void sub_1D269A1E4(uint64_t a1)
{
  id v1;
  id v2;

  if (sub_1D25D679C(a1))
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_sharedScheduler);
    sub_1D2539514(0, &qword_1ED962880);
    v2 = (id)sub_1D26CDADC();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_recordWidgetViews_, v2);

  }
}

uint64_t sub_1D269A290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  _QWORD v9[3];
  uint64_t v10;
  _UNKNOWN **v11;

  v10 = type metadata accessor for _DuetWidgetViewProvider();
  v11 = &off_1E93D3560;
  v9[0] = swift_allocObject();
  type metadata accessor for DuetWidgetViewRecorder();
  v0 = swift_allocObject();
  v1 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v9, v10);
  MEMORY[0x1E0C80A78](v1);
  v3 = (_QWORD *)((char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v4 + 16))(v3);
  v5 = *v3;
  swift_retain();
  v6 = sub_1D269C0EC(v5, v0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  result = swift_release();
  qword_1ED962F10 = v6;
  return result;
}

uint64_t static DuetWidgetViewRecorder.shared.getter()
{
  if (qword_1ED962F20 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static DuetWidgetViewRecorder.shared.setter(uint64_t a1)
{
  if (qword_1ED962F20 != -1)
    swift_once();
  swift_beginAccess();
  qword_1ED962F10 = a1;
  return swift_release();
}

uint64_t (*static DuetWidgetViewRecorder.shared.modify())()
{
  if (qword_1ED962F20 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

id *DuetWidgetViewRecorder.deinit()
{
  id *v0;
  id v1;

  v1 = v0[11];
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t DuetWidgetViewRecorder.__deallocating_deinit()
{
  id *v0;
  id v1;

  v1 = v0[11];
  if (v1)
    objc_msgSend(v1, sel_invalidate);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 4));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

_QWORD *sub_1D269A588(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  id v16;
  uint64_t v17;
  uint64_t v19;

  v3 = v2;
  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *a1;
  v10 = a1[1];
  v12 = (void *)a1[2];
  v13 = a1[3];
  v14 = a1[4];
  BSDispatchQueueAssertMain();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  type metadata accessor for DuetWidgetViewEntry();
  v15 = (_QWORD *)swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))((uint64_t)v15 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate, 1, 1, v6);
  v15[2] = v11;
  v15[3] = v10;
  v15[4] = v12;
  v15[5] = v13;
  v15[6] = v14;
  swift_bridgeObjectRetain();
  v16 = v12;
  swift_bridgeObjectRetain();
  sub_1D26CB9D0();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))((uint64_t)v15 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_staleContentDate, v9, v6);
  type metadata accessor for DuetWidgetViewRecorder.Record();
  swift_allocObject();
  swift_weakInit();
  swift_weakAssign();
  swift_beginAccess();
  v17 = swift_retain();
  MEMORY[0x1D8239290](v17);
  if (*(_QWORD *)((*(_QWORD *)(v3 + 72) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v3 + 72) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1D26CDB30();
  sub_1D26CDB54();
  sub_1D26CDB0C();
  swift_endAccess();
  if (!*(_QWORD *)(v3 + 88))
    sub_1D269BE1C();
  swift_release();
  return v15;
}

void sub_1D269A764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23[3];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertMain();
  v7 = a1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
  swift_beginAccess();
  sub_1D25D4E30(v7, (uint64_t)v6);
  v8 = sub_1D26CB9DC();
  LODWORD(v7) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v6, 1, v8);
  sub_1D253703C((uint64_t)v6, &qword_1ED96B1E0);
  if ((_DWORD)v7 != 1)
    return;
  sub_1D2699550();
  v9 = (_QWORD *)(v1 + 80);
  swift_beginAccess();
  v10 = swift_retain();
  MEMORY[0x1D8239290](v10);
  if (*(_QWORD *)((*(_QWORD *)(v1 + 80) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(v1 + 80) & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
    sub_1D26CDB30();
  sub_1D26CDB54();
  sub_1D26CDB0C();
  swift_endAccess();
  if (qword_1ED962860 != -1)
    swift_once();
  v11 = sub_1D26CC09C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED977E08);
  swift_retain();
  v12 = sub_1D26CC084();
  v13 = sub_1D26CDD04();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v22[0] = v2;
    v16 = v15;
    v23[0] = v15;
    *(_DWORD *)v14 = 136446210;
    v18 = *(_QWORD *)(a1 + 40);
    v17 = *(_QWORD *)(a1 + 48);
    swift_bridgeObjectRetain();
    v22[1] = sub_1D2537880(v18, v17, v23);
    sub_1D26CDF50();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v12, v13, "Recorded duet widget view for: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    v19 = v16;
    v20 = v22[0];
    MEMORY[0x1D823A5E0](v19, -1, -1);
    MEMORY[0x1D823A5E0](v14, -1, -1);

    if (!*(_QWORD *)(v20 + 88))
      goto LABEL_10;
  }
  else
  {

    swift_release();
    if (!*(_QWORD *)(v2 + 88))
LABEL_10:
      sub_1D269BE1C();
  }
  if (*v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v21 < 24)
      return;
  }
  else if (*(uint64_t *)((*v9 & 0xFFFFFFFFFFFFF8) + 0x10) < 24)
  {
    return;
  }
  sub_1D269AAB8(0xD000000000000012, 0x80000001D26E5CD0);
}

uint64_t sub_1D269AAB8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t *v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t Strong;
  uint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  void *v58;
  _QWORD *v59;
  uint64_t v60;
  void *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  unint64_t v83;
  void (*v84)(char *, uint64_t, uint64_t);
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  __int128 aBlock;
  uint64_t (*v89)(uint64_t);
  void *v90;
  void (*v91)();
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;

  v76 = a2;
  v71 = a1;
  v77 = sub_1D26CD074();
  v3 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v5 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CD0C8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v75 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1D26CD080();
  v73 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v72 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D26CB9DC();
  v82 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v79 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v84 = (void (*)(char *, uint64_t, uint64_t))((char *)&v66 - v16);
  BSDispatchQueueAssertMain();
  objc_msgSend(*(id *)(v2 + 88), sel_invalidate);
  v17 = *(void **)(v2 + 88);
  *(_QWORD *)(v2 + 88) = 0;

  v18 = (uint64_t *)(v2 + 72);
  result = swift_beginAccess();
  v81 = (_QWORD *)v2;
  v20 = *(_QWORD *)(v2 + 72);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    v64 = sub_1D26CE1F0();
    result = swift_bridgeObjectRelease();
    if (!v64)
      return result;
  }
  else if (!*(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  v67 = v7;
  v68 = v6;
  v69 = v5;
  v70 = v3;
  v94 = MEMORY[0x1E0DEE9D8];
  v95 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1D26CB9D0();
  v21 = *v18;
  if ((unint64_t)*v18 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D26CE1F0();
    v22 = result;
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  v23 = v82;
  if (v22)
  {
    if (v22 < 1)
    {
      __break(1u);
      return result;
    }
    v24 = 0;
    v25 = v81 + 4;
    v83 = v21 & 0xC000000000000001;
    v80 = v13;
    v78 = v21;
    do
    {
      if (v83)
        MEMORY[0x1D8239890](v24, v21);
      else
        swift_retain();
      Strong = swift_weakLoadStrong();
      if (Strong)
      {
        v27 = Strong;
        __swift_project_boxed_opaque_existential_0(v25, v81[7]);
        sub_1D2699D00(v27, v84, &v85);
        if (v86)
        {
          sub_1D2538448(&v85, &aBlock);
          sub_1D2537950((uint64_t)&aBlock, (uint64_t)&v85);
          v28 = v95;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v28 = sub_1D2562494(0, v28[2] + 1, 1, v28);
          v30 = v28[2];
          v29 = v28[3];
          if (v30 >= v29 >> 1)
            v28 = sub_1D2562494((_QWORD *)(v29 > 1), v30 + 1, 1, v28);
          v28[2] = v30 + 1;
          sub_1D2538448(&v85, &v28[4 * v30 + 4]);
          v95 = v28;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
          v13 = v80;
          v23 = v82;
        }
        else
        {
          sub_1D253703C((uint64_t)&v85, &qword_1ED96FCE0);
        }
        v31 = v27 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
        swift_beginAccess();
        sub_1D25D4E30(v31, (uint64_t)v12);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v12, 1, v13) == 1)
        {
          v32 = v22;
          v33 = v25;
          sub_1D253703C((uint64_t)v12, &qword_1ED96B1E0);
          v34 = v13;
          v35 = v79;
          (*(void (**)(char *, _QWORD, uint64_t))(v23 + 16))(v79, v84, v34);
          v36 = v27 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
          swift_beginAccess();
          v37 = v35;
          v13 = v34;
          (*(void (**)(uint64_t, char *, uint64_t))(v23 + 40))(v36, v37, v34);
          swift_endAccess();
          v38 = swift_retain();
          MEMORY[0x1D8239290](v38);
          if (*(_QWORD *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v94 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_1D26CDB30();
          sub_1D26CDB54();
          sub_1D26CDB0C();
          swift_release();
          swift_release();
          v23 = v82;
          v25 = v33;
          v22 = v32;
          v21 = v78;
        }
        else
        {
          swift_release();
          swift_release();
          sub_1D253703C((uint64_t)v12, &qword_1ED96B1E0);
        }
      }
      else
      {
        swift_release();
      }
      ++v24;
    }
    while (v22 != v24);
    swift_bridgeObjectRelease();
    v39 = v94;
  }
  else
  {
    swift_bridgeObjectRelease();
    v39 = MEMORY[0x1E0DEE9D8];
  }
  v40 = v81;
  v81[9] = v39;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  v40[10] = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  v41 = v40[9];
  v42 = v77;
  v43 = v70;
  v44 = v76;
  if (v41 >> 62)
  {
    swift_bridgeObjectRetain();
    v65 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (!v65)
      goto LABEL_31;
    goto LABEL_30;
  }
  if (*(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10))
LABEL_30:
    sub_1D269BE1C();
LABEL_31:
  if (qword_1ED962860 != -1)
    swift_once();
  v45 = sub_1D26CC09C();
  __swift_project_value_buffer(v45, (uint64_t)qword_1ED977E08);
  v46 = v95;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v47 = sub_1D26CC084();
  v48 = sub_1D26CDD04();
  if (os_log_type_enabled(v47, v48))
  {
    v49 = swift_slowAlloc();
    v50 = v43;
    v51 = swift_slowAlloc();
    *(_QWORD *)&aBlock = v51;
    *(_DWORD *)v49 = 134349314;
    v52 = v46[2];
    swift_bridgeObjectRelease();
    v93 = v52;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v49 + 12) = 2080;
    swift_bridgeObjectRetain();
    v93 = sub_1D2537880(v71, v44, (uint64_t *)&aBlock);
    v23 = v82;
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v47, v48, "View recorder flushing %{public}ld entries for reason: %s", (uint8_t *)v49, 0x16u);
    swift_arrayDestroy();
    v53 = v51;
    v43 = v50;
    v42 = v77;
    MEMORY[0x1D823A5E0](v53, -1, -1);
    MEMORY[0x1D823A5E0](v49, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  if (v95[2])
  {
    v54 = v81;
    sub_1D269B53C();
    sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
    v55 = v73;
    v56 = v72;
    v57 = v74;
    (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v72, *MEMORY[0x1E0DEF540], v74);
    v58 = (void *)sub_1D26CDDC4();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v57);
    v59 = v95;
    v60 = swift_allocObject();
    *(_QWORD *)(v60 + 16) = v54;
    *(_QWORD *)(v60 + 24) = v59;
    v91 = sub_1D269C77C;
    v92 = v60;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v89 = sub_1D25351AC;
    v90 = &block_descriptor_6_2;
    v61 = _Block_copy(&aBlock);
    swift_retain();
    v62 = v75;
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v87 = MEMORY[0x1E0DEE9D8];
    sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D25483C0();
    v63 = v69;
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v62, v63, v61);
    _Block_release(v61);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v63, v42);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v62, v68);
    (*(void (**)(void (*)(char *, uint64_t, uint64_t), uint64_t))(v23 + 8))(v84, v13);
    return swift_release();
  }
  else
  {
    (*(void (**)(void (*)(char *, uint64_t, uint64_t), uint64_t))(v23 + 8))(v84, v13);
    return swift_bridgeObjectRelease();
  }
}

void sub_1D269B4F4(uint64_t a1, uint64_t a2)
{
  __swift_project_boxed_opaque_existential_0((_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 56));
  type metadata accessor for _DuetWidgetViewProvider();
  sub_1D269A1E4(a2);
}

void sub_1D269B53C()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(uint64_t, void *);
  void *v15;
  void (*v16)(void *);
  uint64_t v17;

  v1 = v0;
  sub_1D269B9B0();
  if (*(_QWORD *)(v0 + 104))
  {
    objc_msgSend(*(id *)(v0 + 96), sel_invalidate);
    v2 = *(void **)(v0 + 96);
    *(_QWORD *)(v0 + 96) = 0;

    sub_1D26CE0A0();
    swift_bridgeObjectRelease();
    v12 = 0x705B746567726154;
    v13 = 0xEB000000003D6469;
    v3 = *(id *)(v0 + 112);
    v4 = objc_msgSend(v3, sel_description, 0x705B746567726154, 0xEB000000003D6469);
    sub_1D26CD938();

    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    v5 = objc_allocWithZone(MEMORY[0x1E0D01720]);
    v6 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend(v5, sel_initWithIdentifier_, v6);

    sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
    v8 = (void *)sub_1D26CDD94();
    v9 = swift_allocObject();
    swift_weakInit();
    v16 = sub_1D269C748;
    v17 = v9;
    v12 = MEMORY[0x1E0C809B0];
    v13 = 1107296256;
    v14 = sub_1D255A5C8;
    v15 = &block_descriptor_17;
    v10 = _Block_copy(&v12);
    swift_release();
    objc_msgSend(v7, sel_scheduleWithFireInterval_leewayInterval_queue_handler_, v8, v10, 10.0, 1.0);
    _Block_release(v10);

    v11 = *(void **)(v1 + 96);
    *(_QWORD *)(v1 + 96) = v7;

  }
}

void sub_1D269B758(void *a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  _QWORD *v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  char v13;
  void *v14;
  void *v15;
  void *v16;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong;
    if (qword_1ED962860 != -1)
      swift_once();
    v4 = sub_1D26CC09C();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED977E08);
    swift_retain_n();
    v5 = sub_1D26CC084();
    v6 = sub_1D26CDD04();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v7 = 138543362;
      v16 = *(void **)(v3 + 112);
      v9 = v16;
      sub_1D26CDF50();
      *v8 = v16;
      swift_release_n();
      _os_log_impl(&dword_1D2531000, v5, v6, "Flush timer for target=%{public}@ expired.", v7, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v8, -1, -1);
      MEMORY[0x1D823A5E0](v7, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    objc_msgSend(a1, sel_invalidate, v16);
    v10 = *(void **)(v3 + 96);
    if (v10
      && (sub_1D2539514(0, &qword_1ED962888),
          v11 = a1,
          v12 = v10,
          v13 = sub_1D26CDECC(),
          v11,
          v12,
          (v13 & 1) != 0))
    {
      objc_msgSend(*(id *)(v3 + 104), sel_invalidate);
      v14 = *(void **)(v3 + 104);
      *(_QWORD *)(v3 + 104) = 0;

      v15 = *(void **)(v3 + 96);
      *(_QWORD *)(v3 + 96) = 0;
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
}

void sub_1D269B9B0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  id v7;
  id v8;
  NSObject *v9;
  void *v10;
  void *v11;
  id v12;
  unsigned int v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  id v22;
  void *v23;
  uint64_t v24;
  id v25;
  id v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  id v30;
  void *v31;
  id v32[2];

  v32[1] = *(id *)MEMORY[0x1E0C80C00];
  if (!*(_QWORD *)(v0 + 104))
  {
    v1 = v0;
    v2 = (void *)sub_1D26CD914();
    v3 = (void *)sub_1D26CD914();
    v4 = objc_msgSend((id)objc_opt_self(), sel_attributeWithDomain_name_, v2, v3);

    v5 = *(void **)(v1 + 112);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D568);
    v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1D26DBA00;
    *(_QWORD *)(v6 + 32) = v4;
    sub_1D26CDB0C();
    v7 = objc_allocWithZone(MEMORY[0x1E0D87C98]);
    v8 = v5;
    v9 = v4;
    v10 = (void *)sub_1D26CD914();
    sub_1D2539514(0, &qword_1ED962FA0);
    v11 = (void *)sub_1D26CDADC();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v7, sel_initWithExplanation_target_attributes_, v10, v8, v11);

    v32[0] = 0;
    v13 = objc_msgSend(v12, sel_acquireWithError_, v32);
    v14 = v32[0];
    if (v13)
    {
      v15 = *(void **)(v1 + 104);
      *(_QWORD *)(v1 + 104) = v12;
      v16 = v14;
      v17 = v12;

      if (qword_1ED962860 != -1)
        swift_once();
      v18 = sub_1D26CC09C();
      __swift_project_value_buffer(v18, (uint64_t)qword_1ED977E08);
      v19 = sub_1D26CC084();
      v20 = sub_1D26CDD04();
      if (os_log_type_enabled(v19, v20))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v21 = 0;
        _os_log_impl(&dword_1D2531000, v19, v20, "Acquired runtime assertion for DuetWidgetViewRecorder.flushIfNecessary", v21, 2u);
        MEMORY[0x1D823A5E0](v21, -1, -1);

LABEL_14:
        return;
      }

    }
    else
    {
      v22 = v32[0];
      v23 = (void *)sub_1D26CB76C();

      swift_willThrow();
      if (qword_1ED962860 != -1)
        swift_once();
      v24 = sub_1D26CC09C();
      __swift_project_value_buffer(v24, (uint64_t)qword_1ED977E08);
      v25 = v23;
      v26 = v23;
      v19 = sub_1D26CC084();
      v27 = sub_1D26CDCEC();
      if (!os_log_type_enabled(v19, v27))
      {

        goto LABEL_14;
      }
      v28 = (uint8_t *)swift_slowAlloc();
      v29 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v28 = 138543362;
      v30 = v23;
      v31 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v32[0] = v31;
      sub_1D26CDF50();
      *v29 = v31;

      _os_log_impl(&dword_1D2531000, v19, v27, "Unable to acquire runtime assertion for WidgetArchiver.unarchive - error: %{public}@", v28, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v29, -1, -1);
      MEMORY[0x1D823A5E0](v28, -1, -1);

    }
    v19 = v9;
    goto LABEL_14;
  }
}

void sub_1D269BE1C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  void *v6;
  double v7;
  id v8;
  void *v9;
  uint64_t v10;
  void *v11;
  _QWORD v12[6];

  v1 = v0;
  BSDispatchQueueAssertMain();
  objc_msgSend(*(id *)(v0 + 88), sel_invalidate);
  v2 = objc_allocWithZone(MEMORY[0x1E0D01720]);
  v3 = (void *)sub_1D26CD914();
  v4 = objc_msgSend(v2, sel_initWithIdentifier_, v3);

  v5 = *(void **)(v1 + 88);
  *(_QWORD *)(v1 + 88) = v4;

  v6 = *(void **)(v1 + 88);
  if (v6)
  {
    v7 = *(double *)(v1 + 16);
    sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
    v8 = v6;
    v9 = (void *)sub_1D26CDD94();
    v10 = swift_allocObject();
    swift_weakInit();
    v12[4] = sub_1D269C784;
    v12[5] = v10;
    v12[0] = MEMORY[0x1E0C809B0];
    v12[1] = 1107296256;
    v12[2] = sub_1D255A5C8;
    v12[3] = &block_descriptor_10;
    v11 = _Block_copy(v12);
    swift_release();
    objc_msgSend(v8, sel_scheduleWithFireInterval_leewayInterval_queue_handler_, v9, v11, v7, 0.0);
    _Block_release(v11);

  }
}

uint64_t sub_1D269BF94()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t result;

  if (qword_1ED962860 != -1)
    swift_once();
  v0 = sub_1D26CC09C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED977E08);
  v1 = sub_1D26CC084();
  v2 = sub_1D26CDD04();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1D2531000, v1, v2, "View recorder flush timer fired.", v3, 2u);
    MEMORY[0x1D823A5E0](v3, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D269AAB8(0x72656D6954, 0xE500000000000000);
    return swift_release();
  }
  return result;
}

void sub_1D269C0AC(uint64_t a1)
{
  sub_1D269A764(a1);
}

_QWORD *sub_1D269C0CC(uint64_t *a1, uint64_t a2)
{
  return sub_1D269A588(a1, a2);
}

uint64_t sub_1D269C0EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  id v6;
  __int128 v8;
  uint64_t v9;
  _UNKNOWN **v10;

  v9 = type metadata accessor for _DuetWidgetViewProvider();
  v10 = &off_1E93D3560;
  *(_QWORD *)&v8 = a1;
  *(_OWORD *)(a2 + 16) = xmmword_1D26DBA10;
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 72) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a2 + 80) = v4;
  *(_QWORD *)(a2 + 96) = 0;
  *(_QWORD *)(a2 + 104) = 0;
  *(_QWORD *)(a2 + 88) = 0;
  v5 = objc_msgSend((id)objc_opt_self(), sel_currentProcess);
  v6 = objc_msgSend(v5, "pid");

  *(_QWORD *)(a2 + 112) = objc_msgSend((id)objc_opt_self(), sel_targetWithPid_, v6);
  sub_1D2538F38(&v8, a2 + 32);
  return a2;
}

uint64_t _s9ChronoKit19DuetWidgetViewEntryC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t);
  int v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v35 = (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v36 = (uint64_t)&v33 - v10;
  v11 = sub_1D26CB9DC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  if (*(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40) && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
    || (v18 = 0, (sub_1D26CE3D0() & 1) != 0))
  {
    v34 = v6;
    v19 = a1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
    swift_beginAccess();
    v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    v20(v17, v19, v11);
    v21 = a2 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_startViewDate;
    swift_beginAccess();
    v20(v15, v21, v11);
    LOBYTE(v21) = sub_1D26CB9A0();
    v22 = *(void (**)(char *, uint64_t))(v12 + 8);
    v22(v15, v11);
    v22(v17, v11);
    if ((v21 & 1) != 0 && (sub_1D26CB9A0() & 1) != 0)
    {
      v23 = a1 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
      swift_beginAccess();
      v24 = v36;
      sub_1D25D4E30(v23, v36);
      v25 = a2 + OBJC_IVAR____TtC9ChronoKit19DuetWidgetViewEntry_endViewDate;
      swift_beginAccess();
      v26 = (uint64_t)v34;
      v27 = (uint64_t)&v34[*(int *)(v4 + 48)];
      sub_1D25D4E30(v24, (uint64_t)v34);
      sub_1D25D4E30(v25, v27);
      v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
      if (v28(v26, 1, v11) == 1)
      {
        sub_1D253703C(v24, &qword_1ED96B1E0);
        v29 = v28(v27, 1, v11);
        if (v29 == 1)
          v30 = &qword_1ED96B1E0;
        else
          v30 = &qword_1ED96B1E8;
        if (v29 == 1)
          v18 = -1;
        else
          v18 = 0;
      }
      else
      {
        v31 = v35;
        sub_1D25D4E30(v26, v35);
        if (v28(v27, 1, v11) == 1)
        {
          v18 = 0;
          v30 = &qword_1ED96B1E8;
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v17, v27, v11);
          sub_1D25369B0((unint64_t *)&qword_1ED96B1D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
          v18 = sub_1D26CD908();
          v22(v17, v11);
          v30 = &qword_1ED96B1E0;
        }
        sub_1D253703C(v24, &qword_1ED96B1E0);
        v22((char *)v31, v11);
      }
      sub_1D253703C(v26, v30);
    }
    else
    {
      v18 = 0;
    }
  }
  return v18 & 1;
}

uint64_t type metadata accessor for DuetWidgetViewEntry()
{
  uint64_t result;

  result = qword_1ED962870;
  if (!qword_1ED962870)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for DuetWidgetViewRecorder.Record()
{
  return objc_opt_self();
}

uint64_t sub_1D269C5B4()
{
  return sub_1D25369B0(&qword_1EFC83730, (uint64_t (*)(uint64_t))type metadata accessor for DuetWidgetViewEntry, (uint64_t)&protocol conformance descriptor for DuetWidgetViewEntry);
}

uint64_t sub_1D269C5E0()
{
  return type metadata accessor for DuetWidgetViewEntry();
}

void sub_1D269C5E8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D26CB9DC();
  if (v0 <= 0x3F)
  {
    sub_1D25D53E4();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DuetWidgetViewEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DuetWidgetViewEntry.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DuetWidgetViewEntry.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_1D269C6A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1D269C6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for _DuetWidgetViewProvider()
{
  return objc_opt_self();
}

uint64_t dispatch thunk of DuetWidgetViewRecording.record(entry:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of DuetWidgetViewRecording.createEntry(identity:staleContentDate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t type metadata accessor for DuetWidgetViewRecorder()
{
  return objc_opt_self();
}

uint64_t method lookup function for DuetWidgetViewRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DuetWidgetViewRecorder.createEntry(identity:staleContentDate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DuetWidgetViewRecorder.record(entry:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t sub_1D269C724()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1D269C748(void *a1)
{
  sub_1D269B758(a1);
}

uint64_t sub_1D269C750()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1D269C77C()
{
  uint64_t v0;

  sub_1D269B4F4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D269C784()
{
  return sub_1D269BF94();
}

uint64_t sub_1D269C79C()
{
  uint64_t v0;

  v0 = sub_1D26CC09C();
  __swift_allocate_value_buffer(v0, qword_1ED96C2F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED96C2F0);
  return sub_1D26CC090();
}

uint64_t KeepAliveTransaction.__allocating_init(reason:)(uint64_t a1, unint64_t a2)
{
  swift_allocObject();
  return KeepAliveTransaction.init(reason:)(a1, a2);
}

uint64_t static KeepAliveTransaction.with<A>(reason:_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[6];
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for KeepAliveTransaction();
  swift_initStackObject();
  swift_bridgeObjectRetain();
  v15 = KeepAliveTransaction.init(reason:)(a1, a2);
  v13[2] = a5;
  v13[3] = a3;
  v13[4] = a4;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C6C8);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
  sub_1D269C94C((uint64_t)&v15, (uint64_t)sub_1D269C9D4, (uint64_t)v13, v10, v11, a5, MEMORY[0x1E0DEDB38], (uint64_t)&v14);
  return swift_release();
}

uint64_t sub_1D269C94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(char *);
  uint64_t result;
  uint64_t v16;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78]();
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v14(v13);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v13, a5);
  return result;
}

uint64_t sub_1D269C9D4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 24))();
  if (v2)
    *a1 = v2;
  return result;
}

uint64_t method lookup function for KeepAliveTransaction()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of KeepAliveTransaction.__allocating_init(reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

_QWORD *ControlsCacheURLProvider.__allocating_init(subdirectory:)(uint64_t a1, uint64_t a2)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = 0x632D6F6E6F726863;
  result[5] = 0xEF736C6F72746E6FLL;
  return result;
}

_QWORD *ControlsCacheURLProvider.init(subdirectory:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = a2;
  v2[4] = 0x632D6F6E6F726863;
  v2[5] = 0xEF736C6F72746E6FLL;
  return v2;
}

unint64_t sub_1D269CAA8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void *v20;
  id v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  char *v29;
  id v30;
  void *v31;
  id v32;
  char *v33;
  uint64_t v34;
  int v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  char v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  id v43;
  void (*v44)(char *, char *, uint64_t);
  unint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  char *v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char v54[32];
  _OWORD v55[2];
  __int128 v56;
  uint64_t v57;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1D26CB778();
  v50 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v51 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v47 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v43 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v52 = (uint64_t)&v43 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v43 - v16;
  MEMORY[0x1E0C80A78](v15);
  v49 = (char *)&v43 - v18;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v19(v17, a1, v6);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D26CB7E4();
  swift_bridgeObjectRelease();
  v20 = *(void **)(a1 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  if (v20)
  {
    v21 = v20;
    sub_1D264A6D4();
    sub_1D26CB7E4();

    swift_bridgeObjectRelease();
    v22 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v23 = v49;
    v22(v49, v17, v6);
    v24 = v52;
    sub_1D269D108(a1, v52);
    v25 = sub_1D2561A20(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v27 = *(_QWORD *)(v25 + 16);
    v26 = *(_QWORD *)(v25 + 24);
    if (v27 >= v26 >> 1)
      v25 = sub_1D2561A20(v26 > 1, v27 + 1, 1, v25);
    *(_QWORD *)(v25 + 16) = v27 + 1;
    v22((char *)(v25+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v27), (char *)v24, v6);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v23, v6);
    return v25;
  }
  v44 = (void (*)(char *, char *, uint64_t))v19;
  v28 = v12;
  v29 = v49;
  v46 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v46(v49, v17, v6);
  v30 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v31 = (void *)sub_1D26CDCC8();

  if (!v31)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v29, v6);
    return MEMORY[0x1E0DEE9D8];
  }
  v32 = v31;
  v33 = v51;
  sub_1D26CDCBC();
  v43 = v32;

  swift_beginAccess();
  v45 = sub_1D264A404();
  sub_1D26CDF44();
  if (v57)
  {
    v48 = MEMORY[0x1E0DEE9D8];
    v52 = MEMORY[0x1E0DEE9B8] + 8;
    v34 = v50;
    while (1)
    {
      sub_1D2538448(&v56, v55);
      sub_1D2537950((uint64_t)v55, (uint64_t)v54);
      v35 = swift_dynamicCast();
      v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      if (v35)
      {
        v36(v4, 0, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
        {
          v46(v28, v4, v6);
          sub_1D26CB868();
          swift_bridgeObjectRetain();
          v37 = sub_1D26CDA28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v37 & 1) != 0)
          {
            v44(v47, v28, v6);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
            {
              v33 = v51;
              v38 = v48;
            }
            else
            {
              v38 = sub_1D2561A20(0, *(_QWORD *)(v48 + 16) + 1, 1, v48);
              v33 = v51;
            }
            v40 = *(_QWORD *)(v38 + 16);
            v39 = *(_QWORD *)(v38 + 24);
            if (v40 >= v39 >> 1)
              v38 = sub_1D2561A20(v39 > 1, v40 + 1, 1, v38);
            *(_QWORD *)(v38 + 16) = v40 + 1;
            v41 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
            v48 = v38;
            v46((char *)(v38 + v41 + *(_QWORD *)(v7 + 72) * v40), v47, v6);
            (*(void (**)(char *, uint64_t))(v7 + 8))(v28, v6);
            v34 = v50;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v7 + 8))(v28, v6);
            v34 = v50;
            v33 = v51;
          }
          goto LABEL_10;
        }
      }
      else
      {
        v36(v4, 1, 1, v6);
      }
      sub_1D258C76C((uint64_t)v4);
LABEL_10:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      sub_1D26CDF44();
      if (!v57)
        goto LABEL_23;
    }
  }
  v48 = MEMORY[0x1E0DEE9D8];
  v34 = v50;
LABEL_23:
  (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v53);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v49, v6);
  return v48;
}

uint64_t sub_1D269D108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  id v15;
  void *v16;
  id v17;
  void (*v18)(char *, char *, uint64_t);
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_1D26CB880();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v24 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D26CB7E4();
  swift_bridgeObjectRelease();
  v11 = *(void **)(a1 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  if (v11)
  {
    v12 = v11;
    sub_1D264A6D4();
    sub_1D26CB7E4();

    swift_bridgeObjectRelease();
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v13(v10, v8, v4);
    v14 = v12;
    v15 = objc_msgSend(v14, sel_intentReference);
    v25 = a2;
    if (v15)
    {
      v16 = v15;
      v17 = objc_msgSend(v15, sel_stableHash);

      v26 = (uint64_t)v17;
      sub_1D26CE370();
    }
    v20 = objc_msgSend(v14, sel_kind);
    v21 = sub_1D26CD938();
    v23 = v22;

    v26 = v21;
    v27 = v23;
    sub_1D26CDA04();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CB7F0();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1D26CB7FC();
    swift_bridgeObjectRelease();

    return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(v25, v10, v4);
  }
  else
  {
    v18 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v18(v10, v8, v4);
    return ((uint64_t (*)(uint64_t, char *, uint64_t))v18)(a2, v10, v4);
  }
}

uint64_t ControlsCacheURLProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ControlsCacheURLProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1D269D3D4(uint64_t a1)
{
  return sub_1D269CAA8(a1);
}

uint64_t sub_1D269D3F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D269D108(a1, a2);
}

uint64_t sub_1D269D414@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D269D460@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ControlsCacheURLProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ControlsCacheURLProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.subdirectory.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.subdirectory.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.subdirectory.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.fileExtension.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.fileExtension.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.fileExtension.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.__allocating_init(subdirectory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.urls(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ControlsCacheURLProvider.url(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t static WidgetCacheKey.allWidgetsAndMetrics(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v4 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  result = type metadata accessor for WidgetCacheKey();
  v6 = *(int *)(result + 24);
  *(_QWORD *)(a2 + *(int *)(result + 20)) = 0;
  *(_QWORD *)(a2 + v6) = 0;
  return result;
}

uint64_t type metadata accessor for WidgetCacheKey()
{
  uint64_t result;

  result = qword_1ED96B500;
  if (!qword_1ED96B500)
    return swift_getSingletonMetadata();
  return result;
}

id static WidgetCacheKey.allMetrics(of:for:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, a2, v5);
  v6 = type metadata accessor for WidgetCacheKey();
  v7 = *(int *)(v6 + 24);
  *(_QWORD *)(a3 + *(int *)(v6 + 20)) = a1;
  *(_QWORD *)(a3 + v7) = 0;
  return a1;
}

uint64_t WidgetCacheKey.init(baseURL:entryKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v6 = *(void **)(a2 + 8);
  v7 = *(id *)a2;
  v8 = v6;
  sub_1D25340E4(a2, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  v9 = type metadata accessor for WidgetCacheKey();
  v10 = *(int *)(v9 + 20);
  v11 = *(int *)(v9 + 24);
  v12 = sub_1D26CB880();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(a3, a1, v12);
  *(_QWORD *)(a3 + v10) = v7;
  *(_QWORD *)(a3 + v11) = v8;
  return result;
}

uint64_t WidgetCacheKey.init(baseURL:widget:metrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = type metadata accessor for WidgetCacheKey();
  v9 = *(int *)(v8 + 20);
  v10 = *(int *)(v8 + 24);
  v11 = sub_1D26CB880();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a4, a1, v11);
  *(_QWORD *)(a4 + v9) = a2;
  *(_QWORD *)(a4 + v10) = a3;
  return result;
}

void *WidgetCacheKey.widget.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for WidgetCacheKey() + 20));
  v2 = v1;
  return v1;
}

void *WidgetCacheKey.metrics.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for WidgetCacheKey() + 24));
  v2 = v1;
  return v1;
}

void *WidgetCacheKey.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  id v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  unint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for WidgetCacheKey();
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(int *)(v3 + 20);
  v7 = *(_QWORD *)(v1 + v6);
  sub_1D258738C(v1, (uint64_t)v5);
  if (v7)
  {
    v8 = *(_QWORD *)&v5[*(int *)(v2 + 24)];
    sub_1D25340E4((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WidgetCacheKey);
    if (v8)
    {
      v15 = 0;
      v16 = 0xE000000000000000;
      sub_1D26CE0A0();
      swift_bridgeObjectRelease();
      v15 = 0x3A4C525565736162;
      v16 = 0xE900000000000020;
      sub_1D26CB880();
      sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      result = *(void **)(v1 + v6);
      if (result)
      {
        v10 = objc_msgSend(result, sel_extensionIdentity);
        v11 = objc_msgSend(v10, sel_description);
        sub_1D26CD938();

        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        return (void *)v15;
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    sub_1D25340E4((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WidgetCacheKey);
  }
  v12 = *(void **)(v1 + v6);
  if (v12)
  {
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_1D26CE0A0();
    swift_bridgeObjectRelease();
    v15 = 0x3A4C525565736162;
    v16 = 0xE900000000000020;
    sub_1D26CB880();
    sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    v13 = objc_msgSend(v12, sel_extensionIdentity);
    v14 = objc_msgSend(v13, sel_description);
    sub_1D26CD938();

    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    return (void *)v15;
  }
  return (void *)sub_1D26CB7A8();
}

void WidgetCacheKey.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;

  v1 = v0;
  sub_1D26CB880();
  sub_1D25369B0(&qword_1ED961AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1D26CD8D8();
  v2 = type metadata accessor for WidgetCacheKey();
  v3 = *(void **)(v0 + *(int *)(v2 + 20));
  sub_1D26CE478();
  if (v3)
  {
    v4 = v3;
    sub_1D26CDED8();

  }
  v5 = *(void **)(v1 + *(int *)(v2 + 24));
  sub_1D26CE478();
  if (v5)
  {
    v6 = v5;
    sub_1D26CDED8();

  }
}

uint64_t WidgetCacheKey.hashValue.getter()
{
  sub_1D26CE460();
  WidgetCacheKey.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D269DBCC()
{
  sub_1D26CE460();
  WidgetCacheKey.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D269DC0C()
{
  sub_1D26CE460();
  WidgetCacheKey.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D269DC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v8 = *(void **)(a2 + 8);
  v9 = *(id *)a2;
  v10 = v8;
  sub_1D25340E4(a2, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  v12 = *(int *)(a3 + 20);
  v11 = *(int *)(a3 + 24);
  v13 = sub_1D26CB880();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a4, a1, v13);
  *(_QWORD *)(a4 + v12) = v9;
  *(_QWORD *)(a4 + v11) = v10;
  return result;
}

uint64_t _s9ChronoKit14WidgetCacheKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  char v16;

  if ((MEMORY[0x1D8236FF8]() & 1) == 0)
    return 0;
  v4 = type metadata accessor for WidgetCacheKey();
  v5 = *(int *)(v4 + 20);
  v6 = *(void **)(a1 + v5);
  v7 = *(void **)(a2 + v5);
  if (v6)
  {
    if (!v7)
      return 0;
    sub_1D2539514(0, &qword_1ED96EA38);
    v8 = v7;
    v9 = v6;
    v10 = sub_1D26CDECC();

    if ((v10 & 1) == 0)
      return 0;
  }
  else if (v7)
  {
    return 0;
  }
  v11 = *(int *)(v4 + 24);
  v12 = *(void **)(a1 + v11);
  v13 = *(void **)(a2 + v11);
  if (v12)
  {
    if (v13)
    {
      sub_1D2539514(0, &qword_1ED96B160);
      v14 = v13;
      v15 = v12;
      v16 = sub_1D26CDECC();

      if ((v16 & 1) != 0)
        return 1;
    }
  }
  else if (!v13)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1D269DDE0()
{
  return sub_1D25369B0(&qword_1ED96B0F0, (uint64_t (*)(uint64_t))type metadata accessor for WidgetCacheKey, (uint64_t)&protocol conformance descriptor for WidgetCacheKey);
}

uint64_t *initializeBufferWithCopyOfBuffer for WidgetCacheKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CB880();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = v10;
    v13 = v11;
  }
  return a1;
}

void destroy for WidgetCacheKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  id v12;

  v6 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = v9;
  v12 = v10;
  return a1;
}

uint64_t assignWithCopy for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;

  v6 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  v11 = *(int *)(a3 + 24);
  v12 = *(void **)(a1 + v11);
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = v13;

  return a1;
}

uint64_t initializeWithTake for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for WidgetCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;

  v6 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = *(int *)(a3 + 24);
  v10 = *(void **)(a1 + v9);
  *(_QWORD *)(a1 + v9) = *(_QWORD *)(a2 + v9);

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetCacheKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D269E0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetCacheKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D269E15C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D26CB880();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_1D269E1D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB880();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of EnvironmentProviding.environmentValues.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EnvironmentProviding.environmentDidChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D269E258(uint64_t a1)
{
  sub_1D26CDBA8();
  return a1;
}

uint64_t sub_1D269E280(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1D269E2E0(a1);
  return v2;
}

void *sub_1D269E2BC()
{
  void *result;

  result = (void *)sub_1D253DE98((uint64_t)&unk_1E93D4548);
  off_1ED963758 = result;
  return result;
}

uint64_t sub_1D269E2E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = qword_1ED9634C0;
  type metadata accessor for ReloadHistory.ReloadHistoryRecord(255, *(_QWORD *)(*(_QWORD *)v1 + 80), *(_QWORD *)(*(_QWORD *)v1 + 88), *(_QWORD *)(*(_QWORD *)v1 + 96));
  sub_1D26CDBA8();
  *(_QWORD *)(v1 + v3) = sub_1D26CD7C4();
  v4 = v1 + qword_1ED9634C8;
  v5 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a1, v5);
  return v1;
}

uint64_t sub_1D269E380@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  *a6 = *a1;
  v8 = type metadata accessor for ReloadHistory.ReloadHistoryRecord(0, a3, a4, a5);
  sub_1D26CB9B8();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8) == 1)
  {
    v10 = sub_1D26CDF38();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(a2, v10);
    v12 = 0;
  }
  else
  {
    v12 = *(_QWORD *)(a2 + *(int *)(v8 + 48));
    result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  }
  if (v12 == -1)
    __break(1u);
  else
    *(_QWORD *)((char *)a6 + *(int *)(v8 + 48)) = v12 + 1;
  return result;
}

unint64_t sub_1D269E450(uint64_t a1, unint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t);
  NSObject *v29;
  os_log_type_t v30;
  int v31;
  _BOOL4 v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  void (*v62)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  _QWORD v64[2];
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD v80[3];
  uint64_t v81;
  uint64_t v82[4];

  v3 = v2;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)v3 + 88);
  v77 = *(_QWORD *)(*(_QWORD *)v3 + 96);
  v8 = type metadata accessor for ReloadHistory.ReloadHistoryRecord(0, v6, v7, v77);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v67 = (_QWORD *)((char *)v64 - v13);
  v78 = v14;
  v15 = sub_1D26CDF38();
  v73 = *(_QWORD *)(v15 - 8);
  v74 = v15;
  v16 = MEMORY[0x1E0C80A78](v15);
  v17 = MEMORY[0x1E0C80A78](v16);
  v72 = (char *)v64 - v18;
  v19 = *(_QWORD *)(v6 - 8);
  v20 = MEMORY[0x1E0C80A78](v17);
  v76 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v64 - v22;
  v24 = *a2;
  v25 = *a2 >> 61;
  v69 = v26;
  v70 = v9;
  v75 = v7;
  v27 = a1;
  if (v25 == 3)
    v24 = *(_QWORD *)(v24 + 16);
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  v28((char *)v64 - v22, v27, v6);
  sub_1D2534610(v24);
  sub_1D2534610(v24);
  sub_1D2534610(v24);
  v29 = sub_1D26CC084();
  v30 = sub_1D26CDD04();
  v31 = v30;
  v32 = os_log_type_enabled(v29, v30);
  v71 = v3;
  v66 = v12;
  v68 = v28;
  if (v32)
  {
    v33 = swift_slowAlloc();
    v34 = swift_slowAlloc();
    v82[0] = v34;
    *(_DWORD *)v33 = 136315394;
    v64[1] = v33 + 4;
    LODWORD(v65) = v31;
    v35 = v76;
    v28(v76, (uint64_t)v23, v6);
    v36 = *(void (**)(char *, uint64_t))(v19 + 8);
    v36(v23, v6);
    v37 = sub_1D26CE370();
    v39 = v38;
    v36(v35, v6);
    v80[0] = sub_1D2537880(v37, v39, v82);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    v80[0] = v24;
    ReloadConfiguration.ReloadReason.description.getter();
    v80[0] = sub_1D2537880(v40, v41, v82);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D2534224(v24);
    sub_1D2534224(v24);
    _os_log_impl(&dword_1D2531000, v29, (os_log_type_t)v65, "record reload: %s = %s", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v34, -1, -1);
    v42 = v33;
    v3 = v71;
    MEMORY[0x1D823A5E0](v42, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v23, v6);

    sub_1D2534224(v24);
    sub_1D2534224(v24);
  }
  v43 = (uint64_t *)(v3 + qword_1ED9634C0);
  swift_beginAccess();
  v44 = *v43;
  v45 = sub_1D26CDBA8();
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](v80, v27, v44, v6, v45, v77);
  swift_bridgeObjectRelease();
  if (v80[0])
  {
    v65 = v27;
    v81 = v80[0];
    MEMORY[0x1E0C80A78](v80[0]);
    v46 = v75;
    v64[-4] = v6;
    v64[-3] = v46;
    v47 = v77;
    v64[-2] = v77;
    v64[-1] = v24;
    swift_bridgeObjectRetain();
    MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF38], v45);
    v48 = v72;
    sub_1D26CDA88();
    swift_bridgeObjectRelease();
    v80[0] = v24;
    v49 = v69;
    (*(void (**)(uint64_t, char *, uint64_t))(v73 + 16))(v69, v48, v74);
    sub_1D2534610(v24);
    v50 = v67;
    sub_1D269E380(v80, v49, v6, v46, v47, v67);
    v51 = v70;
    v52 = v66;
    v53 = v78;
    (*(void (**)(char *, _QWORD *, uint64_t))(v70 + 16))(v66, v50, v78);
    sub_1D26CDB78();
    v54 = swift_bridgeObjectRetain();
    v55 = MEMORY[0x1D8239320](v54, v53);
    swift_bridgeObjectRelease();
    if (v55 >= 3)
    {
      sub_1D26CDB84();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v78);
    }
    v68(v76, v65, v6);
    v79 = v81;
    swift_beginAccess();
    sub_1D26CD89C();
    sub_1D26CD8C0();
    swift_endAccess();
    sub_1D2534224(v24);
    (*(void (**)(_QWORD *, uint64_t))(v51 + 8))(v50, v78);
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v72, v74);
  }
  else
  {
    v68(v76, v27, v6);
    v57 = v78;
    sub_1D26CE37C();
    v58 = v70;
    swift_allocObject();
    v59 = sub_1D26CDB18();
    v61 = v60;
    v80[0] = v24;
    v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56);
    v63 = v69;
    v62(v69, 1, 1, v57);
    sub_1D2534610(v24);
    sub_1D269E380(v80, v63, v6, v75, v77, v61);
    v81 = v59;
    swift_beginAccess();
    sub_1D26CD89C();
    sub_1D26CD8C0();
    swift_endAccess();
    return sub_1D2534224(v24);
  }
}

uint64_t type metadata accessor for ReloadHistory.ReloadHistoryRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReloadHistory.ReloadHistoryRecord);
}

uint64_t sub_1D269EB3C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  _QWORD v15[5];
  uint64_t v16;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v15[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t *)((char *)v1 + qword_1ED9634C0);
  swift_beginAccess();
  v9 = *v8;
  v10 = *(_QWORD *)(v3 + 88);
  v11 = *(_QWORD *)(v3 + 96);
  type metadata accessor for ReloadHistory.ReloadHistoryRecord(255, v4, v10, v11);
  v12 = sub_1D26CDBA8();
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](v15, a1, v9, v4, v12, v11);
  result = swift_bridgeObjectRelease();
  if (v15[0])
  {
    v14 = (uint64_t)&v14;
    v16 = v15[0];
    MEMORY[0x1E0C80A78](result);
    *(&v14 - 4) = v4;
    *(&v14 - 3) = v10;
    *(&v14 - 2) = v11;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF28], v12);
    MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF58], v12);
    sub_1D26CDCA4();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    v15[3] = v16;
    swift_beginAccess();
    sub_1D26CD89C();
    sub_1D26CD8C0();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1D269ED20@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v34;
  char *v35;
  long double v36;
  int v37;
  long double *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v7 = (_QWORD *)*v3;
  v8 = sub_1D26CB9DC();
  v45 = *(_QWORD *)(v8 - 8);
  v46 = v8;
  MEMORY[0x1E0C80A78](v8);
  v40 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v7[10];
  v11 = v7[11];
  v12 = v7[12];
  v13 = type metadata accessor for ReloadHistory.ReloadHistoryRecord(255, v10, v11, v12);
  v14 = sub_1D26CDF38();
  v41 = *(_QWORD *)(v14 - 8);
  v42 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v36 - v16;
  v44 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v15);
  v43 = (char *)&v36 - v18;
  v19 = *a2;
  if (*a2 >> 61 == 3)
    v19 = *(_QWORD *)(v19 + 16);
  v20 = (_QWORD *)((char *)v3 + qword_1ED9634C0);
  swift_beginAccess();
  v21 = *v20;
  swift_bridgeObjectRetain();
  sub_1D2534610(v19);
  v22 = sub_1D26CDBA8();
  MEMORY[0x1D8239074](&v47, a1, v21, v10, v22, v12);
  swift_bridgeObjectRelease();
  v23 = v47;
  if (!v47)
    goto LABEL_12;
  if (qword_1ED963760 != -1)
    swift_once();
  v24 = off_1ED963758;
  if (!*((_QWORD *)off_1ED963758 + 2))
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    sub_1D2534224(v19);
    v30 = 1;
    goto LABEL_13;
  }
  sub_1D2534610(v19);
  v25 = sub_1D2589478(v19);
  if ((v26 & 1) == 0)
  {
    sub_1D2534224(v19);
    goto LABEL_11;
  }
  v39 = a3;
  v27 = v24[7] + 24 * v25;
  v36 = *(long double *)v27;
  v37 = *(unsigned __int8 *)(v27 + 16);
  v28 = sub_1D2534224(v19);
  v38 = &v36;
  v47 = v23;
  MEMORY[0x1E0C80A78](v28);
  *((_QWORD *)&v36 - 4) = v10;
  *((_QWORD *)&v36 - 3) = v11;
  *((_QWORD *)&v36 - 2) = v12;
  *((_QWORD *)&v36 - 1) = v19;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF38], v22);
  sub_1D26CDA88();
  swift_bridgeObjectRelease();
  v29 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v17, 1, v13) == 1)
  {
    sub_1D2534224(v19);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
    v30 = 1;
    a3 = v39;
LABEL_13:
    v32 = v45;
    v31 = v46;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(a3, v30, 1, v31);
  }
  v34 = v43;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v43, v17, v13);
  a3 = v39;
  if (v37)
  {
    v32 = v45;
    v31 = v46;
    v35 = v40;
    if (v37 != 1)
      pow(v36, (double)*(unint64_t *)&v34[*(int *)(v13 + 48)]);
  }
  else
  {
    v32 = v45;
    v31 = v46;
    v35 = v40;
  }
  sub_1D26CB9B8();
  sub_1D26CB934();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v35, v31);
  sub_1D2534224(v19);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v34, v13);
  v30 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(a3, v30, 1, v31);
}

uint64_t sub_1D269F0D8()
{
  uint64_t **v0;
  uint64_t *v1;

  v1 = *v0;
  swift_beginAccess();
  type metadata accessor for ReloadHistory.ReloadHistoryRecord(255, v1[10], v1[11], v1[12]);
  sub_1D26CDBA8();
  sub_1D26CD89C();
  sub_1D26CD890();
  return swift_endAccess();
}

uint64_t sub_1D269F170(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE v7[24];
  uint64_t v8;

  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 80);
  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_BYTE *))(v5 + 16))(&v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  v8 = 0;
  swift_beginAccess();
  type metadata accessor for ReloadHistory.ReloadHistoryRecord(255, v3, *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96));
  sub_1D26CDBA8();
  sub_1D26CD89C();
  sub_1D26CD8C0();
  return swift_endAccess();
}

uint64_t ReloadHistory.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1ED9634C8;
  v2 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReloadHistory.__deallocating_deinit()
{
  ReloadHistory.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D269F2C8(uint64_t *a1)
{
  return sub_1D269F328(a1) & 1;
}

uint64_t sub_1D269F2E0(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

uint64_t sub_1D269F328(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

uint64_t type metadata accessor for _ReloadHistoryConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_1D269F390()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CC09C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for ReloadHistory(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ReloadHistory);
}

uint64_t method lookup function for ReloadHistory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReloadHistory.recordReload(for:reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ReloadHistory.clearEnvironmentMismatchHistoryIfNecessary(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ReloadHistory.reloadLoopBackOffDate(key:reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ReloadHistory.removeAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ReloadHistory.remove(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t sub_1D269F45C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB9DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t *sub_1D269F4DC(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  int v5;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (unint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    sub_1D2534610(*a2);
    *a1 = v7;
    v8 = *(int *)(a3 + 44);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D26CB9DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(unint64_t *)((char *)a1 + *(int *)(a3 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(a3 + 48));
  }
  return a1;
}

uint64_t sub_1D269F588(unint64_t *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  sub_1D2534224(*a1);
  v4 = (char *)a1 + *(int *)(a2 + 44);
  v5 = sub_1D26CB9DC();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

unint64_t *sub_1D269F5D0(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a2;
  sub_1D2534610(*a2);
  *a1 = v6;
  v7 = *(int *)(a3 + 44);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  *(unint64_t *)((char *)a1 + *(int *)(a3 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

unint64_t *sub_1D269F650(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = *a2;
  sub_1D2534610(*a2);
  v7 = *a1;
  *a1 = v6;
  sub_1D2534224(v7);
  v8 = *(int *)(a3 + 44);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  *(unint64_t *)((char *)a1 + *(int *)(a3 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

_QWORD *sub_1D269F6D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 44);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

unint64_t *sub_1D269F750(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = *a1;
  *a1 = *a2;
  sub_1D2534224(v6);
  v7 = *(int *)(a3 + 44);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  *(unint64_t *)((char *)a1 + *(int *)(a3 + 48)) = *(unint64_t *)((char *)a2 + *(int *)(a3 + 48));
  return a1;
}

uint64_t sub_1D269F7D0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D269F7DC(char *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 122)
  {
    v4 = ((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7));
    v5 = v4 ^ 0x7E;
    v6 = 128 - v4;
    if (v5 >= 0x7A)
      return 0;
    else
      return v6;
  }
  else
  {
    v10 = sub_1D26CB9DC();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 44)], a2, v10);
  }
}

uint64_t sub_1D269F86C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t *sub_1D269F878(unint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t *v5;
  uint64_t v6;
  uint64_t v8;

  v5 = result;
  if (a3 == 122)
  {
    v6 = (-(int)a2 >> 3) & 0xF | (16 * (-(int)a2 & 0x7F));
    *result = (v6 | (v6 << 57)) & 0xF000000000000007;
  }
  else
  {
    v8 = sub_1D26CB9DC();
    return (unint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))((char *)v5 + *(int *)(a4 + 44), a2, a2, v8);
  }
  return result;
}

uint64_t RBImageSnapshotter.RBImageOptions.init(colorMode:scale:format:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  *(_DWORD *)a4 = a1;
  *(_BYTE *)(a4 + 4) = BYTE4(a1) & 1;
  *(_DWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 12) = BYTE4(a2) & 1;
  v5 = a4 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  v6 = sub_1D26CBBEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
}

uint64_t type metadata accessor for RBImageSnapshotter.RBImageOptions(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED96C6B0);
}

unint64_t RBImageSnapshotter.RBImageOptions.colorMode.getter()
{
  unsigned int *v0;

  return *v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32);
}

uint64_t RBImageSnapshotter.RBImageOptions.colorMode.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)v1 = result;
  *(_BYTE *)(v1 + 4) = BYTE4(result) & 1;
  return result;
}

uint64_t (*RBImageSnapshotter.RBImageOptions.colorMode.modify())()
{
  return CGSizeMake;
}

unint64_t RBImageSnapshotter.RBImageOptions.scale.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t RBImageSnapshotter.RBImageOptions.scale.setter(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 8) = result;
  *(_BYTE *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*RBImageSnapshotter.RBImageOptions.scale.modify())()
{
  return CGSizeMake;
}

uint64_t RBImageSnapshotter.RBImageOptions.format.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  v4 = sub_1D26CBBEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RBImageSnapshotter.RBImageOptions.format.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  v4 = sub_1D26CBBEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

double (*RBImageSnapshotter.RBImageOptions.format.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  return CGSizeMake;
}

uint64_t sub_1D269FAA8()
{
  unsigned int *v0;
  unsigned int *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  char isUniquelyReferenced_nonNull_native;
  unsigned int v9;
  void *v10;
  id v11;
  id v12;
  double v13;
  id v14;
  char v15;
  _OWORD v17[2];
  __int128 v18;
  unint64_t v19;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9E0];
  if ((v0[1] & 1) == 0)
  {
    v3 = *v0;
    v4 = (void *)*MEMORY[0x1E0D87498];
    v5 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v6 = v4;
    v7 = objc_msgSend(v5, sel_initWithInt_, v3);
    v19 = sub_1D2640D78();
    *(_QWORD *)&v18 = v7;
    sub_1D2538448(&v18, v17);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1D266E0E4(v17, v6, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  if ((v1[3] & 1) == 0)
  {
    v9 = v1[2];
    v10 = (void *)*MEMORY[0x1E0D874A0];
    v11 = objc_allocWithZone(MEMORY[0x1E0CB37E8]);
    v12 = v10;
    LODWORD(v13) = v9;
    v14 = objc_msgSend(v11, sel_initWithFloat_, v13);
    v19 = sub_1D2640D78();
    *(_QWORD *)&v18 = v14;
    sub_1D2538448(&v18, v17);
    v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D266E0E4(v17, v12, v15);

    swift_bridgeObjectRelease();
  }
  return v2;
}

void sub_1D269FC14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  double v15;
  double v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD aBlock[6];

  v28 = a4;
  v29 = a5;
  v30 = a3;
  v26 = a2;
  v25 = sub_1D26CB880();
  v7 = *(_QWORD *)(v25 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  MEMORY[0x1E0C80A78](v25);
  v9 = type metadata accessor for RBImageSnapshotter(0);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(id *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C360) + 44));
  objc_msgSend(v27, sel_size);
  v14 = v13;
  v16 = v15;
  sub_1D269FAA8();
  type metadata accessor for RBLayerCopyImageKey(0);
  sub_1D25369B0((unint64_t *)&unk_1ED96C028, (uint64_t (*)(uint64_t))type metadata accessor for RBLayerCopyImageKey, (uint64_t)&unk_1D26D0168);
  v17 = (void *)sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  sub_1D2534120(v5, (uint64_t)v12, type metadata accessor for RBImageSnapshotter);
  v18 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v25);
  v19 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v20 = (v11 + *(unsigned __int8 *)(v7 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v21 = swift_allocObject();
  sub_1D26A0944((uint64_t)v12, v21 + v19);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v18);
  v22 = (_QWORD *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8));
  v23 = v29;
  *v22 = v28;
  v22[1] = v23;
  aBlock[4] = sub_1D26A0988;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D26A01F0;
  aBlock[3] = &block_descriptor_18;
  v24 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v27, sel_copyImageInRect_options_completionQueue_handler_, v17, v30, v24, 0.0, 0.0, v14, v16);
  _Block_release(v24);

}

void sub_1D269FE84(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  CGImage *v12;
  void *v13;
  _QWORD *v14;
  id v15;
  uint64_t v16;
  _BYTE v17[16];

  v7 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  v10 = &v17[-v9];
  if (a1)
  {
    sub_1D2534120(a2, (uint64_t)&v17[-v9], type metadata accessor for RBImageSnapshotter.RBImageOptions);
    v11 = &v10[*(int *)(v7 + 24)];
    v12 = a1;
    sub_1D269FFEC(v12);
    v16 = sub_1D26CBBEC();
    (*(void (**)(_BYTE *, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v11, v16);
    a4(0);

  }
  else
  {
    sub_1D26A0A08();
    v13 = (void *)swift_allocError();
    *v14 = 0;
    v14[1] = 0;
    swift_willThrow();
    v15 = v13;
    a4(v13);

  }
}

void sub_1D269FFEC(CGImage *a1)
{
  const __CFURL *v2;
  CGDataConsumer *v3;
  __CFString *v4;
  CGImageDestination *v5;
  const __CFDictionary *v6;
  _QWORD *v7;
  _QWORD *v8;
  _OWORD *v9;

  v2 = (const __CFURL *)sub_1D26CB7D8();
  v3 = CGDataConsumerCreateWithURL(v2);

  if (v3)
  {
    sub_1D26CBBE0();
    v4 = (__CFString *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v5 = CGImageDestinationCreateWithDataConsumer(v3, v4, 1uLL, 0);

    if (v5)
    {
      if (sub_1D26CBBBC())
      {
        type metadata accessor for CFString(0);
        sub_1D25369B0((unint64_t *)&qword_1ED96EE38, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1D26D0124);
        v6 = (const __CFDictionary *)sub_1D26CD7DC();
        swift_bridgeObjectRelease();
      }
      else
      {
        v6 = 0;
      }
      CGImageDestinationAddImage(v5, a1, v6);

      if (!CGImageDestinationFinalize(v5))
      {
        sub_1D26A0A08();
        swift_allocError();
        *v9 = xmmword_1D26DBE60;
        swift_willThrow();
      }

    }
    else
    {
      sub_1D26A0A08();
      swift_allocError();
      *v8 = 0xD000000000000023;
      v8[1] = 0x80000001D26E6010;
      swift_willThrow();

    }
  }
  else
  {
    sub_1D26A0A08();
    swift_allocError();
    *v7 = 0xD00000000000001FLL;
    v7[1] = 0x80000001D26E5FF0;
    swift_willThrow();
  }
}

void sub_1D26A01F0(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_1D26A0244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2534120(v0, (uint64_t)v3, v4);
  v5 = &v3[*(int *)(v1 + 24)];
  v6 = sub_1D26CBBE0();
  v7 = sub_1D26CBBEC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  return v6;
}

uint64_t initializeBufferWithCopyOfBuffer for RBImageSnapshotter(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    v6 = *(int *)(v4 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1D26CBBEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RBImageSnapshotter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26A03A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for RBImageSnapshotter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26A03F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for RBImageSnapshotter(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96D038);
}

uint64_t sub_1D26A0444()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for RBImageSnapshotter.RBImageOptions(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    v5 = *(int *)(a3 + 24);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_1D26CBBEC();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_1D26CBBEC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for RBImageSnapshotter.RBImageOptions(uint64_t a1, int *a2, uint64_t a3)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = (uint64_t)a2 + v6;
  v9 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for RBImageSnapshotter.RBImageOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for RBImageSnapshotter.RBImageOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26A0760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = sub_1D26CBBEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for RBImageSnapshotter.RBImageOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26A07AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = sub_1D26CBBEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1D26A07F0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CBBEC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D26A0864()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(type metadata accessor for RBImageSnapshotter(0) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = sub_1D26CB880();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (v2 + v3 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = v0 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24) + v2;
  v8 = sub_1D26CBBEC();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D26A0944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RBImageSnapshotter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D26A0988(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *(_QWORD *)(type metadata accessor for RBImageSnapshotter(0) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(sub_1D26CB880() - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  sub_1D269FE84(a1, v1 + v4, v1 + v7, *(void (**)(void *))(v1 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

unint64_t sub_1D26A0A08()
{
  unint64_t result;

  result = qword_1ED96C390[0];
  if (!qword_1ED96C390[0])
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DBF30, &type metadata for RBImageSnapshotter.Error);
    atomic_store(result, qword_1ED96C390);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RBImageSnapshotter.Error(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RBImageSnapshotter.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for RBImageSnapshotter.Error()
{
  return &type metadata for RBImageSnapshotter.Error;
}

void WatchExpandedJindoView.init(appName:isLeftToRight:leadingView:trailingView:spacing:smartStackPlatterPadding:titleHeight:launchRequestHandler:)()
{
  type metadata accessor for WatchExpandedJindoView();
}

uint64_t sub_1D26A0B84(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;

  v11 = v6 + a1[18];
  v12 = (_QWORD *)(v6 + a1[19]);
  *(_QWORD *)v6 = v5;
  *(_QWORD *)(v6 + 8) = v4;
  *(_BYTE *)(v6 + 16) = v3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v6 + a1[14], v2, v1);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v6 + a1[15], v15, v7);
  *(_QWORD *)(v6 + a1[16]) = v9;
  *(_QWORD *)(v6 + a1[17]) = v8;
  *(_QWORD *)v11 = v16;
  *(_BYTE *)(v11 + 8) = v17 & 1;
  *v12 = v18;
  v12[1] = v14;
  return result;
}

void type metadata accessor for WatchExpandedJindoView()
{
  JUMPOUT(0x1D823A430);
}

__n128 sub_1D26A0C34@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  uint64_t v13;
  void *v23;
  _OWORD *v24;
  __n128 result;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __n128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;

  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1D26CDCF8();
    v23 = (void *)sub_1D26CCB58();
    sub_1D26CBFC4();

  }
  sub_1D26CC450();
  sub_1D2537078(v13, a9, &qword_1EFC837E8);
  v24 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837F0) + 36));
  v24[4] = v30;
  v24[5] = v31;
  v24[6] = v32;
  *v24 = v26;
  v24[1] = v27;
  result = v29;
  v24[2] = v28;
  v24[3] = v29;
  return result;
}

uint64_t sub_1D26A0DF0@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20;
  char v21;
  uint64_t v22;
  void *v31;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;

  v20 = a19;
  v21 = a18;
  v22 = a17;
  if ((a2 & 1) != 0)
    a1 = -INFINITY;
  if ((a4 & 1) != 0)
    a3 = a1;
  if ((a6 & 1) != 0)
    a5 = a3;
  if (a1 > a3 || a3 > a5)
    goto LABEL_22;
  if ((a8 & 1) != 0)
    a7 = -INFINITY;
  if ((a11 & 1) != 0)
    a10 = a7;
  if ((a13 & 1) != 0)
    a12 = a10;
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_1D26CDCF8();
    v31 = (void *)sub_1D26CCB58();
    sub_1D26CBFC4();

    v21 = a18;
    v20 = a19;
    v22 = a17;
  }
  sub_1D26CC450();
  *(_QWORD *)a9 = a16;
  *(_QWORD *)(a9 + 8) = v22;
  *(_BYTE *)(a9 + 16) = v21 & 1;
  *(_QWORD *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_1D25725F0(a16, v22, v21 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t WatchExpandedJindoView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  _QWORD v42[2];
  _QWORD v43[3];

  v36 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EFC83738);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_getTupleTypeMetadata3();
  v5 = sub_1D26CD044();
  v6 = MEMORY[0x1E0CE0680];
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0680], v5);
  sub_1D26CCF48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82708);
  sub_1D26CC3E4();
  swift_getTupleTypeMetadata3();
  v7 = sub_1D26CD044();
  MEMORY[0x1D823A4E4](v6, v7);
  sub_1D26CCF48();
  sub_1D26CC3E4();
  sub_1D26CC918();
  swift_getTupleTypeMetadata2();
  v8 = sub_1D26CD044();
  MEMORY[0x1D823A4E4](v6, v8);
  v9 = sub_1D26CCF9C();
  v33 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - v10;
  v12 = sub_1D26CC3E4();
  v34 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v30 - v13;
  v14 = sub_1D26CC3E4();
  v35 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v31 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v32 = (uint64_t)&v30 - v17;
  v38 = v4;
  v39 = v3;
  v40 = *(_OWORD *)(a1 + 32);
  v41 = v37;
  sub_1D26CC888();
  sub_1D26CCF90();
  sub_1D26CCB70();
  v18 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFCC0], v9);
  v19 = v30;
  sub_1D26CCE40();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v9);
  v20 = (uint64_t *)(v37 + *(int *)(a1 + 76));
  v21 = *v20;
  v22 = v20[1];
  v43[0] = v18;
  v43[1] = MEMORY[0x1E0CD9758];
  v23 = MEMORY[0x1E0CD9C20];
  v24 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v12, v43);
  v25 = (uint64_t)v31;
  sub_1D2610958(v21, v22, v12);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v12);
  v26 = sub_1D2569900();
  v42[0] = v24;
  v42[1] = v26;
  MEMORY[0x1D823A4E4](v23, v14, v42);
  v27 = v32;
  sub_1D25EDCB8(v25, v14, v32);
  v28 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  v28(v25, v14);
  sub_1D25EAC44(v27, v14, v36);
  return ((uint64_t (*)(uint64_t, uint64_t))v28)(v27, v14);
}

void sub_1D26A13B0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t KeyPath;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;

  v131 = a5;
  v136 = a6;
  v137 = a4;
  swift_getTupleTypeMetadata3();
  v9 = sub_1D26CD044();
  v10 = MEMORY[0x1E0CE0680];
  v117 = v9;
  v115 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0680], v9);
  v11 = sub_1D26CCF48();
  v118 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v116 = (char *)&v94 - v12;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82708);
  v141 = v11;
  v13 = sub_1D26CC3E4();
  v119 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v121 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v120 = (char *)&v94 - v16;
  v139 = a2;
  v140 = a3;
  swift_getTupleTypeMetadata3();
  v17 = sub_1D26CD044();
  v108 = MEMORY[0x1D823A4E4](v10, v17);
  v109 = v17;
  v18 = sub_1D26CCF48();
  v111 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v110 = (char *)&v94 - v19;
  v123 = v20;
  v21 = sub_1D26CC3E4();
  v112 = *(_QWORD *)(v21 - 8);
  v22 = MEMORY[0x1E0C80A78](v21);
  v114 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v113 = (char *)&v94 - v24;
  v132 = v25;
  v138 = v13;
  v135 = sub_1D26CC918();
  v133 = *(_QWORD *)(v135 - 8);
  v26 = MEMORY[0x1E0C80A78](v135);
  v134 = (char *)&v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v124 = (char *)&v94 - v28;
  v29 = sub_1D26CC804();
  MEMORY[0x1E0C80A78](v29);
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837C0);
  MEMORY[0x1E0C80A78](v127);
  v128 = (char *)&v94 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD08);
  MEMORY[0x1E0C80A78](v31);
  v125 = (char *)&v94 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = sub_1D26CC438();
  v33 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v35 = (char *)&v94 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837C8);
  v36 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v38 = (char *)&v94 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837D0);
  MEMORY[0x1E0C80A78](v98);
  v40 = (char *)&v94 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837D8);
  v101 = *(_QWORD *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v99 = (char *)&v94 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837E0);
  v102 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v100 = (char *)&v94 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837E8);
  MEMORY[0x1E0C80A78](v97);
  v44 = (char *)&v94 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837F0);
  MEMORY[0x1E0C80A78](v45);
  v106 = (char *)&v94 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837F8);
  v47 = MEMORY[0x1E0C80A78](v126);
  v105 = (char *)&v94 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v47);
  v107 = (char *)&v94 - v49;
  v122 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFC83738);
  v50 = MEMORY[0x1E0C80A78](v122);
  v129 = (char *)&v94 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v50);
  v142 = (char *)&v94 - v52;
  v130 = a1;
  if (*(_QWORD *)(a1 + 8))
  {
    sub_1D26CC7F8();
    sub_1D26CC7EC();
    sub_1D26CC7E0();
    sub_1D26CC7EC();
    sub_1D26CC81C();
    v53 = sub_1D26CCD08();
    v55 = v54;
    v57 = v56 & 1;
    sub_1D26CCBAC();
    v58 = sub_1D26CCCB4();
    v60 = v59;
    v62 = v61;
    swift_release();
    sub_1D25725E0(v53, v55, v57);
    swift_bridgeObjectRelease();
    sub_1D26CCBF4();
    v63 = sub_1D26CCC78();
    v65 = v64;
    v67 = v66 & 1;
    sub_1D25725E0(v58, v60, v62 & 1);
    swift_bridgeObjectRelease();
    v68 = *MEMORY[0x1E0CDD550];
    v69 = sub_1D26CCBDC();
    v70 = *(_QWORD *)(v69 - 8);
    v71 = (uint64_t)v125;
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 104))(v125, v68, v69);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v70 + 56))(v71, 0, 1, v69);
    v72 = sub_1D26CCC6C();
    v74 = v73;
    LOBYTE(v60) = v75 & 1;
    sub_1D25725E0(v63, v65, v67);
    swift_bridgeObjectRelease();
    sub_1D253703C(v71, &qword_1ED96CD08);
    LODWORD(v143) = sub_1D26CC954();
    sub_1D26CCC90();
    sub_1D25725E0(v72, v74, v60);
    swift_bridgeObjectRelease();
    v143 = v139;
    v144 = v140;
    v145 = v137;
    v146 = v131;
    type metadata accessor for WatchExpandedJindoView();
  }
  sub_1D26CC810();
  v143 = sub_1D26CCD08();
  v144 = v76;
  LOBYTE(v145) = v77 & 1;
  v146 = v78;
  sub_1D26CC420();
  sub_1D26CCE58();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v35, v95);
  sub_1D25725E0(v143, v144, v145);
  swift_bridgeObjectRelease();
  v79 = sub_1D26CCBAC();
  KeyPath = swift_getKeyPath();
  v81 = v96;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v40, v38, v96);
  v82 = v98;
  v83 = (uint64_t *)&v40[*(int *)(v98 + 36)];
  *v83 = KeyPath;
  v83[1] = v79;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v81);
  sub_1D26CCBF4();
  v84 = sub_1D26A3718();
  v85 = v99;
  sub_1D26CCD5C();
  sub_1D253703C((uint64_t)v40, &qword_1EFC837D0);
  v86 = *MEMORY[0x1E0CDD550];
  v87 = sub_1D26CCBDC();
  v88 = *(_QWORD *)(v87 - 8);
  v89 = (uint64_t)v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 104))(v125, v86, v87);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v88 + 56))(v89, 0, 1, v87);
  v143 = v82;
  v144 = v84;
  swift_getOpaqueTypeConformance2();
  v90 = v100;
  v91 = v103;
  sub_1D26CCD50();
  sub_1D253703C(v89, &qword_1ED96CD08);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v85, v91);
  LODWORD(v86) = sub_1D26CC954();
  v92 = v102;
  v93 = v104;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v44, v90, v104);
  *(_DWORD *)&v44[*(int *)(v97 + 36)] = v86;
  (*(void (**)(char *, uint64_t))(v92 + 8))(v90, v93);
  v143 = v139;
  v144 = v140;
  v145 = v137;
  v146 = v131;
  type metadata accessor for WatchExpandedJindoView();
}

void sub_1D26A1F2C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  char v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;

  v4 = v1[36] + *(int *)(a1 + 72);
  v5 = *(_BYTE *)(v4 + 8);
  if (v5)
    v6 = 0.0;
  else
    v6 = *(double *)v4;
  sub_1D26CD014();
  v10 = v6;
  v7 = v1[12];
  sub_1D26A0C34(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v7, 0.0, v3, v10, v5);
  sub_1D253703C(v2, &qword_1EFC837E8);
  v8 = v1[11];
  sub_1D2537078(v7, v8, &qword_1EFC837F0);
  *(_QWORD *)(v8 + *(int *)(v1[32] + 36)) = 0x3FE0000000000000;
  sub_1D253703C(v7, &qword_1EFC837F0);
  v9 = v1[13];
  sub_1D26A37C0(v8, v9);
  sub_1D2537078(v9, v1[34], &qword_1EFC837F8);
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83808);
  sub_1D26A386C(&qword_1EFC83810, &qword_1EFC83808, (uint64_t (*)(void))sub_1D26A3808);
  sub_1D26A386C(&qword_1EFC83828, &qword_1EFC837F8, (uint64_t (*)(void))sub_1D26A38F0);
  sub_1D26CC90C();
  sub_1D253703C(v9, &qword_1EFC837F8);
  JUMPOUT(0x1D26A2090);
}

uint64_t sub_1D26A24DC()
{
  return sub_1D256A6D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D26A13B0);
}

uint64_t sub_1D26A24E8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1D26A251C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = MEMORY[0x1E0C80A78](a1);
  v2 = MEMORY[0x1E0C80A78](v1);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  type metadata accessor for WatchExpandedJindoView();
}

uint64_t sub_1D26A2600(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t);

  sub_1D25EDCB8(v9 + a1[14], v1, v8);
  v12 = a1[15];
  v13 = *(_QWORD *)(v9 + a1[16]);
  sub_1D25EDCB8(v9 + v12, v2, v7);
  v14 = *(_QWORD *)(v10 - 200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v5, v8, v1);
  *(_QWORD *)(v10 - 128) = v13;
  *(_BYTE *)(v10 - 120) = 0;
  *(_QWORD *)(v10 - 112) = v5;
  *(_QWORD *)(v10 - 104) = v10 - 128;
  v15 = *(_QWORD *)(v10 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v3, v7, v2);
  *(_QWORD *)(v10 - 96) = v3;
  v16 = MEMORY[0x1E0CDFC10];
  *(_QWORD *)(v10 - 152) = v1;
  *(_QWORD *)(v10 - 144) = v16;
  *(_QWORD *)(v10 - 136) = v2;
  v17 = MEMORY[0x1E0CDFBE8];
  *(_QWORD *)(v10 - 176) = v4;
  *(_QWORD *)(v10 - 168) = v17;
  *(_QWORD *)(v10 - 160) = v6;
  sub_1D26BABC4((uint64_t *)(v10 - 112), 3uLL, v10 - 152);
  v18 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v18(v7, v2);
  v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v19(v8, v1);
  v18(v3, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v19)(v5, v1);
}

void sub_1D26A270C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = MEMORY[0x1E0C80A78](a1);
  v2 = MEMORY[0x1E0C80A78](v1);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  type metadata accessor for WatchExpandedJindoView();
}

uint64_t sub_1D26A27F4(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t);

  sub_1D25EDCB8(v8 + a1[15], v1, v7);
  v11 = *(_QWORD *)(v8 + a1[16]);
  sub_1D25EDCB8(v8 + a1[14], v2, v6);
  v12 = *(_QWORD *)(v9 - 200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v4, v7, v1);
  *(_QWORD *)(v9 - 128) = v11;
  *(_BYTE *)(v9 - 120) = 0;
  *(_QWORD *)(v9 - 112) = v4;
  *(_QWORD *)(v9 - 104) = v9 - 128;
  v13 = *(_QWORD *)(v9 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v3, v6, v2);
  *(_QWORD *)(v9 - 96) = v3;
  v14 = MEMORY[0x1E0CDFC10];
  *(_QWORD *)(v9 - 152) = v1;
  *(_QWORD *)(v9 - 144) = v14;
  *(_QWORD *)(v9 - 136) = v2;
  v15 = MEMORY[0x1E0CDFBE8];
  *(_QWORD *)(v9 - 176) = *(_QWORD *)(v9 - 208);
  *(_QWORD *)(v9 - 168) = v15;
  *(_QWORD *)(v9 - 160) = v5;
  sub_1D26BABC4((uint64_t *)(v9 - 112), 3uLL, v9 - 152);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(v6, v2);
  v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v17(v7, v1);
  v16(v3, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v17)(v4, v1);
}

uint64_t sub_1D26A290C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D26A29C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v4 - 8);
  v9 = *(_DWORD *)(v8 + 80);
  v10 = *(_QWORD *)(v6 + 64) + v9;
  v11 = *(_QWORD *)(v8 + 64) + 7;
  if ((v9 | v7) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || ((((((v11 + ((v10 + ((v7 + 17) & ~v7)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + (((v9 | v7) & 0xF8 ^ 0x1F8) & ((v9 | v7) + 16));
  }
  else
  {
    v15 = ~v9;
    v16 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v16;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v17 = (a1 + v7 + 17) & ~v7;
    v18 = ((unint64_t)a2 + v7 + 17) & ~v7;
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    v19(v17, v18, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v17 + v10) & v15, (v18 + v10) & v15, v4);
    v20 = (_QWORD *)((v11 + ((v17 + v10) & v15)) & 0xFFFFFFFFFFFFF8);
    v21 = (_QWORD *)((v11 + ((v18 + v10) & v15)) & 0xFFFFFFFFFFFFF8);
    *v20 = *v21;
    v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    v25 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
    v26 = *(_QWORD *)v25;
    *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
    *(_QWORD *)v24 = v26;
    v27 = ((unint64_t)v22 + 31) & 0xFFFFFFFFFFFFFFF8;
    v28 = ((unint64_t)v23 + 31) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v28 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v27 = *(_OWORD *)v28;
      return a1;
    }
    v29 = *(_QWORD *)(v28 + 8);
    *(_QWORD *)v27 = *(_QWORD *)v28;
    *(_QWORD *)(v27 + 8) = v29;
  }
  swift_retain();
  return a1;
}

uint64_t sub_1D26A2B80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v5 = (a1 + *(unsigned __int8 *)(v4 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v5);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  result = (*(uint64_t (**)(unint64_t))(v7 + 8))(v8);
  if (*(_QWORD *)((((((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    return swift_release();
  return result;
}

uint64_t sub_1D26A2C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 17 + a1) & ~v8;
  v10 = (v8 + 17 + a2) & ~v8;
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  swift_bridgeObjectRetain();
  v11(v9, v10, v6);
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v14 = *(unsigned __int8 *)(v13 + 80);
  v15 = v12 + v14;
  v16 = (v15 + v9) & ~v14;
  v17 = (v15 + v10) & ~v14;
  (*(void (**)(uint64_t, uint64_t))(v13 + 16))(v16, v17);
  v18 = *(_QWORD *)(v13 + 64) + 7;
  v19 = (_QWORD *)((v18 + v16) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)((v18 + v17) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v21 = *v22;
  v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  *(_QWORD *)v23 = v25;
  v26 = ((unint64_t)v21 + 31) & 0xFFFFFFFFFFFFFFF8;
  v27 = ((unint64_t)v22 + 31) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v27 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v26 = *(_OWORD *)v27;
  }
  else
  {
    v28 = *(_QWORD *)(v27 + 8);
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *(_QWORD *)(v26 + 8) = v28;
    swift_retain();
  }
  return a1;
}

uint64_t sub_1D26A2D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 17 + a1) & ~v7;
  v9 = (v7 + 17 + a2) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64);
  v11 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = v10 + v12;
  v14 = (v13 + v8) & ~v12;
  v15 = (v13 + v9) & ~v12;
  (*(void (**)(uint64_t, uint64_t))(v11 + 24))(v14, v15);
  v16 = *(_QWORD *)(v11 + 64) + 7;
  v17 = (_QWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)((v16 + v15) & 0xFFFFFFFFFFFFFFF8);
  *v17 = *v18;
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v19 = *v20;
  v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = *(_QWORD *)v22;
  *(_BYTE *)(v21 + 8) = *(_BYTE *)(v22 + 8);
  *(_QWORD *)v21 = v23;
  v24 = (_QWORD *)(((unint64_t)v19 + 31) & 0xFFFFFFFFFFFFFFF8);
  v25 = (unint64_t *)(((unint64_t)v20 + 31) & 0xFFFFFFFFFFFFFFF8);
  v26 = *v25;
  if (*v24 < 0xFFFFFFFFuLL)
  {
    if (v26 >= 0xFFFFFFFF)
    {
      v28 = v25[1];
      *v24 = v26;
      v24[1] = v28;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    return a1;
  }
  if (v26 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v27 = v25[1];
  *v24 = v26;
  v24[1] = v27;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1D26A2EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (v6 + 17 + a1) & ~v6;
  v8 = (v6 + 17 + a2) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_QWORD *)v20 = v22;
  v23 = ((unint64_t)v18 + 31) & 0xFFFFFFFFFFFFFFF8;
  v24 = (uint64_t *)(((unint64_t)v19 + 31) & 0xFFFFFFFFFFFFFFF8);
  v25 = *v24;
  if ((unint64_t)*v24 < 0xFFFFFFFF)
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  else
  {
    v26 = v24[1];
    *(_QWORD *)v23 = v25;
    *(_QWORD *)(v23 + 8) = v26;
  }
  return a1;
}

uint64_t sub_1D26A3020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (v8 + 17 + a1) & ~v8;
  v10 = (v8 + 17 + a2) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64);
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = v11 + v13;
  v15 = (v14 + v9) & ~v13;
  v16 = (v14 + v10) & ~v13;
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(v15, v16);
  v17 = *(_QWORD *)(v12 + 64) + 7;
  v18 = (_QWORD *)((v17 + v15) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)((v17 + v16) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v20 = *v21;
  v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  v24 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  *(_QWORD *)v22 = v24;
  v25 = (_QWORD *)(((unint64_t)v20 + 31) & 0xFFFFFFFFFFFFFFF8);
  v26 = (unint64_t *)(((unint64_t)v21 + 31) & 0xFFFFFFFFFFFFFFF8);
  v27 = *v26;
  if (*v25 < 0xFFFFFFFFuLL)
  {
    if (v27 >= 0xFFFFFFFF)
    {
      v29 = v26[1];
      *v25 = v27;
      v25[1] = v29;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v25 = *(_OWORD *)v26;
    return a1;
  }
  if (v27 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v28 = v26[1];
  *v25 = v27;
  v25[1] = v28;
  swift_release();
  return a1;
}

uint64_t sub_1D26A3188(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;
  uint64_t v16;

  v3 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v4 = *(_DWORD *)(v3 + 84);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (v4 <= *(_DWORD *)(v5 + 84))
    v6 = *(_DWORD *)(v5 + 84);
  else
    v6 = *(_DWORD *)(v3 + 84);
  if (v6 <= 0x7FFFFFFE)
    v7 = 2147483646;
  else
    v7 = v6;
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v3 + 80);
  v9 = *(_QWORD *)(v3 + 64);
  v10 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if (v6 > 0x7FFFFFFE)
    {
      v16 = (a1 + v8 + 17) & ~v8;
      if (v4 == v7)
        return (*(uint64_t (**)(uint64_t, _QWORD))(v3 + 48))(v16, *(unsigned int *)(v3 + 84));
      else
        return (*(uint64_t (**)(uint64_t))(v5 + 48))((v16 + v9 + v10) & ~v10);
    }
    else
    {
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      if ((v15 + 1) >= 2)
        return v15;
      else
        return 0;
    }
  }
  else
  {
    if (((((((((*(_QWORD *)(v5 + 64) + ((v9 + v10 + ((v8 + 17) & ~v8)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 31) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v7 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D26A3250 + 4 * byte_1D26DBF70[v13]))();
  }
}

void sub_1D26A3310(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  if (v8 >= a3)
  {
    v11 = 0u;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((((((*(_DWORD *)(v6 + 64)
             + ((*(_DWORD *)(v5 + 64)
               + *(unsigned __int8 *)(v6 + 80)
               + ((*(unsigned __int8 *)(v5 + 80) + 17) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
             + 7) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 31) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = a3 - v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X6 }
  }
  if (((((((*(_DWORD *)(v6 + 64)
           + ((*(_DWORD *)(v5 + 64)
             + *(unsigned __int8 *)(v6 + 80)
             + ((*(unsigned __int8 *)(v5 + 80) + 17) & ~*(unsigned __int8 *)(v5 + 80))) & ~*(unsigned __int8 *)(v6 + 80))
           + 7) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 31) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v8 + a2;
    bzero(a1, ((((((*(_QWORD *)(v6 + 64)+ ((*(_QWORD *)(v5 + 64)+ *(unsigned __int8 *)(v6 + 80)+ ((*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ 7) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 31) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1D26A3458()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1D26A34D4);
}

void sub_1D26A3460(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1D26A3468);
  JUMPOUT(0x1D26A34D4);
}

void sub_1D26A34A8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D26A34D4);
}

void sub_1D26A34B0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D26A34D4);
}

void sub_1D26A34B8(uint64_t a1, unsigned int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (a2)
  {
    if (v4 > 0x7FFFFFFE)
    {
      if (v2 == v3)
        JUMPOUT(0x1D26A34FCLL);
      JUMPOUT(0x1D26A34E8);
    }
    if (a2 > 0x7FFFFFFE)
      JUMPOUT(0x1D26A34C4);
    *(_QWORD *)(v5 + 8) = a2;
  }
  JUMPOUT(0x1D26A34D4);
}

uint64_t sub_1D26A3514()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  _QWORD v10[2];

  __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EFC83738);
  swift_getTupleTypeMetadata3();
  v0 = sub_1D26CD044();
  v1 = MEMORY[0x1E0CE0680];
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0680], v0);
  sub_1D26CCF48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82708);
  sub_1D26CC3E4();
  swift_getTupleTypeMetadata3();
  v2 = sub_1D26CD044();
  MEMORY[0x1D823A4E4](v1, v2);
  sub_1D26CCF48();
  sub_1D26CC3E4();
  sub_1D26CC918();
  swift_getTupleTypeMetadata2();
  v3 = sub_1D26CD044();
  MEMORY[0x1D823A4E4](v1, v3);
  v4 = sub_1D26CCF9C();
  v5 = sub_1D26CC3E4();
  v6 = sub_1D26CC3E4();
  v10[0] = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFCC0], v4);
  v10[1] = MEMORY[0x1E0CD9758];
  v7 = MEMORY[0x1E0CD9C20];
  v9[0] = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v5, v10);
  v9[1] = sub_1D2569900();
  return MEMORY[0x1D823A4E4](v7, v6, v9);
}

unint64_t sub_1D26A3718()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1EFC83800;
  if (!qword_1EFC83800)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC837D0);
    v2[2] = MEMORY[0x1E0CDDD78];
    v2[3] = MEMORY[0x1E0CDDD58];
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1D2536488(&qword_1ED96CCB0, &qword_1ED96CCB8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC83800);
  }
  return result;
}

uint64_t sub_1D26A37C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC837F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D26A3808()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC83818;
  if (!qword_1EFC83818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC83820);
    v2[0] = MEMORY[0x1E0CDDD58];
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC83818);
  }
  return result;
}

uint64_t sub_1D26A386C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t result;
  uint64_t v6;
  _QWORD v7[2];

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v7[0] = a3();
    v7[1] = sub_1D2536488((unint64_t *)&qword_1EFC82710, &qword_1EFC82708, MEMORY[0x1E0CDBEF0]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v6, v7);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D26A38F0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC83830;
  if (!qword_1EFC83830)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC837F0);
    v2[0] = sub_1D26A395C();
    v2[1] = MEMORY[0x1E0CDA228];
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC83830);
  }
  return result;
}

unint64_t sub_1D26A395C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[4];

  result = qword_1EFC83838;
  if (!qword_1EFC83838)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC837E8);
    v2 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC837D8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC837D0);
    sub_1D26A3718();
    v3[2] = v2;
    v3[3] = swift_getOpaqueTypeConformance2();
    v3[0] = swift_getOpaqueTypeConformance2();
    v3[1] = sub_1D2536488(&qword_1EFC83840, &qword_1EFC83848, MEMORY[0x1E0CDC718]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1EFC83838);
  }
  return result;
}

uint64_t sub_1D26A3A38()
{
  return sub_1D256A6D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D26A270C);
}

unint64_t sub_1D26A3A44()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC83850;
  if (!qword_1EFC83850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EFC83738);
    v2[0] = sub_1D26A386C(&qword_1EFC83810, &qword_1EFC83808, (uint64_t (*)(void))sub_1D26A3808);
    v2[1] = sub_1D26A386C(&qword_1EFC83828, &qword_1EFC837F8, (uint64_t (*)(void))sub_1D26A38F0);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC83850);
  }
  return result;
}

uint64_t sub_1D26A3AE0()
{
  return sub_1D256A6D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D26A251C);
}

uint64_t ReloadTaskPairResolver.__allocating_init(taskPair:allowDebounce:logger:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + qword_1ED962550) = a1;
  *(_BYTE *)(v6 + qword_1ED962558) = a2;
  v7 = v6 + qword_1ED962560;
  v8 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a3, v8);
  return v6;
}

uint64_t ReloadTaskPairResolver.init(taskPair:allowDebounce:logger:)(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v3 + qword_1ED962550) = a1;
  *(_BYTE *)(v3 + qword_1ED962558) = a2;
  v5 = v3 + qword_1ED962560;
  v6 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a3, v6);
  return v3;
}

uint64_t sub_1D26A3BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  char v10;

  v10 = *a5;
  if ((sub_1D26A4D84(a3, a2, &v10) & 1) != 0)
    sub_1D26A3CA8(a1, a2, a3, a4);
  if ((sub_1D26A4F18() & 1) != 0)
    return sub_1D26A4300(a1, a2, a3, a4);
  sub_1D26A505C(a1, a3, a4);
  return swift_retain();
}

void sub_1D26A3CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[17];
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v28 = a4;
  v26 = a2;
  v5 = (_QWORD *)*v4;
  v24 = sub_1D26CC09C();
  v23[14] = *(_QWORD *)(v24 - 8);
  v6 = MEMORY[0x1E0C80A78](v24);
  v25 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v5[10];
  v9 = MEMORY[0x1E0C80A78](v6);
  v23[13] = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v23[15] = (char *)v23 - v12;
  MEMORY[0x1E0C80A78](v11);
  v13 = type metadata accessor for ReloadConfiguration(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v23[12] = (char *)v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = v5[11];
  v17 = v5[12];
  v18 = v5[13];
  v19 = v5[14];
  v20 = v5[15];
  v21 = v5[16];
  v22 = v5[17];
  v29 = v8;
  v30 = v16;
  v23[11] = v16;
  v23[10] = v17;
  v31 = v17;
  v32 = v18;
  v27 = v18;
  v23[8] = v19;
  v33 = v19;
  v34 = v20;
  v23[7] = v20;
  v23[6] = v21;
  v35 = v21;
  v36 = v22;
  v23[5] = v22;
  type metadata accessor for ReloadTaskPair();
}

void sub_1D26A3E44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  NSObject *v10;
  os_log_type_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *(_QWORD *)(v7 - 224) = ReloadTaskPair.__allocating_init()();
  v8 = sub_1D2686830();
  *(_QWORD *)(v7 - 192) = v2;
  *(_QWORD *)(v7 - 184) = v3;
  *(_QWORD *)(v7 - 280) = v1;
  if (v8)
  {
    *(_QWORD *)(v7 - 328) = v6;
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
    v9(v5, v3, v4);
    swift_retain();
    v10 = sub_1D26CC084();
    v11 = sub_1D26CDD04();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = swift_slowAlloc();
      *(_QWORD *)(v7 - 320) = v9;
      v13 = v12;
      v14 = swift_slowAlloc();
      *(_QWORD *)(v7 - 336) = v14;
      *(_DWORD *)v13 = 134349314;
      *(_QWORD *)(v7 - 160) = *(_QWORD *)(v7 - 168);
      *(_QWORD *)(v7 - 152) = v14;
      sub_1D26CDF50();
      *(_WORD *)(v13 + 12) = 2082;
      *(_QWORD *)(v7 - 344) = v13 + 14;
      v15 = sub_1D26CE370();
      *(_QWORD *)(v7 - 160) = sub_1D2537880(v15, v16, (uint64_t *)(v7 - 152));
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v5, v4);
      _os_log_impl(&dword_1D2531000, v10, v11, "Task [%{public}llu] %{public}s Replacing all tasks", (uint8_t *)v13, 0x16u);
      v17 = *(_QWORD *)(v7 - 336);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v17, -1, -1);
      v18 = v13;
      v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 - 320);
      MEMORY[0x1D823A5E0](v18, -1, -1);

    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v5, v4);
    }
    sub_1D25772DC(*(_QWORD *)(v7 - 328), *(_QWORD *)(v7 - 192));
    swift_release();
    v3 = *(_QWORD *)(v7 - 184);
  }
  else
  {
    sub_1D264B85C(v6, v2);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16);
  }
  v19 = v0 + qword_1ED962560;
  v20 = *(_QWORD *)(v7 - 232);
  v9(v20, v3, v4);
  v21 = sub_1D26CC084();
  v22 = sub_1D26CDD04();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    *(_DWORD *)v23 = 134349314;
    *(_QWORD *)(v7 - 160) = *(_QWORD *)(v7 - 168);
    *(_QWORD *)(v7 - 152) = v24;
    *(_QWORD *)(v7 - 328) = v19;
    sub_1D26CDF50();
    *(_WORD *)(v23 + 12) = 2082;
    *(_QWORD *)(v7 - 320) = v9;
    v25 = *(_QWORD *)(v7 - 176);
    v26 = sub_1D26CE370();
    *(_QWORD *)(v7 - 160) = sub_1D2537880(v26, v27, (uint64_t *)(v7 - 152));
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 280) + 8))(v20, v4);
    _os_log_impl(&dword_1D2531000, v21, v22, "Task [%{public}llu] %{public}s Dispatching new task", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v24, -1, -1);
    MEMORY[0x1D823A5E0](v23, -1, -1);

    v28 = v25;
    v29 = *(_QWORD *)(v7 - 264);
    v30 = *(_QWORD *)(v7 - 272);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 280) + 8))(v20, v4);
    v29 = *(_QWORD *)(v7 - 264);
    v30 = *(_QWORD *)(v7 - 272);
    v28 = *(_QWORD *)(v7 - 176);
  }
  v31 = *(_QWORD *)(v7 - 288);
  v32 = *(_QWORD *)(v7 - 296);
  v33 = *(_QWORD *)(v7 - 304);
  v34 = *(_QWORD *)(v7 - 312);
  *(_QWORD *)(v7 - 152) = v4;
  *(_QWORD *)(v7 - 144) = v29;
  *(_QWORD *)(v7 - 136) = v30;
  *(_QWORD *)(v7 - 128) = v28;
  *(_QWORD *)(v7 - 120) = v31;
  *(_QWORD *)(v7 - 112) = v32;
  *(_QWORD *)(v7 - 104) = v33;
  *(_QWORD *)(v7 - 96) = v34;
  type metadata accessor for ReloadTask();
}

uint64_t sub_1D26A4264()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v7(v1, v4, v5);
  sub_1D264B85C(v3, v6);
  v9 = *(_QWORD *)(v8 - 208);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(v0 + 16))(v9, v2, *(_QWORD *)(v8 - 216));
  v10 = *(_QWORD *)(v8 - 200);
  swift_bridgeObjectRetain();
  ReloadTask.__allocating_init(identifier:key:variantKeys:configuration:logger:)(*(_QWORD *)(v8 - 168), v1, v10, v6, v9);
  v11 = swift_retain();
  v12 = *(_QWORD *)(v8 - 224);
  sub_1D25A9A34(v11);
  swift_release();
  sub_1D25CDF64(v3);
  return v12;
}

uint64_t sub_1D26A4300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  int v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v49[17];
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59[8];

  v55 = a4;
  v56 = a1;
  v51 = a2;
  v6 = (_QWORD *)*v4;
  v52 = sub_1D26CC09C();
  v7 = *(_QWORD *)(v52 - 8);
  v8 = MEMORY[0x1E0C80A78](v52);
  v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v6[10];
  v11 = *(_QWORD *)(v54 - 8);
  v12 = MEMORY[0x1E0C80A78](v8);
  v50 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v49 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v53 = (char *)v49 - v18;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v49 - v19;
  v21 = type metadata accessor for ReloadConfiguration(0);
  v22 = MEMORY[0x1E0C80A78](v21);
  v24 = (char *)v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59[0] = *(_QWORD *)(a3 + *(int *)(MEMORY[0x1E0C80A78](v22) + 24));
  v58 = 0xA000000000000030;
  static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)v59);
  if ((v25 & 1) == 0)
  {
    v49[6] = a3;
    v49[4] = v20;
    v49[5] = v16;
    v49[7] = v11;
    v49[15] = v24;
    v49[16] = v7;
    v50 = v10;
    v40 = v6[11];
    v41 = v6[12];
    v43 = v6[13];
    v42 = v6[14];
    v44 = v6[15];
    v45 = v6[16];
    v46 = v6[17];
    v59[0] = v54;
    v59[1] = v40;
    v59[2] = v41;
    v59[3] = v43;
    v49[11] = v42;
    v59[4] = v42;
    v59[5] = v44;
    v49[10] = v44;
    v49[9] = v45;
    v59[6] = v45;
    v59[7] = v46;
    v49[8] = v46;
    type metadata accessor for ReloadTaskPair();
  }
  v26 = v55;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v28 = v50;
  v29 = v54;
  v27(v50, v56, v54);
  v30 = sub_1D26CC084();
  v31 = sub_1D26CDD04();
  v32 = v31;
  if (os_log_type_enabled(v30, v31))
  {
    v33 = swift_slowAlloc();
    v56 = swift_slowAlloc();
    v59[0] = v56;
    *(_DWORD *)v33 = 134349314;
    v58 = v26;
    sub_1D26CDF50();
    *(_WORD *)(v33 + 12) = 2082;
    v52 = v33 + 14;
    LODWORD(v55) = v32;
    v34 = v53;
    v27(v53, (uint64_t)v28, v29);
    v35 = *(void (**)(char *, uint64_t))(v11 + 8);
    v35(v28, v29);
    v36 = sub_1D26CE370();
    v38 = v37;
    v35(v34, v29);
    v58 = sub_1D2537880(v36, v38, v59);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v30, (os_log_type_t)v55, "Task [%{public}llu] %{public}s Rejecting attempt to queue an .initial reload", (uint8_t *)v33, 0x16u);
    v39 = v56;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v39, -1, -1);
    MEMORY[0x1D823A5E0](v33, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v28, v29);
  }

  v47 = *(_QWORD *)(v57 + qword_1ED962550);
  swift_retain();
  return v47;
}

uint64_t sub_1D26A4D84(uint64_t a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t result;
  char v13;
  uint64_t v14;

  v5 = type metadata accessor for ReloadConfiguration(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a3 == 3)
  {
    v8 = 0;
    return v8 & 1;
  }
  v9 = sub_1D2686830();
  if (!v9)
  {
    sub_1D264B85C(a1, (uint64_t)v7);
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v9 + *(_QWORD *)(*(_QWORD *)v9 + 168) + *(int *)(v5 + 24));
  sub_1D264B85C(a1, (uint64_t)v7);
  if (v10 >> 61 != 3)
  {
LABEL_8:
    sub_1D25CDF64((uint64_t)v7);
    goto LABEL_9;
  }
  v11 = *(_QWORD *)&v7[*(int *)(v5 + 24)];
  sub_1D25CDF64((uint64_t)v7);
  if (v11 >> 61 == 3)
    goto LABEL_12;
LABEL_9:
  if (!sub_1D2686830())
  {
LABEL_12:
    v8 = 1;
    return v8 & 1;
  }
  result = sub_1D2686830();
  if (result)
  {
    if ((sub_1D25779DC(result + *(_QWORD *)(*(_QWORD *)result + 168)) & 1) != 0)
      goto LABEL_12;
    result = sub_1D2686830();
    if (result)
    {
      swift_bridgeObjectRetain();
      v13 = sub_1D26CDC14();
      swift_bridgeObjectRelease();
      v8 = v13 ^ 1;
      return v8 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D26A4F18()
{
  uint64_t result;
  char v1;
  char v2;

  if (!sub_1D2686838())
    goto LABEL_4;
  result = sub_1D2686838();
  if (result)
  {
    if ((sub_1D25779DC(result + *(_QWORD *)(*(_QWORD *)result + 168)) & 1) != 0)
    {
LABEL_4:
      v1 = 1;
      return v1 & 1;
    }
    result = sub_1D2686838();
    if (result)
    {
      swift_bridgeObjectRetain();
      v2 = sub_1D26CDC14();
      swift_bridgeObjectRelease();
      v1 = v2 ^ 1;
      return v1 & 1;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t ReloadTaskPairResolver.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1ED962560;
  v2 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t ReloadTaskPairResolver.__deallocating_deinit()
{
  ReloadTaskPairResolver.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D26A505C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v40 = a3;
  v42 = a1;
  v43 = a2;
  v4 = *v3;
  v5 = type metadata accessor for ReloadConfiguration(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v6);
  v41 = (char *)v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v38 - v13;
  v53 = 0;
  v54 = 0xE000000000000000;
  v44 = *(uint64_t *)((char *)v3 + qword_1ED962550);
  if (sub_1D2686830())
  {
    v45 = 0;
    *(_QWORD *)&v46 = 0xE000000000000000;
    swift_retain();
    sub_1D26CE0A0();
    swift_bridgeObjectRelease();
    v45 = 0x3A746E6572727543;
    *(_QWORD *)&v46 = 0xEF5B206B73617420;
    sub_1D25CD09C();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CDA04();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v15 = sub_1D2686838();
  if (v15)
  {
    v16 = v15;
    v45 = 0;
    *(_QWORD *)&v46 = 0xE000000000000000;
    swift_retain();
    sub_1D26CE0A0();
    v51 = v45;
    v52 = v46;
    sub_1D26CDA04();
    v17 = *(_QWORD *)(v4 + 136);
    v45 = v9;
    v46 = *(_OWORD *)(v4 + 88);
    v47 = *(_OWORD *)(v4 + 104);
    v48 = *(_OWORD *)(v4 + 120);
    v49 = v17;
    v50 = v16;
    type metadata accessor for ReloadTask();
  }
  v18 = v10;
  v19 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v19(v14, v42, v9);
  v20 = (uint64_t)v8;
  sub_1D264B85C(v43, (uint64_t)v8);
  v22 = v53;
  v21 = v54;
  swift_bridgeObjectRetain();
  v23 = sub_1D26CC084();
  v24 = sub_1D26CDD04();
  v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    v26 = swift_slowAlloc();
    v38[1] = v4;
    v42 = v22;
    v27 = v26;
    v43 = swift_slowAlloc();
    v45 = v43;
    *(_DWORD *)v27 = 134349826;
    v51 = v40;
    sub_1D26CDF50();
    *(_WORD *)(v27 + 12) = 2082;
    v39 = v20;
    LODWORD(v40) = v25;
    v28 = v41;
    v19(v41, (uint64_t)v14, v9);
    v29 = *(void (**)(char *, uint64_t))(v18 + 8);
    v29(v14, v9);
    v30 = sub_1D26CE370();
    v32 = v31;
    v29(v28, v9);
    v51 = sub_1D2537880(v30, v32, &v45);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2082;
    v33 = v39;
    v34 = ReloadConfiguration.description.getter();
    v51 = sub_1D2537880(v34, v35, &v45);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D25CDF64(v33);
    *(_WORD *)(v27 + 32) = 2082;
    swift_bridgeObjectRetain();
    v51 = sub_1D2537880(v42, v21, &v45);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v23, (os_log_type_t)v40, "Task [%{public}llu] %{public}s Ignoring low-priority task with configuration: %{public}s; %{public}s",
      (uint8_t *)v27,
      0x2Au);
    v36 = v43;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v36, -1, -1);
    MEMORY[0x1D823A5E0](v27, -1, -1);

  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v14, v9);

    sub_1D25CDF64(v20);
    swift_bridgeObjectRelease_n();
  }
  return v44;
}

uint64_t sub_1D26A5520()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CC09C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for ReloadTaskPairResolver()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for ReloadTaskPairResolver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReloadTaskPairResolver.__allocating_init(taskPair:allowDebounce:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of ReloadTaskPairResolver.taskPair(for:variantKeys:configuration:taskIdentifier:state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t sub_1D26A55D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  uint64_t v20;
  int v21;

  v21 = a6;
  v20 = a7;
  v12 = sub_1D26CC7A4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = ((char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)(a1 + 24);
  v17 = *(os_unfair_lock_s **)(v16 + 16);
  swift_retain();
  os_unfair_lock_lock(v17);
  v18 = a1 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  (*(void (**)(NSObject *, uint64_t, uint64_t))(v13 + 16))(v15, v18, v12);
  sub_1D2646F44(v15, a2, a3, a4, a5, v21);
  swift_beginAccess();
  (*(void (**)(uint64_t, NSObject *, uint64_t))(v13 + 24))(v18, v15, v12);
  swift_endAccess();
  (*(void (**)(NSObject *, uint64_t))(v13 + 8))(v15, v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  swift_release();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
  sub_1D26CC1A4();
  swift_release();
  swift_release();
  return sub_1D25E7E14(a3, a4, a5);
}

uint64_t sub_1D26A5784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  v2 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D26A57E4()
{
  return type metadata accessor for EnvironmentProvider();
}

uint64_t type metadata accessor for EnvironmentProvider()
{
  uint64_t result;

  result = qword_1ED96B590;
  if (!qword_1ED96B590)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D26A5828()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CC7A4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D26A58A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = v3 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  v7 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v6, v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1D26A593C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2536488((unint64_t *)&unk_1ED96FC70, &qword_1ED96FC80, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t sub_1D26A59AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[4];

  v15[0] = a1;
  v4 = sub_1D26CC438();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1D26CC7A4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  v11 = a1 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  v12 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider
                  + 24);
  v13 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider
                  + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(a2 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider), v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  v15[1] = MEMORY[0x1E0DEE9D8];
  sub_1D256283C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
  sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  sub_1D26CC504();
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 24))(v11, v8, v5);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
  sub_1D26CC1A4();
  return swift_release();
}

uint64_t sub_1D26A5BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  void (*v14)(_BYTE *, uint64_t);
  _BYTE v16[24];

  v4 = sub_1D26CC7A4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v16[-v9];
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v12);
  v13 = a1 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16))(v10, v13, v4);
  sub_1D25CC94C((uint64_t)v10, a2);
  swift_beginAccess();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 24))(v13, v8, v4);
  swift_endAccess();
  v14 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v14(v10, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
  sub_1D26CC1A4();
  return swift_release();
}

uint64_t dispatch thunk of ClientExtensionInfoInterface.extensionInfo(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D26A5D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  _QWORD v36[4];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v39 = type metadata accessor for RemoteActivityArchiveBudget();
  v1 = MEMORY[0x1E0C80A78](v39);
  v38 = (char *)v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v36 - v3;
  v45 = 0;
  v46 = 0xE000000000000000;
  v5 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](28);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_32;
  v7 = Strong;
  v8 = sub_1D2557230(v5);
  if (!v0)
  {
    v9 = v8;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!*(_QWORD *)(v9 + 16))
    {
      v7 = MEMORY[0x1E0DEE9E0];
      swift_bridgeObjectRelease();
      return v7;
    }
    v10 = *(_QWORD *)(v9 + 32);
    v36[2] = v9 + 32;
    v36[1] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1D26CE0B8();
    v47 = v12;
    v44 = *(_QWORD *)(v10 + 16);
    if (!v44)
      goto LABEL_31;
    v13 = v11;
    v42 = 0;
    v36[3] = v4;
    v40 = 1;
    v41 = MEMORY[0x1E0DEE9E0];
    v14 = 0;
    v43 = v10;
    v15 = (unsigned __int8 *)(v10 + 64);
    v16 = (char *)(v10 + 64);
    while (1)
    {
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        goto LABEL_30;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      v20 = *v16;
      v21 = *((_QWORD *)v16 - 4) == v13 && *((_QWORD *)v16 - 3) == v47;
      if (v21 || (sub_1D26CE3D0() & 1) != 0)
        break;
      v16 += 40;
      ++v14;
      if (v17 == v44)
        goto LABEL_31;
    }
    swift_bridgeObjectRetain();
    sub_1D2541E98(v18, v19, v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D26507E0(v18, v19, v20);
    v23 = v22;
    v25 = v24;
    sub_1D253FBE8(v18, v19, v20);
    if (v25)
    {
      v26 = sub_1D26CE0B8();
      v28 = v27;
      v29 = *(_QWORD *)(v43 + 16);
      if (v29)
      {
        v30 = v26;
        v47 = v23;
        do
        {
          v31 = *((_QWORD *)v15 - 2);
          v32 = *((_QWORD *)v15 - 1);
          v33 = *v15;
          v34 = *((_QWORD *)v15 - 4) == v30 && *((_QWORD *)v15 - 3) == v28;
          if (v34 || (sub_1D26CE3D0() & 1) != 0)
          {
            swift_bridgeObjectRetain();
            sub_1D2541E98(v31, v32, v33);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            __asm { BR              X8 }
          }
          v15 += 40;
          --v29;
        }
        while (v29);
      }
LABEL_30:
      swift_bridgeObjectRelease();
LABEL_31:
      swift_bridgeObjectRelease();
    }
LABEL_32:
    sub_1D26CE1D8();
    __break(1u);
    JUMPOUT(0x1D26A6480);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

uint64_t ChronoMetadataStore.RemoteActivityArchiveBudgetStore.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

uint64_t sub_1D26A6524(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t result;
  uint64_t v28;

  v2 = v1;
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v5 = Strong;
    v6 = *(_QWORD *)(Strong + 24);
    v7 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v7);
    v8 = *(_QWORD *)(v5 + 64);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    swift_release();
    if (v8)
    {
      sub_1D26CB5E0();
      swift_allocObject();
      sub_1D26CB5D4();
      v9 = type metadata accessor for RemoteActivityArchiveBudget();
      sub_1D26A6B44(&qword_1EFC82648, (uint64_t)&protocol conformance descriptor for RemoteActivityArchiveBudget);
      v10 = sub_1D26CB5C8();
      if (v2)
        return swift_release();
      v12 = v10;
      v13 = v11;
      v14 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
      MEMORY[0x1D8239188](83);
      v28 = v14;
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      v15 = (uint64_t *)(a1 + *(int *)(v9 + 24));
      v16 = *v15;
      v17 = v15[1];
      swift_bridgeObjectRetain_n();
      v18 = sub_1D253FC20(v16, v17);
      v20 = v19;
      v22 = v21;
      sub_1D2641480(v18, v19, v21);
      sub_1D253FBE8(v18, v20, v22);
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D253FE08(v12, v13);
      sub_1D253FE08(v12, v13);
      v23 = sub_1D253FC0C(v12, v13);
      v25 = v24;
      LOBYTE(v18) = v26;
      sub_1D2641480(v23, v24, v26);
      sub_1D253FBE8(v23, v25, v18);
      sub_1D253EE04(v12, v13);
      sub_1D26CDA04();
      if (swift_weakLoadStrong())
      {
        sub_1D2557230(v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_1D253EE04(v12, v13);
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
  }
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t sub_1D26A68DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t result;
  uint64_t v18;

  v3 = v2;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v7 = Strong;
  v8 = *(_QWORD *)(Strong + 24);
  v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  v10 = *(_QWORD *)(v7 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  swift_release();
  swift_release();
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  v11 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](24);
  v18 = v11;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v12 = sub_1D253FC20(a1, a2);
  v14 = v13;
  v16 = v15;
  sub_1D2641480(v12, v13, v15);
  sub_1D253FBE8(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D26A6B44(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RemoteActivityArchiveBudget();
    result = MEMORY[0x1D823A4E4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ChronoMetadataStore.RemoteActivityArchiveBudgetStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.RemoteActivityArchiveBudgetStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.RemoteActivityArchiveBudgetStore.allBudgets()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore.update(budget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableRemoteActivityArchiveBudgetStore.delete(budgetID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1D26A6C30()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](69);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t RelevanceCacheManagerProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t RelevanceCacheManagerProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D26A6DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[40];
  _BYTE v14[40];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D2538510(a1, (uint64_t)v14);
  sub_1D2538510(a2, (uint64_t)v13);
  sub_1D255F2F4(a3, (uint64_t)v9);
  type metadata accessor for RelevanceCacheManager();
  v10 = swift_allocObject();
  v11 = RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)((uint64_t)v14, (uint64_t)v13, (uint64_t)v9);
  if (!v3)
  {
    v10 = v11;
    sub_1D26A6ED8();
  }
  return v10;
}

unint64_t sub_1D26A6ED8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96B110;
  if (!qword_1ED96B110)
  {
    v1 = type metadata accessor for RelevanceCacheManager();
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RelevanceCacheManager, v1);
    atomic_store(result, (unint64_t *)&qword_1ED96B110);
  }
  return result;
}

uint64_t RelevanceCacheManagerProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RelevanceCacheManagerProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of RelevanceCacheManagerProviding.newRelevanceCacheManager(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for RelevanceCacheManagerProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for RelevanceCacheManagerProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RelevanceCacheManagerProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RelevanceCacheManagerProvider.newRelevanceCacheManager(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.archiveFilePromise(relevanceKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.ingestFetchResult(for:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.rebuildCache()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.remove(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of RelevanceCacheManaging.removeAll(keeping:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1D26A7030()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t MockRelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:beforeFirstUnlock:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  MockRelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:beforeFirstUnlock:)(a1, a2, a3, a4);
  return v8;
}

uint64_t MockRelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:beforeFirstUnlock:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[2];
  _BYTE v23[40];
  _BYTE v24[40];
  uint64_t v25;

  v25 = a3;
  v8 = sub_1D26CB55C();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1D26CB574();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0)
  {
    sub_1D26CB514();
    sub_1D2567BEC(MEMORY[0x1E0DEE9D8]);
    sub_1D26A83D4(&qword_1ED96B1A0, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48], MEMORY[0x1E0CADE40]);
    sub_1D26CB754();
    sub_1D26CB4F0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_willThrow();
    v16 = v25;
  }
  else
  {
    *(_BYTE *)(v4 + 24) = 0;
    sub_1D2538510(a1, (uint64_t)v24);
    sub_1D2538510(a2, (uint64_t)v23);
    v17 = v25;
    sub_1D255F2F4(v25, (uint64_t)v15);
    type metadata accessor for RelevanceCacheManager();
    swift_allocObject();
    v18 = v22[1];
    v19 = RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)((uint64_t)v24, (uint64_t)v23, (uint64_t)v15);
    if (!v18)
    {
      v20 = v19;
      sub_1D258C76C(v17);
      __swift_destroy_boxed_opaque_existential_1(a2);
      __swift_destroy_boxed_opaque_existential_1(a1);
      *(_QWORD *)(v4 + 16) = v20;
      return v4;
    }
    v16 = v17;
  }
  sub_1D258C76C(v16);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  type metadata accessor for MockRelevanceCacheManager();
  swift_deallocPartialClassInstance();
  return v4;
}

uint64_t type metadata accessor for MockRelevanceCacheManager()
{
  return objc_opt_self();
}

uint64_t MockRelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D26A81AC(a1, a2, a3);
}

uint64_t sub_1D26A7318(void *a1)
{
  return sub_1D258D9D0(a1);
}

uint64_t sub_1D26A7338(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[4];

  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v2 = sub_1D26CBD00();
    sub_1D26A83D4(&qword_1EFC83858, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FAB0], MEMORY[0x1E0D0FAB8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, *MEMORY[0x1E0D0FAA8], v2);
    return swift_willThrow();
  }
  else
  {
    v6[2] = MEMORY[0x1E0C80A78](a1);
    v6[3] = v5;
    return sub_1D26A7430((uint64_t)sub_1D26A8354, (uint64_t)v6, (uint64_t)"ChronoKit/MockRelevanceCacheManager.swift");
  }
}

uint64_t sub_1D26A7430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v13[4];

  v5 = v3;
  if ((swift_task_isCurrentExecutor() & 1) != 0)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_1D26A8530;
    *(_QWORD *)(v10 + 24) = v9;
    swift_retain();
    sub_1D26A8530(v13);
    if (v4)
    {
      swift_release();
      swift_release();
      return a3;
    }
    a3 = v13[0];
    swift_release();
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return a3;
    __break(1u);
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  v13[3] = v5;
  type metadata accessor for RelevanceCacheManager();
  sub_1D26CE190();
  sub_1D26CDA04();
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t sub_1D26A7604(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char isEscapingClosureAtFileLocation;

  if ((swift_task_isCurrentExecutor() & 1) == 0)
    goto LABEL_6;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1D26A857C;
  *(_QWORD *)(v6 + 24) = v5;
  swift_retain();
  sub_1D26A857C();
  if (v2)
  {
    swift_release();
    return swift_release();
  }
  swift_release();
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
LABEL_6:
    sub_1D26CE0A0();
    sub_1D26CDA04();
    type metadata accessor for RelevanceCacheManager();
    sub_1D26CE190();
    sub_1D26CDA04();
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D26A77D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char isEscapingClosureAtFileLocation;
  uint64_t result;
  _QWORD v13[4];

  v5 = v3;
  if ((swift_task_isCurrentExecutor() & 1) != 0)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = a1;
    *(_QWORD *)(v9 + 24) = a2;
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = sub_1D26A8530;
    *(_QWORD *)(v10 + 24) = v9;
    swift_retain();
    sub_1D26A8530(v13);
    if (v4)
    {
      swift_release();
      swift_release();
      return a3;
    }
    a3 = v13[0];
    swift_release();
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
      return a3;
    __break(1u);
  }
  v13[0] = 0;
  v13[1] = 0xE000000000000000;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  v13[3] = v5;
  type metadata accessor for RelevanceCacheManager();
  sub_1D26CE190();
  sub_1D26CDA04();
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t sub_1D26A79AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    return sub_1D26A7604((uint64_t)sub_1D26A7A6C, 0);
  v1 = sub_1D26CBD00();
  sub_1D26A83D4(&qword_1EFC83858, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FAB0], MEMORY[0x1E0D0FAB8]);
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v2, *MEMORY[0x1E0D0FAA8], v1);
  return swift_willThrow();
}

uint64_t sub_1D26A7A6C()
{
  return sub_1D258F874();
}

uint64_t sub_1D26A7A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v2 = sub_1D26CBD00();
    sub_1D26A83D4(&qword_1EFC83858, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FAB0], MEMORY[0x1E0D0FAB8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, *MEMORY[0x1E0D0FAA8], v2);
    return swift_willThrow();
  }
  else
  {
    v5[2] = MEMORY[0x1E0C80A78](a1);
    return sub_1D26A7604((uint64_t)sub_1D26A8368, (uint64_t)v5);
  }
}

void sub_1D26A7B7C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v2 = OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    swift_retain();
    v5 = sub_1D26CBC28();
    swift_release();
    v6 = a2;
    sub_1D2591D04(v5, v6);

    if (*(_QWORD *)(a1 + v2))
    {
      MEMORY[0x1E0C80A78](v7);
      swift_retain();
      sub_1D26CBC1C();
      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1D26A7C68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v2 = sub_1D26CBD00();
    sub_1D26A83D4(&qword_1EFC83858, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FAB0], MEMORY[0x1E0D0FAB8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, *MEMORY[0x1E0D0FAA8], v2);
    return swift_willThrow();
  }
  else
  {
    v5[2] = MEMORY[0x1E0C80A78](a1);
    return sub_1D26A77D8((uint64_t)sub_1D26A8380, (uint64_t)v5, (uint64_t)"ChronoKit/MockRelevanceCacheManager.swift");
  }
}

uint64_t sub_1D26A7D5C@<X0>(uint64_t result@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache;
  if (!*(_QWORD *)(result + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = result;
  swift_retain();
  v8 = sub_1D26CBC28();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1D25924D0(v8, a2);
  v10 = v9;
  result = swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v7 + v5))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  MEMORY[0x1E0C80A78](result);
  swift_retain();
  sub_1D26CBC1C();
  if (v3)
  {
    swift_release();
    return swift_release();
  }
  else
  {
    swift_release();
    v11 = sub_1D2591214(v10);
    result = swift_release();
    *a3 = v11;
  }
  return result;
}

uint64_t MockRelevanceCacheManager.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t MockRelevanceCacheManager.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D26A7ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D26A81AC(a1, a2, a3);
}

uint64_t sub_1D26A7EE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[4];

  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v2 = sub_1D26CBD00();
    sub_1D26A83D4(&qword_1EFC83858, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FAB0], MEMORY[0x1E0D0FAB8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, *MEMORY[0x1E0D0FAA8], v2);
    return swift_willThrow();
  }
  else
  {
    v6[2] = MEMORY[0x1E0C80A78](a1);
    v6[3] = v5;
    return sub_1D26A7430((uint64_t)sub_1D26A8354, (uint64_t)v6, (uint64_t)"ChronoKit/MockRelevanceCacheManager.swift");
  }
}

uint64_t sub_1D26A7FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_BYTE *)(v0 + 24) != 1)
    return sub_1D26A7604((uint64_t)sub_1D26A7A6C, 0);
  v1 = sub_1D26CBD00();
  sub_1D26A83D4(&qword_1EFC83858, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FAB0], MEMORY[0x1E0D0FAB8]);
  swift_allocError();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v1 - 8) + 104))(v2, *MEMORY[0x1E0D0FAA8], v1);
  return swift_willThrow();
}

uint64_t sub_1D26A80A0(uint64_t a1)
{
  return sub_1D26A7A8C(a1);
}

uint64_t sub_1D26A80B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[4];

  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v2 = sub_1D26CBD00();
    sub_1D26A83D4(&qword_1EFC83858, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FAB0], MEMORY[0x1E0D0FAB8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, *MEMORY[0x1E0D0FAA8], v2);
    return swift_willThrow();
  }
  else
  {
    v5[2] = MEMORY[0x1E0C80A78](a1);
    return sub_1D26A77D8((uint64_t)sub_1D26A85D8, (uint64_t)v5, (uint64_t)"ChronoKit/MockRelevanceCacheManager.swift");
  }
}

uint64_t sub_1D26A81AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v17[40];
  _BYTE v18[40];
  _BYTE v19[40];
  _BYTE v20[40];

  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v17[-v11];
  sub_1D2538510(a1, (uint64_t)v20);
  sub_1D2538510(a2, (uint64_t)v19);
  sub_1D255F2F4(a3, (uint64_t)v12);
  type metadata accessor for MockRelevanceCacheManager();
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 24) = 0;
  sub_1D2538510((uint64_t)v20, (uint64_t)v18);
  sub_1D2538510((uint64_t)v19, (uint64_t)v17);
  sub_1D255F2F4((uint64_t)v12, (uint64_t)v10);
  type metadata accessor for RelevanceCacheManager();
  swift_allocObject();
  v14 = RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)((uint64_t)v18, (uint64_t)v17, (uint64_t)v10);
  if (v3)
  {
    sub_1D258C76C((uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v15 = v14;
    sub_1D258C76C((uint64_t)v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    *(_QWORD *)(v13 + 16) = v15;
  }
  sub_1D258C76C(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v13;
}

void sub_1D26A8354(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_1D26A84D0(a1, a2);
}

void sub_1D26A8368(uint64_t a1)
{
  uint64_t v1;

  sub_1D26A7B7C(a1, *(void **)(v1 + 16));
}

uint64_t sub_1D26A8380@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D26A7D5C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1D26A8398(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = sub_1D26A83D4(&qword_1EFC83860, a2, (uint64_t (*)(uint64_t))type metadata accessor for MockRelevanceCacheManager, (uint64_t)&protocol conformance descriptor for MockRelevanceCacheManager);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D26A83D4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x1D823A4E4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t method lookup function for MockRelevanceCacheManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.unownedExecutor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:beforeFirstUnlock:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.archiveFilePromise(relevanceKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.ingestFetchResult(for:at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.rebuildCache()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.remove(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of MockRelevanceCacheManager.removeAll(keeping:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

void sub_1D26A84D0(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD v6[3];
  __int128 v7;

  v6[2] = a1;
  v7 = *(_OWORD *)(v2 + 16);
  sub_1D258EEA4((void (*)(uint64_t *__return_ptr))sub_1D2590ED8, (uint64_t)v6);
  if (!v3)
    *a2 = v5;
}

uint64_t sub_1D26A8520()
{
  return swift_deallocObject();
}

_QWORD *sub_1D26A8530@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2)
    *a1 = v5;
  return result;
}

uint64_t sub_1D26A856C()
{
  return swift_deallocObject();
}

uint64_t sub_1D26A857C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D26A859C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D26A85C0()
{
  return swift_deallocObject();
}

uint64_t sub_1D26A85D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D26A8380(a1, a2);
}

uint64_t static LocaleChangeCoordinator.localeDidChangePublisher.getter()
{
  if (qword_1ED9625F0 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963470);
  sub_1D2536488(&qword_1ED963468, &qword_1ED963470, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

void sub_1D26A8684()
{
  uint64_t v0;
  void *v1;
  void *v2;
  _QWORD v3[6];

  type metadata accessor for _PerAppLanguageOverrideObserver();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963460);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1D26CC150();
  v1 = (void *)objc_opt_self();
  v3[4] = sub_1D26AA610;
  v3[5] = v0;
  v3[0] = MEMORY[0x1E0C809B0];
  v3[1] = 1107296256;
  v3[2] = sub_1D26A8838;
  v3[3] = &block_descriptor_7;
  v2 = _Block_copy(v3);
  swift_retain();
  swift_release();
  objc_msgSend(v1, sel_subscribeToAppLanguageChanges_, v2);
  _Block_release(v2);
  off_1ED962810 = (_UNKNOWN *)v0;
}

uint64_t sub_1D26A8774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D26CBC7C();
  sub_1D26CC138();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1D26A8838(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = sub_1D26CD938();
  v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26A888C()
{
  objc_msgSend((id)objc_opt_self(), sel_unsubscribeFromAppLanguageChanges);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D26A88C8()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963470);
  swift_allocObject();
  result = sub_1D26CC150();
  qword_1ED9636E8 = result;
  return result;
}

uint64_t LocaleChangeCoordinator.__allocating_init(with:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  LocaleChangeCoordinator.init(with:)(a1);
  return v2;
}

uint64_t LocaleChangeCoordinator.init(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, _QWORD, uint64_t);
  unint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  char *v32;
  id v33;
  id v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  _QWORD v39[3];
  void (*v40)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  id v57[6];

  v55 = a1;
  v2 = sub_1D26CDE60();
  v49 = *(_QWORD *)(v2 - 8);
  v50 = v2;
  MEMORY[0x1E0C80A78](v2);
  v48 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B40);
  v52 = *(_QWORD *)(v4 - 8);
  v53 = v4;
  MEMORY[0x1E0C80A78](v4);
  v51 = (char *)v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BFC8);
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_1D26CDD7C();
  v41 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v45 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963410);
  v43 = *(_QWORD *)(v9 - 8);
  v44 = v9;
  MEMORY[0x1E0C80A78](v9);
  v42 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CDD40();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1D26CDD88();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v16);
  v54 = v1;
  *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9E8];
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 32) = 0u;
  v17 = objc_msgSend((id)objc_opt_self(), sel_preferredLanguages);
  v18 = sub_1D26CDAF4();

  *(_QWORD *)(v1 + 80) = v18;
  sub_1D2538510(v55, (uint64_t)v57);
  swift_beginAccess();
  sub_1D26A90AC((uint64_t)v57, v1 + 32);
  swift_endAccess();
  v19 = sub_1D2544658();
  sub_1D26CD0A4();
  v20 = *(void (**)(char *, _QWORD, uint64_t))(v13 + 104);
  v21 = v19;
  v20(v15, *MEMORY[0x1E0DEF8D8], v12);
  v57[0] = (id)MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D2536488((unint64_t *)&qword_1ED96EE28, &qword_1ED96EE20, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  *(_QWORD *)(v1 + 24) = sub_1D26CDDB8();
  if (qword_1ED962818 != -1)
    swift_once();
  v57[0] = *((id *)off_1ED962810 + 2);
  swift_retain();
  v22 = v45;
  sub_1D26CDD70();
  v23 = v54;
  v56 = *(id *)(v54 + 24);
  v24 = v56;
  v25 = sub_1D26CDD58();
  v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v26 = (uint64_t)v46;
  v40(v46, 1, 1, v25);
  v27 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963460);
  sub_1D2536488(&qword_1ED963458, &qword_1ED963460, MEMORY[0x1E0C95F48]);
  v39[2] = sub_1D25369B0((unint64_t *)&qword_1ED96BFD0, (uint64_t (*)(uint64_t))sub_1D2544658, MEMORY[0x1E0DEF7F8]);
  v28 = v42;
  sub_1D26CC264();
  sub_1D253703C(v26, &qword_1ED96BFC8);

  v41 = *(_QWORD *)(v41 + 8);
  v29 = v47;
  ((void (*)(char *, uint64_t))v41)(v22, v47);
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_1D2536488(&qword_1ED963408, &qword_1ED963410, MEMORY[0x1E0C95BB0]);
  v39[1] = v21;
  v30 = v44;
  sub_1D26CC288();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v28, v30);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  v31 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  v32 = v48;
  sub_1D26CDE6C();

  sub_1D26CDD70();
  v57[0] = *(id *)(v23 + 24);
  v33 = v57[0];
  v40((char *)v26, 1, 1, v25);
  sub_1D25369B0((unint64_t *)&qword_1ED96C050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30], MEMORY[0x1E0CB1F20]);
  v34 = v33;
  v35 = v50;
  v36 = v51;
  sub_1D26CC264();
  sub_1D253703C(v26, &qword_1ED96BFC8);

  ((void (*)(char *, uint64_t))v41)(v22, v29);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v35);
  swift_allocObject();
  swift_weakInit();
  sub_1D2536488(&qword_1ED961B38, &qword_1ED961B40, MEMORY[0x1E0C95BB0]);
  v37 = v53;
  sub_1D26CC288();
  swift_release();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v36, v37);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v55);
  return v23;
}

uint64_t sub_1D26A90AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D26A90F4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D26A9118(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D26A93E8(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D26A9174(uint64_t a1)
{
  return sub_1D26A9118(a1);
}

uint64_t sub_1D26A917C()
{
  uint64_t Strong;
  _QWORD *v1;
  id v2;
  _QWORD *v3;
  char v4;
  uint64_t result;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v1 = *(_QWORD **)(Strong + 80);
    swift_bridgeObjectRetain();
    swift_release();
  }
  else
  {
    v1 = 0;
  }
  v2 = objc_msgSend((id)objc_opt_self(), sel_preferredLanguages);
  v3 = (_QWORD *)sub_1D26CDAF4();

  if (!v1)
  {
    swift_bridgeObjectRelease();
LABEL_10:
    type metadata accessor for KeepAliveTransaction();
    swift_initStackObject();
    KeepAliveTransaction.init(reason:)(0x6843656C61636F6CLL, 0xEC00000065676E61);
    swift_release();
    if (qword_1ED9621C8 != -1)
      swift_once();
    v6 = sub_1D26CC09C();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED977D08);
    v7 = sub_1D26CC084();
    v8 = sub_1D26CDD04();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1D2531000, v7, v8, "Locale preferred languages changed - exiting.", v9, 2u);
      MEMORY[0x1D823A5E0](v9, -1, -1);
    }

    exit(0);
  }
  v4 = sub_1D2686C88(v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    goto LABEL_10;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D26A98D4(0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D26A9370()
{
  return sub_1D26A917C();
}

uint64_t static LocaleChangeCoordinator._simulateLocaleChangesForExtensions(_:)()
{
  if (qword_1ED9625F0 != -1)
    swift_once();
  swift_retain();
  sub_1D26CC138();
  return swift_release();
}

uint64_t sub_1D26A93E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  _QWORD v37[4];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1D26AA59C(v1 + 32, (uint64_t)v48);
  if (!v49)
    return sub_1D253703C((uint64_t)v48, &qword_1ED961AD0);
  v39 = v4;
  v37[2] = v1;
  sub_1D2538510((uint64_t)v48, (uint64_t)v45);
  sub_1D253703C((uint64_t)v48, &qword_1ED961AD0);
  v7 = v47;
  __swift_project_boxed_opaque_existential_0(v45, v46);
  v8 = sub_1D26CBC88();
  v9 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
  v44 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(v9 + 16);
  if (v11)
  {
    v37[1] = v9;
    v12 = v9 + 32;
    *(_QWORD *)&v10 = 138543618;
    v38 = v10;
    v37[3] = MEMORY[0x1E0DEE9B8] + 8;
    v13 = v39;
    v41 = v6;
    do
    {
      v42 = v11;
      sub_1D2538510(v12, (uint64_t)v48);
      v14 = v49;
      v15 = v50;
      __swift_project_boxed_opaque_existential_0(v48, v49);
      (*(void (**)(uint64_t, uint64_t))(v15 + 40))(v14, v15);
      MEMORY[0x1D8239290]();
      if (*(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D26CDB30();
      sub_1D26CDB54();
      sub_1D26CDB0C();
      if (qword_1ED9621C8 != -1)
        swift_once();
      v16 = sub_1D26CC09C();
      __swift_project_value_buffer(v16, (uint64_t)qword_1ED977D08);
      sub_1D2538510((uint64_t)v48, (uint64_t)v45);
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v6, a1, v3);
      v17 = sub_1D26CC084();
      v18 = sub_1D26CDD04();
      if (os_log_type_enabled(v17, v18))
      {
        v19 = swift_slowAlloc();
        v20 = (_QWORD *)swift_slowAlloc();
        v40 = swift_slowAlloc();
        v43 = v40;
        *(_DWORD *)v19 = v38;
        v21 = v3;
        v22 = a1;
        v23 = v46;
        v24 = v47;
        __swift_project_boxed_opaque_existential_0(v45, v46);
        v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 40);
        v26 = v24;
        a1 = v22;
        v3 = v21;
        v13 = v39;
        v27 = v25(v23, v26);
        *(_QWORD *)(v19 + 4) = v27;
        *v20 = v27;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        *(_WORD *)(v19 + 12) = 2082;
        sub_1D2536488(&qword_1EFC83868, &qword_1ED9632F8, MEMORY[0x1E0D0F998]);
        v28 = sub_1D26CE370();
        *(_QWORD *)(v19 + 14) = sub_1D2537880(v28, v29, &v43);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v13 + 8))(v41, v3);
        _os_log_impl(&dword_1D2531000, v17, v18, "[Locale] Per app language change detected for extension: %{public}@ (container: %{public}s).", (uint8_t *)v19, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v20, -1, -1);
        v30 = v40;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v30, -1, -1);
        v31 = v19;
        v6 = v41;
        MEMORY[0x1D823A5E0](v31, -1, -1);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v3);
      }

      sub_1D2538510((uint64_t)v48, (uint64_t)v45);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
      type metadata accessor for WidgetExtension();
      if ((swift_dynamicCast() & 1) != 0)
      {
        v32 = v43;
        v33 = *(_QWORD *)(v43 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeLock);
        v34 = *(os_unfair_lock_s **)(v33 + 16);
        swift_retain();
        os_unfair_lock_lock(v34);
        *(_BYTE *)(v32 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateRequired) = 1;
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
        swift_release();
        swift_release();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      v12 += 40;
      v11 = v42 - 1;
    }
    while (v42 != 1);
    swift_bridgeObjectRelease();
    v35 = v44;
  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1E0DEE9D8];
  }
  sub_1D26A98D4(v35);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26A98D4(uint64_t a1)
{
  uint64_t v1;
  uint8_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  int v23;
  _BOOL4 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  id v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t (*v54)();
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void *v60;
  uint64_t (*v61)();
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  id v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  void *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  NSObject *v78;
  int v79;
  uint8_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD v97[3];
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  uint64_t v102;
  uint64_t aBlock[3];
  _QWORD *v104;
  uint64_t (*v105)();
  uint64_t v106;

  v3 = v1;
  v5 = sub_1D26CD074();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_1D26CD0C8();
  v95 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v94 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1D26CD068();
  v92 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v91 = (NSObject **)((char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1D26CD0F8();
  v12 = MEMORY[0x1E0C80A78](v11);
  v13 = MEMORY[0x1E0C80A78](v12);
  v17 = *(_QWORD *)(v3 + 72);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
    goto LABEL_46;
  }
  v84 = v16;
  v85 = v15;
  v86 = (char *)&v78 - v14;
  v87 = v13;
  v88 = v8;
  v89 = v6;
  *(_QWORD *)(v3 + 72) = v19;
  if (qword_1ED9621C8 != -1)
LABEL_46:
    swift_once();
  v20 = sub_1D26CC09C();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED977D08);
  swift_bridgeObjectRetain_n();
  v83 = v21;
  v22 = sub_1D26CC084();
  v23 = sub_1D26CDD04();
  v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
  v90 = v5;
  if (!v24)
  {

    swift_bridgeObjectRelease_n();
    if (a1)
      goto LABEL_18;
LABEL_41:
    swift_beginAccess();
    sub_1D26AA59C(v3 + 32, (uint64_t)aBlock);
    v53 = v104;
    if (v104)
    {
      v54 = v105;
      v55 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v104);
      v56 = *(v53 - 1);
      MEMORY[0x1E0C80A78](v55);
      v58 = (char *)&v78 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v56 + 16))(v58);
      sub_1D253703C((uint64_t)aBlock, &qword_1ED961AD0);
      v41 = (_QWORD *)(*((uint64_t (**)(_QWORD *, uint64_t (*)()))v54 + 2))(v53, v54);
      (*(void (**)(char *, _QWORD *))(v56 + 8))(v58, v53);
      v48 = v41[2];
      if (!v48)
        return swift_bridgeObjectRelease();
      goto LABEL_53;
    }
    sub_1D253703C((uint64_t)aBlock, &qword_1ED961AD0);
LABEL_52:
    v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v48 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v48)
      return swift_bridgeObjectRelease();
    goto LABEL_53;
  }
  v2 = (uint8_t *)swift_slowAlloc();
  v25 = swift_slowAlloc();
  aBlock[0] = v25;
  *(_DWORD *)v2 = 136446210;
  v81 = v25;
  if (!a1)
  {
    v49 = 0xEE00736E6F69736ELL;
    v50 = 0x65747865206C6C61;
    goto LABEL_40;
  }
  v82 = v3;
  if ((unint64_t)a1 >> 62)
    goto LABEL_59;
  v26 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (1)
  {
    v80 = v2;
    v79 = v23;
    if (v26)
    {
      v78 = v22;
      *(_QWORD *)&v100 = MEMORY[0x1E0DEE9D8];
      result = sub_1D258430C(0, v26 & ~(v26 >> 63), 0);
      if (v26 < 0)
      {
        __break(1u);
        return result;
      }
      v28 = 0;
      v29 = v100;
      do
      {
        if ((a1 & 0xC000000000000001) != 0)
          v30 = (id)MEMORY[0x1D8239890](v28, a1);
        else
          v30 = *(id *)(a1 + 8 * v28 + 32);
        v31 = v30;
        v32 = objc_msgSend(v30, sel_description);
        v33 = sub_1D26CD938();
        v35 = v34;

        *(_QWORD *)&v100 = v29;
        v37 = *(_QWORD *)(v29 + 16);
        v36 = *(_QWORD *)(v29 + 24);
        if (v37 >= v36 >> 1)
        {
          sub_1D258430C(v36 > 1, v37 + 1, 1);
          v29 = v100;
        }
        ++v28;
        *(_QWORD *)(v29 + 16) = v37 + 1;
        v38 = v29 + 16 * v37;
        *(_QWORD *)(v38 + 32) = v33;
        *(_QWORD *)(v38 + 40) = v35;
      }
      while (v26 != v28);
      swift_bridgeObjectRelease();
      v22 = v78;
    }
    else
    {
      swift_bridgeObjectRelease();
      v29 = MEMORY[0x1E0DEE9D8];
    }
    *(_QWORD *)&v100 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
    sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
    v50 = sub_1D26CD8E4();
    v49 = v51;
    swift_bridgeObjectRelease();
    v3 = v82;
    v2 = v80;
    v23 = v79;
LABEL_40:
    *(_QWORD *)&v100 = sub_1D2537880(v50, v49, aBlock);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v22, (os_log_type_t)v23, "[Locale] Locale changed detected for %{public}s!  Killing...", v2, 0xCu);
    v52 = v81;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v52, -1, -1);
    MEMORY[0x1D823A5E0](v2, -1, -1);

    if (!a1)
      goto LABEL_41;
LABEL_18:
    if ((unint64_t)a1 >> 62)
    {
      if (a1 >= 0)
        v22 = (a1 & 0xFFFFFFFFFFFFFF8);
      else
        v22 = a1;
      swift_bridgeObjectRetain();
      v39 = sub_1D26CE1F0();
      if (!v39)
      {
LABEL_51:
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
    }
    else
    {
      v39 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v39)
        goto LABEL_51;
    }
    if (v39 >= 1)
      break;
    __break(1u);
LABEL_59:
    swift_bridgeObjectRetain();
    v26 = sub_1D26CE1F0();
  }
  v82 = v3;
  swift_beginAccess();
  v40 = 0;
  v41 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if ((a1 & 0xC000000000000001) != 0)
      v42 = (id)MEMORY[0x1D8239890](v40, a1);
    else
      v42 = *(id *)(a1 + 8 * v40 + 32);
    v43 = v42;
    sub_1D26AA59C(v3 + 32, (uint64_t)aBlock);
    if (!v104)
    {
      sub_1D253703C((uint64_t)aBlock, &qword_1ED961AD0);
      v100 = 0u;
      v101 = 0u;
      v102 = 0;
LABEL_23:

      sub_1D253703C((uint64_t)&v100, &qword_1ED962040);
      goto LABEL_24;
    }
    sub_1D2538510((uint64_t)aBlock, (uint64_t)v97);
    sub_1D253703C((uint64_t)aBlock, &qword_1ED961AD0);
    v44 = v98;
    v45 = v99;
    __swift_project_boxed_opaque_existential_0(v97, v98);
    ExtensionManaging.extension(for:)((uint64_t)v43, v44, v45);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v97);
    if (!*((_QWORD *)&v101 + 1))
      goto LABEL_23;
    sub_1D2538F38(&v100, (uint64_t)aBlock);
    sub_1D2538510((uint64_t)aBlock, (uint64_t)&v100);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v41 = sub_1D2538F50(0, v41[2] + 1, 1, v41);
    v47 = v41[2];
    v46 = v41[3];
    if (v47 >= v46 >> 1)
      v41 = sub_1D2538F50((_QWORD *)(v46 > 1), v47 + 1, 1, v41);
    v41[2] = v47 + 1;
    sub_1D2538F38(&v100, (uint64_t)&v41[5 * v47 + 4]);

    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
LABEL_24:
    ++v40;
  }
  while (v39 != v40);
  swift_bridgeObjectRelease();
  v3 = v82;
  v48 = v41[2];
  if (!v48)
    return swift_bridgeObjectRelease();
LABEL_53:
  v59 = (uint64_t)(v41 + 4);
  swift_bridgeObjectRetain();
  do
  {
    sub_1D2538510(v59, (uint64_t)aBlock);
    v60 = v104;
    v61 = v105;
    __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v104);
    (*((void (**)(void *, uint64_t (*)()))v61 + 37))(v60, v61);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    v59 += 40;
    --v48;
  }
  while (v48);
  swift_bridgeObjectRelease_n();
  v62 = sub_1D26CC084();
  v63 = sub_1D26CDD04();
  if (os_log_type_enabled(v62, v63))
  {
    v64 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v64 = 0;
    _os_log_impl(&dword_1D2531000, v62, v63, "[Locale] Terminations completed!", v64, 2u);
    MEMORY[0x1D823A5E0](v64, -1, -1);
  }

  v65 = *(id *)(v3 + 24);
  v66 = v84;
  sub_1D26CD0E0();
  v67 = v91;
  *v91 = 2;
  v68 = v92;
  v69 = v93;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v92 + 104))(v67, *MEMORY[0x1E0DEF4A0], v93);
  v70 = v86;
  sub_1D26CD0EC();
  (*(void (**)(_QWORD *, uint64_t))(v68 + 8))(v67, v69);
  v71 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
  v72 = v87;
  v71(v66, v87);
  v73 = swift_allocObject();
  *(_QWORD *)(v73 + 16) = a1;
  v105 = sub_1D26AA608;
  v106 = v73;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D25351AC;
  v104 = &block_descriptor_19;
  v74 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  v75 = v94;
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  v97[0] = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
  v76 = v88;
  v77 = v90;
  sub_1D26CDFE0();
  MEMORY[0x1D823950C](v70, v75, v76, v74);
  _Block_release(v74);

  (*(void (**)(char *, uint64_t))(v89 + 8))(v76, v77);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v75, v96);
  v71((uint64_t)v70, v72);
  return swift_release();
}

uint64_t sub_1D26AA3A4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1ED9621C8 != -1)
    swift_once();
  v0 = sub_1D26CC09C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED977D08);
  v1 = sub_1D26CC084();
  v2 = sub_1D26CDD04();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1D2531000, v1, v2, "[Locale] Notifying internally...", v3, 2u);
    MEMORY[0x1D823A5E0](v3, -1, -1);
  }

  if (qword_1ED9625F0 != -1)
    swift_once();
  swift_retain();
  sub_1D26CC138();
  return swift_release();
}

uint64_t LocaleChangeCoordinator.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_1D253703C(v0 + 32, &qword_1ED961AD0);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LocaleChangeCoordinator.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  sub_1D253703C(v0 + 32, &qword_1ED961AD0);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _PerAppLanguageOverrideObserver()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LocaleChangeCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for LocaleChangeCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LocaleChangeCoordinator.__allocating_init(with:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_1D26AA59C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D26AA5E4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D26AA608()
{
  return sub_1D26AA3A4();
}

uint64_t sub_1D26AA610()
{
  return sub_1D26A8774();
}

uint64_t WidgetViewClippingModifier.init(metrics:clip:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_BYTE *)(a3 + 8) = a2;
  return result;
}

uint64_t WidgetViewClippingModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  void *v8;
  int v9;
  double v10;
  double v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v5 = sub_1D26CC444();
  MEMORY[0x1E0C80A78](v5);
  v7 = (double *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)v2;
  v9 = *(unsigned __int8 *)(v2 + 8);
  objc_msgSend(v8, sel__effectiveCornerRadius);
  if (v9)
    v11 = v10;
  else
    v11 = 0.0;
  v12 = (char *)v7 + *(int *)(v5 + 20);
  v13 = *MEMORY[0x1E0CDB0C0];
  v14 = sub_1D26CC828();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  *v7 = v11;
  v7[1] = v11;
  v15 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E30) + 36);
  sub_1D25E5610((uint64_t)v7, v15);
  *(_BYTE *)(v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBD8) + 36)) = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a2, a1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E48);
  sub_1D26CD2F0();
  v17 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E60) + 36);
  sub_1D25E5610((uint64_t)v7, v17);
  *(_WORD *)(v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B278) + 36)) = 256;
  return sub_1D25E5654((uint64_t)v7);
}

uint64_t sub_1D26AA7B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D26AA7C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  void *v8;
  int v9;
  double v10;
  double v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v5 = sub_1D26CC444();
  MEMORY[0x1E0C80A78](v5);
  v7 = (double *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *(void **)v2;
  v9 = *(unsigned __int8 *)(v2 + 8);
  objc_msgSend(v8, sel__effectiveCornerRadius);
  if (v9)
    v11 = v10;
  else
    v11 = 0.0;
  v12 = (char *)v7 + *(int *)(v5 + 20);
  v13 = *MEMORY[0x1E0CDB0C0];
  v14 = sub_1D26CC828();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  *v7 = v11;
  v7[1] = v11;
  v15 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E30) + 36);
  sub_1D25E5610((uint64_t)v7, v15);
  *(_BYTE *)(v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBD8) + 36)) = 0;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962EC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a2, a1, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E48);
  sub_1D26CD2F0();
  v17 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E60) + 36);
  sub_1D25E5610((uint64_t)v7, v17);
  *(_WORD *)(v17 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B278) + 36)) = 256;
  return sub_1D25E5654((uint64_t)v7);
}

uint64_t initializeBufferWithCopyOfBuffer for WidgetViewClippingModifier(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = v3;
  return a1;
}

uint64_t assignWithCopy for WidgetViewClippingModifier(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for WidgetViewClippingModifier(uint64_t a1, uint64_t a2)
{
  void *v4;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetViewClippingModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 9))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetViewClippingModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 9) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetViewClippingModifier()
{
  return &type metadata for WidgetViewClippingModifier;
}

unint64_t sub_1D26AAAA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962E58;
  if (!qword_1ED962E58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962E60);
    v2[0] = sub_1D26AAB2C();
    v2[1] = sub_1D2536488(&qword_1ED96B270, &qword_1ED96B278, MEMORY[0x1E0CD89F0]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962E58);
  }
  return result;
}

unint64_t sub_1D26AAB2C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962E40;
  if (!qword_1ED962E40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962E48);
    v2[0] = sub_1D26AAB98();
    v2[1] = sub_1D26AAC34();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962E40);
  }
  return result;
}

unint64_t sub_1D26AAB98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962E28;
  if (!qword_1ED962E28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962E30);
    v2[0] = sub_1D2536488(&qword_1ED962EB8, &qword_1ED962EC0, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D2536488(&qword_1ED96CBD0, &qword_1ED96CBD8, MEMORY[0x1E0CDBE48]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962E28);
  }
  return result;
}

unint64_t sub_1D26AAC34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED962F98;
  if (!qword_1ED962F98)
  {
    v1 = sub_1D26CD2FC();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CEFE58], v1);
    atomic_store(result, (unint64_t *)&qword_1ED962F98);
  }
  return result;
}

uint64_t Extension.bundleStub.getter(uint64_t a1, void (**a2)(_QWORD, _QWORD))
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WidgetExtensionInfo();
  MEMORY[0x1E0C80A78](v7);
  v9 = (id *)((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  a2[4](a1, a2);
  v10 = *v9;
  sub_1D2538928((uint64_t)v9);
  a2[7](a1, a2);
  a2[11](a1, a2);
  v11 = sub_1D26CB880();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 0, 1, v11);
  return sub_1D26CD380();
}

uint64_t Extension.localizedDisplayName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v15;

  v4 = type metadata accessor for WidgetExtensionInfo();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (id *)((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v15 - v8;
  v10 = *(void (**)(uint64_t, uint64_t))(a2 + 32);
  v10(a1, a2);
  v11 = *((_QWORD *)v9 + 3);
  v12 = *((_QWORD *)v9 + 4);
  swift_bridgeObjectRetain();
  sub_1D2538928((uint64_t)v9);
  if (!v12)
  {
    v10(a1, a2);
    v13 = *v7;
    sub_1D2538928((uint64_t)v7);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    v11 = sub_1D26CBC88();
    swift_endAccess();

  }
  return v11;
}

uint64_t Extension.containerBundleLocalizedDisplayName.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v4 = type metadata accessor for WidgetExtensionInfo();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (id *)((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = *(void (**)(uint64_t, uint64_t))(a2 + 32);
  v10(a1, a2);
  v11 = (uint64_t *)&v9[*(int *)(v4 + 68)];
  v13 = *v11;
  v12 = v11[1];
  swift_bridgeObjectRetain();
  sub_1D2538928((uint64_t)v9);
  if (!v12)
  {
    v10(a1, a2);
    v14 = (char *)*v7;
    sub_1D2538928((uint64_t)v7);
    v15 = &v14[*MEMORY[0x1E0D0FE18]];
    swift_beginAccess();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
    {
      swift_endAccess();
      v13 = 0x6E776F6E6B6E55;
    }
    else
    {
      v13 = sub_1D26CBC88();
      swift_endAccess();
    }

  }
  return v13;
}

uint64_t Extension.hasEventServiceEntitlement.getter()
{
  return 0;
}

uint64_t Extension.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  _QWORD v14[2];

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = 0;
  v14[1] = 0xE000000000000000;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  sub_1D26CE508();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 40))(a1, a2);
  v9 = objc_msgSend(v8, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  (*(void (**)(uint64_t, uint64_t))(a2 + 152))(a1, a2);
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  if (qword_1ED96C7C0 != -1)
    swift_once();
  v10 = (id)qword_1ED96C848;
  v11 = (void *)sub_1D26CB940();
  v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

  sub_1D26CD938();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  (*(void (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return v14[0];
}

id sub_1D26AB3B0(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 20));
}

uint64_t sub_1D26AB3BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = v1 + *(int *)(a1 + 20);
  if (*(_QWORD *)(v2 + 32))
  {
    v3 = *(_QWORD *)(v2 + 24);
  }
  else
  {
    v4 = *(void **)v2;
    swift_beginAccess();
    v5 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    v3 = sub_1D26CBC88();
    swift_endAccess();

  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1D26AB464(uint64_t a1)
{
  uint64_t v1;
  void **v2;
  uint64_t *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  uint64_t v7;
  id v8;

  v2 = (void **)(v1 + *(int *)(a1 + 20));
  v3 = (uint64_t *)((char *)v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 68));
  if (v3[1])
  {
    v4 = *v3;
  }
  else
  {
    v5 = *v2;
    v6 = (char *)*v2 + *MEMORY[0x1E0D0FE18];
    swift_beginAccess();
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7))
    {
      swift_endAccess();
      v4 = 0x6E776F6E6B6E55;
    }
    else
    {
      v8 = v5;
      v4 = sub_1D26CBC88();
      swift_endAccess();

    }
  }
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t Extension.platform.getter()
{
  return 0;
}

uint64_t Extension.disablesImplicitDescriptorDiscovery.getter()
{
  return 0;
}

uint64_t static Extension.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *boxed_opaque_existential_1;
  uint64_t v9[5];

  v4 = a4;
  v9[3] = a3;
  v9[4] = a4;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v9);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_1, a2, a3);
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 304))(v9, a3, v4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  return v4 & 1;
}

void Extension.info.getter(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v46 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v5);
  v50 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CB880();
  v8 = MEMORY[0x1E0C80A78](v7);
  v49 = (uint64_t)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v48 = (uint64_t)&v37 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v47 = (uint64_t)&v37 - v13;
  MEMORY[0x1E0C80A78](v12);
  v39 = (uint64_t)&v37 - v14;
  v15 = sub_1D26CB9DC();
  MEMORY[0x1E0C80A78](v15);
  v41 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CBA24();
  MEMORY[0x1E0C80A78](v17);
  v42 = (uint64_t)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  MEMORY[0x1E0C80A78](v22);
  sub_1D26CDE54();
  (*(void (**)(uint64_t, uint64_t))(a2 + 48))(a1, a2);
  sub_1D26CBC7C();
  (*(void (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  sub_1D26CBC7C();
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v21, 0, 1, v23);
  v45 = sub_1D26CDE3C();
  v24 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  v43 = v25;
  v44 = v24;
  (*(void (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  v40 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 88))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 96))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  v26 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v50, 1, 1, v26);
  (*(void (**)(uint64_t, uint64_t))(a2 + 136))(a1, a2);
  v38 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 168))(a1, a2);
  v28 = v27;
  v29 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 152))(a1, a2);
  v31 = v30;
  v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 176))(a1, a2);
  v34 = v33;
  v35 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 184))(a1, a2);
  v36 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 216))(a1, a2);
  WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)(v45, v44, v43, 0, 0, v42, v41, v40 & 1, v46, v39, v47, v48, v50, 0, v49, v38, v28, 0, 0,
    v29,
    v31,
    v32,
    v34,
    v35,
    0,
    0,
    0,
    0,
    0,
    v36,
    0,
    MEMORY[0x1E0DEE9D8],
    0);
}

uint64_t Extension.effectiveContainerBundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t sub_1D26ABA60()
{
  return 0x6E776F6E6B6E55;
}

uint64_t Extension.sdkVersion.getter()
{
  return 0x6E776F6E6B6E55;
}

uint64_t sub_1D26ABA90()
{
  return 0;
}

uint64_t Extension.watchKitExtensionIdentifier.getter()
{
  return 0;
}

uint64_t Extension.isDevelopmentExtension.getter()
{
  return 0;
}

uint64_t sub_1D26ABAB0()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t Extension.nominatedContainingBundleIdentifiers.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t Extension.entitlements.getter()
{
  return 0;
}

uint64_t Extension.makeSession(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5;
  uint64_t v6;
  _BYTE v8[40];

  v5 = sub_1D26CD620();
  sub_1D26CD5F0();
  v6 = (*(uint64_t (**)(_QWORD, _BYTE *, uint64_t, uint64_t))(a3 + 264))(v5 & 1, v8, a2, a3);
  sub_1D26ABB50((uint64_t)v8);
  return v6;
}

uint64_t sub_1D26ABB50(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962B58);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Extension.makeSessionAsync(options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v9;
  _BYTE v11[40];

  v9 = sub_1D26CD620();
  sub_1D26CD5F0();
  (*(void (**)(_QWORD, _BYTE *, uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 272))(v9 & 1, v11, a2, a3, a4, a5);
  return sub_1D26ABB50((uint64_t)v11);
}

uint64_t dispatch thunk of Extension.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of Extension.version.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of Extension.pluginUUID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of Extension.lastModifiedDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of Extension.isInternal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of Extension.bundleURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of Extension.dataContainerURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of Extension.systemDataContainerURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of Extension.requestedDataProtection.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of Extension.localizedDisplayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of Extension.wantsLocation.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of Extension.containerBundleURL.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of Extension.containerBundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of Extension.containerBundleVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of Extension.containerBundleLocalizedDisplayName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of Extension.effectiveContainerBundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of Extension.sdkVersion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of Extension.platform.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of Extension.pushEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of Extension.isDevelopmentExtension.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of Extension.availableLocalizations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of Extension.allowsMixedLocalizations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of Extension.nominatedContainingBundleIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of Extension.hasEventServiceEntitlement.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of Extension.entitlements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of Extension.disablesImplicitDescriptorDiscovery.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of Extension.makeSession(requiresUserInteractivePriority:suspensionObserver:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 264))();
}

uint64_t dispatch thunk of Extension.makeSessionAsync(requiresUserInteractivePriority:suspensionObserver:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 272))();
}

uint64_t dispatch thunk of Extension.makeSession(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 280))();
}

uint64_t dispatch thunk of Extension.terminate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of Extension.matches(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 304))();
}

void *sub_1D26ABD18(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  char v11;
  id v13;

  if (a3 >> 62)
    goto LABEL_16;
  v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; v6 = sub_1D26CE1F0())
  {
    v7 = 4;
    while (1)
    {
      v8 = (a3 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D8239890](v7 - 4, a3) : *(id *)(a3 + 8 * v7);
      v9 = v8;
      v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1))
        break;
      v13 = v8;
      v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if ((v11 & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6)
        goto LABEL_11;
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void sub_1D26ABE38(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3, void (*a4)(uint64_t *__return_ptr, uint64_t), uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  void *v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t *__return_ptr, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v48 = a4;
  v55 = a2;
  v9 = type metadata accessor for ExtensionMetadata();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v47 = (uint64_t)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v50 = (uint64_t)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v49 = (uint64_t)&v40 - v15;
  v16 = *(_QWORD *)(a3 + 64);
  v46 = a3 + 64;
  v17 = -1;
  v18 = -1 << *(_BYTE *)(a3 + 32);
  v45 = ~v18;
  if (-v18 < 64)
    v17 = ~(-1 << -(char)v18);
  v19 = v17 & v16;
  v44 = (unint64_t)(63 - v18) >> 6;
  v41 = v44 - 1;
  swift_bridgeObjectRetain();
  swift_retain();
  v20 = 0;
  v52 = a5;
  v53 = v10;
  v51 = a3;
  v43 = v9;
  while (1)
  {
    if (v19)
    {
      v54 = (v19 - 1) & v19;
      v28 = __clz(__rbit64(v19)) | (v20 << 6);
LABEL_23:
      v29 = v49;
      sub_1D2536F34(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v10 + 72) * v28, v49);
      v30 = 0;
      goto LABEL_42;
    }
    v31 = v20 + 1;
    if (__OFADD__(v20, 1))
      goto LABEL_61;
    if (v31 >= v44)
    {
LABEL_40:
      v54 = 0;
      v30 = 1;
      goto LABEL_41;
    }
    v32 = *(_QWORD *)(v46 + 8 * v31);
    if (v32)
      goto LABEL_27;
    v20 += 2;
    if (v31 + 1 >= v44)
    {
      v54 = 0;
      v30 = 1;
      v20 = v31;
    }
    else
    {
      v32 = *(_QWORD *)(v46 + 8 * v20);
      if (v32)
        goto LABEL_30;
      if (v31 + 2 >= v44)
        goto LABEL_40;
      v32 = *(_QWORD *)(v46 + 8 * (v31 + 2));
      if (v32)
      {
        v31 += 2;
        goto LABEL_27;
      }
      v20 = v31 + 3;
      if (v31 + 3 >= v44)
      {
        v54 = 0;
        v30 = 1;
        v20 = v31 + 2;
        goto LABEL_41;
      }
      v32 = *(_QWORD *)(v46 + 8 * v20);
      if (v32)
      {
LABEL_30:
        v31 = v20;
LABEL_27:
        v54 = (v32 - 1) & v32;
        v28 = __clz(__rbit64(v32)) + (v31 << 6);
        v20 = v31;
        goto LABEL_23;
      }
      if (v31 + 4 >= v44)
        goto LABEL_40;
      v32 = *(_QWORD *)(v46 + 8 * (v31 + 4));
      if (v32)
      {
        v31 += 4;
        goto LABEL_27;
      }
      v39 = v31 + 5;
      if (v31 + 5 >= v44)
      {
        v54 = 0;
        v30 = 1;
        v20 = v31 + 4;
      }
      else
      {
        v32 = *(_QWORD *)(v46 + 8 * v39);
        if (v32)
        {
          v31 += 5;
          v10 = v53;
          goto LABEL_27;
        }
        v10 = v53;
        while (1)
        {
          v31 = v39 + 1;
          if (__OFADD__(v39, 1))
            goto LABEL_62;
          if (v31 >= v44)
            break;
          v32 = *(_QWORD *)(v46 + 8 * v31);
          ++v39;
          if (v32)
            goto LABEL_27;
        }
        v54 = 0;
        v30 = 1;
        v20 = v41;
      }
    }
LABEL_41:
    v29 = v49;
LABEL_42:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v29, v30, 1, v9);
    v33 = v29;
    v34 = v50;
    sub_1D25384CC(v33, v50, &qword_1ED9627C0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v34, 1, v9) == 1)
      break;
    v35 = v34;
    v36 = v47;
    sub_1D2539ADC(v35, v47, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    v48(&v56, v36);
    v37 = v56;
    sub_1D26B6EDC(v36);
    swift_bridgeObjectRelease();
    v38 = v37;
    v10 = v53;
    v19 = v54;
    if (v38)
    {
      v54 = v20;
      v21 = 0;
      if (v38 >= 0)
        v22 = v38 & 0xFFFFFFFFFFFFFF8;
      else
        v22 = v38;
      v42 = v22;
      v23 = v19;
      if (!((unint64_t)v38 >> 62))
      {
LABEL_10:
        if (v21 == *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_20;
        goto LABEL_11;
      }
      while (1)
      {
        swift_bridgeObjectRetain();
        v24 = sub_1D26CE1F0();
        swift_bridgeObjectRelease();
        if (v21 == v24)
          break;
LABEL_11:
        if ((v38 & 0xC000000000000001) != 0)
        {
          v25 = (id)MEMORY[0x1D8239890](v21, v38);
        }
        else
        {
          if (v21 >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_60:
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
            return;
          }
          v25 = *(id *)(v38 + 8 * v21 + 32);
        }
        v26 = v25;
        if (__OFADD__(v21, 1))
          goto LABEL_60;
        v56 = (uint64_t)v25;
        v27 = a1(&v56);
        if (v5)
        {

          sub_1D2592A28();
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }
        if ((v27 & 1) != 0)
        {
          sub_1D2592A28();
          swift_bridgeObjectRelease();
          swift_release();
          return;
        }

        ++v21;
        v19 = v23;
        if (!((unint64_t)v38 >> 62))
          goto LABEL_10;
      }
LABEL_20:
      a3 = v51;
      v9 = v43;
      v10 = v53;
      v20 = v54;
    }
  }
  sub_1D2592A28();
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_1D26AC340(uint64_t (*a1)(id *), uint64_t a2, uint64_t a3, void (*a4)(unint64_t *__return_ptr, char *), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  uint64_t v38;
  char v39;
  _QWORD v40[2];
  int64_t v41;
  uint64_t (*v42)(id *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  void (*v49)(unint64_t *__return_ptr, char *);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;

  v52 = a5;
  v49 = a4;
  v42 = a1;
  v43 = a2;
  v6 = type metadata accessor for ExtensionMetadata();
  v7 = *(_QWORD *)(v6 - 8);
  v50 = v6;
  v51 = v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v40 - v14;
  v16 = 0;
  v17 = 0;
  v18 = 0;
  v55 = MEMORY[0x1E0DEE9D8];
  v48 = a3;
  v21 = *(_QWORD *)(a3 + 64);
  v20 = a3 + 64;
  v19 = v21;
  v22 = -1;
  v23 = -1 << *(_BYTE *)(v20 - 32);
  v44 = ~v23;
  if (-v23 < 64)
    v22 = ~(-1 << -(char)v23);
  v24 = v22 & v19;
  v46 = v20;
  v47 = (unint64_t)(63 - v23) >> 6;
  v41 = v47 - 1;
  while (1)
  {
    while (v16)
    {
      if (v16 >> 62)
      {
        swift_bridgeObjectRetain();
        v34 = sub_1D26CE1F0();
        swift_bridgeObjectRelease();
        if (v17 == v34)
          break;
      }
      else if (v17 == *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        break;
      }
      if ((v16 & 0xC000000000000001) != 0)
      {
        v35 = (id)MEMORY[0x1D8239890](v17, v16);
      }
      else
      {
        if ((v17 & 0x8000000000000000) != 0)
          goto LABEL_53;
        if (v17 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_54;
        v35 = *(id *)(v16 + 8 * v17 + 32);
      }
      v36 = v35;
      if (__OFADD__(v17++, 1))
        goto LABEL_55;
      v54 = v35;
      v38 = v45;
      v39 = v42(&v54);
      v45 = v38;
      if (v38)
      {

        sub_1D2592A28();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        return;
      }
      if ((v39 & 1) != 0)
      {
        sub_1D26CE118();
        v40[1] = *(_QWORD *)(v55 + 16);
        sub_1D26CE148();
        sub_1D26CE154();
        sub_1D26CE124();
      }
      else
      {

      }
    }
    if (v24)
    {
      v25 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      v26 = v25 | (v18 << 6);
      v27 = v51;
LABEL_9:
      sub_1D2536F34(*(_QWORD *)(v48 + 56) + *(_QWORD *)(v27 + 72) * v26, (uint64_t)v15);
      v28 = 0;
      goto LABEL_27;
    }
    v29 = v18 + 1;
    v27 = v51;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    if (v29 >= v47)
      goto LABEL_26;
    v30 = *(_QWORD *)(v46 + 8 * v29);
    if (v30)
      goto LABEL_13;
    v18 += 2;
    if (v29 + 1 >= v47)
    {
      v24 = 0;
      v28 = 1;
      v18 = v29;
      goto LABEL_27;
    }
    v30 = *(_QWORD *)(v46 + 8 * v18);
    if (v30)
      goto LABEL_16;
    v31 = v29 + 2;
    if (v29 + 2 >= v47)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      goto LABEL_27;
    }
    v30 = *(_QWORD *)(v46 + 8 * v31);
    if (v30)
      goto LABEL_20;
    v18 = v29 + 3;
    if (v29 + 3 >= v47)
    {
      v24 = 0;
      v28 = 1;
      v18 = v29 + 2;
      goto LABEL_27;
    }
    v30 = *(_QWORD *)(v46 + 8 * v18);
    if (v30)
    {
LABEL_16:
      v29 = v18;
LABEL_13:
      v24 = (v30 - 1) & v30;
      v26 = __clz(__rbit64(v30)) + (v29 << 6);
      v18 = v29;
      goto LABEL_9;
    }
    if (v29 + 4 >= v47)
      goto LABEL_26;
    v30 = *(_QWORD *)(v46 + 8 * (v29 + 4));
    if (v30)
    {
      v29 += 4;
      goto LABEL_13;
    }
    v31 = v29 + 5;
    if (v29 + 5 < v47)
      break;
    v24 = 0;
    v28 = 1;
    v18 = v29 + 4;
LABEL_27:
    v32 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v15, v28, 1, v50);
    sub_1D25384CC((uint64_t)v15, (uint64_t)v13, &qword_1ED9627C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v13, 1, v32) == 1)
    {
      sub_1D2592A28();
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
    sub_1D2539ADC((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    v49(&v53, v9);
    v33 = v53;
    sub_1D26B6EDC((uint64_t)v9);
    swift_bridgeObjectRelease();
    v17 = 0;
    v16 = v33;
  }
  v30 = *(_QWORD *)(v46 + 8 * v31);
  if (v30)
  {
LABEL_20:
    v29 = v31;
    goto LABEL_13;
  }
  while (1)
  {
    v29 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v29 >= v47)
    {
      v24 = 0;
      v28 = 1;
      v18 = v41;
      goto LABEL_27;
    }
    v30 = *(_QWORD *)(v46 + 8 * v29);
    ++v31;
    if (v30)
      goto LABEL_13;
  }
LABEL_56:
  __break(1u);
}

uint64_t CHSBaseDescriptor.matches(localeData:)(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  id v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;

  v3 = v2;
  if (a2 >> 60 == 15)
  {
    v4 = objc_msgSend(v2, sel_localeToken);
    if (!v4)
      return 1;
    v5 = v4;
    v6 = sub_1D26CB8E0();
    v8 = v7;

    sub_1D253EE04(v6, v8);
  }
  else
  {
    sub_1D253FE08(a1, a2);
    sub_1D253FE08(a1, a2);
    v11 = objc_msgSend(v3, sel_localeToken);
    if (v11)
    {
      v12 = v11;
      v13 = sub_1D26CB8E0();
      v15 = v14;

      sub_1D2541ED0(a1, a2);
      sub_1D253FE08(v13, v15);
      sub_1D259E340(v13, v15);
      LOBYTE(v12) = v16;
      sub_1D2541EBC(a1, a2);
      sub_1D253EE04(v13, v15);
      sub_1D253EE04(v13, v15);
      sub_1D2541EBC(a1, a2);
      sub_1D2541EBC(a1, a2);
      return v12 & 1;
    }
    sub_1D2541EBC(0, 0xF000000000000000);
    sub_1D2541EBC(a1, a2);
    sub_1D2541EBC(a1, a2);
  }
  return 0;
}

uint64_t CHSBaseDescriptor.matches(locale:)(uint64_t a1, unint64_t a2)
{
  void *v2;
  void *v3;
  id v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  char v12;

  v3 = v2;
  v6 = objc_msgSend(v3, sel_localeToken);
  if (v6)
  {
    v7 = v6;
    v8 = sub_1D26CB8E0();
    v10 = v9;

    if (a2 >> 60 != 15)
    {
      sub_1D2541ED0(a1, a2);
      sub_1D253FE08(v8, v10);
      sub_1D259E340(v8, v10);
      v12 = v11;
      sub_1D2541EBC(a1, a2);
      sub_1D253EE04(v8, v10);
      sub_1D253EE04(v8, v10);
      return v12 & 1;
    }
  }
  else
  {
    if (a2 >> 60 == 15)
      return 1;
    v8 = 0;
    v10 = 0xF000000000000000;
  }
  sub_1D2541ED0(a1, a2);
  sub_1D2541EBC(v8, v10);
  sub_1D2541EBC(a1, a2);
  return 0;
}

uint64_t WidgetDescriptorCache.__allocating_init(backingStore:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  WidgetDescriptorCache.init(backingStore:)(a1);
  return v2;
}

_QWORD *WidgetDescriptorCache.init(backingStore:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v1[3] = 0;
  swift_unknownObjectWeakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963040);
  swift_allocObject();
  v1[5] = sub_1D26CC150();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963928);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9E0];
  v1[8] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963930);
  v4 = swift_allocObject();
  *(_DWORD *)(v4 + 24) = 0;
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9E8];
  v1[9] = v4;
  v1[4] = a1;
  v1[6] = sub_1D26ACB6C;
  v1[7] = 0;
  return v1;
}

uint64_t sub_1D26ACB6C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963998);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1D26D1280;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v7 + v6, a1, v4);
  v8 = _sSo8NSLocaleC9ChronoKitE18currentLocaleToken3forSDy0B8Services15TypedIdentifierVyAF0J4TypeO6BundleO9ContainerOGAC0eF10DescriptorVGSayAOG_tFZ_0(v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1D25C4AD0(a1, v8, a2);
  return swift_bridgeObjectRelease();
}

uint64_t WidgetDescriptorCache.deinit()
{
  uint64_t v0;

  sub_1D26B6E74(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t WidgetDescriptorCache.__deallocating_deinit()
{
  uint64_t v0;

  sub_1D26B6E74(v0 + 16);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t WidgetDescriptorCache.descriptorUpdatePublisher.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963040);
  sub_1D2536488(&qword_1ED963038, &qword_1ED963040, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t WidgetDescriptorCache.widgetDescriptors.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v2 = sub_1D26B50F4(*(_QWORD *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C898);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  return result;
}

uint64_t WidgetDescriptorCache.allDescriptors.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1D26ACE38((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1D26ACE38@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1D26B5340(*a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963188);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v3;
  *a2 = result;
  return result;
}

unint64_t WidgetDescriptorCache.allDescriptors(extensionIdentity:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v6;

  v3 = *(_QWORD *)(v1 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1D26ACF04((uint64_t *)(v3 + 16), a1, &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_1D26ACF04@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, unint64_t *a3@<X8>)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  unint64_t v15;
  char v16;
  uint64_t result;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v6 = (int *)type metadata accessor for ExtensionMetadata();
  v7 = *((_QWORD *)v6 - 1);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  if (*(_QWORD *)(v13 + 16))
  {
    v14 = a2;
    v15 = sub_1D25393D8((uint64_t)v14);
    if ((v16 & 1) != 0)
    {
      sub_1D2536F34(*(_QWORD *)(v13 + 56) + *(_QWORD *)(v7 + 72) * v15, (uint64_t)v12);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v7 + 56))(v12, 0, 1, v6);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, int *))(v7 + 56))(v12, 1, 1, v6);
    }

  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v7 + 56))(v12, 1, 1, v6);
  }
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(v12, 1, v6))
  {
    result = sub_1D253703C((uint64_t)v12, &qword_1ED9627C0);
    v18 = 0;
  }
  else
  {
    sub_1D2536F34((uint64_t)v12, (uint64_t)v9);
    sub_1D253703C((uint64_t)v12, &qword_1ED9627C0);
    v19 = *(_QWORD *)&v9[v6[6]];
    if (v19 >> 62)
    {
      sub_1D25CCBDC();
      swift_bridgeObjectRetain();
      v23 = sub_1D26CE1E4();
      swift_bridgeObjectRelease();
      v19 = v23;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D26CE3E8();
      sub_1D25CCBDC();
    }
    v20 = *(_QWORD *)&v9[v6[7]];
    if (v20 >> 62)
    {
      sub_1D25CCBDC();
      swift_bridgeObjectRetain();
      v24 = sub_1D26CE1E4();
      swift_bridgeObjectRelease();
      v20 = v24;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D26CE3E8();
      sub_1D25CCBDC();
    }
    v27 = v19;
    sub_1D25F6BB0(v20);
    v21 = v27;
    v22 = *(_QWORD *)&v9[v6[9]];
    if (v22 >> 62)
    {
      sub_1D25CCBDC();
      swift_bridgeObjectRetain();
      v25 = sub_1D26CE1E4();
      swift_bridgeObjectRelease();
      v22 = v25;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D26CE3E8();
      sub_1D25CCBDC();
    }
    v27 = v21;
    sub_1D25F6BB0(v22);
    v18 = v27;
    result = sub_1D26B6EDC((uint64_t)v9);
  }
  *a3 = v18;
  return result;
}

uint64_t WidgetDescriptorCache.controlDescriptorsByExtensionIdentity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v2 = sub_1D26B56F0(*(_QWORD *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  return v2;
}

uint64_t sub_1D26AD254@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D26B56F0(*a1);
  *a2 = result;
  return result;
}

uint64_t WidgetDescriptorCache.controlDescriptors(containedBy:)(uint64_t a1)
{
  return sub_1D26AD91C(a1, sub_1D26B8EBC, (void (*)(unint64_t *__return_ptr, char *))sub_1D26AD290);
}

uint64_t sub_1D26AD290@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ExtensionMetadata() + 28));
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDescriptorCache.controlDescriptors.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v2 = sub_1D26B56F0(*(_QWORD *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963180);
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = v2;
  return result;
}

uint64_t WidgetDescriptorCache.activityDescriptorsByExtensionIdentity.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v2 = sub_1D26B593C(*(_QWORD *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  return v2;
}

uint64_t sub_1D26AD3A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1D26B593C(*a1);
  *a2 = result;
  return result;
}

void WidgetDescriptorCache.activityDescriptor(targeting:)(void **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = sub_1D26CBAF0();
  v26 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - v10;
  v12 = *a1;
  v13 = *(_QWORD *)(v1 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
  sub_1D26AD6A8((uint64_t *)(v13 + 16), v12, (uint64_t)v11);
  if (v2)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
    swift_release();
    sub_1D2537078((uint64_t)v11, (uint64_t)v9, &qword_1ED9627C0);
    v14 = type metadata accessor for ExtensionMetadata();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v9, 1, v14) == 1)
    {
      sub_1D253703C((uint64_t)v9, &qword_1ED9627C0);
      sub_1D26B6E98();
      swift_allocError();
      *(_QWORD *)v15 = v12;
      *(_BYTE *)(v15 + 8) = 0;
      v16 = v12;
      swift_willThrow();
      sub_1D253703C((uint64_t)v11, &qword_1ED9627C0);
    }
    else
    {
      v17 = *(_QWORD *)&v9[*(int *)(v14 + 36)];
      swift_bridgeObjectRetain();
      sub_1D26B6EDC((uint64_t)v9);
      v18 = type metadata accessor for ActivityKey(0);
      v19 = v26;
      v20 = v27;
      v21 = (*(uint64_t (**)(char *, char *, uint64_t))(v26 + 16))(v5, (char *)a1 + *(int *)(v18 + 20), v27);
      MEMORY[0x1E0C80A78](v21);
      *(&v25 - 2) = (uint64_t)v5;
      v22 = sub_1D26ABD18((uint64_t (*)(id *))sub_1D26B6F18, (uint64_t)(&v25 - 4), v17);
      swift_bridgeObjectRelease();
      if (!v22)
      {
        sub_1D26B6E98();
        swift_allocError();
        *(_QWORD *)v23 = v12;
        *(_BYTE *)(v23 + 8) = 1;
        v24 = v12;
        swift_willThrow();
      }
      sub_1D253703C((uint64_t)v11, &qword_1ED9627C0);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v20);
    }
  }
}

void sub_1D26AD6A8(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  id v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    v5 = a2;
    v6 = sub_1D25393D8((uint64_t)v5);
    if ((v7 & 1) != 0)
    {
      v8 = v6;
      v9 = *(_QWORD *)(v4 + 56);
      v10 = type metadata accessor for ExtensionMetadata();
      v11 = *(_QWORD *)(v10 - 8);
      sub_1D2536F34(v9 + *(_QWORD *)(v11 + 72) * v8, a3);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v11 + 56))(a3, 0, 1, v10);
    }
    else
    {
      v13 = type metadata accessor for ExtensionMetadata();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 1, 1, v13);
    }

  }
  else
  {
    v12 = type metadata accessor for ExtensionMetadata();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 1, v12);
  }
}

id sub_1D26AD790(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id result;
  void *v7;
  char v8;
  uint64_t v9;

  v2 = sub_1D26CBAF0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = objc_msgSend(*a1, sel_activityAttributesType);
  if (result)
  {
    v7 = result;
    sub_1D25369B0(qword_1ED962890, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F828]);
    sub_1D26CBB8C();

    v8 = sub_1D26CBAE4();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (id)(v8 & 1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void CHSSessionPlatterDescriptor.activityAttributes.getter()
{
  void *v0;
  id v1;

  v1 = objc_msgSend(v0, sel_activityAttributesType);
  if (v1)
  {
    sub_1D26CBAF0();
    sub_1D25369B0(qword_1ED962890, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F828]);
    sub_1D26CBB8C();

  }
  else
  {
    __break(1u);
  }
}

uint64_t WidgetDescriptorCache.activityDescriptors(containedBy:)(uint64_t a1)
{
  return sub_1D26AD91C(a1, sub_1D26B8EDC, (void (*)(unint64_t *__return_ptr, char *))sub_1D26AD9B4);
}

uint64_t sub_1D26AD91C(uint64_t a1, uint64_t (*a2)(id *), void (*a3)(unint64_t *__return_ptr, char *))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v12[16];
  uint64_t v13;

  v7 = *(_QWORD *)(v3 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  v8 = *(_QWORD *)(v7 + 16);
  v13 = a1;
  swift_bridgeObjectRetain();
  sub_1D26AC340(a2, (uint64_t)v12, v8, a3, 0);
  v10 = v9;
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  swift_release();
  return v10;
}

uint64_t sub_1D26AD9B8(id *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t);
  int v21;
  uint64_t *v22;
  char v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v28 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962940);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  v10 = MEMORY[0x1E0C80A78](v9);
  v29 = (uint64_t)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v28 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v28 - v15;
  v17 = objc_msgSend(*a1, sel_extensionIdentity);
  v18 = (uint64_t)v17 + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  sub_1D2537078(v18, (uint64_t)v16, &qword_1ED963300);

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v14, v30, v3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  v19 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_1D2537078((uint64_t)v16, (uint64_t)v8, &qword_1ED963300);
  sub_1D2537078((uint64_t)v14, v19, &qword_1ED963300);
  v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v8, 1, v3) == 1)
  {
    sub_1D253703C((uint64_t)v14, &qword_1ED963300);
    sub_1D253703C((uint64_t)v16, &qword_1ED963300);
    v21 = v20(v19, 1, v3);
    if (v21 == 1)
      v22 = &qword_1ED963300;
    else
      v22 = (uint64_t *)&unk_1ED962940;
    if (v21 == 1)
      v23 = -1;
    else
      v23 = 0;
  }
  else
  {
    v24 = v29;
    sub_1D2537078((uint64_t)v8, v29, &qword_1ED963300);
    if (v20(v19, 1, v3) == 1)
    {
      sub_1D253703C((uint64_t)v14, &qword_1ED963300);
      sub_1D253703C((uint64_t)v16, &qword_1ED963300);
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v24, v3);
      v23 = 0;
      v22 = (uint64_t *)&unk_1ED962940;
    }
    else
    {
      v25 = v28;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v28, v19, v3);
      sub_1D2536488((unint64_t *)&qword_1ED9632F0, &qword_1ED9632F8, MEMORY[0x1E0D0F980]);
      v23 = sub_1D26CD908();
      v26 = *(void (**)(char *, uint64_t))(v4 + 8);
      v26(v25, v3);
      v22 = &qword_1ED963300;
      sub_1D253703C((uint64_t)v14, &qword_1ED963300);
      sub_1D253703C((uint64_t)v16, &qword_1ED963300);
      v26((char *)v24, v3);
    }
  }
  sub_1D253703C((uint64_t)v8, v22);
  return v23 & 1;
}

uint64_t WidgetDescriptorCache.activityDescriptor(for:containedBy:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *(_QWORD *)(v2 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1D26ADD8C((uint64_t *)(v5 + 16), a1, a2, &v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  v6 = v8;
  swift_release();
  return v6;
}

uint64_t sub_1D26ADD8C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t);
  NSObject *v17;
  os_log_type_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  os_log_t v34;
  int v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v40 = a4;
  v37 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D26CBAF0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED9633F0 != -1)
    swift_once();
  v14 = sub_1D26CC09C();
  __swift_project_value_buffer(v14, (uint64_t)qword_1ED977DE8);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v39 = a2;
  v15(v13, a2, v10);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v38 = a3;
  v16(v9, a3, v6);
  v17 = sub_1D26CC084();
  v18 = sub_1D26CDCE0();
  v19 = v18;
  v20 = v7;
  if (os_log_type_enabled(v17, v18))
  {
    v21 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v42 = v36;
    *(_DWORD *)v21 = 136446466;
    v35 = v19;
    sub_1D25369B0(&qword_1ED962FE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F850]);
    v34 = v17;
    v22 = sub_1D26CE370();
    v41 = sub_1D2537880(v22, v23, &v42);
    v33 = v20;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    *(_WORD *)(v21 + 12) = 2082;
    sub_1D2536488(&qword_1EFC83868, &qword_1ED9632F8, MEMORY[0x1E0D0F998]);
    v24 = sub_1D26CE370();
    v41 = sub_1D2537880(v24, v25, &v42);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v6);
    v17 = v34;
    _os_log_impl(&dword_1D2531000, v34, (os_log_type_t)v35, "Descriptor Searching for %{public}s from \"%{public}s\"", (uint8_t *)v21, 0x16u);
    v26 = v36;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v26, -1, -1);
    MEMORY[0x1D823A5E0](v21, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }

  v27 = *v37;
  MEMORY[0x1E0C80A78](v28);
  v29 = v39;
  *(&v33 - 2) = v38;
  *(&v33 - 1) = v29;
  swift_bridgeObjectRetain();
  sub_1D26ABE38((uint64_t (*)(uint64_t *))sub_1D26B8EA0, (uint64_t)(&v33 - 4), v27, (void (*)(uint64_t *__return_ptr, uint64_t))sub_1D26AD9B4, 0);
  v31 = v30;
  result = swift_bridgeObjectRelease();
  *v40 = v31;
  return result;
}

uint64_t sub_1D26AE118@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for ExtensionMetadata() + 36));
  return swift_bridgeObjectRetain();
}

id sub_1D26AE14C(id *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char v24;
  char *v25;
  char v26;
  void (*v27)(char *, uint64_t);
  id result;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a3;
  v40 = a2;
  v37 = sub_1D26CBAF0();
  v35 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v34 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962940);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  v12 = MEMORY[0x1E0C80A78](v11);
  v39 = (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v32 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v32 - v17;
  v38 = *a1;
  v19 = objc_msgSend(v38, sel_extensionIdentity);
  v20 = (uint64_t)v19 + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  sub_1D2537078(v20, (uint64_t)v18, &qword_1ED963300);

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v16, v40, v5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
  v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1D2537078((uint64_t)v18, (uint64_t)v10, &qword_1ED963300);
  sub_1D2537078((uint64_t)v16, v21, &qword_1ED963300);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (v22((uint64_t)v10, 1, v5) == 1)
  {
    sub_1D253703C((uint64_t)v16, &qword_1ED963300);
    sub_1D253703C((uint64_t)v18, &qword_1ED963300);
    if (v22(v21, 1, v5) == 1)
    {
      sub_1D253703C((uint64_t)v10, &qword_1ED963300);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  v23 = v39;
  sub_1D2537078((uint64_t)v10, v39, &qword_1ED963300);
  if (v22(v21, 1, v5) == 1)
  {
    sub_1D253703C((uint64_t)v16, &qword_1ED963300);
    sub_1D253703C((uint64_t)v18, &qword_1ED963300);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v23, v5);
LABEL_6:
    sub_1D253703C((uint64_t)v10, (uint64_t *)&unk_1ED962940);
LABEL_7:
    v24 = 0;
    return (id)(v24 & 1);
  }
  v25 = v33;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v33, v21, v5);
  sub_1D2536488((unint64_t *)&qword_1ED9632F0, &qword_1ED9632F8, MEMORY[0x1E0D0F980]);
  v26 = sub_1D26CD908();
  v27 = *(void (**)(char *, uint64_t))(v6 + 8);
  v27(v25, v5);
  sub_1D253703C((uint64_t)v16, &qword_1ED963300);
  sub_1D253703C((uint64_t)v18, &qword_1ED963300);
  v27((char *)v23, v5);
  sub_1D253703C((uint64_t)v10, &qword_1ED963300);
  if ((v26 & 1) == 0)
    goto LABEL_7;
LABEL_9:
  result = objc_msgSend(v38, sel_activityAttributesType);
  if (result)
  {
    v29 = result;
    sub_1D25369B0(qword_1ED962890, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F828]);
    v30 = v34;
    v31 = v37;
    sub_1D26CBB8C();

    v24 = sub_1D26CBAE4();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v30, v31);
    return (id)(v24 & 1);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D26AE580()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963040);
  sub_1D2536488(&qword_1ED963038, &qword_1ED963040, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t sub_1D26AE5F0()
{
  return WidgetDescriptorCache.widgetDescriptors.getter();
}

uint64_t sub_1D26AE610(uint64_t a1, uint64_t a2)
{
  return WidgetDescriptorCache.initialize(with:)(a1, a2);
}

uint64_t WidgetDescriptorCache.initialize(with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void (*v29)(char *, char *, uint64_t);
  int isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  _BOOL8 v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  id v58;
  int v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  NSObject *v76;
  os_log_type_t v77;
  uint8_t *v78;
  uint64_t *v79;
  int64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  uint64_t v91;
  os_unfair_lock_s *v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t result;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t *v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;

  v5 = type metadata accessor for ExtensionMetadata();
  v102 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v104 = (uint64_t)&v97 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v107 = (uint64_t)&v97 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v108 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v105 = (char *)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v97 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v97 - v15;
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  v103 = v2;
  v17 = sub_1D26B05E0();
  swift_unknownObjectRetain();
  v101 = v17;
  v18 = 0;
  v19 = sub_1D26B708C(v17, a1, a2);
  swift_unknownObjectRelease();
  v20 = (uint64_t *)sub_1D253E9D4(MEMORY[0x1E0DEE9D8]);
  v21 = v19[2];
  v106 = v9;
  if (v21)
  {
    v98 = 0;
    v99 = a2;
    v100 = a1;
    v22 = v19 + 4;
    v97 = v19;
    swift_bridgeObjectRetain();
    v23 = v108;
    while (1)
    {
      v26 = v22[3];
      v27 = v22[4];
      __swift_project_boxed_opaque_existential_0(v22, v26);
      v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 40))(v26, v27);
      sub_1D26CDE48();

      v29 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
      v29(v14, v16, v9);
      sub_1D2538510((uint64_t)v22, (uint64_t)&v111);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v110 = v20;
      v32 = sub_1D25363D0((uint64_t)v14);
      v33 = v20[2];
      v34 = (v31 & 1) == 0;
      v35 = v33 + v34;
      if (__OFADD__(v33, v34))
        break;
      v36 = v31;
      if (v20[3] >= v35)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1D2671170();
      }
      else
      {
        sub_1D26682A8(v35, isUniquelyReferenced_nonNull_native);
        v37 = sub_1D25363D0((uint64_t)v14);
        if ((v36 & 1) != (v38 & 1))
        {
          sub_1D26CE424();
          __break(1u);
LABEL_56:
          sub_1D26CDE54();
          result = sub_1D26CE424();
          __break(1u);
          return result;
        }
        v32 = v37;
      }
      v9 = v106;
      v20 = v110;
      if ((v36 & 1) != 0)
      {
        v24 = v110[7] + 40 * v32;
        __swift_destroy_boxed_opaque_existential_1(v24);
        sub_1D2538F38(&v111, v24);
      }
      else
      {
        v110[(v32 >> 6) + 8] |= 1 << v32;
        v29((char *)(v20[6] + *(_QWORD *)(v108 + 72) * v32), v14, v9);
        sub_1D2538F38(&v111, v20[7] + 40 * v32);
        v39 = v20[2];
        v40 = __OFADD__(v39, 1);
        v41 = v39 + 1;
        if (v40)
          goto LABEL_52;
        v20[2] = v41;
      }
      swift_bridgeObjectRelease();
      v23 = v108;
      v25 = *(void (**)(char *, uint64_t))(v108 + 8);
      v25(v14, v9);
      v25(v16, v9);
      v22 += 5;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        a2 = v99;
        a1 = v100;
        v18 = v98;
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
LABEL_15:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v42 = v101;
  v43 = swift_bridgeObjectRetain();
  v44 = sub_1D26B7218(v43, (uint64_t)v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v45 = sub_1D26B7410(v42, (uint64_t)v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v110 = (uint64_t *)v45;
  v46 = MEMORY[0x1E0DEE9D8];
  v109 = MEMORY[0x1E0DEE9D8];
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v47 = sub_1D26B6F34(v44, a1, a2, v20, &v109);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v48 = sub_1D26B7F84(v47);
  swift_bridgeObjectRetain();
  v49 = sub_1D26B7608(v47, (uint64_t)v48);
  v101 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D25F6D90((uint64_t)v48);
  v100 = v109;
  swift_bridgeObjectRetain();
  v16 = (char *)sub_1D253E844(v46);
  v50 = *(_QWORD *)(v49 + 16);
  if (v50)
  {
    v51 = v49 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
    v52 = *(_QWORD *)(v102 + 72);
    v99 = v49;
    swift_bridgeObjectRetain();
    while (1)
    {
      if (!v20[2])
        goto LABEL_49;
      v53 = sub_1D25363D0(v51);
      if ((v54 & 1) == 0)
        goto LABEL_50;
      sub_1D2538510(v20[7] + 40 * v53, (uint64_t)&v111);
      v55 = v112;
      v56 = v113;
      __swift_project_boxed_opaque_existential_0(&v111, v112);
      v57 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v56 + 40))(v55, v56);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
      sub_1D2536F34(v51, v107);
      v58 = v57;
      v59 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v111 = v16;
      v61 = sub_1D25393D8((uint64_t)v58);
      v62 = *((_QWORD *)v16 + 2);
      v63 = (v60 & 1) == 0;
      v64 = v62 + v63;
      if (__OFADD__(v62, v63))
        goto LABEL_51;
      v65 = v60;
      if (*((_QWORD *)v16 + 3) >= v64)
      {
        if ((v59 & 1) != 0)
        {
          v16 = (char *)v111;
          if ((v60 & 1) == 0)
            goto LABEL_28;
        }
        else
        {
          sub_1D26727AC();
          v16 = (char *)v111;
          if ((v65 & 1) == 0)
            goto LABEL_28;
        }
      }
      else
      {
        sub_1D266A598(v64, v59);
        v66 = sub_1D25393D8((uint64_t)v58);
        if ((v65 & 1) != (v67 & 1))
          goto LABEL_56;
        v61 = v66;
        v16 = (char *)v111;
        if ((v65 & 1) == 0)
        {
LABEL_28:
          *(_QWORD *)&v16[8 * (v61 >> 6) + 64] |= 1 << v61;
          *(_QWORD *)(*((_QWORD *)v16 + 6) + 8 * v61) = v58;
          sub_1D2539ADC(v107, *((_QWORD *)v16 + 7) + v61 * v52, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
          v68 = *((_QWORD *)v16 + 2);
          v40 = __OFADD__(v68, 1);
          v69 = v68 + 1;
          if (v40)
            goto LABEL_53;
          *((_QWORD *)v16 + 2) = v69;
          v70 = v58;
          goto LABEL_18;
        }
      }
      sub_1D26B8768(v107, *((_QWORD *)v16 + 7) + v61 * v52);
LABEL_18:

      swift_bridgeObjectRelease();
      v51 += v52;
      if (!--v50)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v71 = v103;
  v72 = *(_QWORD *)(v103 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v72 + 24));
  v73 = v101;
  sub_1D26B0DA0((_QWORD *)(v72 + 16), (uint64_t)v16);
  v107 = v73;
  os_unfair_lock_unlock((os_unfair_lock_t)(v72 + 24));
  swift_release();
  v74 = v100;
  swift_bridgeObjectRetain();
  sub_1D26B856C(v71, v74, (void (*)(unint64_t, unint64_t, uint64_t, uint64_t))sub_1D26730A4);
  swift_bridgeObjectRelease_n();
  if (v110[2])
  {
    if (qword_1ED962330 == -1)
    {
LABEL_35:
      v75 = sub_1D26CC09C();
      __swift_project_value_buffer(v75, (uint64_t)qword_1ED977D20);
      v76 = sub_1D26CC084();
      v77 = sub_1D26CDD04();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v78 = 0;
        _os_log_impl(&dword_1D2531000, v76, v77, "Clearing abandoned extensions...", v78, 2u);
        MEMORY[0x1D823A5E0](v78, -1, -1);
      }

      v79 = v110;
      v80 = v110[2];
      v81 = MEMORY[0x1E0DEE9D8];
      if (v80)
      {
        *(_QWORD *)&v111 = MEMORY[0x1E0DEE9D8];
        swift_bridgeObjectRetain();
        sub_1D2584400(0, v80, 0);
        v82 = (uint64_t)v79
            + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
        v83 = *(_QWORD *)(v102 + 72);
        v81 = v111;
        v85 = v105;
        v84 = v106;
        v86 = v108;
        do
        {
          v87 = v104;
          sub_1D2536F34(v82, v104);
          (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v85, v87, v84);
          sub_1D26B6EDC(v87);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D2584400(0, *(_QWORD *)(v81 + 16) + 1, 1);
            v81 = v111;
          }
          v89 = *(_QWORD *)(v81 + 16);
          v88 = *(_QWORD *)(v81 + 24);
          if (v89 >= v88 >> 1)
          {
            sub_1D2584400(v88 > 1, v89 + 1, 1);
            v81 = v111;
          }
          *(_QWORD *)(v81 + 16) = v89 + 1;
          v86 = v108;
          v90 = v81
              + ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))
              + *(_QWORD *)(v108 + 72) * v89;
          v85 = v105;
          v84 = v106;
          (*(void (**)(unint64_t, char *, uint64_t))(v108 + 32))(v90, v105, v106);
          v82 += v83;
          --v80;
        }
        while (v80);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v91 = v103;
      v92 = *(os_unfair_lock_s **)(v103 + 72);
      swift_retain();
      os_unfair_lock_lock(v92 + 6);
      sub_1D26B4728((uint64_t)&v92[4], v81);
      os_unfair_lock_unlock(v92 + 6);
      swift_release();
      swift_bridgeObjectRetain();
      sub_1D26B856C(v91, v81, (void (*)(unint64_t, unint64_t, uint64_t, uint64_t))sub_1D2672F28);
      swift_bridgeObjectRelease();
      v93 = *(_QWORD *)(v91 + 64);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v93 + 24));
      sub_1D26B4B90((uint64_t *)(v93 + 16), v81);
      os_unfair_lock_unlock((os_unfair_lock_t)(v93 + 24));
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_47;
    }
LABEL_54:
    swift_once();
    goto LABEL_35;
  }
  swift_bridgeObjectRelease();
LABEL_47:
  v94 = sub_1D2591538((uint64_t)v16);
  swift_bridgeObjectRelease();
  v95 = sub_1D25F5A50((uint64_t)&unk_1E93D3008);
  swift_arrayDestroy();
  *(_QWORD *)&v111 = v94;
  *((_QWORD *)&v111 + 1) = v95;
  sub_1D26CC138();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26AF014(uint64_t a1, __int128 *a2, void (*a3)(uint64_t), uint64_t a4)
{
  return WidgetDescriptorCache.populate(for:reason:completion:)(a1, a2, a3, a4);
}

uint64_t WidgetDescriptorCache.populate(for:reason:completion:)(uint64_t result, __int128 *a2, void (*a3)(uint64_t), uint64_t a4)
{
  NSObject *v4;
  Class isa;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t);
  __int128 v30;
  uint64_t v31[3];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (*(_QWORD *)(result + 16))
  {
    v30 = *a2;
    v36 = MEMORY[0x1E0DEE9E0];
    isa = v4[8].isa;
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)isa + 6);
    swift_retain();
    v8 = swift_bridgeObjectRetain();
    v9 = sub_1D26B7998(v8, (uint64_t *)isa + 2, &v36, v4);
    swift_release();
    os_unfair_lock_unlock((os_unfair_lock_t)isa + 6);
    swift_release();
    if (*(_QWORD *)(v9 + 16))
    {
      if (qword_1ED9633D8 != -1)
        swift_once();
      v10 = sub_1D26CC09C();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED977E78);
      swift_bridgeObjectRetain_n();
      v11 = sub_1D26CC084();
      v12 = sub_1D26CDD04();
      if (os_log_type_enabled(v11, v12))
      {
        v29 = a3;
        v13 = (uint8_t *)swift_slowAlloc();
        v28 = swift_slowAlloc();
        v35 = v28;
        *(_DWORD *)v13 = 136446210;
        v14 = *(_QWORD *)(v9 + 16);
        v15 = MEMORY[0x1E0DEE9D8];
        if (v14)
        {
          v27 = a4;
          v34 = MEMORY[0x1E0DEE9D8];
          sub_1D26CE13C();
          v16 = v9 + 32;
          do
          {
            sub_1D2538510(v16, (uint64_t)v31);
            v17 = v32;
            v18 = v33;
            __swift_project_boxed_opaque_existential_0(v31, v32);
            (*(void (**)(uint64_t, uint64_t))(v18 + 40))(v17, v18);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
            sub_1D26CE118();
            sub_1D26CE148();
            sub_1D26CE154();
            sub_1D26CE124();
            v16 += 40;
            --v14;
          }
          while (v14);
          v15 = v34;
          a4 = v27;
        }
        v19 = sub_1D26CDE54();
        v20 = MEMORY[0x1D82392C0](v15, v19);
        v22 = v21;
        swift_bridgeObjectRelease();
        v31[0] = sub_1D2537880(v20, v22, &v35);
        sub_1D26CDF50();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v11, v12, "Refetching descriptors due to mismatching versions or locales: %{public}s", v13, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v28, -1, -1);
        MEMORY[0x1D823A5E0](v13, -1, -1);

        a3 = v29;
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      *(_OWORD *)v31 = v30;
      sub_1D26B35AC(v9, v31, a3, a4);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1ED962330 != -1)
        swift_once();
      v23 = sub_1D26CC09C();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED977D20);
      v24 = sub_1D26CC084();
      v25 = sub_1D26CDD04();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v26 = 0;
        _os_log_impl(&dword_1D2531000, v24, v25, "No updates required - descriptors are up to date", v26, 2u);
        MEMORY[0x1D823A5E0](v26, -1, -1);
      }

    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1D26AF41C(Swift::OpaquePointer a1)
{
  WidgetDescriptorCache.refetch(for:)(a1);
}

Swift::Void __swiftcall WidgetDescriptorCache.refetch(for:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t ObjectType;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t);
  NSObject *v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  if (*((_QWORD *)a1._rawValue + 2))
  {
    v2 = v1;
    if (qword_1ED962330 != -1)
      swift_once();
    v4 = sub_1D26CC09C();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED977D20);
    swift_bridgeObjectRetain_n();
    v5 = sub_1D26CC084();
    v6 = sub_1D26CDD04();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      *(_QWORD *)&v35 = v8;
      *(_DWORD *)v7 = 136446210;
      swift_bridgeObjectRetain();
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
      v10 = MEMORY[0x1D82392C0](a1._rawValue, v9);
      v12 = v11;
      swift_bridgeObjectRelease();
      sub_1D2537880(v10, v12, (uint64_t *)&v35);
      sub_1D26CDF50();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v5, v6, "Refetching extensions: %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v8, -1, -1);
      MEMORY[0x1D823A5E0](v7, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v13 = *(_QWORD *)(v2 + 72);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v13 + 24));
    sub_1D26B3B30((uint64_t *)(v13 + 16), (uint64_t *)&v35);
    os_unfair_lock_unlock((os_unfair_lock_t)(v13 + 24));
    v14 = v35;
    swift_release();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = v14 + 32;
      v17 = v2 + 16;
      swift_bridgeObjectRetain();
      v34 = v2;
      do
      {
        sub_1D2538510(v16, (uint64_t)&v35);
        v18 = sub_1D26CC084();
        v19 = sub_1D26CDD04();
        if (os_log_type_enabled(v18, v19))
        {
          v20 = swift_slowAlloc();
          v21 = v17;
          v22 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v20 = 138543362;
          v23 = v36;
          v24 = v37;
          __swift_project_boxed_opaque_existential_0(&v35, v36);
          v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
          *(_QWORD *)(v20 + 4) = v25;
          *v22 = v25;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
          _os_log_impl(&dword_1D2531000, v18, v19, "Requesting descriptor fetch for %{public}@", (uint8_t *)v20, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
          swift_arrayDestroy();
          v26 = v22;
          v17 = v21;
          v2 = v34;
          MEMORY[0x1D823A5E0](v26, -1, -1);
          MEMORY[0x1D823A5E0](v20, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v35);
        }

        if (MEMORY[0x1D823A688](v17))
        {
          v27 = *(_QWORD *)(v2 + 24);
          ObjectType = swift_getObjectType();
          sub_1D2538510(v16, (uint64_t)&v35);
          v29 = swift_allocObject();
          *(_QWORD *)(v29 + 16) = v2;
          sub_1D2538F38(&v35, v29 + 24);
          *(_OWORD *)(v29 + 64) = xmmword_1D26DC460;
          *(_QWORD *)(v29 + 80) = 0;
          *(_QWORD *)(v29 + 88) = 0;
          v30 = *(void (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v27 + 24);
          swift_retain();
          v30(v16, sub_1D26B87B0, v29, ObjectType, v27);
          swift_release();
          swift_unknownObjectRelease();
        }
        v16 += 40;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      v31 = sub_1D26CC084();
      v32 = sub_1D26CDD04();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v33 = 0;
        _os_log_impl(&dword_1D2531000, v31, v32, "No descriptors to load because they were filtered.", v33, 2u);
        MEMORY[0x1D823A5E0](v33, -1, -1);
      }

    }
  }
}

BOOL sub_1D26AF8E4()
{
  uint64_t v0;
  uint64_t v1;
  _BOOL8 v2;
  BOOL v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1D26B8AB4((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  v2 = v4;
  swift_release();
  return v2;
}

BOOL WidgetDescriptorCache.hasAnyVersionCached(extension:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  _BOOL8 v4;
  BOOL v6;

  v3 = *(_QWORD *)(v1 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1D26B39D0((uint64_t *)(v3 + 16), a1, &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  v4 = v6;
  swift_release();
  return v4;
}

void sub_1D26AF9D0(Swift::OpaquePointer a1)
{
  WidgetDescriptorCache.clear(for:)(a1);
}

Swift::Void __swiftcall WidgetDescriptorCache.clear(for:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *((_QWORD *)a1._rawValue + 2);
  if (v7)
  {
    v22 = v1;
    v8 = MEMORY[0x1E0DEE9D8];
    v26 = MEMORY[0x1E0DEE9D8];
    v9 = (char *)a1._rawValue + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1D2538510((uint64_t)v9, (uint64_t)v23);
      v10 = v24;
      v11 = v25;
      __swift_project_boxed_opaque_existential_0(v23, v24);
      (*(void (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
      MEMORY[0x1D8239290]();
      if (*(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D26CDB30();
      sub_1D26CDB54();
      sub_1D26CDB0C();
      v12 = v24;
      v13 = v25;
      __swift_project_boxed_opaque_existential_0(v23, v24);
      v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
      sub_1D26CDE48();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v8 = sub_1D25625B4(0, *(_QWORD *)(v8 + 16) + 1, 1, v8);
      v16 = *(_QWORD *)(v8 + 16);
      v15 = *(_QWORD *)(v8 + 24);
      if (v16 >= v15 >> 1)
        v8 = sub_1D25625B4(v15 > 1, v16 + 1, 1, v8);
      *(_QWORD *)(v8 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v16, v6, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
      v9 += 40;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v17 = v22;
    v18 = *(os_unfair_lock_s **)(v22 + 72);
    swift_retain();
    os_unfair_lock_lock(v18 + 6);
    sub_1D26B4728((uint64_t)&v18[4], v8);
    os_unfair_lock_unlock(v18 + 6);
    swift_release();
    swift_bridgeObjectRetain();
    sub_1D26B856C(v17, v8, (void (*)(unint64_t, unint64_t, uint64_t, uint64_t))sub_1D2672F28);
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v17 + 64);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v19 + 24));
    sub_1D26B4B90((uint64_t *)(v19 + 16), v8);
    os_unfair_lock_unlock((os_unfair_lock_t)(v19 + 24));
    swift_bridgeObjectRelease();
    swift_release();
    v20 = v26;
    v21 = sub_1D25F5A50((uint64_t)&unk_1E93D3038);
    swift_arrayDestroy();
    v23[0] = v20;
    v23[1] = v21;
    sub_1D26CC138();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D26AFCE8(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  return WidgetDescriptorCache.fillCache(for:descriptors:controlDescriptors:activityDescriptors:reason:)(a1, a2, a3, a4, a5);
}

uint64_t WidgetDescriptorCache.fillCache(for:descriptors:controlDescriptors:activityDescriptors:reason:)(_QWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t inited;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];

  v52 = a3;
  v51 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v49 = *(_QWORD *)(v8 - 8);
  v50 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (int *)type metadata accessor for ExtensionMetadata();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *a5;
  v47 = a5[1];
  v48 = v14;
  v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D016F8]), sel_init);
  v16 = v15;
  if (v15)
  {
    v17 = objc_msgSend(v15, sel_stringRepresentation);

    v16 = (void *)sub_1D26CD938();
    v19 = v18;

  }
  else
  {
    v19 = 0xE000000000000000;
  }
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v20);
  v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 40))(v20, v21);
  sub_1D26CDE48();

  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v23);
  v25 = sub_1D2534BC4(v23, v24);
  v27 = v26;
  v28 = &v13[v11[8]];
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v13, v10, v50);
  v29 = (uint64_t *)&v13[v11[5]];
  *v29 = v25;
  v29[1] = v27;
  *(_QWORD *)v28 = v16;
  *((_QWORD *)v28 + 1) = v19;
  v30 = v52;
  *(_QWORD *)&v13[v11[6]] = v51;
  v31 = v11[9];
  *(_QWORD *)&v13[v11[7]] = v30;
  *(_QWORD *)&v13[v31] = a4;
  v32 = qword_1ED9633F0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v32 != -1)
    swift_once();
  v33 = sub_1D26CC09C();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED977DE8);
  swift_bridgeObjectRetain_n();
  v34 = sub_1D26CC084();
  v35 = sub_1D26CDD04();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v36 = 134217984;
    if (a4 >> 62)
    {
      swift_bridgeObjectRetain();
      v37 = sub_1D26CE1F0();
      swift_bridgeObjectRelease();
    }
    else
    {
      v37 = *(_QWORD *)((a4 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v54[0] = v37;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v34, v35, "Filling descriptor cache with %ld activity descriptors", v36, 0xCu);
    MEMORY[0x1D823A5E0](v36, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v38 = v53;
  v39 = *(_QWORD *)(v53 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v39 + 24));
  sub_1D26B3F74((uint64_t *)(v39 + 16), a1, (uint64_t)v13, v38, v54);
  os_unfair_lock_unlock((os_unfair_lock_t)(v39 + 24));
  v40 = v54[0];
  swift_release();
  if (v40 >> 62)
  {
    swift_bridgeObjectRetain();
    v46 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (!v46)
      goto LABEL_14;
    goto LABEL_13;
  }
  if (*(_QWORD *)((v40 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_13:
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963258);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D26D1280;
    v43 = v47;
    v42 = v48;
    *(_QWORD *)(inited + 32) = v48;
    *(_QWORD *)(inited + 40) = v43;
    sub_1D25F5E14(v42, v43);
    v44 = sub_1D25F5A50(inited);
    swift_setDeallocating();
    swift_arrayDestroy();
    v54[0] = v40;
    v54[1] = v44;
    sub_1D26CC138();
    swift_bridgeObjectRelease();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return sub_1D26B6EDC((uint64_t)v13);
}

uint64_t sub_1D26B014C()
{
  return WidgetDescriptorCache.controlDescriptors.getter();
}

uint64_t sub_1D26B016C(uint64_t a1)
{
  return WidgetDescriptorCache.controlDescriptors(containedBy:)(a1);
}

uint64_t sub_1D26B018C(uint64_t a1, uint64_t a2)
{
  return sub_1D26B01A4(a1, a2, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_1D26AD254);
}

uint64_t sub_1D26B0198(uint64_t a1, uint64_t a2)
{
  return sub_1D26B01A4(a1, a2, (void (*)(uint64_t *__return_ptr, os_unfair_lock_s *))sub_1D26AD3A4);
}

uint64_t sub_1D26B01A4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, os_unfair_lock_s *))
{
  uint64_t v3;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *(os_unfair_lock_s **)(*(_QWORD *)v3 + 64);
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  a3(&v8, v5 + 4);
  os_unfair_lock_unlock(v5 + 6);
  v6 = v8;
  swift_release();
  return v6;
}

void sub_1D26B0224(void **a1)
{
  WidgetDescriptorCache.activityDescriptor(targeting:)(a1);
}

uint64_t sub_1D26B0244(uint64_t a1)
{
  return WidgetDescriptorCache.activityDescriptors(containedBy:)(a1);
}

uint64_t sub_1D26B0264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v5 + 24));
  sub_1D26ADD8C((uint64_t *)(v5 + 16), a1, a2, &v8);
  os_unfair_lock_unlock((os_unfair_lock_t)(v5 + 24));
  v6 = v8;
  swift_release();
  return v6;
}

uint64_t sub_1D26B02EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1D26ACE38((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  v2 = v4;
  swift_release();
  return v2;
}

unint64_t sub_1D26B0360()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 64);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1D26B8A9C((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  v2 = v4;
  swift_release();
  return v2;
}

unint64_t DescriptorMatchError.failureReason.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  unint64_t v7;

  v1 = *(void **)v0;
  if ((*(_BYTE *)(v0 + 8) & 1) != 0)
  {
    v7 = 0;
    v2 = v1;
    sub_1D26CE0A0();
    sub_1D26CDA04();
    v3 = objc_msgSend(v2, sel_description);
    sub_1D26CD938();

    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
  }
  else
  {
    v4 = v1;
    sub_1D26CE0A0();
    swift_bridgeObjectRelease();
    v7 = 0xD00000000000002DLL;
    v5 = objc_msgSend(v4, sel_description);
    sub_1D26CD938();

    sub_1D26CDA04();
    swift_bridgeObjectRelease();
  }

  return v7;
}

unint64_t DescriptorMatchError.recoverySuggestion.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8))
    return 0xD000000000000060;
  else
    return 0xD000000000000049;
}

unint64_t sub_1D26B05A0()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8))
    return 0xD000000000000060;
  else
    return 0xD000000000000049;
}

uint64_t sub_1D26B05E0()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 32))
    return MEMORY[0x1E0DEE9D8];
  swift_retain();
  v1 = sub_1D26552B8();
  swift_release();
  return v1;
}

uint64_t sub_1D26B079C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, unint64_t *a5@<X4>, unint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t ObjectType;
  int v22;
  __int128 v23;
  id v24;
  void *v25;
  unint64_t v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  unint64_t *v56;
  unint64_t v57;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v59;
  unint64_t v60;
  os_log_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  __int128 v66;
  int *v67;
  unint64_t *v68;
  unint64_t *v69;
  unint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(void *, uint64_t *, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81[6];
  uint64_t v82;

  v7 = v6;
  v78 = a2;
  v79 = a3;
  v12 = type metadata accessor for ExtensionMetadata();
  v13 = *(unint64_t **)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v72 = (uint64_t)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v74 = (uint64_t)&v62 - v17;
  v82 = MEMORY[0x1E0DEE9D8];
  v18 = *(int *)(v16 + 24);
  v80 = a1;
  v19 = *(_QWORD *)(a1 + v18);
  if (v19 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    v20 = sub_1D26CE1F0();
    if (v20)
      goto LABEL_3;
LABEL_38:
    swift_bridgeObjectRelease();
LABEL_39:
    swift_bridgeObjectRelease();
    return sub_1D2536F34(v80, a6);
  }
  v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v20)
    goto LABEL_38;
LABEL_3:
  v67 = (int *)v12;
  v68 = a5;
  v69 = v13;
  v70 = a6;
  v71 = v7;
  ObjectType = swift_getObjectType();
  v22 = 0;
  a5 = 0;
  v76 = *(uint64_t (**)(void *, uint64_t *, uint64_t, uint64_t))(v79 + 8);
  v77 = ObjectType;
  a6 = v19 & 0xC000000000000001;
  v75 = v19 & 0xFFFFFFFFFFFFFF8;
  *(_QWORD *)&v23 = 136446210;
  v66 = v23;
  v65 = MEMORY[0x1E0DEE9B8] + 8;
LABEL_4:
  LODWORD(v73) = v22;
  v13 = a5;
  do
  {
    if (a6)
    {
      v24 = (id)MEMORY[0x1D8239890](v13, v19);
    }
    else
    {
      if ((unint64_t)v13 >= *(_QWORD *)(v75 + 16))
        goto LABEL_36;
      v24 = *(id *)(v19 + 8 * (_QWORD)v13 + 32);
    }
    v25 = v24;
    a5 = (unint64_t *)((char *)v13 + 1);
    if (__OFADD__(v13, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (!a4[2])
      goto LABEL_34;
    v7 = a4;
    v26 = sub_1D25363D0(v80);
    if ((v27 & 1) == 0)
      goto LABEL_35;
    sub_1D2538510(a4[7] + 40 * v26, (uint64_t)v81);
    v28 = (void *)v76(v25, v81, v77, v79);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    if (v28)
    {
      if (qword_1ED962330 != -1)
        swift_once();
      v30 = sub_1D26CC09C();
      __swift_project_value_buffer(v30, (uint64_t)qword_1ED977D20);
      v31 = v74;
      sub_1D2536F34(v80, v74);
      v32 = sub_1D26CC084();
      v33 = sub_1D26CDD04();
      v64 = v33;
      if (os_log_type_enabled(v32, v33))
      {
        v73 = swift_slowAlloc();
        v63 = swift_slowAlloc();
        v81[0] = v63;
        *(_DWORD *)v73 = v66;
        v62 = v32;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
        sub_1D2536488((unint64_t *)&unk_1ED963390, &qword_1ED9633A0, MEMORY[0x1E0D0FB70]);
        v34 = sub_1D26CE370();
        v36 = sub_1D2537880(v34, v35, v81);
        v37 = (uint8_t *)v73;
        *(_QWORD *)(v73 + 4) = v36;
        swift_bridgeObjectRelease();
        sub_1D26B6EDC(v74);
        v32 = v62;
        _os_log_impl(&dword_1D2531000, v62, (os_log_type_t)v64, "Initialization: Migrated cached descriptors for extension %{public}s", v37, 0xCu);
        v38 = v63;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v38, -1, -1);
        MEMORY[0x1D823A5E0](v73, -1, -1);
      }
      else
      {
        sub_1D26B6EDC(v31);
      }

      v39 = v28;
      v7 = &v82;
      MEMORY[0x1D8239290]();
      if (*(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1D26CDB30();
      sub_1D26CDB54();
      sub_1D26CDB0C();

      v22 = 1;
      if (a5 == (unint64_t *)v20)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
      goto LABEL_4;
    }
    v29 = v25;
    v7 = &v82;
    MEMORY[0x1D8239290]();
    if (*(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D26CDB30();
    sub_1D26CDB54();
    sub_1D26CDB0C();

    v13 = (unint64_t *)((char *)v13 + 1);
  }
  while (a5 != (unint64_t *)v20);
  swift_bridgeObjectRelease();
  if ((v73 & 1) == 0)
  {
    a6 = v70;
    goto LABEL_39;
  }
LABEL_27:
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v41 = v70;
  v42 = v80;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v70, v80, v40);
  v43 = v67;
  v44 = v67[5];
  v45 = *(_QWORD *)(v42 + v44);
  v46 = *(_QWORD *)(v42 + v44 + 8);
  v47 = v67[8];
  v48 = *(_QWORD *)(v42 + v47);
  v49 = *(_QWORD *)(v42 + v47 + 8);
  v50 = v82;
  v51 = *(_QWORD *)(v42 + v67[7]);
  v52 = *(_QWORD *)(v42 + v67[9]);
  v53 = (_QWORD *)(v41 + v47);
  v54 = (_QWORD *)(v41 + v44);
  *v54 = v45;
  v54[1] = v46;
  *v53 = v48;
  v53[1] = v49;
  *(_QWORD *)(v41 + v43[6]) = v50;
  *(_QWORD *)(v41 + v43[9]) = v52;
  *(_QWORD *)(v41 + v43[7]) = v51;
  v55 = v72;
  sub_1D2536F34(v41, v72);
  v56 = v68;
  v57 = *v68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v56 = v57;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v57 = sub_1D25625A0(0, *(_QWORD *)(v57 + 16) + 1, 1, v57);
    *v56 = v57;
  }
  v60 = *(_QWORD *)(v57 + 16);
  v59 = *(_QWORD *)(v57 + 24);
  if (v60 >= v59 >> 1)
  {
    v57 = sub_1D25625A0(v59 > 1, v60 + 1, 1, v57);
    *v56 = v57;
  }
  *(_QWORD *)(v57 + 16) = v60 + 1;
  return sub_1D2539ADC(v55, v57+ ((*((unsigned __int8 *)v69 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v69 + 80))+ v69[9] * v60, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
}

void sub_1D26B0DA0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;

  swift_bridgeObjectRelease();
  *a1 = a2;
  v4 = qword_1ED9633D8;
  swift_bridgeObjectRetain_n();
  if (v4 != -1)
    swift_once();
  v5 = sub_1D26CC09C();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED977E78);
  swift_bridgeObjectRetain_n();
  v6 = sub_1D26CC084();
  v7 = sub_1D26CDD04();
  if (os_log_type_enabled(v6, v7))
  {
    v8 = swift_slowAlloc();
    v9 = swift_slowAlloc();
    v14 = v9;
    *(_DWORD *)v8 = 134349314;
    sub_1D26CDF50();
    *(_WORD *)(v8 + 12) = 2082;
    sub_1D26CDE54();
    v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FE48];
    type metadata accessor for ExtensionMetadata();
    sub_1D25369B0((unint64_t *)&qword_1ED96D528, v10, MEMORY[0x1E0DEFCF8]);
    swift_bridgeObjectRetain();
    v11 = sub_1D26CD830();
    v13 = v12;
    swift_bridgeObjectRelease();
    sub_1D2537880(v11, v13, &v14);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v6, v7, "Initialization: Descriptors loaded from cache (%{public}ld) %{public}s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v9, -1, -1);
    MEMORY[0x1D823A5E0](v8, -1, -1);
    swift_bridgeObjectRelease();

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1D26B0FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ExtensionMetadata();
  v8 = *(_QWORD *)(v7 - 8);
  result = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a2 + 16);
  if (v12)
  {
    v13 = a2;
    v14 = a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v15 = *(_QWORD *)(v8 + 72);
    v16[1] = v13;
    swift_bridgeObjectRetain();
    do
    {
      sub_1D2536F34(v14, (uint64_t)v11);
      sub_1D2536F34((uint64_t)v11, (uint64_t)v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
      sub_1D2658728((uint64_t)v6, v11);
      sub_1D253703C((uint64_t)v6, &qword_1ED9627C0);
      sub_1D26B6EDC((uint64_t)v11);
      if (v2)
        break;
      v14 += v15;
      --v12;
    }
    while (v12);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D26B1158(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v2 = *(_QWORD *)(v1 + 32);
  if (v2)
  {
    v3 = (void (*)(uint64_t))result;
    v4 = *(_QWORD **)(v2 + 16);
    type metadata accessor for ChronoMetadataStore.MutableStore();
    swift_allocObject();
    v5 = sub_1D2672BD8();
    v6 = *(_QWORD *)(v2 + 128);
    v7 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v7);
    swift_retain();
    sub_1D255D788(0xD000000000000015, 0x80000001D26E65F0, v4, (uint64_t)v5, v3);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    sub_1D265505C();
    return swift_release();
  }
  return result;
}

uint64_t WidgetDescriptorCacheUpdate.init(extensionIdentities:reasons:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1D26B13B4(_QWORD *a1, uint64_t *a2, uint64_t *a3, NSObject *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  void *v37;
  id v38;
  void *v39;
  id v40;
  unsigned __int8 v41;
  char v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint8_t *v53;
  uint64_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  void (*isa)(_QWORD *__return_ptr, _QWORD);
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80;
  void (*v81)(uint64_t, uint64_t);
  _BYTE *v82;
  uint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  _QWORD *v96;
  unint64_t v97;
  NSObject *v98;
  _BOOL4 v99;
  uint64_t v100;
  id v101;
  BOOL v102;
  uint64_t *v103;
  uint64_t *v104;
  uint64_t v105;
  id v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _BYTE *v111;
  _QWORD *v112;
  NSObject *v113;
  os_log_type_t v114;
  uint64_t v115;
  uint64_t *v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  id v126;
  _QWORD *v127;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  void *v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  id v136;
  void *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  unint64_t v141;
  unint64_t v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  NSObject *v147;
  os_log_type_t v148;
  int v149;
  uint64_t v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t (*v155)(uint64_t, uint64_t);
  uint64_t v156;
  unint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  unint64_t v162;
  NSObject *v163;
  uint64_t v164;
  _BYTE *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  id v171;
  uint64_t v172;
  _QWORD *v173;
  NSObject *v174;
  NSObject *v175;
  os_log_type_t v176;
  int v177;
  uint64_t v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t (*v182)(uint64_t, uint64_t);
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;
  NSObject *v188;
  id v189;
  os_log_t v190;
  _BYTE *v191;
  _QWORD *v192;
  _BYTE v193[24];
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  unint64_t v197;
  uint64_t v198;
  _BOOL4 v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _QWORD *v203;
  _BYTE *v204;
  NSObject *v205;
  _BYTE *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t *v209;
  _BYTE *v210;
  _QWORD *v211;
  uint64_t v212;
  _QWORD *v213;
  uint64_t __s2;
  uint64_t v215;
  uint64_t v216;
  _QWORD __s1[3];
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;

  v5 = v4;
  v205 = a4;
  v209 = a3;
  v220 = *MEMORY[0x1E0C80C00];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v207 = *(_QWORD *)(v8 - 8);
  v208 = v8;
  MEMORY[0x1E0C80A78](v8);
  v206 = &v193[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v193[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (int *)type metadata accessor for ExtensionMetadata();
  v14 = *((_QWORD *)v13 - 1);
  v15 = MEMORY[0x1E0C80A78](v13);
  v204 = &v193[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v15);
  v18 = &v193[-v17];
  v19 = a1[3];
  v20 = a1[4];
  v211 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v19);
  v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
  v22 = (void *)v21;
  v23 = *a2;
  if (*(_QWORD *)(*a2 + 16) && (v24 = sub_1D25393D8(v21), (v25 & 1) != 0))
  {
    sub_1D2536F34(*(_QWORD *)(v23 + 56) + *(_QWORD *)(v14 + 72) * v24, (uint64_t)v12);
    v26 = 0;
  }
  else
  {
    v26 = 1;
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t, int *))(v14 + 56))(v12, v26, 1, v13);

  if ((*(unsigned int (**)(_BYTE *, uint64_t, int *))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1D253703C((uint64_t)v12, &qword_1ED9627C0);
    if (qword_1ED962330 == -1)
    {
LABEL_7:
      v27 = sub_1D26CC09C();
      __swift_project_value_buffer(v27, (uint64_t)qword_1ED977D20);
      sub_1D2538510((uint64_t)v211, (uint64_t)__s1);
      v28 = sub_1D26CC084();
      v29 = sub_1D26CDD04();
      if (os_log_type_enabled(v28, v29))
      {
        v30 = swift_slowAlloc();
        v31 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v30 = 138543362;
        v211 = (_QWORD *)(v30 + 4);
        v32 = v218;
        v33 = v219;
        __swift_project_boxed_opaque_existential_0(__s1, v218);
        v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 40))(v32, v33);
        __s2 = v34;
        sub_1D26CDF50();
        *v31 = v34;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);
        _os_log_impl(&dword_1D2531000, v28, v29, "No metadata for %{public}@", (uint8_t *)v30, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        v35 = 1;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v31, -1, -1);
        MEMORY[0x1D823A5E0](v30, -1, -1);

        return v35;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);

      return 1;
    }
LABEL_83:
    swift_once();
    goto LABEL_7;
  }
  sub_1D2539ADC((uint64_t)v12, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
  v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D016F8]), sel_init);
  v210 = v18;
  if (v36)
  {
    v37 = v36;
    if (*(_QWORD *)&v18[v13[8] + 8]
      && (v38 = objc_allocWithZone(MEMORY[0x1E0D016F8]),
          swift_bridgeObjectRetain(),
          v39 = (void *)sub_1D26CD914(),
          swift_bridgeObjectRelease(),
          v40 = objc_msgSend(v38, sel_initWithString_, v39),
          v39,
          v40))
    {
      v41 = objc_msgSend(v40, sel_isBefore_withPrecision_, v37, 1);

      if ((v41 & 1) == 0)
      {
        v42 = 0;
        goto LABEL_26;
      }
    }
    else
    {

    }
    if (qword_1ED962330 != -1)
      swift_once();
    v43 = sub_1D26CC09C();
    __swift_project_value_buffer(v43, (uint64_t)qword_1ED977D20);
    sub_1D2538510((uint64_t)v211, (uint64_t)__s1);
    v44 = sub_1D26CC084();
    v45 = sub_1D26CDD04();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      v203 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v46 = 138543362;
      v202 = (uint64_t)(v46 + 4);
      v47 = v218;
      v48 = v219;
      __swift_project_boxed_opaque_existential_0(__s1, v218);
      v49 = *(uint64_t (**)(uint64_t, uint64_t))(v48 + 40);
      v50 = v48;
      v5 = v4;
      v51 = v49(v47, v50);
      __s2 = v51;
      sub_1D26CDF50();
      v52 = v203;
      *v203 = v51;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);
      _os_log_impl(&dword_1D2531000, v44, v45, "Refetching descriptors due to OS version change for %{public}@", v46, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      v42 = 1;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v52, -1, -1);
      v53 = v46;
      v18 = v210;
      MEMORY[0x1D823A5E0](v53, -1, -1);

    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);

      v42 = 1;
    }
  }
  else
  {
    if (qword_1ED962330 != -1)
      swift_once();
    v54 = sub_1D26CC09C();
    __swift_project_value_buffer(v54, (uint64_t)qword_1ED977D20);
    v55 = sub_1D26CC084();
    v56 = sub_1D26CDCEC();
    if (os_log_type_enabled(v55, v56))
    {
      v57 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v57 = 0;
      _os_log_impl(&dword_1D2531000, v55, v56, "Failed to get build version", v57, 2u);
      MEMORY[0x1D823A5E0](v57, -1, -1);
    }

    v42 = 0;
  }
LABEL_26:
  v58 = (uint64_t *)&v18[v13[5]];
  v60 = *v58;
  v59 = v58[1];
  v61 = v211[3];
  v62 = v211[4];
  __swift_project_boxed_opaque_existential_0(v211, v61);
  swift_bridgeObjectRetain();
  if (v60 == sub_1D2534BC4(v61, v62) && v59 == v63)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v64 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v64 & 1) == 0)
    {
      if (qword_1ED962330 != -1)
        swift_once();
      v110 = sub_1D26CC09C();
      __swift_project_value_buffer(v110, (uint64_t)qword_1ED977D20);
      v111 = v204;
      sub_1D2536F34((uint64_t)v18, (uint64_t)v204);
      v112 = v211;
      sub_1D2538510((uint64_t)v211, (uint64_t)__s1);
      sub_1D2538510((uint64_t)v112, (uint64_t)&__s2);
      v113 = sub_1D26CC084();
      v114 = sub_1D26CDD04();
      if (os_log_type_enabled(v113, v114))
      {
        v115 = swift_slowAlloc();
        v209 = (uint64_t *)swift_slowAlloc();
        v211 = (_QWORD *)swift_slowAlloc();
        v213 = v211;
        *(_DWORD *)v115 = 136446722;
        v116 = (uint64_t *)&v111[v13[5]];
        v117 = *v116;
        v118 = v116[1];
        swift_bridgeObjectRetain();
        v212 = sub_1D2537880(v117, v118, (uint64_t *)&v213);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        sub_1D26B6EDC((uint64_t)v111);
        *(_WORD *)(v115 + 12) = 2082;
        v119 = v218;
        v120 = v219;
        __swift_project_boxed_opaque_existential_0(__s1, v218);
        v121 = sub_1D2534BC4(v119, v120);
        v212 = sub_1D2537880(v121, v122, (uint64_t *)&v213);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);
        *(_WORD *)(v115 + 22) = 2114;
        v124 = v215;
        v123 = v216;
        __swift_project_boxed_opaque_existential_0(&__s2, v215);
        v18 = v210;
        v125 = (*(uint64_t (**)(uint64_t, uint64_t))(v123 + 40))(v124, v123);
        v212 = v125;
        sub_1D26CDF50();
        v126 = v209;
        *v209 = v125;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
        _os_log_impl(&dword_1D2531000, v113, v114, "Refetching descriptors due to extension version change, from %{public}s to %{public}s for %{public}@", (uint8_t *)v115, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v126, -1, -1);
        v127 = v211;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v127, -1, -1);
        MEMORY[0x1D823A5E0](v115, -1, -1);
      }
      else
      {
        sub_1D26B6EDC((uint64_t)v111);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
      }

      goto LABEL_64;
    }
  }
  if ((v42 & 1) != 0)
  {
LABEL_64:
    sub_1D26B6EDC((uint64_t)v18);
    return 1;
  }
  v65 = v211[3];
  v66 = v211[4];
  __swift_project_boxed_opaque_existential_0(v211, v65);
  v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 144))(v65, v66);
  v69 = *v209;
  v70 = *(_QWORD *)(*v209 + 16);
  v201 = v5;
  if (v70 && (v71 = sub_1D25891F4(v67, v68), (v72 & 1) != 0))
  {
    v73 = (uint64_t *)(*(_QWORD *)(v69 + 56) + 24 * v71);
    v75 = *v73;
    v74 = v73[1];
    v76 = (_QWORD *)v73[2];
    sub_1D253FE08(*v73, v74);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v203 = v76;
    if (v76)
      goto LABEL_37;
  }
  else
  {
    swift_bridgeObjectRelease();
    v74 = 0;
    v75 = 0;
  }
  isa = (void (*)(_QWORD *__return_ptr, _QWORD))v205[6].isa;
  v78 = v211;
  v79 = v211[3];
  v80 = v211[4];
  __swift_project_boxed_opaque_existential_0(v211, v79);
  v81 = *(void (**)(uint64_t, uint64_t))(v80 + 144);
  swift_retain();
  v81(v79, v80);
  v82 = v206;
  sub_1D26CBC7C();
  isa(__s1, v82);
  v18 = v210;
  swift_release();
  (*(void (**)(_BYTE *, uint64_t))(v207 + 8))(v82, v208);
  v83 = __s1[0];
  v84 = __s1[1];
  v85 = (_QWORD *)__s1[2];
  sub_1D25E7E14(v75, v74, 0);
  v86 = v78[3];
  v87 = v78[4];
  __swift_project_boxed_opaque_existential_0(v78, v86);
  v88 = (*(uint64_t (**)(uint64_t, uint64_t))(v87 + 144))(v86, v87);
  v90 = v89;
  sub_1D2647BAC(v83, v84, (uint64_t)v85);
  v203 = v85;
  sub_1D25E623C(v83, v84, (uint64_t)v85, v88, v90);
  v75 = v83;
  v74 = v84;
LABEL_37:
  v91 = *(_QWORD *)&v18[v13[6]];
  if (v91 >> 62)
  {
    sub_1D25CCBDC();
    swift_bridgeObjectRetain();
    v166 = sub_1D26CE1E4();
    swift_bridgeObjectRelease();
    v91 = v166;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D26CE3E8();
    sub_1D25CCBDC();
  }
  v92 = v13[7];
  v93 = *(_QWORD *)&v18[v92];
  if (v93 >> 62)
  {
    sub_1D25CCBDC();
    swift_bridgeObjectRetain();
    v167 = sub_1D26CE1E4();
    swift_bridgeObjectRelease();
    v93 = v167;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D26CE3E8();
    sub_1D25CCBDC();
  }
  __s1[0] = v91;
  sub_1D25F6BB0(v93);
  v94 = __s1[0];
  v95 = *(_QWORD *)&v18[v13[9]];
  if (v95 >> 62)
  {
    sub_1D25CCBDC();
    swift_bridgeObjectRetain();
    v168 = sub_1D26CE1E4();
    swift_bridgeObjectRelease();
    v95 = v168;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D26CE3E8();
    sub_1D25CCBDC();
  }
  v96 = v203;
  __s1[0] = v94;
  sub_1D25F6BB0(v95);
  v97 = __s1[0];
  if (__s1[0] >> 62)
  {
    swift_bridgeObjectRetain();
    v98 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v98)
    {
LABEL_45:
      v194 = v92;
      v208 = v97 & 0xC000000000000001;
      v206 = (_BYTE *)(v74 >> 62);
      v197 = HIDWORD(v75);
      v99 = __OFSUB__(HIDWORD(v75), (_DWORD)v75);
      v199 = v99;
      v198 = HIDWORD(v75) - (int)v75;
      v205 = BYTE6(v74);
      v202 = v74 & 0x3FFFFFFFFFFFFFFFLL;
      v200 = (int)v75;
      v196 = v75 >> 32;
      v195 = (v75 >> 32) - (int)v75;
      v100 = 4;
      v204 = (_BYTE *)v97;
      v207 = (uint64_t)v98;
      while (1)
      {
        v103 = v208 ? (uint64_t *)MEMORY[0x1D8239890](v100 - 4, v97) : (uint64_t *)*(id *)(v97 + 8 * v100);
        v104 = v103;
        v105 = v100 - 3;
        if (__OFADD__(v100 - 4, 1))
          break;
        if (v96)
        {
          sub_1D253FE08(v75, v74);
          sub_1D253FE08(v75, v74);
          sub_1D253FE08(v75, v74);
          v106 = objc_msgSend(v104, sel_localeToken);
          if (v106)
          {
            v107 = v106;
            v209 = v104;
            sub_1D26CB8E0();
            v109 = v108;

            __asm { BR              X8 }
          }
          sub_1D2541EBC(0, 0xF000000000000000);
          sub_1D2541EBC(v75, v74);
          sub_1D253EE04(v75, v74);
          v130 = v75;
          v131 = v74;
LABEL_70:
          sub_1D253EE04(v130, v131);
          v208 = 7104878;
          swift_bridgeObjectRelease();
          v136 = objc_msgSend(v104, sel_localeToken);
          if (v136)
          {
            v137 = v136;
            v138 = sub_1D26CB8E0();
            v140 = v139;

            v207 = sub_1D26CB8D4();
            v142 = v141;
            sub_1D253EE04(v138, v140);
            if (v96)
              goto LABEL_72;
LABEL_74:
            v144 = 0xE300000000000000;
          }
          else
          {
            v142 = 0xE300000000000000;
            v207 = 7104878;
            if (!v96)
              goto LABEL_74;
LABEL_72:
            sub_1D253FE08(v75, v74);
            v208 = sub_1D26CB8D4();
            v144 = v143;
            sub_1D253EE04(v75, v74);
          }
          if (qword_1ED962950 != -1)
            swift_once();
          v145 = sub_1D26CC09C();
          __swift_project_value_buffer(v145, (uint64_t)qword_1ED977DB8);
          v146 = v211;
          sub_1D2538510((uint64_t)v211, (uint64_t)__s1);
          sub_1D2538510((uint64_t)v146, (uint64_t)&__s2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v147 = sub_1D26CC084();
          v148 = sub_1D26CDD04();
          v149 = v148;
          if (os_log_type_enabled(v147, v148))
          {
            v150 = swift_slowAlloc();
            v205 = v147;
            v151 = v150;
            v152 = (_QWORD *)swift_slowAlloc();
            v202 = (uint64_t)v152;
            v206 = (_BYTE *)swift_slowAlloc();
            v213 = v206;
            *(_DWORD *)v151 = 138544130;
            v200 = v142;
            v209 = v104;
            v154 = v218;
            v153 = v219;
            __swift_project_boxed_opaque_existential_0(__s1, v218);
            v155 = *(uint64_t (**)(uint64_t, uint64_t))(v153 + 40);
            LODWORD(v204) = v149;
            v156 = v155(v154, v153);
            v212 = v156;
            sub_1D26CDF50();
            *v152 = v156;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);
            *(_WORD *)(v151 + 12) = 2082;
            v157 = v144;
            v159 = v215;
            v158 = v216;
            __swift_project_boxed_opaque_existential_0(&__s2, v215);
            v160 = (*(uint64_t (**)(uint64_t, uint64_t))(v158 + 144))(v159, v158);
            v212 = sub_1D2537880(v160, v161, (uint64_t *)&v213);
            v96 = v203;
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
            *(_WORD *)(v151 + 22) = 2082;
            v162 = v200;
            swift_bridgeObjectRetain();
            v212 = sub_1D2537880(v207, v162, (uint64_t *)&v213);
            sub_1D26CDF50();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v151 + 32) = 2082;
            swift_bridgeObjectRetain();
            v212 = sub_1D2537880(v208, v157, (uint64_t *)&v213);
            sub_1D26CDF50();
            swift_bridgeObjectRelease_n();
            v163 = v205;
            _os_log_impl(&dword_1D2531000, v205, (os_log_type_t)v204, "Reloading extension: %{public}@ on behalf of %{public}s because it contains descriptors (%{public}s) that do not match current locale token: %{public}s", (uint8_t *)v151, 0x2Au);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
            v129 = 1;
            v164 = v202;
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v164, -1, -1);
            v165 = v206;
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v165, -1, -1);
            MEMORY[0x1D823A5E0](v151, -1, -1);

          }
          else
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();

            swift_bridgeObjectRelease();
            v129 = 1;
          }
          v18 = v210;
          goto LABEL_81;
        }
        v101 = objc_msgSend(v103, sel_localeToken);
        if (v101)
        {
          v132 = v101;
          v133 = sub_1D26CB8E0();
          v135 = v134;

          v130 = v133;
          v131 = v135;
          goto LABEL_70;
        }

        ++v100;
        v102 = v105 == v207;
        v18 = v210;
        if (v102)
        {
          swift_bridgeObjectRelease();
          v129 = 0;
LABEL_81:
          v92 = v194;
          goto LABEL_89;
        }
      }
      __break(1u);
      goto LABEL_83;
    }
  }
  else
  {
    v98 = *(NSObject **)((__s1[0] & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v98)
      goto LABEL_45;
  }
  swift_bridgeObjectRelease();
  v129 = 0;
LABEL_89:
  v169 = *(_QWORD *)&v18[v92];
  if (v169 >> 62)
  {
LABEL_107:
    swift_bridgeObjectRetain();
    v35 = sub_1D26CE1F0();
    if (v35)
    {
LABEL_91:
      v209 = (uint64_t *)v129;
      v18 = (_BYTE *)(v169 & 0xC000000000000001);
      v170 = 4;
      while (1)
      {
        if (v18)
          v171 = (id)MEMORY[0x1D8239890](v170 - 4, v169);
        else
          v171 = *(id *)(v169 + 8 * v170);
        v129 = (uint64_t)v171;
        v96 = (_QWORD *)(v170 - 3);
        if (__OFADD__(v170 - 4, 1))
        {
          __break(1u);
          goto LABEL_107;
        }
        if (objc_msgSend(v171, sel_controlVersion) != (id)1)
          break;

        ++v170;
        if (v96 == (_QWORD *)v35)
        {
          swift_bridgeObjectRelease();
          v35 = 0;
LABEL_105:
          LOBYTE(v129) = (_BYTE)v209;
          v18 = v210;
          v96 = v203;
          goto LABEL_109;
        }
      }
      swift_bridgeObjectRelease();
      if (qword_1ED962950 != -1)
        swift_once();
      v172 = sub_1D26CC09C();
      __swift_project_value_buffer(v172, (uint64_t)qword_1ED977DB8);
      v173 = v211;
      sub_1D2538510((uint64_t)v211, (uint64_t)__s1);
      sub_1D2538510((uint64_t)v173, (uint64_t)&__s2);
      v174 = (id)v129;
      v175 = sub_1D26CC084();
      v176 = sub_1D26CDD04();
      v177 = v176;
      if (!os_log_type_enabled(v175, v176))
      {

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);

        v35 = 1;
        goto LABEL_105;
      }
      v178 = swift_slowAlloc();
      v179 = (_QWORD *)swift_slowAlloc();
      v206 = v179;
      v211 = (_QWORD *)swift_slowAlloc();
      v213 = v211;
      *(_DWORD *)v178 = 138544130;
      v205 = (v178 + 4);
      LODWORD(v208) = v177;
      v181 = v218;
      v180 = v219;
      __swift_project_boxed_opaque_existential_0(__s1, v218);
      v182 = *(uint64_t (**)(uint64_t, uint64_t))(v180 + 40);
      v207 = (uint64_t)v175;
      v183 = v182(v181, v180);
      v212 = v183;
      sub_1D26CDF50();
      *v179 = v183;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)__s1);
      *(_WORD *)(v178 + 12) = 2082;
      v205 = v174;
      v185 = v215;
      v184 = v216;
      __swift_project_boxed_opaque_existential_0(&__s2, v215);
      v186 = (*(uint64_t (**)(uint64_t, uint64_t))(v184 + 144))(v185, v184);
      v212 = sub_1D2537880(v186, v187, (uint64_t *)&v213);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&__s2);
      *(_WORD *)(v178 + 22) = 2050;
      v188 = v205;
      v189 = -[NSObject controlVersion](v205, sel_controlVersion);

      v212 = (uint64_t)v189;
      sub_1D26CDF50();

      *(_WORD *)(v178 + 32) = 2050;
      v35 = 1;
      v212 = 1;
      sub_1D26CDF50();
      v190 = (os_log_t)v207;
      _os_log_impl(&dword_1D2531000, (os_log_t)v207, (os_log_type_t)v208, "Reloading extension: %{public}@ on behalf of %{public}s because it has out of date control descriptors (%{public}llu < %{public}llu)", (uint8_t *)v178, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      v191 = v206;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v191, -1, -1);
      v192 = v211;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v192, -1, -1);
      MEMORY[0x1D823A5E0](v178, -1, -1);

      sub_1D26B6EDC((uint64_t)v210);
      sub_1D25E7E14(v75, v74, (uint64_t)v203);
      if ((v209 & 1) != 0)
        return 1;
      return v35;
    }
  }
  else
  {
    v35 = *(_QWORD *)((v169 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v35)
      goto LABEL_91;
  }
  swift_bridgeObjectRelease();
LABEL_109:
  sub_1D26B6EDC((uint64_t)v18);
  sub_1D25E7E14(v75, v74, (uint64_t)v96);
  if ((v129 & 1) != 0)
    return 1;
  return v35;
}

uint64_t sub_1D26B35AC(uint64_t result, uint64_t *a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  NSObject *v14;
  os_log_type_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t);
  uint64_t ObjectType;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v6 = result;
    v26 = a2[1];
    v27 = *a2;
    v7 = *(_QWORD *)(v4 + 72);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
    sub_1D26B3B30((uint64_t *)(v7 + 16), (uint64_t *)&v34);
    os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
    v8 = v34;
    swift_release();
    v9 = *(_QWORD *)(v8 + 16);
    if (v9)
    {
      v10 = v8 + 32;
      v11 = qword_1ED962330;
      swift_bridgeObjectRetain();
      if (v11 != -1)
        swift_once();
      v29 = sub_1D26CC09C();
      __swift_project_value_buffer(v29, (uint64_t)qword_1ED977D20);
      while (1)
      {
        sub_1D2538510(v10, (uint64_t)&v34);
        v14 = sub_1D26CC084();
        v15 = sub_1D26CDD04();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = swift_slowAlloc();
          v17 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v16 = 138543362;
          v19 = v35;
          v18 = v36;
          __swift_project_boxed_opaque_existential_0(&v34, v35);
          v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 40))(v19, v18);
          *(_QWORD *)(v16 + 4) = v20;
          *v17 = v20;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
          _os_log_impl(&dword_1D2531000, v14, v15, "Requesting descriptor fetch for %{public}@", (uint8_t *)v16, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v17, -1, -1);
          MEMORY[0x1D823A5E0](v16, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
        }

        if (MEMORY[0x1D823A688](v28 + 16))
        {
          v12 = *(_QWORD *)(v28 + 24);
          ObjectType = swift_getObjectType();
          sub_1D2538510(v10, (uint64_t)&v34);
          v13 = (_QWORD *)swift_allocObject();
          v13[2] = v28;
          sub_1D2538F38(&v34, (uint64_t)(v13 + 3));
          v13[8] = v27;
          v13[9] = v26;
          v13[10] = a3;
          v13[11] = a4;
          v30 = *(void (**)(uint64_t, uint64_t (*)(), _QWORD *, uint64_t, uint64_t))(v12 + 24);
          swift_retain();
          sub_1D25F5E14(v27, v26);
          sub_1D2549DF0((uint64_t)a3);
          v30(v10, sub_1D26B87B0, v13, ObjectType, v12);
          swift_release();
          swift_unknownObjectRelease();
        }
        else if (a3)
        {
          a3(v10);
        }
        v10 += 40;
        if (!--v9)
          break;
        __swift_project_value_buffer(v29, (uint64_t)qword_1ED977D20);
      }
      return swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_1ED962330 != -1)
        swift_once();
      v21 = sub_1D26CC09C();
      __swift_project_value_buffer(v21, (uint64_t)qword_1ED977D20);
      v22 = sub_1D26CC084();
      v23 = sub_1D26CDD04();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v24 = 0;
        _os_log_impl(&dword_1D2531000, v22, v23, "No descriptors to load because they were filtered.", v24, 2u);
        MEMORY[0x1D823A5E0](v24, -1, -1);
      }

      v25 = v6 + 32;
      swift_bridgeObjectRetain();
      do
      {
        if (a3)
          a3(v25);
        v25 += 40;
        --v5;
      }
      while (v5);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D26B39D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, BOOL *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t result;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a2[3];
  v10 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v9);
  v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 40))(v9, v10);
  v12 = (void *)v11;
  v13 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v14 = sub_1D25393D8(v11), (v15 & 1) != 0))
  {
    v16 = v14;
    v17 = *(_QWORD *)(v13 + 56);
    v18 = type metadata accessor for ExtensionMetadata();
    v19 = *(_QWORD *)(v18 - 8);
    sub_1D2536F34(v17 + *(_QWORD *)(v19 + 72) * v16, (uint64_t)v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v8, 0, 1, v18);
  }
  else
  {
    v18 = type metadata accessor for ExtensionMetadata();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
  }

  type metadata accessor for ExtensionMetadata();
  v20 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v8, 1, v18) != 1;
  result = sub_1D253703C((uint64_t)v8, &qword_1ED9627C0);
  *a3 = v20;
  return result;
}

uint64_t sub_1D26B3B30@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = swift_bridgeObjectRetain();
  v10 = sub_1D26B7B34(v9, a1);
  v24 = v2;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v10 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v22 = a1;
    v23 = a2;
    v28 = MEMORY[0x1E0DEE9D8];
    sub_1D2584400(0, v11, 0);
    v21 = v10;
    v13 = v10 + 32;
    v12 = v28;
    do
    {
      sub_1D2538510(v13, (uint64_t)v25);
      v15 = v26;
      v14 = v27;
      __swift_project_boxed_opaque_existential_0(v25, v26);
      v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 40))(v15, v14);
      sub_1D26CDE48();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2584400(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v28;
      }
      v18 = *(_QWORD *)(v12 + 16);
      v17 = *(_QWORD *)(v12 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1D2584400(v17 > 1, v18 + 1, 1);
        v12 = v28;
      }
      *(_QWORD *)(v12 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v18, v8, v5);
      v13 += 40;
      --v11;
    }
    while (v11);
    a2 = v23;
    v10 = v21;
  }
  sub_1D25D5438(v12);
  result = swift_bridgeObjectRelease();
  *a2 = v10;
  return result;
}

uint64_t sub_1D26B3D18(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(_QWORD *), uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  os_unfair_lock_s *v16;
  uint64_t result;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[3];

  v23 = a6;
  v24 = a8;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633B0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(os_unfair_lock_s **)(a3 + 72);
  swift_retain();
  os_unfair_lock_lock(v16 + 6);
  sub_1D26B3E74(a4, (uint64_t)v15);
  os_unfair_lock_unlock(v16 + 6);
  swift_release();
  result = sub_1D253703C((uint64_t)v15, &qword_1ED9633B0);
  if (a1)
  {
    v18 = a1;
    v19 = sub_1D26CD4F4();
    v20 = sub_1D26CD500();
    v21 = sub_1D26CD50C();
    v25[0] = a5;
    v25[1] = v23;
    WidgetDescriptorCache.fillCache(for:descriptors:controlDescriptors:activityDescriptors:reason:)(a4, v19, v20, v21, v25);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  if (a7)
    return a7(a4);
  return result;
}

uint64_t sub_1D26B3E74@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v8);
  v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
  sub_1D26CDE48();

  sub_1D25DEB88((uint64_t)v7, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D26B3F54(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1D26B3F74@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  _QWORD *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[3];
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v73 = a3;
  v68 = a4;
  v72 = a5;
  v7 = type metadata accessor for ExtensionMetadata();
  v8 = *(_QWORD **)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v66 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v65 = (uint64_t)&v62 - v11;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9635A0);
  MEMORY[0x1E0C80A78](v71);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v67 = (uint64_t)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v64 = (uint64_t)&v62 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v62 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v62 - v22;
  v79 = MEMORY[0x1E0DEE9D8];
  v24 = a2[3];
  v25 = a2[4];
  v70 = a2;
  __swift_project_boxed_opaque_existential_0(a2, v24);
  v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(v24, v25);
  v27 = (void *)v26;
  v69 = a1;
  v28 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v29 = sub_1D25393D8(v26), (v30 & 1) != 0))
  {
    sub_1D2536F34(*(_QWORD *)(v28 + 56) + v8[9] * v29, (uint64_t)v23);
    v31 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v8[7];
    v31(v23, 0, 1, v7);
  }
  else
  {
    v31 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v8[7];
    v31(v23, 1, 1, v7);
  }
  v32 = v73;

  sub_1D2536F34(v32, (uint64_t)v21);
  v31(v21, 0, 1, v7);
  v33 = (uint64_t)&v13[*(int *)(v71 + 48)];
  sub_1D2537078((uint64_t)v23, (uint64_t)v13, &qword_1ED9627C0);
  sub_1D2537078((uint64_t)v21, v33, &qword_1ED9627C0);
  v34 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v8[6];
  if (v34((uint64_t)v13, 1, v7) == 1)
  {
    sub_1D253703C((uint64_t)v21, &qword_1ED9627C0);
    sub_1D253703C((uint64_t)v23, &qword_1ED9627C0);
    if (v34(v33, 1, v7) == 1)
    {
      result = sub_1D253703C((uint64_t)v13, &qword_1ED9627C0);
      goto LABEL_19;
    }
  }
  else
  {
    v36 = v64;
    sub_1D2537078((uint64_t)v13, v64, &qword_1ED9627C0);
    if (v34(v33, 1, v7) != 1)
    {
      v59 = v36;
      v60 = v65;
      sub_1D2539ADC(v33, v65, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      v61 = _s9ChronoKit17ExtensionMetadataV2eeoiySbAC_ACtFZ_0(v59, v60);
      sub_1D26B6EDC(v60);
      sub_1D253703C((uint64_t)v21, &qword_1ED9627C0);
      sub_1D253703C((uint64_t)v23, &qword_1ED9627C0);
      sub_1D26B6EDC(v59);
      result = sub_1D253703C((uint64_t)v13, &qword_1ED9627C0);
      v37 = v70;
      if ((v61 & 1) != 0)
        goto LABEL_19;
      goto LABEL_11;
    }
    sub_1D253703C((uint64_t)v21, &qword_1ED9627C0);
    sub_1D253703C((uint64_t)v23, &qword_1ED9627C0);
    sub_1D26B6EDC(v36);
  }
  sub_1D253703C((uint64_t)v13, &qword_1ED9635A0);
  v37 = v70;
LABEL_11:
  v71 = (uint64_t)v31;
  if (qword_1ED962330 != -1)
    swift_once();
  v38 = sub_1D26CC09C();
  __swift_project_value_buffer(v38, (uint64_t)qword_1ED977D20);
  sub_1D2538510((uint64_t)v37, (uint64_t)v76);
  v39 = v66;
  sub_1D2536F34(v32, v66);
  v40 = sub_1D26CC084();
  v41 = sub_1D26CDD04();
  if (os_log_type_enabled(v40, v41))
  {
    v42 = swift_slowAlloc();
    v70 = (_QWORD *)v7;
    v43 = v42;
    v63 = (_QWORD *)swift_slowAlloc();
    v64 = swift_slowAlloc();
    v75 = v64;
    *(_DWORD *)v43 = 138543618;
    v44 = v77;
    v45 = v78;
    __swift_project_boxed_opaque_existential_0(v76, v77);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 40))(v44, v45);
    v74 = v46;
    sub_1D26CDF50();
    v47 = v63;
    *v63 = v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    *(_WORD *)(v43 + 12) = 2080;
    sub_1D2536F34(v39, v65);
    v48 = sub_1D26CD998();
    v74 = sub_1D2537880(v48, v49, &v75);
    v32 = v73;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D26B6EDC(v39);
    _os_log_impl(&dword_1D2531000, v40, v41, "Updating descriptor cache for %{public}@ with %s.", (uint8_t *)v43, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v47, -1, -1);
    v50 = v64;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v50, -1, -1);
    v51 = v43;
    v7 = (uint64_t)v70;
    MEMORY[0x1D823A5E0](v51, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    sub_1D26B6EDC(v39);
  }

  MEMORY[0x1E0C80A78](v52);
  *(&v62 - 2) = v32;
  sub_1D26B1158((uint64_t)sub_1D26B8ACC);
  v53 = v37[3];
  v54 = v37[4];
  __swift_project_boxed_opaque_existential_0(v37, v53);
  v55 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v54 + 40))(v53, v54);
  v56 = v67;
  sub_1D2536F34(v32, v67);
  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v71)(v56, 0, 1, v7);
  sub_1D25E60E8(v56, v55);
  v57 = v37[3];
  v58 = v37[4];
  __swift_project_boxed_opaque_existential_0(v37, v57);
  (*(void (**)(uint64_t, uint64_t))(v58 + 40))(v57, v58);
  MEMORY[0x1D8239290]();
  if (*(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_1D26CDB30();
  sub_1D26CDB54();
  result = sub_1D26CDB0C();
LABEL_19:
  *v72 = v79;
  return result;
}

uint64_t sub_1D26B465C(uint64_t a1, char *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2536F34((uint64_t)a2, (uint64_t)v5);
  v6 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, 0, 1, v6);
  sub_1D2658728((uint64_t)v5, a2);
  return sub_1D253703C((uint64_t)v5, &qword_1ED9627C0);
}

uint64_t sub_1D26B4728(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633B0);
  result = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(*(_QWORD *)a1 + 16))
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (v8)
    {
      v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0) - 8);
      v10 = a2 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
      v11 = *(_QWORD *)(v9 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1D25DEB88(v10, (uint64_t)v7);
        sub_1D253703C((uint64_t)v7, &qword_1ED9633B0);
        v10 += v11;
        --v8;
      }
      while (v8);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D26B4818(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_QWORD, _QWORD, _QWORD);
  __int128 v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint8_t *v33;
  uint64_t v34;
  _QWORD v35[2];
  __int128 v36;
  uint64_t *v37;
  char *v38;
  uint8_t *v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD, _QWORD);
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v10);
  v16 = (char *)v35 - v15;
  v17 = *(_QWORD *)(a2 + 16);
  if (v17)
  {
    v18 = *(_QWORD *)(a1 + 16);
    v19 = a2;
    v20 = a2 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v37 = &v48;
    v42 = *(_QWORD *)(v14 + 72);
    v43 = v18;
    v45 = v14;
    v21 = *(void (**)(_QWORD, _QWORD, _QWORD))(v14 + 16);
    v35[0] = v19;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v22 = 136446210;
    v36 = v22;
    v35[1] = MEMORY[0x1E0DEE9B8] + 8;
    v38 = v8;
    v44 = v16;
    v41 = v21;
    do
    {
      v46 = v17;
      v21(v16, v20, v9);
      if (qword_1ED962330 != -1)
        swift_once();
      v23 = sub_1D26CC09C();
      __swift_project_value_buffer(v23, (uint64_t)qword_1ED977D20);
      v21(v12, v16, v9);
      v24 = sub_1D26CC084();
      v25 = sub_1D26CDD04();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        v40 = v3;
        v28 = v27;
        v49 = v27;
        *(_DWORD *)v26 = v36;
        v39 = v26 + 4;
        sub_1D2536488((unint64_t *)&unk_1ED963390, &qword_1ED9633A0, MEMORY[0x1E0D0FB70]);
        v29 = sub_1D26CE370();
        v47 = sub_1D2537880(v29, v30, &v49);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        v31 = *(void (**)(char *, uint64_t))(v45 + 8);
        v31(v12, v9);
        _os_log_impl(&dword_1D2531000, v24, v25, "Clearing descriptor cache for %{public}s", v26, 0xCu);
        swift_arrayDestroy();
        v32 = v28;
        v3 = v40;
        MEMORY[0x1D823A5E0](v32, -1, -1);
        v33 = v26;
        v8 = v38;
        MEMORY[0x1D823A5E0](v33, -1, -1);
      }
      else
      {
        v31 = *(void (**)(char *, uint64_t))(v45 + 8);
        v31(v12, v9);
      }

      v34 = type metadata accessor for ExtensionMetadata();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v8, 1, 1, v34);
      v16 = v44;
      sub_1D2658728((uint64_t)v8, v44);
      sub_1D253703C((uint64_t)v8, &qword_1ED9627C0);
      v31(v16, v9);
      if (v3)
        break;
      v21 = v41;
      v20 += v42;
      v17 = v46 - 1;
    }
    while (v46 != 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D26B4B90(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[4];

  v6[2] = a2;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_1D26B8D30(v3, (uint64_t (*)(id))sub_1D26B8AFC, (uint64_t)v6);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a1 = v4;
  return result;
}

uint64_t sub_1D26B4BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, unint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  unint64_t v18;
  uint64_t i;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t (*v24)(char *, unint64_t, uint64_t);
  void (*v25)(char *, uint64_t);

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v22 - v9;
  sub_1D26CDE48();
  v11 = *(_QWORD *)(a3 + 16);
  if (!v11)
  {
    v14 = *(void (**)(char *, uint64_t))(v5 + 8);
LABEL_7:
    v15 = 1;
LABEL_8:
    v14(v10, v4);
    return v15;
  }
  v23 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v12 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
  v12(v8, a3 + v23, v4);
  sub_1D2536488(&qword_1ED963380, &qword_1ED9633A0, MEMORY[0x1E0D0FB58]);
  swift_bridgeObjectRetain();
  v13 = sub_1D26CD908();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  if ((v13 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v15 = 0;
    goto LABEL_8;
  }
  if (v11 == 1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v24 = (uint64_t (*)(char *, unint64_t, uint64_t))v12;
  v25 = v14;
  v17 = *(_QWORD *)(v5 + 72);
  v22 = a3;
  v18 = a3 + v17 + v23;
  for (i = 1; ; ++i)
  {
    result = v24(v8, v18, v4);
    v20 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v21 = sub_1D26CD908();
    v25(v8, v4);
    if ((v21 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v15 = 0;
      v25(v10, v4);
      return v15;
    }
    v18 += v17;
    if (v20 == v11)
    {
      swift_bridgeObjectRelease();
      v15 = 1;
      v25(v10, v4);
      return v15;
    }
  }
  __break(1u);
  return result;
}

uint64_t WidgetDescriptorCacheUpdate.extensionIdentities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDescriptorCacheUpdate.extensionIdentities.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*WidgetDescriptorCacheUpdate.extensionIdentities.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetDescriptorCacheUpdate.reasons.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDescriptorCacheUpdate.reasons.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WidgetDescriptorCacheUpdate.reasons.modify())()
{
  return CGSizeMake;
}

void sub_1D26B4E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X10 }
}

uint64_t sub_1D26B4EEC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, __int16 a10, char __s2, char a12, char a13, char a14, char a15, char a16, char a17, char a18, char a19, char a20,char a21,char a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  BOOL *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t result;
  uint64_t v42;
  __int16 v43;
  char v44;
  char v45;
  char v46;
  char v47;

  v42 = v39;
  v43 = v40;
  v44 = BYTE2(v40);
  v45 = BYTE3(v40);
  v46 = BYTE4(v40);
  v47 = BYTE5(v40);
  if (!v38)
  {
    __break(1u);
    JUMPOUT(0x1D26B50D0);
  }
  result = memcmp(v38, &v42, BYTE6(v40));
  *v37 = (_DWORD)result == 0;
  return result;
}

uint64_t sub_1D26B50F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = type metadata accessor for ExtensionMetadata();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963980);
  result = sub_1D26CE1FC();
  v6 = (_QWORD *)result;
  v7 = 0;
  v31 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v27 = v9;
  v28 = (unint64_t)(v11 + 63) >> 6;
  v14 = result + 64;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v7 << 6); ; i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    v20 = *(void **)(*(_QWORD *)(v31 + 48) + 8 * i);
    sub_1D2536F34(*(_QWORD *)(v31 + 56) + *(_QWORD *)(v29 + 72) * i, (uint64_t)v4);
    v21 = *(_QWORD *)&v4[*(int *)(v30 + 24)];
    v22 = v20;
    swift_bridgeObjectRetain();
    result = sub_1D26B6EDC((uint64_t)v4);
    *(_QWORD *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v6[6] + 8 * i) = v22;
    *(_QWORD *)(v6[7] + 8 * i) = v21;
    v23 = v6[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v6[2] = v25;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v17 >= v28)
      return (uint64_t)v6;
    v18 = *(_QWORD *)(v27 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v28)
        return (uint64_t)v6;
      v18 = *(_QWORD *)(v27 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v28)
          return (uint64_t)v6;
        v18 = *(_QWORD *)(v27 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_18:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v28)
    return (uint64_t)v6;
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v28)
      return (uint64_t)v6;
    v18 = *(_QWORD *)(v27 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D26B5340(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t result;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t i;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  void *v18;
  unint64_t v19;
  id v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  unint64_t v40;

  v39 = (int *)type metadata accessor for ExtensionMetadata();
  v37 = *((_QWORD *)v39 - 1);
  MEMORY[0x1E0C80A78](v39);
  v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962930);
  result = sub_1D26CE1FC();
  v5 = (_QWORD *)result;
  v6 = 0;
  v38 = a1;
  v9 = *(_QWORD *)(a1 + 64);
  v8 = a1 + 64;
  v7 = v9;
  v10 = 1 << *(_BYTE *)(v8 - 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & v7;
  v34 = v8;
  v35 = (unint64_t)(v10 + 63) >> 6;
  v36 = result + 64;
  if ((v11 & v7) == 0)
    goto LABEL_5;
LABEL_4:
  v13 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v13 | (v6 << 6); ; i = __clz(__rbit64(v16)) + (v6 << 6))
  {
    v18 = *(void **)(*(_QWORD *)(v38 + 48) + 8 * i);
    sub_1D2536F34(*(_QWORD *)(v38 + 56) + *(_QWORD *)(v37 + 72) * i, (uint64_t)v3);
    v19 = *(_QWORD *)&v3[v39[6]];
    if (v19 >> 62)
    {
      sub_1D25CCBDC();
      v29 = v18;
      swift_bridgeObjectRetain();
      v30 = sub_1D26CE1E4();
      swift_bridgeObjectRelease();
      v19 = v30;
    }
    else
    {
      v20 = v18;
      swift_bridgeObjectRetain();
      sub_1D26CE3E8();
      sub_1D25CCBDC();
    }
    v21 = *(_QWORD *)&v3[v39[7]];
    if (v21 >> 62)
    {
      sub_1D25CCBDC();
      swift_bridgeObjectRetain();
      v31 = sub_1D26CE1E4();
      swift_bridgeObjectRelease();
      v21 = v31;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D26CE3E8();
      sub_1D25CCBDC();
    }
    v40 = v19;
    sub_1D25F6BB0(v21);
    v22 = v40;
    v23 = *(_QWORD *)&v3[v39[9]];
    if (v23 >> 62)
    {
      sub_1D25CCBDC();
      swift_bridgeObjectRetain();
      v32 = sub_1D26CE1E4();
      swift_bridgeObjectRelease();
      v23 = v32;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D26CE3E8();
      sub_1D25CCBDC();
    }
    v40 = v22;
    sub_1D25F6BB0(v23);
    v24 = v40;
    result = sub_1D26B6EDC((uint64_t)v3);
    *(_QWORD *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v25 = 8 * i;
    *(_QWORD *)(v5[6] + v25) = v18;
    *(_QWORD *)(v5[7] + v25) = v24;
    v26 = v5[2];
    v27 = __OFADD__(v26, 1);
    v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v5[2] = v28;
    if (v12)
      goto LABEL_4;
LABEL_5:
    v15 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_33;
    if (v15 >= v35)
      return (uint64_t)v5;
    v16 = *(_QWORD *)(v34 + 8 * v15);
    ++v6;
    if (!v16)
    {
      v6 = v15 + 1;
      if (v15 + 1 >= v35)
        return (uint64_t)v5;
      v16 = *(_QWORD *)(v34 + 8 * v6);
      if (!v16)
      {
        v6 = v15 + 2;
        if (v15 + 2 >= v35)
          return (uint64_t)v5;
        v16 = *(_QWORD *)(v34 + 8 * v6);
        if (!v16)
          break;
      }
    }
LABEL_18:
    v12 = (v16 - 1) & v16;
  }
  v17 = v15 + 3;
  if (v17 >= v35)
    return (uint64_t)v5;
  v16 = *(_QWORD *)(v34 + 8 * v17);
  if (v16)
  {
    v6 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    v6 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v6 >= v35)
      return (uint64_t)v5;
    v16 = *(_QWORD *)(v34 + 8 * v6);
    ++v17;
    if (v16)
      goto LABEL_18;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1D26B56F0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = type metadata accessor for ExtensionMetadata();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963250);
  result = sub_1D26CE1FC();
  v6 = (_QWORD *)result;
  v7 = 0;
  v31 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v27 = v9;
  v28 = (unint64_t)(v11 + 63) >> 6;
  v14 = result + 64;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v7 << 6); ; i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    v20 = *(void **)(*(_QWORD *)(v31 + 48) + 8 * i);
    sub_1D2536F34(*(_QWORD *)(v31 + 56) + *(_QWORD *)(v29 + 72) * i, (uint64_t)v4);
    v21 = *(_QWORD *)&v4[*(int *)(v30 + 28)];
    v22 = v20;
    swift_bridgeObjectRetain();
    result = sub_1D26B6EDC((uint64_t)v4);
    *(_QWORD *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v6[6] + 8 * i) = v22;
    *(_QWORD *)(v6[7] + 8 * i) = v21;
    v23 = v6[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v6[2] = v25;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v17 >= v28)
      return (uint64_t)v6;
    v18 = *(_QWORD *)(v27 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v28)
        return (uint64_t)v6;
      v18 = *(_QWORD *)(v27 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v28)
          return (uint64_t)v6;
        v18 = *(_QWORD *)(v27 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_18:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v28)
    return (uint64_t)v6;
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v28)
      return (uint64_t)v6;
    v18 = *(_QWORD *)(v27 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D26B593C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  _QWORD *v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = type metadata accessor for ExtensionMetadata();
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963988);
  result = sub_1D26CE1FC();
  v6 = (_QWORD *)result;
  v7 = 0;
  v31 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v27 = v9;
  v28 = (unint64_t)(v11 + 63) >> 6;
  v14 = result + 64;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v7 << 6); ; i = __clz(__rbit64(v18)) + (v7 << 6))
  {
    v20 = *(void **)(*(_QWORD *)(v31 + 48) + 8 * i);
    sub_1D2536F34(*(_QWORD *)(v31 + 56) + *(_QWORD *)(v29 + 72) * i, (uint64_t)v4);
    v21 = *(_QWORD *)&v4[*(int *)(v30 + 36)];
    v22 = v20;
    swift_bridgeObjectRetain();
    result = sub_1D26B6EDC((uint64_t)v4);
    *(_QWORD *)(v14 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(_QWORD *)(v6[6] + 8 * i) = v22;
    *(_QWORD *)(v6[7] + 8 * i) = v21;
    v23 = v6[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v6[2] = v25;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v17 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v17 >= v28)
      return (uint64_t)v6;
    v18 = *(_QWORD *)(v27 + 8 * v17);
    ++v7;
    if (!v18)
    {
      v7 = v17 + 1;
      if (v17 + 1 >= v28)
        return (uint64_t)v6;
      v18 = *(_QWORD *)(v27 + 8 * v7);
      if (!v18)
      {
        v7 = v17 + 2;
        if (v17 + 2 >= v28)
          return (uint64_t)v6;
        v18 = *(_QWORD *)(v27 + 8 * v7);
        if (!v18)
          break;
      }
    }
LABEL_18:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v28)
    return (uint64_t)v6;
  v18 = *(_QWORD *)(v27 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v28)
      return (uint64_t)v6;
    v18 = *(_QWORD *)(v27 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_1D26B5B88(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, _QWORD *a7)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = a7[7] + 24 * result;
  *(_QWORD *)v8 = a4;
  *(_QWORD *)(v8 + 8) = a5;
  *(_BYTE *)(v8 + 16) = a6;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

uint64_t sub_1D26B5BE0(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1D2539ADC(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  v10 = a4[7];
  v11 = sub_1D26CD56C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

_OWORD *sub_1D26B5C98(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1D2538448(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_1D26B5D00(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1D2538448(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

uint64_t sub_1D26B5D64(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1D26B5E6C(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1D26B5D70(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  sub_1D25384CC(a2, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, &qword_1ED963110);
  result = sub_1D2538F38(a3, a4[7] + 40 * a1);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

unint64_t sub_1D26B5E18(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_1D26B5E60(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  return sub_1D26B5E6C(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F670]);
}

uint64_t sub_1D26B5E6C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(_QWORD))
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v9 = (_QWORD *)(a5[6] + 16 * a1);
  *v9 = a2;
  v9[1] = a3;
  v10 = a5[7];
  v11 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a4, v11);
  v13 = a5[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a5[2] = v15;
  return result;
}

uint64_t sub_1D26B5EFC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a6[(a1 >> 6) + 8] |= 1 << a1;
  v12 = a6[6];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a2, v13);
  v15 = (_QWORD *)(a6[7] + 24 * a1);
  *v15 = a3;
  v15[1] = a4;
  v15[2] = a5;
  v16 = a6[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a6[2] = v18;
  return result;
}

uint64_t sub_1D26B5FB4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1D26B61CC(a1, a2, a3, a4, &qword_1ED96FE70, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t sub_1D26B5FC8(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  result = sub_1D2538F38(a3, a4[7] + 40 * a1);
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1D26B6070(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = type metadata accessor for RemoteActivityArchiveBudget();
  result = sub_1D2539ADC(a4, v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

uint64_t sub_1D26B6100(unint64_t a1, uint64_t a2, __int128 *a3, _QWORD *a4)
{
  uint64_t result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1D2538F38(a3, a4[7] + 40 * a1);
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1D26B6168(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a6[(result >> 6) + 8] |= 1 << result;
  v6 = (_QWORD *)(a6[6] + 16 * result);
  *v6 = a2;
  v6[1] = a3;
  v7 = (_QWORD *)(a6[7] + 16 * result);
  *v7 = a4;
  v7[1] = a5;
  v8 = a6[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a6[2] = v10;
  return result;
}

uint64_t sub_1D26B61B8(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_1D26B61CC(a1, a2, a3, a4, &qword_1ED96FD28, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

uint64_t sub_1D26B61CC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v11 = a4[6];
  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11 + *(_QWORD *)(*(_QWORD *)(v12 - 8) + 72) * a1, a2, v12);
  v13 = a4[7];
  v14 = a6(0);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v13 + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72) * a1, a3, v14);
  v16 = a4[2];
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
    __break(1u);
  else
    a4[2] = v18;
  return result;
}

uint64_t sub_1D26B6288(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

uint64_t sub_1D26B6324(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1D26CBA24();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = type metadata accessor for RemoteActivitySubscription(0);
  result = sub_1D2539ADC(a3, v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, type metadata accessor for RemoteActivitySubscription);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1D26B63DC(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_1D26CBED4();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  v10 = a4[7];
  v11 = sub_1D26CBE5C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a3, v11);
  v13 = a4[2];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    a4[2] = v15;
  return result;
}

uint64_t sub_1D26B6494(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = type metadata accessor for ExtensionMetadata();
  result = sub_1D2539ADC(a3, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_1D26B6520(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  a7[(result >> 6) + 8] |= 1 << result;
  v7 = (_QWORD *)(a7[6] + 16 * result);
  *v7 = a2;
  v7[1] = a3;
  v8 = (_QWORD *)(a7[7] + 24 * result);
  *v8 = a4;
  v8[1] = a5;
  v8[2] = a6;
  v9 = a7[2];
  v10 = __OFADD__(v9, 1);
  v11 = v9 + 1;
  if (v10)
    __break(1u);
  else
    a7[2] = v11;
  return result;
}

uint64_t sub_1D26B6574(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  unint64_t v38;
  BOOL v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v43;
  unint64_t *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;

  v8 = sub_1D26CB9DC();
  v49 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v51 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v48 = (char *)&v43 - v12;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  v47 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962128);
  result = sub_1D26CE214();
  v14 = result;
  v44 = a1;
  v45 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  v18 = v47;
  v19 = v48;
  v46 = a4;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v50 = v16;
      v21 = v20 | (v16 << 6);
    }
    else
    {
      v22 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v22 >= v45)
        return v14;
      v23 = v44[v22];
      v24 = v16 + 1;
      if (!v23)
      {
        v24 = v16 + 2;
        if (v16 + 2 >= v45)
          return v14;
        v23 = v44[v24];
        if (!v23)
        {
          v24 = v16 + 3;
          if (v16 + 3 >= v45)
            return v14;
          v23 = v44[v24];
          if (!v23)
          {
            v25 = v16 + 4;
            if (v16 + 4 >= v45)
              return v14;
            v23 = v44[v25];
            if (!v23)
            {
              while (1)
              {
                v24 = v25 + 1;
                if (__OFADD__(v25, 1))
                  goto LABEL_41;
                if (v24 >= v45)
                  return v14;
                v23 = v44[v24];
                ++v25;
                if (v23)
                  goto LABEL_24;
              }
            }
            v24 = v16 + 4;
          }
        }
      }
LABEL_24:
      v15 = (v23 - 1) & v23;
      v50 = v24;
      v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    v26 = a4[7];
    v27 = (uint64_t *)(a4[6] + 16 * v21);
    v28 = *v27;
    v29 = v27[1];
    v30 = v49;
    v31 = *(_QWORD *)(v49 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v49 + 16))(v19, v26 + v31 * v21, v18);
    v32 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v32(v51, v19, v18);
    sub_1D26CE460();
    swift_bridgeObjectRetain();
    sub_1D26CD9D4();
    result = sub_1D26CE49C();
    v33 = -1 << *(_BYTE *)(v14 + 32);
    v34 = result & ~v33;
    v35 = v34 >> 6;
    if (((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6))) != 0)
    {
      v36 = __clz(__rbit64((-1 << v34) & ~*(_QWORD *)(v17 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      v18 = v47;
    }
    else
    {
      v37 = 0;
      v38 = (unint64_t)(63 - v33) >> 6;
      v18 = v47;
      do
      {
        if (++v35 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v39 = v35 == v38;
        if (v35 == v38)
          v35 = 0;
        v37 |= v39;
        v40 = *(_QWORD *)(v17 + 8 * v35);
      }
      while (v40 == -1);
      v36 = __clz(__rbit64(~v40)) + (v35 << 6);
    }
    *(_QWORD *)(v17 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    v41 = (_QWORD *)(*(_QWORD *)(v14 + 48) + 16 * v36);
    *v41 = v28;
    v41[1] = v29;
    result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(*(_QWORD *)(v14 + 56) + v36 * v31, v51, v18);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v46;
    v16 = v50;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D26B68BC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D26B68D4(a1, a2, a3, a4, &qword_1ED963980);
}

uint64_t sub_1D26B68C8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D26B68D4(a1, a2, a3, a4, &qword_1ED963250);
}

uint64_t sub_1D26B68D4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;

  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  v5 = a4;
  v6 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v5;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  result = sub_1D26CE214();
  v9 = result;
  v31 = a2;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_40;
      if (v15 >= v31)
        return v9;
      v16 = a1[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= v31)
          return v9;
        v16 = a1[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= v31)
            return v9;
          v16 = a1[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= v31)
              return v9;
            v16 = a1[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_41;
                if (v11 >= v31)
                  return v9;
                v16 = a1[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    v20 = *(id *)(*(_QWORD *)(v5 + 48) + v18);
    swift_bridgeObjectRetain();
    result = sub_1D26CDEC0();
    v21 = -1 << *(_BYTE *)(v9 + 32);
    v22 = result & ~v21;
    v23 = v22 >> 6;
    if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v27 = v23 == v26;
        if (v23 == v26)
          v23 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v23);
      }
      while (v28 == -1);
      v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    v29 = 8 * v24;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + v29) = v20;
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + v29) = v19;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v6--, 1))
      break;
    if (!v6)
      return v9;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D26B6B64(unint64_t *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  unint64_t v34;
  BOOL v35;
  uint64_t v36;
  unint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v8 = type metadata accessor for ExtensionMetadata();
  v41 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v40 = (uint64_t)&v38 - v12;
  if (!a3)
    return MEMORY[0x1E0DEE9E0];
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963970);
  result = sub_1D26CE214();
  v14 = result;
  v38 = a1;
  v39 = a2;
  if (a2 < 1)
    v15 = 0;
  else
    v15 = *a1;
  v16 = 0;
  v17 = result + 64;
  while (1)
  {
    if (v15)
    {
      v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v19 = v18 | (v16 << 6);
    }
    else
    {
      v20 = v16 + 1;
      if (__OFADD__(v16, 1))
        goto LABEL_40;
      if (v20 >= v39)
        return v14;
      v21 = v38[v20];
      ++v16;
      if (!v21)
      {
        v16 = v20 + 1;
        if (v20 + 1 >= v39)
          return v14;
        v21 = v38[v16];
        if (!v21)
        {
          v16 = v20 + 2;
          if (v20 + 2 >= v39)
            return v14;
          v21 = v38[v16];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v39)
              return v14;
            v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                v16 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v16 >= v39)
                  return v14;
                v21 = v38[v16];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v16 = v22;
          }
        }
      }
LABEL_24:
      v15 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v16 << 6);
    }
    v23 = a4[7];
    v24 = a4;
    v25 = *(void **)(a4[6] + 8 * v19);
    v26 = v40;
    v27 = *(_QWORD *)(v41 + 72);
    sub_1D2536F34(v23 + v27 * v19, v40);
    sub_1D2539ADC(v26, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    v28 = v25;
    result = sub_1D26CDEC0();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v17 + 8 * (v30 >> 6))) != 0)
    {
      v32 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v17 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v33 = 0;
      v34 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v35 = v31 == v34;
        if (v31 == v34)
          v31 = 0;
        v33 |= v35;
        v36 = *(_QWORD *)(v17 + 8 * v31);
      }
      while (v36 == -1);
      v32 = __clz(__rbit64(~v36)) + (v31 << 6);
    }
    *(_QWORD *)(v17 + ((v32 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v32;
    *(_QWORD *)(*(_QWORD *)(v14 + 48) + 8 * v32) = v28;
    result = sub_1D2539ADC((uint64_t)v11, *(_QWORD *)(v14 + 56) + v32 * v27, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    ++*(_QWORD *)(v14 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v24;
    if (!a3)
      return v14;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1D26B6E74(uint64_t a1)
{
  swift_unknownObjectWeakDestroy();
  return a1;
}

unint64_t sub_1D26B6E98()
{
  unint64_t result;

  result = qword_1EFC83870;
  if (!qword_1EFC83870)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for DescriptorMatchError, &type metadata for DescriptorMatchError);
    atomic_store(result, (unint64_t *)&qword_1EFC83870);
  }
  return result;
}

uint64_t sub_1D26B6EDC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D26B6F18(id *a1)
{
  return (unint64_t)sub_1D26AD790(a1) & 1;
}

uint64_t sub_1D26B6F34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t *v23;
  uint64_t v24;

  v6 = v5;
  v22 = a4;
  v23 = a5;
  v20 = a2;
  v21 = a3;
  v8 = type metadata accessor for ExtensionMetadata();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = MEMORY[0x1E0DEE9D8];
  if (v12)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1D2584448(0, v12, 0);
    v13 = v24;
    v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v15 = a1 + v14;
    v16 = *(_QWORD *)(v9 + 72);
    while (1)
    {
      sub_1D26B079C(v15, v20, v21, v22, v23, (unint64_t)v11);
      if (v6)
        break;
      v6 = 0;
      v24 = v13;
      v18 = *(_QWORD *)(v13 + 16);
      v17 = *(_QWORD *)(v13 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_1D2584448(v17 > 1, v18 + 1, 1);
        v13 = v24;
      }
      *(_QWORD *)(v13 + 16) = v18 + 1;
      sub_1D2539ADC((uint64_t)v11, v13 + v14 + v18 * v16, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      v15 += v16;
      if (!--v12)
        return v13;
    }
    swift_release();
  }
  return v13;
}

_QWORD *sub_1D26B708C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjectType;
  void (*v9)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  unint64_t v13;
  __int128 v15;
  uint64_t v16;
  __int128 v17[2];
  uint64_t v18;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(type metadata accessor for ExtensionMetadata() - 8);
  v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  swift_bridgeObjectRetain();
  ObjectType = swift_getObjectType();
  v9 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t))(a3 + 16);
  v10 = *(_QWORD *)(v6 + 72);
  v11 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v18 = a3;
  v9(&v15, v7, ObjectType, a3);
  while (1)
  {
    if (v16)
    {
      sub_1D2538F38(&v15, (uint64_t)v17);
      sub_1D2538F38(v17, (uint64_t)&v15);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v11 = sub_1D2538F50(0, v11[2] + 1, 1, v11);
      v13 = v11[2];
      v12 = v11[3];
      if (v13 >= v12 >> 1)
        v11 = sub_1D2538F50((_QWORD *)(v12 > 1), v13 + 1, 1, v11);
      v11[2] = v13 + 1;
      sub_1D2538F38(&v15, (uint64_t)&v11[5 * v13 + 4]);
      a3 = v18;
    }
    else
    {
      sub_1D253703C((uint64_t)&v15, &qword_1ED962040);
    }
    v7 += v10;
    if (!--v3)
      break;
    v9(&v15, v7, ObjectType, a3);
  }
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1D26B7218(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  char *v25;
  _OWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v5 = type metadata accessor for ExtensionMetadata();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v23 - v10;
  result = MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v14 = *(unsigned __int8 *)(v9 + 80);
    v15 = *(_QWORD *)(v9 + 72);
    v23[1] = v2;
    v24 = (v14 + 32) & ~v14;
    v16 = a1 + v24;
    v17 = MEMORY[0x1E0DEE9D8];
    v25 = v8;
    do
    {
      sub_1D2536F34(v16, (uint64_t)v11);
      if (*(_QWORD *)(a2 + 16) && (v18 = sub_1D25363D0((uint64_t)v11), (v19 & 1) != 0))
      {
        sub_1D2538510(*(_QWORD *)(a2 + 56) + 40 * v18, (uint64_t)v26);
        sub_1D253703C((uint64_t)v26, &qword_1ED962040);
        sub_1D2539ADC((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D2584448(0, *(_QWORD *)(v17 + 16) + 1, 1);
        v17 = v28;
        v21 = *(_QWORD *)(v28 + 16);
        v20 = *(_QWORD *)(v28 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1D2584448(v20 > 1, v21 + 1, 1);
          v17 = v28;
        }
        *(_QWORD *)(v17 + 16) = v21 + 1;
        v22 = v17 + v24 + v21 * v15;
        v8 = v25;
        sub_1D2539ADC((uint64_t)v25, v22, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      }
      else
      {
        v27 = 0;
        memset(v26, 0, sizeof(v26));
        sub_1D253703C((uint64_t)v26, &qword_1ED962040);
        sub_1D26B6EDC((uint64_t)v11);
      }
      v16 += v15;
      --v13;
    }
    while (v13);
    return v28;
  }
  return result;
}

uint64_t sub_1D26B7410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[2];
  uint64_t v24;
  unint64_t v25;
  _OWORD v26[2];
  uint64_t v27;
  uint64_t v28;

  v5 = type metadata accessor for ExtensionMetadata();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v23 - v10;
  result = MEMORY[0x1E0DEE9D8];
  v28 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a1 + 16);
  if (v13)
  {
    v23[1] = v2;
    v14 = *(_QWORD *)(v9 + 72);
    v25 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v15 = a1 + v25;
    v16 = MEMORY[0x1E0DEE9D8];
    v24 = a2;
    do
    {
      sub_1D2536F34(v15, (uint64_t)v11);
      if (*(_QWORD *)(a2 + 16) && (v17 = sub_1D25363D0((uint64_t)v11), (v18 & 1) != 0))
      {
        sub_1D2538510(*(_QWORD *)(a2 + 56) + 40 * v17, (uint64_t)v26);
        sub_1D253703C((uint64_t)v26, &qword_1ED962040);
        sub_1D26B6EDC((uint64_t)v11);
      }
      else
      {
        v27 = 0;
        memset(v26, 0, sizeof(v26));
        sub_1D253703C((uint64_t)v26, &qword_1ED962040);
        v19 = (uint64_t)v8;
        sub_1D2539ADC((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D2584448(0, *(_QWORD *)(v16 + 16) + 1, 1);
        v16 = v28;
        v21 = *(_QWORD *)(v28 + 16);
        v20 = *(_QWORD *)(v28 + 24);
        if (v21 >= v20 >> 1)
        {
          sub_1D2584448(v20 > 1, v21 + 1, 1);
          v16 = v28;
        }
        *(_QWORD *)(v16 + 16) = v21 + 1;
        v22 = v16 + v25 + v21 * v14;
        v8 = (char *)v19;
        sub_1D2539ADC(v19, v22, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
        a2 = v24;
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v28;
  }
  return result;
}

uint64_t sub_1D26B7608(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  BOOL v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v5 = (int *)type metadata accessor for ExtensionMetadata();
  v6 = MEMORY[0x1E0C80A78](v5);
  v41 = (uint64_t)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v35 - v9;
  MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v35 - v12;
  result = MEMORY[0x1E0DEE9D8];
  v48 = MEMORY[0x1E0DEE9D8];
  v39 = *(_QWORD *)(a1 + 16);
  if (v39)
  {
    v15 = 0;
    v16 = *(_QWORD *)(v11 + 72);
    v37 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v38 = a1 + v37;
    v35[1] = v2;
    v36 = a2 + v37;
    v17 = MEMORY[0x1E0DEE9D8];
    v40 = a2;
    while (1)
    {
      v42 = v17;
      v43 = v15;
      sub_1D2536F34(v38 + v16 * v15, (uint64_t)v13);
      v18 = *(_QWORD *)(a2 + 16);
      if (v18)
        break;
LABEL_30:
      sub_1D2539ADC((uint64_t)v13, v41, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      v32 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D2584448(0, *(_QWORD *)(v32 + 16) + 1, 1);
      v17 = v48;
      v34 = *(_QWORD *)(v48 + 16);
      v33 = *(_QWORD *)(v48 + 24);
      if (v34 >= v33 >> 1)
      {
        sub_1D2584448(v33 > 1, v34 + 1, 1);
        v17 = v48;
      }
      *(_QWORD *)(v17 + 16) = v34 + 1;
      sub_1D2539ADC(v41, v17 + v37 + v34 * v16, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
      a2 = v40;
LABEL_35:
      v15 = v43 + 1;
      if (v43 + 1 == v39)
        return v48;
    }
    swift_bridgeObjectRetain();
    v19 = v36;
    while (1)
    {
      sub_1D2536F34(v19, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
      sub_1D2536488(&qword_1ED963388, &qword_1ED9633A0, MEMORY[0x1E0D0FB60]);
      sub_1D26CDAC4();
      sub_1D26CDAC4();
      if (v46 == v44 && v47 == v45)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v21 = sub_1D26CE3D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v21 & 1) == 0)
          goto LABEL_6;
      }
      v22 = v5[5];
      v23 = *(_QWORD *)&v10[v22];
      v24 = *(_QWORD *)&v10[v22 + 8];
      v25 = &v13[v22];
      v26 = v23 == *(_QWORD *)v25 && v24 == *((_QWORD *)v25 + 1);
      if (!v26 && (sub_1D26CE3D0() & 1) == 0
        || (sub_1D2539854(*(_QWORD *)&v10[v5[6]], *(_QWORD *)&v13[v5[6]]) & 1) == 0
        || (sub_1D2686ED4(*(_QWORD *)&v10[v5[7]], *(_QWORD *)&v13[v5[7]]) & 1) == 0)
      {
        goto LABEL_6;
      }
      v27 = v5[8];
      v28 = &v10[v27];
      v29 = *(_QWORD *)&v10[v27 + 8];
      v30 = &v13[v27];
      v31 = *((_QWORD *)v30 + 1);
      if (v29)
      {
        if (!v31 || (*(_QWORD *)v28 != *(_QWORD *)v30 || v29 != v31) && (sub_1D26CE3D0() & 1) == 0)
          goto LABEL_6;
      }
      else if (v31)
      {
        goto LABEL_6;
      }
      if ((sub_1D253954C(*(_QWORD *)&v10[v5[9]], *(_QWORD *)&v13[v5[9]]) & 1) != 0)
      {
        sub_1D26B6EDC((uint64_t)v10);
        a2 = v40;
        swift_bridgeObjectRelease();
        sub_1D26B6EDC((uint64_t)v13);
        v17 = v42;
        goto LABEL_35;
      }
LABEL_6:
      sub_1D26B6EDC((uint64_t)v10);
      v19 += v16;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
    }
  }
  return result;
}

uint64_t sub_1D26B7998(uint64_t result, uint64_t *a2, uint64_t *a3, NSObject *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t *v14;
  NSObject *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20[2];
  __int128 v21[2];
  uint64_t v22;

  v5 = result;
  v6 = *(_QWORD *)(result + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  v22 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v11 = 0;
    v12 = result + 32;
    v18 = v6;
    v19 = result;
    while (v11 < *(_QWORD *)(v5 + 16))
    {
      sub_1D2538510(v12, (uint64_t)v21);
      v13 = sub_1D26B13B4(v21, a2, a3, a4);
      if (v4)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
        swift_release();
        swift_bridgeObjectRelease();
        return v7;
      }
      if ((v13 & 1) != 0)
      {
        v14 = a3;
        v15 = a4;
        sub_1D2538F38(v21, (uint64_t)v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D25844F8(0, *(_QWORD *)(v7 + 16) + 1, 1);
        v7 = v22;
        v17 = *(_QWORD *)(v22 + 16);
        v16 = *(_QWORD *)(v22 + 24);
        if (v17 >= v16 >> 1)
        {
          sub_1D25844F8(v16 > 1, v17 + 1, 1);
          v7 = v22;
        }
        *(_QWORD *)(v7 + 16) = v17 + 1;
        result = sub_1D2538F38(v20, v7 + 40 * v17 + 32);
        a4 = v15;
        a3 = v14;
        v6 = v18;
        v5 = v19;
      }
      else
      {
        result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      }
      ++v11;
      v12 += 40;
      if (v6 == v11)
      {
        v7 = v22;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v7;
  }
  return result;
}

uint64_t sub_1D26B7B34(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, unint64_t, uint64_t);
  uint64_t v23;
  _BYTE *v24;
  char v25;
  void (*v26)(_BYTE *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE v38[16];
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  _BYTE *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v42 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v45 = *(_QWORD **)(v3 - 8);
  v46 = v3;
  v4 = MEMORY[0x1E0C80A78](v3);
  v44 = &v38[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v48 = &v38[-v7];
  result = MEMORY[0x1E0DEE9D8];
  v55 = MEMORY[0x1E0DEE9D8];
  v41 = *(_QWORD *)(a1 + 16);
  if (v41)
  {
    v9 = 0;
    v40 = a1 + 32;
    *(_QWORD *)&v6 = 138543362;
    v39 = v6;
    do
    {
      v43 = v9;
      sub_1D2538510(v40 + 40 * v9, (uint64_t)&v52);
      v10 = *v42;
      v12 = v53;
      v11 = v54;
      __swift_project_boxed_opaque_existential_0(&v52, v53);
      v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 40);
      swift_bridgeObjectRetain();
      v14 = (void *)v13(v12, v11);
      sub_1D26CDE48();

      v47 = v10;
      if (*(_QWORD *)(v10 + 16)
        && (v15 = v47,
            sub_1D2536488((unint64_t *)&unk_1ED963370, &qword_1ED9633A0, MEMORY[0x1E0D0FB50]),
            v16 = sub_1D26CD8CC(),
            v17 = -1 << *(_BYTE *)(v15 + 32),
            v18 = v16 & ~v17,
            v19 = v15 + 56,
            ((*(_QWORD *)(v19 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) != 0))
      {
        v20 = ~v17;
        v21 = v45[9];
        v22 = (void (*)(_BYTE *, unint64_t, uint64_t))v45[2];
        while (1)
        {
          v23 = v46;
          v24 = v44;
          v22(v44, *(_QWORD *)(v47 + 48) + v21 * v18, v46);
          sub_1D2536488(&qword_1ED963380, &qword_1ED9633A0, MEMORY[0x1E0D0FB58]);
          v25 = sub_1D26CD908();
          v26 = (void (*)(_BYTE *, uint64_t))v45[1];
          v26(v24, v23);
          if ((v25 & 1) != 0)
            break;
          v18 = (v18 + 1) & v20;
          if (((*(_QWORD *)(v19 + ((v18 >> 3) & 0xFFFFFFFFFFFFF8)) >> v18) & 1) == 0)
            goto LABEL_11;
        }
        swift_bridgeObjectRelease();
        v26(v48, v46);
        if (qword_1ED962330 != -1)
          swift_once();
        v30 = sub_1D26CC09C();
        __swift_project_value_buffer(v30, (uint64_t)qword_1ED977D20);
        sub_1D2538510((uint64_t)&v52, (uint64_t)&v49);
        v31 = sub_1D26CC084();
        v32 = sub_1D26CDD04();
        if (os_log_type_enabled(v31, v32))
        {
          v33 = swift_slowAlloc();
          v34 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v33 = v39;
          v35 = v50;
          v36 = v51;
          __swift_project_boxed_opaque_existential_0(&v49, v50);
          v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 40))(v35, v36);
          *(_QWORD *)(v33 + 4) = v37;
          *v34 = v37;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
          _os_log_impl(&dword_1D2531000, v31, v32, "Pending descriptor fetch already exists for %{public}@", (uint8_t *)v33, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v34, -1, -1);
          MEMORY[0x1D823A5E0](v33, -1, -1);
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v49);
        }

        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v52);
      }
      else
      {
LABEL_11:
        swift_bridgeObjectRelease();
        ((void (*)(_BYTE *, uint64_t))v45[1])(v48, v46);
        sub_1D2538F38(&v52, (uint64_t)&v49);
        v27 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D25844F8(0, *(_QWORD *)(v27 + 16) + 1, 1);
          v27 = v55;
        }
        v29 = *(_QWORD *)(v27 + 16);
        v28 = *(_QWORD *)(v27 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_1D25844F8(v28 > 1, v29 + 1, 1);
          v27 = v55;
        }
        *(_QWORD *)(v27 + 16) = v29 + 1;
        sub_1D2538F38(&v49, v27 + 40 * v29 + 32);
      }
      v9 = v43 + 1;
    }
    while (v43 + 1 != v41);
    return v55;
  }
  return result;
}

id sub_1D26B7F84(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id result;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD v28[2];
  __int128 v29;
  uint64_t *v30;
  unint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963298);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for ExtensionMetadata();
  v5 = *(_QWORD *)(v37 - 8);
  v6 = MEMORY[0x1E0C80A78](v37);
  v33 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v32 = (char *)v28 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v28 - v10;
  sub_1D26CB6F4();
  swift_allocObject();
  v12 = sub_1D26CB6E8();
  v36 = *(_QWORD *)(a1 + 16);
  if (!v36)
  {
    swift_release();
    return (id)MEMORY[0x1E0DEE9D8];
  }
  v41 = v12;
  v31 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v35 = a1 + v31;
  v39 = *(_QWORD *)(v5 + 72);
  v30 = &v44;
  v28[0] = a1;
  swift_bridgeObjectRetain();
  v13 = 0;
  v34 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)&v14 = 136380675;
  v29 = v14;
  v28[1] = MEMORY[0x1E0DEE9B8] + 8;
  v38 = v11;
  while (1)
  {
    sub_1D2536F34(v35 + v39 * v13, (uint64_t)v11);
    v15 = *(_QWORD *)&v11[*(int *)(v37 + 36)];
    if (v15 >> 62)
      break;
    v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v40 = v13;
    if (v16)
      goto LABEL_6;
LABEL_3:
    swift_bridgeObjectRelease();
    v11 = v38;
    sub_1D26B6EDC((uint64_t)v38);
    v13 = v40 + 1;
    if (v40 + 1 == v36)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (id)v34;
    }
  }
  swift_bridgeObjectRetain();
  v16 = sub_1D26CE1F0();
  v40 = v13;
  if (!v16)
    goto LABEL_3;
LABEL_6:
  v17 = sub_1D26CBAF0();
  v42 = v15 & 0xC000000000000001;
  v18 = 4;
  while (1)
  {
    v19 = v18 - 4;
    if (!v42)
      break;
    result = (id)MEMORY[0x1D8239890](v18 - 4, v15);
    v21 = v18 - 3;
    if (__OFADD__(v19, 1))
      goto LABEL_18;
LABEL_12:
    v43 = v21;
    v22 = result;
    v23 = objc_msgSend(result, sel_activityAttributesType);
    v24 = (uint64_t)v4;
    v25 = sub_1D26CB8E0();
    v27 = v26;

    sub_1D25369B0(&qword_1ED963290, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F848]);
    sub_1D26CB6DC();
    sub_1D253EE04(v25, v27);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v24, 0, 1, v17);

    sub_1D253703C(v24, &qword_1ED963298);
    ++v18;
    v4 = (char *)v24;
    if (v43 == v16)
      goto LABEL_3;
  }
  result = *(id *)(v15 + 8 * v18);
  v21 = v18 - 3;
  if (!__OFADD__(v19, 1))
    goto LABEL_12;
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1D26B856C(uint64_t result, uint64_t a2, void (*a3)(unint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 32);
  if (v3)
  {
    swift_bridgeObjectRetain();
    a3(0xD000000000000015, 0x80000001D26E65F0, v3, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D26B8768(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of WidgetDescriptorProvider.migrateCachedDescriptorIfNecessary(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of WidgetDescriptorProvider.fetchExtension(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of WidgetDescriptorProvider.loadDescriptors(from:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.descriptorUpdatePublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.widgetDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.initialize(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.populate(for:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 32))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.refetch(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.hasAnyVersionCached(extension:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.clear(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.fillCache(for:descriptors:controlDescriptors:activityDescriptors:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.controlDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.controlDescriptors(containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.controlDescriptorsByExtensionIdentity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.activityDescriptorsByExtensionIdentity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.activityDescriptor(targeting:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.activityDescriptors(containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 112))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.activityDescriptor(for:containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.allDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of WidgetDescriptorCaching.allDescriptors(extensionIdentity:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t type metadata accessor for WidgetDescriptorCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetDescriptorCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetDescriptorCache.__allocating_init(backingStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t initializeBufferWithCopyOfBuffer for DescriptorMatchError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for DescriptorMatchError(id *a1)
{

}

uint64_t assignWithCopy for DescriptorMatchError(uint64_t a1, uint64_t a2)
{
  id v3;
  char v4;
  id v5;
  void *v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for DescriptorMatchError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

ValueMetadata *type metadata accessor for DescriptorMatchError()
{
  return &type metadata for DescriptorMatchError;
}

uint64_t destroy for WidgetDescriptorCacheUpdate()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9ChronoKit27WidgetDescriptorCacheUpdateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WidgetDescriptorCacheUpdate(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for WidgetDescriptorCacheUpdate(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for WidgetDescriptorCacheUpdate()
{
  return &type metadata for WidgetDescriptorCacheUpdate;
}

uint64_t sub_1D26B8A9C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1D26ACF04(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1D26B8AB4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;

  return sub_1D26B39D0(a1, *(_QWORD **)(v2 + 16), a2);
}

uint64_t sub_1D26B8ACC(uint64_t a1)
{
  uint64_t v1;

  return sub_1D26B465C(a1, *(char **)(v1 + 16));
}

uint64_t sub_1D26B8AE8(void *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D26B3D18(a1, a2, *(_QWORD *)(v2 + 16), (_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72), *(uint64_t (**)(_QWORD *))(v2 + 80), *(_QWORD *)(v2 + 88));
}

uint64_t sub_1D26B8AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D26B4BFC(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1D26B8B04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(id))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  void *v16;
  id v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t (*v27)(id);

  v22 = a2;
  v27 = a4;
  v23 = a1;
  v5 = type metadata accessor for ExtensionMetadata();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = *(_QWORD *)(a3 + 64);
  v24 = 0;
  v25 = a3 + 64;
  v11 = 1 << *(_BYTE *)(a3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v26 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v26)
      goto LABEL_24;
    v19 = *(_QWORD *)(v25 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v26)
        goto LABEL_24;
      v19 = *(_QWORD *)(v25 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v26)
          goto LABEL_24;
        v19 = *(_QWORD *)(v25 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v13 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    v16 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v15);
    sub_1D2536F34(*(_QWORD *)(a3 + 56) + *(_QWORD *)(v6 + 72) * v15, (uint64_t)v8);
    v17 = v16;
    LOBYTE(v16) = v27(v17);
    sub_1D26B6EDC((uint64_t)v8);

    if ((v16 & 1) != 0)
    {
      *(unint64_t *)((char *)v23 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v24++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1D26B6B64(v23, v22, v24, (_QWORD *)a3);
        return;
      }
    }
  }
  v20 = v18 + 3;
  if (v20 >= v26)
    goto LABEL_24;
  v19 = *(_QWORD *)(v25 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v26)
      goto LABEL_24;
    v19 = *(_QWORD *)(v25 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1D26B8D30(uint64_t isStackAllocationSafe, uint64_t (*a2)(id), uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v14[2];

  v6 = isStackAllocationSafe;
  v14[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(isStackAllocationSafe + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_1D26B8B04((_QWORD *)((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, v6, a2);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    sub_1D26B8B04((unint64_t *)v11, v8, v6, a2);
    a3 = v12;
    MEMORY[0x1D823A5E0](v11, -1, -1);
  }
  return a3;
}

unint64_t sub_1D26B8EA0(id *a1)
{
  uint64_t v1;

  return (unint64_t)sub_1D26AE14C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24)) & 1;
}

uint64_t sub_1D26B8EBC(id *a1)
{
  uint64_t v1;

  return sub_1D26AD9B8(a1, *(_QWORD *)(v1 + 16)) & 1;
}

uint64_t sub_1D26B8EDC(id *a1)
{
  return sub_1D26B8EBC(a1) & 1;
}

uint64_t sub_1D26B8EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963178);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED963058);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D26CB880();
  v15 = *(_QWORD *)(v14 - 8);
  v31 = v14;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v17, a1);
  v18 = a2;
  v30 = a2;
  sub_1D2534120(a2, (uint64_t)v13, type metadata accessor for ActivityKey);
  v19 = type metadata accessor for ActivityKey(0);
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v20(v13, 0, 1, v19);
  v21 = v18 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110) + 68);
  v29 = v10;
  sub_1D2534120(v21, (uint64_t)v10, type metadata accessor for ActivityVariantKey);
  v22 = type metadata accessor for ActivityVariantKey(0);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v23(v10, 0, 1, v22);
  v24 = (uint64_t)&v7[*(int *)(v5 + 68)];
  v20((char *)v24, 1, 1, v19);
  v25 = (uint64_t)&v7[*(int *)(v5 + 72)];
  v23((char *)v25, 1, 1, v22);
  v26 = v31;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, v17, v31);
  sub_1D25AB51C((uint64_t)v13, v24, qword_1ED963058);
  sub_1D25AB51C((uint64_t)v29, v25, &qword_1ED963178);
  sub_1D25384CC((uint64_t)v7, v33, &qword_1ED9630E0);
  sub_1D253703C(v30, &qword_1ED963110);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v32, v26);
}

uint64_t ExtensionManager.systemDataURL(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (**v14)(char *, uint64_t);
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, _QWORD, uint64_t);
  uint64_t v22;
  void (**v23)(char *, uint64_t);
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void (**v45)(char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v49 = a2;
  v44 = sub_1D26CB790();
  v3 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1D26CB880();
  v50 = *(_QWORD *)(v48 - 8);
  v6 = MEMORY[0x1E0C80A78](v48);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v45 = (void (**)(char *, uint64_t))((char *)&v42 - v9);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v10 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v14 = *(void (***)(char *, uint64_t))(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *MEMORY[0x1E0D0FE10];
  v47 = a1;
  v18 = (uint64_t *)(a1 + v17);
  swift_beginAccess();
  v19 = v18[1];
  if (v19)
  {
    v20 = *v18;
    swift_bridgeObjectRetain();
    sub_1D26CBCC4();
    v51 = v20;
    v52 = v19;
    v21 = *(void (**)(char *, _QWORD, uint64_t))(v3 + 104);
    v22 = v44;
    v21(v5, *MEMORY[0x1E0CAFD60], v44);
    v43 = sub_1D257293C();
    v23 = v45;
    sub_1D26CB874();
    v24 = *(void (**)(char *, uint64_t))(v3 + 8);
    v24(v5, v22);
    swift_bridgeObjectRelease();
    v25 = v50;
    v26 = *(void (**)(char *, uint64_t))(v50 + 8);
    v27 = v48;
    v26(v8, v48);
    swift_beginAccess();
    v28 = sub_1D26CBC88();
    v30 = v29;
    swift_endAccess();
    v51 = v28;
    v52 = v30;
    v21(v5, *MEMORY[0x1E0CAFD78], v22);
    v31 = v49;
    sub_1D26CB874();
    v24(v5, v22);
    swift_bridgeObjectRelease();
    v26((char *)v23, v27);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v31, 0, 1, v27);
  }
  else
  {
    v45 = v14;
    v33 = v43;
    v34 = v46;
    v36 = v48;
    v35 = v49;
    sub_1D26CDE48();
    sub_1D26CBD24();
    if (v37)
    {
      swift_bridgeObjectRelease();
      v38 = *(_QWORD *)(v33 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v38 + 24));
      sub_1D25D7DC4((uint64_t *)(v38 + 16), (uint64_t)v16, (uint64_t)&v51);
      os_unfair_lock_unlock((os_unfair_lock_t)(v38 + 24));
      swift_release();
    }
    else
    {
      sub_1D26CBD54();
      sub_1D2535558((uint64_t)v12, (uint64_t)&v51);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v34);
    }
    v39 = v50;
    v45[1](v16, v13);
    v40 = v53;
    if (v53)
    {
      v41 = v54;
      __swift_project_boxed_opaque_existential_0(&v51, v53);
      (*(void (**)(uint64_t, uint64_t))(v41 + 104))(v40, v41);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v36);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
    }
    else
    {
      sub_1D253703C((uint64_t)&v51, &qword_1ED962040);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v39 + 56))(v35, 1, 1, v36);
    }
  }
}

uint64_t sub_1D26B9598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ExtensionManager.systemDataURL(for:)(a1, a2);
}

uint64_t sub_1D26B95B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v36 = a2;
  v4 = sub_1D26CB790();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CB880();
  v35 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - v12;
  v14 = (uint64_t *)(a1 + *MEMORY[0x1E0D0FE10]);
  swift_beginAccess();
  v15 = v14[1];
  if (v15)
  {
    v16 = *v14;
    swift_bridgeObjectRetain();
    sub_1D26CBCC4();
    v37 = v16;
    v38 = v15;
    v17 = *MEMORY[0x1E0CAFD60];
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
    v34(v7, v17, v4);
    v33 = sub_1D257293C();
    sub_1D26CB874();
    v18 = *(void (**)(char *, uint64_t))(v5 + 8);
    v18(v7, v4);
    swift_bridgeObjectRelease();
    v19 = v35;
    v20 = *(void (**)(char *, uint64_t))(v35 + 8);
    v20(v11, v8);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    v21 = sub_1D26CBC88();
    v23 = v22;
    swift_endAccess();
    v37 = v21;
    v38 = v23;
    v34(v7, *MEMORY[0x1E0CAFD78], v4);
    v24 = v36;
    sub_1D26CB874();
    v18(v7, v4);
    swift_bridgeObjectRelease();
    v20(v13, v8);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v19 + 56))(v24, 0, 1, v8);
  }
  else
  {
    v26 = v35;
    v27 = v2 + 2;
    v29 = v2[5];
    v28 = v2[6];
    __swift_project_boxed_opaque_existential_0(v27, v29);
    ExtensionManaging.extension(for:)(a1, v29, v28);
    v30 = v39;
    if (v39)
    {
      v31 = v40;
      __swift_project_boxed_opaque_existential_0(&v37, v39);
      v32 = v36;
      (*(void (**)(uint64_t, uint64_t))(v31 + 104))(v30, v31);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v26 + 56))(v32, 0, 1, v8);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v37);
    }
    else
    {
      sub_1D253703C((uint64_t)&v37, &qword_1ED962040);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v36, 1, 1, v8);
    }
  }
}

uint64_t sub_1D26B98B0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1D26B98D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D26B95B8(a1, a2);
}

uint64_t LSApplicationRecordSystemDataURLProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t LSApplicationRecordSystemDataURLProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D26B990C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  void (*v39)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v46 = a2;
  v3 = sub_1D26CB790();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CB880();
  v44 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v42 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v42 - v17;
  v19 = *MEMORY[0x1E0D0FE10];
  v45 = a1;
  v20 = (uint64_t *)(a1 + v19);
  swift_beginAccess();
  v21 = v20[1];
  if (v21)
  {
    v22 = *v20;
    swift_bridgeObjectRetain();
    sub_1D26CBCC4();
    v47 = v22;
    v48 = v21;
    v23 = *MEMORY[0x1E0CAFD60];
    v43 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
    v43(v6, v23, v3);
    sub_1D257293C();
    sub_1D26CB874();
    v24 = *(void (**)(char *, uint64_t))(v4 + 8);
    v24(v6, v3);
    swift_bridgeObjectRelease();
    v25 = v44;
    v26 = *(void (**)(char *, uint64_t))(v44 + 8);
    v26(v10, v7);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    v27 = sub_1D26CBC88();
    v29 = v28;
    swift_endAccess();
    v47 = v27;
    v48 = v29;
    v43(v6, *MEMORY[0x1E0CAFD78], v3);
    v30 = v46;
    sub_1D26CB874();
    v24(v6, v3);
    swift_bridgeObjectRelease();
    v26(v12, v7);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v25 + 56))(v30, 0, 1, v7);
  }
  else
  {
    v32 = v44;
    v33 = v46;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    sub_1D26CBC88();
    swift_endAccess();
    v34 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
    v35 = sub_1D2536A30();
    v36 = v35;
    if (v35)
    {
      v37 = objc_msgSend(v35, sel_dataContainerURL);
      if (v37)
      {
        v38 = v37;
        sub_1D26CB850();

        v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
        v39(v16, 0, 1, v7);
      }
      else
      {
        v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
        v39(v16, 1, 1, v7);
      }
      sub_1D25384CC((uint64_t)v16, (uint64_t)v18, (uint64_t *)&unk_1ED96FC50);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v18, 1, v7) == 1)
      {

        sub_1D253703C((uint64_t)v18, (uint64_t *)&unk_1ED96FC50);
        v40 = v33;
        v41 = 1;
      }
      else
      {
        sub_1D26CB814();

        (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v7);
        v40 = v33;
        v41 = 0;
      }
      return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v39)(v40, v41, 1, v7);
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v33, 1, 1, v7);
    }
  }
}

uint64_t LSApplicationRecordSystemDataURLProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t LSApplicationRecordSystemDataURLProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D26B9D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D26B990C(a1, a2);
}

uint64_t sub_1D26B9D70()
{
  uint64_t v0;

  v0 = sub_1D26BA9E0();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1D26B9DA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + 32, a1);
}

_QWORD *ExtensionSystemDataCacheKeyProvider.__allocating_init(subsystemIdentifier:systemDataURLProvider:fileManager:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  sub_1D2538F38(a3, (uint64_t)(v8 + 4));
  v8[9] = a4;
  return v8;
}

_QWORD *ExtensionSystemDataCacheKeyProvider.init(subsystemIdentifier:systemDataURLProvider:fileManager:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  _QWORD *v4;

  v4[2] = a1;
  v4[3] = a2;
  sub_1D2538F38(a3, (uint64_t)(v4 + 4));
  v4[9] = a4;
  return v4;
}

id sub_1D26B9E48()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v1 = *v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CB880();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2538510((uint64_t)(v0 + 4), (uint64_t)v17);
  v9 = v18;
  v10 = v19;
  __swift_project_boxed_opaque_existential_0(v17, v18);
  v11 = (void *)(*(uint64_t (**)(_QWORD))(*(_QWORD *)(v1 + 96) + 16))(*(_QWORD *)(v1 + 80));
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 8))(v11, v9, v10);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1D253703C((uint64_t)v4, (uint64_t *)&unk_1ED96FC50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    v13 = (id)v0[9];
    sub_1D26CB868();
    v14 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v12 = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v12;
}

uint64_t sub_1D26BA00C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = sub_1D26CB880();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v8);
  (*(void (**)(uint64_t, uint64_t))(v9 + 104))(v8, v9);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1D26CB814();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_1D26BA11C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v27 = a2;
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v25 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CB880();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v24 - v16;
  v18 = *(uint64_t (**)(uint64_t))(v5[12] + 16);
  v26 = a1;
  v19 = (void *)v18(v6);
  sub_1D26BA118();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D253703C((uint64_t)v10, (uint64_t *)&unk_1ED96FC50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5[11] - 8) + 56))(v27, 1, 1, v5[11]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v21 = v5[11];
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    v22 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v25, v26, v6);
    v23 = v27;
    (*(void (**)(char *, char *, uint64_t))(v5[13] + 16))(v15, v22, v21);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v23, 0, 1, v21);
  }
}

uint64_t ExtensionSystemDataCacheKeyProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);

  return v0;
}

uint64_t ExtensionSystemDataCacheKeyProvider.__deallocating_deinit()
{
  ExtensionSystemDataCacheKeyProvider.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_1D26BA37C()
{
  return (unint64_t)sub_1D26B9E48() & 1;
}

uint64_t sub_1D26BA3A0()
{
  return sub_1D26BA118();
}

uint64_t sub_1D26BA3C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D26BA11C(a1, a2);
}

uint64_t ExtensionSystemDataCacheKeyProvider.baseURLsForTargets(of:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  unint64_t v17;
  uint64_t v19;

  v2 = sub_1D26CB880();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v19 - v10;
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v12);
  v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  sub_1D26BA58C((uint64_t)v14, (uint64_t)v11);

  sub_1D2537078((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_1ED96FC50);
  v15 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) != 1)
  {
    v16 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v16(v5, v9, v2);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962150);
    v17 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1D26D1280;
    v16((char *)(v15 + v17), v5, v2);
  }
  sub_1D253703C((uint64_t)v11, (uint64_t *)&unk_1ED96FC50);
  return v15;
}

uint64_t sub_1D26BA58C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];
  _QWORD v21[3];
  uint64_t v22;
  uint64_t v23;

  v3 = v2;
  v6 = sub_1D26CB790();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2538510(v3 + 32, (uint64_t)v21);
  v13 = v22;
  v14 = v23;
  __swift_project_boxed_opaque_existential_0(v21, v22);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(a1, v13, v14);
  v15 = sub_1D26CB880();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) == 1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    sub_1D253703C((uint64_t)v12, (uint64_t *)&unk_1ED96FC50);
    v17 = 1;
  }
  else
  {
    swift_beginAccess();
    v18 = *(_QWORD *)(v3 + 24);
    v20[0] = *(_QWORD *)(v3 + 16);
    v20[1] = v18;
    (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CAFD60], v6);
    sub_1D257293C();
    swift_bridgeObjectRetain();
    sub_1D26CB874();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    v17 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(a2, v17, 1, v15);
}

uint64_t ExtensionSystemDataCacheKeyProvider.baseURL(for:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D26BA58C(*a1, a2);
}

uint64_t ExtensionSystemDataCacheKeyProvider.cacheKey(for:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D26CB880();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - v15;
  sub_1D26BA58C(*a1, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1D253703C((uint64_t)v9, (uint64_t *)&unk_1ED96FC50);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a2, 1, 1, v17);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    sub_1D2537078((uint64_t)a1, (uint64_t)v6, &qword_1ED963110);
    sub_1D26B8EF4((uint64_t)v14, (uint64_t)v6, a2);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(a2, 0, 1, v19);
  }
}

uint64_t sub_1D26BA980(_QWORD *a1)
{
  return ExtensionSystemDataCacheKeyProvider.baseURLsForTargets(of:)(a1);
}

uint64_t sub_1D26BA9A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return ExtensionSystemDataCacheKeyProvider.baseURL(for:)(a1, a2);
}

uint64_t sub_1D26BA9C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return ExtensionSystemDataCacheKeyProvider.cacheKey(for:)(a1, a2);
}

uint64_t sub_1D26BA9E0()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1D26BAA10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1D26BA9E0();
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D26BAA3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1D25F5EE0(v1, v2);
}

uint64_t sub_1D26BAA78()
{
  return 32;
}

__n128 sub_1D26BAA84(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of SystemDataURLProvider.systemDataURL(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t type metadata accessor for ExtensionManagingSystemDataURLProvider()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for LSApplicationRecordSystemDataURLProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for LSApplicationRecordSystemDataURLProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LSApplicationRecordSystemDataURLProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of LSApplicationRecordSystemDataURLProvider.systemDataURL(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_1D26BAAF8()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for ExtensionSystemDataCacheKeyProvider()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for ExtensionSystemDataCacheKeyProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.subsystemIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.subsystemIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.subsystemIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.__allocating_init(subsystemIdentifier:systemDataURLProvider:fileManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.isSupported(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.baseURL(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ExtensionSystemDataCacheKeyProvider.cacheKey(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t sub_1D26BABC4(uint64_t *a1, unint64_t a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  __int128 *v12;
  _OWORD *v13;
  unint64_t v14;
  __int128 v15;
  unint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v4 = a1;
  v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    TupleTypeMetadata = *v5;
    MEMORY[0x1E0C80A78](a1);
    v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
LABEL_12:
    v22 = 32;
    v23 = a2;
    do
    {
      if (a2 == 1)
        v24 = 0;
      else
        v24 = *(_DWORD *)(TupleTypeMetadata + v22);
      v26 = *v5++;
      v25 = v26;
      v27 = *v4++;
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(&v8[v24], v27);
      v22 += 16;
      --v23;
    }
    while (v23);
    return sub_1D26CD050();
  }
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v11 = 0;
    if (a2 < 4)
      goto LABEL_9;
    if ((unint64_t)(v10 - (char *)v5) < 0x20)
      goto LABEL_9;
    v11 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    v12 = (__int128 *)(v5 + 2);
    v13 = v10 + 16;
    v14 = a2 & 0xFFFFFFFFFFFFFFFCLL;
    do
    {
      v15 = *v12;
      *(v13 - 1) = *(v12 - 1);
      *v13 = v15;
      v12 += 2;
      v13 += 2;
      v14 -= 4;
    }
    while (v14);
    if (v11 != a2)
    {
LABEL_9:
      v16 = a2 - v11;
      v17 = v11;
      v18 = &v10[8 * v11];
      v19 = &v5[v17];
      do
      {
        v20 = *v19++;
        *(_QWORD *)v18 = v20;
        v18 += 8;
        --v16;
      }
      while (v16);
    }
  }
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  MEMORY[0x1E0C80A78](TupleTypeMetadata);
  v8 = (char *)&v29 - v21;
  if (a2)
    goto LABEL_12;
  return sub_1D26CD050();
}

uint64_t TintedWidgetViewModel.__allocating_init(tintParameters:)()
{
  uint64_t v0;

  v0 = swift_allocObject();
  swift_beginAccess();
  sub_1D25E55D4();
  sub_1D26CC1B0();
  swift_endAccess();
  return v0;
}

void TintedWidgetView.init(fullColorView:tintedView:tintedWidgetViewModel:)()
{
  type metadata accessor for TintedWidgetView();
}

uint64_t sub_1D26BAE4C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v5 = (char *)v1 + *(int *)(a1 + 52);
  v6 = sub_1D26CDF38();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, v2, v6);
  v8 = (char *)v1 + *(int *)(a1 + 56);
  v9 = sub_1D26CDF38();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, v3, v9);
  type metadata accessor for TintedWidgetViewModel();
  sub_1D26BF318();
  v11 = sub_1D26CC39C();
  v13 = v12;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v3, v9);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
  *v1 = v11;
  v1[1] = v13;
  return result;
}

uint64_t sub_1D26BAF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  _QWORD v9[5];
  char v10;

  v9[0] = a1;
  v9[1] = a2;
  v9[2] = a3;
  *(double *)&v9[3] = a6;
  v9[4] = swift_getKeyPath();
  v10 = 0;
  MEMORY[0x1D823860C](v9, a4, &type metadata for TintedWidgetModifier, a5);
  return swift_release();
}

uint64_t sub_1D26BAFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  float v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  int v32;
  int v33;
  float v34;
  float v35;
  float v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  float v40;
  int v41;
  int v42;
  float v43;
  float v44;
  float v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD v76[2];
  float v77;
  uint64_t v78;
  uint64_t v79;
  float v80;
  int v81;
  uint64_t v82;
  int v83;
  float v84;
  __int128 v85;
  uint64_t v86;
  float v87;
  uint64_t v88;
  uint64_t v89;
  float v90;
  int v91;
  uint64_t v92;
  int v93;
  float v94;
  __int128 v95;
  uint64_t v96;

  v74 = a2;
  v61 = sub_1D26CC7A4();
  v60 = *(_QWORD *)(v61 - 8);
  v4 = MEMORY[0x1E0C80A78](v61);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v57 - v7;
  v9 = sub_1D26CCB40();
  v72 = *(_QWORD *)(v9 - 8);
  v66 = v9;
  v10 = MEMORY[0x1E0C80A78](v9);
  v68 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a1 + 16);
  v75 = a1;
  v71 = *(_QWORD *)(v12 - 8);
  v67 = v12;
  MEMORY[0x1E0C80A78](v10);
  v64 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = sub_1D26CC3E4();
  v73 = *(_QWORD *)(v70 - 8);
  v14 = MEMORY[0x1E0C80A78](v70);
  v65 = (char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v69 = (uint64_t)&v57 - v17;
  (*(void (**)(uint64_t))(v2 + 24))(v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83888);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82428);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = v18;
  v59 = v18;
  v21 = *(_QWORD *)(v19 + 72);
  v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v62 = 2 * v21;
  v23 = swift_allocObject();
  v63 = v23;
  *(_OWORD *)(v23 + 16) = xmmword_1D26D5640;
  v24 = v23 + v22;
  v25 = v23 + v22 + *(int *)(v20 + 48);
  sub_1D26CC924();
  v26 = *(double *)(v2 + 16);
  swift_retain();
  sub_1D25EC3C4((uint64_t)v8);
  v27 = v60;
  v58 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  v28 = v6;
  v29 = v6;
  v30 = v61;
  v58(v29, v8, v61);
  sub_1D26CC318();
  v31 = *(void (**)(char *, uint64_t))(v27 + 8);
  v31(v8, v30);
  v32 = v83;
  v33 = v81;
  v34 = v77 * v26;
  v35 = v80 * v26;
  v36 = v84 * v26;
  *(_DWORD *)v25 = 0;
  *(_QWORD *)(v25 + 4) = v78;
  *(float *)(v25 + 12) = v34;
  *(_QWORD *)(v25 + 16) = v79;
  *(_DWORD *)(v25 + 24) = 0;
  *(_DWORD *)(v25 + 28) = v33;
  *(float *)(v25 + 32) = v35;
  *(_QWORD *)(v25 + 36) = v82;
  *(_DWORD *)(v25 + 44) = v32;
  *(_DWORD *)(v25 + 48) = 0;
  *(float *)(v25 + 52) = v36;
  *(_OWORD *)(v25 + 56) = v85;
  *(_QWORD *)(v25 + 72) = v86;
  v37 = v24 + v21;
  v38 = v59;
  v39 = v37 + *(int *)(v59 + 48);
  sub_1D26CC930();
  v40 = *(double *)(v2 + 16);
  swift_retain();
  sub_1D25EC3C4((uint64_t)v8);
  v58(v28, v8, v30);
  sub_1D26CC318();
  v31(v8, v30);
  v41 = v93;
  v42 = v91;
  v43 = v87 * v40;
  v44 = v90 * v40;
  v45 = v94 * v40;
  *(_DWORD *)v39 = 0;
  *(_QWORD *)(v39 + 4) = v88;
  *(float *)(v39 + 12) = v43;
  *(_QWORD *)(v39 + 16) = v89;
  *(_DWORD *)(v39 + 24) = 0;
  *(_DWORD *)(v39 + 28) = v42;
  *(float *)(v39 + 32) = v44;
  *(_QWORD *)(v39 + 36) = v92;
  *(_DWORD *)(v39 + 44) = v41;
  *(_DWORD *)(v39 + 48) = 0;
  *(float *)(v39 + 52) = v45;
  *(_OWORD *)(v39 + 56) = v95;
  *(_QWORD *)(v39 + 72) = v96;
  v46 = v24 + v62 + *(int *)(v38 + 48);
  sub_1D26CC93C();
  *(_DWORD *)v46 = 1065353216;
  *(_QWORD *)(v46 + 12) = 0;
  *(_QWORD *)(v46 + 4) = 0;
  *(_QWORD *)(v46 + 20) = 0x3F80000000000000;
  *(_QWORD *)(v46 + 36) = 0;
  *(_QWORD *)(v46 + 28) = 0;
  *(_QWORD *)(v46 + 44) = 0x3F80000000000000;
  *(_QWORD *)(v46 + 60) = 0;
  *(_QWORD *)(v46 + 52) = 0;
  *(_DWORD *)(v46 + 68) = 0;
  *(_QWORD *)(v46 + 72) = 1065353216;
  sub_1D253EB7C(v63);
  sub_1D26CCB34();
  v47 = v68;
  sub_1D26CCB4C();
  v48 = *(_QWORD *)(v75 + 24);
  v49 = (uint64_t)v65;
  v50 = v67;
  v51 = v66;
  v52 = v64;
  MEMORY[0x1D823860C](v47, v67, v66, v48);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v47, v51);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v52, v50);
  v76[0] = v48;
  v76[1] = MEMORY[0x1E0CDD290];
  v53 = v70;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v70, v76);
  v54 = v69;
  sub_1D25EDCB8(v49, v53, v69);
  v55 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
  v55(v49, v53);
  sub_1D25EAC44(v54, v53, v74);
  return ((uint64_t (*)(uint64_t, uint64_t))v55)(v54, v53);
}

uint64_t sub_1D26BB55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  char *v45;
  float v46;
  float v47;
  float v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  _QWORD v54[3];
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t OpaqueTypeConformance2;
  uint64_t v74;
  _QWORD v75[2];
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[2];
  uint64_t v79;
  uint64_t v80;
  float v81;
  float v82;
  float v83;
  float v84;
  int v85;
  float v86;
  float v87;
  float v88;
  float v89;
  int v90;
  float v91;
  __int128 v92;
  int v93;

  v74 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  v63 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v62 = (char *)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v66 = v4;
  v6 = *(_QWORD *)(v4 + 24);
  v79 = v3;
  v80 = v6;
  v7 = MEMORY[0x1E0CDE1B0];
  v8 = MEMORY[0x1D823A478](0, &v79, MEMORY[0x1E0CDE1B0], 0);
  v61 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v65 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v64 = (_QWORD *)((char *)v54 - v11);
  v60 = sub_1D26CC7BC();
  v59 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v13 = (char *)v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = v3;
  v80 = v6;
  v67 = v6;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v14 = sub_1D26CC45C();
  v15 = sub_1D26CC3E4();
  v58 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v54 - v16;
  v18 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDA280], v14);
  v78[0] = MEMORY[0x1E0CDF5B0];
  v78[1] = v18;
  v19 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v78);
  v79 = v15;
  v80 = v19;
  v20 = MEMORY[0x1D823A478](0, &v79, MEMORY[0x1E0CDE1F8], 0);
  v57 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v56 = (char *)v54 - v21;
  v79 = v15;
  v80 = v19;
  v54[2] = v19;
  v71 = swift_getOpaqueTypeConformance2();
  v72 = v20;
  v79 = v20;
  v80 = v71;
  v22 = MEMORY[0x1D823A478](0, &v79, v7, 0);
  v55 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v54 - v26;
  v70 = sub_1D26CC918();
  v69 = *(_QWORD *)(v70 - 8);
  v28 = MEMORY[0x1E0C80A78](v70);
  v68 = (char *)v54 - v29;
  if (*(_BYTE *)(v2 + 8) == 1)
  {
    v30 = sub_1D26CCEA0();
    v64 = v54;
    v79 = v30;
    MEMORY[0x1E0C80A78](v30);
    v65 = v27;
    v31 = v67;
    v54[-4] = v3;
    v54[-3] = v31;
    v54[1] = v2;
    v54[-2] = v2;
    sub_1D26CD008();
    v32 = OpaqueTypeConformance2;
    sub_1D26CCE34();
    swift_release();
    v33 = *MEMORY[0x1E0CDAE98];
    v67 = v8;
    v34 = v59;
    v35 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 104))(v13, v33, v60);
    v36 = v22;
    v37 = v56;
    sub_1D26CCD8C();
    v38 = v13;
    v39 = v32;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v35);
    (*(void (**)(char *, uint64_t))(v58 + 8))(v17, v15);
    sub_1D26BBECC((uint64_t)&v79);
    v41 = v71;
    v40 = v72;
    sub_1D26CCD74();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v40);
    v76 = v40;
    v77 = v41;
    swift_getOpaqueTypeConformance2();
    v42 = (uint64_t)v65;
    sub_1D25EDCB8((uint64_t)v25, v36, (uint64_t)v65);
    v43 = *(void (**)(char *, uint64_t))(v55 + 8);
    v43(v25, v36);
    sub_1D25EAC44(v42, v36, (uint64_t)v25);
    v44 = (uint64_t)v68;
    sub_1D25EAC5C((uint64_t)v25, v36);
    v43(v25, v36);
    v43((char *)v42, v36);
  }
  else
  {
    v45 = v62;
    (*(void (**)(uint64_t))(v2 + 24))(v28);
    v46 = *(float *)(v2 + 16);
    v47 = *(float *)(v2 + 12);
    v48 = *(float *)(v2 + 20) - v46;
    *(float *)&v79 = (float)(1.0 - v47) + (float)(v47 * (float)(v48 * 0.21265));
    *((float *)&v79 + 1) = v47 * (float)(v48 * 0.71533);
    *(float *)&v80 = v47 * (float)(v48 * 0.072205);
    HIDWORD(v80) = 0;
    v81 = v46 * v47;
    v82 = v47 * (float)(v48 * 0.21265);
    v83 = (float)(1.0 - v47) + *((float *)&v79 + 1);
    v84 = *(float *)&v80;
    v85 = 0;
    v86 = v46 * v47;
    v87 = v82;
    v88 = *((float *)&v79 + 1);
    v89 = (float)(1.0 - v47) + *(float *)&v80;
    v90 = 0;
    v91 = v46 * v47;
    v92 = xmmword_1D26DC7A0;
    v93 = 0;
    v49 = (uint64_t)v65;
    sub_1D26CCD74();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v45, v3);
    v50 = (uint64_t)v64;
    v39 = OpaqueTypeConformance2;
    sub_1D25EDCB8(v49, v8, (uint64_t)v64);
    v51 = *(void (**)(uint64_t, uint64_t))(v61 + 8);
    v51(v49, v8);
    sub_1D25EAC44(v50, v8, v49);
    v41 = v71;
    v40 = v72;
    v76 = v72;
    v77 = v71;
    swift_getOpaqueTypeConformance2();
    v44 = (uint64_t)v68;
    sub_1D25EAD20(v49, v22, v8);
    v51(v49, v8);
    v51(v50, v8);
  }
  v76 = v40;
  v77 = v41;
  v75[0] = swift_getOpaqueTypeConformance2();
  v75[1] = v39;
  v52 = v70;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v70, v75);
  sub_1D25EAC44(v44, v52, v74);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v44, v52);
}

uint64_t sub_1D26BBCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  float v20;
  float v21;
  float v22;
  void (*v23)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  float v31;
  float v32;
  float v33;
  float v34;
  int v35;
  float v36;
  float v37;
  float v38;
  float v39;
  int v40;
  float v41;
  __int128 v42;
  int v43;

  v26 = a4;
  v7 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = v10;
  v30 = v11;
  v12 = MEMORY[0x1D823A478](0, &v29, MEMORY[0x1E0CDE1B0], 0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v25 - v18;
  (*(void (**)(uint64_t))(a1 + 24))(v17);
  v20 = *(float *)(a1 + 16);
  v21 = *(float *)(a1 + 12);
  v22 = *(float *)(a1 + 20) - v20;
  *(float *)&v29 = (float)(1.0 - v21) + (float)(v21 * (float)(v22 * 0.21265));
  *((float *)&v29 + 1) = v21 * (float)(v22 * 0.71533);
  *(float *)&v30 = v21 * (float)(v22 * 0.072205);
  HIDWORD(v30) = 0;
  v31 = v20 * v21;
  v32 = v21 * (float)(v22 * 0.21265);
  v33 = (float)(1.0 - v21) + *((float *)&v29 + 1);
  v34 = *(float *)&v30;
  v35 = 0;
  v36 = v20 * v21;
  v37 = v32;
  v38 = *((float *)&v29 + 1);
  v39 = (float)(1.0 - v21) + *(float *)&v30;
  v40 = 0;
  v41 = v20 * v21;
  v42 = xmmword_1D26DC7A0;
  v43 = 0;
  sub_1D26CCD74();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a2);
  v27 = a2;
  v28 = a3;
  swift_getOpaqueTypeConformance2();
  sub_1D25EDCB8((uint64_t)v16, v12, (uint64_t)v19);
  v23 = *(void (**)(char *, uint64_t))(v13 + 8);
  v23(v16, v12);
  sub_1D25EAC44((uint64_t)v19, v12, v26);
  return ((uint64_t (*)(char *, uint64_t))v23)(v19, v12);
}

double sub_1D26BBECC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  __int8 *v4;
  int v5;
  int v6;
  int v7;
  int8x16_t v8;
  uint64_t v9;
  uint64_t v10;
  int32x2_t v11;
  double result;
  int8x16_t v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int32x2_t v18;
  int v19;

  v2 = sub_1D26CC7A4();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v13.i8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  sub_1D25EC3C4((uint64_t)v4);
  sub_1D26CC318();
  v6 = v14;
  v5 = v15;
  v7 = v19;
  v8 = vextq_s8(v13, v13, 4uLL);
  v9 = v16;
  v10 = v17;
  v11 = v18;
  *(_DWORD *)a1 = 0;
  *(int8x16_t *)(a1 + 4) = v8;
  *(_DWORD *)(a1 + 20) = v6;
  *(_DWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 28) = v9;
  *(_DWORD *)(a1 + 36) = v5;
  *(_QWORD *)(a1 + 40) = v10;
  *(_DWORD *)(a1 + 48) = 0;
  *(int32x2_t *)(a1 + 52) = vrev64_s32(v11);
  result = 0.000352859321;
  *(_OWORD *)(a1 + 60) = xmmword_1D26DC7B0;
  *(_DWORD *)(a1 + 76) = v7;
  return result;
}

double sub_1D26BBFB8()
{
  uint64_t v0;
  void *v1;
  id v2;
  double v4;
  double v5;
  double v6;
  double v7[2];

  v7[1] = *(double *)MEMORY[0x1E0C80C00];
  v0 = sub_1D26CCE64();
  if (!v0)
    return 0.0;
  v1 = (void *)v0;
  v6 = 0.0;
  v7[0] = 0.0;
  v4 = 0.0;
  v5 = 0.0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithCGColor_, v0);
  objc_msgSend(v2, sel_getRed_green_blue_alpha_, v7, &v6, &v5, &v4);

  return v7[0] * v4 * 0.212646 + v4 * v6 * 0.715332 + v4 * v5 * 0.0722046;
}

uint64_t sub_1D26BC0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  float *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t KeyPath;
  _QWORD *v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  float v38;
  float v39;
  float v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v54 = a1;
  v59 = a2;
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D428);
  v3 = MEMORY[0x1E0C80A78](v60);
  v5 = (float *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v3);
  v52 = (uint64_t)&v47 - v6;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB20);
  MEMORY[0x1E0C80A78](v56);
  v58 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CAD8);
  MEMORY[0x1E0C80A78](v48);
  v49 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB40);
  MEMORY[0x1E0C80A78](v57);
  v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBE8);
  v10 = *(_QWORD *)(v53 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v53);
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D330);
  MEMORY[0x1E0C80A78](v47);
  v50 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(v2 + 32);
  v14 = *(_BYTE *)(v2 + 40);
  sub_1D26BEF04(v13, v14);
  v15 = sub_1D25EC5F4(v13, v14);
  sub_1D25ED9F0(v13, v14);
  if ((v15 & 1) != 0)
    v16 = 16;
  else
    v16 = 8;
  v55 = *(_QWORD *)(v2 + v16);
  swift_retain();
  sub_1D26BEF04(v13, v14);
  v17 = sub_1D25EC5F4(v13, v14);
  sub_1D25ED9F0(v13, v14);
  if ((v17 & 1) != 0)
    v18 = 8;
  else
    v18 = 16;
  v19 = *(_QWORD *)(v2 + v18);
  swift_retain();
  switch(*(_QWORD *)v2)
  {
    case 0:
      v20 = *(_QWORD *)(v2 + 24);
      v21 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v53);
      v22 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v23 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v23 + v22, (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
      KeyPath = swift_getKeyPath();
      v25 = v50;
      *(_QWORD *)&v50[*(int *)(v47 + 48)] = KeyPath;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
      swift_storeEnumTagMultiPayload();
      *v25 = v55;
      v25[1] = v19;
      v25[2] = v20;
      v25[3] = sub_1D26BF16C;
      v25[4] = v23;
      sub_1D2537078((uint64_t)v25, v49, &qword_1ED96D330);
      goto LABEL_11;
    case 1:
      v28 = *(_QWORD *)(v2 + 24);
      v29 = v53;
      (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v53);
      v30 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v31 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v31 + v30, (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v29);
      v32 = swift_getKeyPath();
      v25 = v50;
      *(_QWORD *)&v50[*(int *)(v47 + 48)] = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
      swift_storeEnumTagMultiPayload();
      v33 = v55;
      *v25 = v19;
      v25[1] = v33;
      v25[2] = v28;
      v25[3] = sub_1D26BF16C;
      v25[4] = v31;
      sub_1D2537078((uint64_t)v25, v49, &qword_1ED96D330);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      sub_1D2536488(&qword_1ED96D328, &qword_1ED96D330, (uint64_t)&unk_1D26DCB20);
      swift_retain();
      swift_retain();
      v34 = (uint64_t)v51;
      sub_1D26CC90C();
      sub_1D2537078(v34, v58, &qword_1ED96CB40);
      swift_storeEnumTagMultiPayload();
      sub_1D26BF1B8();
      sub_1D2536488(&qword_1ED96D420, &qword_1ED96D428, (uint64_t)&unk_1D26DCAD0);
      sub_1D26CC90C();
      swift_release();
      swift_release();
      sub_1D253703C(v34, &qword_1ED96CB40);
      v35 = (uint64_t)v25;
      v36 = &qword_1ED96D330;
      return sub_1D253703C(v35, v36);
    case 3:
      v26 = 0;
      v27 = (uint64_t *)(v2 + 16);
      break;
    case 4:
      v27 = (uint64_t *)(v2 + 8);
      goto LABEL_15;
    case 5:
      v27 = (uint64_t *)(v2 + 16);
LABEL_15:
      v26 = 1;
      break;
    default:
      v26 = 0;
      v27 = (uint64_t *)(v2 + 8);
      break;
  }
  v37 = *v27;
  swift_retain();
  v38 = sub_1D26BBFB8();
  v39 = sub_1D26BBFB8();
  v40 = *(double *)(v2 + 24);
  v41 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v54, v53);
  v42 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v43 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v43 + v42, (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v41);
  *(_QWORD *)((char *)v5 + *(int *)(v60 + 52)) = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v5 = v37;
  *((_BYTE *)v5 + 8) = v26;
  v5[3] = v40;
  v5[4] = v39;
  v5[5] = v38;
  *((_QWORD *)v5 + 3) = sub_1D26BF16C;
  *((_QWORD *)v5 + 4) = v43;
  v44 = (uint64_t)v5;
  v45 = v52;
  sub_1D26BF170(v44, v52);
  sub_1D2537078(v45, v58, &qword_1ED96D428);
  swift_storeEnumTagMultiPayload();
  sub_1D26BF1B8();
  sub_1D2536488(&qword_1ED96D420, &qword_1ED96D428, (uint64_t)&unk_1D26DCAD0);
  sub_1D26CC90C();
  swift_release();
  swift_release();
  v35 = v45;
  v36 = &qword_1ED96D428;
  return sub_1D253703C(v35, v36);
}

uint64_t sub_1D26BC74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D26BC0AC(a1, a2);
}

uint64_t sub_1D26BC784@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D26BC800(void **a1)
{
  void *v1;
  id v2;

  v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  v2 = v1;
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t sub_1D26BC874()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D26BC8E4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

void (*sub_1D26BC950(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D26CC1D4();
  return sub_1D25FBF44;
}

uint64_t sub_1D26BC9C8()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8F0);
  sub_1D26CC1BC();
  return swift_endAccess();
}

uint64_t sub_1D26BCA2C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83878);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8F0);
  sub_1D26CC1C8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1D26BCB3C()
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8F0);
  sub_1D26CC1BC();
  return swift_endAccess();
}

uint64_t sub_1D26BCB9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83878);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8F0);
  sub_1D26CC1C8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1D26BCC70(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83878);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9ChronoKit21TintedWidgetViewModel__tintParameters;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8F0);
  sub_1D26CC1BC();
  swift_endAccess();
  return sub_1D25FCB7C;
}

uint64_t TintedWidgetViewModel.init(tintParameters:)()
{
  uint64_t v0;

  swift_beginAccess();
  sub_1D25E55D4();
  sub_1D26CC1B0();
  swift_endAccess();
  return v0;
}

void type metadata accessor for TintedWidgetView()
{
  JUMPOUT(0x1D823A430);
}

double sub_1D26BCDB8()
{
  double v0;
  double v1;
  id v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  objc_msgSend(v3, sel_fraction);
  v1 = v0;

  return v1;
}

uint64_t sub_1D26BCE4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v15;
  id v16;

  v0 = sub_1D26CCE70();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v4 = v16;
  v5 = objc_msgSend(v16, sel_primaryTintColor);

  if (!v5)
    return sub_1D26CCEB8();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CDF3E0], v0);
  objc_msgSend(v5, sel_red);
  v7 = v6;
  objc_msgSend(v5, sel_green);
  v9 = v8;
  objc_msgSend(v5, sel_blue);
  v11 = v10;
  objc_msgSend(v5, sel_alpha);
  v13 = MEMORY[0x1D8238690](v3, v7, v9, v11, v12);

  return v13;
}

uint64_t sub_1D26BCFCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  id v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  id v17;
  uint64_t v20;
  id v21;

  v0 = sub_1D26CCE70();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v4 = v21;
  v5 = objc_msgSend(v21, sel_secondaryTintColor);

  if (v5)
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CDF3E0], v0);
    objc_msgSend(v5, sel_red);
    v7 = v6;
    objc_msgSend(v5, sel_green);
    v9 = v8;
    objc_msgSend(v5, sel_blue);
    v11 = v10;
    objc_msgSend(v5, sel_alpha);
    v13 = MEMORY[0x1D8238690](v3, v7, v9, v11, v12);

  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    v14 = v21;
    v15 = objc_msgSend(v21, sel_filterStyle);

    if (v15 == (id)2)
      goto LABEL_5;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    v16 = v21;
    v17 = objc_msgSend(v21, sel_filterStyle);

    if (v17 != (id)3)
      return sub_1D26CCEB8();
LABEL_5:
    (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CDF3E0], v0);
    return sub_1D26CCEDC();
  }
  return v13;
}

id sub_1D26BD258()
{
  id v0;
  id v2;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v0 = objc_msgSend(v2, sel_filterStyle);

  return v0;
}

uint64_t TintedWidgetViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit21TintedWidgetViewModel__tintParameters;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t TintedWidgetViewModel.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit21TintedWidgetViewModel__tintParameters;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D26BD380()
{
  type metadata accessor for TintedWidgetViewModel();
  sub_1D26BF318();
  return sub_1D26CC39C();
}

uint64_t sub_1D26BD3C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for TintedWidgetViewModel();
  result = sub_1D26CC12C();
  *a1 = result;
  return result;
}

uint64_t TintedWidgetView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[2];
  id v30;

  v24 = a2;
  v3 = *(_QWORD *)(a1 + 16);
  sub_1D26CDF38();
  sub_1D26CC3E4();
  v4 = *(_QWORD *)(a1 + 24);
  sub_1D26CDF38();
  sub_1D26CC3E4();
  sub_1D26CC3E4();
  swift_getTupleTypeMetadata2();
  v5 = sub_1D26CD044();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0680], v5);
  v6 = sub_1D26CCFB4();
  v22 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96B078);
  v9 = sub_1D26CC3E4();
  v23 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  v25 = v3;
  v26 = v4;
  v27 = *(_OWORD *)(a1 + 32);
  v28 = v21;
  sub_1D26CD008();
  sub_1D26CCFA8();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  swift_release();
  v15 = v30;
  v16 = objc_msgSend(v30, sel_accentedDesaturatedMode);

  v30 = v16;
  v17 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFCF8], v6);
  sub_1D26CCD68();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v6);
  v18 = sub_1D2536488(&qword_1ED96B070, &qword_1ED96B078, MEMORY[0x1E0CDCF80]);
  v29[0] = v17;
  v29[1] = v18;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v9, v29);
  sub_1D25EDCB8((uint64_t)v12, v9, (uint64_t)v14);
  v19 = *(void (**)(char *, uint64_t))(v23 + 8);
  v19(v12, v9);
  sub_1D25EAC44((uint64_t)v14, v9, v24);
  return ((uint64_t (*)(char *, uint64_t))v19)(v14, v9);
}

void sub_1D26BD714(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v19 = a4;
  v29 = a5;
  v22 = sub_1D26CDF38();
  v9 = sub_1D26CC3E4();
  v10 = *(_QWORD *)(v9 - 8);
  v25 = v9;
  v27 = v10;
  MEMORY[0x1E0C80A78](v9);
  v21 = &v17[-v11];
  v24 = sub_1D26CC3E4();
  v28 = *(_QWORD *)(v24 - 8);
  v12 = MEMORY[0x1E0C80A78](v24);
  v23 = &v17[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v26 = &v17[-v14];
  sub_1D26CDF38();
  v18 = sub_1D26CC3E4();
  v30 = *(_QWORD *)(v18 - 8);
  v15 = MEMORY[0x1E0C80A78](v18);
  MEMORY[0x1E0C80A78](v15);
  v20 = &v17[-v16];
  v31 = a1;
  v32 = a2;
  v33 = a3;
  v34 = a4;
  type metadata accessor for TintedWidgetView();
}

uint64_t sub_1D26BD8CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v8 = *(void **)(v6 - 136);
  objc_msgSend(v8, sel_fraction);
  swift_release();

  *(_QWORD *)(v6 - 144) = v5;
  v9 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0798], v4, v6 - 144);
  sub_1D26CCE28();
  v10 = MEMORY[0x1E0CD9728];
  *(_QWORD *)(v6 - 160) = v9;
  *(_QWORD *)(v6 - 152) = v10;
  v11 = *(_QWORD *)(v6 - 368);
  *(_QWORD *)(v6 - 328) = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v11, v6 - 160);
  *(_QWORD *)(v6 - 344) = v2;
  sub_1D25EDCB8(v2, v11, v3);
  v12 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 240) + 8);
  *(_QWORD *)(v6 - 320) = v12;
  v13 = v11;
  v12(v2, v11);
  *(_QWORD *)(v6 - 360) = v1 + *(int *)(a1 + 56);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v14 = *(void **)(v6 - 136);
  *(_QWORD *)(v6 - 376) = objc_msgSend(v14, sel_filterStyle);
  swift_release();

  swift_retain();
  v15 = sub_1D26BCE4C();
  swift_release();
  swift_retain();
  v16 = sub_1D26BCFCC();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v17 = *(void **)(v6 - 136);
  objc_msgSend(v17, sel_fraction);
  v19 = v18;
  swift_release();

  *(_QWORD *)(v6 - 168) = *(_QWORD *)(v6 - 352);
  v20 = *(_QWORD *)(v6 - 304);
  v21 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0798], v20, v6 - 168);
  v22 = *(_QWORD *)(v6 - 312);
  sub_1D26BAF1C(*(_QWORD *)(v6 - 376), v15, v16, v20, v21, v19);
  swift_release();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v23 = *(void **)(v6 - 136);
  objc_msgSend(v23, sel_fraction);
  swift_release();

  v24 = sub_1D26BF284();
  *(_QWORD *)(v6 - 184) = v21;
  *(_QWORD *)(v6 - 176) = v24;
  v25 = MEMORY[0x1E0CD9C20];
  v26 = *(_QWORD *)(v6 - 280);
  v27 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v26, v6 - 184);
  v28 = *(_QWORD *)(v6 - 296);
  sub_1D26CCE28();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 264) + 8))(v22, v26);
  *(_QWORD *)(v6 - 200) = v27;
  *(_QWORD *)(v6 - 192) = MEMORY[0x1E0CD9728];
  v29 = v25;
  v30 = *(_QWORD *)(v6 - 288);
  v31 = MEMORY[0x1D823A4E4](v29, v30, v6 - 200);
  v32 = *(_QWORD *)(v6 - 272);
  sub_1D25EDCB8(v28, v30, v32);
  v33 = *(_QWORD *)(v6 - 256);
  v34 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
  v34(v28, v30);
  v35 = *(_QWORD *)(v6 - 344);
  v36 = *(_QWORD *)(v6 - 336);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 240) + 16))(v35, v36, v13);
  *(_QWORD *)(v6 - 136) = v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v28, v32, v30);
  *(_QWORD *)(v6 - 128) = v28;
  *(_QWORD *)(v6 - 216) = v13;
  *(_QWORD *)(v6 - 208) = v30;
  *(_QWORD *)(v6 - 232) = *(_QWORD *)(v6 - 328);
  *(_QWORD *)(v6 - 224) = v31;
  sub_1D26BABC4((uint64_t *)(v6 - 136), 2uLL, v6 - 216);
  v34(v32, v30);
  v37 = *(void (**)(uint64_t, uint64_t))(v6 - 320);
  v37(v36, v13);
  v34(v28, v30);
  return ((uint64_t (*)(uint64_t, uint64_t))v37)(v35, v13);
}

void sub_1D26BDD7C(uint64_t a1@<X8>)
{
  uint64_t *v1;

  sub_1D26BD714(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1D26BDD8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC708();
  *a1 = result;
  return result;
}

uint64_t sub_1D26BDDB4()
{
  return sub_1D26CC714();
}

uint64_t sub_1D26BDDD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D26BDE14()
{
  return type metadata accessor for TintedWidgetViewModel();
}

uint64_t type metadata accessor for TintedWidgetViewModel()
{
  uint64_t result;

  result = qword_1ED96D170;
  if (!qword_1ED96D170)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D26BDE58()
{
  unint64_t v0;

  sub_1D25756A0(319, &qword_1ED96C8F8, (uint64_t (*)(uint64_t))sub_1D25E55D4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for TintedWidgetViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TintedWidgetViewModel.tintParameters.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.tintParameters.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.tintParameters.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.$tintParameters.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.$tintParameters.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.$tintParameters.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.__allocating_init(tintParameters:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.fraction.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.primaryTintColor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.secondaryTintColor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of TintedWidgetViewModel.filterStyle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1D26BDF68()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D26BDF70()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CDF38();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CDF38();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D26BE008(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  void *v19;
  const void *v20;
  size_t __n;
  uint64_t v23;

  v5 = *(_QWORD *)(a3 + 16);
  v4 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  if (*(_DWORD *)(v6 + 84))
    v8 = *(_QWORD *)(v6 + 64);
  else
    v8 = *(_QWORD *)(v6 + 64) + 1;
  v9 = *(_QWORD *)(v4 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 64);
  if (!*(_DWORD *)(v9 + 84))
    ++v11;
  if ((v10 | v7) > 7
    || ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80)) & 0x100000) != 0
    || v11 + ((v8 + v10 + ((v7 + 16) & ~v7)) & ~v10) > 0x18)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + (((v10 | v7) & 0xF8 ^ 0x1F8) & ((v10 | v7) + 16)));
    swift_retain();
  }
  else
  {
    __n = v11;
    v23 = ~v10;
    v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    v16 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
    v17 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48);
    swift_retain();
    if (v18(v17, 1, v5))
    {
      memcpy(v16, v17, v8);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v16, v17, v5);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v16, 0, 1, v5);
    }
    v19 = (void *)(((unint64_t)v16 + v8 + v10) & v23);
    v20 = (const void *)(((unint64_t)v17 + v8 + v10) & v23);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v20, 1, v4))
    {
      memcpy(v19, v20, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v19, v20, v4);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v4);
    }
  }
  return a1;
}

uint64_t sub_1D26BE1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t result;

  swift_release();
  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4))
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v5 + 64) + v6;
  if (!*(_DWORD *)(v5 + 84))
    ++v9;
  v10 = (v9 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v8 + 8))(v10, v7);
  return result;
}

_QWORD *sub_1D26BE2A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  const void *v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  int v12;
  size_t v13;
  size_t v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  const void *v21;
  size_t v22;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
  v10 = (const void *)(((unint64_t)a2 + v8 + 16) & ~v8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  swift_retain();
  if (v11(v10, 1, v6))
  {
    v12 = *(_DWORD *)(v7 + 84);
    v13 = *(_QWORD *)(v7 + 64);
    if (v12)
      v14 = v13;
    else
      v14 = v13 + 1;
    memcpy(v9, v10, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v9, v10, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    v12 = *(_DWORD *)(v7 + 84);
    v13 = *(_QWORD *)(v7 + 64);
  }
  if (v12)
    v15 = v13;
  else
    v15 = v13 + 1;
  v16 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v15 + v18;
  v20 = (void *)(((unint64_t)v9 + v19) & ~v18);
  v21 = (const void *)(((unint64_t)v10 + v19) & ~v18);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48))(v21, 1, v16))
  {
    if (*(_DWORD *)(v17 + 84))
      v22 = *(_QWORD *)(v17 + 64);
    else
      v22 = *(_QWORD *)(v17 + 64) + 1;
    memcpy(v20, v21, v22);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v17 + 16))(v20, v21, v16);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  }
  return a1;
}

_QWORD *sub_1D26BE404(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  size_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  uint64_t (*v22)(void *, uint64_t, uint64_t);
  int v23;
  int v24;
  size_t v25;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = (void *)(((unint64_t)a1 + v8 + 16) & ~v8);
  v10 = (void *)(((unint64_t)a2 + v8 + 16) & ~v8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v12 = v11(v9, 1, v6);
  v13 = v11(v10, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v10, v6);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  }
  if (*(_DWORD *)(v7 + 84))
    v14 = *(_QWORD *)(v7 + 64);
  else
    v14 = *(_QWORD *)(v7 + 64) + 1;
  memcpy(v9, v10, v14);
LABEL_10:
  if (*(_DWORD *)(v7 + 84))
    v15 = *(_QWORD *)(v7 + 64);
  else
    v15 = *(_QWORD *)(v7 + 64) + 1;
  v16 = *(_QWORD *)(a3 + 24);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = v15 + v18;
  v20 = (void *)(((unint64_t)v9 + v19) & ~v18);
  v21 = (void *)(((unint64_t)v10 + v19) & ~v18);
  v22 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v17 + 48);
  v23 = v22(v20, 1, v16);
  v24 = v22(v21, 1, v16);
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 16))(v20, v21, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
      return a1;
    }
  }
  else
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v17 + 24))(v20, v21, v16);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v20, v16);
  }
  if (*(_DWORD *)(v17 + 84))
    v25 = *(_QWORD *)(v17 + 64);
  else
    v25 = *(_QWORD *)(v17 + 64) + 1;
  memcpy(v20, v21, v25);
  return a1;
}

_OWORD *sub_1D26BE604(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  int v10;
  size_t v11;
  size_t v12;
  size_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  const void *v19;
  size_t v20;

  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (void *)(((unint64_t)a1 + v7 + 16) & ~v7);
  v9 = (const void *)(((unint64_t)a2 + v7 + 16) & ~v7);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(v9, 1, v5))
  {
    v10 = *(_DWORD *)(v6 + 84);
    v11 = *(_QWORD *)(v6 + 64);
    if (v10)
      v12 = v11;
    else
      v12 = v11 + 1;
    memcpy(v8, v9, v12);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v8, v9, v5);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v5);
    v10 = *(_DWORD *)(v6 + 84);
    v11 = *(_QWORD *)(v6 + 64);
  }
  if (v10)
    v13 = v11;
  else
    v13 = v11 + 1;
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned __int8 *)(v15 + 80);
  v17 = v13 + v16;
  v18 = (void *)(((unint64_t)v8 + v17) & ~v16);
  v19 = (const void *)(((unint64_t)v9 + v17) & ~v16);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48))(v19, 1, v14))
  {
    if (*(_DWORD *)(v15 + 84))
      v20 = *(_QWORD *)(v15 + 64);
    else
      v20 = *(_QWORD *)(v15 + 64) + 1;
    memcpy(v18, v19, v20);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 32))(v18, v19, v14);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  return a1;
}

_QWORD *sub_1D26BE758(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  size_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  uint64_t (*v23)(void *, uint64_t, uint64_t);
  int v24;
  int v25;
  size_t v26;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = *(_QWORD *)(a3 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = (void *)(((unint64_t)a1 + v9 + 16) & ~v9);
  v11 = (void *)(((unint64_t)a2 + v9 + 16) & ~v9);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  v13 = v12(v10, 1, v7);
  v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v15 = *(_QWORD *)(v8 + 64);
  else
    v15 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v10, v11, v15);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  v17 = *(_QWORD *)(a3 + 24);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = v16 + v19;
  v21 = (void *)(((unint64_t)v10 + v20) & ~v19);
  v22 = (void *)(((unint64_t)v11 + v20) & ~v19);
  v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 48);
  v24 = v23(v21, 1, v17);
  v25 = v23(v22, 1, v17);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 32))(v21, v22, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
      return a1;
    }
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v18 + 40))(v21, v22, v17);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v18 + 8))(v21, v17);
  }
  if (*(_DWORD *)(v18 + 84))
    v26 = *(_QWORD *)(v18 + 64);
  else
    v26 = *(_QWORD *)(v18 + 64) + 1;
  memcpy(v21, v22, v26);
  return a1;
}

uint64_t sub_1D26BE948(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  unint64_t v23;
  uint64_t v24;
  unsigned int v25;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = v8 - 1;
  if (!v8)
    v9 = 0;
  if (v6 <= v9)
    v10 = v9;
  else
    v10 = v6;
  if (v10 <= 0x7FFFFFFF)
    v11 = 0x7FFFFFFF;
  else
    v11 = v10;
  v12 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v12;
  if (v8)
    v13 = *(_QWORD *)(v7 + 64);
  else
    v13 = *(_QWORD *)(v7 + 64) + 1;
  if (!a2)
    return 0;
  v14 = *(unsigned __int8 *)(v4 + 80);
  v15 = *(unsigned __int8 *)(v7 + 80);
  v16 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_36;
  v17 = v13 + ((v12 + v15 + ((v14 + 16) & ~v14)) & ~v15);
  v18 = 8 * v17;
  if (v17 <= 3)
  {
    v20 = ((v16 + ~(-1 << v18)) >> v18) + 1;
    if (HIWORD(v20))
    {
      v19 = *(_DWORD *)(a1 + v17);
      if (!v19)
        goto LABEL_36;
      goto LABEL_27;
    }
    if (v20 > 0xFF)
    {
      v19 = *(unsigned __int16 *)(a1 + v17);
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_36;
      goto LABEL_27;
    }
    if (v20 < 2)
    {
LABEL_36:
      if ((v10 & 0x80000000) == 0)
      {
        v23 = *(_QWORD *)(a1 + 8);
        if (v23 >= 0xFFFFFFFF)
          LODWORD(v23) = -1;
        return (v23 + 1);
      }
      v24 = (a1 + v14 + 16) & ~v14;
      if (v6 == v11)
      {
        if (v5 >= 2)
        {
          v25 = (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 48))(v24, *(unsigned int *)(v4 + 84));
          goto LABEL_46;
        }
      }
      else if (v8 >= 2)
      {
        v25 = (*(uint64_t (**)(uint64_t))(v7 + 48))((v24 + v12 + v15) & ~v15);
LABEL_46:
        if (v25 >= 2)
          return v25 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v19 = *(unsigned __int8 *)(a1 + v17);
  if (!*(_BYTE *)(a1 + v17))
    goto LABEL_36;
LABEL_27:
  v21 = (v19 - 1) << v18;
  if (v17 > 3)
    v21 = 0;
  if ((_DWORD)v17)
  {
    if (v17 <= 3)
      v22 = v17;
    else
      v22 = 4;
    __asm { BR              X12 }
  }
  return v11 + v21 + 1;
}

void sub_1D26BEB44(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  BOOL v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v9 <= v12)
    v13 = v12;
  else
    v13 = v9;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v15;
  v16 = *(_QWORD *)(v10 + 64);
  if (!v11)
    ++v16;
  v17 = v16
      + ((v15
        + *(unsigned __int8 *)(v10 + 80)
        + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  v18 = a3 >= v14;
  v19 = a3 - v14;
  if (v19 != 0 && v18)
  {
    if (v17 > 3)
    {
      v6 = 1u;
      if (v14 < a2)
        goto LABEL_26;
      goto LABEL_33;
    }
    v20 = ((v19 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v20))
    {
      v6 = 4u;
      if (v14 < a2)
      {
LABEL_26:
        v21 = ~v14 + a2;
        if (v17 < 4)
        {
          if ((_DWORD)v17)
          {
            v22 = v21 & ~(-1 << (8 * v17));
            bzero(a1, v17);
            if ((_DWORD)v17 == 3)
            {
              *a1 = v22;
              *((_BYTE *)a1 + 2) = BYTE2(v22);
            }
            else if ((_DWORD)v17 == 2)
            {
              *a1 = v22;
            }
            else
            {
              *(_BYTE *)a1 = v22;
            }
          }
        }
        else
        {
          bzero(a1, v17);
          *(_DWORD *)a1 = v21;
        }
        __asm { BR              X10 }
      }
LABEL_33:
      __asm { BR              X7 }
    }
    if (v20 >= 0x100)
      v6 = 2;
    else
      v6 = v20 > 1;
  }
  if (v14 < a2)
    goto LABEL_26;
  goto LABEL_33;
}

void sub_1D26BEDA4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1D26BEDAC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

uint64_t sub_1D26BEDD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  sub_1D26CDF38();
  sub_1D26CC3E4();
  sub_1D26CDF38();
  sub_1D26CC3E4();
  sub_1D26CC3E4();
  swift_getTupleTypeMetadata2();
  v0 = sub_1D26CD044();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0680], v0);
  v1 = sub_1D26CCFB4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96B078);
  v2 = sub_1D26CC3E4();
  v4[0] = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFCF8], v1);
  v4[1] = sub_1D2536488(&qword_1ED96B070, &qword_1ED96B078, MEMORY[0x1E0CDCF80]);
  return MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v2, v4);
}

uint64_t sub_1D26BEF04(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for TintedWidgetModifier(uint64_t a1)
{
  swift_release();
  swift_release();
  return sub_1D25ED9F0(*(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for TintedWidgetModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_BYTE *)(a2 + 40);
  swift_retain();
  swift_retain();
  sub_1D26BEF04(v5, v6);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  return a1;
}

uint64_t assignWithCopy for TintedWidgetModifier(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = v2[2];
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = v2[3];
  v4 = v2[4];
  LOBYTE(v2) = *((_BYTE *)v2 + 40);
  sub_1D26BEF04(v4, (char)v2);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = (_BYTE)v2;
  sub_1D25ED9F0(v5, v6);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TintedWidgetModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  char v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = *(_BYTE *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1D25ED9F0(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TintedWidgetModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TintedWidgetModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TintedWidgetModifier()
{
  return &type metadata for TintedWidgetModifier;
}

uint64_t sub_1D26BF158()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D26BF170(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D26BF1B8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CB38;
  if (!qword_1ED96CB38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CB40);
    v2[0] = sub_1D2536488(&qword_1ED96D328, &qword_1ED96D330, (uint64_t)&unk_1D26DCB20);
    v2[1] = v2[0];
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CB38);
  }
  return result;
}

uint64_t sub_1D26BF23C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBE8);
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)), v3);
}

unint64_t sub_1D26BF284()
{
  unint64_t result;

  result = qword_1ED96D158;
  if (!qword_1ED96D158)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DC998, &type metadata for TintedWidgetModifier);
    atomic_store(result, (unint64_t *)&qword_1ED96D158);
  }
  return result;
}

uint64_t sub_1D26BF2C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC720();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D26BF2F4()
{
  return sub_1D26CC72C();
}

unint64_t sub_1D26BF318()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96D168;
  if (!qword_1ED96D168)
  {
    v1 = type metadata accessor for TintedWidgetViewModel();
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for TintedWidgetViewModel, v1);
    atomic_store(result, (unint64_t *)&qword_1ED96D168);
  }
  return result;
}

void sub_1D26BF360()
{
  unint64_t v0;

  sub_1D25756A0(319, &qword_1ED96C940, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDAA30], MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1D26BF420(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
    v6 = a2[3];
    v7 = a2[4];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v8 = *(int *)(a3 + 52);
    v9 = (_QWORD *)(a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    *(_QWORD *)(a1 + 32) = v7;
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_1D26CC7A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D26BF51C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 52);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_1D26CC7A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_1D26BF59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v6 = *(int *)(a3 + 52);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  *(_QWORD *)(a1 + 32) = v5;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1D26CC7A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1D26BF66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 52);
    v8 = (_QWORD *)(a1 + v7);
    v9 = (_QWORD *)(a2 + v7);
    sub_1D253703C(a1 + v7, &qword_1ED96C938);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1D26CC7A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D26BF778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 52);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D26CC7A4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1D26BF840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 12) = *(_QWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 52);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_1D253703C(a1 + v6, &qword_1ED96C938);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1D26CC7A4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D26BF938()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26BF944(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83880);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 52)], a2, v8);
  }
}

uint64_t sub_1D26BF9C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D26BF9D0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83880);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 52)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TintedWidgetDesaturatedView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TintedWidgetDesaturatedView);
}

void sub_1D26BFA54()
{
  unint64_t v0;

  sub_1D25756A0(319, &qword_1ED96C940, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDAA30], MEMORY[0x1E0CD87D0]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_1D26BFB00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    v8 = *(int *)(a3 + 48);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_1D26CC7A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D26BFBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v5 = sub_1D26CC7A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1D26BFC84(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  v6 = a2[4];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = v6;
  v7 = *(int *)(a3 + 48);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (_QWORD *)((char *)a2 + v7);
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_1D26CC7A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D26BFD54(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  v6 = a2[4];
  a1[3] = a2[3];
  a1[4] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v7 = *(int *)(a3 + 48);
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    sub_1D253703C((uint64_t)a1 + v7, &qword_1ED96C938);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1D26CC7A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D26BFE60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void *v5;
  const void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 48);
  v5 = (void *)(a1 + v4);
  v6 = (const void *)(a2 + v4);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = sub_1D26CC7A4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1D26BFF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 48);
    v7 = (void *)(a1 + v6);
    v8 = (const void *)(a2 + v6);
    sub_1D253703C(a1 + v6, &qword_1ED96C938);
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1D26CC7A4();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D26C0010()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26C001C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83880);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 48)], a2, v8);
  }
}

uint64_t sub_1D26C009C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D26C00A8(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83880);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 48)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for TintedWidgetAccentedView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TintedWidgetAccentedView);
}

unint64_t sub_1D26C0130()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CBC0;
  if (!qword_1ED96CBC0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CBC8);
    v2[0] = sub_1D26BF1B8();
    v2[1] = sub_1D2536488(&qword_1ED96D420, &qword_1ED96D428, (uint64_t)&unk_1D26DCAD0);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CBC0);
  }
  return result;
}

uint64_t sub_1D26C01B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D26C01E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D26C021C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1D26BBCBC(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_1D26C0228(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[2];

  v1 = *(_QWORD *)(a1 + 8);
  sub_1D26CCB40();
  v2 = sub_1D26CC3E4();
  v4[0] = v1;
  v4[1] = MEMORY[0x1E0CDD290];
  return MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v2, v4);
}

uint64_t sub_1D26C0284(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t OpaqueTypeConformance2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  _QWORD v14[2];
  uint64_t v15;
  uint64_t v16;

  v2 = a1[1];
  v15 = *a1;
  v1 = v15;
  v16 = v2;
  v3 = MEMORY[0x1E0CDE1B0];
  MEMORY[0x1D823A478](255, &v15, MEMORY[0x1E0CDE1B0], 0);
  v15 = v1;
  v16 = v2;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v5 = sub_1D26CC45C();
  v6 = sub_1D26CC3E4();
  v7 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDA280], v5);
  v14[0] = MEMORY[0x1E0CDF5B0];
  v14[1] = v7;
  v8 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v6, v14);
  v15 = v6;
  v16 = v8;
  v9 = MEMORY[0x1D823A478](255, &v15, MEMORY[0x1E0CDE1F8], 0);
  v15 = v6;
  v16 = v8;
  v10 = swift_getOpaqueTypeConformance2();
  v15 = v9;
  v16 = v10;
  MEMORY[0x1D823A478](255, &v15, v3, 0);
  v11 = sub_1D26CC918();
  v15 = v9;
  v16 = v10;
  v13[0] = swift_getOpaqueTypeConformance2();
  v13[1] = OpaqueTypeConformance2;
  return MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v11, v13);
}

uint64_t sub_1D26C03F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  v1 = v0 + qword_1ED977D38;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v3 = v0 + qword_1ED961C00;
  v4 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED9634D0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D26C05C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v1 = qword_1ED962538;
  v2 = *(_QWORD *)(v0 + qword_1ED962538);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 24);
    v4 = *(os_unfair_lock_s **)(v3 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v4);
    if ((*(_BYTE *)(v2 + 32) & 1) == 0)
    {
      *(_BYTE *)(v2 + 32) = 1;
      objc_msgSend(*(id *)(v2 + 16), sel_invalidate);
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    swift_release();
  }
  *(_QWORD *)(v0 + v1) = 0;
  swift_release();
  v5 = sub_1D26C03F0();
  swift_bridgeObjectRelease();
  v6 = v5 + qword_1ED961D78;
  v7 = sub_1D26CC09C();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  sub_1D25495F4(*(_QWORD *)(v5 + qword_1ED977D40));
  sub_1D25495F4(*(_QWORD *)(v5 + qword_1ED977EB0));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v8(v5 + qword_1ED961E88, v7);
  return v5;
}

void PlaceholderStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  swift_allocObject();
  sub_1D26C0D34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1D26C07A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

void PlaceholderStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1D26C0D34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1D26C0834(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

void PlaceholderStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  swift_allocObject();
  sub_1D26C0BB0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1D26C08FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

void PlaceholderStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1D26C0BB0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1D26C0984(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

void PlaceholderStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:)()
{
  sub_1D26CE1D8();
  __break(1u);
}

uint64_t sub_1D26C0A24(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  char v6;
  uint64_t v8;

  swift_beginAccess();
  if (*(_BYTE *)(v2 + 168) == 1)
  {
    v5 = *(_QWORD *)(v2 + qword_1ED962920);
    v8 = a1;
    v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(**(_QWORD **)(v5 + 16) + 152))(&v8, a2);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1D26C0AA8()
{
  return swift_release();
}

uint64_t PlaceholderStatefulStore.deinit()
{
  uint64_t v0;

  v0 = sub_1D26C05C0();
  swift_release();
  return v0;
}

uint64_t PlaceholderStatefulStore.__deallocating_deinit()
{
  sub_1D26C05C0();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D26C0B2C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v8;

  v4 = *a1;
  swift_beginAccess();
  if (*(_BYTE *)(v2 + 168) == 1)
  {
    v5 = *(_QWORD *)(v2 + qword_1ED962920);
    v8 = v4;
    v6 = (*(uint64_t (**)(uint64_t *, uint64_t))(**(_QWORD **)(v5 + 16) + 152))(&v8, a2);
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

void sub_1D26C0BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[5];
  int v24;
  int v25;
  uint64_t v26;
  _BYTE v27[40];

  v23[0] = a4;
  v26 = a8;
  v24 = a6;
  v25 = a7;
  v23[3] = a1;
  v23[4] = a3;
  v23[2] = a10;
  v13 = sub_1D26CC09C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9631D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, a2, a9);
  v21 = sub_1D264AB54((uint64_t)v20, a9, a11);
  v22 = v23[0];
  *(_QWORD *)(v23[1] + qword_1ED962920) = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v22, v13);
  sub_1D2538510(a5, (uint64_t)v27);
  sub_1D25B07B4();
}

uint64_t sub_1D26C0CF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v4);
  return a1;
}

void sub_1D26C0D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  int v28;
  uint64_t v29;
  _BYTE v30[40];

  v12 = v11;
  v29 = a8;
  v27 = a6;
  v28 = a7;
  v22 = a4;
  v23 = a5;
  v25 = a1;
  v26 = a3;
  v24 = a10;
  v14 = sub_1D26CC09C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v22 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9631D0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, a2, a9);
  *(_QWORD *)(v12 + qword_1ED962920) = sub_1D264AB54((uint64_t)v21, a9, a11);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v22, v14);
  sub_1D2538510(v23, (uint64_t)v30);
  sub_1D25B07B4();
}

uint64_t sub_1D26C0E84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v3);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v4);
  return a1;
}

uint64_t type metadata accessor for PlaceholderStatefulStore()
{
  uint64_t result;

  result = qword_1ED961F10;
  if (!qword_1ED961F10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D26C0F08()
{
  return swift_initClassMetadata2();
}

uint64_t ControlsCacheManager.__allocating_init(subdirectory:cacheKeyProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, uint64_t a5, char a6)
{
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  __int128 v16;
  uint64_t v17;
  _UNKNOWN **v18;
  __int128 v19[2];

  v12 = type metadata accessor for ControlsCacheURLProvider();
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = a1;
  v13[3] = a2;
  v13[4] = 0x632D6F6E6F726863;
  v13[5] = 0xEF736C6F72746E6FLL;
  sub_1D2538510(a3, (uint64_t)v19);
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1(a3);
  v17 = v12;
  v18 = &protocol witness table for ControlsCacheURLProvider;
  *(_QWORD *)&v16 = v13;
  type metadata accessor for ControlsCacheManager(0);
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 160) = a6 ^ 1;
  *(_QWORD *)(v14 + 24) = a1;
  *(_QWORD *)(v14 + 32) = a2;
  sub_1D2538F38(v19, v14 + 40);
  sub_1D2538F38(&v16, v14 + 80);
  sub_1D2538F38(a4, v14 + 120);
  *(_QWORD *)(v14 + 16) = a5;
  return v14;
}

uint64_t (*sub_1D26C105C(_QWORD *a1))(uint64_t, uint64_t)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = type metadata accessor for ControlCacheKey();
  MEMORY[0x1E0C80A78](v31);
  v32 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1D26CB880();
  v7 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v29 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v1;
  sub_1D2538510(v1 + 40, (uint64_t)v33);
  v10 = v34;
  v9 = v35;
  __swift_project_boxed_opaque_existential_0(v33, v34);
  v11 = a1[3];
  v12 = a1[4];
  v13 = __swift_project_boxed_opaque_existential_0(a1, v11);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
  v26[1] = v13;
  v27 = v11;
  v15 = v11;
  v16 = v14;
  v28 = v12;
  v17 = (void *)v14(v15, v12);
  v18 = v10;
  v19 = v36;
  (*(void (**)(void *, uint64_t, uint64_t))(v9 + 48))(v17, v18, v9);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v19) == 1)
  {
    sub_1D253703C((uint64_t)v6, (uint64_t *)&unk_1ED96FC50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    type metadata accessor for ControlsCacheManager.CacheManagementError(0);
    sub_1D25369B0(&qword_1EFC83890, type metadata accessor for ControlsCacheManager.CacheManagementError, (uint64_t)&unk_1D26DCC90);
    swift_allocError();
    *v20 = v16(v27, v28);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    v21 = v29;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v29, v6, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    sub_1D2538510(v30 + 80, (uint64_t)v33);
    v22 = v34;
    v23 = v35;
    __swift_project_boxed_opaque_existential_0(v33, v34);
    v24 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v32, v21, v19);
    *(_QWORD *)(v24 + *(int *)(v31 + 20)) = 0;
    v16 = (uint64_t (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16))(v24, v22, v23);
    sub_1D25340E4(v24, (uint64_t (*)(_QWORD))type metadata accessor for ControlCacheKey);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v21, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  return v16;
}

uint64_t sub_1D26C1320(id *a1)
{
  _BYTE *v1;

  sub_1D25B8BE0(a1, v1);
  return 1;
}

uint64_t sub_1D26C1360(id *a1)
{
  _BYTE *v1;

  return sub_1D25B9628(a1, v1);
}

uint64_t sub_1D26C1378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12[2];
  __int128 v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB78);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1D26CD428();
  if (!v1)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB70);
    MEMORY[0x1E0C80A78](v7);
    *(_QWORD *)&v12[-1] = 0xD000000000000021;
    *((_QWORD *)&v12[-1] + 1) = 0x80000001D26E1110;
    sub_1D26CB844();
    v8 = v12[0];
    sub_1D26CB6F4();
    swift_allocObject();
    sub_1D26CB6E8();
    sub_1D26C260C();
    sub_1D26CB6DC();
    swift_release();
    sub_1D253EE04(v8, *((unint64_t *)&v8 + 1));
    v10 = *(_QWORD *)(v7 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v5, 0, 1, v7);
    sub_1D26CBC04();
    v11 = v12[0];
    (*(void (**)(char *, uint64_t))(v10 + 8))(v5, v7);
    sub_1D2538F38(&v13, (uint64_t)v12);
    type metadata accessor for ControlEntryContent();
    v9 = swift_allocObject();
    result = sub_1D2538F38(v12, v9 + 16);
    *(_BYTE *)(v9 + 56) = v11;
    *a1 = v9;
  }
  return result;
}

_QWORD *sub_1D26C15C0(id *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  _UNKNOWN **v20;
  char v21;
  _QWORD *v22;
  _UNKNOWN **v23;
  id v24;
  void (*v25)(void);
  uint64_t v26;
  id v28;
  uint64_t v29;
  void *v30;
  unsigned __int8 v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  id v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  id *v44;
  id v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  _UNKNOWN **v53;
  uint64_t v54;

  v3 = v1;
  v54 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CD488();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D26CB880();
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v42 - v17;
  if (*(_BYTE *)(v3 + 160) != 1)
  {
    v22 = (_QWORD *)type metadata accessor for ControlsCacheManager.CacheManagementError(0);
    sub_1D25369B0(&qword_1EFC83890, type metadata accessor for ControlsCacheManager.CacheManagementError, (uint64_t)&unk_1D26DCC90);
    swift_allocError();
LABEL_7:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v22;
  }
  v46 = v8;
  v47 = v16;
  v49 = v15;
  v50 = v14;
  v48 = v7;
  sub_1D2538510(v3 + 40, (uint64_t)&v51);
  v19 = v52;
  v20 = v53;
  __swift_project_boxed_opaque_existential_0(&v51, v52);
  v21 = ((uint64_t (*)(id *, unint64_t, _UNKNOWN **))v20[5])(a1, v19, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  if ((v21 & 1) == 0)
  {
    v22 = (_QWORD *)type metadata accessor for ControlsCacheManager.CacheManagementError(0);
    sub_1D25369B0(&qword_1EFC83890, type metadata accessor for ControlsCacheManager.CacheManagementError, (uint64_t)&unk_1D26DCC90);
    swift_allocError();
    sub_1D263B9C0((uint64_t)a1, v26);
    goto LABEL_7;
  }
  v22 = (_QWORD *)v3;
  sub_1D257E538(a1, (uint64_t)v18);
  if (!v2)
  {
    swift_beginAccess();
    sub_1D2538510(v3 + 120, (uint64_t)&v51);
    v23 = v53;
    __swift_project_boxed_opaque_existential_0(&v51, v52);
    v24 = objc_msgSend(*a1, sel_extensionIdentity);
    v25 = (void (*)(void))v23[2];
    v45 = v24;
    v25();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
    v44 = (id *)(v3 + 16);
    swift_beginAccess();
    v28 = *(id *)(v3 + 16);
    v29 = v47;
    sub_1D26CB82C();
    v30 = (void *)sub_1D26CB7D8();
    v45 = *(id *)(v49 + 8);
    ((void (*)(uint64_t, uint64_t))v45)(v29, v50);
    *(_QWORD *)&v51 = 0;
    v31 = objc_msgSend(v28, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v30, 1, 0, &v51);

    v32 = (id)v51;
    if ((v31 & 1) != 0)
    {
      *(_QWORD *)&v51 = ControlEntryKey.description.getter();
      *((_QWORD *)&v51 + 1) = v33;
      sub_1D26CDA04();
      sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v34 = v50;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v42 = *((_QWORD *)&v51 + 1);
      v43 = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v29, v18, v34);
      v35 = (uint64_t)v48;
      v36 = v46;
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v48, v11, v46);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v35, 0, 1, v36);
      v37 = *(void (**)(char *, uint64_t))(v9 + 8);
      v38 = *v44;
      v37(v11, v36);
      ((void (*)(char *, uint64_t))v45)(v18, v34);
      v52 = sub_1D257F2D4();
      v53 = &off_1E93D53E8;
      *(_QWORD *)&v51 = v38;
      type metadata accessor for DataProtectedArchiveFilePromise(0);
      v22 = (_QWORD *)swift_allocObject();
      v39 = (char *)v22 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
      v40 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
      v41 = v42;
      v22[2] = v43;
      v22[3] = v41;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))((uint64_t)v22 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination, v29, v34);
      sub_1D2538F38(&v51, (uint64_t)(v22 + 4));
      sub_1D257F310((uint64_t)v48, (uint64_t)v22 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel);
    }
    else
    {
      v22 = v32;
      sub_1D26CB76C();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v46);
      ((void (*)(char *, uint64_t))v45)(v18, v50);
    }
  }
  return v22;
}

uint64_t ControlsCacheManager.__allocating_init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6, char a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22[2];

  v15 = *(_QWORD *)(a4 + 24);
  v14 = *(_QWORD *)(a4 + 32);
  v16 = __swift_mutable_project_boxed_opaque_existential_1(a4, v15);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v19 + 16))(v18);
  v20 = sub_1D26C1D64(a1, a2, a3, (uint64_t)v18, a5, a6, a7, v22[1], v15, v14);
  __swift_destroy_boxed_opaque_existential_1(a4);
  return v20;
}

uint64_t type metadata accessor for ControlsCacheManager(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96FA80);
}

uint64_t ControlsCacheManager.init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, __int128 *a5, uint64_t a6, char a7)
{
  uint64_t v7;

  *(_BYTE *)(v7 + 160) = a7 ^ 1;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  sub_1D2538F38(a3, v7 + 40);
  sub_1D2538F38(a4, v7 + 80);
  sub_1D2538F38(a5, v7 + 120);
  *(_QWORD *)(v7 + 16) = a6;
  return v7;
}

uint64_t type metadata accessor for ControlsCacheManager.CacheManagementError(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1EFC83898);
}

uint64_t ControlsCacheManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return v0;
}

uint64_t ControlsCacheManager.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return swift_deallocClassInstance();
}

uint64_t sub_1D26C1D38@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t result;

  result = sub_1D25B9628(a1, v2);
  if (!v3)
    *a2 = result;
  return result;
}

uint64_t sub_1D26C1D64(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4, __int128 *a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a9;
  v22 = a10;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v20);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(boxed_opaque_existential_1, a4, a9);
  type metadata accessor for ControlsCacheManager(0);
  v18 = swift_allocObject();
  *(_BYTE *)(v18 + 160) = a7 ^ 1;
  *(_QWORD *)(v18 + 24) = a1;
  *(_QWORD *)(v18 + 32) = a2;
  sub_1D2538F38(a3, v18 + 40);
  sub_1D2538F38(&v20, v18 + 80);
  sub_1D2538F38(a5, v18 + 120);
  *(_QWORD *)(v18 + 16) = a6;
  return v18;
}

uint64_t sub_1D26C1E2C(uint64_t a1)
{
  uint64_t result;

  result = sub_1D25369B0(&qword_1ED96B100, type metadata accessor for ControlsCacheManager, (uint64_t)&protocol conformance descriptor for BaseCacheManager<A, B, C>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D26C1E68()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ControlsCacheManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlsCacheManager.urls(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

char *sub_1D26C1EC4(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *a2;
      *(_QWORD *)a1 = *a2;
      v12 = *(int *)(type metadata accessor for ControlEntryKey() + 20);
      v13 = &a1[v12];
      v14 = (char *)a2 + v12;
      v15 = v11;
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v13, v14, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
      }
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = *a2;
      *(_QWORD *)a1 = *a2;
      v9 = v8;
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void sub_1D26C201C(id *a1)
{
  int EnumCaseMultiPayload;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

    v3 = (char *)a1 + *(int *)(type metadata accessor for ControlEntryKey() + 20);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  else if (!EnumCaseMultiPayload)
  {

  }
}

void **sub_1D26C20C4(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v9 = *a2;
    *a1 = *a2;
    v10 = *(int *)(type metadata accessor for ControlEntryKey() + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = v9;
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v12, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = *a2;
    *a1 = *a2;
    v8 = v7;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void **sub_1D26C21F4(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  void *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  if (a1 != a2)
  {
    sub_1D25340E4((uint64_t)a1, type metadata accessor for ControlsCacheManager.CacheManagementError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v9 = *a2;
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for ControlEntryKey() + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = v9;
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v15 = *(_QWORD *)(v14 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v12, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v11, v12, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v14);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1D26C233C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for ControlEntryKey() + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1D26C2448(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1D25340E4((uint64_t)a1, type metadata accessor for ControlsCacheManager.CacheManagementError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for ControlEntryKey() + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D26C256C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ControlEntryKey();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D26C25E0()
{
  return sub_1D25369B0(&qword_1EFC83890, type metadata accessor for ControlsCacheManager.CacheManagementError, (uint64_t)&unk_1D26DCC90);
}

unint64_t sub_1D26C260C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96E7E8;
  if (!qword_1ED96E7E8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96FB70);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0D0F6A8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96E7E8);
  }
  return result;
}

uint64_t sub_1D26C2658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D26C26BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2593210(&OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType, a1);
}

uint64_t sub_1D26C26C8(uint64_t a1)
{
  return sub_1D26C3324(a1, &OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType);
}

uint64_t (*sub_1D26C26D4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FixedDataProtectionProvider.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType;
  v4 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t FixedDataProtectionProvider.init(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType;
  v4 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_1D26C27D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FixedDataProtectionProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FixedDataProtectionProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D26C28DC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D26C2944@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D26C29BC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2593210(&OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel, a1);
}

uint64_t sub_1D26C29C8(uint64_t a1)
{
  return sub_1D26C3324(a1, &OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel);
}

uint64_t (*sub_1D26C29D4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ClientDataProtectionLevelProvider.__allocating_init(defaultLevel:extensionProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  sub_1D25384CC(a2, v4 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_extensionProvider, &qword_1ED96FAA8);
  v5 = v4 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel;
  v6 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a1, v6);
  return v4;
}

uint64_t ClientDataProtectionLevelProvider.init(defaultLevel:extensionProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_1D25384CC(a2, v2 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_extensionProvider, &qword_1ED96FAA8);
  v4 = v2 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel;
  v5 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a1, v5);
  return v2;
}

uint64_t sub_1D26C2B14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  _QWORD *v29;
  NSObject *v30;
  void *v31;
  _QWORD *v32;
  void *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  char *v38;
  uint64_t v39;
  id v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _OWORD v47[2];
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  id v51;

  v4 = v3;
  v5 = v2;
  v8 = sub_1D26CD488();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v45 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  v12 = MEMORY[0x1E0C80A78](v11);
  v44 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v43 - v14;
  sub_1D26C3110(v2 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_extensionProvider, (uint64_t)v48);
  v16 = v49;
  if (v49)
  {
    v46 = v2;
    v17 = a2;
    v18 = v50;
    __swift_project_boxed_opaque_existential_0(v48, v49);
    v19 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v18 + 8))(a1, v16, v18);
    if (v3)
    {

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      v4 = 0;
LABEL_4:
      a2 = v17;
      v5 = v46;
      goto LABEL_6;
    }
    v31 = (void *)v19;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    if (!v31)
      goto LABEL_4;
    objc_msgSend(v31, sel_dataProtectionLevel);
    sub_1D26CD4A0();

    a2 = v17;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) != 1)
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v17, v15, v8);
    sub_1D253703C((uint64_t)v15, &qword_1ED96FC90);
    v5 = v46;
  }
  else
  {
    sub_1D253703C((uint64_t)v48, &qword_1ED96FAA8);
  }
LABEL_6:
  if ((objc_msgSend(a1, sel_isRemote) & 1) != 0)
  {
    v20 = v5 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel;
    swift_beginAccess();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a2, v20, v8);
  }
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  sub_1D26CBC88();
  swift_endAccess();
  v22 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
  v23 = sub_1D2536A30();
  if (!v4)
  {
    v33 = v23;
    if (!v23)
      goto LABEL_10;
    v46 = v5;
    v34 = a2;
    v35 = objc_msgSend(v23, sel_entitlements);
    v36 = (void *)sub_1D26CD914();
    sub_1D26C390C();
    v37 = objc_msgSend(v35, sel_objectForKey_ofClass_, v36, swift_getObjCClassFromMetadata());

    if (v37)
    {
      sub_1D26CDFA4();
      swift_unknownObjectRelease();
    }
    else
    {
      memset(v47, 0, sizeof(v47));
    }
    v39 = (uint64_t)v44;
    v38 = v45;
    sub_1D25384CC((uint64_t)v47, (uint64_t)v48, &qword_1ED96FCE0);
    if (v49)
    {
      type metadata accessor for FileProtectionType(0);
      if ((swift_dynamicCast() & 1) != 0 && v51)
      {
        v40 = v51;
        sub_1D26CD494();

        goto LABEL_30;
      }
    }
    else
    {
      sub_1D253703C((uint64_t)v48, &qword_1ED96FCE0);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v39, 1, 1, v8);
LABEL_30:

    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v39, 1, v8) == 1)
    {
      v41 = v46 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v38, v41, v8);
      sub_1D253703C(v39, &qword_1ED96FC90);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v34, v38, v8);
    }
    else
    {
      v42 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 32);
      v42(v38, v39, v8);
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v42)(v34, v38, v8);
    }
  }

LABEL_10:
  if (qword_1ED9621C0 != -1)
    swift_once();
  v24 = sub_1D26CC09C();
  __swift_project_value_buffer(v24, (uint64_t)qword_1ED977CF0);
  v25 = a1;
  v26 = sub_1D26CC084();
  v27 = sub_1D26CDCEC();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v28 = 138543362;
    v48[0] = v25;
    v30 = v25;
    sub_1D26CDF50();
    *v29 = v25;

    _os_log_impl(&dword_1D2531000, v26, v27, "Extension not found for %{public}@", v28, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v29, -1, -1);
    MEMORY[0x1D823A5E0](v28, -1, -1);
  }
  else
  {

    v26 = v25;
  }

  sub_1D268AE64();
  swift_allocError();
  *v32 = 6;
  return swift_willThrow();
}

uint64_t sub_1D26C3110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FAA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ClientDataProtectionLevelProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_extensionProvider, &qword_1ED96FAA8);
  return v0;
}

uint64_t ClientDataProtectionLevelProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_extensionProvider, &qword_1ED96FAA8);
  return swift_deallocClassInstance();
}

uint64_t sub_1D26C321C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2534728(&OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel, a1);
}

uint64_t sub_1D26C3228@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D26C2B14(a1, a2);
}

uint64_t sub_1D26C3248(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;

  v8 = sub_1D26CD488();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = *a2 + *a5;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 40))(v12, v11, v8);
  return swift_endAccess();
}

uint64_t sub_1D26C330C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2593210(&OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel, a1);
}

uint64_t sub_1D26C3318(uint64_t a1)
{
  return sub_1D26C3324(a1, &OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel);
}

uint64_t sub_1D26C3324(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a2;
  swift_beginAccess();
  v5 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
  return swift_endAccess();
}

uint64_t (*sub_1D26C338C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ExtensionDataProtectionLevelProvider.__allocating_init(extensionManager:default:)(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  sub_1D2538F38(a1, v4 + 16);
  v5 = v4 + OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel;
  v6 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v5, a2, v6);
  return v4;
}

uint64_t ExtensionDataProtectionLevelProvider.init(extensionManager:default:)(__int128 *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  sub_1D2538F38(a1, v2 + 16);
  v4 = v2 + OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel;
  v5 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a2, v5);
  return v2;
}

uint64_t sub_1D26C34A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  _QWORD *v24;
  NSObject *v25;
  _QWORD *v26;
  __int128 v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[3];
  uint64_t v33;
  uint64_t v34;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  sub_1D2538510(v2 + 16, (uint64_t)v29);
  v9 = v30;
  v10 = v31;
  __swift_project_boxed_opaque_existential_0(v29, v30);
  ExtensionManaging.extension(for:)((uint64_t)a1, v9, v10);
  if (v28)
  {
    sub_1D2538F38(&v27, (uint64_t)v32);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    v11 = v33;
    v12 = v34;
    __swift_project_boxed_opaque_existential_0(v32, v33);
    (*(void (**)(uint64_t, uint64_t))(v12 + 112))(v11, v12);
    v13 = sub_1D26CD488();
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
    {
      sub_1D253703C((uint64_t)v8, &qword_1ED96FC90);
      v15 = v3 + OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel;
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a2, v15, v13);
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v8, v13);
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
  }
  else
  {
    sub_1D253703C((uint64_t)&v27, &qword_1ED962040);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    if ((objc_msgSend(a1, sel_isRemote) & 1) != 0)
    {
      v16 = v3 + OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel;
      swift_beginAccess();
      v17 = sub_1D26CD488();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a2, v16, v17);
    }
    else
    {
      if (qword_1ED9621C0 != -1)
        swift_once();
      v19 = sub_1D26CC09C();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED977CF0);
      v20 = a1;
      v21 = sub_1D26CC084();
      v22 = sub_1D26CDCEC();
      if (os_log_type_enabled(v21, v22))
      {
        v23 = (uint8_t *)swift_slowAlloc();
        v24 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v23 = 138543362;
        v32[0] = v20;
        v25 = v20;
        sub_1D26CDF50();
        *v24 = v20;

        _os_log_impl(&dword_1D2531000, v21, v22, "Extension not found for %{public}@", v23, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v24, -1, -1);
        MEMORY[0x1D823A5E0](v23, -1, -1);
      }
      else
      {

        v21 = v20;
      }

      sub_1D268AE64();
      swift_allocError();
      *v26 = 6;
      return swift_willThrow();
    }
  }
}

uint64_t ExtensionDataProtectionLevelProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ExtensionDataProtectionLevelProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D26C38E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2534728(&OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel, a1);
}

uint64_t sub_1D26C38EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D26C34A4(a1, a2);
}

unint64_t sub_1D26C390C()
{
  unint64_t result;

  result = qword_1ED96FCD0;
  if (!qword_1ED96FCD0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96FCD0);
  }
  return result;
}

uint64_t sub_1D26C3948@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2593074(a1, &OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType, a2);
}

uint64_t sub_1D26C3964(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D26C3248(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit27FixedDataProtectionProvider_protectionType);
}

uint64_t sub_1D26C3980@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2593074(a1, &OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel, a2);
}

uint64_t sub_1D26C399C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D26C3248(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit33ClientDataProtectionLevelProvider_defaultLevel);
}

uint64_t sub_1D26C39B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 16;
  swift_beginAccess();
  return sub_1D2538510(v3, a2);
}

uint64_t sub_1D26C3A08@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2593074(a1, &OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel, a2);
}

uint64_t sub_1D26C3A24(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D26C3248(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit36ExtensionDataProtectionLevelProvider_defaultLevel);
}

uint64_t dispatch thunk of DataProtectionLevelProviding.defaultLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DataProtectionLevelProviding.protectionType(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1D26C3A60()
{
  return type metadata accessor for FixedDataProtectionProvider(0);
}

uint64_t type metadata accessor for FixedDataProtectionProvider(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96C8B0);
}

uint64_t sub_1D26C3A7C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CD488();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FixedDataProtectionProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FixedDataProtectionProvider.defaultLevel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of FixedDataProtectionProvider.protectionType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of FixedDataProtectionProvider.protectionType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of FixedDataProtectionProvider.protectionType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of FixedDataProtectionProvider.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of FixedDataProtectionProvider.protectionType(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t sub_1D26C3B48()
{
  return type metadata accessor for ClientDataProtectionLevelProvider(0);
}

uint64_t type metadata accessor for ClientDataProtectionLevelProvider(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96FAB8);
}

uint64_t sub_1D26C3B64()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CD488();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ClientDataProtectionLevelProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClientDataProtectionLevelProvider.__allocating_init(defaultLevel:extensionProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1D26C3BEC()
{
  return type metadata accessor for ExtensionDataProtectionLevelProvider(0);
}

uint64_t type metadata accessor for ExtensionDataProtectionLevelProvider(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED9631D8);
}

uint64_t sub_1D26C3C08()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CD488();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ExtensionDataProtectionLevelProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExtensionDataProtectionLevelProvider.extensionManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ExtensionDataProtectionLevelProvider.extensionManager.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ExtensionDataProtectionLevelProvider.defaultLevel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ExtensionDataProtectionLevelProvider.defaultLevel.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ExtensionDataProtectionLevelProvider.defaultLevel.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ExtensionDataProtectionLevelProvider.__allocating_init(extensionManager:default:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ExtensionDataProtectionLevelProvider.protectionType(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ClientDataProtectionLevelProvider.protectionType(for:)()
{
  return dispatch thunk of FixedDataProtectionProvider.protectionType(for:)();
}

uint64_t sub_1D26C3D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD v13[2];

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7, v8);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v10 = v13[0];
    v11 = v13[1];
  }
  else
  {
    sub_1D26CB724();
    swift_allocObject();
    sub_1D26CB718();
    sub_1D26CB700();
    v10 = sub_1D26CB70C();
    v11 = v12;
    result = swift_release();
    if (v2)
      return result;
  }
  MEMORY[0x1E0C80A78](result);
  v13[-4] = v10;
  v13[-3] = v11;
  v13[-2] = a1;
  v13[-1] = a2;
  sub_1D26CB844();
  return sub_1D253EE04(v10, v11);
}

unint64_t sub_1D26C3E80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  _QWORD v13[2];
  unint64_t v14;
  unint64_t v15;

  v1 = v0;
  v2 = sub_1D26CB598();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = _s22ExtendedAttributeErrorOMa();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26C5568(v1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *((_QWORD *)v8 + 2);
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, &v8[*(int *)(v10 + 64)], v2);
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_1D26CE0A0();
    sub_1D26CDA04();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    v13[1] = v9;
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CE190();
    v11 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  else
  {
    v14 = 0;
    v15 = 0xE000000000000000;
    sub_1D26CE0A0();
    swift_bridgeObjectRelease();
    v14 = 0xD000000000000019;
    v15 = 0x80000001D26E6950;
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    return v14;
  }
  return v11;
}

uint64_t sub_1D26C40E4(const char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t result;
  int v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t (*v12)(uint64_t);

  v6 = sub_1D26CD9B0();
  v7 = removexattr(a1, (const char *)(v6 + 32), 0);
  result = swift_release();
  if (v7 < 0)
  {
    MEMORY[0x1D823788C](result);
    result = sub_1D26CC0B4();
    if ((result & 0x100000000) != 0)
    {
      __break(1u);
    }
    else
    {
      sub_1D26CB580();
      v9 = sub_1D26CC0C0();
      result = sub_1D26CC0C0();
      if (v9 != (_DWORD)result)
      {
        _s22ExtendedAttributeErrorOMa();
        sub_1D25369B0(&qword_1ED96EA40, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_1D26DCEC0);
        swift_allocError();
        v11 = v10;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8);
        *v11 = a2;
        v11[1] = a3;
        v11[2] = v7;
        sub_1D26CB598();
        v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
        swift_bridgeObjectRetain();
        sub_1D2567BEC(MEMORY[0x1E0DEE9D8]);
        sub_1D25369B0((unint64_t *)&unk_1ED962300, v12, MEMORY[0x1E0CADE88]);
        sub_1D26CB754();
        swift_storeEnumTagMultiPayload();
        return swift_willThrow();
      }
    }
  }
  return result;
}

void sub_1D26C4278(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1D26C42DC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t value, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t result;
  void *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t (*v39)(uint64_t);
  int v40;
  char v41;
  char v42;
  char v43;
  char v44;
  __int16 v45;
  char v46;
  char v47;
  char v48;
  char v49;

  LOWORD(v40) = v29;
  BYTE2(v40) = BYTE2(v29);
  HIBYTE(v40) = BYTE3(v29);
  v41 = BYTE4(v29);
  v42 = BYTE5(v29);
  v43 = BYTE6(v29);
  v44 = HIBYTE(v29);
  v45 = v30;
  v46 = BYTE2(v30);
  v47 = BYTE3(v30);
  v48 = BYTE4(v30);
  v49 = BYTE5(v30);
  v31 = sub_1D26CD9B0();
  v32 = setxattr(v28, (const char *)(v31 + 32), &v40, BYTE6(v30), 0, 0);
  result = swift_release();
  if (v32 < 0)
  {
    _s22ExtendedAttributeErrorOMa();
    sub_1D25369B0(&qword_1ED96EA40, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_1D26DCEC0);
    v34 = (void *)swift_allocError();
    *v35 = v27;
    v35[1] = v26;
    v35[2] = v32;
    v36 = swift_bridgeObjectRetain();
    MEMORY[0x1D823788C](v36);
    v37 = sub_1D26CC0B4();
    if ((v37 & 0x100000000) != 0)
    {

      __break(1u);
      JUMPOUT(0x1D26C466CLL);
    }
    v38 = v37;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8);
    sub_1D26CB598();
    v39 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
    v40 = v38;
    sub_1D2567BEC(MEMORY[0x1E0DEE9D8]);
    sub_1D25369B0((unint64_t *)&unk_1ED962300, v39, MEMORY[0x1E0CADE88]);
    sub_1D26CB754();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  return result;
}

uint64_t _s22ExtendedAttributeErrorOMa()
{
  uint64_t result;

  result = qword_1ED96EA48;
  if (!qword_1ED96EA48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D26C46B8@<X0>(const char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  ssize_t v10;
  unint64_t v11;
  uint64_t result;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;

  v9 = sub_1D26CD9B0();
  v10 = getxattr(a1, (const char *)(v9 + 32), 0, 0, 0, 0);
  swift_release();
  if (v10 < 1)
  {
    _s22ExtendedAttributeErrorOMa();
    sub_1D25369B0(&qword_1ED96EA40, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_1D26DCEC0);
    swift_allocError();
    *v14 = a2;
    v14[1] = a3;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    v15 = sub_1D25C7D60(v10);
    v16 = v11;
    swift_bridgeObjectRetain();
    sub_1D26C497C((uint64_t)&v15);
    result = v15;
    v13 = v16;
    if (v4)
    {
      return sub_1D253EE04(v15, v16);
    }
    else
    {
      *a4 = v15;
      a4[1] = v13;
    }
  }
  return result;
}

void sub_1D26C47F8(void *a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, size_t a6)
{
  uint64_t v11;
  ssize_t v12;
  void *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);

  v11 = sub_1D26CD9B0();
  v12 = getxattr(a3, (const char *)(v11 + 32), a1, a6, 0, 0);
  swift_release();
  if (v12 < 1)
  {
    _s22ExtendedAttributeErrorOMa();
    sub_1D25369B0(&qword_1ED96EA40, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_1D26DCEC0);
    v13 = (void *)swift_allocError();
    *v14 = a4;
    v14[1] = a5;
    v14[2] = v12;
    v15 = swift_bridgeObjectRetain();
    MEMORY[0x1D823788C](v15);
    if ((sub_1D26CC0B4() & 0x100000000) != 0)
    {

      __break(1u);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8);
      sub_1D26CB598();
      v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90];
      sub_1D2567BEC(MEMORY[0x1E0DEE9D8]);
      sub_1D25369B0((unint64_t *)&unk_1ED962300, v16, MEMORY[0x1E0CADE88]);
      sub_1D26CB754();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

void sub_1D26C497C(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1D26C49E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  size_t v3;
  _QWORD *v4;
  uint64_t v5;
  const char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unsigned int v14;
  unsigned __int8 v15;
  unsigned __int8 v16;
  unsigned __int8 v17;

  v13 = v1;
  LOWORD(v14) = a1;
  BYTE2(v14) = BYTE2(a1);
  HIBYTE(v14) = BYTE3(a1);
  v15 = BYTE4(a1);
  v16 = BYTE5(a1);
  v17 = BYTE6(a1);
  sub_1D26C47F8(&v13, (uint64_t)&v13 + BYTE6(a1), v6, v5, v2, v3);
  v7 = v13;
  v8 = v14;
  v9 = v15;
  v10 = v16;
  v11 = v17;
  result = swift_bridgeObjectRelease();
  *v4 = v7;
  v4[1] = v8 | (v9 << 32) | (v10 << 40) | (v11 << 48);
  return result;
}

uint64_t sub_1D26C4C18(int *a1, const char *a2, uint64_t a3, uint64_t a4, size_t a5)
{
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const char *v19;

  result = sub_1D26CB8A4();
  v12 = *a1;
  v11 = a1[1];
  if ((int)v11 < (int)v12)
  {
    __break(1u);
    goto LABEL_9;
  }
  v18 = a4;
  v19 = a2;
  result = sub_1D26CB64C();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v13 = result;
  result = sub_1D26CB670();
  v14 = v12 - result;
  if (__OFSUB__(v12, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v15 = v11 - v12;
  v16 = sub_1D26CB664();
  if (v16 >= v15)
    v17 = v15;
  else
    v17 = v16;
  sub_1D26C47F8((void *)(v13 + v14), v13 + v14 + v17, v19, a3, v18, a5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26C4CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  char *v31;
  char v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  char v40;
  void (*v41)(char *, uint64_t);
  void (*v42)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;

  v49 = a2;
  v3 = sub_1D26CB598();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v44 - v8;
  v10 = _s22ExtendedAttributeErrorOMa();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (uint64_t *)((char *)&v44 - v14);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC838A8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = &v19[*(int *)(v17 + 48)];
  sub_1D26C5568(a1, (uint64_t)v19);
  sub_1D26C5568(v49, (uint64_t)v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1D26C5568((uint64_t)v19, (uint64_t)v15);
    v36 = *v15;
    v37 = v15[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      if (v36 == *(_QWORD *)v20 && v37 == *((_QWORD *)v20 + 1))
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v39 = sub_1D26CE3D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v39 & 1) == 0)
        {
LABEL_22:
          sub_1D25D5564((uint64_t)v19);
          goto LABEL_23;
        }
      }
      sub_1D25D5564((uint64_t)v19);
      v40 = 1;
      return v40 & 1;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_1D26C55AC((uint64_t)v19);
LABEL_23:
    v40 = 0;
    return v40 & 1;
  }
  v48 = v3;
  v49 = v4;
  v47 = v9;
  sub_1D26C5568((uint64_t)v19, (uint64_t)v13);
  v21 = *(_QWORD *)v13;
  v22 = *((_QWORD *)v13 + 1);
  v23 = *((_QWORD *)v13 + 2);
  v24 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8) + 64);
  v25 = &v13[v24];
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v49 + 8))(&v13[v24], v48);
    goto LABEL_17;
  }
  v27 = *(_QWORD *)v20;
  v26 = *((_QWORD *)v20 + 1);
  v45 = *((_QWORD *)v20 + 2);
  v46 = v23;
  v28 = &v20[v24];
  v29 = v48;
  v30 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  v30(v47, v25, v48);
  v31 = v7;
  v30(v7, v28, v29);
  if (v21 == v27 && v22 == v26)
  {
    swift_bridgeObjectRelease_n();
    v34 = v47;
    v35 = v49;
  }
  else
  {
    v33 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v47;
    v35 = v49;
    if ((v33 & 1) == 0)
      goto LABEL_21;
  }
  if (v46 != v45)
  {
LABEL_21:
    v42 = *(void (**)(char *, uint64_t))(v35 + 8);
    v42(v31, v29);
    v42(v34, v29);
    goto LABEL_22;
  }
  sub_1D25369B0((unint64_t *)&unk_1ED962300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90], MEMORY[0x1E0CADE88]);
  v40 = sub_1D26CB730();
  v41 = *(void (**)(char *, uint64_t))(v35 + 8);
  v41(v31, v29);
  v41(v34, v29);
  sub_1D25D5564((uint64_t)v19);
  return v40 & 1;
}

uint64_t *sub_1D26C506C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8) + 64);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1D26CB598();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D26C5150(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8) + 64);
    v5 = sub_1D26CB598();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  }
  return result;
}

_QWORD *sub_1D26C51BC(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8) + 64);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1D26CB598();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1D26C526C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_1D25D5564((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8) + 64);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_1D26CB598();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1D26C5334(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8) + 64);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1D26CB598();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1D26C53E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1D25D5564((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8) + 64);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1D26CB598();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D26C54AC()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = &unk_1D26DCE38;
  result = sub_1D26CB598();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D26C553C()
{
  return sub_1D25369B0(&qword_1ED96EA40, (uint64_t (*)(uint64_t))_s22ExtendedAttributeErrorOMa, (uint64_t)&unk_1D26DCEC0);
}

uint64_t sub_1D26C5568(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s22ExtendedAttributeErrorOMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D26C55AC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC838A8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DuetWidgetViewIdentity.init(configuration:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v3 = a1;
  v4 = sub_1D258B70C(v3);
  v6 = v5;
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v3, sel_uniqueIdentifier);
  sub_1D26CD938();

  sub_1D257293C();
  v10 = sub_1D26CDF8C();
  v11 = v8;
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  *a2 = v4;
  a2[1] = v6;
  a2[2] = (uint64_t)v3;
  a2[3] = v10;
  a2[4] = v11;
  return result;
}

uint64_t static DuetWidgetViewIdentity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32))
    return 1;
  else
    return sub_1D26CE3D0();
}

uint64_t DuetWidgetViewIdentity.budgetIdentity.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

id DuetWidgetViewIdentity.configuration.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t DuetWidgetViewIdentity.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static DuetWidgetViewIdentity.identifierString(from:uniqueViewID:)()
{
  uint64_t v1;

  sub_1D257293C();
  v1 = sub_1D26CDF8C();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t DuetWidgetViewIdentity.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t DuetWidgetViewIdentity.hashValue.getter()
{
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D26C58E4()
{
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D26C593C()
{
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26C5980()
{
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D26C59D4(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24) && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32))
    return 1;
  else
    return sub_1D26CE3D0();
}

unint64_t sub_1D26C5A08()
{
  unint64_t result;

  result = qword_1EFC838B0;
  if (!qword_1EFC838B0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for DuetWidgetViewIdentity, &type metadata for DuetWidgetViewIdentity);
    atomic_store(result, (unint64_t *)&qword_1EFC838B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for DuetWidgetViewIdentity()
{
  return &type metadata for DuetWidgetViewIdentity;
}

void sub_1D26C5A5C(int a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  char v25;
  char v26;
  uint64_t v27;
  os_log_type_t v28;
  uint8_t *v29;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  char v35;
  id v36;
  void *v37;
  id v38;
  id v39;
  void (*v40)(_QWORD *, _QWORD);
  void *v41;
  void *v42;
  id v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  void *v50;
  _QWORD v51[3];
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  NSObject *v57;
  id v58;
  _QWORD aBlock[3];
  ValueMetadata *v60;
  uint64_t (*v61)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v62;
  _OWORD v63[3];

  v56 = a1;
  LODWORD(v57) = a2;
  v3 = sub_1D26CC960();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CC9E4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v53 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v51 - v11;
  v13 = sub_1D26CC9CC();
  v54 = *(_QWORD *)(v13 - 8);
  v55 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v52 = (char *)v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)v51 - v16;
  v18 = (void *)objc_opt_self();
  if (objc_msgSend(v18, sel_isSupported))
  {
    v19 = type metadata accessor for SecureHostingController();
    sub_1D25369B0(&qword_1ED96D1E8, (uint64_t (*)(uint64_t))type metadata accessor for SecureHostingController, MEMORY[0x1E0CDB648]);
    v51[2] = v2;
    v51[1] = v19;
    sub_1D26CC84C();
    sub_1D26CC9D8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    if ((*(unsigned int (**)(char *, uint64_t))(v4 + 88))(v6, v3) == *MEMORY[0x1E0CDC1F8])
    {
      (*(void (**)(char *, uint64_t))(v4 + 96))(v6, v3);
      v20 = swift_projectBox();
      v22 = v54;
      v21 = v55;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v17, v20, v55);
      swift_release();
      v23 = sub_1D26CC990();
      v24 = sub_1D26CC9A8();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v17, v21);
      v25 = v56;
      v26 = (char)v57;
      if (((v23 ^ v56) & 1) != 0 || ((v24 ^ v57) & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v25 = v56;
      v26 = (char)v57;
      if ((v56 & 1) != 0 || (v57 & 1) != 0)
      {
LABEL_13:
        v30 = v52;
        sub_1D26CC9C0();
        sub_1D26CC99C();
        sub_1D26CC9B4();
        if (qword_1ED96C188 != -1)
          swift_once();
        v31 = sub_1D26CC09C();
        __swift_project_value_buffer(v31, (uint64_t)qword_1ED977F68);
        v32 = sub_1D26CC084();
        v33 = sub_1D26CDCE0();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = swift_slowAlloc();
          *(_DWORD *)v34 = 67109376;
          LODWORD(aBlock[0]) = v25 & 1;
          sub_1D26CDF50();
          *(_WORD *)(v34 + 8) = 1024;
          LODWORD(aBlock[0]) = v26 & 1;
          sub_1D26CDF50();
          _os_log_impl(&dword_1D2531000, v32, v33, "RenderBox hosting configured - async? %{BOOL}d, opaque: %{BOOL}d", (uint8_t *)v34, 0xEu);
          MEMORY[0x1D823A5E0](v34, -1, -1);
        }

        objc_msgSend(v18, sel_setAllowsRenderingInBackground_, 1);
        v60 = &type metadata for FeatureFlags.SpringBoard;
        v61 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1D258AD80();
        LOBYTE(aBlock[0]) = 0;
        v35 = sub_1D26CBB98();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        v36 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
        v37 = (void *)sub_1D26CD914();
        v38 = objc_msgSend(v36, sel_objectForKey_, v37);

        if (v38)
        {
          sub_1D26CDFA4();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v63, 0, 32);
        }
        sub_1D255DF24((uint64_t)v63, (uint64_t)aBlock);
        if (v60)
        {
          sub_1D2640D78();
          if ((swift_dynamicCast() & 1) != 0)
          {
            v39 = v58;
            objc_msgSend(v58, sel_intValue);

LABEL_26:
            LOBYTE(aBlock[0]) = 0;
            sub_1D26CC984();
LABEL_27:
            sub_1D26CC96C();
            sub_1D26CC858();
            v40 = (void (*)(_QWORD *, _QWORD))sub_1D26CC840();
            sub_1D26CC978();
            v40(aBlock, 0);
            if (sub_1D26CC834())
            {
              objc_opt_self();
              v41 = (void *)swift_dynamicCastObjCClass();
              if (v41)
              {
                v42 = v41;
                objc_msgSend(v41, sel_setNeedsSynchronousUpdate_, 1);
                objc_msgSend(v42, sel_setNeedsDisplay);
                v43 = objc_msgSend(v42, sel_statisticsHandler);
                if (v43)
                {
                  _Block_release(v43);
                  (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v55);
                  swift_unknownObjectRelease();
                  return;
                }
                v47 = sub_1D26CC084();
                v48 = sub_1D26CDCE0();
                if (os_log_type_enabled(v47, v48))
                {
                  v49 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v49 = 0;
                  _os_log_impl(&dword_1D2531000, v47, v48, "Attaching layer statistics handler", v49, 2u);
                  MEMORY[0x1D823A5E0](v49, -1, -1);
                }

                objc_msgSend(v42, sel_resetStatistics_alpha_, 11, 0.0);
                v61 = CGSizeMake;
                v62 = 0;
                aBlock[0] = MEMORY[0x1E0C809B0];
                aBlock[1] = 1107296256;
                aBlock[2] = sub_1D2588D50;
                v60 = (ValueMetadata *)&block_descriptor_20;
                v50 = _Block_copy(aBlock);
                objc_msgSend(v42, sel_setStatisticsHandler_, v50);
                _Block_release(v50);
                swift_unknownObjectRelease();
                goto LABEL_35;
              }
              swift_unknownObjectRelease();
            }
            v44 = sub_1D26CC084();
            v45 = sub_1D26CDD04();
            if (os_log_type_enabled(v44, v45))
            {
              v46 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v46 = 0;
              _os_log_impl(&dword_1D2531000, v44, v45, "RenderBox unable to attach layer statistics", v46, 2u);
              MEMORY[0x1D823A5E0](v46, -1, -1);
            }

LABEL_35:
            (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v55);
            return;
          }
        }
        else
        {
          sub_1D253703C((uint64_t)aBlock, &qword_1ED96FCE0);
        }
        if ((v35 & 1) == 0)
          goto LABEL_27;
        goto LABEL_26;
      }
    }
  }
  else
  {
    if (qword_1ED96C188 != -1)
      swift_once();
    v27 = sub_1D26CC09C();
    __swift_project_value_buffer(v27, (uint64_t)qword_1ED977F68);
    v57 = sub_1D26CC084();
    v28 = sub_1D26CDD04();
    if (os_log_type_enabled(v57, v28))
    {
      v29 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v29 = 67240192;
      LODWORD(aBlock[0]) = 0;
      sub_1D26CDF50();
      _os_log_impl(&dword_1D2531000, v57, v28, "RenderBox hosting disabled (isSupported=%{BOOL,public}d)", v29, 8u);
      MEMORY[0x1D823A5E0](v29, -1, -1);
    }

  }
}

uint64_t sub_1D26C62C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  id v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _QWORD v96[2];
  _QWORD v97[2];
  _QWORD v98[2];
  _QWORD v99[2];
  _QWORD v100[2];
  uint64_t v101;
  _QWORD v102[2];
  _QWORD v103[2];
  _QWORD v104[2];
  _QWORD v105[2];
  _QWORD v106[2];
  _QWORD v107[2];
  _QWORD v108[2];
  _QWORD v109[2];
  _QWORD v110[2];
  _QWORD v111[2];
  void *v112;

  v92 = a2;
  v74 = sub_1D26CC438();
  v76 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v5 = (char *)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CC3E4();
  v75 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v73 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96E7B0);
  v95 = v6;
  v9 = sub_1D26CC3E4();
  v77 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v73 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CCF8);
  v91 = v9;
  v12 = sub_1D26CC3E4();
  v79 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v78 = (char *)&v73 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96B2A0);
  v94 = v12;
  v14 = sub_1D26CC3E4();
  v82 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v80 = (char *)&v73 - v15;
  v90 = v16;
  v17 = sub_1D26CC3E4();
  v86 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v17);
  v81 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v83 = (uint64_t)&v73 - v21;
  v84 = v20;
  v89 = sub_1D26CDF38();
  v87 = *(_QWORD *)(v89 - 8);
  v22 = MEMORY[0x1E0C80A78](v89);
  v93 = (uint64_t)&v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v88 = (char *)&v73 - v24;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  swift_release();
  if ((v112 & 1) != 0)
  {
    v25 = v84;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v86 + 56))(v93, 1, 1, v84);
    v85 = *(_QWORD *)(a1 + 24);
    v100[0] = v85;
    v100[1] = MEMORY[0x1E0CDC500];
    v26 = MEMORY[0x1E0CD9C20];
    v27 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v95, v100);
    v28 = MEMORY[0x1E0CDCF80];
    v29 = sub_1D2536488(&qword_1ED96E7A8, &qword_1ED96E7B0, MEMORY[0x1E0CDCF80]);
    v99[0] = v27;
    v99[1] = v29;
    v30 = v91;
    v31 = MEMORY[0x1D823A4E4](v26, v91, v99);
    v32 = sub_1D2536488(&qword_1ED96CCF0, &qword_1ED96CCF8, v28);
    v98[0] = v31;
    v98[1] = v32;
    v33 = MEMORY[0x1D823A4E4](v26, v94, v98);
    v34 = sub_1D2536488(&qword_1ED96B298, &qword_1ED96B2A0, v28);
    v97[0] = v33;
    v97[1] = v34;
    v35 = v90;
    v96[0] = MEMORY[0x1D823A4E4](v26, v90, v97);
    v96[1] = v34;
    MEMORY[0x1D823A4E4](v26, v25, v96);
  }
  else
  {
    v73 = v2;
    sub_1D26CCB7C();
    v36 = *(_QWORD *)(a1 + 24);
    sub_1D26CCE04();
    swift_getKeyPath();
    v112 = (void *)MEMORY[0x1E0DEE9D8];
    sub_1D25369B0((unint64_t *)&qword_1ED96C308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA028]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
    sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
    v37 = v74;
    sub_1D26CDFE0();
    v85 = v36;
    v111[0] = v36;
    v111[1] = MEMORY[0x1E0CDC500];
    v38 = MEMORY[0x1E0CD9C20];
    v39 = v95;
    v40 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v95, v111);
    sub_1D26CCD68();
    swift_release();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v5, v37);
    (*(void (**)(char *, uint64_t))(v75 + 8))(v8, v39);
    swift_getKeyPath();
    v112 = *(void **)(*(_QWORD *)(v73 + 8) + 16);
    v41 = v112;
    v42 = sub_1D2536488(&qword_1ED96E7A8, &qword_1ED96E7B0, MEMORY[0x1E0CDCF80]);
    v110[0] = v40;
    v110[1] = v42;
    v43 = v41;
    v30 = v91;
    v44 = MEMORY[0x1D823A4E4](v38, v91, v110);
    v45 = v78;
    sub_1D26CCD68();

    swift_release();
    (*(void (**)(char *, uint64_t))(v77 + 8))(v11, v30);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    swift_release();
    v46 = sub_1D2536488(&qword_1ED96CCF0, &qword_1ED96CCF8, MEMORY[0x1E0CDCF80]);
    v109[0] = v44;
    v109[1] = v46;
    v47 = v94;
    v48 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v94, v109);
    v49 = v80;
    sub_1D26CCD68();
    swift_release();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v45, v47);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    swift_release();
    v50 = sub_1D2536488(&qword_1ED96B298, &qword_1ED96B2A0, MEMORY[0x1E0CDCF80]);
    v108[0] = v48;
    v108[1] = v50;
    v51 = MEMORY[0x1E0CD9C20];
    v35 = v90;
    v52 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v90, v108);
    v53 = (uint64_t)v81;
    sub_1D26CCD68();
    swift_release();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v49, v35);
    v107[0] = v52;
    v107[1] = v50;
    v54 = v51;
    v25 = v84;
    MEMORY[0x1D823A4E4](v54, v84, v107);
    v55 = v83;
    sub_1D25EDCB8(v53, v25, v83);
    v56 = v86;
    v57 = *(void (**)(uint64_t, uint64_t))(v86 + 8);
    v57(v53, v25);
    v58 = v93;
    sub_1D25EAC44(v55, v25, v93);
    v57(v55, v25);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56))(v58, 0, 1, v25);
  }
  v59 = v87;
  v60 = (uint64_t)v88;
  v61 = v93;
  v62 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 16))(v88, v93, v89);
  v63 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
  v63(v61, v62);
  v106[0] = v85;
  v106[1] = MEMORY[0x1E0CDC500];
  v64 = MEMORY[0x1E0CD9C20];
  v65 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v95, v106);
  v66 = MEMORY[0x1E0CDCF80];
  v67 = sub_1D2536488(&qword_1ED96E7A8, &qword_1ED96E7B0, MEMORY[0x1E0CDCF80]);
  v105[0] = v65;
  v105[1] = v67;
  v68 = MEMORY[0x1D823A4E4](v64, v30, v105);
  v69 = sub_1D2536488(&qword_1ED96CCF0, &qword_1ED96CCF8, v66);
  v104[0] = v68;
  v104[1] = v69;
  v70 = MEMORY[0x1D823A4E4](v64, v94, v104);
  v71 = sub_1D2536488(&qword_1ED96B298, &qword_1ED96B2A0, v66);
  v103[0] = v70;
  v103[1] = v71;
  v102[0] = MEMORY[0x1D823A4E4](v64, v35, v103);
  v102[1] = v71;
  v101 = MEMORY[0x1D823A4E4](v64, v25, v102);
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0798], v62, &v101);
  sub_1D25EAC44(v60, v62, v92);
  return ((uint64_t (*)(uint64_t, uint64_t))v63)(v60, v62);
}

uint64_t sub_1D26C6C38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1D26CC438();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1D26CC504();
}

uint64_t sub_1D26C6CB4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;

  type metadata accessor for _RootContentViewModel();
  sub_1D25369B0(&qword_1ED96D1A0, (uint64_t (*)(uint64_t))type metadata accessor for _RootContentViewModel, (uint64_t)&unk_1D26DD150);
  *a4 = sub_1D26CC39C();
  a4[1] = v8;
  v10 = (char *)a4 + *(int *)(type metadata accessor for _RootContentView(0, a2, a3, v9) + 36);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v10, a1, a2);
}

uint64_t sub_1D26C6D54()
{
  return sub_1D26C6D90();
}

uint64_t sub_1D26C6D68()
{
  return sub_1D26C6D90();
}

uint64_t sub_1D26C6D7C()
{
  return sub_1D26C6D90();
}

uint64_t sub_1D26C6D90()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D26C6DFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC9ChronoKitP33_992D30927223C086533C8ABE6E41643C21_RootContentViewModel__isHidden;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC9ChronoKitP33_992D30927223C086533C8ABE6E41643C21_RootContentViewModel__isSnapshotting, v2);
  v3(v0 + OBJC_IVAR____TtC9ChronoKitP33_992D30927223C086533C8ABE6E41643C21_RootContentViewModel__animationsPaused, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D26C6E94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for _RootContentViewModel();
  result = sub_1D26CC12C();
  *a1 = result;
  return result;
}

id LiveWidgetContentViewController.widget.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_widget);
}

id LiveWidgetContentViewController.metrics.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_metrics);
}

uint64_t LiveWidgetContentViewController.viewModel.getter()
{
  return swift_retain();
}

uint64_t sub_1D26C6F00()
{
  return sub_1D26C75B8();
}

void sub_1D26C6F14(char a1)
{
  _BYTE *v1;
  _BYTE *v3;
  uint64_t v4;
  char *v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__isSnapshotting] = a1;
  v3 = &v1[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_hasAnimatableContent];
  swift_beginAccess();
  if (*v3 == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    if (v20 != (a1 & 1))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v20) = a1 & 1;
      swift_retain();
      sub_1D26CC1EC();
      if (qword_1ED96C188 != -1)
        swift_once();
      v4 = sub_1D26CC09C();
      __swift_project_value_buffer(v4, (uint64_t)qword_1ED977F68);
      v5 = v1;
      v6 = sub_1D26CC084();
      v7 = sub_1D26CDD04();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = swift_slowAlloc();
        v19 = swift_slowAlloc();
        v20 = v19;
        *(_DWORD *)v8 = 136315650;
        v9 = objc_msgSend(v5, sel_description);
        v10 = sub_1D26CD938();
        v12 = v11;

        sub_1D2537880(v10, v12, &v20);
        sub_1D26CDF50();

        swift_bridgeObjectRelease();
        *(_WORD *)(v8 + 12) = 2080;
        v13 = objc_msgSend(*(id *)&v5[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_widget], sel__loggingIdentifierWithMetrics_, *(_QWORD *)&v5[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_metrics]);
        v14 = sub_1D26CD938();
        v16 = v15;

        sub_1D2537880(v14, v16, &v20);
        sub_1D26CDF50();

        swift_bridgeObjectRelease();
        *(_WORD *)(v8 + 22) = 2080;
        if ((a1 & 1) != 0)
          v17 = 1702195828;
        else
          v17 = 0x65736C6166;
        if ((a1 & 1) != 0)
          v18 = 0xE400000000000000;
        else
          v18 = 0xE500000000000000;
        sub_1D2537880(v17, v18, &v20);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v6, v7, "%s - %s - isSnapshotting = %s", (uint8_t *)v8, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v19, -1, -1);
        MEMORY[0x1D823A5E0](v8, -1, -1);

      }
      else
      {

      }
    }
  }
}

void (*sub_1D26C72A8(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_1D26C7340;
}

void sub_1D26C7340(uint64_t a1)
{
  sub_1D26C6F14(*(_BYTE *)(a1 + 8));
}

void sub_1D26C7364(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  _BYTE *v4;

  v2 = *a1;
  v3 = *a2;
  v4 = (_BYTE *)(*a2 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_hasAnimatableContent);
  swift_beginAccess();
  *v4 = v2;
  sub_1D26C6F14(*(_BYTE *)(v3 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__isSnapshotting));
  sub_1D26C762C(*(_BYTE *)(v3 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__areAnimationsPaused));
}

uint64_t sub_1D26C73D8()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_hasAnimatableContent);
  swift_beginAccess();
  return *v1;
}

void sub_1D26C741C(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_hasAnimatableContent);
  swift_beginAccess();
  *v3 = a1;
  sub_1D26C6F14(*(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__isSnapshotting));
  sub_1D26C762C(*(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__areAnimationsPaused));
}

void (*sub_1D26C748C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1D26C74D4;
}

void sub_1D26C74D4(uint64_t a1, char a2)
{
  uint64_t v4;

  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(a1 + 24);
    sub_1D26C6F14(*(_BYTE *)(v4 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__isSnapshotting));
    sub_1D26C762C(*(_BYTE *)(v4 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__areAnimationsPaused));
  }
}

uint64_t sub_1D26C7520@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D26C75A4()
{
  return sub_1D26C75B8();
}

uint64_t sub_1D26C75B8()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  return v1;
}

void sub_1D26C762C(char a1)
{
  _BYTE *v1;
  _BYTE *v2;
  _BYTE *v4;
  char v5;
  id v6;
  void (*v7)(uint64_t *, _QWORD);
  id v8;
  void *v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24[4];

  v2 = v1;
  v2[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__areAnimationsPaused] = a1;
  v4 = &v2[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_hasAnimatableContent];
  swift_beginAccess();
  if (*v4 == 1)
  {
    v5 = v2[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__cachedAnimationsDisabledPreference] | a1;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    if ((v5 & 1) != LOBYTE(v24[0]))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      LOBYTE(v24[0]) = v5 & 1;
      swift_retain();
      sub_1D26CC1EC();
      v6 = *(id *)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController];
      v7 = (void (*)(uint64_t *, _QWORD))sub_1D26CC8C4();
      sub_1D26CC978();
      v7(v24, 0);

      v8 = objc_msgSend(v2, sel_view);
      if (v8)
      {
        v9 = v8;
        objc_msgSend(v8, sel_setNeedsLayout);

        if (qword_1ED96C188 != -1)
          swift_once();
        v10 = sub_1D26CC09C();
        __swift_project_value_buffer(v10, (uint64_t)qword_1ED977F68);
        v11 = v2;
        v12 = sub_1D26CC084();
        v13 = sub_1D26CDD04();
        if (os_log_type_enabled(v12, v13))
        {
          v14 = swift_slowAlloc();
          v15 = swift_slowAlloc();
          v24[0] = v15;
          *(_DWORD *)v14 = 136315650;
          v16 = objc_msgSend(v11, sel_description);
          v17 = sub_1D26CD938();
          v19 = v18;

          sub_1D2537880(v17, v19, v24);
          sub_1D26CDF50();

          swift_bridgeObjectRelease();
          *(_WORD *)(v14 + 12) = 2080;
          v20 = objc_msgSend(*(id *)&v11[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_widget], sel__loggingIdentifierWithMetrics_, *(_QWORD *)&v11[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_metrics]);
          v21 = sub_1D26CD938();
          v23 = v22;

          sub_1D2537880(v21, v23, v24);
          sub_1D26CDF50();

          swift_bridgeObjectRelease();
          *(_WORD *)(v14 + 22) = 1024;
          sub_1D26CDF50();
          _os_log_impl(&dword_1D2531000, v12, v13, "%s - %s - DisabledAnimations = %{BOOL}d", (uint8_t *)v14, 0x1Cu);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v15, -1, -1);
          MEMORY[0x1D823A5E0](v14, -1, -1);

        }
        else
        {

        }
      }
      else
      {
        __break(1u);
      }
    }
  }
}

void (*sub_1D26C7A34(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a1 + 9);
  return sub_1D26C7ACC;
}

void sub_1D26C7ACC(uint64_t a1)
{
  sub_1D26C762C(*(_BYTE *)(a1 + 8));
}

uint64_t sub_1D26C7AF0()
{
  return sub_1D26071F8();
}

char *LiveWidgetContentViewController.__allocating_init(widget:metrics:viewModel:)(void *a1, void *a2, uint64_t a3)
{
  objc_class *v3;
  id v7;
  char *v8;

  v7 = objc_allocWithZone(v3);
  v8 = sub_1D26C8C80(a1, a2, a3);

  swift_release();
  return v8;
}

char *LiveWidgetContentViewController.init(widget:metrics:viewModel:)(void *a1, void *a2, uint64_t a3)
{
  char *v5;

  v5 = sub_1D26C8C80(a1, a2, a3);

  swift_release();
  return v5;
}

void sub_1D26C7BC0(char *a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = *a1;
  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1D823A688](v3);
  if (v4)
  {
    v5 = (void *)v4;
    *(_BYTE *)(v4 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__cachedAnimationsDisabledPreference) = v2;
    sub_1D26C762C(*(_BYTE *)(v4 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__areAnimationsPaused));

  }
}

id LiveWidgetContentViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void LiveWidgetContentViewController.init(coder:)()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__isSnapshotting] = 0;
  v0[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_hasAnimatableContent] = 0;
  v0[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__areAnimationsPaused] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__animationsDisabledPreferenceObserver] = 0;
  v0[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__cachedAnimationsDisabledPreference] = 0;

  sub_1D26CE1D8();
  __break(1u);
}

uint64_t sub_1D26C7DB0()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_release();
}

id LiveWidgetContentViewController.__deallocating_deinit()
{
  char *v0;
  uint64_t v1;
  objc_super v3;

  v1 = OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__animationsDisabledPreferenceObserver;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__animationsDisabledPreferenceObserver])
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  *(_QWORD *)&v0[v1] = 0;
  swift_release();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for LiveWidgetContentViewController();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1D26C7F14()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent);
  swift_beginAccess();
  return *v1;
}

void sub_1D26C7F5C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  id v4;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent);
  swift_beginAccess();
  *v3 = a1;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController__renderEngine) & 1) == 0)
  {
    v4 = *(id *)(v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
    sub_1D26C5A5C(1, (a1 & 1) == 0);

  }
}

void (*sub_1D26C7FF0(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1D259C334();
  return sub_1D26C8038;
}

void sub_1D26C8038(_QWORD *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  char *v6;
  char v7;
  id v8;

  v3 = (_QWORD *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0)
  {
    v4 = v3[4];
    if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController__renderEngine) & 1) == 0)
    {
      v5 = *(void **)(v4 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
      v6 = (char *)(v4 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent);
      swift_beginAccess();
      v7 = *v6;
      v8 = v5;
      sub_1D26C5A5C(1, (v7 & 1) == 0);

    }
  }
  free(v3);
}

uint64_t sub_1D26C80E4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  _QWORD v20[2];

  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for _RootContentView(0, v10, v11, v11);
  MEMORY[0x1E0C80A78](v12);
  v14 = (_QWORD *)((char *)v20 - v13);
  v15 = swift_retain();
  a1(v15);
  sub_1D26C6CB4((uint64_t)v9, a3, a4, v14);
  MEMORY[0x1D823A4E4](&unk_1D26DD188, v12);
  v16 = sub_1D26CCFC0();
  v17 = *(void **)(v4 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  v20[1] = v16;
  v18 = v17;
  swift_retain();
  sub_1D26CC8F4();

  return swift_release();
}

void sub_1D26C8230()
{
  uint64_t v0;
  id v1;

  sub_1D26CCFC0();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  swift_retain();
  sub_1D26CC8F4();

  swift_release();
  sub_1D260786C();
}

void sub_1D26C82BC(char a1)
{
  char *v1;
  char *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  int v12;
  uint64_t v13;
  char *v14;
  char v15;
  int v16;
  char *v17;
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;

  v2 = v1;
  v3 = a1 & 1;
  v4 = sub_1D26CC9E4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v33 - v9;
  v11 = &v2[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_isForeground];
  swift_beginAccess();
  v12 = *v11;
  if (v12 != v3)
  {
    v13 = *(_QWORD *)&v2[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_viewModel];
    v14 = (char *)(v13 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground);
    swift_beginAccess();
    v15 = *v14;
    *v14 = v12;
    sub_1D25FFB54(v15);
    v16 = *v11;
    v17 = v2;
    v18 = sub_1D26CC084();
    v19 = sub_1D26CDCE0();
    v20 = os_log_type_enabled(v18, v19);
    if (v16 == 1)
    {
      if (v20)
      {
        v36 = v17;
        v21 = (uint8_t *)swift_slowAlloc();
        v35 = swift_slowAlloc();
        v38 = v35;
        *(_DWORD *)v21 = 136446210;
        v34 = v21 + 4;
        v22 = v13 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier;
        v24 = *(_QWORD *)(v13 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
        v23 = *(_QWORD *)(v22 + 8);
        swift_bridgeObjectRetain();
        v37 = sub_1D2537880(v24, v23, &v38);
        sub_1D26CDF50();

        v17 = v36;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v18, v19, "[%{public}s] Enabling RenderBox default update interval (if necessary) because foreground.", v21, 0xCu);
        v25 = v35;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v25, -1, -1);
        MEMORY[0x1D823A5E0](v21, -1, -1);

LABEL_8:
        v31 = *(void **)&v17[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController];
        type metadata accessor for SecureHostingController();
        sub_1D25369B0(&qword_1ED96D1E8, (uint64_t (*)(uint64_t))type metadata accessor for SecureHostingController, MEMORY[0x1E0CDB648]);
        v32 = v31;
        sub_1D26CC84C();
        sub_1D26CC978();
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
        sub_1D26CC858();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);

        return;
      }
    }
    else if (v20)
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v35 = swift_slowAlloc();
      v38 = v35;
      v36 = v17;
      *(_DWORD *)v26 = 136446210;
      v34 = v26 + 4;
      v27 = v13 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier;
      v28 = *(_QWORD *)(v13 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v29 = *(_QWORD *)(v27 + 8);
      swift_bridgeObjectRetain();
      v37 = sub_1D2537880(v28, v29, &v38);
      v17 = v36;
      sub_1D26CDF50();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v18, v19, "[%{public}s] Disabling RenderBox update interval (if necessary) because background.", v26, 0xCu);
      v30 = v35;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v30, -1, -1);
      MEMORY[0x1D823A5E0](v26, -1, -1);

      goto LABEL_8;
    }

    goto LABEL_8;
  }
}

uint64_t sub_1D26C872C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_isForeground);
  swift_beginAccess();
  return *v1;
}

void sub_1D26C8770(char a1)
{
  uint64_t v1;
  char *v3;
  char v4;

  v3 = (char *)(v1 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_isForeground);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  sub_1D26C82BC(v4);
}

void (*sub_1D26C87C8(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_isForeground;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1D26C8834;
}

void sub_1D26C8834(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  v5 = *(_BYTE *)(v3 + v2);
  *(_BYTE *)(v3 + v2) = v4;
  sub_1D26C82BC(v5);
  free(v1);
}

uint64_t sub_1D26C8870(char a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for LiveWidgetContentViewController();
  objc_msgSendSuper2(&v4, sel_viewWillAppear_, a1 & 1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t sub_1D26C89AC(char a1)
{
  void *v1;
  objc_super v4;

  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for LiveWidgetContentViewController();
  objc_msgSendSuper2(&v4, sel_viewDidDisappear_, a1 & 1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t sub_1D26C8AF0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D26C8B14()
{
  return sub_1D2553300();
}

uint64_t sub_1D26C8B38@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D26C8B5C()
{
  return sub_1D2553300();
}

uint64_t sub_1D26C8B80(void *a1, void *a2)
{
  uint64_t v2;
  id v5;
  id v6;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  swift_beginAccess();
  v5 = a1;
  v6 = a2;
  sub_1D26CC1B0();
  swift_endAccess();
  swift_beginAccess();
  sub_1D26CC1B0();
  swift_endAccess();
  swift_beginAccess();
  sub_1D26CC1B0();
  swift_endAccess();
  return v2;
}

char *sub_1D26C8C80(void *a1, void *a2, uint64_t a3)
{
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  void *v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  __int128 v42;
  uint64_t v43;

  v4 = v3;
  v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96CFF0);
  v8 = MEMORY[0x1E0C80A78](v40);
  v39 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v41 = (uint64_t *)((char *)&v36 - v10);
  v4[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__isSnapshotting] = 0;
  v4[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_hasAnimatableContent] = 0;
  v4[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__areAnimationsPaused] = 0;
  v11 = OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__animationsDisabledPreferenceObserver;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__animationsDisabledPreferenceObserver] = 0;
  v37 = OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__cachedAnimationsDisabledPreference;
  v4[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__cachedAnimationsDisabledPreference] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_widget] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_metrics] = a2;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_viewModel] = a3;
  v4[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_isForeground] = 0;
  v38 = type metadata accessor for _RootContentViewModel();
  swift_allocObject();
  v12 = a1;
  v13 = a2;
  v14 = v12;
  v15 = v13;
  v16 = v4;
  swift_retain();
  v17 = sub_1D26C8B80(v14, v15);

  *(_QWORD *)&v16[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__rootViewModel] = v17;
  if (qword_1ED96F1C8 != -1)
    swift_once();
  v18 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 16) + 88);
  v19 = *(os_unfair_lock_s **)(v18 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v19);
  LOBYTE(v19) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
  swift_release();
  swift_release();
  v4[v37] = v19 & 1;
  *(_QWORD *)&v4[v11] = 0;
  swift_release();
  objc_msgSend(v14, sel_family);
  LOBYTE(v19) = sub_1D260DC08();
  v20 = v16;
  v21 = v41;
  v22 = (char *)v41 + *(int *)(v40 + 36);
  v43 = 0;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD60);
  sub_1D26CCF18();
  *((_OWORD *)v22 + 1) = v42;
  v43 = 0;
  sub_1D26CCF18();
  *((_OWORD *)v22 + 2) = v42;
  v22[48] = 0;
  *((_QWORD *)v22 + 7) = 0;
  v23 = a3 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logger;
  v24 = &v22[*(int *)(type metadata accessor for LiveWidgetEntryView() + 36)];
  v25 = sub_1D26CC09C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v24, v23, v25);
  type metadata accessor for LiveWidgetEntryViewModel(0);
  sub_1D25369B0(&qword_1ED96D290, type metadata accessor for LiveWidgetEntryViewModel, (uint64_t)&protocol conformance descriptor for LiveWidgetEntryViewModel);
  *(_QWORD *)v22 = sub_1D26CC39C();
  *((_QWORD *)v22 + 1) = v26;
  sub_1D25369B0(&qword_1ED96D1A0, (uint64_t (*)(uint64_t))type metadata accessor for _RootContentViewModel, (uint64_t)&unk_1D26DD150);
  v27 = sub_1D26CC39C();
  v29 = v28;

  *v21 = v27;
  v21[1] = v29;
  sub_1D26C9CE0((uint64_t)v21, v39);
  sub_1D2536488(&qword_1ED96CFE8, (uint64_t *)&unk_1ED96CFF0, (uint64_t)&unk_1D26DD188);
  v30 = sub_1D26CCFC0();
  v31 = (char *)(a3 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent);
  swift_beginAccess();
  v32 = sub_1D259BB24(v30, v19 & 1, *v31, 1);
  v43 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 16) + 72);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v33 = v32;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCF0);
  sub_1D2536488(&qword_1ED96FCE8, &qword_1ED96FCF0, MEMORY[0x1E0C95D90]);
  v34 = sub_1D26CC288();
  swift_release();
  swift_release();
  *(_QWORD *)&v33[OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController__animationsDisabledPreferenceObserver] = v34;
  swift_release();
  sub_1D26C762C(0);

  sub_1D253703C((uint64_t)v21, (uint64_t *)&unk_1ED96CFF0);
  return v33;
}

uint64_t type metadata accessor for LiveWidgetContentViewController()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _RootContentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _RootContentView);
}

uint64_t sub_1D26C9170@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D26C9194()
{
  return sub_1D2553300();
}

uint64_t sub_1D26C91B8@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D26C7520(a1);
}

void sub_1D26C91DC(char *a1)
{
  sub_1D26C6F14(*a1);
}

uint64_t sub_1D26C9200@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_hasAnimatableContent, a2);
}

uint64_t sub_1D26C9210@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D26C7520(a1);
}

void sub_1D26C9234(char *a1)
{
  sub_1D26C762C(*a1);
}

uint64_t sub_1D26C9258@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_isForeground, a2);
}

void sub_1D26C9264(char *a1, _QWORD *a2)
{
  char v2;
  char *v3;
  char v4;

  v2 = *a1;
  v3 = (char *)(*a2 + OBJC_IVAR____TtC9ChronoKit31LiveWidgetContentViewController_isForeground);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  sub_1D26C82BC(v4);
}

uint64_t sub_1D26C92C0()
{
  return type metadata accessor for _RootContentViewModel();
}

uint64_t type metadata accessor for _RootContentViewModel()
{
  uint64_t result;

  result = qword_1ED96D1A8;
  if (!qword_1ED96D1A8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D26C9304()
{
  unint64_t v0;

  sub_1D260F144();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for LiveWidgetContentViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.isSnapshotting.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.isSnapshotting.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.isSnapshotting.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.hasAnimatableContent.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.hasAnimatableContent.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.hasAnimatableContent.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.areAnimationsPaused.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.areAnimationsPaused.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F8))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.areAnimationsPaused.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x200))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.requestLaunch()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x238))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.__allocating_init(widget:metrics:viewModel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 576))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.updateContentView<A>(content:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.invalidate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.isForeground.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.isForeground.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of LiveWidgetContentViewController.isForeground.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x268))();
}

uint64_t sub_1D26C953C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1D26C95B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1D26C9674(uint64_t a1, uint64_t a2)
{
  swift_release();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1D26C96B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_retain();
  v10(v8, v9, v5);
  return a1;
}

_QWORD *sub_1D26C9728(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_OWORD *sub_1D26C97A0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_QWORD *sub_1D26C97F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D26C9858(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 16) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)(a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)(a1 + v9);
      if (!*(_WORD *)(a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(uint64_t))(v4 + 48))((a1 + v7 + 16) & ~v7);
      v15 = *(_QWORD *)(a1 + 8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *(unsigned __int8 *)(a1 + v9);
  if (!*(_BYTE *)(a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D26C992C + 4 * byte_1D26DCFB0[(v9 - 1)]))();
}

void sub_1D26C999C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0u;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_1D26C9B94()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D26C9BC8()
{
  return sub_1D26CC4F8();
}

uint64_t sub_1D26C9BEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC768();
  *a1 = result;
  return result;
}

uint64_t sub_1D26C9C14(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_1D26CC774();
}

uint64_t sub_1D26C9C40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC6C0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D26C9C6C()
{
  return sub_1D26CC6CC();
}

uint64_t sub_1D26C9C90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC6D8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D26C9CBC()
{
  return sub_1D26CC6E4();
}

uint64_t sub_1D26C9CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96CFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D26C9D28()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1D26C9D4C(char *a1)
{
  uint64_t v1;

  sub_1D26C7BC0(a1, v1);
}

uint64_t sub_1D26C9D54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD v15[2];
  _QWORD v16[2];
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_1D26CC3E4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96E7B0);
  v3 = sub_1D26CC3E4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CCF8);
  v4 = sub_1D26CC3E4();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96B2A0);
  v5 = sub_1D26CC3E4();
  v6 = sub_1D26CC3E4();
  v7 = sub_1D26CDF38();
  v19[0] = v1;
  v19[1] = MEMORY[0x1E0CDC500];
  v8 = MEMORY[0x1E0CD9C20];
  v9 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v2, v19);
  v10 = MEMORY[0x1E0CDCF80];
  v18[0] = v9;
  v18[1] = sub_1D2536488(&qword_1ED96E7A8, &qword_1ED96E7B0, MEMORY[0x1E0CDCF80]);
  v17[0] = MEMORY[0x1D823A4E4](v8, v3, v18);
  v17[1] = sub_1D2536488(&qword_1ED96CCF0, &qword_1ED96CCF8, v10);
  v11 = MEMORY[0x1D823A4E4](v8, v4, v17);
  v12 = sub_1D2536488(&qword_1ED96B298, &qword_1ED96B2A0, v10);
  v16[0] = v11;
  v16[1] = v12;
  v15[0] = MEMORY[0x1D823A4E4](v8, v5, v16);
  v15[1] = v12;
  v14 = MEMORY[0x1D823A4E4](v8, v6, v15);
  return MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0798], v7, &v14);
}

void sub_1D26C9F20(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1D26C9F78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = BYTE6(v22);
  if (BYTE6(v22))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v22);
    sub_1D258430C(0, BYTE6(v22), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v6 = (int)a1;
      else
        v6 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(v3 - 136) = v22 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v6 < (int)a1 || v6 >= a1 >> 32)
            goto LABEL_29;
          v7 = sub_1D26CB64C();
          if (!v7)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v8 = v7;
          v9 = sub_1D26CB670();
          v10 = v6 - v9;
          if (__OFSUB__(v6, v9))
            goto LABEL_32;
        }
        else
        {
          if (v6 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v6 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v12 = sub_1D26CB64C();
          if (!v12)
            goto LABEL_36;
          v8 = v12;
          v13 = sub_1D26CB670();
          v10 = v6 - v13;
          if (__OFSUB__(v6, v13))
            goto LABEL_34;
        }
        v11 = *(_BYTE *)(v8 + v10);
      }
      else
      {
        if (v6 >= BYTE6(v22))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v22;
        *(_BYTE *)(v3 - 108) = BYTE2(v22);
        *(_BYTE *)(v3 - 107) = BYTE3(v22);
        *(_BYTE *)(v3 - 106) = BYTE4(v22);
        *(_BYTE *)(v3 - 105) = BYTE5(v22);
        v11 = *(_BYTE *)(v3 - 118 + v6);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9621A8);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1D26D1280;
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v14 + 64) = MEMORY[0x1E0DEDEC8];
      *(_BYTE *)(v14 + 32) = v11;
      v15 = sub_1D26CD95C();
      v17 = v16;
      *(_QWORD *)(v3 - 104) = v2;
      v19 = *(_QWORD *)(v2 + 16);
      v18 = *(_QWORD *)(v2 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1D258430C(v18 > 1, v19 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v19 + 1;
      v20 = v2 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      ++v6;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1D26CA290);
  }
  return v2;
}

uint64_t PushToken.init(subscriptionIdentifier:environmentName:topic:token:expirationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v17 = *a5;
  v16 = a5[1];
  v18 = (uint64_t)a9 + *(int *)(type metadata accessor for PushToken() + 32);
  v19 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  a9[2] = a1;
  a9[3] = a2;
  a9[4] = a3;
  a9[5] = a4;
  a9[6] = v17;
  a9[7] = v16;
  *a9 = a6;
  a9[1] = a7;
  return sub_1D25D4E78(a8, v18);
}

uint64_t type metadata accessor for PushToken()
{
  uint64_t result;

  result = qword_1ED9631F8;
  if (!qword_1ED9631F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PushToken.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1D253FE08(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t PushToken.token.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D253EE04(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*PushToken.token.modify())()
{
  return CGSizeMake;
}

uint64_t PushToken.subscriptionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushToken.subscriptionIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*PushToken.subscriptionIdentifier.modify())()
{
  return CGSizeMake;
}

uint64_t PushToken.environmentName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushToken.environmentName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*PushToken.environmentName.modify())()
{
  return CGSizeMake;
}

uint64_t PushToken.topic.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 56);
  *a1 = *(_QWORD *)(v1 + 48);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushToken.topic.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v3;
  return result;
}

uint64_t (*PushToken.topic.modify())()
{
  return CGSizeMake;
}

uint64_t PushToken.expirationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PushToken() + 32);
  return sub_1D25D4E30(v3, a1);
}

uint64_t PushToken.expirationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PushToken() + 32);
  return sub_1D25D4E78(a1, v3);
}

double (*PushToken.expirationDate.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for PushToken();
  return CGSizeMake;
}

uint64_t PushToken.description.getter()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[2];
  uint64_t v13;
  unint64_t v14;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v1[1];
  sub_1D253FE08(v5, v6);
  sub_1D26C9F20(v5, v6);
  v8 = v7;
  sub_1D253EE04(v5, v6);
  v13 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  sub_1D2556EB0();
  sub_1D26CD8E4();
  swift_bridgeObjectRelease();
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v9 = v1[7];
  v12[0] = v1[6];
  v12[1] = v9;
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v10 = type metadata accessor for PushToken();
  sub_1D25D4E30((uint64_t)v1 + *(int *)(v10 + 32), (uint64_t)v4);
  sub_1D26CD98C();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return v13;
}

BOOL _s9ChronoKit9PushTokenV2eeoiySbAC_ACtFZ_0(uint64_t *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char v20;
  char v21;
  _BOOL8 result;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(uint64_t, uint64_t, uint64_t);
  char *v28;
  char v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  char *v32;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v31 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v31 - v18;
  sub_1D259E340(*a1, a1[1]);
  if ((v20 & 1) == 0)
    return 0;
  if (a1[2] == a2[2] && a1[3] == a2[3] || (v21 = sub_1D26CE3D0(), result = 0, (v21 & 1) != 0))
  {
    if (a1[4] == a2[4] && a1[5] == a2[5] || (v23 = sub_1D26CE3D0(), result = 0, (v23 & 1) != 0))
    {
      if (a1[6] == a2[6] && a1[7] == a2[7] || (v24 = sub_1D26CE3D0(), result = 0, (v24 & 1) != 0))
      {
        v32 = v7;
        v25 = type metadata accessor for PushToken();
        sub_1D25D4E30((uint64_t)a1 + *(int *)(v25 + 32), (uint64_t)v19);
        sub_1D25D4E30((uint64_t)a2 + *(int *)(v25 + 32), (uint64_t)v17);
        v26 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_1D25D4E30((uint64_t)v19, (uint64_t)v10);
        sub_1D25D4E30((uint64_t)v17, v26);
        v27 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
        if (v27((uint64_t)v10, 1, v4) == 1)
        {
          sub_1D253703C((uint64_t)v17, &qword_1ED96B1E0);
          sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
          if (v27(v26, 1, v4) == 1)
          {
            sub_1D253703C((uint64_t)v10, &qword_1ED96B1E0);
            return 1;
          }
        }
        else
        {
          sub_1D25D4E30((uint64_t)v10, (uint64_t)v14);
          if (v27(v26, 1, v4) != 1)
          {
            v28 = v32;
            (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v32, v26, v4);
            sub_1D26CB3B4();
            v29 = sub_1D26CD908();
            v30 = *(void (**)(char *, uint64_t))(v5 + 8);
            v30(v28, v4);
            sub_1D253703C((uint64_t)v17, &qword_1ED96B1E0);
            sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
            v30(v14, v4);
            sub_1D253703C((uint64_t)v10, &qword_1ED96B1E0);
            return (v29 & 1) != 0;
          }
          sub_1D253703C((uint64_t)v17, &qword_1ED96B1E0);
          sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
          (*(void (**)(char *, uint64_t))(v5 + 8))(v14, v4);
        }
        sub_1D253703C((uint64_t)v10, &qword_1ED96B1E8);
        return 0;
      }
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for PushToken(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_1D253FE08(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    v10 = a2[5];
    a1[4] = a2[4];
    a1[5] = v10;
    v11 = a2[6];
    v12 = a2[7];
    v13 = *(int *)(a3 + 32);
    v14 = (char *)a2 + v13;
    v15 = (char *)a1 + v13;
    a1[6] = v11;
    a1[7] = v12;
    v16 = sub_1D26CB9DC();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v14, 1, v16))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
      memcpy(v15, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v15, v14, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t destroy for PushToken(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  sub_1D253EE04(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_1D26CB9DC();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t *initializeWithCopy for PushToken(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v6 = *a2;
  v7 = a2[1];
  sub_1D253FE08(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  v10 = a2[6];
  v11 = a2[7];
  v12 = *(int *)(a3 + 32);
  v13 = (char *)a2 + v12;
  v14 = (char *)a1 + v12;
  a1[6] = v10;
  a1[7] = v11;
  v15 = sub_1D26CB9DC();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v17(v13, 1, v15))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v14, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v14, v13, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  }
  return a1;
}

uint64_t *assignWithCopy for PushToken(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = a2[1];
  sub_1D253FE08(*a2, v7);
  v8 = *a1;
  v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1D253EE04(v8, v9);
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 32);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1D26CB9DC();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v7) = v15(v11, 1, v13);
  v16 = v15(v12, 1, v13);
  if (!(_DWORD)v7)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

_OWORD *initializeWithTake for PushToken(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(a3 + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D26CB9DC();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t *assignWithTake for PushToken(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1D253EE04(v6, v7);
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 40);
  a1[4] = *(_QWORD *)(a2 + 32);
  a1[5] = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 56);
  a1[6] = *(_QWORD *)(a2 + 48);
  a1[7] = v10;
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 32);
  v12 = (char *)a1 + v11;
  v13 = (char *)(a2 + v11);
  v14 = sub_1D26CB9DC();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for PushToken()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26CB230(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PushToken()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26CB2BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_1D26CB334()
{
  unint64_t v0;

  sub_1D25D53E4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1D26CB3B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96B1D0;
  if (!qword_1ED96B1D0)
  {
    v1 = sub_1D26CB9DC();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB08B8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96B1D0);
  }
  return result;
}

void __getWFLinkActionWorkflowRunnerClientClass_block_invoke_cold_1(_QWORD *a1)
{
  void *v2;
  void *v3;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void *VoiceShortcutClientLibrary(void)");
  v3 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v2, "handleFailureInFunction:file:lineNumber:description:", v3, CFSTR("CHKShortcutsSoftLinking.m"), 10, CFSTR("%s"), *a1);

  __break(1u);
}

void __getWFLinkActionWorkflowRunnerClientClass_block_invoke_cold_2()
{
  void *v0;
  void *v1;

  objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "Class getWFLinkActionWorkflowRunnerClientClass(void)_block_invoke");
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v0, "handleFailureInFunction:file:lineNumber:description:", v1, CFSTR("CHKShortcutsSoftLinking.m"), 11, CFSTR("Unable to find class %s"), "WFLinkActionWorkflowRunnerClient");

  __break(1u);
  sub_1D26CB4F0();
}

uint64_t sub_1D26CB4F0()
{
  return MEMORY[0x1E0CADD40]();
}

uint64_t sub_1D26CB4FC()
{
  return MEMORY[0x1E0CADD48]();
}

uint64_t sub_1D26CB508()
{
  return MEMORY[0x1E0CADD88]();
}

uint64_t sub_1D26CB514()
{
  return MEMORY[0x1E0CADD90]();
}

uint64_t sub_1D26CB520()
{
  return MEMORY[0x1E0CADDA8]();
}

uint64_t sub_1D26CB52C()
{
  return MEMORY[0x1E0CADDC8]();
}

uint64_t sub_1D26CB538()
{
  return MEMORY[0x1E0CADDD8]();
}

uint64_t sub_1D26CB544()
{
  return MEMORY[0x1E0CADDF0]();
}

uint64_t sub_1D26CB550()
{
  return MEMORY[0x1E0CADE00]();
}

uint64_t sub_1D26CB55C()
{
  return MEMORY[0x1E0CADE20]();
}

uint64_t sub_1D26CB568()
{
  return MEMORY[0x1E0CADE38]();
}

uint64_t sub_1D26CB574()
{
  return MEMORY[0x1E0CADE48]();
}

uint64_t sub_1D26CB580()
{
  return MEMORY[0x1E0CADE68]();
}

uint64_t sub_1D26CB58C()
{
  return MEMORY[0x1E0CADE70]();
}

uint64_t sub_1D26CB598()
{
  return MEMORY[0x1E0CADE90]();
}

uint64_t sub_1D26CB5A4()
{
  return MEMORY[0x1E0CAE070]();
}

uint64_t sub_1D26CB5B0()
{
  return MEMORY[0x1E0CAE0A8]();
}

uint64_t sub_1D26CB5BC()
{
  return MEMORY[0x1E0CAE0B8]();
}

uint64_t sub_1D26CB5C8()
{
  return MEMORY[0x1E0CAE1A0]();
}

uint64_t sub_1D26CB5D4()
{
  return MEMORY[0x1E0CAE1D8]();
}

uint64_t sub_1D26CB5E0()
{
  return MEMORY[0x1E0CAE1E8]();
}

uint64_t sub_1D26CB5EC()
{
  return MEMORY[0x1E0CAE3A0]();
}

uint64_t sub_1D26CB5F8()
{
  return MEMORY[0x1E0CAE3D0]();
}

uint64_t sub_1D26CB604()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1D26CB610()
{
  return MEMORY[0x1E0CAE568]();
}

uint64_t sub_1D26CB61C()
{
  return MEMORY[0x1E0CAE580]();
}

uint64_t sub_1D26CB628()
{
  return MEMORY[0x1E0CAE5D0]();
}

uint64_t sub_1D26CB634()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_1D26CB640()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_1D26CB64C()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1D26CB658()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t sub_1D26CB664()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1D26CB670()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1D26CB67C()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1D26CB688()
{
  return MEMORY[0x1E0CAEB20]();
}

uint64_t sub_1D26CB694()
{
  return MEMORY[0x1E0CAEB38]();
}

uint64_t sub_1D26CB6A0()
{
  return MEMORY[0x1E0CAEB40]();
}

uint64_t sub_1D26CB6AC()
{
  return MEMORY[0x1E0CAEB50]();
}

uint64_t sub_1D26CB6B8()
{
  return MEMORY[0x1E0CAEE50]();
}

uint64_t sub_1D26CB6C4()
{
  return MEMORY[0x1E0CAF398]();
}

uint64_t sub_1D26CB6D0()
{
  return MEMORY[0x1E0CAF3D8]();
}

uint64_t sub_1D26CB6DC()
{
  return MEMORY[0x1E0CAF5C8]();
}

uint64_t sub_1D26CB6E8()
{
  return MEMORY[0x1E0CAF5F8]();
}

uint64_t sub_1D26CB6F4()
{
  return MEMORY[0x1E0CAF608]();
}

uint64_t sub_1D26CB700()
{
  return MEMORY[0x1E0CAF628]();
}

uint64_t sub_1D26CB70C()
{
  return MEMORY[0x1E0CAF638]();
}

uint64_t sub_1D26CB718()
{
  return MEMORY[0x1E0CAF668]();
}

uint64_t sub_1D26CB724()
{
  return MEMORY[0x1E0CAF670]();
}

uint64_t sub_1D26CB730()
{
  return MEMORY[0x1E0CAF900]();
}

uint64_t sub_1D26CB73C()
{
  return MEMORY[0x1E0CAF910]();
}

uint64_t sub_1D26CB748()
{
  return MEMORY[0x1E0CAF930]();
}

uint64_t sub_1D26CB754()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_1D26CB760()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1D26CB76C()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1D26CB778()
{
  return MEMORY[0x1E0CAFB58]();
}

uint64_t sub_1D26CB784()
{
  return MEMORY[0x1E0CAFD20]();
}

uint64_t sub_1D26CB790()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1D26CB79C()
{
  return MEMORY[0x1E0D0F5F0]();
}

uint64_t sub_1D26CB7A8()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1D26CB7B4()
{
  return MEMORY[0x1E0CAFDB0]();
}

uint64_t sub_1D26CB7C0()
{
  return MEMORY[0x1E0CAFDC0]();
}

uint64_t sub_1D26CB7CC()
{
  return MEMORY[0x1E0CAFE08]();
}

uint64_t sub_1D26CB7D8()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1D26CB7E4()
{
  return MEMORY[0x1E0CAFE48]();
}

uint64_t sub_1D26CB7F0()
{
  return MEMORY[0x1E0CAFE50]();
}

uint64_t sub_1D26CB7FC()
{
  return MEMORY[0x1E0CAFE58]();
}

uint64_t sub_1D26CB808()
{
  return MEMORY[0x1E0DF0168]();
}

uint64_t sub_1D26CB814()
{
  return MEMORY[0x1E0CAFE78]();
}

uint64_t sub_1D26CB820()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1D26CB82C()
{
  return MEMORY[0x1E0CAFEB8]();
}

uint64_t sub_1D26CB838()
{
  return MEMORY[0x1E0CAFED8]();
}

uint64_t sub_1D26CB844()
{
  return MEMORY[0x1E0CAFEE0]();
}

uint64_t sub_1D26CB850()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1D26CB85C()
{
  return MEMORY[0x1E0CAFF30]();
}

uint64_t sub_1D26CB868()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1D26CB874()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_1D26CB880()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1D26CB88C()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_1D26CB898()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1D26CB8A4()
{
  return MEMORY[0x1E0CB00F0]();
}

uint64_t sub_1D26CB8B0()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1D26CB8BC()
{
  return MEMORY[0x1E0CB0160]();
}

uint64_t sub_1D26CB8C8()
{
  return MEMORY[0x1E0CB0188]();
}

uint64_t sub_1D26CB8D4()
{
  return MEMORY[0x1E0CB01F8]();
}

uint64_t sub_1D26CB8E0()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1D26CB8EC()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1D26CB8F8()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1D26CB904()
{
  return MEMORY[0x1E0CB03D0]();
}

uint64_t sub_1D26CB910()
{
  return MEMORY[0x1E0CB0588]();
}

uint64_t sub_1D26CB91C()
{
  return MEMORY[0x1E0CB05A8]();
}

uint64_t sub_1D26CB928()
{
  return MEMORY[0x1E0CB05D8]();
}

uint64_t sub_1D26CB934()
{
  return MEMORY[0x1E0CB0680]();
}

uint64_t sub_1D26CB940()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1D26CB94C()
{
  return MEMORY[0x1E0CB06D0]();
}

uint64_t sub_1D26CB958()
{
  return MEMORY[0x1E0CB06D8]();
}

uint64_t sub_1D26CB964()
{
  return MEMORY[0x1E0CB06E8]();
}

uint64_t sub_1D26CB970()
{
  return MEMORY[0x1E0CB0700]();
}

uint64_t sub_1D26CB97C()
{
  return MEMORY[0x1E0CB0708]();
}

uint64_t sub_1D26CB988()
{
  return MEMORY[0x1E0CB07B0]();
}

uint64_t sub_1D26CB994()
{
  return MEMORY[0x1E0CB07C0]();
}

uint64_t sub_1D26CB9A0()
{
  return MEMORY[0x1E0CB07C8]();
}

uint64_t sub_1D26CB9AC()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1D26CB9B8()
{
  return MEMORY[0x1E0CB07F8]();
}

uint64_t sub_1D26CB9C4()
{
  return MEMORY[0x1E0CB0828]();
}

uint64_t sub_1D26CB9D0()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1D26CB9DC()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1D26CB9E8()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t sub_1D26CB9F4()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1D26CBA00()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1D26CBA0C()
{
  return MEMORY[0x1E0CB0958]();
}

uint64_t _s9ChronoKit26RemoteActivitySubscriptionV2id10activityID12hostIdentity0G5Owner7metrics6family16subscriptionType12creationDateAC10Foundation4UUIDV_SS0A8Services012DeviceScopedJ0VyAO15TypedIdentifierVyAO0xO0O10WidgetHostOGGAC0D9OwnershipO0yB00D17MetricsDefinitionVA0_0D6FamilyOAC0deO0OAL0Q0VSgtcfcfA__0()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1D26CBA24()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1D26CBA30()
{
  return MEMORY[0x1E0CB0AC0]();
}

uint64_t sub_1D26CBA3C()
{
  return MEMORY[0x1E0CB0AE8]();
}

uint64_t sub_1D26CBA48()
{
  return MEMORY[0x1E0CB0BE0]();
}

uint64_t sub_1D26CBA54()
{
  return MEMORY[0x1E0CB0D80]();
}

uint64_t sub_1D26CBA60()
{
  return MEMORY[0x1E0CB0DB8]();
}

uint64_t sub_1D26CBA6C()
{
  return MEMORY[0x1E0CB0DF0]();
}

uint64_t sub_1D26CBA78()
{
  return MEMORY[0x1E0CB0E38]();
}

uint64_t sub_1D26CBA84()
{
  return MEMORY[0x1E0CB1440]();
}

uint64_t sub_1D26CBA90()
{
  return MEMORY[0x1E0CB1448]();
}

uint64_t sub_1D26CBA9C()
{
  return MEMORY[0x1E0CB1460]();
}

uint64_t sub_1D26CBAA8()
{
  return MEMORY[0x1E0CB1470]();
}

uint64_t sub_1D26CBAB4()
{
  return MEMORY[0x1E0C8F570]();
}

uint64_t sub_1D26CBAC0()
{
  return MEMORY[0x1E0C8F660]();
}

uint64_t sub_1D26CBACC()
{
  return MEMORY[0x1E0C8F670]();
}

uint64_t sub_1D26CBAD8()
{
  return MEMORY[0x1E0C8F6A0]();
}

uint64_t sub_1D26CBAE4()
{
  return MEMORY[0x1E0C8F818]();
}

uint64_t sub_1D26CBAF0()
{
  return MEMORY[0x1E0C8F830]();
}

uint64_t sub_1D26CBAFC()
{
  return MEMORY[0x1E0C8F858]();
}

uint64_t sub_1D26CBB08()
{
  return MEMORY[0x1E0C8F860]();
}

uint64_t sub_1D26CBB14()
{
  return MEMORY[0x1E0C8F868]();
}

uint64_t sub_1D26CBB20()
{
  return MEMORY[0x1E0C8FC90]();
}

uint64_t sub_1D26CBB2C()
{
  return MEMORY[0x1E0C8FCB8]();
}

uint64_t sub_1D26CBB38()
{
  return MEMORY[0x1E0C8FCD0]();
}

uint64_t sub_1D26CBB44()
{
  return MEMORY[0x1E0C8FCD8]();
}

uint64_t sub_1D26CBB50()
{
  return MEMORY[0x1E0C8FCE0]();
}

uint64_t sub_1D26CBB5C()
{
  return MEMORY[0x1E0C8FCE8]();
}

uint64_t sub_1D26CBB68()
{
  return MEMORY[0x1E0C8FCF8]();
}

uint64_t sub_1D26CBB74()
{
  return MEMORY[0x1E0C8FF38]();
}

uint64_t sub_1D26CBB80()
{
  return MEMORY[0x1E0C8FF40]();
}

uint64_t sub_1D26CBB8C()
{
  return MEMORY[0x1E0C901B0]();
}

uint64_t sub_1D26CBB98()
{
  return MEMORY[0x1E0D20EF8]();
}

uint64_t sub_1D26CBBA4()
{
  return MEMORY[0x1E0D0F600]();
}

uint64_t sub_1D26CBBB0()
{
  return MEMORY[0x1E0D0F618]();
}

uint64_t sub_1D26CBBBC()
{
  return MEMORY[0x1E0D0F640]();
}

uint64_t sub_1D26CBBC8()
{
  return MEMORY[0x1E0D0F648]();
}

uint64_t sub_1D26CBBD4()
{
  return MEMORY[0x1E0D0F650]();
}

uint64_t sub_1D26CBBE0()
{
  return MEMORY[0x1E0D0F658]();
}

uint64_t sub_1D26CBBEC()
{
  return MEMORY[0x1E0D0F670]();
}

uint64_t sub_1D26CBBF8()
{
  return MEMORY[0x1E0D0F680]();
}

uint64_t sub_1D26CBC04()
{
  return MEMORY[0x1E0D0F688]();
}

uint64_t sub_1D26CBC10()
{
  return MEMORY[0x1E0D0F690]();
}

uint64_t sub_1D26CBC1C()
{
  return MEMORY[0x1E0D0F808]();
}

uint64_t sub_1D26CBC28()
{
  return MEMORY[0x1E0D0F810]();
}

uint64_t sub_1D26CBC34()
{
  return MEMORY[0x1E0D0F818]();
}

uint64_t sub_1D26CBC40()
{
  return MEMORY[0x1E0D0F828]();
}

uint64_t sub_1D26CBC4C()
{
  return MEMORY[0x1E0D0F8A8]();
}

uint64_t sub_1D26CBC58()
{
  return MEMORY[0x1E0D0F8E0]();
}

uint64_t sub_1D26CBC64()
{
  return MEMORY[0x1E0D0F910]();
}

uint64_t sub_1D26CBC70()
{
  return MEMORY[0x1E0D0F928]();
}

uint64_t sub_1D26CBC7C()
{
  return MEMORY[0x1E0D0F938]();
}

uint64_t sub_1D26CBC88()
{
  return MEMORY[0x1E0D0F940]();
}

uint64_t sub_1D26CBC94()
{
  return MEMORY[0x1E0D0F948]();
}

uint64_t sub_1D26CBCA0()
{
  return MEMORY[0x1E0D0F950]();
}

uint64_t sub_1D26CBCAC()
{
  return MEMORY[0x1E0D0F9A8]();
}

uint64_t sub_1D26CBCB8()
{
  return MEMORY[0x1E0D0F9D8]();
}

uint64_t sub_1D26CBCC4()
{
  return MEMORY[0x1E0D0FA50]();
}

uint64_t sub_1D26CBCD0()
{
  return MEMORY[0x1E0D0FA78]();
}

uint64_t sub_1D26CBCDC()
{
  return MEMORY[0x1E0D0FA80]();
}

uint64_t sub_1D26CBCE8()
{
  return MEMORY[0x1E0D0FA90]();
}

uint64_t sub_1D26CBCF4()
{
  return MEMORY[0x1E0D0FA98]();
}

uint64_t sub_1D26CBD00()
{
  return MEMORY[0x1E0D0FAB0]();
}

uint64_t sub_1D26CBD0C()
{
  return MEMORY[0x1E0D0FAC8]();
}

uint64_t sub_1D26CBD18()
{
  return MEMORY[0x1E0D0FAD0]();
}

uint64_t sub_1D26CBD24()
{
  return MEMORY[0x1E0D0FAE8]();
}

uint64_t sub_1D26CBD30()
{
  return MEMORY[0x1E0D0FAF0]();
}

uint64_t sub_1D26CBD3C()
{
  return MEMORY[0x1E0D0FAF8]();
}

uint64_t sub_1D26CBD48()
{
  return MEMORY[0x1E0D0FB28]();
}

uint64_t sub_1D26CBD54()
{
  return MEMORY[0x1E0D0FB30]();
}

uint64_t sub_1D26CBD60()
{
  return MEMORY[0x1E0D0FB38]();
}

uint64_t sub_1D26CBD6C()
{
  return MEMORY[0x1E0D0FBD0]();
}

uint64_t sub_1D26CBD78()
{
  return MEMORY[0x1E0D0FBD8]();
}

uint64_t sub_1D26CBD84()
{
  return MEMORY[0x1E0D0FBE8]();
}

uint64_t sub_1D26CBD90()
{
  return MEMORY[0x1E0D0FC28]();
}

uint64_t sub_1D26CBD9C()
{
  return MEMORY[0x1E0D0FC30]();
}

uint64_t sub_1D26CBDA8()
{
  return MEMORY[0x1E0D0FC68]();
}

uint64_t sub_1D26CBDB4()
{
  return MEMORY[0x1E0D0FC70]();
}

uint64_t sub_1D26CBDC0()
{
  return MEMORY[0x1E0D0FD38]();
}

uint64_t sub_1D26CBDCC()
{
  return MEMORY[0x1E0D0FD40]();
}

uint64_t sub_1D26CBDD8()
{
  return MEMORY[0x1E0D0FD48]();
}

uint64_t sub_1D26CBDE4()
{
  return MEMORY[0x1E0DEF0A0]();
}

uint64_t sub_1D26CBDF0()
{
  return MEMORY[0x1E0DEF0A8]();
}

uint64_t sub_1D26CBDFC()
{
  return MEMORY[0x1E0DEF0B0]();
}

uint64_t sub_1D26CBE08()
{
  return MEMORY[0x1E0D87530]();
}

uint64_t sub_1D26CBE14()
{
  return MEMORY[0x1E0D87538]();
}

uint64_t sub_1D26CBE20()
{
  return MEMORY[0x1E0D87550]();
}

uint64_t sub_1D26CBE2C()
{
  return MEMORY[0x1E0D87558]();
}

uint64_t sub_1D26CBE38()
{
  return MEMORY[0x1E0D87560]();
}

uint64_t sub_1D26CBE44()
{
  return MEMORY[0x1E0D87568]();
}

uint64_t sub_1D26CBE50()
{
  return MEMORY[0x1E0D87570]();
}

uint64_t sub_1D26CBE5C()
{
  return MEMORY[0x1E0D87578]();
}

uint64_t sub_1D26CBE68()
{
  return MEMORY[0x1E0D87598]();
}

uint64_t sub_1D26CBE74()
{
  return MEMORY[0x1E0D875A8]();
}

uint64_t sub_1D26CBE80()
{
  return MEMORY[0x1E0D875B0]();
}

uint64_t sub_1D26CBE8C()
{
  return MEMORY[0x1E0D875B8]();
}

uint64_t sub_1D26CBE98()
{
  return MEMORY[0x1E0D875C0]();
}

uint64_t sub_1D26CBEA4()
{
  return MEMORY[0x1E0D875C8]();
}

uint64_t sub_1D26CBEB0()
{
  return MEMORY[0x1E0D875D0]();
}

uint64_t sub_1D26CBEBC()
{
  return MEMORY[0x1E0D875D8]();
}

uint64_t sub_1D26CBEC8()
{
  return MEMORY[0x1E0D875E0]();
}

uint64_t sub_1D26CBED4()
{
  return MEMORY[0x1E0D875E8]();
}

uint64_t sub_1D26CBEE0()
{
  return MEMORY[0x1E0D87708]();
}

uint64_t sub_1D26CBEEC()
{
  return MEMORY[0x1E0D87710]();
}

uint64_t sub_1D26CBEF8()
{
  return MEMORY[0x1E0D87718]();
}

uint64_t sub_1D26CBF04()
{
  return MEMORY[0x1E0D87720]();
}

uint64_t sub_1D26CBF10()
{
  return MEMORY[0x1E0D878D0]();
}

uint64_t sub_1D26CBF1C()
{
  return MEMORY[0x1E0D878E0]();
}

uint64_t sub_1D26CBF28()
{
  return MEMORY[0x1E0D878E8]();
}

uint64_t sub_1D26CBF34()
{
  return MEMORY[0x1E0D878F0]();
}

uint64_t sub_1D26CBF40()
{
  return MEMORY[0x1E0D87920]();
}

uint64_t sub_1D26CBF4C()
{
  return MEMORY[0x1E0D87928]();
}

uint64_t sub_1D26CBF58()
{
  return MEMORY[0x1E0D87938]();
}

uint64_t sub_1D26CBF64()
{
  return MEMORY[0x1E0D87940]();
}

uint64_t sub_1D26CBF70()
{
  return MEMORY[0x1E0D87948]();
}

uint64_t sub_1D26CBF7C()
{
  return MEMORY[0x1E0D87958]();
}

uint64_t sub_1D26CBF88()
{
  return MEMORY[0x1E0D87970]();
}

uint64_t sub_1D26CBF94()
{
  return MEMORY[0x1E0D87990]();
}

uint64_t sub_1D26CBFA0()
{
  return MEMORY[0x1E0D87998]();
}

uint64_t sub_1D26CBFAC()
{
  return MEMORY[0x1E0DF0320]();
}

uint64_t sub_1D26CBFB8()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_1D26CBFC4()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_1D26CBFD0()
{
  return MEMORY[0x1E0DF2088]();
}

uint64_t sub_1D26CBFDC()
{
  return MEMORY[0x1E0DF2090]();
}

uint64_t sub_1D26CBFE8()
{
  return MEMORY[0x1E0DF20F8]();
}

uint64_t sub_1D26CBFF4()
{
  return MEMORY[0x1E0DF2108]();
}

uint64_t sub_1D26CC000()
{
  return MEMORY[0x1E0DF2110]();
}

uint64_t sub_1D26CC00C()
{
  return MEMORY[0x1E0DF2118]();
}

uint64_t sub_1D26CC018()
{
  return MEMORY[0x1E0DF2128]();
}

uint64_t sub_1D26CC024()
{
  return MEMORY[0x1E0DF2130]();
}

uint64_t sub_1D26CC030()
{
  return MEMORY[0x1E0DF2150]();
}

uint64_t sub_1D26CC03C()
{
  return MEMORY[0x1E0DF2170]();
}

uint64_t sub_1D26CC048()
{
  return MEMORY[0x1E0DF2198]();
}

uint64_t sub_1D26CC054()
{
  return MEMORY[0x1E0DF2218]();
}

uint64_t sub_1D26CC060()
{
  return MEMORY[0x1E0DF2220]();
}

uint64_t sub_1D26CC06C()
{
  return MEMORY[0x1E0DF2228]();
}

uint64_t sub_1D26CC078()
{
  return MEMORY[0x1E0DF2238]();
}

uint64_t sub_1D26CC084()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1D26CC090()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1D26CC09C()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1D26CC0A8()
{
  return MEMORY[0x1E0DF2268]();
}

uint64_t sub_1D26CC0B4()
{
  return MEMORY[0x1E0DF2010]();
}

uint64_t sub_1D26CC0C0()
{
  return MEMORY[0x1E0DF2018]();
}

uint64_t sub_1D26CC0CC()
{
  return MEMORY[0x1E0DF2040]();
}

uint64_t sub_1D26CC0D8()
{
  return MEMORY[0x1E0C95770]();
}

uint64_t sub_1D26CC0E4()
{
  return MEMORY[0x1E0C95D08]();
}

uint64_t sub_1D26CC0F0()
{
  return MEMORY[0x1E0C95D78]();
}

uint64_t sub_1D26CC0FC()
{
  return MEMORY[0x1E0C95DD8]();
}

uint64_t sub_1D26CC108()
{
  return MEMORY[0x1E0C95DE8]();
}

uint64_t sub_1D26CC114()
{
  return MEMORY[0x1E0C95E00]();
}

uint64_t sub_1D26CC120()
{
  return MEMORY[0x1E0C95E48]();
}

uint64_t sub_1D26CC12C()
{
  return MEMORY[0x1E0C95ED8]();
}

uint64_t sub_1D26CC138()
{
  return MEMORY[0x1E0C95F08]();
}

uint64_t sub_1D26CC144()
{
  return MEMORY[0x1E0C95F18]();
}

uint64_t sub_1D26CC150()
{
  return MEMORY[0x1E0C95F20]();
}

uint64_t sub_1D26CC15C()
{
  return MEMORY[0x1E0C95F28]();
}

uint64_t sub_1D26CC168()
{
  return MEMORY[0x1E0C95F60]();
}

uint64_t sub_1D26CC174()
{
  return MEMORY[0x1E0C95FA8]();
}

uint64_t sub_1D26CC180()
{
  return MEMORY[0x1E0C96018]();
}

uint64_t sub_1D26CC18C()
{
  return MEMORY[0x1E0C96028]();
}

uint64_t sub_1D26CC198()
{
  return MEMORY[0x1E0C96030]();
}

uint64_t sub_1D26CC1A4()
{
  return MEMORY[0x1E0C96128]();
}

uint64_t sub_1D26CC1B0()
{
  return MEMORY[0x1E0C96150]();
}

uint64_t sub_1D26CC1BC()
{
  return MEMORY[0x1E0C96158]();
}

uint64_t sub_1D26CC1C8()
{
  return MEMORY[0x1E0C96160]();
}

uint64_t sub_1D26CC1D4()
{
  return MEMORY[0x1E0C96168]();
}

uint64_t sub_1D26CC1E0()
{
  return MEMORY[0x1E0C96170]();
}

uint64_t sub_1D26CC1EC()
{
  return MEMORY[0x1E0C96178]();
}

uint64_t sub_1D26CC1F8()
{
  return MEMORY[0x1E0C96198]();
}

uint64_t sub_1D26CC204()
{
  return MEMORY[0x1E0C961D0]();
}

uint64_t sub_1D26CC210()
{
  return MEMORY[0x1E0C961D8]();
}

uint64_t sub_1D26CC21C()
{
  return MEMORY[0x1E0C96208]();
}

uint64_t sub_1D26CC228()
{
  return MEMORY[0x1E0C96248]();
}

uint64_t sub_1D26CC234()
{
  return MEMORY[0x1E0C96290]();
}

uint64_t sub_1D26CC240()
{
  return MEMORY[0x1E0C962B8]();
}

uint64_t sub_1D26CC24C()
{
  return MEMORY[0x1E0C96308]();
}

uint64_t sub_1D26CC258()
{
  return MEMORY[0x1E0C96378]();
}

uint64_t sub_1D26CC264()
{
  return MEMORY[0x1E0C96388]();
}

uint64_t sub_1D26CC270()
{
  return MEMORY[0x1E0C96398]();
}

uint64_t sub_1D26CC27C()
{
  return MEMORY[0x1E0C963E8]();
}

uint64_t sub_1D26CC288()
{
  return MEMORY[0x1E0C96410]();
}

uint64_t sub_1D26CC294()
{
  return MEMORY[0x1E0C96420]();
}

uint64_t sub_1D26CC2A0()
{
  return MEMORY[0x1E0CD8268]();
}

uint64_t sub_1D26CC2AC()
{
  return MEMORY[0x1E0CD8280]();
}

uint64_t sub_1D26CC2B8()
{
  return MEMORY[0x1E0CD83B8]();
}

uint64_t sub_1D26CC2C4()
{
  return MEMORY[0x1E0CD86F8]();
}

uint64_t sub_1D26CC2D0()
{
  return MEMORY[0x1E0CD8820]();
}

uint64_t sub_1D26CC2DC()
{
  return MEMORY[0x1E0CD88C0]();
}

uint64_t sub_1D26CC2E8()
{
  return MEMORY[0x1E0CD8AA8]();
}

uint64_t sub_1D26CC2F4()
{
  return MEMORY[0x1E0CD8C70]();
}

uint64_t sub_1D26CC300()
{
  return MEMORY[0x1E0CD8C80]();
}

uint64_t sub_1D26CC30C()
{
  return MEMORY[0x1E0CD8C90]();
}

uint64_t sub_1D26CC318()
{
  return MEMORY[0x1E0CD8D50]();
}

uint64_t sub_1D26CC324()
{
  return MEMORY[0x1E0CD8D60]();
}

uint64_t sub_1D26CC330()
{
  return MEMORY[0x1E0CD8EF0]();
}

uint64_t sub_1D26CC33C()
{
  return MEMORY[0x1E0CD8FC8]();
}

uint64_t sub_1D26CC348()
{
  return MEMORY[0x1E0CD8FD0]();
}

uint64_t sub_1D26CC354()
{
  return MEMORY[0x1E0CD8FE0]();
}

uint64_t sub_1D26CC360()
{
  return MEMORY[0x1E0CD9028]();
}

uint64_t sub_1D26CC36C()
{
  return MEMORY[0x1E0CD9030]();
}

uint64_t sub_1D26CC378()
{
  return MEMORY[0x1E0CD9210]();
}

uint64_t sub_1D26CC384()
{
  return MEMORY[0x1E0CD9370]();
}

uint64_t sub_1D26CC390()
{
  return MEMORY[0x1E0CD9398]();
}

uint64_t sub_1D26CC39C()
{
  return MEMORY[0x1E0CD94E8]();
}

uint64_t sub_1D26CC3A8()
{
  return MEMORY[0x1E0CD94F8]();
}

uint64_t sub_1D26CC3B4()
{
  return MEMORY[0x1E0CD9500]();
}

uint64_t sub_1D26CC3C0()
{
  return MEMORY[0x1E0CD9708]();
}

uint64_t sub_1D26CC3CC()
{
  return MEMORY[0x1E0CD9718]();
}

uint64_t sub_1D26CC3D8()
{
  return MEMORY[0x1E0CD9AA8]();
}

uint64_t sub_1D26CC3E4()
{
  return MEMORY[0x1E0CD9BF0]();
}

uint64_t sub_1D26CC3F0()
{
  return MEMORY[0x1E0CD9D48]();
}

uint64_t sub_1D26CC3FC()
{
  return MEMORY[0x1E0CD9F10]();
}

uint64_t sub_1D26CC408()
{
  return MEMORY[0x1E0CD9FB8]();
}

uint64_t sub_1D26CC414()
{
  return MEMORY[0x1E0CD9FC8]();
}

uint64_t sub_1D26CC420()
{
  return MEMORY[0x1E0CD9FD8]();
}

uint64_t sub_1D26CC42C()
{
  return MEMORY[0x1E0CD9FE8]();
}

uint64_t sub_1D26CC438()
{
  return MEMORY[0x1E0CDA008]();
}

uint64_t sub_1D26CC444()
{
  return MEMORY[0x1E0CDA088]();
}

uint64_t sub_1D26CC450()
{
  return MEMORY[0x1E0CDA218]();
}

uint64_t sub_1D26CC45C()
{
  return MEMORY[0x1E0CDA268]();
}

uint64_t sub_1D26CC468()
{
  return MEMORY[0x1E0CDA4A8]();
}

uint64_t sub_1D26CC474()
{
  return MEMORY[0x1E0CDA4E0]();
}

uint64_t sub_1D26CC480()
{
  return MEMORY[0x1E0CDA4E8]();
}

uint64_t sub_1D26CC48C()
{
  return MEMORY[0x1E0CDA518]();
}

uint64_t sub_1D26CC498()
{
  return MEMORY[0x1E0CDA568]();
}

uint64_t sub_1D26CC4A4()
{
  return MEMORY[0x1E0CDA570]();
}

uint64_t sub_1D26CC4B0()
{
  return MEMORY[0x1E0CDA5A8]();
}

uint64_t sub_1D26CC4BC()
{
  return MEMORY[0x1E0CDA630]();
}

uint64_t sub_1D26CC4C8()
{
  return MEMORY[0x1E0CDA640]();
}

uint64_t sub_1D26CC4D4()
{
  return MEMORY[0x1E0CDA648]();
}

uint64_t sub_1D26CC4E0()
{
  return MEMORY[0x1E0CDA680]();
}

uint64_t sub_1D26CC4EC()
{
  return MEMORY[0x1E0CDA688]();
}

uint64_t sub_1D26CC4F8()
{
  return MEMORY[0x1E0CDA6A0]();
}

uint64_t sub_1D26CC504()
{
  return MEMORY[0x1E0CDA6B0]();
}

uint64_t sub_1D26CC510()
{
  return MEMORY[0x1E0CDA6C0]();
}

uint64_t sub_1D26CC51C()
{
  return MEMORY[0x1E0CDA730]();
}

uint64_t sub_1D26CC528()
{
  return MEMORY[0x1E0CDA738]();
}

uint64_t sub_1D26CC534()
{
  return MEMORY[0x1E0CDA798]();
}

uint64_t sub_1D26CC540()
{
  return MEMORY[0x1E0CDA850]();
}

uint64_t sub_1D26CC54C()
{
  return MEMORY[0x1E0CDA858]();
}

uint64_t sub_1D26CC558()
{
  return MEMORY[0x1E0CDA860]();
}

uint64_t sub_1D26CC564()
{
  return MEMORY[0x1E0CDA868]();
}

uint64_t sub_1D26CC570()
{
  return MEMORY[0x1E0CDA898]();
}

uint64_t sub_1D26CC57C()
{
  return MEMORY[0x1E0CDA8A0]();
}

uint64_t sub_1D26CC588()
{
  return MEMORY[0x1E0CDA8A8]();
}

uint64_t sub_1D26CC594()
{
  return MEMORY[0x1E0CDA8B0]();
}

uint64_t sub_1D26CC5A0()
{
  return MEMORY[0x1E0CDA8C0]();
}

uint64_t sub_1D26CC5AC()
{
  return MEMORY[0x1E0CDA8C8]();
}

uint64_t sub_1D26CC5B8()
{
  return MEMORY[0x1E0CDA8D8]();
}

uint64_t sub_1D26CC5C4()
{
  return MEMORY[0x1E0CDA8E0]();
}

uint64_t sub_1D26CC5D0()
{
  return MEMORY[0x1E0CDA918]();
}

uint64_t sub_1D26CC5DC()
{
  return MEMORY[0x1E0CDA950]();
}

uint64_t sub_1D26CC5E8()
{
  return MEMORY[0x1E0CDA9B0]();
}

uint64_t sub_1D26CC5F4()
{
  return MEMORY[0x1E0CEF8B0]();
}

uint64_t sub_1D26CC600()
{
  return MEMORY[0x1E0CEF8E8]();
}

uint64_t sub_1D26CC60C()
{
  return MEMORY[0x1E0CEF8F8]();
}

uint64_t sub_1D26CC618()
{
  return MEMORY[0x1E0CEF900]();
}

uint64_t sub_1D26CC624()
{
  return MEMORY[0x1E0CEF910]();
}

uint64_t sub_1D26CC630()
{
  return MEMORY[0x1E0CEF920]();
}

uint64_t sub_1D26CC63C()
{
  return MEMORY[0x1E0CEF930]();
}

uint64_t sub_1D26CC648()
{
  return MEMORY[0x1E0CEF938]();
}

uint64_t sub_1D26CC654()
{
  return MEMORY[0x1E0CEF940]();
}

uint64_t sub_1D26CC660()
{
  return MEMORY[0x1E0CEF948]();
}

uint64_t sub_1D26CC66C()
{
  return MEMORY[0x1E0CEF950]();
}

uint64_t sub_1D26CC678()
{
  return MEMORY[0x1E0CEF958]();
}

uint64_t sub_1D26CC684()
{
  return MEMORY[0x1E0CEF960]();
}

uint64_t sub_1D26CC690()
{
  return MEMORY[0x1E0CEF968]();
}

uint64_t sub_1D26CC69C()
{
  return MEMORY[0x1E0CEF978]();
}

uint64_t sub_1D26CC6A8()
{
  return MEMORY[0x1E0CEF980]();
}

uint64_t sub_1D26CC6B4()
{
  return MEMORY[0x1E0CEF988]();
}

uint64_t sub_1D26CC6C0()
{
  return MEMORY[0x1E0CEF9B8]();
}

uint64_t sub_1D26CC6CC()
{
  return MEMORY[0x1E0CEF9C0]();
}

uint64_t sub_1D26CC6D8()
{
  return MEMORY[0x1E0CEF9C8]();
}

uint64_t sub_1D26CC6E4()
{
  return MEMORY[0x1E0CEF9D0]();
}

uint64_t sub_1D26CC6F0()
{
  return MEMORY[0x1E0CEF9D8]();
}

uint64_t sub_1D26CC6FC()
{
  return MEMORY[0x1E0CEF9E0]();
}

uint64_t sub_1D26CC708()
{
  return MEMORY[0x1E0CEFA08]();
}

uint64_t sub_1D26CC714()
{
  return MEMORY[0x1E0CEFA10]();
}

uint64_t sub_1D26CC720()
{
  return MEMORY[0x1E0CEFA18]();
}

uint64_t sub_1D26CC72C()
{
  return MEMORY[0x1E0CEFA20]();
}

uint64_t sub_1D26CC738()
{
  return MEMORY[0x1E0CEFA38]();
}

uint64_t sub_1D26CC744()
{
  return MEMORY[0x1E0CEFA40]();
}

uint64_t sub_1D26CC750()
{
  return MEMORY[0x1E0CEFA48]();
}

uint64_t sub_1D26CC75C()
{
  return MEMORY[0x1E0CEFA50]();
}

uint64_t sub_1D26CC768()
{
  return MEMORY[0x1E0CEFA58]();
}

uint64_t sub_1D26CC774()
{
  return MEMORY[0x1E0CEFA60]();
}

uint64_t sub_1D26CC780()
{
  return MEMORY[0x1E0CDA9D0]();
}

uint64_t sub_1D26CC78C()
{
  return MEMORY[0x1E0CDA9E0]();
}

uint64_t sub_1D26CC798()
{
  return MEMORY[0x1E0CDAA20]();
}

uint64_t sub_1D26CC7A4()
{
  return MEMORY[0x1E0CDAA30]();
}

uint64_t sub_1D26CC7B0()
{
  return MEMORY[0x1E0CDACC8]();
}

uint64_t sub_1D26CC7BC()
{
  return MEMORY[0x1E0CDAEA0]();
}

uint64_t sub_1D26CC7C8()
{
  return MEMORY[0x1E0CDAF80]();
}

uint64_t sub_1D26CC7D4()
{
  return MEMORY[0x1E0CDAF90]();
}

uint64_t sub_1D26CC7E0()
{
  return MEMORY[0x1E0CDAFB8]();
}

uint64_t sub_1D26CC7EC()
{
  return MEMORY[0x1E0CDAFC8]();
}

uint64_t sub_1D26CC7F8()
{
  return MEMORY[0x1E0CDAFD0]();
}

uint64_t sub_1D26CC804()
{
  return MEMORY[0x1E0CDAFE0]();
}

uint64_t sub_1D26CC810()
{
  return MEMORY[0x1E0CDAFF8]();
}

uint64_t sub_1D26CC81C()
{
  return MEMORY[0x1E0CDB000]();
}

uint64_t sub_1D26CC828()
{
  return MEMORY[0x1E0CDB0E8]();
}

uint64_t sub_1D26CC834()
{
  return MEMORY[0x1E0CDB1C8]();
}

uint64_t sub_1D26CC840()
{
  return MEMORY[0x1E0CDB1D0]();
}

uint64_t sub_1D26CC84C()
{
  return MEMORY[0x1E0CDB1D8]();
}

uint64_t sub_1D26CC858()
{
  return MEMORY[0x1E0CDB1E0]();
}

uint64_t sub_1D26CC864()
{
  return MEMORY[0x1E0CDB2E0]();
}

uint64_t sub_1D26CC870()
{
  return MEMORY[0x1E0CDB388]();
}

uint64_t sub_1D26CC87C()
{
  return MEMORY[0x1E0CDB410]();
}

uint64_t sub_1D26CC888()
{
  return MEMORY[0x1E0CDB420]();
}

uint64_t sub_1D26CC894()
{
  return MEMORY[0x1E0CDB430]();
}

uint64_t sub_1D26CC8A0()
{
  return MEMORY[0x1E0CDB438]();
}

uint64_t sub_1D26CC8AC()
{
  return MEMORY[0x1E0CDB558]();
}

uint64_t sub_1D26CC8B8()
{
  return MEMORY[0x1E0CDB5E0]();
}

uint64_t sub_1D26CC8C4()
{
  return MEMORY[0x1E0CDB5E8]();
}

uint64_t sub_1D26CC8D0()
{
  return MEMORY[0x1E0CDB5F0]();
}

uint64_t sub_1D26CC8DC()
{
  return MEMORY[0x1E0CDB608]();
}

uint64_t sub_1D26CC8E8()
{
  return MEMORY[0x1E0CDB618]();
}

uint64_t sub_1D26CC8F4()
{
  return MEMORY[0x1E0CDB628]();
}

uint64_t sub_1D26CC900()
{
  return MEMORY[0x1E0CDB848]();
}

uint64_t sub_1D26CC90C()
{
  return MEMORY[0x1E0CDB870]();
}

uint64_t sub_1D26CC918()
{
  return MEMORY[0x1E0CDB880]();
}

uint64_t sub_1D26CC924()
{
  return MEMORY[0x1E0CDBE68]();
}

uint64_t sub_1D26CC930()
{
  return MEMORY[0x1E0CDBE70]();
}

uint64_t sub_1D26CC93C()
{
  return MEMORY[0x1E0CDBE78]();
}

uint64_t sub_1D26CC948()
{
  return MEMORY[0x1E0CDBE80]();
}

uint64_t sub_1D26CC954()
{
  return MEMORY[0x1E0CDBFA8]();
}

uint64_t sub_1D26CC960()
{
  return MEMORY[0x1E0CDC200]();
}

uint64_t sub_1D26CC96C()
{
  return MEMORY[0x1E0CDC208]();
}

uint64_t sub_1D26CC978()
{
  return MEMORY[0x1E0CDC210]();
}

uint64_t sub_1D26CC984()
{
  return MEMORY[0x1E0CDC218]();
}

uint64_t sub_1D26CC990()
{
  return MEMORY[0x1E0CDC220]();
}

uint64_t sub_1D26CC99C()
{
  return MEMORY[0x1E0CDC228]();
}

uint64_t sub_1D26CC9A8()
{
  return MEMORY[0x1E0CDC230]();
}

uint64_t sub_1D26CC9B4()
{
  return MEMORY[0x1E0CDC238]();
}

uint64_t sub_1D26CC9C0()
{
  return MEMORY[0x1E0CDC240]();
}

uint64_t sub_1D26CC9CC()
{
  return MEMORY[0x1E0CDC248]();
}

uint64_t sub_1D26CC9D8()
{
  return MEMORY[0x1E0CDC250]();
}

uint64_t sub_1D26CC9E4()
{
  return MEMORY[0x1E0CDC258]();
}

uint64_t sub_1D26CC9F0()
{
  return MEMORY[0x1E0CDC4A0]();
}

uint64_t sub_1D26CC9FC()
{
  return MEMORY[0x1E0CDC978]();
}

uint64_t sub_1D26CCA08()
{
  return MEMORY[0x1E0CDC990]();
}

uint64_t sub_1D26CCA14()
{
  return MEMORY[0x1E0CDCBB0]();
}

uint64_t sub_1D26CCA20()
{
  return MEMORY[0x1E0CDCBB8]();
}

uint64_t sub_1D26CCA2C()
{
  return MEMORY[0x1E0CDCBC0]();
}

uint64_t sub_1D26CCA38()
{
  return MEMORY[0x1E0CDCBC8]();
}

uint64_t sub_1D26CCA44()
{
  return MEMORY[0x1E0CDCBD0]();
}

uint64_t sub_1D26CCA50()
{
  return MEMORY[0x1E0CDCBD8]();
}

uint64_t sub_1D26CCA5C()
{
  return MEMORY[0x1E0CDCBE0]();
}

uint64_t sub_1D26CCA68()
{
  return MEMORY[0x1E0CDCBF0]();
}

uint64_t sub_1D26CCA74()
{
  return MEMORY[0x1E0CDCC10]();
}

uint64_t sub_1D26CCA80()
{
  return MEMORY[0x1E0CDCC50]();
}

uint64_t sub_1D26CCA8C()
{
  return MEMORY[0x1E0CDCC58]();
}

uint64_t sub_1D26CCA98()
{
  return MEMORY[0x1E0CDCC60]();
}

uint64_t sub_1D26CCAA4()
{
  return MEMORY[0x1E0CDCC68]();
}

uint64_t sub_1D26CCAB0()
{
  return MEMORY[0x1E0CDCC70]();
}

uint64_t sub_1D26CCABC()
{
  return MEMORY[0x1E0CDCC78]();
}

uint64_t sub_1D26CCAC8()
{
  return MEMORY[0x1E0CDCC88]();
}

uint64_t sub_1D26CCAD4()
{
  return MEMORY[0x1E0CDCC90]();
}

uint64_t sub_1D26CCAE0()
{
  return MEMORY[0x1E0CEFAC8]();
}

uint64_t sub_1D26CCAEC()
{
  return MEMORY[0x1E0CEFAD0]();
}

uint64_t sub_1D26CCAF8()
{
  return MEMORY[0x1E0CDCD18]();
}

uint64_t sub_1D26CCB04()
{
  return MEMORY[0x1E0CDCD40]();
}

uint64_t sub_1D26CCB10()
{
  return MEMORY[0x1E0CDCD48]();
}

uint64_t sub_1D26CCB1C()
{
  return MEMORY[0x1E0CDCD50]();
}

uint64_t sub_1D26CCB28()
{
  return MEMORY[0x1E0CDCFD0]();
}

uint64_t sub_1D26CCB34()
{
  return MEMORY[0x1E0CDD288]();
}

uint64_t sub_1D26CCB40()
{
  return MEMORY[0x1E0CDD298]();
}

uint64_t sub_1D26CCB4C()
{
  return MEMORY[0x1E0CDD2A8]();
}

uint64_t sub_1D26CCB58()
{
  return MEMORY[0x1E0CDD2D8]();
}

uint64_t sub_1D26CCB64()
{
  return MEMORY[0x1E0CDD300]();
}

uint64_t sub_1D26CCB70()
{
  return MEMORY[0x1E0CDD348]();
}

uint64_t sub_1D26CCB7C()
{
  return MEMORY[0x1E0CDD358]();
}

uint64_t sub_1D26CCB88()
{
  return MEMORY[0x1E0CDD440]();
}

uint64_t sub_1D26CCB94()
{
  return MEMORY[0x1E0CDD448]();
}

uint64_t sub_1D26CCBA0()
{
  return MEMORY[0x1E0CDD450]();
}

uint64_t sub_1D26CCBAC()
{
  return MEMORY[0x1E0CDD4D8]();
}

uint64_t sub_1D26CCBB8()
{
  return MEMORY[0x1E0CDD500]();
}

uint64_t sub_1D26CCBC4()
{
  return MEMORY[0x1E0CDD518]();
}

uint64_t sub_1D26CCBD0()
{
  return MEMORY[0x1E0CDD528]();
}

uint64_t sub_1D26CCBDC()
{
  return MEMORY[0x1E0CDD560]();
}

uint64_t sub_1D26CCBE8()
{
  return MEMORY[0x1E0CDD5D0]();
}

uint64_t sub_1D26CCBF4()
{
  return MEMORY[0x1E0CDD5E0]();
}

uint64_t sub_1D26CCC00()
{
  return MEMORY[0x1E0CDD5E8]();
}

uint64_t sub_1D26CCC0C()
{
  return MEMORY[0x1E0CDD618]();
}

uint64_t sub_1D26CCC18()
{
  return MEMORY[0x1E0CDD630]();
}

uint64_t sub_1D26CCC24()
{
  return MEMORY[0x1E0CDD638]();
}

uint64_t sub_1D26CCC30()
{
  return MEMORY[0x1E0CDD688]();
}

uint64_t sub_1D26CCC3C()
{
  return MEMORY[0x1E0CDD738]();
}

uint64_t sub_1D26CCC48()
{
  return MEMORY[0x1E0CDD750]();
}

uint64_t sub_1D26CCC54()
{
  return MEMORY[0x1E0CDD760]();
}

uint64_t sub_1D26CCC60()
{
  return MEMORY[0x1E0CDDA88]();
}

uint64_t sub_1D26CCC6C()
{
  return MEMORY[0x1E0CDDA90]();
}

uint64_t sub_1D26CCC78()
{
  return MEMORY[0x1E0CDDAA0]();
}

uint64_t sub_1D26CCC84()
{
  return MEMORY[0x1E0CDDB88]();
}

uint64_t sub_1D26CCC90()
{
  return MEMORY[0x1E0CDDB98]();
}

uint64_t sub_1D26CCC9C()
{
  return MEMORY[0x1E0CDDBD0]();
}

uint64_t sub_1D26CCCA8()
{
  return MEMORY[0x1E0CDDBE0]();
}

uint64_t sub_1D26CCCB4()
{
  return MEMORY[0x1E0CDDC48]();
}

uint64_t sub_1D26CCCC0()
{
  return MEMORY[0x1E0CDDC68]();
}

uint64_t sub_1D26CCCCC()
{
  return MEMORY[0x1E0CDDCE0]();
}

uint64_t sub_1D26CCCD8()
{
  return MEMORY[0x1E0CDDD00]();
}

uint64_t sub_1D26CCCE4()
{
  return MEMORY[0x1E0CDDD40]();
}

uint64_t sub_1D26CCCF0()
{
  return MEMORY[0x1E0CDDD80]();
}

uint64_t sub_1D26CCCFC()
{
  return MEMORY[0x1E0CDDD98]();
}

uint64_t sub_1D26CCD08()
{
  return MEMORY[0x1E0CDDDA0]();
}

uint64_t sub_1D26CCD14()
{
  return MEMORY[0x1E0CDDDB0]();
}

uint64_t sub_1D26CCD20()
{
  return MEMORY[0x1E0CDDDD0]();
}

uint64_t sub_1D26CCD2C()
{
  return MEMORY[0x1E0CDDDE8]();
}

uint64_t sub_1D26CCD38()
{
  return MEMORY[0x1E0CDDE48]();
}

uint64_t sub_1D26CCD44()
{
  return MEMORY[0x1E0CDDE58]();
}

uint64_t sub_1D26CCD50()
{
  return MEMORY[0x1E0CDDED0]();
}

uint64_t sub_1D26CCD5C()
{
  return MEMORY[0x1E0CDDEE0]();
}

uint64_t sub_1D26CCD68()
{
  return MEMORY[0x1E0CDE050]();
}

uint64_t sub_1D26CCD74()
{
  return MEMORY[0x1E0CDE1A8]();
}

uint64_t sub_1D26CCD80()
{
  return MEMORY[0x1E0CDE1B8]();
}

uint64_t sub_1D26CCD8C()
{
  return MEMORY[0x1E0CDE1F0]();
}

uint64_t sub_1D26CCD98()
{
  return MEMORY[0x1E0CDE230]();
}

uint64_t sub_1D26CCDA4()
{
  return MEMORY[0x1E0CDE340]();
}

uint64_t sub_1D26CCDB0()
{
  return MEMORY[0x1E0CDE380]();
}

uint64_t sub_1D26CCDBC()
{
  return MEMORY[0x1E0CDE3B8]();
}

uint64_t sub_1D26CCDC8()
{
  return MEMORY[0x1E0CDE6A0]();
}

uint64_t sub_1D26CCDD4()
{
  return MEMORY[0x1E0CDE788]();
}

uint64_t sub_1D26CCDE0()
{
  return MEMORY[0x1E0CDE7A0]();
}

uint64_t sub_1D26CCDEC()
{
  return MEMORY[0x1E0CDE960]();
}

uint64_t sub_1D26CCDF8()
{
  return MEMORY[0x1E0CDEA88]();
}

uint64_t sub_1D26CCE04()
{
  return MEMORY[0x1E0CDEB38]();
}

uint64_t sub_1D26CCE10()
{
  return MEMORY[0x1E0CDEC40]();
}

uint64_t sub_1D26CCE1C()
{
  return MEMORY[0x1E0CDF020]();
}

uint64_t sub_1D26CCE28()
{
  return MEMORY[0x1E0CDF048]();
}

uint64_t sub_1D26CCE34()
{
  return MEMORY[0x1E0CDF058]();
}

uint64_t sub_1D26CCE40()
{
  return MEMORY[0x1E0CDF088]();
}

uint64_t sub_1D26CCE4C()
{
  return MEMORY[0x1E0CDF128]();
}

uint64_t sub_1D26CCE58()
{
  return MEMORY[0x1E0CDF1A0]();
}

uint64_t sub_1D26CCE64()
{
  return MEMORY[0x1E0CDF3A0]();
}

uint64_t sub_1D26CCE70()
{
  return MEMORY[0x1E0CDF3F0]();
}

uint64_t sub_1D26CCE7C()
{
  return MEMORY[0x1E0CDF438]();
}

uint64_t sub_1D26CCE88()
{
  return MEMORY[0x1E0CDF440]();
}

uint64_t sub_1D26CCE94()
{
  return MEMORY[0x1E0CDF450]();
}

uint64_t sub_1D26CCEA0()
{
  return MEMORY[0x1E0CDF490]();
}

uint64_t sub_1D26CCEAC()
{
  return MEMORY[0x1E0CDF4A8]();
}

uint64_t sub_1D26CCEB8()
{
  return MEMORY[0x1E0CDF4D0]();
}

uint64_t sub_1D26CCEC4()
{
  return MEMORY[0x1E0CDF520]();
}

uint64_t sub_1D26CCED0()
{
  return MEMORY[0x1E0CDF5F8]();
}

uint64_t sub_1D26CCEDC()
{
  return MEMORY[0x1E0CDF608]();
}

uint64_t sub_1D26CCEE8()
{
  return MEMORY[0x1E0CDF628]();
}

uint64_t sub_1D26CCEF4()
{
  return MEMORY[0x1E0CDF700]();
}

uint64_t sub_1D26CCF00()
{
  return MEMORY[0x1E0CDF7E8]();
}

uint64_t sub_1D26CCF0C()
{
  return MEMORY[0x1E0CDF810]();
}

uint64_t sub_1D26CCF18()
{
  return MEMORY[0x1E0CDF968]();
}

uint64_t sub_1D26CCF24()
{
  return MEMORY[0x1E0CDF970]();
}

uint64_t sub_1D26CCF30()
{
  return MEMORY[0x1E0CDF988]();
}

uint64_t sub_1D26CCF3C()
{
  return MEMORY[0x1E0CDFAE0]();
}

uint64_t sub_1D26CCF48()
{
  return MEMORY[0x1E0CDFAF0]();
}

uint64_t sub_1D26CCF54()
{
  return MEMORY[0x1E0CDFB40]();
}

uint64_t sub_1D26CCF60()
{
  return MEMORY[0x1E0CDFB48]();
}

uint64_t sub_1D26CCF6C()
{
  return MEMORY[0x1E0CDFB50]();
}

uint64_t sub_1D26CCF78()
{
  return MEMORY[0x1E0CDFB68]();
}

uint64_t sub_1D26CCF84()
{
  return MEMORY[0x1E0CDFB70]();
}

uint64_t sub_1D26CCF90()
{
  return MEMORY[0x1E0CDFC88]();
}

uint64_t sub_1D26CCF9C()
{
  return MEMORY[0x1E0CDFCA0]();
}

uint64_t sub_1D26CCFA8()
{
  return MEMORY[0x1E0CDFCD8]();
}

uint64_t sub_1D26CCFB4()
{
  return MEMORY[0x1E0CDFCE0]();
}

uint64_t sub_1D26CCFC0()
{
  return MEMORY[0x1E0CDFD20]();
}

uint64_t sub_1D26CCFCC()
{
  return MEMORY[0x1E0CDFD48]();
}

uint64_t sub_1D26CCFD8()
{
  return MEMORY[0x1E0CDFDB8]();
}

uint64_t sub_1D26CCFE4()
{
  return MEMORY[0x1E0CDFEA8]();
}

uint64_t sub_1D26CCFF0()
{
  return MEMORY[0x1E0CE0200]();
}

uint64_t sub_1D26CCFFC()
{
  return MEMORY[0x1E0CE0208]();
}

uint64_t sub_1D26CD008()
{
  return MEMORY[0x1E0CE0220]();
}

uint64_t sub_1D26CD014()
{
  return MEMORY[0x1E0CE0228]();
}

uint64_t sub_1D26CD020()
{
  return MEMORY[0x1E0CE0238]();
}

uint64_t sub_1D26CD02C()
{
  return MEMORY[0x1E0CE0280]();
}

uint64_t sub_1D26CD038()
{
  return MEMORY[0x1E0CE02F0]();
}

uint64_t sub_1D26CD044()
{
  return MEMORY[0x1E0CE0648]();
}

uint64_t sub_1D26CD050()
{
  return MEMORY[0x1E0CE0670]();
}

uint64_t sub_1D26CD05C()
{
  return MEMORY[0x1E0CE0698]();
}

uint64_t sub_1D26CD068()
{
  return MEMORY[0x1E0DEF4A8]();
}

uint64_t sub_1D26CD074()
{
  return MEMORY[0x1E0DEF4F8]();
}

uint64_t sub_1D26CD080()
{
  return MEMORY[0x1E0DEF560]();
}

uint64_t _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1D26CD098()
{
  return MEMORY[0x1E0DEF580]();
}

uint64_t sub_1D26CD0A4()
{
  return MEMORY[0x1E0DEF588]();
}

uint64_t sub_1D26CD0B0()
{
  return MEMORY[0x1E0DEF590]();
}

uint64_t sub_1D26CD0BC()
{
  return MEMORY[0x1E0DEF598]();
}

uint64_t sub_1D26CD0C8()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1D26CD0D4()
{
  return MEMORY[0x1E0DEF688]();
}

uint64_t sub_1D26CD0E0()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1D26CD0EC()
{
  return MEMORY[0x1E0DEF6A0]();
}

uint64_t sub_1D26CD0F8()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1D26CD104()
{
  return MEMORY[0x1E0DEF6D0]();
}

uint64_t sub_1D26CD110()
{
  return MEMORY[0x1E0DEF6E0]();
}

uint64_t sub_1D26CD11C()
{
  return MEMORY[0x1E0DEF6E8]();
}

uint64_t sub_1D26CD128()
{
  return MEMORY[0x1E0DEF748]();
}

uint64_t sub_1D26CD134()
{
  return MEMORY[0x1E0DEF778]();
}

uint64_t sub_1D26CD140()
{
  return MEMORY[0x1E0CEFB50]();
}

uint64_t sub_1D26CD14C()
{
  return MEMORY[0x1E0CEFB80]();
}

uint64_t sub_1D26CD158()
{
  return MEMORY[0x1E0CEFB98]();
}

uint64_t sub_1D26CD164()
{
  return MEMORY[0x1E0CEFBD0]();
}

uint64_t sub_1D26CD170()
{
  return MEMORY[0x1E0CEFBE0]();
}

uint64_t sub_1D26CD17C()
{
  return MEMORY[0x1E0CEFBF8]();
}

uint64_t sub_1D26CD188()
{
  return MEMORY[0x1E0CEFC10]();
}

uint64_t sub_1D26CD194()
{
  return MEMORY[0x1E0CEFC18]();
}

uint64_t sub_1D26CD1A0()
{
  return MEMORY[0x1E0CEFC30]();
}

uint64_t sub_1D26CD1AC()
{
  return MEMORY[0x1E0CEFC38]();
}

uint64_t sub_1D26CD1B8()
{
  return MEMORY[0x1E0CEFC40]();
}

uint64_t sub_1D26CD1C4()
{
  return MEMORY[0x1E0CEFC48]();
}

uint64_t sub_1D26CD1D0()
{
  return MEMORY[0x1E0CEFC50]();
}

uint64_t sub_1D26CD1DC()
{
  return MEMORY[0x1E0CEFC58]();
}

uint64_t sub_1D26CD1E8()
{
  return MEMORY[0x1E0CEFCA8]();
}

uint64_t sub_1D26CD1F4()
{
  return MEMORY[0x1E0CEFCB8]();
}

uint64_t sub_1D26CD200()
{
  return MEMORY[0x1E0CEFCC8]();
}

uint64_t sub_1D26CD20C()
{
  return MEMORY[0x1E0CEFCE8]();
}

uint64_t sub_1D26CD218()
{
  return MEMORY[0x1E0CEFD18]();
}

uint64_t sub_1D26CD224()
{
  return MEMORY[0x1E0CEFD20]();
}

uint64_t sub_1D26CD230()
{
  return MEMORY[0x1E0CEFD28]();
}

uint64_t sub_1D26CD23C()
{
  return MEMORY[0x1E0CEFD30]();
}

uint64_t sub_1D26CD248()
{
  return MEMORY[0x1E0CEFD38]();
}

uint64_t sub_1D26CD254()
{
  return MEMORY[0x1E0CEFD40]();
}

uint64_t sub_1D26CD260()
{
  return MEMORY[0x1E0CEFD50]();
}

uint64_t sub_1D26CD26C()
{
  return MEMORY[0x1E0CEFD58]();
}

uint64_t sub_1D26CD278()
{
  return MEMORY[0x1E0CEFD78]();
}

uint64_t sub_1D26CD284()
{
  return MEMORY[0x1E0CEFD88]();
}

uint64_t sub_1D26CD290()
{
  return MEMORY[0x1E0CEFDA0]();
}

uint64_t sub_1D26CD29C()
{
  return MEMORY[0x1E0CEFDA8]();
}

uint64_t sub_1D26CD2A8()
{
  return MEMORY[0x1E0CEFDE8]();
}

uint64_t sub_1D26CD2B4()
{
  return MEMORY[0x1E0CEFDF0]();
}

uint64_t sub_1D26CD2C0()
{
  return MEMORY[0x1E0CEFE10]();
}

uint64_t sub_1D26CD2CC()
{
  return MEMORY[0x1E0CEFE18]();
}

uint64_t sub_1D26CD2D8()
{
  return MEMORY[0x1E0CEFE20]();
}

uint64_t sub_1D26CD2E4()
{
  return MEMORY[0x1E0CEFE28]();
}

uint64_t sub_1D26CD2F0()
{
  return MEMORY[0x1E0CEFE50]();
}

uint64_t sub_1D26CD2FC()
{
  return MEMORY[0x1E0CEFE60]();
}

uint64_t sub_1D26CD308()
{
  return MEMORY[0x1E0CEFE70]();
}

uint64_t sub_1D26CD314()
{
  return MEMORY[0x1E0CEFE78]();
}

uint64_t sub_1D26CD320()
{
  return MEMORY[0x1E0CEFE88]();
}

uint64_t sub_1D26CD32C()
{
  return MEMORY[0x1E0CEFE98]();
}

uint64_t sub_1D26CD338()
{
  return MEMORY[0x1E0CEFFF8]();
}

uint64_t sub_1D26CD344()
{
  return MEMORY[0x1E0CF0000]();
}

uint64_t sub_1D26CD350()
{
  return MEMORY[0x1E0CF0008]();
}

uint64_t sub_1D26CD35C()
{
  return MEMORY[0x1E0CF0020]();
}

uint64_t sub_1D26CD368()
{
  return MEMORY[0x1E0CF0028]();
}

uint64_t sub_1D26CD374()
{
  return MEMORY[0x1E0CF0030]();
}

uint64_t sub_1D26CD380()
{
  return MEMORY[0x1E0CF0038]();
}

uint64_t sub_1D26CD38C()
{
  return MEMORY[0x1E0CF0040]();
}

uint64_t sub_1D26CD398()
{
  return MEMORY[0x1E0CF0048]();
}

uint64_t sub_1D26CD3A4()
{
  return MEMORY[0x1E0CF0050]();
}

uint64_t sub_1D26CD3B0()
{
  return MEMORY[0x1E0CF0058]();
}

uint64_t sub_1D26CD3BC()
{
  return MEMORY[0x1E0CF00E8]();
}

uint64_t sub_1D26CD3C8()
{
  return MEMORY[0x1E0CF00F0]();
}

uint64_t sub_1D26CD3D4()
{
  return MEMORY[0x1E0CF00F8]();
}

uint64_t sub_1D26CD3E0()
{
  return MEMORY[0x1E0CF01A8]();
}

uint64_t sub_1D26CD3EC()
{
  return MEMORY[0x1E0CF01D0]();
}

uint64_t sub_1D26CD3F8()
{
  return MEMORY[0x1E0CF01E0]();
}

uint64_t sub_1D26CD404()
{
  return MEMORY[0x1E0CF0248]();
}

uint64_t sub_1D26CD410()
{
  return MEMORY[0x1E0CF0268]();
}

uint64_t sub_1D26CD41C()
{
  return MEMORY[0x1E0CF02C0]();
}

uint64_t sub_1D26CD428()
{
  return MEMORY[0x1E0CF0358]();
}

uint64_t sub_1D26CD434()
{
  return MEMORY[0x1E0CF0388]();
}

uint64_t sub_1D26CD440()
{
  return MEMORY[0x1E0CF0390]();
}

uint64_t sub_1D26CD44C()
{
  return MEMORY[0x1E0CF0398]();
}

uint64_t sub_1D26CD458()
{
  return MEMORY[0x1E0CF03A0]();
}

uint64_t sub_1D26CD464()
{
  return MEMORY[0x1E0CF03E8]();
}

uint64_t sub_1D26CD470()
{
  return MEMORY[0x1E0CF0400]();
}

uint64_t sub_1D26CD47C()
{
  return MEMORY[0x1E0CF0428]();
}

uint64_t sub_1D26CD488()
{
  return MEMORY[0x1E0CF0430]();
}

uint64_t sub_1D26CD494()
{
  return MEMORY[0x1E0CF0470]();
}

uint64_t sub_1D26CD4A0()
{
  return MEMORY[0x1E0CF0478]();
}

uint64_t sub_1D26CD4AC()
{
  return MEMORY[0x1E0CF04A0]();
}

uint64_t sub_1D26CD4B8()
{
  return MEMORY[0x1E0CF04B0]();
}

uint64_t sub_1D26CD4C4()
{
  return MEMORY[0x1E0CF04E0]();
}

uint64_t sub_1D26CD4D0()
{
  return MEMORY[0x1E0CF04E8]();
}

uint64_t sub_1D26CD4DC()
{
  return MEMORY[0x1E0CF0508]();
}

uint64_t sub_1D26CD4E8()
{
  return MEMORY[0x1E0CF06D0]();
}

uint64_t sub_1D26CD4F4()
{
  return MEMORY[0x1E0CF06E0]();
}

uint64_t sub_1D26CD500()
{
  return MEMORY[0x1E0CF06E8]();
}

uint64_t sub_1D26CD50C()
{
  return MEMORY[0x1E0CF06F0]();
}

uint64_t sub_1D26CD518()
{
  return MEMORY[0x1E0CF06F8]();
}

uint64_t sub_1D26CD524()
{
  return MEMORY[0x1E0CF0708]();
}

uint64_t sub_1D26CD530()
{
  return MEMORY[0x1E0CF0710]();
}

uint64_t sub_1D26CD53C()
{
  return MEMORY[0x1E0CF0718]();
}

uint64_t sub_1D26CD548()
{
  return MEMORY[0x1E0CF0720]();
}

uint64_t sub_1D26CD554()
{
  return MEMORY[0x1E0CF0728]();
}

uint64_t sub_1D26CD560()
{
  return MEMORY[0x1E0CF0730]();
}

uint64_t sub_1D26CD56C()
{
  return MEMORY[0x1E0CF0738]();
}

uint64_t sub_1D26CD578()
{
  return MEMORY[0x1E0CF07E0]();
}

uint64_t sub_1D26CD584()
{
  return MEMORY[0x1E0CF07F0]();
}

uint64_t sub_1D26CD590()
{
  return MEMORY[0x1E0CF07F8]();
}

uint64_t sub_1D26CD59C()
{
  return MEMORY[0x1E0CF0808]();
}

uint64_t sub_1D26CD5A8()
{
  return MEMORY[0x1E0CF0818]();
}

uint64_t sub_1D26CD5B4()
{
  return MEMORY[0x1E0CF0820]();
}

uint64_t sub_1D26CD5C0()
{
  return MEMORY[0x1E0CF0830]();
}

uint64_t sub_1D26CD5CC()
{
  return MEMORY[0x1E0CF0848]();
}

uint64_t sub_1D26CD5D8()
{
  return MEMORY[0x1E0CF0868]();
}

uint64_t sub_1D26CD5E4()
{
  return MEMORY[0x1E0CF0880]();
}

uint64_t sub_1D26CD5F0()
{
  return MEMORY[0x1E0CF0890]();
}

uint64_t sub_1D26CD5FC()
{
  return MEMORY[0x1E0CF0898]();
}

uint64_t sub_1D26CD608()
{
  return MEMORY[0x1E0CF08A0]();
}

uint64_t sub_1D26CD614()
{
  return MEMORY[0x1E0CF08A8]();
}

uint64_t sub_1D26CD620()
{
  return MEMORY[0x1E0CF08B0]();
}

uint64_t sub_1D26CD62C()
{
  return MEMORY[0x1E0CF08B8]();
}

uint64_t sub_1D26CD638()
{
  return MEMORY[0x1E0CF08F0]();
}

uint64_t sub_1D26CD644()
{
  return MEMORY[0x1E0CF0908]();
}

uint64_t sub_1D26CD650()
{
  return MEMORY[0x1E0CF0918]();
}

uint64_t sub_1D26CD65C()
{
  return MEMORY[0x1E0CF0920]();
}

uint64_t sub_1D26CD668()
{
  return MEMORY[0x1E0CF0958]();
}

uint64_t sub_1D26CD674()
{
  return MEMORY[0x1E0CF0960]();
}

uint64_t sub_1D26CD680()
{
  return MEMORY[0x1E0CF0968]();
}

uint64_t sub_1D26CD68C()
{
  return MEMORY[0x1E0CF0978]();
}

uint64_t sub_1D26CD698()
{
  return MEMORY[0x1E0CF09B0]();
}

uint64_t sub_1D26CD6A4()
{
  return MEMORY[0x1E0CF0A10]();
}

uint64_t sub_1D26CD6B0()
{
  return MEMORY[0x1E0CF0A18]();
}

uint64_t sub_1D26CD6BC()
{
  return MEMORY[0x1E0CF0A28]();
}

uint64_t sub_1D26CD6C8()
{
  return MEMORY[0x1E0CF0A30]();
}

uint64_t sub_1D26CD6D4()
{
  return MEMORY[0x1E0CF0A38]();
}

uint64_t sub_1D26CD6E0()
{
  return MEMORY[0x1E0CF0A40]();
}

uint64_t sub_1D26CD6EC()
{
  return MEMORY[0x1E0CF0A50]();
}

uint64_t sub_1D26CD6F8()
{
  return MEMORY[0x1E0CF0A60]();
}

uint64_t sub_1D26CD704()
{
  return MEMORY[0x1E0CF0A78]();
}

uint64_t sub_1D26CD710()
{
  return MEMORY[0x1E0CF0A88]();
}

uint64_t sub_1D26CD71C()
{
  return MEMORY[0x1E0CF0A90]();
}

uint64_t sub_1D26CD728()
{
  return MEMORY[0x1E0CF0AA0]();
}

uint64_t sub_1D26CD734()
{
  return MEMORY[0x1E0CF0AA8]();
}

uint64_t sub_1D26CD740()
{
  return MEMORY[0x1E0CF0AD0]();
}

uint64_t sub_1D26CD74C()
{
  return MEMORY[0x1E0CF0AE0]();
}

uint64_t sub_1D26CD758()
{
  return MEMORY[0x1E0CF0AF0]();
}

uint64_t sub_1D26CD764()
{
  return MEMORY[0x1E0CF0AF8]();
}

uint64_t sub_1D26CD770()
{
  return MEMORY[0x1E0CF0B00]();
}

uint64_t sub_1D26CD77C()
{
  return MEMORY[0x1E0CF0B08]();
}

uint64_t sub_1D26CD788()
{
  return MEMORY[0x1E0CF0B10]();
}

uint64_t sub_1D26CD794()
{
  return MEMORY[0x1E0CF0B18]();
}

uint64_t sub_1D26CD7A0()
{
  return MEMORY[0x1E0CF0B20]();
}

uint64_t sub_1D26CD7AC()
{
  return MEMORY[0x1E0CF0B28]();
}

uint64_t sub_1D26CD7B8()
{
  return MEMORY[0x1E0CF0B38]();
}

uint64_t sub_1D26CD7C4()
{
  return MEMORY[0x1E0DE9D60]();
}

uint64_t sub_1D26CD7D0()
{
  return MEMORY[0x1E0DE9D70]();
}

uint64_t sub_1D26CD7DC()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1D26CD7E8()
{
  return MEMORY[0x1E0CB17E8]();
}

uint64_t sub_1D26CD7F4()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1D26CD800()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1D26CD80C()
{
  return MEMORY[0x1E0DE9E40]();
}

uint64_t sub_1D26CD818()
{
  return MEMORY[0x1E0DE9E68]();
}

uint64_t sub_1D26CD824()
{
  return MEMORY[0x1E0DE9E78]();
}

uint64_t sub_1D26CD830()
{
  return MEMORY[0x1E0DE9E90]();
}

uint64_t sub_1D26CD83C()
{
  return MEMORY[0x1E0DE9EC0]();
}

uint64_t sub_1D26CD848()
{
  return MEMORY[0x1E0DE9F78]();
}

uint64_t sub_1D26CD854()
{
  return MEMORY[0x1E0DE9FA8]();
}

uint64_t sub_1D26CD860()
{
  return MEMORY[0x1E0DE9FC8]();
}

uint64_t sub_1D26CD86C()
{
  return MEMORY[0x1E0DEA000]();
}

uint64_t sub_1D26CD878()
{
  return MEMORY[0x1E0DEA010]();
}

uint64_t sub_1D26CD884()
{
  return MEMORY[0x1E0DEA020]();
}

uint64_t sub_1D26CD890()
{
  return MEMORY[0x1E0DEA040]();
}

uint64_t sub_1D26CD89C()
{
  return MEMORY[0x1E0DEA048]();
}

uint64_t sub_1D26CD8A8()
{
  return MEMORY[0x1E0DEA098]();
}

uint64_t sub_1D26CD8B4()
{
  return MEMORY[0x1E0DEA0A0]();
}

uint64_t sub_1D26CD8C0()
{
  return MEMORY[0x1E0DEA0A8]();
}

uint64_t sub_1D26CD8CC()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1D26CD8D8()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1D26CD8E4()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1D26CD8F0()
{
  return MEMORY[0x1E0DEA3C0]();
}

uint64_t sub_1D26CD8FC()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1D26CD908()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1D26CD914()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1D26CD920()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1D26CD92C()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1D26CD938()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1D26CD944()
{
  return MEMORY[0x1E0CB1988]();
}

uint64_t sub_1D26CD950()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1D26CD95C()
{
  return MEMORY[0x1E0CB19C0]();
}

uint64_t sub_1D26CD968()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1D26CD974()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1D26CD980()
{
  return MEMORY[0x1E0CB1A58]();
}

uint64_t sub_1D26CD98C()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1D26CD998()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1D26CD9A4()
{
  return MEMORY[0x1E0DEA628]();
}

uint64_t sub_1D26CD9B0()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1D26CD9BC()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1D26CD9C8()
{
  return MEMORY[0x1E0DEA688]();
}

uint64_t sub_1D26CD9D4()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1D26CD9E0()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1D26CD9EC()
{
  return MEMORY[0x1E0DEA7C0]();
}

uint64_t sub_1D26CD9F8()
{
  return MEMORY[0x1E0DEA7D0]();
}

uint64_t sub_1D26CDA04()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1D26CDA10()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_1D26CDA1C()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1D26CDA28()
{
  return MEMORY[0x1E0DEA948]();
}

uint64_t sub_1D26CDA34()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1D26CDA40()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1D26CDA4C()
{
  return MEMORY[0x1E0DEAA58]();
}

uint64_t sub_1D26CDA58()
{
  return MEMORY[0x1E0DEAA68]();
}

uint64_t sub_1D26CDA64()
{
  return MEMORY[0x1E0DEAAA8]();
}

uint64_t sub_1D26CDA70()
{
  return MEMORY[0x1E0DEAAB8]();
}

uint64_t sub_1D26CDA7C()
{
  return MEMORY[0x1E0DEAAD8]();
}

uint64_t sub_1D26CDA88()
{
  return MEMORY[0x1E0DEAB00]();
}

uint64_t sub_1D26CDA94()
{
  return MEMORY[0x1E0DEAB20]();
}

uint64_t sub_1D26CDAA0()
{
  return MEMORY[0x1E0DEAB30]();
}

uint64_t sub_1D26CDAAC()
{
  return MEMORY[0x1E0DEAB38]();
}

uint64_t sub_1D26CDAB8()
{
  return MEMORY[0x1E0DEAB40]();
}

uint64_t sub_1D26CDAC4()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1D26CDAD0()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1D26CDADC()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1D26CDAE8()
{
  return MEMORY[0x1E0CB1AE0]();
}

uint64_t sub_1D26CDAF4()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1D26CDB00()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1D26CDB0C()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1D26CDB18()
{
  return MEMORY[0x1E0DEADC0]();
}

uint64_t sub_1D26CDB24()
{
  return MEMORY[0x1E0DEADC8]();
}

uint64_t sub_1D26CDB30()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1D26CDB3C()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1D26CDB48()
{
  return MEMORY[0x1E0DEAE38]();
}

uint64_t sub_1D26CDB54()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1D26CDB60()
{
  return MEMORY[0x1E0DEAE60]();
}

uint64_t sub_1D26CDB6C()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1D26CDB78()
{
  return MEMORY[0x1E0DEAE88]();
}

uint64_t sub_1D26CDB84()
{
  return MEMORY[0x1E0DEAE90]();
}

uint64_t sub_1D26CDB90()
{
  return MEMORY[0x1E0DEAE98]();
}

uint64_t sub_1D26CDB9C()
{
  return MEMORY[0x1E0DEAEB8]();
}

uint64_t sub_1D26CDBA8()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1D26CDBB4()
{
  return MEMORY[0x1E0DEAF00]();
}

uint64_t sub_1D26CDBC0()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1D26CDBCC()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1D26CDBD8()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1D26CDBE4()
{
  return MEMORY[0x1E0DEB030]();
}

uint64_t sub_1D26CDBF0()
{
  return MEMORY[0x1E0CB1BB0]();
}

uint64_t sub_1D26CDBFC()
{
  return MEMORY[0x1E0DEB220]();
}

uint64_t sub_1D26CDC08()
{
  return MEMORY[0x1E0DEB258]();
}

uint64_t sub_1D26CDC14()
{
  return MEMORY[0x1E0DEB288]();
}

uint64_t sub_1D26CDC20()
{
  return MEMORY[0x1E0DEB310]();
}

uint64_t sub_1D26CDC2C()
{
  return MEMORY[0x1E0DEB388]();
}

uint64_t sub_1D26CDC38()
{
  return MEMORY[0x1E0DEB3B0]();
}

uint64_t sub_1D26CDC44()
{
  return MEMORY[0x1E0DEB528]();
}

uint64_t sub_1D26CDC50()
{
  return MEMORY[0x1E0DEB560]();
}

uint64_t sub_1D26CDC5C()
{
  return MEMORY[0x1E0DEB5A0]();
}

uint64_t sub_1D26CDC68()
{
  return MEMORY[0x1E0DEB5A8]();
}

uint64_t sub_1D26CDC74()
{
  return MEMORY[0x1E0DEB5B0]();
}

uint64_t sub_1D26CDC80()
{
  return MEMORY[0x1E0DEB620]();
}

uint64_t sub_1D26CDC8C()
{
  return MEMORY[0x1E0DEB660]();
}

uint64_t sub_1D26CDC98()
{
  return MEMORY[0x1E0DEB6D0]();
}

uint64_t sub_1D26CDCA4()
{
  return MEMORY[0x1E0DEB810]();
}

uint64_t sub_1D26CDCB0()
{
  return MEMORY[0x1E0CB1CB0]();
}

uint64_t sub_1D26CDCBC()
{
  return MEMORY[0x1E0CB1CD0]();
}

uint64_t sub_1D26CDCC8()
{
  return MEMORY[0x1E0CB1DB8]();
}

uint64_t sub_1D26CDCD4()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1D26CDCE0()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1D26CDCEC()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1D26CDCF8()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1D26CDD04()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1D26CDD10()
{
  return MEMORY[0x1E0CF0B78]();
}

uint64_t sub_1D26CDD1C()
{
  return MEMORY[0x1E0CF0B80]();
}

uint64_t sub_1D26CDD28()
{
  return MEMORY[0x1E0CB1E68]();
}

uint64_t sub_1D26CDD34()
{
  return MEMORY[0x1E0CB1E70]();
}

uint64_t sub_1D26CDD40()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1D26CDD4C()
{
  return MEMORY[0x1E0DEF840]();
}

uint64_t sub_1D26CDD58()
{
  return MEMORY[0x1E0DEF868]();
}

uint64_t sub_1D26CDD64()
{
  return MEMORY[0x1E0DEF878]();
}

uint64_t sub_1D26CDD70()
{
  return MEMORY[0x1E0DEF880]();
}

uint64_t sub_1D26CDD7C()
{
  return MEMORY[0x1E0DEF8A0]();
}

uint64_t sub_1D26CDD88()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1D26CDD94()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1D26CDDA0()
{
  return MEMORY[0x1E0DEF8F8]();
}

uint64_t sub_1D26CDDAC()
{
  return MEMORY[0x1E0DEF900]();
}

uint64_t sub_1D26CDDB8()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1D26CDDC4()
{
  return MEMORY[0x1E0DEF920]();
}

uint64_t sub_1D26CDDD0()
{
  return MEMORY[0x1E0DEF938]();
}

uint64_t sub_1D26CDDDC()
{
  return MEMORY[0x1E0DEF978]();
}

uint64_t sub_1D26CDDE8()
{
  return MEMORY[0x1E0DEF9F0]();
}

uint64_t sub_1D26CDDF4()
{
  return MEMORY[0x1E0DEFA18]();
}

uint64_t sub_1D26CDE00()
{
  return MEMORY[0x1E0DEFA30]();
}

uint64_t sub_1D26CDE0C()
{
  return MEMORY[0x1E0DF2298]();
}

uint64_t sub_1D26CDE18()
{
  return MEMORY[0x1E0DF22A0]();
}

uint64_t sub_1D26CDE24()
{
  return MEMORY[0x1E0DF22A8]();
}

uint64_t sub_1D26CDE30()
{
  return MEMORY[0x1E0D0FE08]();
}

uint64_t sub_1D26CDE3C()
{
  return MEMORY[0x1E0D0FE20]();
}

uint64_t sub_1D26CDE48()
{
  return MEMORY[0x1E0D0FE40]();
}

uint64_t sub_1D26CDE54()
{
  return MEMORY[0x1E0D0FE48]();
}

uint64_t sub_1D26CDE60()
{
  return MEMORY[0x1E0CB1F30]();
}

uint64_t sub_1D26CDE6C()
{
  return MEMORY[0x1E0CB1F50]();
}

uint64_t sub_1D26CDE78()
{
  return MEMORY[0x1E0DEFAA0]();
}

uint64_t sub_1D26CDE84()
{
  return MEMORY[0x1E0CB1FC0]();
}

uint64_t sub_1D26CDE90()
{
  return MEMORY[0x1E0CB1FC8]();
}

uint64_t sub_1D26CDE9C()
{
  return MEMORY[0x1E0CB1FD0]();
}

uint64_t sub_1D26CDEA8()
{
  return MEMORY[0x1E0CF0B98]();
}

uint64_t sub_1D26CDEB4()
{
  return MEMORY[0x1E0CB20D0]();
}

uint64_t sub_1D26CDEC0()
{
  return MEMORY[0x1E0DEFCD8]();
}

uint64_t sub_1D26CDECC()
{
  return MEMORY[0x1E0DEFCE0]();
}

uint64_t sub_1D26CDED8()
{
  return MEMORY[0x1E0DEFCE8]();
}

uint64_t sub_1D26CDEE4()
{
  return MEMORY[0x1E0CB22E8]();
}

uint64_t sub_1D26CDEF0()
{
  return MEMORY[0x1E0CB2300]();
}

uint64_t sub_1D26CDEFC()
{
  return MEMORY[0x1E0CB2328]();
}

uint64_t sub_1D26CDF08()
{
  return MEMORY[0x1E0DF22B0]();
}

uint64_t sub_1D26CDF14()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t sub_1D26CDF20()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_1D26CDF2C()
{
  return MEMORY[0x1E0DEB930]();
}

uint64_t sub_1D26CDF38()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1D26CDF44()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1D26CDF50()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1D26CDF5C()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1D26CDF68()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1D26CDF74()
{
  return MEMORY[0x1E0CB2478]();
}

uint64_t sub_1D26CDF80()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1D26CDF8C()
{
  return MEMORY[0x1E0CB24A8]();
}

uint64_t sub_1D26CDF98()
{
  return MEMORY[0x1E0CB24B0]();
}

uint64_t sub_1D26CDFA4()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1D26CDFB0()
{
  return MEMORY[0x1E0DEBE88]();
}

uint64_t sub_1D26CDFBC()
{
  return MEMORY[0x1E0DEBFC0]();
}

uint64_t sub_1D26CDFC8()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1D26CDFD4()
{
  return MEMORY[0x1E0DEC058]();
}

uint64_t sub_1D26CDFE0()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1D26CDFEC()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1D26CDFF8()
{
  return MEMORY[0x1E0DEC078]();
}

uint64_t sub_1D26CE004()
{
  return MEMORY[0x1E0DEC0B0]();
}

uint64_t sub_1D26CE010()
{
  return MEMORY[0x1E0DEC0E0]();
}

uint64_t sub_1D26CE01C()
{
  return MEMORY[0x1E0DEC0F8]();
}

uint64_t sub_1D26CE028()
{
  return MEMORY[0x1E0DEC108]();
}

uint64_t sub_1D26CE034()
{
  return MEMORY[0x1E0DEC110]();
}

uint64_t sub_1D26CE040()
{
  return MEMORY[0x1E0DEC118]();
}

uint64_t sub_1D26CE04C()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1D26CE058()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1D26CE064()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1D26CE070()
{
  return MEMORY[0x1E0DEC248]();
}

uint64_t sub_1D26CE07C()
{
  return MEMORY[0x1E0DEC250]();
}

uint64_t sub_1D26CE088()
{
  return MEMORY[0x1E0DEC258]();
}

uint64_t sub_1D26CE094()
{
  return MEMORY[0x1E0DEC260]();
}

uint64_t sub_1D26CE0A0()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1D26CE0AC()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1D26CE0B8()
{
  return MEMORY[0x1E0DEC338]();
}

uint64_t sub_1D26CE0C4()
{
  return MEMORY[0x1E0DEC3D8]();
}

uint64_t sub_1D26CE0D0()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1D26CE0DC()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1D26CE0E8()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1D26CE0F4()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1D26CE100()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1D26CE10C()
{
  return MEMORY[0x1E0DEC5F8]();
}

uint64_t sub_1D26CE118()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1D26CE124()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1D26CE130()
{
  return MEMORY[0x1E0DEC680]();
}

uint64_t sub_1D26CE13C()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1D26CE148()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1D26CE154()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1D26CE160()
{
  return MEMORY[0x1E0DEC6E0]();
}

uint64_t sub_1D26CE16C()
{
  return MEMORY[0x1E0DEC700]();
}

uint64_t sub_1D26CE178()
{
  return MEMORY[0x1E0DEC708]();
}

uint64_t sub_1D26CE184()
{
  return MEMORY[0x1E0DEC898]();
}

uint64_t sub_1D26CE190()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1D26CE19C()
{
  return MEMORY[0x1E0DECAE8]();
}

uint64_t sub_1D26CE1A8()
{
  return MEMORY[0x1E0DECB40]();
}

uint64_t sub_1D26CE1B4()
{
  return MEMORY[0x1E0DECBB8]();
}

uint64_t sub_1D26CE1C0()
{
  return MEMORY[0x1E0DECBC0]();
}

uint64_t sub_1D26CE1CC()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1D26CE1D8()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1D26CE1E4()
{
  return MEMORY[0x1E0DECBF8]();
}

uint64_t sub_1D26CE1F0()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1D26CE1FC()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1D26CE208()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1D26CE214()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1D26CE220()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1D26CE22C()
{
  return MEMORY[0x1E0DECDC8]();
}

uint64_t sub_1D26CE238()
{
  return MEMORY[0x1E0DECE00]();
}

uint64_t sub_1D26CE244()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1D26CE250()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1D26CE25C()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1D26CE268()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1D26CE274()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1D26CE280()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1D26CE28C()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1D26CE298()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1D26CE2A4()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1D26CE2B0()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1D26CE2BC()
{
  return MEMORY[0x1E0DECFE8]();
}

uint64_t sub_1D26CE2C8()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1D26CE2D4()
{
  return MEMORY[0x1E0DED028]();
}

uint64_t sub_1D26CE2E0()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1D26CE2EC()
{
  return MEMORY[0x1E0DED040]();
}

uint64_t sub_1D26CE2F8()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1D26CE304()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1D26CE310()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1D26CE31C()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1D26CE328()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1D26CE334()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1D26CE340()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1D26CE34C()
{
  return MEMORY[0x1E0DED118]();
}

uint64_t sub_1D26CE358()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1D26CE364()
{
  return MEMORY[0x1E0DED158]();
}

uint64_t sub_1D26CE370()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1D26CE37C()
{
  return MEMORY[0x1E0DED1E8]();
}

uint64_t sub_1D26CE388()
{
  return MEMORY[0x1E0DED4A0]();
}

uint64_t sub_1D26CE394()
{
  return MEMORY[0x1E0DED548]();
}

uint64_t sub_1D26CE3A0()
{
  return MEMORY[0x1E0DED550]();
}

uint64_t sub_1D26CE3AC()
{
  return MEMORY[0x1E0DED5A8]();
}

uint64_t sub_1D26CE3B8()
{
  return MEMORY[0x1E0DED5F0]();
}

uint64_t sub_1D26CE3C4()
{
  return MEMORY[0x1E0DED5F8]();
}

uint64_t sub_1D26CE3D0()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1D26CE3DC()
{
  return MEMORY[0x1E0DED610]();
}

uint64_t sub_1D26CE3E8()
{
  return MEMORY[0x1E0DED768]();
}

uint64_t sub_1D26CE3F4()
{
  return MEMORY[0x1E0DED980]();
}

uint64_t sub_1D26CE400()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1D26CE40C()
{
  return MEMORY[0x1E0DED9F8]();
}

uint64_t sub_1D26CE418()
{
  return MEMORY[0x1E0DEDAE0]();
}

uint64_t sub_1D26CE424()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1D26CE430()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1D26CE43C()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1D26CE448()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1D26CE454()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1D26CE460()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1D26CE46C()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1D26CE478()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1D26CE484()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1D26CE490()
{
  return MEMORY[0x1E0DEDF38]();
}

uint64_t sub_1D26CE49C()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1D26CE4A8()
{
  return MEMORY[0x1E0DEDF48]();
}

uint64_t sub_1D26CE4B4()
{
  return MEMORY[0x1E0DEDF80]();
}

uint64_t sub_1D26CE4C0()
{
  return MEMORY[0x1E0DEDFF8]();
}

uint64_t sub_1D26CE4CC()
{
  return MEMORY[0x1E0DEE000]();
}

uint64_t sub_1D26CE4D8()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1D26CE4E4()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1D26CE4F0()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1D26CE4FC()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1D26CE508()
{
  return MEMORY[0x1E0DEE978]();
}

uint64_t BSBundleIDForAuditToken()
{
  return MEMORY[0x1E0D01100]();
}

uint64_t BSContinuousMachTimeNow()
{
  return MEMORY[0x1E0D01140]();
}

uint64_t BSDispatchQueueAssertMain()
{
  return MEMORY[0x1E0D01220]();
}

uint64_t CAEncodeLayerTreeToFile()
{
  return MEMORY[0x1E0CD23B8]();
}

uint64_t CAMLEncodeLayerTreeToPathWithOptions()
{
  return MEMORY[0x1E0CD2510]();
}

CFArrayRef CFBundleCopyBundleLocalizations(CFBundleRef bundle)
{
  return (CFArrayRef)MEMORY[0x1E0C97FF8](bundle);
}

CFBundleRef CFBundleCreate(CFAllocatorRef allocator, CFURLRef bundleURL)
{
  return (CFBundleRef)MEMORY[0x1E0C980D0](allocator, bundleURL);
}

CFTypeRef CFBundleGetValueForInfoDictionaryKey(CFBundleRef bundle, CFStringRef key)
{
  return (CFTypeRef)MEMORY[0x1E0C98180](bundle, key);
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x1E0C988B0](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x1E0C988B8]();
}

void CFRunLoopAddObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
  MEMORY[0x1E0C98BE8](rl, observer, mode);
}

Boolean CFRunLoopContainsObserver(CFRunLoopRef rl, CFRunLoopObserverRef observer, CFRunLoopMode mode)
{
  return MEMORY[0x1E0C98C08](rl, observer, mode);
}

CFRunLoopMode CFRunLoopCopyCurrentMode(CFRunLoopRef rl)
{
  return (CFRunLoopMode)MEMORY[0x1E0C98C28](rl);
}

CFRunLoopRef CFRunLoopGetCurrent(void)
{
  return (CFRunLoopRef)MEMORY[0x1E0C98C30]();
}

CFRunLoopObserverRef CFRunLoopObserverCreate(CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context)
{
  return (CFRunLoopObserverRef)MEMORY[0x1E0C98C60](allocator, activities, repeats, order, callout, context);
}

CGDataConsumerRef CGDataConsumerCreateWithURL(CFURLRef url)
{
  return (CGDataConsumerRef)MEMORY[0x1E0C9C5B8](url);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x1E0CBC308](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithDataConsumer(CGDataConsumerRef consumer, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC340](consumer, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1E0CBC358](idst);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D580]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x1E0C9D5D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t CHSCurrentPlatform()
{
  return MEMORY[0x1E0D0FEA8]();
}

uint64_t CHSPlatformFromDYLDPlatform()
{
  return MEMORY[0x1E0D0FF08]();
}

uint64_t CHSWidgetFamilyIsAccessory()
{
  return MEMORY[0x1E0D0FF30]();
}

uint64_t CHSWidgetRelevanceServiceCacheDirectory()
{
  return MEMORY[0x1E0D0FF60]();
}

uint64_t DMIsMigrationNeeded()
{
  return MEMORY[0x1E0D1CFA0]();
}

uint64_t DMPerformMigrationIfNeeded()
{
  return MEMORY[0x1E0D1CFB8]();
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1E0DE2B20]();
}

uint64_t PLLogRegisteredEvent()
{
  return MEMORY[0x1E0D7FE28]();
}

BOOL UIAccessibilityDarkerSystemColorsEnabled(void)
{
  return MEMORY[0x1E0DC4500]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

uint64_t _objc_autoreleasePoolPop()
{
  return MEMORY[0x1E0DE7960]();
}

uint64_t _objc_autoreleasePoolPush()
{
  return MEMORY[0x1E0DE7970]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C810D0](dso, log, type, spid, name, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x1E0C82BC0](object);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x1E0C82D00](identifier, flags);
}

uint64_t dispatch_set_qos_class_fallback()
{
  return MEMORY[0x1E0C82EF8]();
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x1E0C82F10](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x1E0C82F20](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x1E0C82F58](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x1E0C82F78](source, start, interval, leeway);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x1E0C82FB8](when, delta);
}

uint64_t dispatch_time_to_nsec()
{
  return MEMORY[0x1E0C82FC0]();
}

dispatch_workloop_t dispatch_workloop_create_inactive(const char *label)
{
  return (dispatch_workloop_t)MEMORY[0x1E0C82FE0](label);
}

void dispatch_workloop_set_autorelease_frequency(dispatch_workloop_t workloop, dispatch_autorelease_frequency_t frequency)
{
  MEMORY[0x1E0C82FF0](workloop, frequency);
}

void exit(int a1)
{
  MEMORY[0x1E0C83278](*(_QWORD *)&a1);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

ssize_t getxattr(const char *path, const char *name, void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C83840](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

uint32_t notify_cancel(int token)
{
  return MEMORY[0x1E0C843D8](*(_QWORD *)&token);
}

uint32_t notify_register_dispatch(const char *name, int *out_token, dispatch_queue_t queue, notify_handler_t handler)
{
  return MEMORY[0x1E0C84408](name, out_token, queue, handler);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t os_transaction_create()
{
  return MEMORY[0x1E0C84970]();
}

uint64_t os_transaction_get_description()
{
  return MEMORY[0x1E0C84978]();
}

void os_unfair_lock_assert_owner(const os_unfair_lock *lock)
{
  MEMORY[0x1E0C84990](lock);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C84998](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x1E0C849B0](lock);
}

uint64_t os_variant_has_internal_ui()
{
  return MEMORY[0x1E0C84A00]();
}

long double pow(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C84BB8](__x, __y);
  return result;
}

int removexattr(const char *path, const char *name, int options)
{
  return MEMORY[0x1E0C850F0](path, name, *(_QWORD *)&options);
}

int setxattr(const char *path, const char *name, const void *value, size_t size, u_int32_t position, int options)
{
  return MEMORY[0x1E0C853A0](path, name, value, size, *(_QWORD *)&position, *(_QWORD *)&options);
}

unsigned int sleep(unsigned int a1)
{
  return MEMORY[0x1E0C85438](*(_QWORD *)&a1);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x1E0DEEAB8]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x1E0DEEC18]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getExtendedExistentialTypeMetadata()
{
  return MEMORY[0x1E0DEEC68]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x1E0DEECB8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x1E0DEECE8]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x1E0DEECF0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x1E0DEED08]();
}

uint64_t swift_getTupleTypeLayout3()
{
  return MEMORY[0x1E0DEED10]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x1E0DEED18]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x1E0DEED20]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x1E0DEED28]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x1E0DEED58]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x1E0DEED68]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setAtWritableKeyPath()
{
  return MEMORY[0x1E0DEEE68]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x1E0DEEE88]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_isCurrentExecutor()
{
  return MEMORY[0x1E0DF1028]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x1E0DEEF20]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x1E0DEEF38]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x1E0DEEF40]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x1E0DEEF48]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x1E0DEEFC8]();
}

