uint64_t ReloadConfiguration.init(type:cost:reason:)@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v8 = (int *)type metadata accessor for ReloadConfiguration(0);
  MEMORY[0x1E0C80A78]();
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1E0C80A78]();
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a2) = *a2;
  v13 = *a3;
  sub_1D2534120(a1, (uint64_t)v12, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1D2534120((uint64_t)v12, (uint64_t)v10, type metadata accessor for ReloadConfiguration.ReloadType);
  v10[v8[5]] = (char)a2;
  *(_QWORD *)&v10[v8[7]] = 1;
  *(_QWORD *)&v10[v8[6]] = v13;
  v10[v8[8]] = 1;
  sub_1D25340E4((uint64_t)v12, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1D25341AC((uint64_t)v10, a4);
  return sub_1D25340E4(a1, type metadata accessor for ReloadConfiguration.ReloadType);
}

uint64_t type metadata accessor for ReloadConfiguration(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED961CD8);
}

uint64_t sub_1D25340E4(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D2534120(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2534164(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t type metadata accessor for ReloadConfiguration.ReloadType(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED961CB8);
}

uint64_t sub_1D25341AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReloadConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TimelineKey()
{
  return &type metadata for TimelineKey;
}

uint64_t type metadata accessor for ActivityKey(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED9634A0);
}

ValueMetadata *type metadata accessor for ReloadConfiguration.ReloadReason()
{
  return &type metadata for ReloadConfiguration.ReloadReason;
}

unint64_t sub_1D2534224(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t dispatch thunk of Extension.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

unint64_t destroy for ReloadConfiguration.ReloadReason(unint64_t *a1)
{
  return sub_1D2534224(*a1);
}

unint64_t *sub_1D2534264(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 5)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 61;
  }
  else
  {
    v2 = 8 * (a2 - 5);
    v3 = 0xA000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for ReloadConfiguration.ReloadCost()
{
  return &type metadata for ReloadConfiguration.ReloadCost;
}

uint64_t type metadata accessor for WidgetEntryKey()
{
  uint64_t result;

  result = qword_1ED96CE88;
  if (!qword_1ED96CE88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t dispatch thunk of StatefulStore.keys.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t getEnumTagSinglePayload for LiveWidgetEntryLaunchHandlingModifier(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t dispatch thunk of DataProtectionMonitoring.maxUnlockedProtectionLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D2534340@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2534728(&OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, a1);
}

uint64_t ReloadConfiguration.ReloadReason.defaultCost.getter()
{
  _QWORD *v0;

  return ((uint64_t (*)(void))((char *)sub_1D2534370 + 4 * byte_1D26D1F6D[*v0 >> 61]))();
}

void sub_1D2534370(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

void sub_1D2534378(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void sub_1D2534384(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = byte_1D26D228A[(unint64_t)(v1 + 0x6000000000000000) >> 3];
}

_BYTE *sub_1D25343A4(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

uint64_t dispatch thunk of TimelineServicing.reloadWidgets(containedIn:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of TimelineReloading.reloadWidgets(ofKind:containedIn:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of UserDefault.wrappedValue.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of UserDefault.wrappedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1D253453C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1D25DFDE0(v2, (void (*)(__int128 *__return_ptr, char *, uint64_t))sub_1D2538554);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1D25345A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

unint64_t *initializeBufferWithCopyOfBuffer for ReloadConfiguration.ReloadReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1D2534610(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_1D2534610(unint64_t result)
{
  switch(result >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D2534640()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_1D25E0D98(&v4);
  os_unfair_lock_unlock(v1 + 6);
  v2 = v4;
  swift_release();
  return v2;
}

unint64_t destroy for ReloadConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return sub_1D2534224(*(_QWORD *)(a1 + *(int *)(a2 + 24)));
}

uint64_t sub_1D2534728@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2 + *a1;
  swift_beginAccess();
  v5 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t _s9ChronoKit17ExtensionMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v5;
  unsigned __int8 v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  char v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  sub_1D2536488(&qword_1ED963388, &qword_1ED9633A0, MEMORY[0x1E0D0FB60]);
  sub_1D26CDAC4();
  sub_1D26CDAC4();
  if (v23 == v21 && v24 == v22)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v5 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = 0;
    if ((v5 & 1) == 0)
      return v6 & 1;
  }
  v7 = (int *)type metadata accessor for ExtensionMetadata();
  v8 = v7[5];
  v9 = *(_QWORD *)(a1 + v8);
  v10 = *(_QWORD *)(a1 + v8 + 8);
  v11 = (_QWORD *)(a2 + v8);
  if (v9 != *v11 || v10 != v11[1])
  {
    v13 = sub_1D26CE3D0();
    v6 = 0;
    if ((v13 & 1) == 0)
      return v6 & 1;
  }
  if ((sub_1D2539854(*(_QWORD *)(a1 + v7[6]), *(_QWORD *)(a2 + v7[6])) & 1) == 0
    || (sub_1D2686ED4(*(_QWORD *)(a1 + v7[7]), *(_QWORD *)(a2 + v7[7])) & 1) == 0)
  {
    goto LABEL_22;
  }
  v14 = v7[8];
  v15 = (_QWORD *)(a1 + v14);
  v16 = *(_QWORD *)(a1 + v14 + 8);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  if (!v16)
  {
    if (!v18)
    {
LABEL_24:
      v6 = sub_1D253954C(*(_QWORD *)(a1 + v7[9]), *(_QWORD *)(a2 + v7[9]));
      return v6 & 1;
    }
    goto LABEL_22;
  }
  if (!v18)
  {
LABEL_22:
    v6 = 0;
    return v6 & 1;
  }
  if (*v15 == *v17 && v16 == v18)
    goto LABEL_24;
  v19 = sub_1D26CE3D0();
  v6 = 0;
  if ((v19 & 1) != 0)
    goto LABEL_24;
  return v6 & 1;
}

uint64_t sub_1D2534940()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D25349A8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  void *v3;
  id v4;
  _QWORD v6[5];

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeLock);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1D2539D4C(v0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  sub_1D26CD320();
  v3 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension);
  v6[3] = sub_1D2539514(0, &qword_1ED9620B0);
  v6[0] = v3;
  v4 = v3;
  sub_1D26CD314();
  return sub_1D253703C((uint64_t)v6, &qword_1ED96FCE0);
}

uint64_t sub_1D2534A90()
{
  uint64_t v0;
  int v1;
  id v2;
  void *v3;
  id v4;
  __int128 v6;
  char v7;
  _OWORD v8[2];

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 88) + 16));
  swift_beginAccess();
  v1 = *(unsigned __int8 *)(v0 + 57);
  if (v1 != 2)
    return v1 & 1;
  v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  v3 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
    sub_1D2538448(&v6, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
  if (swift_dynamicCast())
  {
    LOBYTE(v1) = v7;
    return v1 & 1;
  }
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1D2534BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  _QWORD v13[2];

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 152))(a1, a2);
  v13[1] = v8;
  sub_1D26CDA04();
  (*(void (**)(uint64_t, uint64_t))(a2 + 56))(a1, a2);
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  if (qword_1ED96D9B8 != -1)
    swift_once();
  v9 = (id)qword_1ED96D9A8;
  v10 = (void *)sub_1D26CB940();
  v11 = objc_msgSend(v9, sel_stringFromDate_, v10);

  sub_1D26CD938();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return v13[0];
}

uint64_t KeepAliveTransaction.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  uint64_t v9;
  uint8_t *v10;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v15;

  v1 = v0;
  if (os_transaction_get_description())
  {
    v2 = sub_1D26CDA10();
    v4 = v3;
    if (qword_1ED96C2D8 != -1)
      swift_once();
    v5 = sub_1D26CC09C();
    __swift_project_value_buffer(v5, (uint64_t)qword_1ED96C2F0);
    swift_bridgeObjectRetain();
    v6 = sub_1D26CC084();
    v7 = sub_1D26CDD04();
    if (!os_log_type_enabled(v6, v7))
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_13;
    }
    v8 = (uint8_t *)swift_slowAlloc();
    v9 = swift_slowAlloc();
    v15 = v9;
    *(_DWORD *)v8 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D2537880(v2, v4, &v15);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v6, v7, "Removed: %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v9, -1, -1);
    v10 = v8;
  }
  else
  {
    if (qword_1ED96C2D8 != -1)
      swift_once();
    v11 = sub_1D26CC09C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED96C2F0);
    v6 = sub_1D26CC084();
    v12 = sub_1D26CDD04();
    if (!os_log_type_enabled(v6, v12))
      goto LABEL_11;
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1D2531000, v6, v12, "Removed: Transaction with no description", v13, 2u);
    v10 = v13;
  }
  MEMORY[0x1D823A5E0](v10, -1, -1);
LABEL_11:

LABEL_13:
  swift_unknownObjectRelease();
  return v1;
}

uint64_t KeepAliveTransaction.init(reason:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  v3 = v2;
  if (qword_1ED96C2D8 != -1)
    swift_once();
  v6 = sub_1D26CC09C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED96C2F0);
  swift_bridgeObjectRetain_n();
  v7 = sub_1D26CC084();
  v8 = sub_1D26CDD04();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v13 = v10;
    *(_DWORD *)v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1D2537880(a1, a2, &v13);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v7, v8, "Added: %s", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v10, -1, -1);
    MEMORY[0x1D823A5E0](v9, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1D26CD9B0();
  swift_bridgeObjectRelease();
  v11 = os_transaction_create();
  result = swift_release();
  if (v11)
  {
    *(_QWORD *)(v3 + 16) = v11;
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D25351AC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1D25351DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  void (*v15)(_BYTE *, uint64_t);
  _BYTE v17[16];

  v2 = *(_QWORD *)(*v1 + 80);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_1D26CDF38();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v17[-v11];
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(v3 + 56))(&v17[-v11], 1, 1, v2);
  v13 = *(_QWORD *)((char *)v1 + *(_QWORD *)(*v1 + 168));
  v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  sub_1D25370BC(v1, (uint64_t)v12);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 16))(v10, v12, v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    v15 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
    v15(v10, v6);
    return ((uint64_t (*)(_BYTE *, uint64_t))v15)(v12, v6);
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v3 + 32))(v5, v10, v2);
    swift_retain();
    sub_1D26CC138();
    swift_release();
    (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v12, v6);
  }
}

uint64_t NSXPCConnection.bundleIdentifier.getter()
{
  void *v0;
  id v1;
  void *v2;
  uint64_t v3;

  objc_msgSend(v0, sel_auditToken);
  v1 = (id)BSBundleIDForAuditToken();
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1D26CD938();

  return v3;
}

uint64_t sub_1D2535448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  sub_1D26CBD24();
  if (v10)
  {
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v11 + 24));
    sub_1D2536368((uint64_t *)(v11 + 16), a1, a2);
    os_unfair_lock_unlock((os_unfair_lock_t)(v11 + 24));
    return swift_release();
  }
  else
  {
    sub_1D26CBD54();
    sub_1D2535558((uint64_t)v9, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_1D2535558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint8_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint8_t *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  NSObject *v51;
  os_log_type_t v52;
  _BOOL4 v53;
  uint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  unint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint8_t *v60;
  uint64_t inited;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  uint64_t v72;
  char *v73;
  id v74;
  id v75;
  NSObject *v76;
  os_log_type_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  id v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  NSObject *v88;
  os_log_type_t v89;
  uint64_t v90;
  uint8_t *v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  NSObject *v99;
  uint64_t v100;
  _BOOL4 v101;
  uint8_t *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint8_t *v106;
  uint8_t *v107;
  uint64_t v108;
  char *v109;
  void *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(char *, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  void (*v121)(char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint8_t *v124;
  uint64_t v125;
  _QWORD v126[3];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129[3];
  uint64_t v130;
  uint64_t v131;
  uint64_t v132[6];
  _BYTE v133[48];

  v125 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v118 = (char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v121 = (void (*)(char *, uint64_t))((char *)&v107 - v9);
  v10 = MEMORY[0x1E0C80A78](v8);
  v120 = (char *)&v107 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v117 = (char *)&v107 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v119 = (char *)&v107 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v107 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v122 = v4;
  v123 = a1;
  v22(v17, a1, v4);
  sub_1D26CBD48();
  v23 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier;
  v124 = v2;
  v24 = *(_QWORD *)&v2[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v24 + 24));
  sub_1D2536368((uint64_t *)(v24 + 16), (uint64_t)v21, (uint64_t)v133);
  os_unfair_lock_unlock((os_unfair_lock_t)(v24 + 24));
  swift_release();
  sub_1D2537078((uint64_t)v133, (uint64_t)v132, &qword_1ED962040);
  v25 = v132[3];
  v26 = v125;
  sub_1D253703C((uint64_t)v132, &qword_1ED962040);
  if (v25)
    goto LABEL_2;
  v113 = v5;
  v114 = v22;
  v115 = v19;
  v116 = v18;
  v28 = v124;
  v29 = (char *)&v124[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_requireValidExtensions];
  swift_beginAccess();
  v30 = v123;
  if ((sub_1D25DF594(v123, 0, 0, *v29) & 1) == 0)
  {
    v43 = *(_QWORD *)&v28[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_lookupLock];
    os_unfair_lock_lock(*(os_unfair_lock_t *)(v43 + 16));
    v44 = *(_QWORD *)&v28[v23];
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v44 + 24));
    sub_1D2536368((uint64_t *)(v44 + 16), (uint64_t)v21, (uint64_t)v132);
    os_unfair_lock_unlock((os_unfair_lock_t)(v44 + 24));
    swift_release();
    sub_1D253703C((uint64_t)v133, &qword_1ED962040);
    sub_1D25384CC((uint64_t)v132, (uint64_t)v133, &qword_1ED962040);
    sub_1D2537078((uint64_t)v133, (uint64_t)v129, &qword_1ED962040);
    v45 = v130;
    sub_1D253703C((uint64_t)v129, &qword_1ED962040);
    if (v45)
    {
      sub_1D2537078((uint64_t)v133, v125, &qword_1ED962040);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v43 + 16));
      sub_1D253703C((uint64_t)v133, &qword_1ED962040);
      return (*(uint64_t (**)(char *, uint64_t))(v115 + 8))(v21, v116);
    }
    v109 = v21;
    v110 = 0;
    v112 = v43;
    if (qword_1ED9621C0 != -1)
      swift_once();
    v46 = sub_1D26CC09C();
    v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1ED977CF0);
    v48 = v119;
    v49 = v122;
    v50 = v114;
    v114(v119, v30, v122);
    v51 = sub_1D26CC084();
    v52 = sub_1D26CDD04();
    v53 = os_log_type_enabled(v51, v52);
    v54 = v113;
    v111 = v47;
    if (v53)
    {
      v55 = (uint8_t *)swift_slowAlloc();
      v108 = swift_slowAlloc();
      v129[0] = v108;
      v107 = v55;
      *(_DWORD *)v55 = 136446210;
      v121 = (void (*)(char *, uint64_t))(v55 + 4);
      sub_1D2536488(&qword_1ED963338, &qword_1ED96FE70, MEMORY[0x1E0D0F998]);
      v56 = sub_1D26CE370();
      v126[0] = sub_1D2537880(v56, v57, v129);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v121 = *(void (**)(char *, uint64_t))(v54 + 8);
      v121(v48, v49);
      v58 = v107;
      _os_log_impl(&dword_1D2531000, v51, v52, "Unable to find %{public}s cached, attempting to locate directly.", v107, 0xCu);
      v59 = v108;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v59, -1, -1);
      MEMORY[0x1D823A5E0](v58, -1, -1);
    }
    else
    {
      v121 = *(void (**)(char *, uint64_t))(v113 + 8);
      v121(v48, v49);
    }

    v60 = v124;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962190);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1D26D5A90;
    *(_QWORD *)(inited + 32) = sub_1D26CD938();
    *(_QWORD *)(inited + 40) = v62;
    v63 = sub_1D26CD2C0();
    *(_QWORD *)(inited + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
    *(_QWORD *)(inited + 48) = v63;
    *(_QWORD *)(inited + 80) = sub_1D26CD938();
    *(_QWORD *)(inited + 88) = v64;
    v65 = sub_1D26CBC88();
    *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 96) = v65;
    *(_QWORD *)(inited + 104) = v66;
    v67 = sub_1D253DFC0(inited);
    sub_1D2538510((uint64_t)&v60[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_nsExtensionDiscoverer], (uint64_t)v129);
    v68 = v130;
    v69 = v131;
    __swift_project_boxed_opaque_existential_0(v129, v130);
    v70 = sub_1D25D5944(v67);
    swift_bridgeObjectRelease();
    v71 = v110;
    v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v69 + 16))(v70, v68, v69);
    if (v71)
    {
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v129);
      v73 = v118;
      v50(v118, v123, v49);
      v74 = v71;
      v75 = v71;
      v76 = sub_1D26CC084();
      v77 = sub_1D26CDCEC();
      if (os_log_type_enabled(v76, v77))
      {
        v78 = swift_slowAlloc();
        v119 = (char *)swift_slowAlloc();
        v129[0] = (uint64_t)v119;
        *(_DWORD *)v78 = 136446466;
        sub_1D2536488(&qword_1ED963338, &qword_1ED96FE70, MEMORY[0x1E0D0F998]);
        v79 = sub_1D26CE370();
        v126[0] = sub_1D2537880(v79, v80, v129);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        v121(v73, v49);
        *(_WORD *)(v78 + 12) = 2082;
        v126[0] = v71;
        v81 = v71;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
        v82 = sub_1D26CD98C();
        v126[0] = sub_1D2537880(v82, v83, v129);
        v50 = v114;
        sub_1D26CDF50();
        v49 = v122;
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1D2531000, v76, v77, "Error creating extension with %{public}s due to %{public}s.", (uint8_t *)v78, 0x16u);
        v84 = v119;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v84, -1, -1);
        MEMORY[0x1D823A5E0](v78, -1, -1);

      }
      else
      {

        v121(v73, v49);
      }
    }
    else
    {
      v95 = (void *)v72;
      swift_bridgeObjectRelease();
      if (!v95)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v129);
        v98 = v117;
        v50(v117, v123, v49);
        v99 = sub_1D26CC084();
        v100 = sub_1D26CDD04();
        v101 = os_log_type_enabled(v99, (os_log_type_t)v100);
        v86 = v112;
        if (v101)
        {
          v102 = (uint8_t *)swift_slowAlloc();
          v103 = swift_slowAlloc();
          v129[0] = v103;
          *(_DWORD *)v102 = 136446210;
          v119 = (char *)(v102 + 4);
          sub_1D2536488(&qword_1ED963338, &qword_1ED96FE70, MEMORY[0x1E0D0F998]);
          v104 = sub_1D26CE370();
          v126[0] = sub_1D2537880(v104, v105, v129);
          sub_1D26CDF50();
          swift_bridgeObjectRelease();
          v121(v98, v122);
          _os_log_impl(&dword_1D2531000, v99, (os_log_type_t)v100, "Unable to find %{public}s extension directly.", v102, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v103, -1, -1);
          v106 = v102;
          v49 = v122;
          MEMORY[0x1D823A5E0](v106, -1, -1);
        }
        else
        {
          v121(v98, v49);
        }

        v85 = v120;
LABEL_22:
        sub_1D2537078((uint64_t)v133, (uint64_t)v129, &qword_1ED962040);
        v87 = v130;
        sub_1D253703C((uint64_t)v129, &qword_1ED962040);
        if (v87)
        {
          v50(v85, v123, v49);
          v88 = sub_1D26CC084();
          v89 = sub_1D26CDD04();
          if (os_log_type_enabled(v88, v89))
          {
            v90 = v49;
            v91 = (uint8_t *)swift_slowAlloc();
            v92 = swift_slowAlloc();
            v129[0] = v92;
            *(_DWORD *)v91 = 136446210;
            sub_1D2536488(&qword_1ED963338, &qword_1ED96FE70, MEMORY[0x1E0D0F998]);
            v93 = sub_1D26CE370();
            v126[0] = sub_1D2537880(v93, v94, v129);
            v86 = v112;
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            v121(v85, v90);
            _os_log_impl(&dword_1D2531000, v88, v89, "Found %{public}s extension directly. Adding to cache.", v91, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v92, -1, -1);
            MEMORY[0x1D823A5E0](v91, -1, -1);
          }
          else
          {
            v121(v85, v49);
          }

          result = sub_1D2537078((uint64_t)v133, (uint64_t)v129, &qword_1ED962040);
          if (!v130)
          {
            __break(1u);
            return result;
          }
          sub_1D25DB944(v129);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v129);
        }
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v86 + 16));
        v21 = v109;
        v19 = v115;
        v18 = v116;
        v26 = v125;
LABEL_2:
        (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
        return sub_1D25384CC((uint64_t)v133, v26, &qword_1ED962040);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v129);
      sub_1D2538510((uint64_t)&v124[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionFactory], (uint64_t)v126);
      v96 = v127;
      v97 = v128;
      __swift_project_boxed_opaque_existential_0(v126, v127);
      (*(void (**)(uint64_t *__return_ptr, void *, uint64_t, uint64_t))(v97 + 8))(v129, v95, v96, v97);
      sub_1D253703C((uint64_t)v133, &qword_1ED962040);

      sub_1D25384CC((uint64_t)v129, (uint64_t)v133, &qword_1ED962040);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v126);
    }
    v85 = v120;
    v86 = v112;
    goto LABEL_22;
  }
  if (qword_1ED9621C0 != -1)
    swift_once();
  v31 = sub_1D26CC09C();
  __swift_project_value_buffer(v31, (uint64_t)qword_1ED977CF0);
  v33 = (char *)v121;
  v32 = v122;
  v114((char *)v121, v30, v122);
  v34 = sub_1D26CC084();
  v35 = sub_1D26CDD04();
  if (os_log_type_enabled(v34, v35))
  {
    v36 = (uint8_t *)swift_slowAlloc();
    v37 = swift_slowAlloc();
    v132[0] = v37;
    *(_DWORD *)v36 = 136446210;
    v124 = v36 + 4;
    sub_1D2536488(&qword_1ED963338, &qword_1ED96FE70, MEMORY[0x1E0D0F998]);
    v38 = sub_1D26CE370();
    v129[0] = sub_1D2537880(v38, v39, v132);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v113 + 8))(v33, v32);
    _os_log_impl(&dword_1D2531000, v34, v35, "Ignoring restricted or unknown extension %{public}s", v36, 0xCu);
    swift_arrayDestroy();
    v40 = v125;
    MEMORY[0x1D823A5E0](v37, -1, -1);
    MEMORY[0x1D823A5E0](v36, -1, -1);

    sub_1D253703C((uint64_t)v133, &qword_1ED962040);
    v42 = v115;
    v41 = v116;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v113 + 8))(v33, v32);
    sub_1D253703C((uint64_t)v133, &qword_1ED962040);
    v42 = v115;
    v41 = v116;
    v40 = v125;
  }
  result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v21, v41);
  *(_QWORD *)(v40 + 32) = 0;
  *(_OWORD *)v40 = 0u;
  *(_OWORD *)(v40 + 16) = 0u;
  return result;
}

double sub_1D2536368@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  char v6;
  double result;

  v4 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v5 = sub_1D25363D0(a2), (v6 & 1) != 0))
  {
    sub_1D2538510(*(_QWORD *)(v4 + 56) + 40 * v5, a3);
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

unint64_t sub_1D25363D0(uint64_t a1)
{
  return sub_1D25363EC(a1, &qword_1ED9633A0, (unint64_t *)&unk_1ED963370, &qword_1ED963380);
}

unint64_t sub_1D25363EC(uint64_t a1, uint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1D2536488(a3, a2, MEMORY[0x1E0D0FB50]);
  v8 = sub_1D26CD8CC();
  return sub_1D25364C8(a1, v8, a2, a4, MEMORY[0x1E0D0FB58]);
}

uint64_t sub_1D2536488(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D823A4E4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D25364C8(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t *v20;
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1D2536488(v21, v20, v22);
      v17 = sub_1D26CD908();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

uint64_t sub_1D25365FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v8;
  id v9;
  id v10;
  id v11;
  _OWORD v13[2];

  if (a3)
  {
    sub_1D26CD938();
    if (a4)
      goto LABEL_3;
LABEL_6:
    memset(v13, 0, sizeof(v13));
    v10 = a5;
    v11 = a1;
    if (!a5)
      goto LABEL_7;
    goto LABEL_4;
  }
  if (!a4)
    goto LABEL_6;
LABEL_3:
  swift_unknownObjectRetain();
  v8 = a5;
  v9 = a1;
  sub_1D26CDFA4();
  swift_unknownObjectRelease();
  if (a5)
  {
LABEL_4:
    type metadata accessor for NSKeyValueChangeKey(0);
    sub_1D25369B0(&qword_1ED96E108, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D26D01A8);
    sub_1D26CD7F4();

  }
LABEL_7:
  sub_1D2536798();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1D2536700((uint64_t)v13);
}

uint64_t sub_1D2536700(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED96E118);
}

void sub_1D2536754(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1D2536798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  void *v10;
  _QWORD v11[2];
  uint64_t v12;
  uint64_t v13;
  _QWORD aBlock[6];

  v0 = sub_1D26CD074();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D26CD0C8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    v12 = v1;
    if (qword_1ED96C7E0 != -1)
      swift_once();
    v11[1] = qword_1ED96DDF0;
    aBlock[4] = sub_1D25351D8;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D25351AC;
    aBlock[3] = &block_descriptor;
    v10 = _Block_copy(aBlock);
    swift_retain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D25369F0((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00);
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v7, v3, v10);
    _Block_release(v10);
    swift_release();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D25369B0(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D823A4E4](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D25369F0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

id sub_1D2536A30()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initWithBundleIdentifier_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1D26CB76C();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1D2536AF8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  v2 = type metadata accessor for UnfairLock();
  v3 = *(_QWORD *)(v1 + 80);
  swift_retain();
  sub_1D2536C74((void (*)(uint64_t))sub_1D2536DE0, (uint64_t)v0, v2, v3, (uint64_t)&off_1E93D0D60);
  return swift_release();
}

uint64_t sub_1D2536B8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = type metadata accessor for UnfairLock();
  sub_1D26CD89C();
  v2 = sub_1D26CD83C();
  swift_retain();
  sub_1D2536C74((void (*)(uint64_t))sub_1D2536D34, v0, v1, v2, (uint64_t)&off_1E93D0D60);
  swift_release();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DE9ED0], v2);
  return sub_1D26CDBB4();
}

uint64_t sub_1D2536C74(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;

  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 8))(a3, a5);
  a1(v8);
  return (*(uint64_t (**)(uint64_t, uint64_t))(a5 + 24))(a3, a5);
}

void sub_1D2536CFC()
{
  uint64_t v0;

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(*(_QWORD *)v0 + 16));
}

void sub_1D2536D08()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(*(_QWORD *)v0 + 16));
}

uint64_t type metadata accessor for UnfairLock()
{
  return objc_opt_self();
}

uint64_t sub_1D2536D34@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1D2536D4C(v1, a1);
}

uint64_t sub_1D2536D4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = (uint64_t *)((char *)a1 + qword_1ED977D88);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(v3 + 80);
  v7 = sub_1D26CD89C();
  *a2 = CGSizeMake(v5, v6, v7, *(_QWORD *)(v3 + 112));
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2536DE0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D253820C(a1);
}

_QWORD *__swift_project_boxed_opaque_existential_0(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t getEnumTagSinglePayload for ExtensionMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ExtensionMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t destroy for ExtensionMetadata(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ExtensionMetadata()
{
  uint64_t result;

  result = qword_1ED963590;
  if (!qword_1ED963590)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2536F34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t initializeWithCopy for ExtensionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v12 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1D253703C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1D2537078(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D25370BC(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t TupleTypeMetadata2;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;
  int v36;
  _QWORD *v37;
  void (*v39)(char *, uint64_t);
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  char *v44;
  NSObject *v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t);
  void (*v55)(char *, uint64_t);
  id v56;
  id v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  uint64_t v64;
  unint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unint64_t v70;
  os_log_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t (*v75)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, _QWORD, uint64_t, uint64_t);
  char *v84;
  uint64_t v85;
  _QWORD *v86;
  char *v87;
  void (*v88)(char *, char *, uint64_t);
  os_log_t v89;
  char *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v85 = a2;
  v79 = *a1;
  v3 = *(_QWORD *)(v79 + 80);
  v4 = sub_1D26CDF38();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v80 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v6 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v8 = (char *)&v77 - v7;
  v92 = *(_QWORD *)(v4 - 8);
  v9 = MEMORY[0x1E0C80A78](v6);
  v84 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v89 = (os_log_t)((char *)&v77 - v12);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v77 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v77 - v17;
  v19 = *(_QWORD **)(v3 - 8);
  v20 = MEMORY[0x1E0C80A78](v16);
  v87 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v82 = (char *)&v77 - v23;
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v77 - v24;
  sub_1D253820C((uint64_t)&v77 - v24);
  v26 = (void (*)(char *, char *, uint64_t))v19[2];
  v90 = v25;
  v88 = v26;
  v26(v18, v25, v3);
  v83 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v19[7];
  v83(v18, 0, 1, v3);
  v86 = a1;
  sub_1D2537E28((uint64_t)v15);
  v81 = TupleTypeMetadata2;
  v27 = *(int *)(TupleTypeMetadata2 + 48);
  v28 = v92;
  v29 = &v8[v27];
  v30 = *(void (**)(char *, char *, uint64_t))(v92 + 16);
  v30(v8, v18, v4);
  v30(v29, v15, v4);
  v91 = v19;
  v31 = (uint64_t (*)(char *, uint64_t, uint64_t))v19[6];
  if (v31(v8, 1, v3) == 1)
  {
    v32 = v8;
    v33 = *(void (**)(char *, uint64_t))(v28 + 8);
    v33(v15, v4);
    v33(v18, v4);
    v34 = v29;
    v35 = v3;
    v36 = v31(v34, 1, v3);
    v37 = v91;
    if (v36 == 1)
    {
      v33(v32, v4);
      return ((uint64_t (*)(char *, uint64_t))v37[1])(v90, v3);
    }
    goto LABEL_6;
  }
  v30((char *)v89, v8, v4);
  if (v31(v29, 1, v3) == 1)
  {
    v32 = v8;
    v39 = *(void (**)(char *, uint64_t))(v92 + 8);
    v39(v15, v4);
    v39(v18, v4);
    v37 = v91;
    v35 = v3;
    ((void (*)(os_log_t, uint64_t))v91[1])(v89, v3);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v80 + 8))(v32, v81);
    v40 = v86;
    v3 = v35;
    goto LABEL_7;
  }
  v37 = v91;
  v52 = v82;
  ((void (*)(char *, char *, uint64_t))v91[4])(v82, v29, v3);
  v53 = sub_1D26CD908();
  v54 = (void (*)(char *, uint64_t))v37[1];
  v54(v52, v3);
  v55 = *(void (**)(char *, uint64_t))(v92 + 8);
  v55(v15, v4);
  v55(v18, v4);
  v54((char *)v89, v3);
  v55(v8, v4);
  v40 = v86;
  if ((v53 & 1) != 0)
    return ((uint64_t (*)(char *, uint64_t))v54)(v90, v3);
LABEL_7:
  if (qword_1ED96D9C0 != -1)
    swift_once();
  v41 = sub_1D26CC09C();
  __swift_project_value_buffer(v41, (uint64_t)qword_1ED9780A8);
  v42 = v87;
  v43 = v88;
  v44 = v90;
  v88(v87, v90, v3);
  swift_retain_n();
  v45 = sub_1D26CC084();
  v46 = sub_1D26CDD04();
  if (os_log_type_enabled(v45, (os_log_type_t)v46))
  {
    LODWORD(v86) = v46;
    v47 = swift_slowAlloc();
    v48 = swift_slowAlloc();
    v95 = v48;
    *(_DWORD *)v47 = 136315906;
    v49 = v40[4];
    v78 = v4;
    v89 = v45;
    v81 = v48;
    if (v49)
    {
      v50 = v40[3];
      v51 = v49;
    }
    else
    {
      v56 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
      v57 = objc_msgSend(v56, sel_bundleIdentifier);

      if (v57)
      {
        v50 = sub_1D26CD938();
        v51 = v58;

      }
      else
      {
        v51 = 0xE300000000000000;
        v50 = 7104878;
      }
    }
    swift_bridgeObjectRetain();
    v94 = sub_1D2537880(v50, v51, &v95);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 12) = 2080;
    v59 = v40[5];
    v60 = v40[6];
    swift_bridgeObjectRetain();
    v94 = sub_1D2537880(v59, v60, &v95);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v47 + 22) = 2080;
    v61 = v82;
    v63 = v87;
    v62 = v88;
    v88(v82, v87, v3);
    v64 = sub_1D26CD98C();
    v94 = sub_1D2537880(v64, v65, &v95);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v66 = v91;
    ((void (*)(char *, uint64_t))v91[1])(v63, v3);
    *(_WORD *)(v47 + 32) = 2080;
    v67 = *v40;
    v68 = (char *)v40 + *(_QWORD *)(*v40 + 120);
    swift_beginAccess();
    (*(void (**)(char *, char *))(*(_QWORD *)(*(_QWORD *)(v67 + 80) - 8) + 16))(v61, v68);
    v69 = sub_1D26CD98C();
    v93 = sub_1D2537880(v69, v70, &v95);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    v71 = v89;
    _os_log_impl(&dword_1D2531000, v89, (os_log_type_t)v86, "Preferences[%s]: %s preference changed to %s [default=%s]", (uint8_t *)v47, 0x2Au);
    v72 = v81;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v72, -1, -1);
    v73 = v47;
    v37 = v66;
    v43 = v62;
    MEMORY[0x1D823A5E0](v73, -1, -1);

    v4 = v78;
    v44 = v90;
  }
  else
  {
    swift_release_n();
    ((void (*)(char *, uint64_t))v37[1])(v42, v3);

    swift_release_n();
  }
  v74 = (uint64_t)v84;
  v43(v84, v44, v3);
  v75 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v83;
  v83((char *)v74, 0, 1, v3);
  sub_1D2537DB0(v74);
  v76 = v85;
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v85, v4);
  ((void (*)(uint64_t, char *, uint64_t))v37[4])(v76, v44, v3);
  return v75(v76, 0, 1, v3);
}

uint64_t sub_1D2537880(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_1D253798C(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_1D2537950((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_1D2537950((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_1D2537950(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1D253798C(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1D26CDF5C();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_1D2537B44(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_1D26CE100();
  if (!v8)
  {
    sub_1D26CE1CC();
    __break(1u);
LABEL_17:
    result = sub_1D26CE220();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1D2537B44(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1D2537BD8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1D262A248(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1D262A248(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1D2537BD8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1D2537D4C(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1D26CE0AC();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1D26CE1CC();
      __break(1u);
LABEL_10:
      v2 = sub_1D26CDA1C();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1D26CE220();
    __break(1u);
LABEL_14:
    result = sub_1D26CE1CC();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

_QWORD *sub_1D2537D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE58);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_1D2537DB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 176);
  swift_beginAccess();
  v4 = sub_1D26CDF38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1D2537E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 176);
  swift_beginAccess();
  v4 = sub_1D26CDF38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D2537E98@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 120);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v4);
}

uint64_t sub_1D2537EFC(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  sub_1D25384C8();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 8))(a1);
}

uint64_t sub_1D2537F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 168));
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2537F90(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

void sub_1D2537F90(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;

  v2 = v1;
  v24 = a1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v23 - v9;
  v11 = sub_1D26CDF38();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v23 - v13;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(uint64_t *)((char *)v1 + *(_QWORD *)(v3 + 168)) + 16));
  sub_1D2538458((uint64_t)v14);
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v14, 1, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (v15 == 1)
  {
    sub_1D253820C((uint64_t)v10);
    v16 = sub_1D26CD908();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    if ((v16 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v24, v4);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
      swift_dynamicCast();
      if (v26)
      {
        sub_1D2538448(&v25, &v27);
        v17 = (void *)v2[2];
        __swift_project_boxed_opaque_existential_0(&v27, v28);
        v18 = v17;
        v19 = sub_1D26CE3B8();
        swift_bridgeObjectRetain();
        v20 = (void *)sub_1D26CD914();
        swift_bridgeObjectRelease();
        objc_msgSend(v18, sel_setObject_forKey_, v19, v20);

        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v27);
      }
      else
      {
        sub_1D2536700((uint64_t)&v25);
        v21 = (id)v2[2];
        swift_bridgeObjectRetain();
        v22 = (void *)sub_1D26CD914();
        swift_bridgeObjectRelease();
        objc_msgSend(v21, sel_removeObjectForKey_, v22);

      }
    }
  }
}

uint64_t sub_1D253820C@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  void *v14;
  id v15;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  __int128 v23;
  _OWORD v24[2];

  v3 = *v1;
  v4 = *((_QWORD *)*v1 + 10);
  v5 = sub_1D26CDF38();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  os_unfair_lock_assert_owner((*(const os_unfair_lock ***)((char *)v1 + v3[21]))[2]);
  sub_1D2538458((uint64_t)v11);
  v12 = *(_QWORD *)(v4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v4) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v11, v4);
  v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v11, v5);
  v13 = v1[2];
  swift_bridgeObjectRetain();
  v14 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_valueForKey_, v14);

  if (v15)
  {
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
    sub_1D2538448(&v23, v24);
  }
  else
  {
    memset(v24, 0, sizeof(v24));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
  v17 = swift_dynamicCast();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v17)
  {
    v18(v9, 0, 1, v4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v9, v4);
  }
  else
  {
    v18(v9, 1, 1, v4);
    v19 = *v1;
    v20 = (char *)v1 + *((_QWORD *)*v1 + 15);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *))(*(_QWORD *)(v19[10] - 8) + 16))(a1, v20);
    return ((uint64_t (*)(char *, uint64_t))v22)(v9, v5);
  }
}

_OWORD *sub_1D2538448(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1D2538458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 128);
  swift_beginAccess();
  v4 = sub_1D26CDF38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D25384CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D2538510(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

double sub_1D2538554@<D0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D253855C(a1, *(_QWORD *)(v2 + 16), a2);
}

double sub_1D253855C@<D0>(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  double result;
  _OWORD *v28;
  char *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a2;
  v33 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v5 = *(_QWORD *)(v4 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v29 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962940);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  v10 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v31 = (uint64_t)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v29 - v15;
  v18 = a1[3];
  v17 = a1[4];
  v30 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v18);
  v19 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v18, v17);
  v20 = (uint64_t)v19 + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  sub_1D2537078(v20, (uint64_t)v16, &qword_1ED963300);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v14, v32, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, v4);
  v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1D2537078((uint64_t)v16, (uint64_t)v9, &qword_1ED963300);
  sub_1D2537078((uint64_t)v14, v21, &qword_1ED963300);
  v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v9, 1, v4) == 1)
  {
    sub_1D253703C((uint64_t)v14, &qword_1ED963300);
    sub_1D253703C((uint64_t)v16, &qword_1ED963300);
    if (v22(v21, 1, v4) == 1)
    {
      sub_1D253703C((uint64_t)v9, &qword_1ED963300);
LABEL_8:
      sub_1D2538510((uint64_t)v30, v33);
      return result;
    }
    goto LABEL_6;
  }
  v23 = v31;
  sub_1D2537078((uint64_t)v9, v31, &qword_1ED963300);
  if (v22(v21, 1, v4) == 1)
  {
    sub_1D253703C((uint64_t)v14, &qword_1ED963300);
    sub_1D253703C((uint64_t)v16, &qword_1ED963300);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
LABEL_6:
    sub_1D253703C((uint64_t)v9, (uint64_t *)&unk_1ED962940);
    goto LABEL_9;
  }
  v24 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v29, v21, v4);
  sub_1D2536488((unint64_t *)&qword_1ED9632F0, &qword_1ED9632F8, MEMORY[0x1E0D0F980]);
  v25 = sub_1D26CD908();
  v26 = *(void (**)(char *, uint64_t))(v5 + 8);
  v26(v24, v4);
  sub_1D253703C((uint64_t)v14, &qword_1ED963300);
  sub_1D253703C((uint64_t)v16, &qword_1ED963300);
  v26((char *)v23, v4);
  sub_1D253703C((uint64_t)v9, &qword_1ED963300);
  if ((v25 & 1) != 0)
    goto LABEL_8;
LABEL_9:
  v28 = (_OWORD *)v33;
  *(_QWORD *)(v33 + 32) = 0;
  result = 0.0;
  *v28 = 0u;
  v28[1] = 0u;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D823A4CC]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_1D2538928(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetExtensionInfo();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void destroy for WidgetExtensionInfo(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  char *v11;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = (char *)a1 + a2[7];
  v5 = sub_1D26CBA24();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + a2[8];
  v7 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  v8 = (char *)a1 + a2[10];
  v9 = sub_1D26CB880();
  v10 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v10(v8, v9);
  v10((char *)a1 + a2[11], v9);
  v10((char *)a1 + a2[12], v9);
  v11 = (char *)a1 + a2[13];
  v12 = sub_1D26CD488();
  v13 = *(_QWORD *)(v12 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  v10((char *)a1 + a2[15], v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for WidgetExtensionInfo(_QWORD *a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  id v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  id v59;

  v7 = *(void **)a2;
  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v8 = *(_QWORD *)(a2 + 24);
  a1[2] = *(_QWORD *)(a2 + 16);
  a1[3] = v8;
  a1[4] = *(_QWORD *)(a2 + 32);
  v9 = a3[7];
  v10 = (char *)a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1D26CBA24();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  v15 = a3[8];
  v16 = (char *)a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = a3[10];
  *((_BYTE *)a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v20 = (char *)a1 + v19;
  v21 = a2 + v19;
  v22 = sub_1D26CB880();
  v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v23(v20, v21, v22);
  v23((char *)a1 + a3[11], a2 + a3[11], v22);
  v23((char *)a1 + a3[12], a2 + a3[12], v22);
  v24 = a3[13];
  v25 = (char *)a1 + v24;
  v26 = (const void *)(a2 + v24);
  v27 = sub_1D26CD488();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v28 + 16))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v30 = a3[15];
  *((_BYTE *)a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v23((char *)a1 + v30, a2 + v30, v22);
  v31 = a3[16];
  v32 = a3[17];
  v33 = (_QWORD *)((char *)a1 + v31);
  v34 = (_QWORD *)(a2 + v31);
  v35 = v34[1];
  *v33 = *v34;
  v33[1] = v35;
  v36 = (_QWORD *)((char *)a1 + v32);
  v37 = (_QWORD *)(a2 + v32);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  v39 = a3[18];
  v40 = a3[19];
  v41 = (_QWORD *)((char *)a1 + v39);
  v42 = (_QWORD *)(a2 + v39);
  v43 = v42[1];
  *v41 = *v42;
  v41[1] = v43;
  v44 = (_QWORD *)((char *)a1 + v40);
  v45 = (_QWORD *)(a2 + v40);
  v46 = v45[1];
  *v44 = *v45;
  v44[1] = v46;
  v47 = a3[21];
  *(_QWORD *)((char *)a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v48 = (_QWORD *)((char *)a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  v50 = v49[1];
  *v48 = *v49;
  v48[1] = v50;
  v51 = a3[22];
  v52 = a3[23];
  v53 = (_QWORD *)((char *)a1 + v51);
  v54 = (_QWORD *)(a2 + v51);
  v55 = v54[1];
  *v53 = *v54;
  v53[1] = v55;
  *((_BYTE *)a1 + v52) = *(_BYTE *)(a2 + v52);
  v56 = a3[25];
  *(_QWORD *)((char *)a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  *((_BYTE *)a1 + v56) = *(_BYTE *)(a2 + v56);
  v57 = a3[27];
  *(_QWORD *)((char *)a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  v58 = *(void **)(a2 + v57);
  *(_QWORD *)((char *)a1 + v57) = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v59 = v58;
  return a1;
}

id Extension.id.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  id v7;
  uint64_t v9;

  v4 = type metadata accessor for WidgetExtensionInfo();
  MEMORY[0x1E0C80A78](v4);
  v6 = (id *)((char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  v7 = *v6;
  sub_1D2538928((uint64_t)v6);
  return v7;
}

uint64_t type metadata accessor for WidgetExtensionInfo()
{
  uint64_t result;

  result = qword_1ED963630;
  if (!qword_1ED963630)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2538E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetExtensionInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2538ED8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1D2538E94(*v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info, a1);
}

uint64_t sub_1D2538EF4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96FC80);
    result = MEMORY[0x1D823A4E4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2538F38(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

_QWORD *sub_1D2538F50(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962168);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1D2539408(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t objectdestroyTm()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = type metadata accessor for LiveWidgetEntryView();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = v3 + *(int *)(v1 + 36);
  v5 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1(0);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  v4 = v1 + ((v3 + 16) & ~v3);
  v5 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

  v6 = v4 + *(int *)(v2 + 24);
  v7 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocObject();
}

uint64_t objectdestroyTm_1()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_2()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  if (*(_QWORD *)(v0 + 72) >= 6uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 80))
    swift_release();
  return swift_deallocObject();
}

uint64_t objectdestroyTm_3()
{
  uint64_t v0;
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBE8);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D823A4D8](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_1D25393D8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D26CDEC0();
  return sub_1D258AB48(a1, v2);
}

uint64_t sub_1D2539408(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2539514(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_1D253954C(unint64_t a1, unint64_t a2)
{
  return sub_1D2539560(a1, a2, (uint64_t)&qword_1ED9638E0);
}

id sub_1D2539560(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id result;
  void *v14;
  id v15;
  void *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  id v21;
  void *v22;
  unint64_t v24;
  void **v25;
  void *v26;
  void *v27;
  void *v28;
  uint64_t v29;
  unint64_t v30;

  v4 = a2;
  v5 = a1;
  v6 = a1 >> 62;
  if (!(a1 >> 62))
  {
    v7 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    v8 = a2 >> 62;
    if (!(a2 >> 62))
      goto LABEL_3;
LABEL_47:
    swift_bridgeObjectRetain();
    v29 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v7 == v29)
      goto LABEL_4;
LABEL_48:
    LOBYTE(v7) = 0;
    return (id)(v7 & 1);
  }
  swift_bridgeObjectRetain();
  v7 = sub_1D26CE1F0();
  swift_bridgeObjectRelease();
  v8 = (unint64_t)v4 >> 62;
  if ((unint64_t)v4 >> 62)
    goto LABEL_47;
LABEL_3:
  if (v7 != *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_48;
LABEL_4:
  if (!v7)
    goto LABEL_37;
  v9 = v5 & 0xFFFFFFFFFFFFFF8;
  if (v5 < 0)
    v9 = v5;
  if (!v6)
    v9 = (v5 & 0xFFFFFFFFFFFFFF8) + 32;
  v10 = v4 & 0xFFFFFFFFFFFFFF8;
  v11 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
  if (v4 < 0)
    v12 = v4;
  else
    v12 = v4 & 0xFFFFFFFFFFFFFF8;
  if (v8)
    v11 = v12;
  if (v9 == v11)
  {
LABEL_37:
    LOBYTE(v7) = 1;
    return (id)(v7 & 1);
  }
  if ((v7 & 0x8000000000000000) != 0)
    goto LABEL_54;
  v30 = v5 & 0xC000000000000001;
  if ((v5 & 0xC000000000000001) != 0)
    goto LABEL_55;
  for (result = *(id *)(v5 + 32); ; result = (id)MEMORY[0x1D8239890](0, v5))
  {
    v14 = result;
    if ((v4 & 0xC000000000000001) == 0)
      break;
    v15 = (id)MEMORY[0x1D8239890](0, v4);
LABEL_21:
    v16 = v15;
    sub_1D2539514(0, (unint64_t *)a3);
    a3 = sub_1D26CDECC();

    if ((a3 & 1) == 0)
      goto LABEL_48;
    v17 = v7 - 1;
    if (v7 == 1)
      return (id)(v7 & 1);
    if (((v4 | v5) & 0xC000000000000001) != 0)
    {
      v18 = 0;
      v19 = v7 - 2;
      while (v17 != v18)
      {
        v7 = v18 + 1;
        if (v30)
          v20 = (id)MEMORY[0x1D8239890](v18 + 1, v5);
        else
          v20 = *(id *)(v5 + 40 + 8 * v18);
        a3 = (uint64_t)v20;
        if ((v4 & 0xC000000000000001) != 0)
        {
          v21 = (id)MEMORY[0x1D8239890](v18 + 1, v4);
        }
        else
        {
          if (v7 >= *(_QWORD *)(v10 + 16))
            goto LABEL_53;
          v21 = *(id *)(v4 + 40 + 8 * v18);
        }
        v22 = v21;
        v7 = sub_1D26CDECC();

        if ((v7 & 1) != 0 && v19 != v18++)
          continue;
        return (id)(v7 & 1);
      }
      __break(1u);
    }
    else
    {
      v24 = *(_QWORD *)(v10 + 16);
      if (v24 <= 1)
        v24 = 1;
      a3 = v24 - 1;
      v25 = (void **)(v5 + 40);
      v10 = v4 + 40;
      while (v17)
      {
        if (!a3)
          goto LABEL_52;
        v27 = *v25++;
        v26 = v27;
        v28 = *(void **)v10;
        v10 += 8;
        v4 = v26;
        v5 = v28;
        v7 = sub_1D26CDECC();

        if ((v7 & 1) != 0)
        {
          --a3;
          if (--v17)
            continue;
        }
        return (id)(v7 & 1);
      }
    }
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    ;
  }
  if (*(_QWORD *)(v10 + 16))
  {
    v15 = *(id *)(v4 + 32);
    goto LABEL_21;
  }
  __break(1u);
  return result;
}

id sub_1D2539854(unint64_t a1, unint64_t a2)
{
  return sub_1D2539560(a1, a2, (uint64_t)&unk_1ED96E0F8);
}

uint64_t dispatch thunk of Extension.info.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Extension.makeSessionAsync(options:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 288))();
}

uint64_t dispatch thunk of Extension.watchKitExtensionIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t storeEnumTagSinglePayload for LiveWidgetEntryLaunchHandlingModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DuetWidgetBudgetIdentity()
{
  return &type metadata for DuetWidgetBudgetIdentity;
}

ValueMetadata *type metadata accessor for PowerlogUpdateIdentity()
{
  return &type metadata for PowerlogUpdateIdentity;
}

uint64_t KeepAliveTransaction.__deallocating_deinit()
{
  KeepAliveTransaction.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for KeepAliveTransaction()
{
  return objc_opt_self();
}

uint64_t WidgetExtensionInfo.nominatedContainingBundleIdentifiers.getter()
{
  type metadata accessor for WidgetExtensionInfo();
  return swift_bridgeObjectRetain();
}

uint64_t storeEnumTagSinglePayload for PowerlogWakeReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_1D2539988 + 4 * byte_1D26DB09D[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_1D25399BC + 4 * byte_1D26DB098[v4]))();
}

uint64_t sub_1D25399BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25399C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D25399CCLL);
  return result;
}

uint64_t sub_1D25399D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D25399E0);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_1D25399E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25399EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PowerlogWakeReason()
{
  return &type metadata for PowerlogWakeReason;
}

uint64_t storeEnumTagSinglePayload for PowerlogUpdateCost(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2539A54 + 4 * byte_1D26DB093[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2539A88 + 4 * byte_1D26DB08E[v4]))();
}

uint64_t sub_1D2539A88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2539A90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2539A98);
  return result;
}

uint64_t sub_1D2539AA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2539AACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D2539AB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2539AB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PowerlogUpdateCost()
{
  return &type metadata for PowerlogUpdateCost;
}

uint64_t dispatch thunk of TimelineServicing.widgets(containedIn:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1D2539ADC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t ExtensionManaging.extension(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CDE48();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 24))(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CBD54();
  v9 = sub_1D26CBC88();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 40))(v9, v11, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of ExtensionManaging.extensions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1D2539BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2535448(a1, a2);
}

uint64_t sub_1D2539C00()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D2539C3C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D2539C88()
{
  return sub_1D25349A8();
}

uint64_t sub_1D2539CA8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v4 = v3 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  v5 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v4, v5);
}

uint64_t sub_1D2539D00()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *v0 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info;
  v2 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1D2539D4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  _BOOL4 v11;
  _QWORD *v12;
  uint8_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint8_t *v21;
  char *v22;
  NSObject *v23;
  uint64_t v24;
  unsigned int (*v25)(NSObject *, uint64_t, uint64_t);
  void *v26;
  void *v27;
  id v28;
  _QWORD *v29;
  NSObject *v30;
  os_log_type_t v31;
  _BOOL4 v32;
  uint8_t *v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint8_t *v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  void *v43;
  _QWORD *v44;
  _QWORD *v45;
  char v46;
  char v47;
  uint64_t v48;
  char *v49;
  NSObject *v50;
  int v51;
  uint64_t v52;
  os_log_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  uint64_t v65;
  os_log_t v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  id v70;
  unint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  os_log_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  unsigned int (*v85)(os_log_t, uint64_t, uint64_t);
  uint64_t v86;
  os_log_t v87;
  uint64_t v88;
  id v89;
  char *v90;
  id v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97[3];
  uint64_t v98;

  v3 = sub_1D26CC09C();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v84 - v7;
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateRequired) != 1)
    return;
  v88 = v6;
  *(_BYTE *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateRequired) = 0;
  LODWORD(v84) = *(unsigned __int8 *)(a1
                                    + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateInitial);
  *(_BYTE *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension__preferredLanguageChangeUpdateInitial) = 0;
  if (qword_1ED9627D0 != -1)
    swift_once();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED977D70);
  swift_retain_n();
  v9 = sub_1D26CC084();
  v10 = sub_1D26CDCE0();
  v11 = os_log_type_enabled(v9, v10);
  v12 = &unk_1ED977000;
  v93 = v1;
  v94 = v3;
  v95 = v4;
  v90 = v8;
  if (v11)
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v92 = (_QWORD *)swift_slowAlloc();
    v97[0] = (uint64_t)v92;
    *(_DWORD *)v13 = 136315138;
    v91 = v13 + 4;
    v14 = objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_info), sel_tokenString);
    v15 = a1;
    v16 = sub_1D26CD938();
    v18 = v17;

    v19 = v16;
    a1 = v15;
    v98 = sub_1D2537880(v19, v18, v97);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v9, v10, "[%s] Begin fetching preferred languages", v13, 0xCu);
    v20 = v92;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v20, -1, -1);
    v21 = v13;
    v12 = (_QWORD *)&unk_1ED977000;
    MEMORY[0x1D823A5E0](v21, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v22 = *(char **)(a1 + v12[448]);
  v23 = &v22[*MEMORY[0x1E0D0FE18]];
  swift_beginAccess();
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v25 = *(unsigned int (**)(NSObject *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48);
  if (v25(v23, 1, v24) == 1)
  {
    __break(1u);
    goto LABEL_45;
  }
  v26 = (void *)objc_opt_self();
  v87 = v23;
  sub_1D26CBC88();
  swift_endAccess();
  v27 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v26, sel_preferredLanguagesForContainerBundleIdentifier_, v27);

  v85 = v25;
  v86 = v24;
  if (v28)
    v29 = (_QWORD *)sub_1D26CDAF4();
  else
    v29 = 0;
  swift_retain_n();
  v30 = sub_1D26CC084();
  v31 = sub_1D26CDCE0();
  v32 = os_log_type_enabled(v30, v31);
  v96 = a1;
  v91 = v28;
  v92 = v29;
  if (v32)
  {
    v33 = (uint8_t *)swift_slowAlloc();
    v34 = swift_slowAlloc();
    v97[0] = v34;
    *(_DWORD *)v33 = 136315138;
    v35 = objc_msgSend(v22, sel_tokenString);
    v36 = sub_1D26CD938();
    v38 = v37;

    v98 = sub_1D2537880(v36, v38, v97);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v30, v31, "[%s] End fetching preferred languages", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v34, -1, -1);
    v39 = v33;
    a1 = v96;
    MEMORY[0x1D823A5E0](v39, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v41 = v94;
  v40 = v95;
  v89 = *(id *)(a1 + OBJC_IVAR____TtC9ChronoKit15WidgetExtension_nsExtension);
  v42 = objc_msgSend(v89, sel_preferredLanguages, v84);
  if (v42)
  {
    v43 = v42;
    v44 = (_QWORD *)sub_1D26CDAF4();

    v45 = v92;
    if (v92)
    {
      if (v44)
      {
        v46 = sub_1D2686C88(v92, v44);
        swift_bridgeObjectRelease();
        if ((v46 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
      }
      goto LABEL_20;
    }
    if (v44)
    {
      swift_bridgeObjectRelease();
      v47 = 1;
      goto LABEL_23;
    }
  }
  else
  {
    v45 = v92;
    if (v92)
    {
LABEL_20:
      v47 = 0;
LABEL_23:
      if (qword_1ED9621C0 != -1)
        swift_once();
      v48 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED977CF0);
      v49 = v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v90, v48, v41);
      swift_bridgeObjectRetain();
      swift_retain_n();
      v50 = sub_1D26CC084();
      v51 = sub_1D26CDD04();
      if (!os_log_type_enabled(v50, (os_log_type_t)v51))
      {

        swift_bridgeObjectRelease_n();
        swift_release_n();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v49, v41);
        v70 = v89;
LABEL_41:
        v83 = v91;
        objc_msgSend(v70, sel_setPreferredLanguages_, v91);

        return;
      }
      LODWORD(v88) = v51;
      v52 = swift_slowAlloc();
      v84 = swift_slowAlloc();
      v98 = v84;
      *(_DWORD *)v52 = 136315650;
      v53 = v87;
      swift_beginAccess();
      if (v85(v53, 1, v86) != 1)
      {
        v54 = sub_1D26CBC88();
        v56 = v55;
        swift_endAccess();
        v97[0] = sub_1D2537880(v54, v56, &v98);
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v52 + 12) = 2080;
        if ((v47 & 1) != 0)
        {
          v57 = 0xE300000000000000;
          v58 = 7104878;
        }
        else
        {
          v97[0] = (uint64_t)v45;
          swift_bridgeObjectRetain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
          sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
          v58 = sub_1D26CD8E4();
          v57 = v71;
          swift_bridgeObjectRelease();
        }
        v87 = v50;
        v97[0] = sub_1D2537880(v58, v57, &v98);
        sub_1D26CDF50();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v52 + 22) = 2080;
        v70 = v89;
        v72 = objc_msgSend(v89, sel_preferredLanguages);
        if (v72)
        {
          v73 = v72;
          v74 = sub_1D26CDAF4();

          v97[0] = v74;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
          sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
          v75 = sub_1D26CD8E4();
          v77 = v76;
          swift_bridgeObjectRelease();
          v78 = v94;
          v79 = v95;
          v80 = v90;
        }
        else
        {
          v77 = 0xE300000000000000;
          v78 = v94;
          v79 = v95;
          v80 = v90;
          v75 = 7104878;
        }
        v97[0] = sub_1D2537880(v75, v77, &v98);
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        v81 = v87;
        _os_log_impl(&dword_1D2531000, v87, (os_log_type_t)v88, "Changing NSExtension's preferred app override languages in container (%s) changed to: %s from: %s", (uint8_t *)v52, 0x20u);
        v82 = v84;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v82, -1, -1);
        MEMORY[0x1D823A5E0](v52, -1, -1);

        (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v78);
        goto LABEL_41;
      }
LABEL_45:
      swift_bridgeObjectRelease();
      swift_release_n();
      __break(1u);
LABEL_46:
      swift_release();
      __break(1u);
      return;
    }
  }
LABEL_29:

  v59 = v88;
  if ((v84 & 1) == 0)
  {
    if (qword_1ED9621C0 != -1)
      swift_once();
    v60 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED977CF0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 16))(v59, v60, v41);
    swift_retain_n();
    v61 = v59;
    v62 = sub_1D26CC084();
    v63 = sub_1D26CDD04();
    if (!os_log_type_enabled(v62, v63))
    {

      swift_release_n();
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v61, v41);
      return;
    }
    v64 = (uint8_t *)swift_slowAlloc();
    v65 = swift_slowAlloc();
    v98 = v65;
    *(_DWORD *)v64 = 136315138;
    v66 = v87;
    swift_beginAccess();
    if (v85(v66, 1, v86) != 1)
    {
      v67 = sub_1D26CBC88();
      v69 = v68;
      swift_endAccess();
      v97[0] = sub_1D2537880(v67, v69, &v98);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v62, v63, "No change to preferred app overrides for (%s).", v64, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v65, -1, -1);
      MEMORY[0x1D823A5E0](v64, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v88, v41);
      return;
    }
    goto LABEL_46;
  }
}

uint64_t type metadata accessor for Preferences()
{
  return objc_opt_self();
}

uint64_t static Preferences.shared.getter()
{
  if (qword_1ED96F1C8 != -1)
    swift_once();
  return swift_retain();
}

uint64_t dispatch thunk of Preferences.widgetKitDeveloperModeEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

void sub_1D253AB70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getWFLinkActionWorkflowRunnerClientClass_block_invoke(uint64_t a1)
{
  Class result;
  void *v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  if (!VoiceShortcutClientLibraryCore_frameworkLibrary)
  {
    v4 = xmmword_1E93D7140;
    v5 = 0;
    VoiceShortcutClientLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (!VoiceShortcutClientLibraryCore_frameworkLibrary)
    __getWFLinkActionWorkflowRunnerClientClass_block_invoke_cold_1(&v3);
  result = objc_getClass("WFLinkActionWorkflowRunnerClient");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getWFLinkActionWorkflowRunnerClientClass_block_invoke_cold_2();
  getWFLinkActionWorkflowRunnerClientClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

dispatch_time_t CHDMonotonicTimeFromNow(int64_t delta)
{
  return dispatch_time(0x8000000000000000, delta);
}

dispatch_time_t CHDMonotonicTimePlusInterval(dispatch_time_t a1, int64_t a2)
{
  _CHDMonotonicNSEC(a1, (uint64_t)"time");
  return dispatch_time(a1, a2);
}

uint64_t _CHDMonotonicNSEC(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  void *v5;
  void *v6;

  result = -1;
  if (a1 != -1)
  {
    if ((dispatch_time_to_nsec() & 1) == 0)
    {
      objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
      v5 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "uint64_t _CHDMonotonicNSEC(CHDMonotonicTime, char *)");
      v6 = (void *)objc_claimAutoreleasedReturnValue();
      objc_msgSend(v5, "handleFailureInFunction:file:lineNumber:description:", v6, CFSTR("CHDMonotonicTimer.m"), 26, CFSTR("failed to decompose %s %llu"), a2, a1);

    }
    return -1;
  }
  return result;
}

BOOL CHDMonotonicTimeLessThan(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = _CHDMonotonicNSEC(a1, (uint64_t)"lhs");
  return v3 < _CHDMonotonicNSEC(a2, (uint64_t)"rhs");
}

BOOL CHDMonotonicTimeEqual(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = _CHDMonotonicNSEC(a1, (uint64_t)"lhs");
  return v3 == _CHDMonotonicNSEC(a2, (uint64_t)"rhs");
}

void *CodableHostConfiguration<>.toData()()
{
  uint64_t v0;
  id v1;
  id v2;
  void *v3;
  id v5[2];

  v5[1] = *(id *)MEMORY[0x1E0C80C00];
  v5[0] = 0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_archivedDataWithRootObject_requiringSecureCoding_error_, v0, 1, v5);
  v2 = v5[0];
  if (v1)
  {
    v3 = (void *)sub_1D26CB8E0();

  }
  else
  {
    v3 = v2;
    sub_1D26CB76C();

    swift_willThrow();
  }
  return v3;
}

uint64_t CodableHostConfiguration<>.init(data:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v3 = v2;
  v6 = sub_1D26CD3BC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2539514(0, &qword_1ED9620C8);
  v10 = sub_1D26CDD28();
  if (!v2)
  {
    v3 = v10;
    if (!v10)
    {
      sub_1D2539514(0, (unint64_t *)&qword_1ED962310);
      (*(void (**)(char *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CF00B0], v6);
      sub_1D26CDEA8();
      swift_willThrow();
    }
  }
  sub_1D253EE04(a1, a2);
  return v3;
}

void CodableHostConfiguration<>.succinctDescription()()
{
  void *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_msgSend(v0, sel_succinctDescriptionBuilder);
  if (v1)
  {
    v2 = v1;
    v3 = objc_msgSend(v1, sel_build);

    if (v3)
    {
      sub_1D26CD938();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t HostRecord.identity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t HostRecord.identity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*HostRecord.identity.modify())()
{
  return CGSizeMake;
}

uint64_t HostRecord.type.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_1D26CBDD8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t HostRecord.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 36);
  v5 = sub_1D26CBDD8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*HostRecord.type.modify())()
{
  return CGSizeMake;
}

uint64_t HostRecord.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 40));
}

uint64_t HostRecord.configuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 40), a1);
}

uint64_t (*HostRecord.configuration.modify())()
{
  return CGSizeMake;
}

uint64_t HostRecord.activationState.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_1D26CBD84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t HostRecord.activationState.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 44);
  v5 = sub_1D26CBD84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*HostRecord.activationState.modify())()
{
  return CGSizeMake;
}

uint64_t HostRecord.init(identity:type:configuration:activationState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a7, a1, v14);
  v16 = (int *)type metadata accessor for HostRecord(0, a5, a6, v15);
  v17 = a7 + v16[9];
  v18 = sub_1D26CBDD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a2, v18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7 + v16[10], a3, a5);
  v19 = a7 + v16[11];
  v20 = sub_1D26CBD84();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19, a4, v20);
}

uint64_t sub_1D253B688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  char v24;
  uint64_t v25;
  uint64_t Strong;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v47 = *(_QWORD *)(v6 - 8);
  v48 = v6;
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = a2;
  v53 = a3;
  v9 = type metadata accessor for HostRecord(255, a2, a3, v8);
  v10 = sub_1D26CDF38();
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v43 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v39 - v14;
  v16 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v13);
  v42 = (char *)&v39 - v17;
  v50 = 0;
  v51 = 0xE000000000000000;
  v18 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](45);
  v52 = v18;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v19 = sub_1D26CBDCC();
  if (v19 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v20 = sub_1D253FA04(v19);
  v22 = v21;
  v24 = v23;
  sub_1D2641480(v20, v21, v23);
  sub_1D253FBE8(v20, v22, v24);
  v25 = v52;
  Strong = swift_weakLoadStrong();
  if (!Strong)
  {
LABEL_15:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  v27 = Strong;
  v28 = sub_1D2557230(v25);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v29 = v28;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
    v30 = sub_1D26CD7C4();
    v50 = v30;
    v31 = *(_QWORD *)(v29 + 16);
    if (v31)
    {
      v39 = 0;
      v40 = v31;
      v32 = 0;
      v33 = v42;
      do
      {
        v34 = swift_bridgeObjectRetain();
        sub_1D253BBD8(v34, v49, v53, (uint64_t)v15);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, v9) == 1)
        {
          (*(void (**)(char *, uint64_t))(v44 + 8))(v15, v45);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v33, v15, v9);
          (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, v33, v48);
          v35 = v15;
          v36 = v29;
          v37 = v43;
          (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v43, v33, v9);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v37, 0, 1, v9);
          sub_1D26CD89C();
          v29 = v36;
          v15 = v35;
          v31 = v40;
          sub_1D26CD8C0();
          (*(void (**)(char *, uint64_t))(v16 + 8))(v33, v9);
        }
        ++v32;
      }
      while (v31 != v32);
      swift_bridgeObjectRelease();
      return v50;
    }
    else
    {
      v27 = v30;
      swift_bridgeObjectRelease();
    }
  }
  return v27;
}

uint64_t sub_1D253BBD8@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char v52;
  BOOL v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;
  char v64;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  BOOL v73;
  uint64_t v74;
  NSObject *v75;
  os_log_type_t v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t result;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  NSObject *v97;
  os_log_type_t v98;
  uint8_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void (*v104)(uint64_t, unint64_t, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v9 = MEMORY[0x1E0C80A78](v8);
  v126 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v124 = *(_QWORD *)(a2 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v125 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v132 = (char *)&v111 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963008);
  MEMORY[0x1E0C80A78](v14);
  v128 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D26CBD84();
  v129 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v16);
  v123 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v111 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963010);
  MEMORY[0x1E0C80A78](v21);
  v131 = (char *)&v111 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1D26CBDD8();
  v133 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x1E0C80A78](v23);
  v127 = (char *)&v111 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v122 = (char *)&v111 - v27;
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v111 - v28;
  v30 = sub_1D26CE0B8();
  v31 = a1;
  v33 = v32;
  v34 = *(char **)(a1 + 16);
  if (v34)
  {
    v35 = v30;
    v119 = v29;
    v121 = v23;
    v118 = v20;
    v120 = v16;
    v134 = a3;
    v135 = a2;
    v130 = v31;
    v36 = (char *)(v31 + 64);
    v37 = v34;
    while (1)
    {
      v38 = *((_QWORD *)v36 - 2);
      v39 = *((_QWORD *)v36 - 1);
      v40 = *v36;
      v41 = *((_QWORD *)v36 - 4) == v35 && *((_QWORD *)v36 - 3) == v33;
      if (v41 || (sub_1D26CE3D0() & 1) != 0)
        break;
      v36 += 40;
      if (!--v37)
      {
        swift_bridgeObjectRelease();
LABEL_43:
        a3 = v134;
LABEL_44:
        a2 = v135;
        goto LABEL_45;
      }
    }
    swift_bridgeObjectRetain();
    sub_1D2541E98(v38, v39, v40);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D26507E0(v38, v39, v40);
    v43 = v42;
    v45 = v44;
    sub_1D253FBE8(v38, v39, v40);
    a3 = v134;
    a2 = v135;
    if (!v45)
      goto LABEL_45;
    v115 = v43;
    v116 = v45;
    v117 = a4;
    a3 = sub_1D26CE0B8();
    v47 = v46;
    v48 = 0;
    v49 = (char *)(v130 + 64);
    while (1)
    {
      v50 = (char *)(v48 + 1);
      if (__OFADD__(v48, 1))
        break;
      v33 = *((_QWORD *)v49 - 3);
      v51 = *((_QWORD *)v49 - 2);
      a2 = *((_QWORD *)v49 - 1);
      v52 = *v49;
      v53 = *((_QWORD *)v49 - 4) == a3 && v33 == v47;
      if (v53 || (sub_1D26CE3D0() & 1) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1D2541E98(v51, a2, v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1D26507D4(v51, a2, v52);
        v55 = v54;
        v57 = v56;
        sub_1D253FBE8(v51, a2, v52);
        if ((v57 & 1) == 0)
        {
          v114 = v55;
          a3 = sub_1D26CE0B8();
          v47 = v58;
          v59 = 0;
          v60 = (char *)(v130 + 64);
          while (1)
          {
            v61 = (char *)(v59 + 1);
            if (__OFADD__(v59, 1))
            {
              __break(1u);
LABEL_67:
              __break(1u);
LABEL_68:
              swift_once();
LABEL_59:
              v95 = sub_1D26CC09C();
              __swift_project_value_buffer(v95, (uint64_t)qword_1ED977D20);
              v96 = v116;
              swift_bridgeObjectRetain();
              v97 = sub_1D26CC084();
              v98 = sub_1D26CDCEC();
              if (os_log_type_enabled(v97, v98))
              {
                v99 = (uint8_t *)swift_slowAlloc();
                v100 = swift_slowAlloc();
                v137 = v100;
                *(_DWORD *)v99 = 136315138;
                swift_bridgeObjectRetain();
                v136 = sub_1D2537880(v115, v96, &v137);
                sub_1D26CDF50();
                swift_bridgeObjectRelease_n();
                _os_log_impl(&dword_1D2531000, v97, v98, "Encountered malformed result for host data: %s", v99, 0xCu);
                swift_arrayDestroy();
                MEMORY[0x1D823A5E0](v100, -1, -1);
                MEMORY[0x1D823A5E0](v99, -1, -1);

                sub_1D2541EBC(v113, v112);
              }
              else
              {
                sub_1D2541EBC(v113, v112);

                swift_bridgeObjectRelease_n();
              }
              v102 = type metadata accessor for HostRecord(0, v47, a3, v101);
              return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 56))(v57, 1, 1, v102);
            }
            v57 = *((_QWORD *)v60 - 3);
            v62 = *((_QWORD *)v60 - 2);
            v63 = *((_QWORD *)v60 - 1);
            v64 = *v60;
            if (*((_QWORD *)v60 - 4) == a3 && v57 == v47)
              break;
            if ((sub_1D26CE3D0() & 1) != 0)
              goto LABEL_32;
            v60 += 40;
            ++v59;
            if (v61 == v34)
              goto LABEL_20;
          }
          v57 = v47;
LABEL_32:
          swift_bridgeObjectRetain();
          sub_1D2541E98(v62, v63, v64);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1D2650688(v62, v63, v64);
          sub_1D253FBE8(v62, v63, v64);
          if (v138 >> 60 != 15)
          {
            v112 = v138;
            v113 = v137;
            a3 = sub_1D26CE0B8();
            v47 = v66;
            v67 = 0;
            v68 = (char *)(v130 + 64);
            while (1)
            {
              v69 = (char *)(v67 + 1);
              if (__OFADD__(v67, 1))
                goto LABEL_67;
              v57 = *((_QWORD *)v68 - 3);
              v70 = *((_QWORD *)v68 - 2);
              v71 = *((_QWORD *)v68 - 1);
              v72 = *v68;
              v73 = *((_QWORD *)v68 - 4) == a3 && v57 == v47;
              if (v73 || (sub_1D26CE3D0() & 1) != 0)
                break;
              v68 += 40;
              ++v67;
              if (v69 == v34)
              {
                swift_bridgeObjectRelease();
                sub_1D2541EBC(v113, v112);
                goto LABEL_42;
              }
            }
            swift_bridgeObjectRetain();
            sub_1D2541E98(v70, v71, v72);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1D26507D4(v70, v71, v72);
            v82 = v81;
            v84 = v83;
            sub_1D253FBE8(v70, v71, v72);
            a3 = v134;
            if ((v84 & 1) != 0)
            {
              sub_1D2541EBC(v113, v112);
              swift_bridgeObjectRelease();
              a4 = v117;
              goto LABEL_44;
            }
            v47 = v135;
            v85 = v113;
            if (v114 < 0)
              goto LABEL_69;
            v86 = v131;
            sub_1D26CBDC0();
            v87 = v133;
            v88 = v121;
            v89 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v133 + 48))(v86, 1, v121);
            v90 = v120;
            if (v89 == 1)
            {
              v91 = &qword_1ED963010;
              v92 = (uint64_t)v86;
              goto LABEL_58;
            }
            v34 = *(char **)(v87 + 32);
            ((void (*)(char *, char *, uint64_t))v34)(v119, v86, v88);
            if (v82 < 0)
            {
LABEL_69:
              result = sub_1D26CE1CC();
              __break(1u);
              return result;
            }
            v93 = v128;
            sub_1D26CBD6C();
            v94 = v129;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v93, 1, v90) != 1)
            {
              v103 = v93;
              v50 = v118;
              v131 = *(char **)(v94 + 32);
              ((void (*)(char *, char *, uint64_t))v131)(v118, v103, v90);
              v104 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a3 + 16);
              a2 = v112;
              sub_1D2541ED0(v85, v112);
              v104(v85, a2, v47, a3);
              v33 = v117;
              goto LABEL_65;
            }
            (*(void (**)(char *, uint64_t))(v87 + 8))(v119, v121);
            v91 = &qword_1ED963008;
            v92 = (uint64_t)v93;
LABEL_58:
            sub_1D253703C(v92, v91);
            v57 = v117;
            if (qword_1ED962330 != -1)
              goto LABEL_68;
            goto LABEL_59;
          }
        }
        goto LABEL_42;
      }
      v49 += 40;
      ++v48;
      if (v50 == v34)
      {
LABEL_20:
        swift_bridgeObjectRelease();
LABEL_42:
        swift_bridgeObjectRelease();
        a4 = v117;
        goto LABEL_43;
      }
    }
    __break(1u);
LABEL_65:
    v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632D8);
    sub_1D2536488((unint64_t *)&unk_1ED9632A0, &qword_1ED9632D8, MEMORY[0x1E0D0F968]);
    sub_1D2536488((unint64_t *)&unk_1ED9632C8, &qword_1ED9632D8, MEMORY[0x1E0D0F990]);
    sub_1D2536488(&qword_1ED9632B0, &qword_1ED9632D8, MEMORY[0x1E0D0F970]);
    sub_1D2536488((unint64_t *)&unk_1ED9632B8, &qword_1ED9632D8, MEMORY[0x1E0D0F978]);
    v105 = (uint64_t)v126;
    sub_1D26CBD30();
    sub_1D2541EBC(v113, a2);
    v106 = (uint64_t)v122;
    ((void (*)(char *, char *, uint64_t))v34)(v122, v119, v121);
    v107 = (uint64_t)v125;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v125, v132, v47);
    v108 = (uint64_t)v123;
    ((void (*)(char *, char *, uint64_t))v131)(v123, v50, v120);
    HostRecord.init(identity:type:configuration:activationState:)(v105, v106, v107, v108, v47, a3, v33);
    v110 = type metadata accessor for HostRecord(0, v47, a3, v109);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v110 - 8) + 56))(v33, 0, 1, v110);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_45:
    if (qword_1ED962330 != -1)
      swift_once();
    v74 = sub_1D26CC09C();
    __swift_project_value_buffer(v74, (uint64_t)qword_1ED977D20);
    v75 = sub_1D26CC084();
    v76 = sub_1D26CDCEC();
    if (os_log_type_enabled(v75, v76))
    {
      v77 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v77 = 0;
      _os_log_impl(&dword_1D2531000, v75, v76, "Encountered malformed result for host configuration data.", v77, 2u);
      MEMORY[0x1D823A5E0](v77, -1, -1);
    }

    v79 = type metadata accessor for HostRecord(0, a2, a3, v78);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 56))(a4, 1, 1, v79);
  }
}

uint64_t ChronoMetadataStore.HostConfigurationStore.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

uint64_t sub_1D253CB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  char v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  uint64_t v54;

  v4 = v3;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_14;
  v8 = Strong;
  v9 = *(_QWORD *)(Strong + 24);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  v11 = *(_QWORD *)(v8 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  swift_release();
  if (!v11)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  type metadata accessor for HostRecord(0, a2, a3, v12);
  result = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  if (v4)
    return result;
  v15 = result;
  v16 = v14;
  if (!swift_weakLoadStrong())
  {
LABEL_14:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  v17 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](181);
  v54 = v17;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v18 = sub_1D26CBD3C();
  v20 = v19;
  swift_bridgeObjectRetain();
  v21 = sub_1D253FC34(v18, v20, MEMORY[0x1E0DEA968], (uint64_t)&off_1E93D5368);
  v23 = v22;
  v25 = v24;
  sub_1D2641480(v21, v22, v24);
  sub_1D253FBE8(v21, v23, v25);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v26 = sub_1D26CBDCC();
  if (v26 < 0)
    goto LABEL_11;
  v27 = sub_1D253FA04(v26);
  v29 = v28;
  v31 = v30;
  sub_1D2641480(v27, v28, v30);
  sub_1D253FBE8(v27, v29, v31);
  sub_1D26CDA04();
  sub_1D253FE08(v15, v16);
  sub_1D253FE08(v15, v16);
  v32 = sub_1D253FC34(v15, v16, MEMORY[0x1E0CB0338], (uint64_t)&off_1E93D09D0);
  v34 = v33;
  v36 = v35;
  sub_1D2641480(v32, v33, v35);
  sub_1D253FBE8(v32, v34, v36);
  sub_1D253EE04(v15, v16);
  sub_1D26CDA04();
  v37 = sub_1D26CBD78();
  if (v37 < 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v38 = sub_1D253FA04(v37);
  v40 = v39;
  v42 = v41;
  sub_1D2641480(v38, v39, v41);
  sub_1D253FBE8(v38, v40, v42);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D253FE08(v15, v16);
  sub_1D253FE08(v15, v16);
  v43 = sub_1D253FC34(v15, v16, MEMORY[0x1E0CB0338], (uint64_t)&off_1E93D09D0);
  v45 = v44;
  v47 = v46;
  sub_1D2641480(v43, v44, v46);
  sub_1D253FBE8(v43, v45, v47);
  sub_1D253EE04(v15, v16);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v48 = sub_1D26CBD78();
  if (v48 < 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v49 = sub_1D253FA04(v48);
  v51 = v50;
  v53 = v52;
  sub_1D2641480(v49, v50, v52);
  sub_1D253FBE8(v49, v51, v53);
  sub_1D2557230(v54);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1D253EE04(v15, v16);
}

uint64_t sub_1D253D1C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  char v27;
  uint64_t result;
  uint64_t v29;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_12;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (!swift_weakLoadStrong())
  {
LABEL_12:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](58);
  v29 = v7;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v8 = sub_1D26CBD78();
  if (v8 < 0)
    goto LABEL_10;
  v9 = sub_1D253FA04(v8);
  v11 = v10;
  v13 = v12;
  sub_1D2641480(v9, v10, v12);
  sub_1D253FBE8(v9, v11, v13);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v14 = sub_1D26CBD3C();
  v16 = v15;
  swift_bridgeObjectRetain();
  v17 = sub_1D253FC34(v14, v16, MEMORY[0x1E0DEA968], (uint64_t)&off_1E93D5368);
  v19 = v18;
  v21 = v20;
  sub_1D2641480(v17, v18, v20);
  sub_1D253FBE8(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v22 = sub_1D26CBDCC();
  if (v22 < 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v23 = sub_1D253FA04(v22);
  v25 = v24;
  v27 = v26;
  sub_1D2641480(v23, v24, v26);
  sub_1D253FBE8(v23, v25, v27);
  sub_1D2557230(v29);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D253D570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  uint64_t result;
  uint64_t v23;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_10;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!swift_weakLoadStrong())
  {
LABEL_10:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](48);
  v23 = v7;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v8 = sub_1D26CBD3C();
  v10 = v9;
  swift_bridgeObjectRetain();
  v11 = sub_1D253FC34(v8, v10, MEMORY[0x1E0DEA968], (uint64_t)&off_1E93D5368);
  v13 = v12;
  v15 = v14;
  sub_1D2641480(v11, v12, v14);
  sub_1D253FBE8(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v16 = sub_1D26CBDCC();
  if (v16 < 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v17 = sub_1D253FA04(v16);
  v19 = v18;
  v21 = v20;
  sub_1D2641480(v17, v18, v20);
  sub_1D253FBE8(v17, v19, v21);
  sub_1D2557230(v23);
  swift_release();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s9ChronoKit0A13MetadataStoreC017HostConfigurationD0CfD_0()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1D253D8AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t default argument 0 of LayerSnapshotter.init(renderBoxFormat:coreAnimationFormat:logger:screenshotManager:dataProtectionMonitor:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1D253D948(&qword_1ED96C618, type metadata accessor for RBLayer.SnapshotFormat, (uint64_t)qword_1ED96C5F8, a1);
}

uint64_t default argument 1 of LayerSnapshotter.init(renderBoxFormat:coreAnimationFormat:logger:screenshotManager:dataProtectionMonitor:)@<X0>(uint64_t a1@<X8>)
{
  return sub_1D253D948(qword_1EFC82180, type metadata accessor for CALayer.SnapshotFormat, (uint64_t)qword_1EFC82550, a1);
}

uint64_t sub_1D253D948@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  if (*a1 != -1)
    swift_once();
  v7 = a2(0);
  v8 = __swift_project_value_buffer(v7, a3);
  return sub_1D2534120(v8, a4, a2);
}

id default argument 3 of LayerSnapshotter.init(renderBoxFormat:coreAnimationFormat:logger:screenshotManager:dataProtectionMonitor:)()
{
  return objc_msgSend((id)objc_opt_self(), sel_sharedManager);
}

uint64_t default argument 0 of View.widgetURLReader(enabled:_:)()
{
  return 1;
}

unint64_t sub_1D253D9E0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  unint64_t result;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9622F8);
  v2 = (_QWORD *)sub_1D26CE214();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (char *)(a1 + 64);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 4);
    v6 = *((_QWORD *)v4 - 3);
    v7 = *((_QWORD *)v4 - 2);
    v8 = *((_QWORD *)v4 - 1);
    v9 = *v4;
    swift_bridgeObjectRetain();
    sub_1D2541E98(v7, v8, v9);
    result = sub_1D25891F4(v5, v6);
    if ((v11 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v12 = (uint64_t *)(v2[6] + 16 * result);
    *v12 = v5;
    v12[1] = v6;
    v13 = v2[7] + 24 * result;
    *(_QWORD *)v13 = v7;
    *(_QWORD *)(v13 + 8) = v8;
    *(_BYTE *)(v13 + 16) = v9;
    v14 = v2[2];
    v15 = __OFADD__(v14, 1);
    v16 = v14 + 1;
    if (v15)
      goto LABEL_11;
    v4 += 40;
    v2[2] = v16;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253DB20(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC823E0);
  v2 = (_QWORD *)sub_1D26CE214();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D25891F4(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253DC40(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C0C8);
  v2 = sub_1D26CE214();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2537078(v6, (uint64_t)&v13, &qword_1ED96BFB0);
    v7 = v13;
    result = sub_1D2589258(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1D2538448(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253DD6C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0D8);
  v2 = sub_1D26CE214();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2537078(v6, (uint64_t)&v13, (uint64_t *)&unk_1ED96C000);
    v7 = v13;
    result = sub_1D25892E4(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_1D2538448(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253DE98(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963960);
  v2 = (_QWORD *)sub_1D26CE214();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (_BYTE *)(a1 + 56);
  while (1)
  {
    v5 = *((_QWORD *)v4 - 3);
    v6 = *((_QWORD *)v4 - 2);
    v7 = *((_QWORD *)v4 - 1);
    v8 = *v4;
    sub_1D2534610(v5);
    result = sub_1D2589478(v5);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v5;
    v11 = v2[7] + 24 * result;
    *(_QWORD *)v11 = v6;
    *(_QWORD *)(v11 + 8) = v7;
    *(_BYTE *)(v11 + 16) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v4 += 32;
    v2[2] = v14;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253DFC0(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0C0);
  v2 = sub_1D26CE214();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2537078(v6, (uint64_t)&v15, &qword_1ED9620A8);
    v7 = v15;
    v8 = v16;
    result = sub_1D25891F4(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1D2538448(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253E0F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t result;
  char v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  _QWORD v25[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962090);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962128);
  v6 = sub_1D26CE214();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (char *)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2537078(v12, (uint64_t)v5, &qword_1ED962090);
    v14 = *v5;
    v15 = v5[1];
    result = sub_1D25891F4(*v5, v15);
    if ((v17 & 1) != 0)
      break;
    v18 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v19 = (uint64_t *)(v7[6] + 16 * result);
    *v19 = v14;
    v19[1] = v15;
    v20 = v7[7];
    v21 = sub_1D26CB9DC();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20 + *(_QWORD *)(*(_QWORD *)(v21 - 8) + 72) * v18, v9, v21);
    v22 = v7[2];
    v23 = __OFADD__(v22, 1);
    v24 = v22 + 1;
    if (v23)
      goto LABEL_11;
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253E294(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962140);
  v2 = sub_1D26CE214();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2537078(v6, (uint64_t)v15, &qword_1ED962110);
    result = sub_1D25894D4((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_1D2538448(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253E3D4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962138);
  v2 = (_QWORD *)sub_1D26CE214();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1D25891F4(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253E4EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD v24[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC823C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFC823D0);
  v6 = sub_1D26CE214();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = &v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2537078(v12, (uint64_t)v5, &qword_1EFC823C8);
    result = sub_1D2589970((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    v19 = v7[7];
    v20 = sub_1D26CB9DC();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v19 + *(_QWORD *)(*(_QWORD *)(v20 - 8) + 72) * v16, v9, v20);
    v21 = v7[2];
    v22 = __OFADD__(v21, 1);
    v23 = v21 + 1;
    if (v22)
      goto LABEL_11;
    v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253E6A8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963358);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC823C0);
  v6 = sub_1D26CE214();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2537078(v12, (uint64_t)v5, (uint64_t *)&unk_1ED963358);
    result = sub_1D2589970((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253E844(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t result;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  _QWORD v23[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9638C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (_QWORD *)((char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963970);
  v6 = sub_1D26CE214();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v23[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2537078(v12, (uint64_t)v5, &qword_1ED9638C8);
    v14 = *v5;
    result = sub_1D25393D8(*v5);
    if ((v16 & 1) != 0)
      break;
    v17 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v7[6] + 8 * result) = v14;
    v18 = v7[7];
    v19 = type metadata accessor for ExtensionMetadata();
    result = sub_1D2541E54(v9, v18 + *(_QWORD *)(*(_QWORD *)(v19 - 8) + 72) * v17);
    v20 = v7[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_11;
    v7[2] = v22;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1D253E9D4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  __int128 *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633C8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963950);
  v6 = sub_1D26CE214();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = (__int128 *)&v5[*(int *)(v2 + 48)];
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1D2537078(v12, (uint64_t)v5, &qword_1ED9633C8);
    result = sub_1D25363D0((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
    (*(void (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    result = sub_1D2538F38(v9, v7[7] + 40 * v16);
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

_QWORD *sub_1D253EB7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(unint64_t, char *, uint64_t);
  uint64_t v17;
  _QWORD *result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82428);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFC82430);
  v6 = (_QWORD *)sub_1D26CE214();
  v7 = *(_QWORD *)(a1 + 16);
  if (!v7)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return v6;
  }
  v8 = *(int *)(v2 + 48);
  v9 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25 = a1;
  v27 = *(_QWORD *)(v3 + 72);
  swift_retain();
  sub_1D2537078(a1 + v9, (uint64_t)v5, &qword_1EFC82428);
  v10 = sub_1D2589ABC((uint64_t)v5);
  if ((v11 & 1) != 0)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  v12 = v10;
  v26 = &v5[v8];
  v13 = sub_1D26CC948();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = *(void (**)(unint64_t, char *, uint64_t))(v14 + 32);
  v17 = v25 + v27 + v9;
  while (1)
  {
    *(_QWORD *)((char *)v6 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v12;
    v16(v6[6] + v15 * v12, v5, v13);
    result = memmove((void *)(v6[7] + 80 * v12), v26, 0x50uLL);
    v19 = v6[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      break;
    v6[2] = v21;
    if (!--v7)
      goto LABEL_9;
    v22 = v17 + v27;
    sub_1D2537078(v17, (uint64_t)v5, &qword_1EFC82428);
    v12 = sub_1D2589ABC((uint64_t)v5);
    v17 = v22;
    if ((v23 & 1) != 0)
      goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t default argument 1 of MetadataInlineGraphicView.init(_:alwaysTemplate:parameters:)()
{
  return 0;
}

uint64_t default argument 2 of MetadataTextView.init(_:parameters:allowsCustomColors:)()
{
  return 0;
}

uint64_t default argument 1 of _UIHostingViewable.configureRenderBox(async:isOpaque:minAnimationInterval:)()
{
  return 0;
}

double default argument 2 of _UIHostingViewable.configureRenderBox(async:isOpaque:minAnimationInterval:)()
{
  return 0.0;
}

uint64_t default argument 1 of CHDMonotonicTimer.init(time:repeat:)()
{
  return 0;
}

uint64_t default argument 10 of WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)()
{
  return 0;
}

uint64_t default argument 19 of WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)()
{
  return 0;
}

uint64_t default argument 21 of WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)()
{
  return 0;
}

uint64_t default argument 22 of WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)()
{
  return MEMORY[0x1E0DEE9D8];
}

id default argument 3 of ActivityCacheManager.init(cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:)()
{
  return objc_msgSend((id)objc_opt_self(), sel_defaultManager);
}

uint64_t default argument 1 of WidgetPreviewHostingViewController.updateCurrentEntry(to:disableAnimations:)()
{
  return 0;
}

uint64_t default argument 0 of View.onSystemURLInvoked(enabled:_:)()
{
  return 1;
}

uint64_t default argument 0 of View.onWidgetLaunch(enabled:launchHandler:touchDownHandler:)()
{
  return 1;
}

uint64_t default argument 5 of StatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)()
{
  return 1;
}

uint64_t sub_1D253EE04(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for HostRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for HostRecord);
}

double default argument 5 of ActivityPreviewHostingViewController.init(viewCollections:currentStateIndex:widgetLocation:environment:viewKind:apertureTopEdgeMetric:islandSize:renderBoxRendersAsynchronously:appName:)()
{
  return 0.0;
}

uint64_t default argument 1 of ActivityPreviewHostingViewController.updateCurrentState(to:disableAnimations:)()
{
  return 0;
}

uint64_t default argument 4 of WidgetEntry.init(key:protectionType:environmentProvider:observer:entrySupportsRendering:)()
{
  return 1;
}

uint64_t default argument 2 of WidgetEntry.currentViewableEntry(with:overrideDate:ignoringEnvironmentKeys:)()
{
  return MEMORY[0x1E0DEE9D8];
}

double default argument 0 of WidgetUpdateTimer.init(quantum:queue:)()
{
  return 1.0;
}

uint64_t default argument 1 of WidgetUpdateTimer.init(quantum:queue:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1D26CD080();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF540], v0);
  v4 = sub_1D26CDDC4();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

void default argument 2 of InteractiveWidgetActionRunner.start(lnAction:source:authenticationPolicy:)(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

id default argument 2 of ExtensionSystemDataCacheKeyProvider.init(subsystemIdentifier:systemDataURLProvider:fileManager:)()
{
  return objc_msgSend((id)objc_opt_self(), sel_defaultManager);
}

uint64_t default argument 5 of PlaceholderStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)()
{
  return 1;
}

uint64_t sub_1D253EF70(uint64_t a1, uint64_t a2)
{
  return sub_1D253F890(a1, a2, MEMORY[0x1E0DEA950]);
}

void sub_1D253EF8C(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1D253EF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D823A4E4](&unk_1D26CFBA0, a3);
  return sub_1D26CBDE4();
}

_QWORD *sub_1D253EFE0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1D253EFF0(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1D253EFFC(uint64_t a1, uint64_t a2)
{
  return sub_1D253F890(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1D253F008(uint64_t a1)
{
  MEMORY[0x1D823A4E4](&unk_1D26D00F8, a1);
  return sub_1D26CBDFC();
}

uint64_t sub_1D253F044()
{
  MEMORY[0x1D823A4E4](&unk_1D26D00F8);
  return sub_1D26CBDF0();
}

uint64_t sub_1D253F08C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D253F6BC(a1, a2, a3, (uint64_t)&unk_1D26D00F8);
}

_QWORD *sub_1D253F098@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 | *result;
  return result;
}

_QWORD *sub_1D253F0AC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & *result;
  return result;
}

_QWORD *sub_1D253F0C0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1D253F0D4(_QWORD *a1, uint64_t *a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = *v2 & *a2;
  if (v4 != *a2)
    *v2 |= v3;
  *a1 = v3;
  return v4 != v3;
}

_QWORD *sub_1D253F104@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & *result;
  if (v3)
    *v2 &= ~*result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1D253F130@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *result;
  v4 = *v2;
  *v2 |= *result;
  v5 = v4 & v3;
  *(_QWORD *)a2 = v5;
  *(_BYTE *)(a2 + 8) = v5 == 0;
  return result;
}

_QWORD *sub_1D253F154(_QWORD *result)
{
  _QWORD *v1;

  *v1 |= *result;
  return result;
}

_QWORD *sub_1D253F168(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= *result;
  return result;
}

_QWORD *sub_1D253F17C(_QWORD *result)
{
  _QWORD *v1;

  *v1 ^= *result;
  return result;
}

_QWORD *sub_1D253F190@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1D253F1A4(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1D253F1B8(_QWORD *a1)
{
  _QWORD *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1D253F1CC(_QWORD *a1)
{
  _QWORD *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1D253F1E0()
{
  _QWORD *v0;

  return *v0 == 0;
}

uint64_t sub_1D253F1F0()
{
  return sub_1D26CDFC8();
}

_QWORD *sub_1D253F208(_QWORD *result)
{
  _QWORD *v1;

  *v1 &= ~*result;
  return result;
}

_QWORD *sub_1D253F21C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1D253F22C(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

BOOL sub_1D253F238(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D253F24C(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1D26CD920();
  *a2 = 0;
  return result;
}

uint64_t sub_1D253F2C0(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1D26CD92C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1D253F33C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1D26CD938();
  v2 = sub_1D26CD914();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D253F37C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D823A4E4](&unk_1D26D00F8, a3);
  return sub_1D26CBDE4();
}

BOOL sub_1D253F3C8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D253F3DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = sub_1D2541E1C(a1);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1D253F41C()
{
  sub_1D25369B0(&qword_1ED96E108, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D26D01A8);
  sub_1D25369B0((unint64_t *)&unk_1EFC82460, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D26CFDB8);
  return sub_1D26CE244();
}

uint64_t sub_1D253F4A0()
{
  sub_1D25369B0(&qword_1EFC82388, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_1D26CFA90);
  sub_1D25369B0((unint64_t *)&unk_1EFC82390, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_1D26CFA30);
  return sub_1D26CE244();
}

uint64_t sub_1D253F524()
{
  sub_1D25369B0(&qword_1ED96BFD8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1D26D00B4);
  sub_1D25369B0((unint64_t *)&unk_1EFC82440, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1D26D0008);
  return sub_1D26CE244();
}

uint64_t sub_1D253F5A8()
{
  sub_1D25369B0(&qword_1ED96C058, (uint64_t (*)(uint64_t))type metadata accessor for RBDrawableStatisticsKey, (uint64_t)&unk_1D26CFC10);
  sub_1D25369B0((unint64_t *)&unk_1EFC823B0, (uint64_t (*)(uint64_t))type metadata accessor for RBDrawableStatisticsKey, (uint64_t)&unk_1D26CF61C);
  return sub_1D26CE244();
}

uint64_t sub_1D253F62C(uint64_t a1)
{
  MEMORY[0x1D823A4E4](&unk_1D26CFBA0, a1);
  return sub_1D26CBDFC();
}

uint64_t sub_1D253F668()
{
  MEMORY[0x1D823A4E4](&unk_1D26CFBA0);
  return sub_1D26CBDF0();
}

uint64_t sub_1D253F6B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D253F6BC(a1, a2, a3, (uint64_t)&unk_1D26CFBA0);
}

uint64_t sub_1D253F6BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D26CE460();
  MEMORY[0x1D823A4E4](a4, a2);
  sub_1D26CBDF0();
  return sub_1D26CE49C();
}

uint64_t sub_1D253F71C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D26CD938();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D253F744()
{
  sub_1D25369B0((unint64_t *)&qword_1ED96FCA8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1D26CFBCC);
  sub_1D25369B0((unint64_t *)&unk_1EFC823A0, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1D26CF768);
  return sub_1D26CE244();
}

uint64_t sub_1D253F7C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1D26CD914();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1D253F80C()
{
  sub_1D25369B0((unint64_t *)&unk_1ED96C028, (uint64_t (*)(uint64_t))type metadata accessor for RBLayerCopyImageKey, (uint64_t)&unk_1D26D0168);
  sub_1D25369B0((unint64_t *)&unk_1EFC82450, (uint64_t (*)(uint64_t))type metadata accessor for RBLayerCopyImageKey, (uint64_t)&unk_1D26CFEC4);
  return sub_1D26CE244();
}

uint64_t sub_1D253F890(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D26CD938();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1D253F8CC()
{
  sub_1D26CD938();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D253F90C()
{
  uint64_t v0;

  sub_1D26CD938();
  sub_1D26CE460();
  sub_1D26CD9D4();
  v0 = sub_1D26CE49C();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D253F97C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1D26CD938();
  v2 = v1;
  if (v0 == sub_1D26CD938() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1D253FA04(uint64_t a1)
{
  void *v1;
  uint64_t result;
  void *v3;
  _BYTE v4[40];
  _QWORD v5[5];

  v5[3] = MEMORY[0x1E0DEDC60];
  v5[4] = &off_1E93D5718;
  v5[0] = a1;
  sub_1D2538510((uint64_t)v5, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);

    v1 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    return (uint64_t)v1;
  }
  if ((swift_dynamicCast() & 1) != 0
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    v1 = v3;
    goto LABEL_9;
  }
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t sub_1D253FBE8(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3)
    return sub_1D253EE04(result, a2);
  if (a3 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D253FC0C(uint64_t a1, uint64_t a2)
{
  return sub_1D253FC34(a1, a2, MEMORY[0x1E0CB0338], (uint64_t)&off_1E93D09D0);
}

uint64_t sub_1D253FC20(uint64_t a1, uint64_t a2)
{
  return sub_1D253FC34(a1, a2, MEMORY[0x1E0DEA968], (uint64_t)&off_1E93D5368);
}

uint64_t sub_1D253FC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  uint64_t result;
  void *v6;
  _BYTE v7[40];
  _QWORD v8[5];

  v8[3] = a3;
  v8[4] = a4;
  v8[0] = a1;
  v8[1] = a2;
  sub_1D2538510((uint64_t)v8, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);

    v4 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    return (uint64_t)v4;
  }
  if ((swift_dynamicCast() & 1) != 0
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    v4 = v6;
    goto LABEL_9;
  }
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t sub_1D253FE08(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t dispatch thunk of CodableHostConfiguration.init(data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of CodableHostConfiguration.toData()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CodableHostConfiguration.extensionIdentities.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CodableHostConfiguration.succinctDescription()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1D253FE8C()
{
  return swift_allocateGenericValueMetadata();
}

void sub_1D253FE94()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D2540B68();
  if (v0 <= 0x3F)
  {
    sub_1D26CBDD8();
    if (v1 <= 0x3F)
    {
      swift_checkMetadataState();
      if (v2 <= 0x3F)
      {
        sub_1D26CBD84();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_1D253FF54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  void (*v22)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v4 = *(_QWORD *)(v31 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = sub_1D26CBDD8();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v29 = v5 + v8;
  v32 = v6;
  v33 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v33 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v30 = *(_QWORD *)(v7 + 64) + v10;
  v11 = *(_QWORD *)(v9 + 64);
  v12 = sub_1D26CBD84();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v11 + v14;
  v16 = (v8 | *(_BYTE *)(v4 + 80) | v10 | *(_BYTE *)(v13 + 80));
  if (v16 <= 7
    && ((v15
       + ((v30 + ((v5 + v8) & ~(unint64_t)v8)) & ~(unint64_t)v10)) & ~v14)
     + *(_QWORD *)(v13 + 64) <= 0x18
    && ((v8 | *(_DWORD *)(v4 + 80) | v10 | *(_DWORD *)(v13 + 80)) & 0x100000) == 0)
  {
    v21 = ~(unint64_t)v10;
    v27 = ~v14;
    v28 = v12;
    v22 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16);
    v20 = a1;
    v22(a1, a2, v31);
    v23 = ((unint64_t)a1 + v29) & ~(unint64_t)v8;
    v24 = ((unint64_t)a2 + v29) & ~(unint64_t)v8;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(v23, v24, v32);
    v25 = (v24 + v30) & v21;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((v23 + v30) & v21, v25, v33);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))((((v23 + v30) & v21) + v15) & v27, (v25 + v15) & v27, v28);
  }
  else
  {
    v19 = *a2;
    *a1 = *a2;
    v20 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  return v20;
}

uint64_t sub_1D254010C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1D26CBDD8();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + a1 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, v7);
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v11 = (v9 + *(_QWORD *)(v8 + 64) + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  (*(void (**)(unint64_t))(v10 + 8))(v11);
  v12 = *(_QWORD *)(v10 + 64);
  v13 = sub_1D26CBD84();
  return (*(uint64_t (**)(unint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))((v11 + v12 + *(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v13 - 8) + 80), v13);
}

uint64_t sub_1D25401D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_1D26CBDD8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (v8 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, v14, v9);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = sub_1D26CBD84();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 16))((v21 + *(unsigned __int8 *)(v23 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), (v21 + *(unsigned __int8 *)(v23 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), v22);
  return a1;
}

uint64_t sub_1D25402D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_1D26CBDD8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (v8 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v13, v14, v9);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 24))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = sub_1D26CBD84();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 24))((v21 + *(unsigned __int8 *)(v23 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), (v21 + *(unsigned __int8 *)(v23 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), v22);
  return a1;
}

uint64_t sub_1D25403D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_1D26CBDD8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (v8 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v13, v14, v9);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = sub_1D26CBD84();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 32))((v21 + *(unsigned __int8 *)(v23 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), (v21 + *(unsigned __int8 *)(v23 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), v22);
  return a1;
}

uint64_t sub_1D25404D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = sub_1D26CBDD8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v8 + v11;
  v13 = (v8 + v11 + a1) & ~v11;
  v14 = (v12 + a2) & ~v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(v13, v14, v9);
  v15 = *(_QWORD *)(v10 + 64);
  v16 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v17 = *(unsigned __int8 *)(v16 + 80);
  v18 = v15 + v17;
  v19 = (v18 + v13) & ~v17;
  v20 = (v18 + v14) & ~v17;
  (*(void (**)(uint64_t, uint64_t))(v16 + 40))(v19, v20);
  v21 = *(_QWORD *)(v16 + 64);
  v22 = sub_1D26CBD84();
  v23 = *(_QWORD *)(v22 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 40))((v21 + *(unsigned __int8 *)(v23 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), (v21 + *(unsigned __int8 *)(v23 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80), v22);
  return a1;
}

uint64_t sub_1D25405D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = sub_1D26CBDD8();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8)
    v12 = v8;
  else
    v12 = *(_DWORD *)(v10 + 84);
  v36 = *(_QWORD *)(a3 + 16);
  v37 = v9;
  v13 = *(_QWORD *)(v36 - 8);
  v14 = *(unsigned int *)(v13 + 84);
  if (v14 <= v12)
    v15 = v12;
  else
    v15 = *(_DWORD *)(v13 + 84);
  v16 = sub_1D26CBD84();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int *)(v17 + 84);
  if (v18 <= v15)
    v19 = v15;
  else
    v19 = *(_DWORD *)(v17 + 84);
  if (!a2)
    return 0;
  v20 = v16;
  v21 = *(unsigned __int8 *)(v10 + 80);
  v22 = *(_QWORD *)(v7 + 64) + v21;
  v23 = *(_QWORD *)(v10 + 64);
  v24 = *(unsigned __int8 *)(v13 + 80);
  v25 = *(_QWORD *)(v13 + 64);
  v26 = *(unsigned __int8 *)(v17 + 80);
  if (a2 <= v19)
    goto LABEL_29;
  v27 = ((v25 + v26 + ((v23 + v24 + (v22 & ~v21)) & ~v24)) & ~v26) + *(_QWORD *)(v17 + 64);
  v28 = 8 * v27;
  if (v27 <= 3)
  {
    v30 = ((a2 - v19 + ~(-1 << v28)) >> v28) + 1;
    if (HIWORD(v30))
    {
      v29 = *(_DWORD *)(a1 + v27);
      if (!v29)
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v30 > 0xFF)
    {
      v29 = *(unsigned __int16 *)(a1 + v27);
      if (!*(_WORD *)(a1 + v27))
        goto LABEL_29;
      goto LABEL_20;
    }
    if (v30 < 2)
    {
LABEL_29:
      if (v19)
      {
        if ((_DWORD)v8 == v19)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, v8, v6);
        v33 = (v22 + a1) & ~v21;
        if ((_DWORD)v11 == v19)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v33, v11, v37);
        v34 = (v33 + v23 + v24) & ~v24;
        if ((_DWORD)v14 == v19)
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v34, v14, v36);
        else
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))((v34 + v25 + v26) & ~v26, v18, v20);
      }
      return 0;
    }
  }
  v29 = *(unsigned __int8 *)(a1 + v27);
  if (!*(_BYTE *)(a1 + v27))
    goto LABEL_29;
LABEL_20:
  v31 = (v29 - 1) << v28;
  if (v27 > 3)
    v31 = 0;
  if ((_DWORD)v27)
  {
    if (v27 <= 3)
      v32 = v27;
    else
      v32 = 4;
    __asm { BR              X12 }
  }
  return v19 + v31 + 1;
}

void sub_1D2540848(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  size_t v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;

  v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = *(_QWORD *)(sub_1D26CBDD8() - 8);
  if (*(_DWORD *)(v9 + 84) <= v8)
    v10 = v8;
  else
    v10 = *(_DWORD *)(v9 + 84);
  v11 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v11 + 84) <= v10)
    v12 = v10;
  else
    v12 = *(_DWORD *)(v11 + 84);
  v13 = *(_QWORD *)(sub_1D26CBD84() - 8);
  if (*(_DWORD *)(v13 + 84) <= v12)
    v14 = v12;
  else
    v14 = *(_DWORD *)(v13 + 84);
  v15 = ((*(_QWORD *)(v11 + 64)
        + *(unsigned __int8 *)(v13 + 80)
        + ((*(_QWORD *)(v9 + 64)
          + *(unsigned __int8 *)(v11 + 80)
          + ((*(_QWORD *)(v7 + 64) + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))
      + *(_QWORD *)(v13 + 64);
  if (a3 <= v14)
  {
    v16 = 0u;
  }
  else if (v15 <= 3)
  {
    v18 = ((a3 - v14 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v18))
    {
      v16 = 4u;
    }
    else if (v18 >= 0x100)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 > 1;
    }
  }
  else
  {
    v16 = 1u;
  }
  if (v14 < a2)
  {
    v17 = ~v14 + a2;
    if (v15 < 4)
    {
      if ((_DWORD)v15)
      {
        v19 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if ((_DWORD)v15 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if ((_DWORD)v15 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_1D2540B68()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED963350)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED9632D8);
    sub_1D2536488((unint64_t *)&unk_1ED9632A0, &qword_1ED9632D8, MEMORY[0x1E0D0F968]);
    sub_1D2536488((unint64_t *)&unk_1ED9632C8, &qword_1ED9632D8, MEMORY[0x1E0D0F990]);
    sub_1D2536488(&qword_1ED9632B0, &qword_1ED9632D8, MEMORY[0x1E0D0F970]);
    sub_1D2536488((unint64_t *)&unk_1ED9632B8, &qword_1ED9632D8, MEMORY[0x1E0D0F978]);
    v0 = sub_1D26CBD60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED963350);
  }
}

uint64_t type metadata accessor for ChronoMetadataStore.HostConfigurationStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.HostConfigurationStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.HostConfigurationStore.allHosts<A>(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutableHostConfigurationStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutableHostConfigurationStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableHostConfigurationStore.set<A>(host:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableHostConfigurationStore.set(hostIdentity:hostType:activationState:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutableHostConfigurationStore.remove(hostIdentity:hostType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

void type metadata accessor for RBColorMode(uint64_t a1)
{
  sub_1D2536754(a1, (unint64_t *)&unk_1EFC822F8);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1D2540D44(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D2540D64(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED96D540);
}

void type metadata accessor for CGPath(uint64_t a1)
{
  sub_1D2536754(a1, (unint64_t *)&unk_1EFC82308);
}

void type metadata accessor for BSSqliteDatabaseConnectionDataProtectionClass(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED9620F0);
}

void type metadata accessor for FileProtectionType(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED96C048);
}

void type metadata accessor for CHSTintAccentedDesaturatedMode(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED963CC0);
}

void type metadata accessor for CHSColorSchemes(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED96E338);
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED96FCC0);
}

void type metadata accessor for CHSPlatform(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1EFC82318);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED9638B0);
}

void type metadata accessor for RBDrawableStatisticsKey(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED96C068);
}

uint64_t sub_1D2540E54()
{
  return sub_1D25369B0(&qword_1EFC82320, (uint64_t (*)(uint64_t))type metadata accessor for RBDrawableStatisticsKey, (uint64_t)&unk_1D26CF5E4);
}

uint64_t sub_1D2540E80()
{
  return sub_1D25369B0(&qword_1EFC82328, (uint64_t (*)(uint64_t))type metadata accessor for RBDrawableStatisticsKey, (uint64_t)&unk_1D26CF5BC);
}

uint64_t sub_1D2540EAC()
{
  return sub_1D25369B0(&qword_1EFC82330, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1D26CF72C);
}

uint64_t sub_1D2540ED8()
{
  return sub_1D25369B0(&qword_1EFC82338, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1D26CF700);
}

uint64_t sub_1D2540F04()
{
  return sub_1D25369B0(&qword_1EFC82340, (uint64_t (*)(uint64_t))type metadata accessor for CHSColorSchemes, (uint64_t)&unk_1D26CF858);
}

uint64_t sub_1D2540F30()
{
  return sub_1D25369B0(&qword_1EFC82348, (uint64_t (*)(uint64_t))type metadata accessor for CHSColorSchemes, (uint64_t)&unk_1D26CF824);
}

uint64_t sub_1D2540F5C()
{
  return sub_1D25369B0(&qword_1EFC82350, (uint64_t (*)(uint64_t))type metadata accessor for CHSColorSchemes, (uint64_t)&unk_1D26CF884);
}

uint64_t sub_1D2540F88()
{
  return sub_1D25369B0(&qword_1EFC82358, (uint64_t (*)(uint64_t))type metadata accessor for CHSColorSchemes, (uint64_t)&unk_1D26CF8C0);
}

uint64_t sub_1D2540FB4()
{
  return sub_1D25369B0(&qword_1EFC82360, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_1D26CF9F4);
}

uint64_t sub_1D2540FE0()
{
  return sub_1D25369B0(&qword_1EFC82368, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_1D26CF9C8);
}

uint64_t sub_1D254100C()
{
  return sub_1D25369B0(&qword_1EFC82370, (uint64_t (*)(uint64_t))type metadata accessor for FileProtectionType, (uint64_t)&unk_1D26CFA64);
}

uint64_t sub_1D2541038()
{
  return sub_1D25369B0(&qword_1EFC82378, (uint64_t (*)(uint64_t))type metadata accessor for CGPath, (uint64_t)&unk_1D26CFB30);
}

uint64_t sub_1D2541064()
{
  return sub_1D25369B0(&qword_1EFC82380, (uint64_t (*)(uint64_t))type metadata accessor for CGPath, (uint64_t)&unk_1D26CFB5C);
}

uint64_t sub_1D2541090()
{
  return sub_1D25369B0(&qword_1ED96FCB8, (uint64_t (*)(uint64_t))type metadata accessor for URLResourceKey, (uint64_t)&unk_1D26CF79C);
}

uint64_t sub_1D25410BC()
{
  return sub_1D25369B0(&qword_1ED96C060, (uint64_t (*)(uint64_t))type metadata accessor for RBDrawableStatisticsKey, (uint64_t)&unk_1D26CF64C);
}

uint64_t sub_1D25410E8(double a1)
{
  void *v1;
  uint64_t result;
  void *v3;
  _BYTE v4[40];
  _QWORD v5[5];

  v5[3] = MEMORY[0x1E0DEB070];
  v5[4] = &off_1E93D5370;
  *(double *)v5 = a1;
  sub_1D2538510((uint64_t)v5, (uint64_t)v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);

    v1 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
    return (uint64_t)v1;
  }
  if ((swift_dynamicCast() & 1) != 0
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    v1 = v3;
    goto LABEL_9;
  }
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t sub_1D25412CC(uint64_t a1)
{
  void *v2;
  uint64_t result;
  void *v4;
  _BYTE v5[40];
  _QWORD v6[5];

  v6[3] = sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
  v6[4] = &off_1E93D56A0;
  v6[0] = a1;
  sub_1D2538510((uint64_t)v6, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);

    v2 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
    return (uint64_t)v2;
  }
  if ((swift_dynamicCast() & 1) != 0
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    v2 = v4;
    goto LABEL_9;
  }
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t sub_1D25414B0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](86);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D254164C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](60);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D25417A4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v0 = sub_1D26CBDD8();
  v17 = *(_QWORD *)(v0 - 8);
  v18 = v0;
  MEMORY[0x1E0C80A78](v0);
  v16 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = 0;
  v20 = 0xE000000000000000;
  v2 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](163);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v3 = v22;
  sub_1D2557230(v2);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v3)
  {
    swift_bridgeObjectRelease();
    v19 = 0;
    v20 = 0xE000000000000000;
    v5 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    MEMORY[0x1D8239188](57);
    v21 = v5;
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CE0B8();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    v7 = v16;
    v6 = v17;
    v8 = v18;
    (*(void (**)(char *, _QWORD, uint64_t))(v17 + 104))(v16, *MEMORY[0x1E0D0FD28], v18);
    v9 = sub_1D26CBDCC();
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v7, v8);
    if (v9 < 0)
    {
      __break(1u);
    }
    else
    {
      v10 = sub_1D253FA04(v9);
      v12 = v11;
      v14 = v13;
      sub_1D2641480(v10, v11, v13);
      sub_1D253FBE8(v10, v12, v14);
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D2557230(v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = 0;
      v20 = 0xE000000000000000;
      v15 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
      MEMORY[0x1D8239188](16);
      sub_1D26CDA04();
      sub_1D26CE0B8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D2557230(v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1D2541E1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  result = 0;
  v4 = (uint64_t *)(a1 + 32);
  do
  {
    v6 = *v4++;
    v5 = v6;
    if ((v6 & ~result) == 0)
      v5 = 0;
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1D2541E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ExtensionMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2541E98(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 3)
    return sub_1D253FE08(result, a2);
  if (a3 == 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1D2541EBC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D253EE04(a1, a2);
  return a1;
}

uint64_t sub_1D2541ED0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1D253FE08(a1, a2);
  return a1;
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1D823A430](a1, v6, a5);
}

void type metadata accessor for FileAttributeKey(uint64_t a1)
{
  sub_1D2536754(a1, (unint64_t *)&unk_1ED96BFF0);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED96FBC8);
}

void type metadata accessor for RBLayerCopyImageKey(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED96C040);
}

void type metadata accessor for CHSTintFilterStyle(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1ED96D520);
}

void type metadata accessor for CHSWidgetLocation(uint64_t a1)
{
  sub_1D2536754(a1, &qword_1EFC823E8);
}

uint64_t sub_1D2541F74()
{
  return sub_1D25369B0(&qword_1EFC823F0, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D26CFD7C);
}

uint64_t sub_1D2541FA0()
{
  return sub_1D25369B0(&qword_1EFC823F8, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D26CFD50);
}

uint64_t sub_1D2541FCC()
{
  return sub_1D25369B0(&qword_1EFC82400, (uint64_t (*)(uint64_t))type metadata accessor for RBLayerCopyImageKey, (uint64_t)&unk_1D26CFE8C);
}

uint64_t sub_1D2541FF8()
{
  return sub_1D25369B0(&qword_1EFC82408, (uint64_t (*)(uint64_t))type metadata accessor for RBLayerCopyImageKey, (uint64_t)&unk_1D26CFE64);
}

uint64_t sub_1D2542024()
{
  return sub_1D25369B0(&qword_1EFC82410, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1D26CFFCC);
}

uint64_t sub_1D2542050()
{
  return sub_1D25369B0((unint64_t *)&unk_1EFC82418, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1D26CFFA0);
}

uint64_t sub_1D254207C()
{
  return sub_1D25369B0((unint64_t *)&unk_1ED96BFE0, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1D26D003C);
}

uint64_t sub_1D25420A8()
{
  return sub_1D25369B0((unint64_t *)&qword_1ED96EE38, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1D26D0124);
}

uint64_t sub_1D25420D4()
{
  return sub_1D25369B0(&qword_1ED96FBC0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1D26CFF74);
}

uint64_t sub_1D2542100()
{
  return sub_1D25369B0(&qword_1ED96C038, (uint64_t (*)(uint64_t))type metadata accessor for RBLayerCopyImageKey, (uint64_t)&unk_1D26CFEF4);
}

uint64_t sub_1D254212C()
{
  return sub_1D25369B0(&qword_1ED96E110, (uint64_t (*)(uint64_t))type metadata accessor for NSKeyValueChangeKey, (uint64_t)&unk_1D26CFDEC);
}

uint64_t dispatch thunk of RemoteWidgetExtensionProviding.remoteWidgetExtensionsDidChange.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteWidgetExtensionProviding.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t RemoteExtensionStore.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t RemoteExtensionStore.init(_:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

unint64_t RemoteExtensionStore.allExtensions()()
{
  unint64_t v0;

  swift_retain();
  v0 = sub_1D2664B94();
  swift_release();
  return v0;
}

uint64_t RemoteExtensionStore.update(remoteWidgetExtensionInfo:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  _QWORD v8[4];

  v2 = *(_QWORD *)(v1 + 16);
  v8[2] = a1;
  v3 = *(_QWORD *)(v2 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_allocObject();
  v4 = sub_1D2672BD8();
  v5 = *(_QWORD *)(v2 + 128);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  swift_retain();
  sub_1D255A944(0xD00000000000001ALL, 0x80000001D26DE0A0, v3, (void (*)(uint64_t))sub_1D25425E0, (uint64_t)v8, (uint64_t)v4);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();
  sub_1D265505C();
  return swift_release();
}

void RemoteExtensionStore.removeExtension(with:)(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  id v8;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD **)(v3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  v5 = sub_1D2672BD8();
  v6 = *(_QWORD *)(v3 + 128);
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  v8 = a1;
  swift_retain();
  os_unfair_lock_lock(v7);
  swift_retain();
  sub_1D255A95C(0xD00000000000001ALL, 0x80000001D26DE0C0, v4, (uint64_t)v5, v8);

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  sub_1D265505C();
  swift_release();

}

uint64_t sub_1D254240C(uint64_t a1, void *a2)
{
  return ChronoMetadataStore.MutableRemoteExtensionStore.removeExtension(with:)(a2);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RemoteExtensionStore.removeAllExtensions()()
{
  uint64_t v0;

  sub_1D264FFC0(0xD00000000000001DLL, 0x80000001D26DE0E0, *(_QWORD *)(v0 + 16));
}

uint64_t RemoteExtensionStore.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t RemoteExtensionStore.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_1D25424A0()
{
  unint64_t v0;

  swift_retain();
  v0 = sub_1D2664B94();
  swift_release();
  return v0;
}

uint64_t sub_1D25424F0(uint64_t a1)
{
  _QWORD v2[4];

  v2[2] = a1;
  return ChronoMetadataStore.update(reason:_:)(0xD00000000000001ALL, 0x80000001D26DE0A0, (void (*)(uint64_t))sub_1D254269C, (uint64_t)v2);
}

void sub_1D2542544(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v3 = a1;
  sub_1D2672E50(0xD00000000000001ALL, 0x80000001D26DE0C0, v2, v3);

}

uint64_t sub_1D25425AC()
{
  uint64_t v0;

  return sub_1D264FFC0(0xD00000000000001DLL, 0x80000001D26DE0E0, *(_QWORD *)(*(_QWORD *)v0 + 16));
}

uint64_t sub_1D25425E0()
{
  uint64_t v0;

  return ChronoMetadataStore.MutableRemoteExtensionStore.update(remoteWidgetExtensionInfo:)(*(_QWORD *)(v0 + 16));
}

uint64_t dispatch thunk of RemoteExtensionRetrieving.allExtensions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteExtensionStoring.update(remoteWidgetExtensionInfo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of RemoteExtensionStoring.removeExtension(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of RemoteExtensionStoring.removeAllExtensions()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for RemoteExtensionStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for RemoteExtensionStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteExtensionStore.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1D254269C()
{
  return sub_1D25425E0();
}

uint64_t dispatch thunk of DescriptorServicing.start(descriptorCache:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of DescriptorServicing.reloadDescriptors(for:userInitiated:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of DescriptorServicing.reloadDescriptors(for:userInitiated:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 48))();
}

{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t dispatch thunk of DescriptorServicing.getDescriptorsReloadingIfNecessary(forExtensionBundleIdentifier:userInitiated:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 64))();
}

uint64_t dispatch thunk of DescriptorServicing.getDescriptorsReloadingIfNecessary(forContainerBundleIdentifier:userInitiated:reason:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 72))();
}

uint64_t dispatch thunk of DescriptorServicing.modifyDescriptorEnablement(_:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 80))();
}

uint64_t dispatch thunk of DescriptorServicing.discoverDescriptors(userInitiated:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 88))();
}

uint64_t dispatch thunk of DescriptorServicing.reloadConfigurationRecommendations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_1D25426F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t result;
  _QWORD v8[2];

  v0 = sub_1D26CDD88();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D26CDD40();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v4);
  v6 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v6);
  sub_1D2544658();
  sub_1D26CD098();
  v8[1] = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, v5, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D25369F0((unint64_t *)&qword_1ED96EE28, &qword_1ED96EE20);
  sub_1D26CDFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D8], v0);
  result = sub_1D26CDDB8();
  qword_1ED96DDF0 = result;
  return result;
}

uint64_t sub_1D25428B4()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D25428C4()
{
  return swift_weakLoadStrong();
}

uint64_t sub_1D25428D4()
{
  sub_1D2542E70();
  return swift_release();
}

uint64_t sub_1D25428F8()
{
  return sub_1D2542E70();
}

void sub_1D2542900()
{
  sub_1D2542F38();
}

id sub_1D254291C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  objc_class *v5;
  objc_super v7;

  v5 = (objc_class *)type metadata accessor for UserDefault._KVOUserDefaultsObserver(0, *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x50), *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v4) + 0x58), a4);
  v7.receiver = v4;
  v7.super_class = v5;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1D2542968()
{
  return swift_weakDestroy();
}

uint64_t UserDefault.__allocating_init(domain:key:defaultValue:appleInternalOnly:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int has_internal_ui;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  has_internal_ui = os_variant_has_internal_ui();
  v14 = sub_1D25434F4(a1, a2, a3, a4, a5, a6, has_internal_ui);
  v15 = *(_QWORD *)(v6 + 80);
  v17 = type metadata accessor for UserDefault.AppleInternalOnlyOption(0, v15, *(_QWORD *)(v6 + 88), v16);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(a6, v17);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a5, v15);
  return v14;
}

void UserDefault.deinit()
{
  id *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  id *v4;
  id v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);

  v1 = *v0;
  v2 = *((_QWORD *)*v0 + 20);
  v3 = *(id *)((char *)v0 + v2);
  if (v3)
  {
    v4 = v0;
    v5 = v0[2];
    swift_bridgeObjectRetain();
    v6 = v3;
    v7 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    objc_msgSend(v5, sel_removeObserver_forKeyPath_, v6, v7);

    v8 = *(id *)((char *)v4 + v2);
    if (v8)
    {
      v9 = v8;
      sub_1D2542E70();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, _QWORD))(*(_QWORD *)(v1[10] - 8) + 8))((char *)v4 + *((_QWORD *)*v4 + 15), v1[10]);
      v10 = (char *)v4 + *((_QWORD *)*v4 + 16);
      v11 = sub_1D26CDF38();
      v12 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
      v12(v10, v11);
      swift_release();
      swift_release();

      swift_release();
      v12((char *)v4 + *((_QWORD *)*v4 + 22), v11);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t UserDefault.__deallocating_deinit()
{
  UserDefault.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2542BD0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 168));
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1D2542C3C(v0, &v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v4;
}

uint64_t sub_1D2542C3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  v10 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D253820C((uint64_t)v6);
  sub_1D26CE394();
  result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v8 = v10;
  *a2 = v9;
  a2[1] = v8;
  return result;
}

void (*sub_1D2542D28(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[3] = malloc(v6);
  v3[4] = malloc(v6);
  sub_1D2536AF8();
  return sub_1D2542DA8;
}

void sub_1D2542DA8(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void *, uint64_t);

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 8);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 24), v4, v5);
    sub_1D2537F38((uint64_t)v3);
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
  }
  else
  {
    sub_1D2537F38(*(_QWORD *)(*(_QWORD *)a1 + 32));
    v7 = *(void (**)(void *, uint64_t))(v6 + 8);
  }
  v7(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_1D2542E40()
{
  return swift_retain();
}

uint64_t sub_1D2542E50()
{
  return sub_1D2542BD0();
}

uint64_t sub_1D2542E70()
{
  return swift_weakAssign();
}

id sub_1D2542E84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  objc_class *v3;
  objc_super v5;

  v1 = *MEMORY[0x1E0DEEDD8] & *v0;
  swift_weakInit();
  swift_weakAssign();
  v3 = (objc_class *)type metadata accessor for UserDefault._KVOUserDefaultsObserver(0, *(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v2);
  v5.receiver = v0;
  v5.super_class = v3;
  return objc_msgSendSuper2(&v5, sel_init);
}

id sub_1D2542F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v5;

  v5 = objc_allocWithZone((Class)type metadata accessor for UserDefault._KVOUserDefaultsObserver(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4));
  return sub_1D2542E84();
}

void sub_1D2542F38()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1D2542F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  uint64_t v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  id v35;
  uint64_t v36;
  id v37;
  void *v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  id v61;
  void *v62;
  void *v63;
  id v64;
  id v65;
  void *v66;
  uint64_t result;
  void (*v68)(void);
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  uint64_t v83;
  uint64_t v84;

  v8 = v7;
  v82 = a7;
  v78 = a3;
  v83 = a1;
  v13 = *v8;
  v14 = *(_QWORD *)(*v8 + 80);
  v15 = sub_1D26CDF38();
  v72 = *(_QWORD *)(v15 - 8);
  v73 = v15;
  MEMORY[0x1E0C80A78](v15);
  v71 = (char *)&v68 - v16;
  v80 = *(_QWORD *)(v13 + 88);
  v81 = type metadata accessor for UserDefault.AppleInternalOnlyOption(0, v14, v80, v17);
  v79 = *(_QWORD *)(v81 - 8);
  v18 = MEMORY[0x1E0C80A78](v81);
  v77 = (char *)&v68 - v19;
  v20 = *(_QWORD *)(v14 - 8);
  v21 = MEMORY[0x1E0C80A78](v18);
  v69 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v76 = (char *)&v68 - v23;
  v8[3] = 0;
  v8[4] = 0;
  v24 = *(void (**)(void))(v20 + 56);
  v70 = (uint64_t)v8 + *(_QWORD *)(v13 + 128);
  v24();
  *(uint64_t *)((char *)v8 + *(_QWORD *)(*v8 + 160)) = 0;
  v25 = *(_QWORD *)(*v8 + 168);
  type metadata accessor for UnfairLock();
  v26 = swift_allocObject();
  v27 = (_DWORD *)swift_slowAlloc();
  *v27 = 0;
  *(_QWORD *)(v26 + 16) = v27;
  *(uint64_t *)((char *)v8 + v25) = v26;
  v28 = (uint64_t)v8 + *(_QWORD *)(*v8 + 176);
  v68 = v24;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v24)(v28, 1, 1, v14);
  if (!a2)
    goto LABEL_8;
  v74 = a4;
  v75 = a6;
  v29 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v30 = objc_msgSend(v29, sel_bundleIdentifier);

  if (!v30)
  {
    a4 = v74;
    goto LABEL_9;
  }
  v31 = sub_1D26CD938();
  v33 = v32;

  if (v31 != v83 || v33 != a2)
  {
    v34 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    a4 = v74;
    if ((v34 & 1) != 0)
      goto LABEL_8;
LABEL_9:
    v37 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    swift_bridgeObjectRetain();
    v36 = v83;
    v38 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v37, sel_initWithSuiteName_, v38);

    if (!v35)
      goto LABEL_19;
    goto LABEL_10;
  }
  swift_bridgeObjectRelease();
  a4 = v74;
LABEL_8:
  v35 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v36 = v83;
LABEL_10:
  v8[2] = (uint64_t)v35;
  v8[3] = v36;
  v8[4] = a2;
  swift_bridgeObjectRelease();
  v8[5] = v78;
  v8[6] = a4;
  v39 = (uint64_t)v8 + *(_QWORD *)(*v8 + 120);
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
  v41 = a5;
  v40(v39, a5, v14);
  v42 = v82;
  *((_BYTE *)v8 + *(_QWORD *)(*v8 + 136)) = v82 & 1;
  v43 = v79;
  v44 = v77;
  v45 = v81;
  (*(void (**)(void))(v79 + 16))();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v44, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  }
  else
  {
    v46 = v44;
    v47 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v48 = v76;
    v47(v76, v46, v14);
    if ((v42 & 1) != 0)
    {
      v49 = v69;
      v47(v69, v48, v14);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v20 + 40))(v39, v49, v14);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v48, v14);
      v50 = v71;
      v40((uint64_t)v71, v41, v14);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v68)(v50, 0, 1, v14);
      v51 = v70;
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v72 + 40))(v51, v50, v73);
    }
    swift_endAccess();
  }
  v52 = sub_1D26CC15C();
  v53 = sub_1D26CC144();
  *(uint64_t *)((char *)v8 + *(_QWORD *)(*v8 + 144)) = v53;
  v84 = v53;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0C95F48], v52);
  *(uint64_t *)((char *)v8 + *(_QWORD *)(*v8 + 152)) = sub_1D26CC204();
  v54 = *(_QWORD *)(*v8 + 160);
  v55 = *(void **)((char *)v8 + v54);
  *(uint64_t *)((char *)v8 + v54) = 0;

  type metadata accessor for UserDefault._KVOUserDefaultsObserver(0, v14, v80, v56);
  v57 = swift_retain();
  v61 = sub_1D2542F00(v57, v58, v59, v60);
  swift_release();
  v62 = *(void **)((char *)v8 + v54);
  *(uint64_t *)((char *)v8 + v54) = (uint64_t)v61;

  v63 = *(void **)((char *)v8 + v54);
  if (v63)
  {
    v64 = (id)v8[2];
    v65 = v63;
    swift_bridgeObjectRetain();
    v66 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    objc_msgSend(v64, sel_addObserver_forKeyPath_options_context_, v65, v66, 0, 0);

    return (uint64_t)v8;
  }
  __break(1u);
LABEL_19:
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1D25434F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;

  type metadata accessor for UserDefault(0, *(_QWORD *)(v7 + 80), *(_QWORD *)(v7 + 88), a4);
  swift_allocObject();
  return sub_1D2542F64(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t type metadata accessor for UserDefault.AppleInternalOnlyOption(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault.AppleInternalOnlyOption);
}

uint64_t sub_1D2543588()
{
  return sub_1D25343D8();
}

uint64_t sub_1D25435A8()
{
  return sub_1D25384C8();
}

uint64_t sub_1D25435C8()
{
  return 16;
}

__n128 sub_1D25435D4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t type metadata accessor for _PreferenceUtilities()
{
  return objc_opt_self();
}

uint64_t sub_1D2543604()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;

  v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    v0 = sub_1D26CDF38();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return v0;
}

uint64_t type metadata accessor for UserDefault(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault);
}

uint64_t method lookup function for UserDefault()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of UserDefault.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of UserDefault.wrappedValue.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of UserDefault.projectedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t sub_1D2543728()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D2543730()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

_QWORD *sub_1D2543788(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  size_t v9;
  uint64_t v10;
  uint64_t v13;
  int v14;
  int v15;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(unsigned int *)(v6 + 84);
  if ((_DWORD)v8)
    v9 = *(_QWORD *)(v6 + 64);
  else
    v9 = v7 + 1;
  v10 = *(_DWORD *)(v6 + 80);
  if (v10 <= 7 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0 && v9 <= 0x18)
  {
    if ((_DWORD)v8)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, _QWORD))(v6 + 48))(a2, v8, *(_QWORD *)(a3 + 16)))
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(v4, a2, v5);
        return v4;
      }
    }
    else
    {
      if (!*((_BYTE *)a2 + v7))
        goto LABEL_26;
      v14 = (*((unsigned __int8 *)a2 + v7) - 1) << (8 * v7);
      if (v7 > 3)
        v14 = 0;
      if ((_DWORD)v7)
      {
        if (v7 <= 3)
          v15 = *(_QWORD *)(v6 + 64);
        else
          v15 = 4;
        __asm { BR              X11 }
      }
      if (v14 == -1)
      {
LABEL_26:
        (*(void (**)(_QWORD *, _QWORD *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
        *((_BYTE *)v4 + v7) = 0;
        return v4;
      }
    }
    memcpy(v4, a2, v9);
    return v4;
  }
  v13 = *a2;
  *v4 = *a2;
  v4 = (_QWORD *)(v13 + ((v10 + 16) & ~v10));
  swift_retain();
  return v4;
}

uint64_t sub_1D25438E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(unsigned int *)(v4 + 84);
  if ((_DWORD)v5)
  {
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, v5, v3);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  else
  {
    v7 = *(_QWORD *)(v4 + 64);
    if (!*(_BYTE *)(a1 + v7))
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
    v8 = (*(unsigned __int8 *)(a1 + v7) - 1) << (8 * v7);
    if (v7 > 3)
      v8 = 0;
    if ((_DWORD)v7)
    {
      if (v7 > 3)
        LODWORD(v7) = 4;
      __asm { BR              X11 }
    }
    result = (v8 + 1);
    if (v8 == -1)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  return result;
}

_BYTE *sub_1D25439C8(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
      return a1;
    }
  }
  else
  {
    if (!a2[v8])
      goto LABEL_17;
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = *(_QWORD *)(v6 + 64);
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 == -1)
    {
LABEL_17:
      (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
      a1[v8] = 0;
      return a1;
    }
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

_BYTE *sub_1D2543AF0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  size_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (!(_DWORD)v7)
  {
    v12 = 8 * v8;
    if (a1[v8])
    {
      v13 = (a1[v8] - 1) << v12;
      if (v8 > 3)
        v13 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v14 = *(_QWORD *)(v6 + 64);
        else
          v14 = 4;
        __asm { BR              X12 }
      }
      if (v13 != -1)
      {
        if (!a2[v8] || (a2[v8] - 1) << v12 == -1)
        {
          (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 16))(a1, a2, *(_QWORD *)(a3 + 16));
          a1[v8] = 0;
          return a1;
        }
        goto LABEL_27;
      }
    }
    if (!a2[v8])
      goto LABEL_31;
    v15 = (a2[v8] - 1) << v12;
    if (v8 > 3)
      v15 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v16 = *(_QWORD *)(v6 + 64);
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v11 = v15 + 1;
LABEL_25:
    if (v11)
    {
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_27;
    }
LABEL_31:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 24))(a1, a2, v5);
    return a1;
  }
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  v10 = v9(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v11 = v9(a2, v7, v5);
  if (!v10)
    goto LABEL_25;
  if (!v11)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 16))(a1, a2, v5);
    return a1;
  }
LABEL_27:
  if ((_DWORD)v7)
    v17 = v8;
  else
    v17 = v8 + 1;
  memcpy(a1, a2, v17);
  return a1;
}

_BYTE *sub_1D2543D48(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  int v9;
  int v10;
  size_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (v7)
  {
    if (!(*(unsigned int (**)(_BYTE *, _QWORD, _QWORD))(v6 + 48))(a2, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16)))
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
      return a1;
    }
  }
  else
  {
    if (!a2[v8])
      goto LABEL_17;
    v9 = (a2[v8] - 1) << (8 * v8);
    if (v8 > 3)
      v9 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v10 = *(_QWORD *)(v6 + 64);
      else
        v10 = 4;
      __asm { BR              X11 }
    }
    if (v9 == -1)
    {
LABEL_17:
      (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
      a1[v8] = 0;
      return a1;
    }
  }
  if (v7)
    v11 = v8;
  else
    v11 = v8 + 1;
  memcpy(a1, a2, v11);
  return a1;
}

_BYTE *sub_1D2543E70(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  uint64_t (*v9)(_BYTE *, uint64_t, uint64_t);
  int v10;
  int v11;
  char v12;
  int v13;
  int v14;
  int v15;
  int v16;
  size_t v17;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  if (!(_DWORD)v7)
  {
    v12 = 8 * v8;
    if (a1[v8])
    {
      v13 = (a1[v8] - 1) << v12;
      if (v8 > 3)
        v13 = 0;
      if ((_DWORD)v8)
      {
        if (v8 <= 3)
          v14 = *(_QWORD *)(v6 + 64);
        else
          v14 = 4;
        __asm { BR              X12 }
      }
      if (v13 != -1)
      {
        if (!a2[v8] || (a2[v8] - 1) << v12 == -1)
        {
          (*(void (**)(_BYTE *, _BYTE *, _QWORD))(v6 + 32))(a1, a2, *(_QWORD *)(a3 + 16));
          a1[v8] = 0;
          return a1;
        }
        goto LABEL_27;
      }
    }
    if (!a2[v8])
      goto LABEL_31;
    v15 = (a2[v8] - 1) << v12;
    if (v8 > 3)
      v15 = 0;
    if ((_DWORD)v8)
    {
      if (v8 <= 3)
        v16 = *(_QWORD *)(v6 + 64);
      else
        v16 = 4;
      __asm { BR              X11 }
    }
    v11 = v15 + 1;
LABEL_25:
    if (v11)
    {
      (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(a1, v5);
      goto LABEL_27;
    }
LABEL_31:
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 40))(a1, a2, v5);
    return a1;
  }
  v9 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v6 + 48);
  v10 = v9(a1, *(unsigned int *)(v6 + 84), *(_QWORD *)(a3 + 16));
  v11 = v9(a2, v7, v5);
  if (!v10)
    goto LABEL_25;
  if (!v11)
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v6 + 32))(a1, a2, v5);
    return a1;
  }
LABEL_27:
  if ((_DWORD)v7)
    v17 = v8;
  else
    v17 = v8 + 1;
  memcpy(a1, a2, v17);
  return a1;
}

uint64_t sub_1D25440C8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  char v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  unsigned int v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = v5 - 1;
  if (!v5)
    v6 = 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (!v5)
    ++v7;
  if (!a2)
    return 0;
  v8 = a2 - v6;
  if (a2 > v6)
  {
    v9 = 8 * v7;
    if (v7 > 3)
      goto LABEL_8;
    v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      v10 = *(_DWORD *)(a1 + v7);
      if (v10)
        goto LABEL_15;
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2)
          goto LABEL_24;
LABEL_8:
        v10 = *(unsigned __int8 *)(a1 + v7);
        if (!*(_BYTE *)(a1 + v7))
          goto LABEL_24;
LABEL_15:
        v12 = (v10 - 1) << v9;
        if (v7 > 3)
          v12 = 0;
        if ((_DWORD)v7)
        {
          if (v7 <= 3)
            v13 = v7;
          else
            v13 = 4;
          __asm { BR              X12 }
        }
        return v6 + v12 + 1;
      }
      v10 = *(unsigned __int16 *)(a1 + v7);
      if (*(_WORD *)(a1 + v7))
        goto LABEL_15;
    }
  }
LABEL_24:
  if (v5 < 2)
    return 0;
  v14 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v14 >= 2)
    return v14 - 1;
  else
    return 0;
}

void sub_1D2544208(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  size_t v10;
  BOOL v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  int v15;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v8)
    v10 = *(_QWORD *)(v7 + 64);
  else
    v10 = *(_QWORD *)(v7 + 64) + 1;
  v11 = a3 >= v9;
  v12 = a3 - v9;
  if (v12 != 0 && v11)
  {
    if (v10 > 3)
    {
      v6 = 1u;
      if (v9 < a2)
        goto LABEL_17;
      goto LABEL_24;
    }
    v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v13))
    {
      v6 = 4u;
      if (v9 < a2)
      {
LABEL_17:
        v14 = ~v9 + a2;
        if (v10 < 4)
        {
          if ((_DWORD)v10)
          {
            v15 = v14 & ~(-1 << (8 * v10));
            bzero(a1, v10);
            if ((_DWORD)v10 == 3)
            {
              *a1 = v15;
              *((_BYTE *)a1 + 2) = BYTE2(v15);
            }
            else if ((_DWORD)v10 == 2)
            {
              *a1 = v15;
            }
            else
            {
              *(_BYTE *)a1 = v15;
            }
          }
        }
        else
        {
          bzero(a1, v10);
          *(_DWORD *)a1 = v14;
        }
        __asm { BR              X10 }
      }
LABEL_24:
      __asm { BR              X12 }
    }
    if (v13 >= 0x100)
      v6 = 2;
    else
      v6 = v13 > 1;
  }
  if (v9 < a2)
    goto LABEL_17;
  goto LABEL_24;
}

void sub_1D254441C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1D2544424()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1D2544444()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1D254444C()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1D254445C()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t sub_1D2544468(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  int v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  if (*(_DWORD *)(v2 + 84))
    return (*(uint64_t (**)(void))(v2 + 48))();
  v4 = *(_QWORD *)(v2 + 64);
  if (!*(_BYTE *)(a1 + v4))
    return 0;
  v5 = (*(unsigned __int8 *)(a1 + v4) - 1) << (8 * v4);
  if (v4 > 3)
    v5 = 0;
  if (!(_DWORD)v4)
    return (v5 + 1);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D25444CC + 4 * byte_1D26D034A[(v4 - 1)]))();
}

void sub_1D2544504(_BYTE *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  unsigned int v7;
  int v8;
  int v9;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned int *)(v4 + 84);
  v6 = *(_QWORD *)(v4 + 64);
  if (v5 >= a2)
  {
    if ((_DWORD)v5)
    {
      if (!(_DWORD)a2)
        return;
    }
    else
    {
      a1[v6] = 0;
      if (!(_DWORD)a2)
        return;
    }
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 56))(a1, a2, v5);
    return;
  }
  v7 = ~(_DWORD)v5 + a2;
  if (v6 >= 4)
  {
    bzero(a1, v6);
    *(_DWORD *)a1 = v7;
    LOBYTE(v8) = 1;
    if ((_DWORD)v5)
      return;
    goto LABEL_17;
  }
  v8 = (v7 >> (8 * v6)) + 1;
  if (!(_DWORD)v6)
  {
LABEL_16:
    if ((_DWORD)v5)
      return;
    goto LABEL_17;
  }
  v9 = v7 & ~(-1 << (8 * v6));
  bzero(a1, v6);
  if ((_DWORD)v6 == 3)
  {
    *(_WORD *)a1 = v9;
    a1[2] = BYTE2(v9);
    goto LABEL_16;
  }
  if ((_DWORD)v6 == 2)
  {
    *(_WORD *)a1 = v9;
    if ((_DWORD)v5)
      return;
    goto LABEL_17;
  }
  *a1 = v9;
  if (!(_DWORD)v5)
LABEL_17:
    a1[v6] = v8;
}

uint64_t sub_1D254460C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for UserDefault._KVOUserDefaultsObserver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for UserDefault._KVOUserDefaultsObserver);
}

unint64_t sub_1D2544658()
{
  unint64_t result;

  result = qword_1ED96EE50;
  if (!qword_1ED96EE50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96EE50);
  }
  return result;
}

uint64_t sub_1D2544694()
{
  uint64_t v0;
  uint64_t v1;

  v0 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  __swift_allocate_value_buffer(v0, qword_1ED96C368);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED96C368);
  return sub_1D25446DC(v1);
}

uint64_t sub_1D25446DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void (*v12)(_QWORD *, _QWORD, uint64_t);
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  int v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  _QWORD v20[4];

  v2 = sub_1D26CBBB0();
  v19 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v20[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v20[-1] - v6;
  v8 = sub_1D26CBBEC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (_QWORD *)((char *)&v20[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D26CBBC8();
  v12 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104);
  v12(v11, *MEMORY[0x1E0D0F660], v8);
  if ((sub_1D26CBBD4() & 1) == 0)
  {
    (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v11, v8);
    *v11 = 0x3FE999999999999ALL;
    v12(v11, *MEMORY[0x1E0D0F668], v8);
  }
  sub_1D26CBD9C();
  sub_1D26CBD90();
  __swift_project_boxed_opaque_existential_0(v20, v20[3]);
  sub_1D26CBCB8();
  v13 = v19;
  (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v5, *MEMORY[0x1E0D0F608], v2);
  v14 = sub_1D26CBBA4();
  v15 = *(void (**)(char *, uint64_t))(v13 + 8);
  v15(v5, v2);
  v15(v7, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  if ((v14 & 1) != 0)
    v16 = 0x40000000;
  else
    v16 = 1065353216;
  v17 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  result = (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t))(v9 + 32))(a1 + *(int *)(v17 + 24), v11, v8);
  *(_DWORD *)a1 = 0;
  *(_BYTE *)(a1 + 4) = 1;
  *(_DWORD *)(a1 + 8) = v16;
  *(_BYTE *)(a1 + 12) = 0;
  return result;
}

uint64_t static RBImageSnapshotter.RBImageOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED96C388 != -1)
    swift_once();
  v2 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED96C368);
  swift_beginAccess();
  return sub_1D2534120(v3, a1, type metadata accessor for RBImageSnapshotter.RBImageOptions);
}

uint64_t static RBImageSnapshotter.RBImageOptions.default.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED96C388 != -1)
    swift_once();
  v2 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED96C368);
  swift_beginAccess();
  sub_1D2544A20(a1, v3);
  swift_endAccess();
  return sub_1D25340E4(a1, type metadata accessor for RBImageSnapshotter.RBImageOptions);
}

uint64_t sub_1D2544A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t (*static RBImageSnapshotter.RBImageOptions.default.modify())()
{
  uint64_t v0;

  if (qword_1ED96C388 != -1)
    swift_once();
  v0 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED96C368);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D2544ADC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_1D26CBBEC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  __swift_allocate_value_buffer(v4, qword_1EFC82538);
  v5 = (_BYTE *)__swift_project_value_buffer(v4, (uint64_t)qword_1EFC82538);
  *v3 = 0x3FE999999999999ALL;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0D0F668], v0);
  v6 = sub_1D253DB20(MEMORY[0x1E0DEE9D8]);
  *v5 = 1;
  result = (*(uint64_t (**)(_BYTE *, _QWORD *, uint64_t))(v1 + 32))(&v5[*(int *)(v4 + 20)], v3, v0);
  *(_QWORD *)&v5[*(int *)(v4 + 24)] = v6;
  return result;
}

uint64_t static CAMLSnapshotter.CAMLOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D253D948(qword_1EFC82170, type metadata accessor for CAMLSnapshotter.CAMLOptions, (uint64_t)qword_1EFC82538, a1);
}

uint64_t sub_1D2544BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = type metadata accessor for RBLayer.SnapshotFormat(0);
  __swift_allocate_value_buffer(v0, qword_1ED96C5F8);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1ED96C5F8);
  if (qword_1ED96C388 != -1)
    swift_once();
  v2 = type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED96C368);
  swift_beginAccess();
  return sub_1D2534120(v3, v1, type metadata accessor for RBImageSnapshotter.RBImageOptions);
}

uint64_t static RBLayer.SnapshotFormat.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D253D948(&qword_1ED96C618, type metadata accessor for RBLayer.SnapshotFormat, (uint64_t)qword_1ED96C5F8, a1);
}

uint64_t type metadata accessor for RBLayer.SnapshotFormat(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED96C768);
}

uint64_t sub_1D2544CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = type metadata accessor for CALayer.SnapshotFormat(0);
  __swift_allocate_value_buffer(v0, qword_1EFC82550);
  v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EFC82550);
  v2 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t static CALayer.SnapshotFormat.default.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D253D948(qword_1EFC82180, type metadata accessor for CALayer.SnapshotFormat, (uint64_t)qword_1EFC82550, a1);
}

uint64_t type metadata accessor for CALayer.SnapshotFormat(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96D548);
}

uint64_t sub_1D2544D84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v1 = v0;
  v2 = type metadata accessor for CAMLSnapshotter(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for CALayer.SnapshotFormat(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2534120(v1, (uint64_t)v11, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C418);
    v13 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C540);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = 0xD00000000000001FLL;
    v14[3] = 0x80000001D26DE540;
  }
  else
  {
    sub_1D2539ADC((uint64_t)v11, (uint64_t)v8, type metadata accessor for CAMLSnapshotter.CAMLOptions);
    sub_1D2534120((uint64_t)v8, (uint64_t)v4 + *(int *)(v2 + 20), type metadata accessor for CAMLSnapshotter.CAMLOptions);
    *v4 = 0xD00000000000001BLL;
    v4[1] = 0x80000001D26DE560;
    sub_1D25340E4((uint64_t)v8, type metadata accessor for CAMLSnapshotter.CAMLOptions);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C418);
    v13 = swift_allocObject();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82568);
    v14 = (_QWORD *)swift_allocObject();
    sub_1D2539ADC((uint64_t)v4, (uint64_t)v14 + *(_QWORD *)(*v14 + 128), type metadata accessor for CAMLSnapshotter);
  }
  *(_QWORD *)(v13 + 16) = v14;
  return v13;
}

void sub_1D2544F94()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1D26CD914();
  v2 = objc_msgSend(v0, sel_createWorkLoopWithLabel_qos_, v1, 9);

  qword_1ED977FA8 = (uint64_t)v2;
}

void sub_1D254500C(void **a1, uint64_t *a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(void **)(v3 + 32);
  *(_QWORD *)(v3 + 32) = v2;
  v5 = v2;

}

id sub_1D2545060()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 32);
}

void sub_1D2545090(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;

}

uint64_t (*sub_1D25450D4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D2545110@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25452C0(&OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], a1);
}

uint64_t sub_1D2545124(uint64_t a1)
{
  return sub_1D2545340(a1, &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258]);
}

uint64_t (*sub_1D2545138())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D254517C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t (*a3)(_QWORD)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *a1 + *a2;
  swift_beginAccess();
  v7 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a4, v6, v7);
}

uint64_t sub_1D25451EC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v15 - v11, a1, v9);
  v13 = *a2 + *a6;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v13, v12, v9);
  return swift_endAccess();
}

uint64_t sub_1D25452AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25452C0(&OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], a1);
}

uint64_t sub_1D25452C0@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *a1;
  swift_beginAccess();
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t sub_1D254532C(uint64_t a1)
{
  return sub_1D2545340(a1, &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170]);
}

uint64_t sub_1D2545340(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *a2;
  swift_beginAccess();
  v7 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, a1, v7);
  return swift_endAccess();
}

uint64_t (*sub_1D25453B4())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1D25453FC(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1D2538510(a1, (uint64_t)v5);
  v3 = *a2 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1D2538F38(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1D2545468@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  return sub_1D2538510(v3, a1);
}

uint64_t sub_1D25454B8(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1D2538F38(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1D2545518())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t LayerSnapshotter.Result.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  unint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  unsigned __int8 v7;
  id v8;
  unint64_t v10;

  v2 = *(void **)v0;
  v1 = *(_QWORD *)(v0 + 8);
  if (*(_BYTE *)(v0 + 16))
  {
    if (*(_BYTE *)(v0 + 16) != 1)
    {
      sub_1D26CE0A0();
      swift_bridgeObjectRelease();
      v10 = 0xD000000000000020;
      sub_1D26CDA04();
      sub_1D26CDA04();
      return v10;
    }
    v3 = 0xD00000000000001BLL;
    if (!v2)
      return v3;
    v10 = 0;
    v4 = v2;
    sub_1D26CE0A0();
    sub_1D26CDA04();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
    sub_1D26CE190();
    sub_1D26CDA04();
    v5 = v2;
    v6 = v1;
    v7 = 1;
  }
  else
  {
    v10 = 0;
    v8 = v2;
    sub_1D26CE0A0();
    sub_1D26CDA04();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
    sub_1D26CE190();
    sub_1D26CDA04();
    v5 = v2;
    v6 = v1;
    v7 = 0;
  }
  sub_1D2545748(v5, v6, v7);
  return v10;
}

void sub_1D2545748(void *a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
  {
    swift_bridgeObjectRelease();
  }
  else if (a3 <= 1u)
  {

  }
}

char *LayerSnapshotter.__allocating_init(renderBoxFormat:coreAnimationFormat:logger:screenshotManager:dataProtectionMonitor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30[2];

  v28 = a4;
  v9 = sub_1D26CC09C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for RBImageSnapshotter(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RBLayer.SnapshotFormat(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1;
  sub_1D2534120(a1, (uint64_t)v18, v19);
  sub_1D2539ADC((uint64_t)v18, (uint64_t)v15, type metadata accessor for RBImageSnapshotter.RBImageOptions);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C420);
  v20 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C548);
  v21 = swift_allocObject();
  sub_1D2539ADC((uint64_t)v15, v21 + *(_QWORD *)(*(_QWORD *)v21 + 128), type metadata accessor for RBImageSnapshotter);
  *(_QWORD *)(v20 + 16) = v21;
  v22 = sub_1D2544D84();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a3, v9);
  sub_1D2538510(a5, (uint64_t)v30);
  if (qword_1ED96C1B8 != -1)
    swift_once();
  v23 = (void *)qword_1ED977FA8;
  type metadata accessor for LayerSnapshotter(0);
  swift_allocObject();
  v24 = v23;
  v25 = sub_1D2548008(v20, v22, (uint64_t)v12, v28, v30, (uint64_t)v24);
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a3, v9);
  sub_1D25340E4(a2, type metadata accessor for CALayer.SnapshotFormat);
  sub_1D25340E4(v29, type metadata accessor for RBLayer.SnapshotFormat);
  return v25;
}

uint64_t type metadata accessor for LayerSnapshotter(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED96B548);
}

uint64_t sub_1D25459E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD aBlock[6];

  v5 = v4;
  v23 = a3;
  v26 = a2;
  v8 = *v5;
  v9 = sub_1D26CD074();
  v25 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = v5[7];
  sub_1D2537078(a1, (uint64_t)v15, &qword_1ED96C350);
  v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v5;
  sub_1D2548320((uint64_t)v15, v18 + v16);
  v19 = (_QWORD *)(v18 + v17);
  *v19 = v23;
  v19[1] = a4;
  *(_QWORD *)(v18 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8)) = v8;
  aBlock[4] = sub_1D2548368;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D25351AC;
  aBlock[3] = &block_descriptor_0;
  v20 = _Block_copy(aBlock);
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D25483C0();
  sub_1D26CDFE0();
  MEMORY[0x1D823956C](0, v26, v11, v20);
  _Block_release(v20);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v9);
  return swift_release();
}

uint64_t sub_1D2545C14(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  const char *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, const char *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(char *);
  NSObject *v41;
  int v42;
  char v43;
  uint64_t v44;
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  id v49;
  id v50;
  id v51;
  id v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  os_signpost_id_t v60;
  uint64_t v61;
  const char *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t (*v66)();
  char *v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  unint64_t v71;
  const char *v72;
  id v73;
  uint64_t v75;
  void (*v76)(char *, id, uint64_t);
  char *v77;
  void *v78;
  _QWORD *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  char *v93;
  _QWORD *v94;
  uint64_t v95;
  void *v96;
  char *v97;
  char *v98;
  char *v99;
  uint64_t v100;
  void *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  id v107;
  id v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  unint64_t v116;
  unint64_t v117;
  _QWORD *v118;
  uint64_t (*v119)(uint64_t *);
  char *v120;
  uint64_t v121;
  void (*v122)(char *, char *, char *, uint64_t (*)(), _QWORD *);
  char *v123;
  char *v124;
  uint8_t *v125;
  int v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  void (*v147)(char *);
  uint64_t (*v148)(uint64_t *);
  uint64_t v149;
  uint64_t v150;
  void (*v151)(unint64_t, char *, uint64_t);
  _QWORD *v152;
  const char *v153;
  uint64_t v154;
  uint64_t v155;
  id v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t aBlock;
  unint64_t v163;
  uint64_t (*v164)(uint64_t);
  void *v165;
  uint64_t (*v166)();
  uint64_t v167;
  uint64_t v168;

  v142 = a5;
  v149 = a4;
  v148 = a3;
  v161 = a2;
  v136 = sub_1D26CD074();
  v135 = *(_QWORD *)(v136 - 8);
  MEMORY[0x1E0C80A78](v136);
  v134 = (char *)&v125 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v133 = sub_1D26CD0C8();
  v132 = *(_QWORD *)(v133 - 8);
  MEMORY[0x1E0C80A78](v133);
  v131 = (char *)&v125 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C2E0);
  MEMORY[0x1E0C80A78](v8);
  v130 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C358);
  MEMORY[0x1E0C80A78](v10);
  v141 = (char *)&v125 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v12);
  v146 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = sub_1D26CB880();
  v160 = *(_QWORD *)(v158 - 8);
  v14 = MEMORY[0x1E0C80A78](v158);
  v143 = (char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140 = v15;
  MEMORY[0x1E0C80A78](v14);
  v144 = (char *)&v125 - v16;
  v17 = (_QWORD *)sub_1D26CD488();
  v155 = *(v17 - 1);
  v156 = v17;
  MEMORY[0x1E0C80A78](v17);
  v157 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350);
  v137 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v139 = (uint64_t)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (id *)((char *)&v125 - v22);
  v24 = sub_1D26CC00C();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v150 = (uint64_t)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v29 = (char *)&v125 - v28;
  v30 = (const char *)sub_1D26CC03C();
  v31 = (_QWORD *)*((_QWORD *)v30 - 1);
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)&v125 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = a1;
  v35 = a1 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter;
  swift_beginAccess();
  v152 = v31;
  v36 = (void (*)(char *, uint64_t, const char *))v31[2];
  v37 = v24;
  v153 = v30;
  v36(v33, v35, v30);
  v159 = v19;
  v38 = v161;
  v39 = v161 + *(int *)(v19 + 40);
  v154 = v25;
  v40 = *(void (**)(char *))(v25 + 16);
  v129 = v39;
  v40(v29);
  sub_1D2537078(v38, (uint64_t)v23, &qword_1ED96C350);
  v151 = (void (*)(unint64_t, char *, uint64_t))v33;
  v41 = sub_1D26CC030();
  v42 = sub_1D26CDE18();
  v43 = sub_1D26CDF08();
  v147 = v40;
  if ((v43 & 1) != 0)
  {
    v44 = v150;
    ((void (*)(uint64_t, char *, uint64_t))v40)(v150, v29, v37);
    v145 = v34;
    v127 = v29;
    v45 = (uint8_t *)swift_slowAlloc();
    v46 = swift_slowAlloc();
    *(_DWORD *)v45 = 136446210;
    aBlock = v46;
    v47 = v46;
    v125 = v45 + 4;
    v128 = v37;
    v48 = *v23;
    v49 = objc_msgSend(*v23, sel_widget, v45 + 4);
    v126 = v42;
    v50 = v49;
    v51 = objc_msgSend(v48, sel_metrics);
    v52 = objc_msgSend(v50, sel__loggingIdentifierWithMetrics_, v51);

    v53 = sub_1D26CD938();
    v55 = v54;

    v40 = v147;
    v56 = v145;
    v168 = sub_1D2537880(v53, v55, &aBlock);
    sub_1D26CDF50();
    v57 = v160;
    swift_bridgeObjectRelease();
    v58 = (uint64_t)v23;
    v59 = v127;
    sub_1D253703C(v58, &qword_1ED96C350);
    v60 = sub_1D26CBFF4();
    _os_signpost_emit_with_name_impl(&dword_1D2531000, v41, (os_signpost_type_t)v126, v60, "LayerSnapshotting", "<key>=%{public}s", v45, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v47, -1, -1);
    MEMORY[0x1D823A5E0](v45, -1, -1);

    v61 = v154;
    v37 = v128;
    (*(void (**)(uint64_t, uint64_t))(v154 + 8))(v44, v128);
  }
  else
  {

    sub_1D253703C((uint64_t)v23, &qword_1ED96C350);
    v59 = v29;
    v61 = v154;
    v57 = v160;
    v56 = v34;
    v44 = v150;
  }
  ((void (*)(uint64_t, char *, uint64_t))v40)(v44, v59, v37);
  sub_1D26CC06C();
  swift_allocObject();
  v62 = (const char *)sub_1D26CC060();
  v63 = v37;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v59, v37);
  ((void (*)(void (*)(unint64_t, char *, uint64_t), const char *))v152[1])(v151, v153);
  v64 = v56 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  sub_1D2538510(v64, (uint64_t)&aBlock);
  v65 = v165;
  v66 = v166;
  __swift_project_boxed_opaque_existential_0(&aBlock, (uint64_t)v165);
  v67 = v157;
  (*((void (**)(void *, uint64_t (*)()))v66 + 2))(v65, v66);
  v68 = v161;
  v69 = v161 + *(int *)(v159 + 36);
  sub_1D25369B0(&qword_1ED96BF48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0448]);
  v70 = v156;
  LOBYTE(v65) = sub_1D26CD8F0();
  (*(void (**)(char *, id))(v155 + 8))(v67, v70);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
  if ((v65 & 1) != 0)
  {
    v71 = 0xD00000000000001ELL;
    v72 = "Data protection level not met.";
LABEL_8:
    aBlock = v71;
    v163 = (unint64_t)(v72 - 32) | 0x8000000000000000;
    LOBYTE(v164) = 2;
    sub_1D254961C((uint64_t)&aBlock, v56, v62, v148, v149);
    return swift_release();
  }
  v73 = v146;
  sub_1D2547750(v68, (uint64_t)v146);
  if ((*(unsigned int (**)(id, uint64_t, uint64_t))(v57 + 48))(v73, 1, v158) == 1)
  {
    sub_1D253703C((uint64_t)v73, (uint64_t *)&unk_1ED96FC50);
    v71 = 0xD000000000000019;
    v72 = "Snapshot is not required.";
    goto LABEL_8;
  }
  v153 = v62;
  v75 = v57;
  v76 = *(void (**)(char *, id, uint64_t))(v57 + 32);
  v77 = v144;
  v76(v144, v73, v158);
  v78 = *(void **)v68;
  v79 = sub_1D2547AAC(*(void **)v68);
  if (v79)
  {
    v151 = (void (*)(unint64_t, char *, uint64_t))v76;
    v152 = v79;
    v145 = v56;
    v80 = v68 + *(int *)(v159 + 44);
    v81 = *(void **)v80;
    if ((*(_BYTE *)(v80 + 8) & 1) != 0)
    {
      sub_1D2544658();
      v157 = v81;
      v159 = sub_1D26CDD94();
      v82 = v139;
      sub_1D2537078(v68, v139, &qword_1ED96C350);
      v83 = v160;
      v84 = v158;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v143, v77, v158);
      v85 = (*(unsigned __int8 *)(v137 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
      v86 = (v138 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
      v87 = (*(unsigned __int8 *)(v83 + 80) + v86 + 8) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
      v88 = (v140 + v87 + 7) & 0xFFFFFFFFFFFFFFF8;
      v89 = (v88 + 15) & 0xFFFFFFFFFFFFFFF8;
      v90 = (v89 + 15) & 0xFFFFFFFFFFFFFFF8;
      v91 = (v90 + 23) & 0xFFFFFFFFFFFFFFF8;
      v92 = swift_allocObject();
      *(_QWORD *)(v92 + 16) = v145;
      sub_1D2548320(v82, v92 + v85);
      v93 = v157;
      *(_QWORD *)(v92 + v86) = v157;
      v151(v92 + v87, v143, v84);
      *(_QWORD *)(v92 + v88) = v152;
      *(_QWORD *)(v92 + v89) = v153;
      v94 = (_QWORD *)(v92 + v90);
      v95 = v149;
      *v94 = v148;
      v94[1] = v95;
      *(_QWORD *)(v92 + v91) = v142;
      v166 = sub_1D2549D24;
      v167 = v92;
      aBlock = MEMORY[0x1E0C809B0];
      v163 = 1107296256;
      v164 = sub_1D25351AC;
      v165 = &block_descriptor_19;
      v96 = _Block_copy(&aBlock);
      v97 = v93;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      v98 = v131;
      _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
      aBlock = MEMORY[0x1E0DEE9D8];
      sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
      sub_1D25483C0();
      v99 = v134;
      v100 = v136;
      sub_1D26CDFE0();
      v101 = (void *)v159;
      MEMORY[0x1D823956C](0, v98, v99, v96);
      _Block_release(v96);

      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v135 + 8))(v99, v100);
      (*(void (**)(char *, uint64_t))(v132 + 8))(v98, v133);
      return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v144, v158);
    }
    else
    {
      v159 = *(_QWORD *)(v145 + 16);
      v146 = *(char **)(v68 + 8);
      v150 = *(_QWORD *)(v68 + 16);
      v102 = v77;
      v103 = v68;
      v104 = *(_QWORD *)(v68 + 24);
      v105 = (uint64_t)v157;
      (*(void (**)(char *, uint64_t, id))(v155 + 16))(v157, v69, v156);
      v106 = (uint64_t)v130;
      ((void (*)(char *, uint64_t, uint64_t))v147)(v130, v129, v63);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v154 + 56))(v106, 0, 1, v63);
      swift_bridgeObjectRetain();
      v107 = v81;
      v156 = v107;
      v108 = v78;
      v109 = v146;
      sub_1D2547D3C(v108, v109, v150, v104, v105, v106, (uint64_t)v107, &qword_1ED96C358, v141);
      v110 = v145;
      v157 = *(char **)(v145 + 56);
      v111 = v103;
      v112 = v139;
      sub_1D2537078(v111, v139, &qword_1ED96C350);
      v113 = v160;
      v114 = v143;
      (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v143, v102, v158);
      v115 = (*(unsigned __int8 *)(v137 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
      v116 = (v138 + *(unsigned __int8 *)(v113 + 80) + v115) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
      v117 = (v140 + v116 + 7) & 0xFFFFFFFFFFFFFFF8;
      v118 = (_QWORD *)swift_allocObject();
      v118[2] = v152;
      v118[3] = v110;
      v119 = v148;
      v118[4] = v153;
      v118[5] = v119;
      v118[6] = v149;
      sub_1D2548320(v112, (uint64_t)v118 + v115);
      v120 = v114;
      v121 = v158;
      v151((unint64_t)v118 + v116, v120, v158);
      *(_QWORD *)((char *)v118 + v117) = v142;
      v122 = *(void (**)(char *, char *, char *, uint64_t (*)(), _QWORD *))(**(_QWORD **)(v159 + 16)
                                                                                               + 104);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      v123 = v141;
      v124 = v144;
      v122(v141, v144, v157, sub_1D2549DEC, v118);
      swift_release();
      swift_release();

      swift_release();
      sub_1D253703C((uint64_t)v123, &qword_1ED96C358);
      return (*(uint64_t (**)(char *, uint64_t))(v160 + 8))(v124, v121);
    }
  }
  else
  {
    aBlock = 0xD00000000000001FLL;
    v163 = 0x80000001D26DE490;
    LOBYTE(v164) = 2;
    sub_1D254961C((uint64_t)&aBlock, v56, v153, v148, v149);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v77, v158);
  }
}

void sub_1D2546A50(void *a1, _QWORD *a2, uint64_t a3, const char *a4, uint64_t (*a5)(uint64_t *), uint64_t a6, uint64_t a7)
{
  id v13;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  void (*v19)(uint64_t);
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char v23;

  if (a1)
  {
    v21 = a1;
    v22 = 0;
    v23 = 0;
    v13 = a1;
    sub_1D254961C((uint64_t)&v21, a3, a4, a5, a6);

  }
  else
  {
    if ((*(_BYTE *)(a7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350) + 44) + 8) & 1) != 0)
      v15 = *(_QWORD *)(a3 + 24);
    else
      v15 = *(_QWORD *)(a3 + 16);
    (*(void (**)(void))(**(_QWORD **)(v15 + 16) + 96))();
    sub_1D2546C74();
    swift_bridgeObjectRelease();
    sub_1D2546EC4(*(_QWORD *)(a7 + 16), *(_QWORD *)(a7 + 24));
    v16 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v17 = (void *)sub_1D26CD464();
    sub_1D25A7B78(v17);

    v21 = 0;
    v22 = 0;
    v23 = 1;
    sub_1D254961C((uint64_t)&v21, a3, a4, a5, a6);
  }
  v18 = a2[2];
  os_unfair_lock_lock(*(os_unfair_lock_t *)(v18 + 16));
  v19 = (void (*)(uint64_t))a2[3];
  a2[3] = 0;
  a2[4] = 0;
  sub_1D2549DF0((uint64_t)v19);
  sub_1D25495F4((uint64_t)v19);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
  if (v19)
  {
    v20 = swift_retain();
    v19(v20);
    sub_1D25495F4((uint64_t)v19);
    sub_1D25495F4((uint64_t)v19);
  }
}

uint64_t sub_1D2546C74()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D26CB55C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CD974();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CD968();
  v11 = sub_1D26CD944();
  v13 = v12;
  v14 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v13 >> 60 == 15)
  {
    sub_1D26CB544();
    v15 = sub_1D26CB880();
    v16 = *(_QWORD *)(v15 - 8);
    (*(void (**)(char *, _QWORD, uint64_t))(v16 + 16))(v2, v18[3], v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v2, 0, 1, v15);
    sub_1D26CB568();
    sub_1D253703C((uint64_t)v2, (uint64_t *)&unk_1ED96FC50);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return swift_willThrow();
  }
  else
  {
    MEMORY[0x1E0C80A78](v14);
    v18[-4] = v11;
    v18[-3] = v13;
    v18[-2] = 0x795474616D726F46;
    v18[-1] = 0xEA00000000006570;
    sub_1D253FE08(v11, v13);
    sub_1D26CB844();
    sub_1D2541EBC(v11, v13);
    return sub_1D2541EBC(v11, v13);
  }
}

uint64_t sub_1D2546EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = sub_1D26CB55C();
  v22 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CD974();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v21 = v2;
    sub_1D26CD968();
    v14 = sub_1D26CD944();
    v16 = v15;
    v17 = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    if (v16 >> 60 == 15)
    {
      sub_1D26CB544();
      v18 = sub_1D26CB880();
      v19 = *(_QWORD *)(v18 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v6, v21, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v6, 0, 1, v18);
      sub_1D26CB568();
      sub_1D253703C((uint64_t)v6, (uint64_t *)&unk_1ED96FC50);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v23);
      return swift_willThrow();
    }
    else
    {
      MEMORY[0x1E0C80A78](v17);
      *(&v21 - 4) = v14;
      *(&v21 - 3) = v16;
      *(&v21 - 2) = 0xD000000000000011;
      *(&v21 - 1) = 0x80000001D26DE450;
      sub_1D253FE08(v14, v16);
      sub_1D26CB844();
      sub_1D2541EBC(v14, v16);
      return sub_1D2541EBC(v14, v16);
    }
  }
  else
  {
    MEMORY[0x1E0C80A78](v11);
    *(&v21 - 2) = 0xD000000000000011;
    *(&v21 - 1) = 0x80000001D26DE450;
    return sub_1D26CB844();
  }
}

uint64_t sub_1D2547184(uint64_t a1, void **a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, id, uint64_t (*)(), char *);
  uint64_t v49;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;

  v63 = a7;
  v64 = a8;
  v61 = a5;
  v62 = a6;
  v68 = a4;
  v55 = a3;
  v52 = a1;
  v65 = a9;
  v11 = sub_1D26CB880();
  v66 = *(_QWORD *)(v11 - 8);
  v12 = *(_QWORD *)(v66 + 64);
  v59 = v11;
  v60 = v12;
  MEMORY[0x1E0C80A78](v11);
  v58 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350);
  v15 = *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64);
  v56 = *(_QWORD *)(v14 - 8);
  v57 = v15;
  MEMORY[0x1E0C80A78](v14);
  v67 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C2E0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1D26CD488();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C360);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v51 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = *(_QWORD *)(a1 + 24);
  v53 = v26;
  v54 = v27;
  v29 = *a2;
  v28 = a2[1];
  v30 = (uint64_t)a2[3];
  v51 = a2[2];
  (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v23, (char *)a2 + *(int *)(v14 + 36), v20);
  v31 = (char *)a2 + *(int *)(v14 + 40);
  v32 = sub_1D26CC00C();
  v33 = *(_QWORD *)(v32 - 8);
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v19, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v19, 0, 1, v32);
  swift_bridgeObjectRetain();
  v34 = v55;
  v35 = v29;
  v36 = v28;
  sub_1D2547D3C(v35, v36, (uint64_t)v51, v30, (uint64_t)v23, (uint64_t)v19, (uint64_t)v34, &qword_1ED96C360, v26);
  v37 = v52;
  v55 = *(id *)(v52 + 56);
  sub_1D2537078((uint64_t)a2, v67, &qword_1ED96C350);
  v38 = v66;
  v39 = v58;
  v40 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v58, v68, v59);
  v41 = (*(unsigned __int8 *)(v56 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  v42 = (v57 + *(unsigned __int8 *)(v38 + 80) + v41) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  v43 = (v60 + v42 + 7) & 0xFFFFFFFFFFFFFFF8;
  v44 = (char *)swift_allocObject();
  v45 = v62;
  *((_QWORD *)v44 + 2) = v61;
  *((_QWORD *)v44 + 3) = v37;
  v46 = v63;
  v47 = v64;
  *((_QWORD *)v44 + 4) = v45;
  *((_QWORD *)v44 + 5) = v46;
  *((_QWORD *)v44 + 6) = v47;
  sub_1D2548320(v67, (uint64_t)&v44[v41]);
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(&v44[v42], v39, v40);
  *(_QWORD *)&v44[v43] = v65;
  v48 = *(void (**)(char *, uint64_t, id, uint64_t (*)(), char *))(**(_QWORD **)(v54 + 16) + 104);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v49 = (uint64_t)v53;
  v48(v53, v68, v55, sub_1D2549DEC, v44);
  swift_release();
  return sub_1D253703C(v49, &qword_1ED96C360);
}

uint64_t sub_1D2547500(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  _BYTE *v19;

  v5 = sub_1D26CB880();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  v9 = *(void **)(v2 + 32);
  v10 = *(void **)a1;
  v11 = v9;
  v12 = objc_msgSend(v10, sel_widget);
  v13 = objc_msgSend(v10, sel_metrics);
  v14 = objc_msgSend(v11, sel_URLForWidget_metrics_attributes_createIntermediateDirectories_, v12, v13, *(_QWORD *)(a1 + 8), 0);

  sub_1D26CB850();
  v19 = v8;
  type metadata accessor for SnapshotRequest(0, a2, v15, v16);
  LOBYTE(v13) = sub_1D259F4F8(sub_1D254840C);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  return v13 & 1;
}

uint64_t sub_1D2547664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v0 = sub_1D26CD974();
  MEMORY[0x1E0C80A78](v0);
  sub_1D26CB844();
  sub_1D26CD968();
  v1 = sub_1D26CD950();
  sub_1D253EE04(v3, v4);
  return v1;
}

uint64_t sub_1D2547750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  unsigned int v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v33[6];
  id v34[6];

  v33[0] = a2;
  v34[5] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1D26CD974();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1D26CB880();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v33 - v10;
  swift_beginAccess();
  v12 = *(void **)(v2 + 32);
  v13 = *(void **)a1;
  v14 = v12;
  v15 = objc_msgSend(v13, sel_widget);
  v16 = objc_msgSend(v13, sel_metrics);
  v17 = objc_msgSend(v14, sel_URLForWidget_metrics_attributes_createIntermediateDirectories_, v15, v16, *(_QWORD *)(a1 + 8), 0);

  sub_1D26CB850();
  v33[4] = 0xD000000000000011;
  v33[5] = 0x80000001D26DE450;
  sub_1D26CB844();
  v24 = v34[0];
  v25 = v34[1];
  sub_1D26CD968();
  v26 = sub_1D26CD950();
  v28 = v27;
  sub_1D253EE04((uint64_t)v24, (unint64_t)v25);
  v29 = *(_QWORD *)(a1 + 24);
  if (!v29)
  {
    if (v28)
    {
LABEL_11:
      swift_bridgeObjectRelease();
LABEL_12:
      v31 = v33[0];
      (*(void (**)(_QWORD, char *, uint64_t))(v6 + 32))(v33[0], v11, v5);
      v30 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v31, v30, 1, v5);
    }
LABEL_2:
    v18 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_1D26CB82C();
    v19 = (void *)sub_1D26CB7D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    v34[0] = 0;
    v20 = objc_msgSend(v18, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v19, 1, 0, v34);

    v21 = v34[0];
    if (!v20)
    {
      v22 = v21;
      v23 = (void *)sub_1D26CB76C();

      swift_willThrow();
    }
    goto LABEL_12;
  }
  if (!v28)
    goto LABEL_2;
  if ((v26 != *(_QWORD *)(a1 + 16) || v28 != v29) && (sub_1D26CE3D0() & 1) == 0)
    goto LABEL_11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  swift_bridgeObjectRelease();
  v30 = 1;
  v31 = v33[0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(v31, v30, 1, v5);
}

_QWORD *sub_1D2547AAC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  os_unfair_lock_s *v5;
  id v6;
  char v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _DWORD *v12;
  id v14;

  v2 = v1;
  v4 = *(_QWORD *)(v2 + 48);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  swift_beginAccess();
  v6 = a1;
  v7 = sub_1D25F0690(&v14, v6);
  swift_endAccess();

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  v8 = 0;
  if ((v7 & 1) != 0)
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v2;
    *(_QWORD *)(v9 + 24) = v6;
    type metadata accessor for BlockAssertion();
    v8 = (_QWORD *)swift_allocObject();
    type metadata accessor for UnfairLock();
    v10 = swift_allocObject();
    v11 = v6;
    swift_retain();
    v12 = (_DWORD *)swift_slowAlloc();
    *v12 = 0;
    *(_QWORD *)(v10 + 16) = v12;
    v8[2] = v10;
    v8[3] = sub_1D25495EC;
    v8[4] = v9;
    sub_1D25495F4(0);
  }
  return v8;
}

void sub_1D2547BE4(uint64_t a1, void *a2)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  void *v5;

  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  swift_beginAccess();
  v5 = (void *)sub_1D25DE828(a2);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();

}

uint64_t LayerSnapshotter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger;
  v2 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter;
  v4 = sub_1D26CC03C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor);
  return v0;
}

uint64_t LayerSnapshotter.__deallocating_deinit()
{
  LayerSnapshotter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2547D3C@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, char *a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  id v31;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t result;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  uint64_t v38;
  id v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;

  v42 = a7;
  v43 = a6;
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C2E0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D26CC00C();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a1;
  *(_QWORD *)a9 = a1;
  *((_QWORD *)a9 + 1) = a2;
  v23 = v22;
  v40 = a2;
  *((_QWORD *)a9 + 2) = a3;
  *((_QWORD *)a9 + 3) = a4;
  v24 = (int *)__swift_instantiateConcreteTypeFromMangledName(a8);
  v25 = &a9[v24[9]];
  v26 = sub_1D26CD488();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = v25;
  v29 = v43;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v28, a5, v26);
  sub_1D2537078(v29, (uint64_t)v18, (uint64_t *)&unk_1ED96C2E0);
  v41 = v23;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v18, 1, v19) != 1)
  {
    sub_1D253703C(v29, (uint64_t *)&unk_1ED96C2E0);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(a5, v26);
    v36 = *(void (**)(char *, char *, uint64_t))(v41 + 32);
    v36(v21, v18, v19);
    result = ((uint64_t (*)(char *, char *, uint64_t))v36)(&a9[v24[10]], v21, v19);
    goto LABEL_7;
  }
  v38 = a5;
  sub_1D26CE4A8();
  v30 = v39;
  v31 = v40;
  sub_1D26CDED8();
  v51 = v46;
  v52 = v47;
  v53 = v48;
  v49 = v44;
  v50 = v45;
  v32 = sub_1D26CE490();
  if ((v32 & 0x8000000000000000) == 0)
  {
LABEL_5:
    sub_1D26CC018();

    sub_1D253703C(v43, (uint64_t *)&unk_1ED96C2E0);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v38, v26);
    sub_1D253703C((uint64_t)v18, (uint64_t *)&unk_1ED96C2E0);
    result = (*(uint64_t (**)(char *, char *, uint64_t))(v41 + 32))(&a9[v24[10]], v21, v19);
LABEL_7:
    *(_QWORD *)&a9[v24[11]] = v42;
    return result;
  }
  v33 = __OFSUB__(0, v32);
  v34 = -v32;
  if (v33)
  {
    __break(1u);
  }
  else if ((v34 & 0x8000000000000000) == 0)
  {
    goto LABEL_5;
  }
  result = sub_1D26CE1CC();
  __break(1u);
  return result;
}

char *sub_1D2548008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int128 *a5, uint64_t a6)
{
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  __int128 *v24;
  uint64_t v26;
  uint64_t v27;
  __int128 *v28;
  uint64_t v29;

  v28 = a5;
  v29 = a6;
  v27 = a4;
  v10 = sub_1D26CC09C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1D26CC03C();
  v14 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v6 + 5) = MEMORY[0x1E0DEE9E8];
  type metadata accessor for UnfairLock();
  v17 = swift_allocObject();
  v18 = (_DWORD *)swift_slowAlloc();
  *v18 = 0;
  *(_QWORD *)(v17 + 16) = v18;
  *((_QWORD *)v6 + 6) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C420);
  v19 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C538);
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = a1;
  *(_QWORD *)(v19 + 16) = v20;
  *((_QWORD *)v6 + 3) = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C418);
  v21 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C530);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = a2;
  *(_QWORD *)(v21 + 16) = v22;
  *((_QWORD *)v6 + 2) = v21;
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v23(&v6[OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger], a3, v10);
  v23(v13, a3, v10);
  swift_retain();
  swift_retain();
  sub_1D26CC024();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a3, v10);
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v6[OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter], v16, v26);
  v24 = v28;
  *((_QWORD *)v6 + 4) = v27;
  sub_1D2538F38(v24, (uint64_t)&v6[OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor]);
  *((_QWORD *)v6 + 7) = v29;
  return v6;
}

uint64_t sub_1D2548220()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (v2 + 24) & ~v2;
  swift_release();
  v4 = v0 + v3;

  swift_bridgeObjectRelease();
  v5 = v0 + v3 + v1[9];
  v6 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = v4 + v1[10];
  v8 = sub_1D26CC00C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2548320(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2548368()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D2545C14(*(_QWORD *)(v0 + 16), v0 + v2, *(uint64_t (**)(uint64_t *))(v0 + v3), *(_QWORD *)(v0 + v3 + 8), *(_QWORD *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFF8)));
}

unint64_t sub_1D25483C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96EE10;
  if (!qword_1ED96EE10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED96EE00);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96EE10);
  }
  return result;
}

uint64_t sub_1D254840C()
{
  return sub_1D2547664();
}

id sub_1D2548414@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  void *v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(void **)(v3 + 32);
  *a2 = v4;
  return v4;
}

uint64_t sub_1D254845C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D254517C(a1, &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], a2);
}

uint64_t sub_1D2548480(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25451EC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2258], &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_logger);
}

uint64_t sub_1D25484A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D254517C(a1, &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], a2);
}

uint64_t sub_1D25484C8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25451EC(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0DF2170], &OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter);
}

uint64_t sub_1D25484EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_dataProtectionMonitor;
  swift_beginAccess();
  return sub_1D2538510(v3, a2);
}

_QWORD *_s14SnapshotFormatOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
    v6 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
    v7 = (char *)v4 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_1D26CBBEC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v4;
}

uint64_t destroy for RBImageSnapshotter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  v2 = sub_1D26CBBEC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t initializeWithCopy for RBImageSnapshotter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for RBImageSnapshotter(uint64_t a1, int *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  *(_BYTE *)(a1 + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 12) = *((_BYTE *)a2 + 12);
  *(_DWORD *)(a1 + 8) = v5;
  v6 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  v7 = a1 + v6;
  v8 = (uint64_t)a2 + v6;
  v9 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for RBImageSnapshotter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for RBImageSnapshotter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(a2 + 12);
  v4 = *(int *)(type metadata accessor for RBImageSnapshotter.RBImageOptions(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s14SnapshotFormatOwet()
{
  type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2548870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = sub_1D26CBBEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t _s14SnapshotFormatOwst()
{
  type metadata accessor for RBImageSnapshotter.RBImageOptions(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25488FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = sub_1D26CBBEC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_1D2548940()
{
  return 0;
}

uint64_t sub_1D2548948(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for RBImageSnapshotter.RBImageOptions(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *_s14SnapshotFormatOwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v10 = *(int *)(v7 + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_1D26CBBEC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
      v14 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56);
      swift_bridgeObjectRetain();
      v14(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s14SnapshotFormatOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + *(int *)(v2 + 20);
    v5 = sub_1D26CBBEC();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_BYTE *_s14SnapshotFormatOwcp(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;
  void (*v12)(_BYTE *, _QWORD, uint64_t, uint64_t);

  v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1D26CBBEC();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    *(_QWORD *)&a1[*(int *)(v6 + 24)] = *(_QWORD *)&a2[*(int *)(v6 + 24)];
    v12 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56);
    swift_bridgeObjectRetain();
    v12(a1, 0, 1, v6);
  }
  return a1;
}

_BYTE *_s14SnapshotFormatOwca(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  void (*v15)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v17;
  _BYTE *v18;
  _BYTE *v19;
  uint64_t v20;

  v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v17 = *(int *)(v6 + 20);
      v18 = &a1[v17];
      v19 = &a2[v17];
      v20 = sub_1D26CBBEC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
      *(_QWORD *)&a1[*(int *)(v6 + 24)] = *(_QWORD *)&a2[*(int *)(v6 + 24)];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D25340E4((uint64_t)a1, type metadata accessor for CAMLSnapshotter.CAMLOptions);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v11 = *(int *)(v6 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1D26CBBEC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  *(_QWORD *)&a1[*(int *)(v6 + 24)] = *(_QWORD *)&a2[*(int *)(v6 + 24)];
  v15 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56);
  swift_bridgeObjectRetain();
  v15(a1, 0, 1, v6);
  return a1;
}

_BYTE *_s14SnapshotFormatOwtk(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  uint64_t v11;

  v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = *(int *)(v6 + 20);
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1D26CBBEC();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    *(_QWORD *)&a1[*(int *)(v6 + 24)] = *(_QWORD *)&a2[*(int *)(v6 + 24)];
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

_BYTE *_s14SnapshotFormatOwta(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_BYTE *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      v16 = *(int *)(v6 + 20);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_1D26CBBEC();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
      *(_QWORD *)&a1[*(int *)(v6 + 24)] = *(_QWORD *)&a2[*(int *)(v6 + 24)];
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1D25340E4((uint64_t)a1, type metadata accessor for CAMLSnapshotter.CAMLOptions);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  v11 = *(int *)(v6 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1D26CBBEC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  *(_QWORD *)&a1[*(int *)(v6 + 24)] = *(_QWORD *)&a2[*(int *)(v6 + 24)];
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t _s14SnapshotFormatOwet_0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2548F80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t _s14SnapshotFormatOwst_0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2548FD8(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D2549028(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1D2549060(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1D25490A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CAMLSnapshotter.CAMLOptions(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D25490F4()
{
  return type metadata accessor for LayerSnapshotter(0);
}

uint64_t sub_1D25490FC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CC09C();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CC03C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for LayerSnapshotter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LayerSnapshotter.screenshotManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of LayerSnapshotter.screenshotManager.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of LayerSnapshotter.screenshotManager.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of LayerSnapshotter.logger.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of LayerSnapshotter.logger.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of LayerSnapshotter.logger.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of LayerSnapshotter.signposter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of LayerSnapshotter.signposter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of LayerSnapshotter.signposter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of LayerSnapshotter.dataProtectionMonitor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of LayerSnapshotter.dataProtectionMonitor.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of LayerSnapshotter.dataProtectionMonitor.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of LayerSnapshotter.snapshot(request:qualityOfService:completionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of LayerSnapshotter.requestRequiresSnapshotting<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t initializeBufferWithCopyOfBuffer for LayerSnapshotter.SupportedLayer(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v5 = v3;
  return a1;
}

void destroy for LayerSnapshotter.SupportedLayer(id *a1)
{

}

uint64_t assignWithCopy for LayerSnapshotter.SupportedLayer(uint64_t a1, uint64_t a2)
{
  void *v3;
  char v4;
  void *v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_BYTE *)(a2 + 8);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v4;
  v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t assignWithTake for LayerSnapshotter.SupportedLayer(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for LayerSnapshotter.SupportedLayer(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LayerSnapshotter.SupportedLayer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D25493C0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1D25493C8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LayerSnapshotter.SupportedLayer()
{
  return &type metadata for LayerSnapshotter.SupportedLayer;
}

id sub_1D25493E8(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 2)
    return (id)swift_bridgeObjectRetain();
  if (a3 <= 1u)
    return result;
  return result;
}

void destroy for LayerSnapshotter.Result(uint64_t a1)
{
  sub_1D2545748(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9ChronoKit16LayerSnapshotterC6ResultOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D25493E8(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LayerSnapshotter.Result(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  unsigned __int8 v5;
  void *v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D25493E8(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1D2545748(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for LayerSnapshotter.Result(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1D2545748(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LayerSnapshotter.Result(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LayerSnapshotter.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D25495A0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1D25495A8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LayerSnapshotter.Result()
{
  return &type metadata for LayerSnapshotter.Result;
}

uint64_t sub_1D25495C0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

void sub_1D25495EC()
{
  uint64_t v0;

  sub_1D2547BE4(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1D25495F4(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_1D2549604@<X0>(const char *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1D26C46B8(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1D254961C(uint64_t a1, uint64_t a2, const char *a3, uint64_t (*a4)(uint64_t *), uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  void *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  NSObject *v21;
  int v22;
  uint64_t v23;
  _BYTE *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t (*v28)(uint64_t *);
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _BYTE *v37;
  os_signpost_id_t v38;
  os_log_t v39;
  void (*v40)(_BYTE *, uint64_t);
  _BYTE v42[12];
  int v43;
  os_log_t v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t (*v52)(uint64_t *);
  uint64_t v53;
  uint64_t v54;
  const char *v55;
  _BYTE *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;

  v54 = a5;
  v55 = a3;
  v52 = a4;
  v7 = sub_1D26CC048();
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  MEMORY[0x1E0C80A78](v7);
  v48 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v53 = sub_1D26CC00C();
  v57 = *(_QWORD *)(v53 - 8);
  v9 = MEMORY[0x1E0C80A78](v53);
  v51 = &v42[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v12 = &v42[-v11];
  v13 = sub_1D26CC03C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = &v42[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = *(void **)a1;
  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(unsigned __int8 *)(a1 + 16);
  v20 = a2 + OBJC_IVAR____TtC9ChronoKit16LayerSnapshotter_signposter;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v16, v20, v13);
  sub_1D25493E8(v17, v18, v19);
  sub_1D25493E8(v17, v18, v19);
  sub_1D25493E8(v17, v18, v19);
  sub_1D25493E8(v17, v18, v19);
  v21 = sub_1D26CC030();
  v56 = v12;
  sub_1D26CC054();
  v22 = sub_1D26CDE0C();
  if ((sub_1D26CDF08() & 1) != 0)
  {
    v44 = v21;
    v43 = v22;
    v45 = v16;
    v46 = v14;
    v47 = v13;
    v23 = v53;
    swift_retain();
    v24 = v48;
    sub_1D26CC078();
    swift_release();
    v26 = v49;
    v25 = v50;
    if ((*(unsigned int (**)(_BYTE *, uint64_t))(v49 + 88))(v24, v50) == *MEMORY[0x1E0DF2190])
    {
      v27 = 0;
      v55 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(_BYTE *, uint64_t))(v26 + 8))(v24, v25);
      v55 = "<snapshotTaken?>=%{name=snapshotTaken,public}s <error?>=%{name=error,public}s";
      v27 = 2;
    }
    v28 = v52;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v57 + 16))(v51, v56, v23);
    v29 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v59 = v30;
    *(_BYTE *)v29 = v27;
    *(_BYTE *)(v29 + 1) = v27;
    *(_WORD *)(v29 + 2) = 2082;
    if (v19)
    {
      if (v19 == 1)
      {
        v31 = 0xE300000000000000;
        v32 = 5457241;
      }
      else
      {
        v60 = 673206094;
        v61 = 0xE400000000000000;
        swift_bridgeObjectRetain();
        sub_1D26CDA04();
        sub_1D26CDA04();
        sub_1D2545748(v17, v18, 2u);
        v32 = v60;
        v31 = v61;
      }
    }
    else
    {
      v31 = 0xE200000000000000;
      v32 = 20302;
    }
    v60 = sub_1D2537880(v32, v31, &v59);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D2545748(v17, v18, v19);
    sub_1D2545748(v17, v18, v19);
    *(_WORD *)(v29 + 12) = 2082;
    if (!v19 || (v33 = 7104878, v19 == 1) && v17)
    {
      swift_getErrorValue();
      v34 = v58;
      sub_1D25493E8(v17, v18, v19);
      v33 = sub_1D267B940(v34);
      v36 = v35;
      sub_1D2545748(v17, v18, v19);
    }
    else
    {
      v36 = 0xE300000000000000;
    }
    v60 = sub_1D2537880(v33, v36, &v59);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D2545748(v17, v18, v19);
    sub_1D2545748(v17, v18, v19);
    v37 = v51;
    v38 = sub_1D26CBFF4();
    v39 = v44;
    _os_signpost_emit_with_name_impl(&dword_1D2531000, v44, (os_signpost_type_t)v43, v38, "LayerSnapshotting", v55, (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v30, -1, -1);
    MEMORY[0x1D823A5E0](v29, -1, -1);

    v40 = *(void (**)(_BYTE *, uint64_t))(v57 + 8);
    v40(v56, v23);
    (*(void (**)(_BYTE *, uint64_t))(v46 + 8))(v45, v47);
    v40(v37, v23);
  }
  else
  {

    sub_1D2545748(v17, v18, v19);
    sub_1D2545748(v17, v18, v19);
    sub_1D2545748(v17, v18, v19);
    sub_1D2545748(v17, v18, v19);
    (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v56, v53);
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
    v28 = v52;
  }
  v60 = (uint64_t)v17;
  v61 = v18;
  v62 = v19;
  return v28(&v60);
}

uint64_t sub_1D2549BA8()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = sub_1D26CB880();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = v5;
  swift_release();
  v8 = v0 + v3;

  swift_bridgeObjectRelease();
  v9 = v0 + v3 + v1[9];
  v10 = sub_1D26CD488();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v8 + v1[10];
  v12 = sub_1D26CC00C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v14);
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2549D24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v4 = *(_QWORD *)(sub_1D26CB880() - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1D2547184(*(_QWORD *)(v0 + 16), (void **)(v0 + v2), *(void **)(v0 + v3), v0 + v5, *(_QWORD *)(v0 + v6), *(_QWORD *)(v0 + v7), *(_QWORD *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(_QWORD *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(_QWORD *)(v0 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1D2549DF0(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

uint64_t sub_1D2549E00(const char *a1)
{
  uint64_t v1;

  return sub_1D26C40E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1D2549E18(uint64_t a1)
{
  uint64_t v1;

  sub_1D26C4278(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350);
  v2 = *((_QWORD *)v1 - 1);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = sub_1D26CB880();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v8 = v0 + v3;

  swift_bridgeObjectRelease();
  v9 = v0 + v3 + v1[9];
  v10 = sub_1D26CD488();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = v8 + v1[10];
  v12 = sub_1D26CC00C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  return swift_deallocObject();
}

void sub_1D2549F7C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C350) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1D26CB880();
  sub_1D2546A50(a1, *(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(const char **)(v1 + 32), *(uint64_t (**)(uint64_t *))(v1 + 40), *(_QWORD *)(v1 + 48), v1 + v4);
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

void sub_1D254A058(uint64_t a1)
{
  sub_1D2549E18(a1);
}

uint64_t sub_1D254A074@<X0>(const char *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1D2549604(a1, a2);
}

uint64_t dispatch thunk of StatefulStoreReloadFailurePolicy.reloadFailed(for:entries:originalConfiguration:nextConfiguration:nextState:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 72))();
}

uint64_t sub_1D254A098()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  char *v5;
  __int128 v6;
  char v7;
  _OWORD v8[2];

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 104) + 16));
  swift_beginAccess();
  if (*(_BYTE *)(v0 + 72) != 1)
    return *(_QWORD *)(v0 + 64);
  v1 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
    sub_1D2538448(&v6, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
  v5 = &v7;
  if ((swift_dynamicCast() & 1) == 0)
  {
    v5 = (char *)(v0 + 56);
    swift_beginAccess();
  }
  return *(_QWORD *)v5;
}

uint64_t sub_1D254A1D0()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  char *v5;
  __int128 v6;
  char v7;
  _OWORD v8[2];

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 112) + 16));
  swift_beginAccess();
  if ((*(_BYTE *)(v0 + 81) & 1) == 0)
    return *(_QWORD *)(v0 + 72);
  v1 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  v2 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_valueForKey_, v2);

  if (v3)
  {
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
    sub_1D2538448(&v6, v8);
  }
  else
  {
    memset(v8, 0, sizeof(v8));
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B158);
  if (swift_dynamicCast())
  {
    v5 = &v7;
  }
  else
  {
    v5 = (char *)(v0 + 56);
    swift_beginAccess();
  }
  return *(_QWORD *)v5;
}

uint64_t sub_1D254A328()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  __int128 v6;
  uint64_t v7;
  _OWORD v8[2];

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + 104) + 16));
  swift_beginAccess();
  if (*(_QWORD *)(v0 + 64))
  {
    v1 = *(_QWORD *)(v0 + 64);
  }
  else
  {
    v2 = *(id *)(v0 + 16);
    swift_bridgeObjectRetain();
    v3 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v4 = objc_msgSend(v2, sel_valueForKey_, v3);

    if (v4)
    {
      sub_1D26CDFA4();
      swift_unknownObjectRelease();
      sub_1D2538448(&v6, v8);
    }
    else
    {
      memset(v8, 0, sizeof(v8));
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82578);
    if (swift_dynamicCast())
    {
      v1 = v7;
    }
    else
    {
      swift_beginAccess();
      v1 = *(_QWORD *)(v0 + 56);
      swift_bridgeObjectRetain();
    }
  }
  swift_bridgeObjectRetain();
  return v1;
}

BOOL static SystemDataMigrationState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SystemDataMigrationState.hash(into:)()
{
  return sub_1D26CE46C();
}

uint64_t SystemDataMigrationState.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t _s9ChronoKit31InteractionAuthenticationPolicyO9hashValueSivg_0()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D254A540()
{
  return sub_1D26CE46C();
}

uint64_t sub_1D254A568()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D254A5A8()
{
  uint64_t v0;
  uint64_t result;

  type metadata accessor for _SystemDataMigrator();
  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963480);
  swift_allocObject();
  result = sub_1D26CC174();
  *(_QWORD *)(v0 + 16) = result;
  qword_1ED963640 = v0;
  return result;
}

uint64_t static _SystemDataMigrator.shared.getter()
{
  if (qword_1ED963650 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1D254A650()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963480);
  sub_1D2536488(&qword_1ED963478, &qword_1ED963480, MEMORY[0x1E0C95FB8]);
  return sub_1D26CC204();
}

uint64_t sub_1D254A6BC()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v0 = DMIsMigrationNeeded();
  if (qword_1ED96F1C8 != -1)
    swift_once();
  v1 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 26) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LODWORD(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  if (((v0 | v2) & 1) != 0)
  {
    swift_retain();
    sub_1D26CC168();
    swift_release();
    if ((_DWORD)v0)
      DMPerformMigrationIfNeeded();
    else
      sub_1D254A8E0();
    swift_retain();
    sub_1D26CC168();
    swift_release();
  }
  return v0;
}

uint64_t sub_1D254A7D0(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

uint64_t _SystemDataMigrator.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t _SystemDataMigrator.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D254A84C()
{
  return sub_1D254A6BC() & 1;
}

uint64_t sub_1D254A870()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963480);
  sub_1D2536488(&qword_1ED963478, &qword_1ED963480, MEMORY[0x1E0C95FB8]);
  return sub_1D26CC204();
}

void sub_1D254A8E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  NSObject *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;
  void *v13;
  uint32_t v14;
  uint64_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint8_t *v18;
  uint64_t v19;
  _QWORD v20[2];
  int out_token;
  uint64_t v22;
  _QWORD aBlock[7];

  aBlock[6] = *MEMORY[0x1E0C80C00];
  v0 = sub_1D26CDD88();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D26CDD40();
  MEMORY[0x1E0C80A78](v4);
  v5 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v5);
  sub_1D2544658();
  sub_1D26CD0A4();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1D254B000();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D2536488((unint64_t *)&qword_1ED96EE28, &qword_1ED96EE20, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DEF8D8], v0);
  v6 = sub_1D26CDDB8();
  out_token = -1;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 60;
  v8 = (uint64_t *)(v7 + 16);
  if (qword_1EFC821E8 != -1)
    goto LABEL_15;
  while (1)
  {
    v9 = sub_1D26CC09C();
    __swift_project_value_buffer(v9, (uint64_t)qword_1EFC8AAF8);
    swift_retain();
    v10 = sub_1D26CC084();
    v11 = sub_1D26CDD04();
    if (os_log_type_enabled(v10, v11))
    {
      v12 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v12 = 134217984;
      swift_beginAccess();
      aBlock[0] = *(_QWORD *)(v7 + 16);
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v10, v11, "Simulating migration for %lds", v12, 0xCu);
      MEMORY[0x1D823A5E0](v12, -1, -1);

    }
    else
    {

      swift_release();
    }
    aBlock[4] = sub_1D254B058;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D254A7D0;
    aBlock[3] = &block_descriptor_1;
    v13 = _Block_copy(aBlock);
    swift_retain();
    v6 = v6;
    swift_release();
    v14 = notify_register_dispatch("com.apple.chronod.finishmigration", &out_token, v6, v13);
    _Block_release(v13);

    if (v14)
    {
      swift_release();
      goto LABEL_13;
    }
    swift_beginAccess();
    if (*v8 < 1)
      break;
    while (1)
    {
      sleep(1u);
      v15 = *v8 - 1;
      if (__OFSUB__(*v8, 1))
        break;
      *v8 = v15;
      if (v15 <= 0)
        goto LABEL_10;
    }
    __break(1u);
LABEL_15:
    swift_once();
  }
LABEL_10:
  notify_cancel(out_token);
  v16 = sub_1D26CC084();
  v17 = sub_1D26CDD04();
  if (os_log_type_enabled(v16, v17))
  {
    v18 = (uint8_t *)swift_slowAlloc();
    v19 = swift_slowAlloc();
    v22 = v19;
    *(_DWORD *)v18 = 136446210;
    v20[1] = sub_1D2537880(0xD000000000000021, 0x80000001D26DE600, &v22);
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v16, v17, "%{public}s: Done simulating migration", v18, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v19, -1, -1);
    MEMORY[0x1D823A5E0](v18, -1, -1);
    swift_release();

    return;
  }
  swift_release();

LABEL_13:
}

unint64_t sub_1D254ADF0()
{
  unint64_t result;

  result = qword_1EFC82570;
  if (!qword_1EFC82570)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for SystemDataMigrationState, &type metadata for SystemDataMigrationState);
    atomic_store(result, (unint64_t *)&qword_1EFC82570);
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for SystemDataMigrationState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SystemDataMigrationState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D254AF1C + 4 * byte_1D26D0655[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D254AF50 + 4 * byte_1D26D0650[v4]))();
}

uint64_t sub_1D254AF50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D254AF58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D254AF60);
  return result;
}

uint64_t sub_1D254AF6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D254AF74);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D254AF78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D254AF80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D254AF8C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1D254AF94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SystemDataMigrationState()
{
  return &type metadata for SystemDataMigrationState;
}

uint64_t dispatch thunk of SystemDataMigrator.migrateIfNeeded()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SystemDataMigrator.isMigratingPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t type metadata accessor for _SystemDataMigrator()
{
  return objc_opt_self();
}

uint64_t method lookup function for _SystemDataMigrator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _SystemDataMigrator.isMigratingPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of _SystemDataMigrator.migrateIfNeeded()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

unint64_t sub_1D254B000()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96EE40;
  if (!qword_1ED96EE40)
  {
    v1 = sub_1D26CDD40();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEF828], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96EE40);
  }
  return result;
}

uint64_t sub_1D254B048()
{
  return swift_deallocObject();
}

uint64_t sub_1D254B058()
{
  uint64_t v0;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v0 + 16) = 0;
  return result;
}

uint64_t RemoteActivityArchiveBudgetType.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C616D726F6ELL;
  else
    return 0x676E697472656C61;
}

uint64_t RemoteActivityArchiveBudgetType.hash(into:)()
{
  return sub_1D26CE46C();
}

BOOL static RemoteActivityArchiveBudgetType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1D254B100()
{
  return 0;
}

uint64_t sub_1D254B10C()
{
  return 0;
}

void sub_1D254B118(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1D254B124()
{
  sub_1D254B530();
  return sub_1D26CE4F0();
}

uint64_t sub_1D254B14C()
{
  sub_1D254B530();
  return sub_1D26CE4FC();
}

BOOL sub_1D254B174(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1D254B194()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C616D726F6ELL;
  else
    return 0x676E697472656C61;
}

uint64_t sub_1D254B1CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D254E3C0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D254B1F0(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1D254B1FC()
{
  sub_1D254B4A8();
  return sub_1D26CE4F0();
}

uint64_t sub_1D254B224()
{
  sub_1D254B4A8();
  return sub_1D26CE4FC();
}

uint64_t sub_1D254B24C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1D254B278()
{
  sub_1D254B4EC();
  return sub_1D26CE4F0();
}

uint64_t sub_1D254B2A0()
{
  sub_1D254B4EC();
  return sub_1D26CE4FC();
}

void *static RemoteActivityArchiveBudgetType.allCases.getter()
{
  return &unk_1E93D4CC0;
}

uint64_t RemoteActivityArchiveBudgetType.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82580);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82588);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82590);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D254B4A8();
  sub_1D26CE4E4();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_1D254B4EC();
    sub_1D26CE2F8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_1D254B530();
    sub_1D26CE2F8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

unint64_t sub_1D254B4A8()
{
  unint64_t result;

  result = qword_1EFC82598;
  if (!qword_1EFC82598)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0E04, &type metadata for RemoteActivityArchiveBudgetType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82598);
  }
  return result;
}

unint64_t sub_1D254B4EC()
{
  unint64_t result;

  result = qword_1EFC825A0;
  if (!qword_1EFC825A0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0DB4, &type metadata for RemoteActivityArchiveBudgetType.NormalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC825A0);
  }
  return result;
}

unint64_t sub_1D254B530()
{
  unint64_t result;

  result = qword_1EFC825A8;
  if (!qword_1EFC825A8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0D64, &type metadata for RemoteActivityArchiveBudgetType.AlertingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC825A8);
  }
  return result;
}

uint64_t RemoteActivityArchiveBudgetType.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t RemoteActivityArchiveBudgetType.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC825B0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC825B8);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC825C0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D254B4A8();
  v11 = v33;
  sub_1D26CE4D8();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_1D26CE2E0();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_1D26CE0F4();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC825C8);
    *v21 = &type metadata for RemoteActivityArchiveBudgetType;
    sub_1D26CE268();
    sub_1D26CE0E8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_1D254B4EC();
    sub_1D26CE25C();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_1D254B530();
    v22 = v6;
    sub_1D26CE25C();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_1D254B910@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return RemoteActivityArchiveBudgetType.init(from:)(a1, a2);
}

uint64_t sub_1D254B924(_QWORD *a1)
{
  return RemoteActivityArchiveBudgetType.encode(to:)(a1);
}

void sub_1D254B938(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E93D4D78;
}

uint64_t static RemoteActivityArchiveBudget.makeKey(activityBudgetID:activityBudgetType:)()
{
  uint64_t v1;

  sub_1D26CBA24();
  sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  v1 = sub_1D26CE370();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t RemoteActivityArchiveBudget.activityBudgetID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RemoteActivityArchiveBudget.activityBudgetID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*RemoteActivityArchiveBudget.activityBudgetID.modify())()
{
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.activityBudgetType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RemoteActivityArchiveBudget();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for RemoteActivityArchiveBudget()
{
  uint64_t result;

  result = qword_1ED963BE8;
  if (!qword_1ED963BE8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RemoteActivityArchiveBudget.activityBudgetType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for RemoteActivityArchiveBudget();
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.activityBudgetType.modify())()
{
  type metadata accessor for RemoteActivityArchiveBudget();
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RemoteActivityArchiveBudget.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.id.modify())()
{
  type metadata accessor for RemoteActivityArchiveBudget();
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 28);
  v4 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RemoteActivityArchiveBudget.startDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 28);
  v4 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RemoteActivityArchiveBudget.startDate.modify())()
{
  type metadata accessor for RemoteActivityArchiveBudget();
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.lastRefreshDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 32);
  v4 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RemoteActivityArchiveBudget.lastRefreshDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 32);
  v4 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RemoteActivityArchiveBudget.lastRefreshDate.modify())()
{
  type metadata accessor for RemoteActivityArchiveBudget();
  return CGSizeMake;
}

double RemoteActivityArchiveBudget.windowDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 36));
}

uint64_t RemoteActivityArchiveBudget.windowDuration.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RemoteActivityArchiveBudget();
  *(double *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.windowDuration.modify())()
{
  type metadata accessor for RemoteActivityArchiveBudget();
  return CGSizeMake;
}

double RemoteActivityArchiveBudget.maximumDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 40));
}

uint64_t RemoteActivityArchiveBudget.maximumDuration.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RemoteActivityArchiveBudget();
  *(double *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.maximumDuration.modify())()
{
  type metadata accessor for RemoteActivityArchiveBudget();
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.maximumBudgetPerWindow.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 44));
}

uint64_t RemoteActivityArchiveBudget.maximumBudgetPerWindow.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RemoteActivityArchiveBudget();
  *(_QWORD *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.maximumBudgetPerWindow.modify())()
{
  type metadata accessor for RemoteActivityArchiveBudget();
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.remainingBudget.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 48));
}

uint64_t RemoteActivityArchiveBudget.remainingBudget.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RemoteActivityArchiveBudget();
  *(_QWORD *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*RemoteActivityArchiveBudget.remainingBudget.modify())()
{
  type metadata accessor for RemoteActivityArchiveBudget();
  return CGSizeMake;
}

uint64_t RemoteActivityArchiveBudget.init(activityBudgetID:activityBudgetType:windowDuration:maximumDuration:maximumBudgetPerWindow:startDate:remainingBudget:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  char v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t);
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;

  v16 = *a2;
  v17 = sub_1D26CBA24();
  v18 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  v19 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(a7, a1, v17);
  v20 = (int *)type metadata accessor for RemoteActivityArchiveBudget();
  *(_BYTE *)(a7 + v20[5]) = v16;
  sub_1D25369B0(&qword_1EFC825D0, v18, MEMORY[0x1E0CB09F0]);
  v29 = sub_1D26CE370();
  v30 = v21;
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v17);
  v22 = (uint64_t *)(a7 + v20[6]);
  *v22 = v29;
  v22[1] = v30;
  *(double *)(a7 + v20[9]) = a8;
  *(double *)(a7 + v20[10]) = a9;
  *(_QWORD *)(a7 + v20[11]) = a3;
  v23 = a7 + v20[7];
  v24 = sub_1D26CB9DC();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v23, a4, v24);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(a7 + v20[8], a4, v24);
  v27 = a5;
  if ((a6 & 1) != 0)
    v27 = a3;
  *(_QWORD *)(a7 + v20[12]) = v27;
  return result;
}

uint64_t RemoteActivityArchiveBudget.hash(into:)()
{
  sub_1D26CBA24();
  sub_1D25369B0(&qword_1EFC825D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1D26CD8D8();
  type metadata accessor for RemoteActivityArchiveBudget();
  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  sub_1D26CD8D8();
  sub_1D26CE484();
  sub_1D26CE484();
  sub_1D26CE46C();
  return sub_1D26CE46C();
}

uint64_t sub_1D254C240(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D254C278 + 4 * byte_1D26D0770[a1]))(0xD000000000000010, 0x80000001D26DE660);
}

uint64_t sub_1D254C278(uint64_t a1)
{
  return a1 + 2;
}

uint64_t sub_1D254C334()
{
  return 0x6E696E69616D6572;
}

uint64_t sub_1D254C358()
{
  unsigned __int8 *v0;

  return sub_1D254C240(*v0);
}

uint64_t sub_1D254C360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D254E4A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D254C384(_BYTE *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_1D254C390()
{
  sub_1D254D2A8();
  return sub_1D26CE4F0();
}

uint64_t sub_1D254C3B8()
{
  sub_1D254D2A8();
  return sub_1D26CE4FC();
}

uint64_t RemoteActivityArchiveBudget.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC825E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D254D2A8();
  sub_1D26CE4E4();
  v10[31] = 0;
  sub_1D26CBA24();
  sub_1D25369B0(&qword_1ED963280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1D26CE358();
  if (!v2)
  {
    v10[30] = *(_BYTE *)(v3 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 20));
    v10[29] = 1;
    sub_1D254D2EC();
    sub_1D26CE358();
    v10[28] = 2;
    sub_1D26CE31C();
    v10[27] = 3;
    sub_1D26CB9DC();
    sub_1D25369B0(&qword_1ED961B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1D26CE358();
    v10[26] = 4;
    sub_1D26CE358();
    v10[25] = 5;
    sub_1D26CE334();
    v10[24] = 6;
    sub_1D26CE334();
    v10[15] = 7;
    sub_1D26CE340();
    v10[14] = 8;
    sub_1D26CE340();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t RemoteActivityArchiveBudget.hashValue.getter()
{
  sub_1D26CE460();
  RemoteActivityArchiveBudget.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t RemoteActivityArchiveBudget.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int *v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;

  v37 = a2;
  v42 = sub_1D26CB9DC();
  v40 = *(_QWORD *)(v42 - 8);
  v3 = MEMORY[0x1E0C80A78](v42);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v36 - v6;
  v8 = sub_1D26CBA24();
  v41 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC825F8);
  v11 = *(_QWORD *)(v39 - 8);
  MEMORY[0x1E0C80A78](v39);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = (int *)type metadata accessor for RemoteActivityArchiveBudget();
  MEMORY[0x1E0C80A78](v43);
  v46 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v44 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v15);
  sub_1D254D2A8();
  v38 = v13;
  v16 = v45;
  sub_1D26CE4D8();
  if (v16)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  v17 = v7;
  v45 = v5;
  v18 = v11;
  v56 = 0;
  sub_1D25369B0(&qword_1EFC82600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  sub_1D26CE2C8();
  v19 = v46;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v46, v10, v8);
  v54 = 1;
  sub_1D254D330();
  sub_1D26CE2C8();
  v20 = v43;
  v19[v43[5]] = v55;
  v53 = 2;
  v21 = sub_1D26CE28C();
  v22 = (uint64_t *)&v19[v20[6]];
  *v22 = v21;
  v22[1] = v23;
  v52 = 3;
  sub_1D25369B0(&qword_1ED961B08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v24 = v42;
  sub_1D26CE2C8();
  v25 = &v46[v20[7]];
  v36 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v36(v25, v17, v24);
  v51 = 4;
  v26 = v45;
  sub_1D26CE2C8();
  v36(&v46[v20[8]], v26, v24);
  v50 = 5;
  v27 = v38;
  sub_1D26CE2A4();
  v28 = (uint64_t)v46;
  *(_QWORD *)&v46[v20[9]] = v29;
  v49 = 6;
  sub_1D26CE2A4();
  *(_QWORD *)(v28 + v20[10]) = v30;
  v48 = 7;
  *(_QWORD *)(v28 + v43[11]) = sub_1D26CE2B0();
  v47 = 8;
  v31 = v39;
  v32 = sub_1D26CE2B0();
  v33 = (uint64_t)v44;
  v34 = v32;
  (*(void (**)(char *, uint64_t))(v18 + 8))(v27, v31);
  *(_QWORD *)(v28 + v43[12]) = v34;
  sub_1D254D374(v28, v37);
  __swift_destroy_boxed_opaque_existential_1(v33);
  return sub_1D254D3B8(v28);
}

uint64_t sub_1D254CCDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D254CD10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1D254CD48@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;

  *a2 = *(_BYTE *)(v2 + *(int *)(result + 20));
  return result;
}

uint64_t sub_1D254CD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

double sub_1D254CD98(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 36));
}

double sub_1D254CDA4(uint64_t a1)
{
  uint64_t v1;

  return *(double *)(v1 + *(int *)(a1 + 40));
}

uint64_t sub_1D254CDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 32);
  v5 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1D254CDF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 32);
  v5 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_1D254CE30())()
{
  return CGSizeMake;
}

uint64_t sub_1D254CE44(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 44));
}

uint64_t sub_1D254CE50(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 48));
}

uint64_t sub_1D254CE5C(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(a2 + 48)) = result;
  return result;
}

uint64_t (*sub_1D254CE68())()
{
  return CGSizeMake;
}

uint64_t sub_1D254CE7C@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  char v10;

  v10 = *a2;
  return RemoteActivityArchiveBudget.init(activityBudgetID:activityBudgetType:windowDuration:maximumDuration:maximumBudgetPerWindow:startDate:remainingBudget:)(a1, &v10, a3, a4, a5, a6 & 1, a7, a8, a9);
}

uint64_t sub_1D254CEA8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteActivityArchiveBudget.init(from:)(a1, a2);
}

uint64_t sub_1D254CEBC(_QWORD *a1)
{
  return RemoteActivityArchiveBudget.encode(to:)(a1);
}

uint64_t sub_1D254CED4()
{
  sub_1D26CE460();
  RemoteActivityArchiveBudget.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D254CF14()
{
  sub_1D26CE460();
  RemoteActivityArchiveBudget.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D254CF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  _QWORD v12[2];
  uint64_t v13;
  unint64_t v14;

  v1 = sub_1D26CB9DC();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v3 = *(_QWORD *)(v1 - 8);
  v4 = MEMORY[0x1E0C80A78](v1);
  v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v12 - v7;
  v13 = 0;
  v14 = 0xE000000000000000;
  sub_1D26CE0A0();
  v9 = type metadata accessor for RemoteActivityArchiveBudget();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v12[1] = *(_QWORD *)(v0 + *(int *)(v9 + 48));
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D25369B0((unint64_t *)&qword_1ED961B10, v2, MEMORY[0x1E0CB08F0]);
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CB964();
  sub_1D26CB9B8();
  sub_1D26CB928();
  v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v1);
  v10(v8, v1);
  sub_1D26CDBE4();
  sub_1D26CDA04();
  return v13;
}

uint64_t sub_1D254D190@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(v2 + *(int *)(a1 + 24));
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

BOOL _s9ChronoKit27RemoteActivityArchiveBudgetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  BOOL v10;
  char v11;
  _BOOL8 result;

  if ((sub_1D26CBA00() & 1) == 0)
    return 0;
  v4 = type metadata accessor for RemoteActivityArchiveBudget();
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    return 0;
  v5 = (int *)v4;
  v6 = *(int *)(v4 + 24);
  v7 = *(_QWORD *)(a1 + v6);
  v8 = *(_QWORD *)(a1 + v6 + 8);
  v9 = (_QWORD *)(a2 + v6);
  v10 = v7 == *v9 && v8 == v9[1];
  if (v10 || (v11 = sub_1D26CE3D0(), result = 0, (v11 & 1) != 0))
  {
    if ((sub_1D26CB9A0() & 1) != 0
      && (sub_1D26CB9A0() & 1) != 0
      && *(double *)(a1 + v5[9]) == *(double *)(a2 + v5[9])
      && *(double *)(a1 + v5[10]) == *(double *)(a2 + v5[10])
      && *(_QWORD *)(a1 + v5[11]) == *(_QWORD *)(a2 + v5[11]))
    {
      return *(_QWORD *)(a1 + v5[12]) == *(_QWORD *)(a2 + v5[12]);
    }
    return 0;
  }
  return result;
}

unint64_t sub_1D254D2A8()
{
  unint64_t result;

  result = qword_1EFC825E8;
  if (!qword_1EFC825E8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0D14, &type metadata for RemoteActivityArchiveBudget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC825E8);
  }
  return result;
}

unint64_t sub_1D254D2EC()
{
  unint64_t result;

  result = qword_1EFC825F0;
  if (!qword_1EFC825F0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RemoteActivityArchiveBudgetType, &type metadata for RemoteActivityArchiveBudgetType);
    atomic_store(result, (unint64_t *)&qword_1EFC825F0);
  }
  return result;
}

unint64_t sub_1D254D330()
{
  unint64_t result;

  result = qword_1EFC82608;
  if (!qword_1EFC82608)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RemoteActivityArchiveBudgetType, &type metadata for RemoteActivityArchiveBudgetType);
    atomic_store(result, (unint64_t *)&qword_1EFC82608);
  }
  return result;
}

uint64_t sub_1D254D374(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteActivityArchiveBudget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D254D3B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for RemoteActivityArchiveBudget();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D254D3F8()
{
  unint64_t result;

  result = qword_1EFC82610;
  if (!qword_1EFC82610)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RemoteActivityArchiveBudgetType, &type metadata for RemoteActivityArchiveBudgetType);
    atomic_store(result, (unint64_t *)&qword_1EFC82610);
  }
  return result;
}

unint64_t sub_1D254D440()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC82618;
  if (!qword_1EFC82618)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82620);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC82618);
  }
  return result;
}

uint64_t sub_1D254D48C()
{
  return sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
}

uint64_t sub_1D254D4B8()
{
  return sub_1D25369B0(&qword_1EFC825D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
}

unint64_t sub_1D254D4E8()
{
  unint64_t result;

  result = qword_1EFC82628;
  if (!qword_1EFC82628)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RemoteActivityArchiveBudgetType, &type metadata for RemoteActivityArchiveBudgetType);
    atomic_store(result, (unint64_t *)&qword_1EFC82628);
  }
  return result;
}

unint64_t sub_1D254D530()
{
  unint64_t result;

  result = qword_1EFC82630;
  if (!qword_1EFC82630)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RemoteActivityArchiveBudgetType, &type metadata for RemoteActivityArchiveBudgetType);
    atomic_store(result, (unint64_t *)&qword_1EFC82630);
  }
  return result;
}

uint64_t sub_1D254D57C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1D25369B0(&qword_1EFC82638, (uint64_t (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget, (uint64_t)&protocol conformance descriptor for RemoteActivityArchiveBudget);
  a1[2] = sub_1D25369B0(&qword_1EFC82640, (uint64_t (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget, (uint64_t)&protocol conformance descriptor for RemoteActivityArchiveBudget);
  a1[3] = sub_1D25369B0(&qword_1EFC82648, (uint64_t (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget, (uint64_t)&protocol conformance descriptor for RemoteActivityArchiveBudget);
  a1[4] = sub_1D25369B0(&qword_1EFC82650, (uint64_t (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget, (uint64_t)&protocol conformance descriptor for RemoteActivityArchiveBudget);
  result = sub_1D25369B0(&qword_1EFC82658, (uint64_t (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget, (uint64_t)&protocol conformance descriptor for RemoteActivityArchiveBudget);
  a1[5] = result;
  return result;
}

uint64_t sub_1D254D62C()
{
  return sub_1D25369B0(&qword_1EFC82660, (uint64_t (*)(uint64_t))type metadata accessor for RemoteActivityArchiveBudget, (uint64_t)&protocol conformance descriptor for RemoteActivityArchiveBudget);
}

uint64_t sub_1D254D658()
{
  return MEMORY[0x1E0DEA978];
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudgetType()
{
  return &type metadata for RemoteActivityArchiveBudgetType;
}

_QWORD *initializeBufferWithCopyOfBuffer for RemoteActivityArchiveBudget(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CBA24();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (_QWORD *)((char *)a1 + v8);
    v10 = (_QWORD *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    v12 = a3[7];
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = sub_1D26CB9DC();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    v16((char *)a1 + a3[8], (char *)a2 + a3[8], v15);
    v17 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *(_QWORD *)((char *)a1 + v17) = *(_QWORD *)((char *)a2 + v17);
    v18 = a3[12];
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    *(_QWORD *)((char *)a1 + v18) = *(_QWORD *)((char *)a2 + v18);
  }
  return a1;
}

uint64_t destroy for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v8)(uint64_t, uint64_t);

  v4 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_1D26CB9DC();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
  v8(v5, v6);
  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a1 + *(int *)(a2 + 32), v6);
}

uint64_t initializeWithCopy for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D26CB9DC();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v12, v13, v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  return a1;
}

uint64_t assignWithCopy for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1D26CB9DC();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24);
  v14(v11, v12, v13);
  v14(a1 + a3[8], a2 + a3[8], v13);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t initializeWithTake for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[7];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1D26CB9DC();
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12(a1 + a3[8], a2 + a3[8], v11);
  v13 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  v14 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for RemoteActivityArchiveBudget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1D26CB9DC();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40);
  v16(v13, v14, v15);
  v16(a1 + a3[8], a2 + a3[8], v15);
  v17 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  v18 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v18) = *(_QWORD *)(a2 + v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteActivityArchiveBudget()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D254DC0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D26CB9DC();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteActivityArchiveBudget()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D254DCC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D26CBA24();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1D26CB9DC();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D254DD6C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CBA24();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CB9DC();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for RemoteActivityArchiveBudget.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 8;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 8;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 8;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteActivityArchiveBudget.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1D254DEF4 + 4 * byte_1D26D077E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1D254DF28 + 4 * byte_1D26D0779[v4]))();
}

uint64_t sub_1D254DF28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D254DF30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D254DF38);
  return result;
}

uint64_t sub_1D254DF44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D254DF4CLL);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1D254DF50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D254DF58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudget.CodingKeys()
{
  return &type metadata for RemoteActivityArchiveBudget.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ReloadConfiguration.ReloadCost(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9ChronoKit31RemoteActivityArchiveBudgetTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D254E050 + 4 * byte_1D26D0788[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D254E084 + 4 * byte_1D26D0783[v4]))();
}

uint64_t sub_1D254E084(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D254E08C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D254E094);
  return result;
}

uint64_t sub_1D254E0A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D254E0A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D254E0AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D254E0B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudgetType.CodingKeys()
{
  return &type metadata for RemoteActivityArchiveBudgetType.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudgetType.AlertingCodingKeys()
{
  return &type metadata for RemoteActivityArchiveBudgetType.AlertingCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteActivityArchiveBudgetType.NormalCodingKeys()
{
  return &type metadata for RemoteActivityArchiveBudgetType.NormalCodingKeys;
}

unint64_t sub_1D254E0F4()
{
  unint64_t result;

  result = qword_1EFC82668;
  if (!qword_1EFC82668)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0C34, &type metadata for RemoteActivityArchiveBudgetType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82668);
  }
  return result;
}

unint64_t sub_1D254E13C()
{
  unint64_t result;

  result = qword_1EFC82670;
  if (!qword_1EFC82670)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0CEC, &type metadata for RemoteActivityArchiveBudget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82670);
  }
  return result;
}

unint64_t sub_1D254E184()
{
  unint64_t result;

  result = qword_1EFC82678;
  if (!qword_1EFC82678)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0C5C, &type metadata for RemoteActivityArchiveBudget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82678);
  }
  return result;
}

unint64_t sub_1D254E1CC()
{
  unint64_t result;

  result = qword_1EFC82680;
  if (!qword_1EFC82680)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0C84, &type metadata for RemoteActivityArchiveBudget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82680);
  }
  return result;
}

unint64_t sub_1D254E214()
{
  unint64_t result;

  result = qword_1EFC82688;
  if (!qword_1EFC82688)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0B54, &type metadata for RemoteActivityArchiveBudgetType.AlertingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82688);
  }
  return result;
}

unint64_t sub_1D254E25C()
{
  unint64_t result;

  result = qword_1EFC82690;
  if (!qword_1EFC82690)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0B7C, &type metadata for RemoteActivityArchiveBudgetType.AlertingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82690);
  }
  return result;
}

unint64_t sub_1D254E2A4()
{
  unint64_t result;

  result = qword_1EFC82698;
  if (!qword_1EFC82698)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0B04, &type metadata for RemoteActivityArchiveBudgetType.NormalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82698);
  }
  return result;
}

unint64_t sub_1D254E2EC()
{
  unint64_t result;

  result = qword_1EFC826A0;
  if (!qword_1EFC826A0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0B2C, &type metadata for RemoteActivityArchiveBudgetType.NormalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC826A0);
  }
  return result;
}

unint64_t sub_1D254E334()
{
  unint64_t result;

  result = qword_1EFC826A8;
  if (!qword_1EFC826A8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0BA4, &type metadata for RemoteActivityArchiveBudgetType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC826A8);
  }
  return result;
}

unint64_t sub_1D254E37C()
{
  unint64_t result;

  result = qword_1EFC826B0;
  if (!qword_1EFC826B0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D0BCC, &type metadata for RemoteActivityArchiveBudgetType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC826B0);
  }
  return result;
}

uint64_t sub_1D254E3C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x676E697472656C61 && a2 == 0xE800000000000000;
  if (v2 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616D726F6ELL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D254E4A8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001D26DE660 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001D26DE680 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7461447472617473 && a2 == 0xE900000000000065 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x726665527473616CLL && a2 == 0xEF65746144687365 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7544776F646E6977 && a2 == 0xEE006E6F69746172 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x446D756D6978616DLL && a2 == 0xEF6E6F6974617275 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001D26DE6A0 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E696E69616D6572 && a2 == 0xEF74656764754267)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v5 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

uint64_t sub_1D254E8D4()
{
  uint64_t result;

  result = sub_1D26CD02C();
  qword_1ED977E20 = result;
  return result;
}

uint64_t sub_1D254E90C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint8_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = type metadata accessor for LiveWidgetEntryView();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CC09C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v1 + *(int *)(v2 + 36), v5);
  sub_1D2534120(v1, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v9 = sub_1D26CC084();
  v10 = sub_1D26CDD04();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v19 = v5;
    v13 = v12;
    v21 = v12;
    *(_DWORD *)v11 = 136315138;
    v18 = v11 + 4;
    v14 = (uint64_t *)(*((_QWORD *)v4 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    v16 = *v14;
    v15 = v14[1];
    swift_bridgeObjectRetain();
    v20 = sub_1D2537880(v16, v15, &v21);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D25340E4((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    _os_log_impl(&dword_1D2531000, v9, v10, "[%s] Cached view assigned.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v13, -1, -1);
    MEMORY[0x1D823A5E0](v11, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v19);
  }
  else
  {
    sub_1D25340E4((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t LiveWidgetEntryView.init(viewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  __int128 v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD60);
  sub_1D26CCF18();
  *(_OWORD *)(a2 + 16) = v9;
  sub_1D26CCF18();
  *(_OWORD *)(a2 + 32) = v9;
  *(_BYTE *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
  v4 = a1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logger;
  v5 = a2 + *(int *)(type metadata accessor for LiveWidgetEntryView() + 36);
  v6 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v5, v4, v6);
  type metadata accessor for LiveWidgetEntryViewModel(0);
  sub_1D25369B0(&qword_1ED96D290, type metadata accessor for LiveWidgetEntryViewModel, (uint64_t)&protocol conformance descriptor for LiveWidgetEntryViewModel);
  result = sub_1D26CC39C();
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = v8;
  return result;
}

uint64_t type metadata accessor for LiveWidgetEntryView()
{
  uint64_t result;

  result = qword_1ED96D148;
  if (!qword_1ED96D148)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t LiveWidgetEntryView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t KeyPath;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  char *v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t);
  void *v81;
  uint64_t v82;
  id v83;
  id *v84;
  BOOL v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t, uint64_t);
  void *v95;
  id v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (**v110)();
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (**v116)();
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t (**v121)(uint64_t *);
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t (*v128)(uint64_t);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t *v142;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t (**v181)(uint64_t);
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  __int16 v196;
  __int128 v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;

  v2 = v1;
  v191 = a1;
  v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CB0);
  MEMORY[0x1E0C80A78](v187);
  v190 = (uint64_t)&v144 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962BD0);
  MEMORY[0x1E0C80A78](v189);
  v188 = (char *)&v144 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8);
  MEMORY[0x1E0C80A78](v5);
  v186 = (char *)&v144 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DebugInfo();
  MEMORY[0x1E0C80A78](v7);
  v185 = (uint64_t)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CC09C();
  v183 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v182 = (char *)&v144 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = type metadata accessor for InteractiveWidgetSetupViewModifier();
  MEMORY[0x1E0C80A78](v180);
  v181 = (uint64_t (**)(uint64_t))((char *)&v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1E0C80A78](v12);
  v165 = (uint64_t)&v144 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v150 = (uint64_t)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v144 - v17;
  v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962EC8);
  v147 = *(_QWORD *)(v148 - 8);
  MEMORY[0x1E0C80A78](v148);
  v145 = (char *)&v144 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E38);
  MEMORY[0x1E0C80A78](v146);
  v21 = (char *)&v144 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E50);
  MEMORY[0x1E0C80A78](v149);
  v23 = (char *)&v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E68);
  MEMORY[0x1E0C80A78](v152);
  v151 = (uint64_t)&v144 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E70);
  MEMORY[0x1E0C80A78](v153);
  v154 = (uint64_t)&v144 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C58);
  MEMORY[0x1E0C80A78](v157);
  v192 = (uint64_t)&v144 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C60);
  MEMORY[0x1E0C80A78](v160);
  v163 = (uint64_t)&v144 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C68);
  MEMORY[0x1E0C80A78](v161);
  v166 = (uint64_t)&v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v164 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C70);
  MEMORY[0x1E0C80A78](v164);
  v168 = (uint64_t)&v144 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C88);
  MEMORY[0x1E0C80A78](v167);
  v170 = (uint64_t)&v144 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C80);
  MEMORY[0x1E0C80A78](v169);
  v173 = (uint64_t)&v144 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C10);
  MEMORY[0x1E0C80A78](v172);
  v175 = (uint64_t)&v144 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962D40);
  MEMORY[0x1E0C80A78](v33);
  v174 = (uint64_t)&v144 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962D10);
  MEMORY[0x1E0C80A78](v177);
  v178 = (uint64_t)&v144 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962D00);
  v37 = MEMORY[0x1E0C80A78](v36);
  v176 = (char *)&v144 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v179 = (uint64_t)&v144 - v39;
  v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v144 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v162 = type metadata accessor for LiveWidgetEntryView();
  v156 = *(_QWORD *)(v162 - 8);
  v43 = MEMORY[0x1E0C80A78](v162);
  v159 = (uint64_t)&v144 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = MEMORY[0x1E0C80A78](v43);
  v155 = (uint64_t)&v144 - v46;
  v158 = v47;
  MEMORY[0x1E0C80A78](v45);
  v49 = (char *)&v144 - v48;
  v197 = *(_OWORD *)(v1 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD38);
  sub_1D26CCF24();
  sub_1D2550280();
  v197 = *(_OWORD *)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962ED0);
  sub_1D26CCF24();
  v50 = v200;
  v51 = *(_BYTE *)(*(_QWORD *)(v1 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__invalidated);
  v184 = v9;
  if ((v51 & 1) != 0)
  {
    if (!v200)
    {
      *(_QWORD *)&v197 = sub_1D26CCEAC();
      v50 = sub_1D26CCFC0();
    }
  }
  else
  {
    sub_1D2534120(v1, (uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    if (!v50)
    {
      v52 = *((_QWORD *)v49 + 1);
      if (*(_BYTE *)(v52 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce) == 1
        && (*(_BYTE *)(v52 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__needsViewRebuild) & 1) == 0)
      {
        swift_retain();
      }
      else
      {
        LOBYTE(v197) = 1;
        swift_retain();
        sub_1D26083C0((char *)&v197);
      }
      v53 = v52 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
      swift_beginAccess();
      sub_1D2537078(v53, (uint64_t)v42, &qword_1ED96D438);
      v54 = sub_1D2552EE8();
      sub_1D253703C((uint64_t)v42, &qword_1ED96D438);
      v50 = v54;
      swift_release();
    }
    sub_1D25340E4((uint64_t)v49, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  }
  *(_QWORD *)&v197 = v50;
  v55 = *(_QWORD *)(v2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  sub_1D2537078(v55, (uint64_t)v18, &qword_1ED96B1E0);
  v171 = v50;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD60);
  sub_1D255336C();
  v56 = v145;
  sub_1D26CCDA4();
  sub_1D253703C((uint64_t)v18, &qword_1ED96B1E0);
  swift_release();
  KeyPath = swift_getKeyPath();
  v58 = *(_QWORD *)(v2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  v59 = (uint64_t *)&v21[*(int *)(v146 + 36)];
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC98);
  sub_1D2537078(v58, (uint64_t)v59 + *(int *)(v60 + 28), &qword_1ED96B1E0);
  *v59 = KeyPath;
  (*(void (**)(char *, char *, uint64_t))(v147 + 32))(v21, v56, v148);
  v61 = swift_getKeyPath();
  v62 = *(_QWORD *)(v2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  v63 = v62;
  v64 = v150;
  sub_1D2537078(v63, v150, &qword_1ED96B1E0);
  v65 = sub_1D26CB9DC();
  v66 = v2;
  v67 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v64, 1, v65) != 1;
  sub_1D253703C(v64, &qword_1ED96B1E0);
  sub_1D2537078((uint64_t)v21, (uint64_t)v23, &qword_1ED962E38);
  v68 = &v23[*(int *)(v149 + 36)];
  *(_QWORD *)v68 = v61;
  v68[8] = v67;
  sub_1D253703C((uint64_t)v21, &qword_1ED962E38);
  if (*(_QWORD *)(v66 + 56))
  {
    v195 = *(_QWORD *)(v66 + 56);
    v196 = 0;
    swift_retain();
  }
  else
  {
    swift_retain();
    sub_1D2602A98((uint64_t)&v197);
    swift_release();
    v195 = v197;
    LOBYTE(v196) = BYTE8(v197);
    HIBYTE(v196) = 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962EB0);
  sub_1D255343C();
  sub_1D26CC90C();
  v69 = v197;
  v70 = BYTE8(v197);
  v71 = BYTE9(v197);
  v72 = sub_1D26CD008();
  v74 = v73;
  v75 = v151;
  sub_1D2537078((uint64_t)v23, v151, &qword_1ED962E50);
  v76 = v75 + *(int *)(v152 + 36);
  *(_QWORD *)v76 = v69;
  *(_BYTE *)(v76 + 8) = v70;
  *(_BYTE *)(v76 + 9) = v71;
  *(_QWORD *)(v76 + 16) = v72;
  *(_QWORD *)(v76 + 24) = v74;
  sub_1D253703C((uint64_t)v23, &qword_1ED962E50);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v74) = v197;
  v77 = v154;
  sub_1D2537078(v75, v154, &qword_1ED962E68);
  *(_BYTE *)(v77 + *(int *)(v153 + 36)) = v74;
  sub_1D253703C(v75, &qword_1ED962E68);
  sub_1D2538510(*(_QWORD *)(v66 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)&v197);
  v78 = v198;
  v79 = v199;
  __swift_project_boxed_opaque_existential_0(&v197, v198);
  v80 = *(uint64_t (**)(uint64_t, uint64_t))(v79 + 8);
  swift_retain();
  v81 = (void *)v80(v78, v79);
  v82 = v165;
  sub_1D2534120((uint64_t)v81 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, v165, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

  v83 = *(id *)(v82 + 8);
  sub_1D25340E4(v82, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v197);
  swift_release();
  v84 = (id *)(*(_QWORD *)(v66 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
  swift_beginAccess();
  v85 = objc_msgSend(*v84, sel_backgroundViewPolicy) != (id)1;
  type metadata accessor for DebugOverlayObserver();
  swift_allocObject();
  v86 = v83;
  sub_1D2637838();
  sub_1D25369B0(&qword_1ED962D80, (uint64_t (*)(uint64_t))type metadata accessor for DebugOverlayObserver, (uint64_t)&unk_1D26D824C);
  v87 = sub_1D26CC39C();
  v89 = v88;
  v90 = v192;
  sub_1D2537078(v77, v192, &qword_1ED962E70);

  v91 = v90 + *(int *)(v157 + 36);
  *(_QWORD *)v91 = v86;
  *(_BYTE *)(v91 + 8) = v85;
  *(_QWORD *)(v91 + 16) = v87;
  *(_QWORD *)(v91 + 24) = v89;
  sub_1D253703C(v77, &qword_1ED962E70);
  sub_1D2538510(*(_QWORD *)(v66 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)&v197);
  v92 = v198;
  v93 = v199;
  __swift_project_boxed_opaque_existential_0(&v197, v198);
  v94 = *(uint64_t (**)(uint64_t, uint64_t))(v93 + 8);
  swift_retain();
  v95 = (void *)v94(v92, v93);
  sub_1D2534120((uint64_t)v95 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, v82, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

  v96 = *(id *)(v82 + 8);
  sub_1D25340E4(v82, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v197);
  swift_release();
  LOBYTE(v78) = *(_BYTE *)(v66 + 48);
  v97 = v155;
  sub_1D2534120(v66, v155, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v98 = 1;
  v99 = v66;
  if ((v78 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    swift_release();
    v98 = v197;
  }
  sub_1D25340E4(v97, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v100 = v192;
  v101 = v163;
  sub_1D2537078(v192, v163, &qword_1ED962C58);
  v102 = v101 + *(int *)(v160 + 36);
  *(_QWORD *)v102 = v96;
  *(_BYTE *)(v102 + 8) = v98;
  sub_1D253703C(v100, &qword_1ED962C58);
  v103 = swift_getKeyPath();
  v104 = v166;
  sub_1D2537078(v101, v166, &qword_1ED962C60);
  v105 = v104 + *(int *)(v161 + 36);
  *(_QWORD *)v105 = v103;
  *(_BYTE *)(v105 + 8) = 1;
  sub_1D253703C(v101, &qword_1ED962C60);
  v106 = v159;
  sub_1D2534120(v99, v159, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v107 = (*(unsigned __int8 *)(v156 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v156 + 80);
  v108 = swift_allocObject();
  sub_1D2539ADC(v106, v108 + v107, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v109 = v168;
  sub_1D2537078(v104, v168, &qword_1ED962C68);
  v110 = (uint64_t (**)())(v109 + *(int *)(v164 + 36));
  *v110 = sub_1D2553584;
  v110[1] = (uint64_t (*)())v108;
  v110[2] = 0;
  v110[3] = 0;
  sub_1D253703C(v104, &qword_1ED962C68);
  v111 = (uint64_t *)(*(_QWORD *)(v99 + 8)
                   + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDateDidChangePublisher);
  swift_beginAccess();
  v112 = *v111;
  sub_1D2534120(v99, v106, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v113 = swift_allocObject();
  sub_1D2539ADC(v106, v113 + v107, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v114 = v170;
  sub_1D2537078(v109, v170, &qword_1ED962C70);
  v115 = v167;
  *(_QWORD *)(v114 + *(int *)(v167 + 52)) = v112;
  v116 = (uint64_t (**)())(v114 + *(int *)(v115 + 56));
  *v116 = sub_1D25535B4;
  v116[1] = (uint64_t (*)())v113;
  swift_retain();
  sub_1D253703C(v109, &qword_1ED962C70);
  v117 = *(_QWORD *)(*(_QWORD *)(v99 + 8)
                   + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntryDidChangePublisher);
  sub_1D2534120(v99, v106, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v118 = swift_allocObject();
  sub_1D2539ADC(v106, v118 + v107, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v119 = v173;
  sub_1D2537078(v114, v173, &qword_1ED962C88);
  v120 = v169;
  *(_QWORD *)(v119 + *(int *)(v169 + 52)) = v117;
  v121 = (uint64_t (**)(uint64_t *))(v119 + *(int *)(v120 + 56));
  *v121 = sub_1D25535F4;
  v121[1] = (uint64_t (*)(uint64_t *))v118;
  swift_retain();
  sub_1D253703C(v114, &qword_1ED962C88);
  v122 = v183;
  v123 = v182;
  v124 = v184;
  (*(void (**)(char *, uint64_t, uint64_t))(v183 + 16))(v182, v99 + *(int *)(v162 + 36), v184);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v125 = v193;
  if (v193)
  {
    v126 = v194;
    v127 = swift_allocObject();
    *(_QWORD *)(v127 + 16) = v125;
    *(_QWORD *)(v127 + 24) = v126;
    v128 = sub_1D25539E4;
  }
  else
  {
    v128 = 0;
    v127 = 0;
  }
  v129 = (uint64_t)v181;
  *v181 = v128;
  *(_QWORD *)(v129 + 8) = v127;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  swift_release();
  *(_BYTE *)(v129 + 16) = v193;
  (*(void (**)(uint64_t, char *, uint64_t))(v122 + 32))(v129 + *(int *)(v180 + 24), v123, v124);
  v130 = v175;
  sub_1D2537078(v119, v175, &qword_1ED962C80);
  sub_1D2539ADC(v129, v130 + *(int *)(v172 + 36), (uint64_t (*)(_QWORD))type metadata accessor for InteractiveWidgetSetupViewModifier);
  sub_1D253703C(v119, &qword_1ED962C80);
  swift_retain();
  v131 = v185;
  sub_1D26097DC(v185);
  swift_release();
  v132 = v174;
  sub_1D2551DD0(v131, v174);
  sub_1D25340E4(v131, (uint64_t (*)(_QWORD))type metadata accessor for DebugInfo);
  sub_1D253703C(v130, &qword_1ED962C10);
  v133 = v178;
  sub_1D2552194(*(_QWORD *)(*(_QWORD *)(v99 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber), v178);
  sub_1D253703C(v132, &qword_1ED962D40);
  v192 = type metadata accessor for LiveWidgetEntryViewModel(0);
  sub_1D25369B0(&qword_1ED96D290, type metadata accessor for LiveWidgetEntryViewModel, (uint64_t)&protocol conformance descriptor for LiveWidgetEntryViewModel);
  sub_1D26CC3A8();
  swift_getKeyPath();
  v134 = (uint64_t)v186;
  sub_1D26CC3B4();
  swift_release();
  swift_release();
  v135 = (uint64_t)v188;
  sub_1D2537078(v134, (uint64_t)&v188[*(int *)(v189 + 36)], &qword_1ED96B2A8);
  sub_1D2537078(v133, v135, &qword_1ED962D10);
  sub_1D2537078(v135, v190, &qword_1ED962BD0);
  swift_storeEnumTagMultiPayload();
  sub_1D25536E4();
  sub_1D2553830(&qword_1ED962D08, &qword_1ED962D10, (uint64_t (*)(void))sub_1D2553788, sub_1D255380C);
  v136 = (uint64_t)v176;
  sub_1D26CC90C();
  sub_1D253703C(v135, &qword_1ED962BD0);
  v137 = v179;
  sub_1D25384CC(v136, v179, &qword_1ED962D00);
  sub_1D253703C(v134, &qword_1ED96B2A8);
  sub_1D253703C(v133, &qword_1ED962D10);
  swift_retain();
  v138 = sub_1D26CC39C();
  v140 = v139;
  swift_release();
  v141 = v191;
  sub_1D2537078(v137, v191, &qword_1ED962D00);
  v142 = (uint64_t *)(v141 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED962BE0) + 36));
  *v142 = v138;
  v142[1] = v140;
  return sub_1D253703C(v137, &qword_1ED962D00);
}

uint64_t sub_1D2550280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char *v66;
  id v67;
  void *v68;
  id v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  id v73;
  void *v74;
  id v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;

  v1 = sub_1D26CB9DC();
  v82 = *(_QWORD *)(v1 - 8);
  v83 = v1;
  MEMORY[0x1E0C80A78](v1);
  v79 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v81 = (uint64_t)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v80 = (uint64_t)&v78 - v6;
  v7 = type metadata accessor for LiveWidgetEntryView();
  v8 = MEMORY[0x1E0C80A78](v7);
  v87 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v78 - v11;
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v78 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v86 = (uint64_t)&v78 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v78 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v78 - v21;
  v88 = sub_1D26CC09C();
  v23 = *(_QWORD *)(v88 - 8);
  v24 = MEMORY[0x1E0C80A78](v88);
  v85 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v84 = (char *)&v78 - v26;
  if (qword_1ED96F1C8 != -1)
    swift_once();
  v27 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 29) + 88);
  v28 = *(os_unfair_lock_s **)(v27 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v28);
  LOBYTE(v28) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 16));
  swift_release();
  swift_release();
  v29 = v0 + *(int *)(v7 + 36);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v31 = v23;
  if ((v28 & 1) != 0)
  {
    v32 = v84;
    v33 = v88;
    v30(v84, v29, v88);
    sub_1D2534120(v0, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    sub_1D2534120(v0, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    v34 = v86;
    sub_1D2534120(v0, v86, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    v35 = sub_1D26CC084();
    v36 = sub_1D26CDD04();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      v87 = (char *)swift_slowAlloc();
      v91 = v87;
      *(_DWORD *)v37 = 136315650;
      v38 = (uint64_t *)(*((_QWORD *)v22 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v39 = *v38;
      v40 = v38[1];
      swift_bridgeObjectRetain();
      v90 = sub_1D2537880(v39, v40, (uint64_t *)&v91);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D25340E4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      *(_WORD *)(v37 + 12) = 2048;
      v41 = *(_QWORD *)(*((_QWORD *)v20 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber);
      sub_1D25340E4((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      v90 = v41;
      sub_1D26CDF50();
      *(_WORD *)(v37 + 22) = 2080;
      v42 = *(_QWORD *)(v86 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
      swift_beginAccess();
      v43 = v80;
      sub_1D2537078(v42, v80, &qword_1ED96B1E0);
      v45 = v82;
      v44 = v83;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v43, 1, v83))
      {
        v46 = 1701736302;
        sub_1D253703C(v43, &qword_1ED96B1E0);
        v47 = 0xE400000000000000;
      }
      else
      {
        v66 = v79;
        (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v79, v43, v44);
        sub_1D253703C(v43, &qword_1ED96B1E0);
        if (qword_1ED96C7C0 != -1)
          swift_once();
        v67 = (id)qword_1ED96C848;
        v68 = (void *)sub_1D26CB940();
        v69 = objc_msgSend(v67, sel_stringFromDate_, v68);

        v46 = sub_1D26CD938();
        v47 = v70;

        (*(void (**)(char *, uint64_t))(v45 + 8))(v66, v44);
        v32 = v84;
      }
      v89 = sub_1D2537880(v46, v47, (uint64_t *)&v91);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D25340E4(v86, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      _os_log_impl(&dword_1D2531000, v35, v36, "[%s] Rendering view: %lld with referenceDate %s", (uint8_t *)v37, 0x20u);
      v71 = (uint64_t)v87;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v71, -1, -1);
      MEMORY[0x1D823A5E0](v37, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v88);
    }
    else
    {
      sub_1D25340E4((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      sub_1D25340E4((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      sub_1D25340E4(v34, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);

      return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v32, v33);
    }
  }
  else
  {
    v86 = v23;
    v48 = v85;
    v49 = v88;
    v30(v85, v29, v88);
    sub_1D2534120(v0, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    sub_1D2534120(v0, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    v50 = (uint64_t)v87;
    sub_1D2534120(v0, (uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    v51 = sub_1D26CC084();
    v52 = sub_1D26CDCE0();
    if (os_log_type_enabled(v51, v52))
    {
      v53 = swift_slowAlloc();
      v84 = (char *)swift_slowAlloc();
      v91 = v84;
      *(_DWORD *)v53 = 136315650;
      v54 = (uint64_t *)(*((_QWORD *)v15 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v55 = *v54;
      v56 = v54[1];
      swift_bridgeObjectRetain();
      v90 = sub_1D2537880(v55, v56, (uint64_t *)&v91);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D25340E4((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      *(_WORD *)(v53 + 12) = 2048;
      v57 = *(_QWORD *)(*((_QWORD *)v12 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber);
      sub_1D25340E4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      v90 = v57;
      sub_1D26CDF50();
      *(_WORD *)(v53 + 22) = 2080;
      v58 = *((_QWORD *)v87 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
      swift_beginAccess();
      v59 = v58;
      v60 = v81;
      sub_1D2537078(v59, v81, &qword_1ED96B1E0);
      v62 = v82;
      v61 = v83;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v60, 1, v83))
      {
        v63 = 1701736302;
        sub_1D253703C(v60, &qword_1ED96B1E0);
        v64 = 0xE400000000000000;
      }
      else
      {
        v72 = v79;
        (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v79, v60, v61);
        sub_1D253703C(v60, &qword_1ED96B1E0);
        if (qword_1ED96C7C0 != -1)
          swift_once();
        v73 = (id)qword_1ED96C848;
        v74 = (void *)sub_1D26CB940();
        v75 = objc_msgSend(v73, sel_stringFromDate_, v74);

        v63 = sub_1D26CD938();
        v64 = v76;

        (*(void (**)(char *, uint64_t))(v62 + 8))(v72, v61);
        v48 = v85;
      }
      v89 = sub_1D2537880(v63, v64, (uint64_t *)&v91);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D25340E4((uint64_t)v87, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      _os_log_impl(&dword_1D2531000, v51, v52, "[%s] Rendering view: %lld with referenceDate %s", (uint8_t *)v53, 0x20u);
      v77 = v84;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v77, -1, -1);
      MEMORY[0x1D823A5E0](v53, -1, -1);
    }
    else
    {
      sub_1D25340E4((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      sub_1D25340E4((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      sub_1D25340E4(v50, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v86 + 8))(v48, v49);
  }
}

uint64_t sub_1D2550C34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v2);
  sub_1D2537078(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_1ED96B1E0);
  return sub_1D26CC6B4();
}

uint64_t sub_1D2550CB4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[2];
  __int128 v10;
  char v11[24];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)(v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce) == 1
    && (*(_BYTE *)(v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__needsViewRebuild) & 1) == 0)
  {
    swift_retain();
  }
  else
  {
    v11[0] = 1;
    swift_retain();
    sub_1D26083C0(v11);
  }
  v6 = v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D2537078(v6, (uint64_t)v4, &qword_1ED96D438);
  v7 = sub_1D2552EE8();
  sub_1D253703C((uint64_t)v4, &qword_1ED96D438);
  swift_release();
  v10 = *(_OWORD *)(a1 + 16);
  v9[1] = v7;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962ED0);
  sub_1D26CCF30();
  sub_1D254E90C();
  return swift_release();
}

uint64_t sub_1D2550E0C()
{
  uint64_t result;
  uint64_t v1;

  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD38);
  result = sub_1D26CCF24();
  if (__OFADD__(v1, 1))
  {
    __break(1u);
  }
  else
  {
    sub_1D26CCF30();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2550E90(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  __objc2_ivar *v22;
  int v23;
  double v24;
  double v25;
  _BYTE *v26;
  char v27;
  unint64_t v28;
  uint64_t v29;
  ValueMetadata *v30;
  unint64_t v31;
  uint64_t (*v32)(ValueMetadata *, unint64_t);
  char *v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  void *v36;
  os_unfair_lock_s *v37;
  id v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int EnumCaseMultiPayload;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80[24];
  ValueMetadata *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84[4];

  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  v4 = MEMORY[0x1E0C80A78](v72);
  v69 = (uint64_t)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v68 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v68 - v9;
  v11 = sub_1D26CC09C();
  v77 = *(_QWORD *)(v11 - 8);
  v78 = v11;
  MEMORY[0x1E0C80A78](v11);
  v76 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v73 = type metadata accessor for LiveWidgetEntryView();
  v13 = MEMORY[0x1E0C80A78](v73);
  v75 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v74 = (char *)&v68 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v68 - v17;
  v19 = *a1;
  sub_1D25516D4(*a1);
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
  {
LABEL_31:
    v63 = *(_QWORD *)(a2 + 8);
    if (*(_BYTE *)(v63 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce) == 1
      && (*(_BYTE *)(v63 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__needsViewRebuild) & 1) == 0)
    {
      swift_retain();
    }
    else
    {
      v80[0] = 1;
      swift_retain();
      sub_1D26083C0(v80);
    }
    v64 = v63 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
    swift_beginAccess();
    v65 = v64;
    v66 = v69;
    sub_1D2537078(v65, v69, &qword_1ED96D438);
    v67 = sub_1D2552EE8();
    sub_1D253703C(v66, &qword_1ED96D438);
    swift_release();
    *(_OWORD *)v84 = *(_OWORD *)(a2 + 16);
    v83 = v67;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962ED0);
    sub_1D26CCF30();
    sub_1D254E90C();
    return swift_release();
  }
  swift_bridgeObjectRetain();
  v21 = 0x1E0DC3000uLL;
  v22 = &stru_1E93E6000;
  v71 = v8;
  v70 = v10;
  v79 = (uint64_t)v18;
  while (1)
  {
    if (v20 > *(_QWORD *)(v19 + 16))
    {
      __break(1u);
LABEL_30:
      swift_bridgeObjectRelease();
      goto LABEL_31;
    }
    v23 = *(unsigned __int8 *)(v19 + v20 + 31);
    if ((v23 - 14) >= 2)
      break;
    objc_msgSend((id)objc_opt_self(), *(SEL *)&v22[81].align);
    v25 = v24;
    v26 = (_BYTE *)(*(_QWORD *)(a2 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_supportsLowLuminance);
    swift_beginAccess();
    if (*v26 == 1 && v25 > 0.0)
    {
      v79 = sub_1D26CD038();
      goto LABEL_17;
    }
LABEL_4:
    if (!--v20)
      goto LABEL_30;
  }
  if (v23 != 3)
    goto LABEL_4;
  v81 = &type metadata for FeatureFlags.Widgets;
  v82 = sub_1D25545A4();
  v80[0] = 1;
  v27 = sub_1D26CBB98();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  sub_1D2534120(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  if ((v27 & 1) == 0)
    goto LABEL_3;
  sub_1D2538510(*((_QWORD *)v18 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v80);
  v28 = v21;
  v29 = a2;
  v30 = v81;
  v31 = v82;
  __swift_project_boxed_opaque_existential_0(v80, (uint64_t)v81);
  v32 = *(uint64_t (**)(ValueMetadata *, unint64_t))(v31 + 8);
  swift_retain();
  v33 = (char *)v32(v30, v31);
  v34 = *(_QWORD *)&v33[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v35 = *(os_unfair_lock_s **)(v34 + 16);
  swift_retain();
  os_unfair_lock_lock(v35);
  v36 = *(void **)&v33[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor];
  v37 = *(os_unfair_lock_s **)(v34 + 16);
  v38 = v36;
  os_unfair_lock_unlock(v37);

  v21 = v28;
  a2 = v29;
  v18 = (char *)v79;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v80);
  v22 = &stru_1E93E6000;
  swift_release();
  if (!v36)
  {
LABEL_3:
    sub_1D25340E4((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    goto LABEL_4;
  }
  v39 = objc_msgSend(v38, sel_isLinkedOnOrAfter_, 0);

  sub_1D25340E4((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  if ((v39 & 1) == 0)
    goto LABEL_4;
  if (qword_1ED962F08 != -1)
    swift_once();
  v79 = qword_1ED977E20;
  swift_retain();
LABEL_17:
  v41 = v77;
  v40 = v78;
  v43 = (uint64_t)v75;
  v42 = v76;
  v44 = (uint64_t)v74;
  (*(void (**)(char *, uint64_t, uint64_t))(v77 + 16))(v76, a2 + *(int *)(v73 + 36), v78);
  sub_1D2534120(a2, v44, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  sub_1D2534120(a2, v43, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  v45 = sub_1D26CC084();
  v46 = sub_1D26CDCE0();
  if (os_log_type_enabled(v45, v46))
  {
    v75 = (char *)a2;
    v47 = swift_slowAlloc();
    v74 = (char *)swift_slowAlloc();
    v84[0] = (uint64_t)v74;
    *(_DWORD *)v47 = 136315394;
    v48 = (uint64_t *)(*(_QWORD *)(v44 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    v49 = *v48;
    v50 = v48[1];
    swift_bridgeObjectRetain();
    *(_QWORD *)v80 = sub_1D2537880(v49, v50, v84);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D25340E4(v44, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    *(_WORD *)(v47 + 12) = 2080;
    v51 = *(_QWORD *)(v43 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
    swift_beginAccess();
    v52 = (uint64_t)v70;
    sub_1D2537078(v51, (uint64_t)v70, &qword_1ED96D438);
    v53 = (uint64_t)v71;
    sub_1D2537078(v52, (uint64_t)v71, &qword_1ED96D438);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v55 = 0xEB00000000726564;
    v56 = 0x6C6F686563616C50;
    if (EnumCaseMultiPayload != 1)
    {
      v56 = 0x7974706D45;
      v55 = 0xE500000000000000;
    }
    if (EnumCaseMultiPayload)
      v57 = v56;
    else
      v57 = 1702259020;
    v58 = v43;
    if (EnumCaseMultiPayload)
      v59 = v55;
    else
      v59 = 0xE400000000000000;
    sub_1D253703C(v53, &qword_1ED96D438);
    sub_1D253703C(v52, &qword_1ED96D438);
    v83 = sub_1D2537880(v57, v59, v84);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D25340E4(v58, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    _os_log_impl(&dword_1D2531000, v45, v46, "[%s] Animating pending view change: %s", (uint8_t *)v47, 0x16u);
    v60 = v74;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v60, -1, -1);
    MEMORY[0x1D823A5E0](v47, -1, -1);

    v61 = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v76, v78);
    a2 = (uint64_t)v75;
  }
  else
  {
    sub_1D25340E4(v44, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    sub_1D25340E4(v43, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);

    v61 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v40);
  }
  MEMORY[0x1E0C80A78](v61);
  *(&v68 - 2) = a2;
  swift_retain();
  sub_1D26CC378();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t sub_1D25516D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v30;
  uint64_t v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  v48 = a1;
  v2 = type metadata accessor for LiveWidgetEntryView();
  v3 = MEMORY[0x1E0C80A78](v2);
  v47 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v45 - v5;
  v7 = sub_1D26CC09C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - v12;
  if (qword_1ED96F1C8 != -1)
    swift_once();
  v14 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 29) + 88);
  v15 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v15);
  LOBYTE(v15) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  swift_release();
  v16 = v1 + *(int *)(v2 + 36);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  if ((v15 & 1) != 0)
  {
    v17(v13, v16, v7);
    sub_1D2534120(v1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    swift_bridgeObjectRetain_n();
    v18 = sub_1D26CC084();
    v19 = sub_1D26CDD04();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = swift_slowAlloc();
      v21 = swift_slowAlloc();
      v50 = v21;
      *(_DWORD *)v20 = 136315394;
      v46 = v7;
      v22 = (uint64_t *)(*((_QWORD *)v6 + 1) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v47 = v8;
      v23 = *v22;
      v24 = v22[1];
      swift_bridgeObjectRetain();
      v49 = sub_1D2537880(v23, v24, &v50);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D25340E4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      *(_WORD *)(v20 + 12) = 2080;
      v25 = swift_bridgeObjectRetain();
      v26 = MEMORY[0x1D82392C0](v25, &type metadata for LiveWidgetViewChangeReason);
      v28 = v27;
      swift_bridgeObjectRelease();
      v49 = sub_1D2537880(v26, v28, &v50);
      sub_1D26CDF50();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v18, v19, "[%s] view changed for reasons: %s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v21, -1, -1);
      MEMORY[0x1D823A5E0](v20, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v13, v46);
    }
    else
    {
      sub_1D25340E4((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    }
  }
  else
  {
    v30 = v11;
    v17(v11, v16, v7);
    v31 = v47;
    sub_1D2534120(v1, v47, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
    swift_bridgeObjectRetain_n();
    v32 = sub_1D26CC084();
    v33 = sub_1D26CDCE0();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = swift_slowAlloc();
      v45 = v30;
      v35 = v34;
      v36 = swift_slowAlloc();
      v50 = v36;
      *(_DWORD *)v35 = 136315394;
      v46 = v7;
      v37 = (uint64_t *)(*(_QWORD *)(v31 + 8) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v38 = v8;
      v39 = *v37;
      v40 = v37[1];
      swift_bridgeObjectRetain();
      v49 = sub_1D2537880(v39, v40, &v50);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D25340E4(v31, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
      *(_WORD *)(v35 + 12) = 2080;
      v41 = swift_bridgeObjectRetain();
      v42 = MEMORY[0x1D82392C0](v41, &type metadata for LiveWidgetViewChangeReason);
      v44 = v43;
      swift_bridgeObjectRelease();
      v49 = sub_1D2537880(v42, v44, &v50);
      sub_1D26CDF50();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v32, v33, "[%s] view changed for reasons: %s", (uint8_t *)v35, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v36, -1, -1);
      MEMORY[0x1D823A5E0](v35, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v45, v46);
    }
    else
    {
      sub_1D25340E4(v31, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v30, v7);
    }
  }
}

uint64_t sub_1D2551C68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v9;
  char v10[24];
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v5 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)(v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce) == 1
    && (*(_BYTE *)(v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__needsViewRebuild) & 1) == 0)
  {
    swift_retain();
  }
  else
  {
    v10[0] = 1;
    swift_retain();
    sub_1D26083C0(v10);
  }
  v6 = v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D2537078(v6, (uint64_t)v4, &qword_1ED96D438);
  v7 = sub_1D2552EE8();
  sub_1D253703C((uint64_t)v4, &qword_1ED96D438);
  swift_release();
  v9 = *(_OWORD *)(a1 + 16);
  v11 = v7;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962ED0);
  sub_1D26CCF30();
  sub_1D254E90C();
  return swift_release();
}

uint64_t sub_1D2551DD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t KeyPath;
  uint64_t v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[8];
  uint64_t v38;
  _OWORD v39[9];
  char v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  _OWORD v48[3];

  v31 = a1;
  v35 = a2;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C10);
  MEMORY[0x1E0C80A78](v36);
  v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CD0);
  MEMORY[0x1E0C80A78](v34);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CCBC4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C40);
  MEMORY[0x1E0C80A78](v33);
  v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED96F1C8 != -1)
    swift_once();
  v12 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 15) + 88);
  v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v13);
  LOBYTE(v13) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
  {
    v14 = sub_1D26CCFF0();
    v29 = v15;
    v30 = v14;
    v16 = sub_1D26CC894();
    sub_1D2612644(v31, (uint64_t)v37);
    *(_OWORD *)((char *)&v39[6] + 7) = v37[6];
    *(_OWORD *)((char *)&v39[5] + 7) = v37[5];
    *(_OWORD *)((char *)&v39[2] + 7) = v37[2];
    *(_OWORD *)((char *)&v39[1] + 7) = v37[1];
    *(_OWORD *)((char *)&v39[7] + 7) = v37[7];
    *(_OWORD *)((char *)&v39[3] + 7) = v37[3];
    v40 = 1;
    *(_QWORD *)((char *)&v39[8] + 7) = v38;
    *(_OWORD *)((char *)&v39[4] + 7) = v37[4];
    *(_OWORD *)((char *)v39 + 7) = v37[0];
    v47 = v39[6];
    v48[0] = v39[7];
    *(_OWORD *)((char *)v48 + 15) = *(_OWORD *)((char *)&v39[7] + 15);
    v43 = v39[2];
    v44 = v39[3];
    v45 = v39[4];
    v46 = v39[5];
    v41 = v39[0];
    v42 = v39[1];
    sub_1D26CCC48();
    sub_1D26CCBB8();
    v17 = sub_1D26CCBD0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    KeyPath = swift_getKeyPath();
    v19 = sub_1D26CCE94();
    sub_1D2537078(v32, (uint64_t)v11, &qword_1ED962C10);
    v20 = &v11[*(int *)(v33 + 36)];
    v21 = v45;
    *(_OWORD *)(v20 + 97) = v46;
    v22 = v48[0];
    *(_OWORD *)(v20 + 113) = v47;
    *(_OWORD *)(v20 + 129) = v22;
    *((_OWORD *)v20 + 9) = *(_OWORD *)((char *)v48 + 15);
    v23 = v41;
    *(_OWORD *)(v20 + 33) = v42;
    v24 = v44;
    *(_OWORD *)(v20 + 49) = v43;
    *(_OWORD *)(v20 + 65) = v24;
    *(_OWORD *)(v20 + 81) = v21;
    *(_QWORD *)v20 = v16;
    *((_QWORD *)v20 + 1) = 0;
    v20[16] = 1;
    *(_OWORD *)(v20 + 17) = v23;
    *((_QWORD *)v20 + 20) = KeyPath;
    *((_QWORD *)v20 + 21) = v17;
    v25 = v30;
    *((_QWORD *)v20 + 22) = v19;
    *((_QWORD *)v20 + 23) = v25;
    *((_QWORD *)v20 + 24) = v29;
    v26 = &qword_1ED962C40;
    sub_1D2537078((uint64_t)v11, (uint64_t)v5, &qword_1ED962C40);
    swift_storeEnumTagMultiPayload();
    sub_1D25538A0();
    sub_1D2553924();
    sub_1D26CC90C();
    v27 = (uint64_t)v11;
  }
  else
  {
    v26 = &qword_1ED962C10;
    sub_1D2537078(v32, (uint64_t)v3, &qword_1ED962C10);
    sub_1D2537078((uint64_t)v3, (uint64_t)v5, &qword_1ED962C10);
    swift_storeEnumTagMultiPayload();
    sub_1D25538A0();
    sub_1D2553924();
    sub_1D26CC90C();
    v27 = (uint64_t)v3;
  }
  return sub_1D253703C(v27, v26);
}

uint64_t sub_1D2552194@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  char v38;
  __int128 v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  char v48;

  v35 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962D40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CB8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962BB0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED96F1C8 != -1)
    swift_once();
  v12 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 29) + 88);
  v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v13);
  LOBYTE(v13) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  swift_release();
  if ((v13 & 1) != 0)
  {
    v14 = sub_1D26CCFF0();
    v31 = v15;
    v32 = v14;
    sub_1D26123E8(v35, (uint64_t)v37);
    v16 = v37[0];
    v17 = v37[1];
    v33 = v6;
    v18 = v40;
    v35 = v3;
    v19 = v41;
    v20 = v42;
    v21 = v43;
    v30 = v44;
    v29 = v45;
    v34 = a2;
    v22 = v46;
    v28 = v39;
    LOBYTE(v37[0]) = v38;
    v48 = v47;
    sub_1D2537078(v36, (uint64_t)v11, &qword_1ED962D40);
    v23 = &v11[*(int *)(v9 + 36)];
    *(_QWORD *)v23 = v16;
    *((_QWORD *)v23 + 1) = v17;
    v23[16] = v37[0];
    *(_OWORD *)(v23 + 24) = v28;
    v23[40] = v18;
    *((_QWORD *)v23 + 6) = v19;
    *((_QWORD *)v23 + 7) = v20;
    v23[64] = v21;
    *(_OWORD *)(v23 + 72) = v30;
    *((_QWORD *)v23 + 11) = v29;
    *((_QWORD *)v23 + 12) = v22;
    v23[104] = v48;
    v24 = v31;
    *((_QWORD *)v23 + 14) = v32;
    *((_QWORD *)v23 + 15) = v24;
    v25 = &qword_1ED962BB0;
    sub_1D2537078((uint64_t)v11, (uint64_t)v8, &qword_1ED962BB0);
    swift_storeEnumTagMultiPayload();
    sub_1D2553788();
    sub_1D255380C();
    sub_1D26CC90C();
    v26 = (uint64_t)v11;
  }
  else
  {
    v25 = &qword_1ED962D40;
    sub_1D2537078(v36, (uint64_t)v5, &qword_1ED962D40);
    sub_1D2537078((uint64_t)v5, (uint64_t)v8, &qword_1ED962D40);
    swift_storeEnumTagMultiPayload();
    sub_1D2553788();
    sub_1D255380C();
    sub_1D26CC90C();
    v26 = (uint64_t)v5;
  }
  return sub_1D253703C(v26, v25);
}

uint64_t sub_1D255249C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2537078(a1, (uint64_t)v6, (uint64_t *)&unk_1ED96FC50);
  v7 = *a2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_currentActionURL;
  swift_beginAccess();
  sub_1D255454C((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.init(viewModel:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  type metadata accessor for LiveWidgetEntryViewModel(0);
  sub_1D25369B0(&qword_1ED96D290, type metadata accessor for LiveWidgetEntryViewModel, (uint64_t)&protocol conformance descriptor for LiveWidgetEntryViewModel);
  result = sub_1D26CC39C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t LiveWidgetEntryView.customBackgroundView<A>(isEnabled:background:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v4 = a1;
  MEMORY[0x1E0C80A78](a1);
  result = sub_1D2534120(v6, a3, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  if ((v4 & 1) != 0)
  {
    a2(result);
    v8 = sub_1D26CCFC0();
    result = swift_release();
    *(_QWORD *)(a3 + 56) = v8;
  }
  return result;
}

uint64_t LiveWidgetEntryView.clippedToShape(_:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1D2534120(v2, a2, (uint64_t (*)(_QWORD))type metadata accessor for LiveWidgetEntryView);
  *(_BYTE *)(a2 + 48) = a1;
  return result;
}

uint64_t sub_1D25526BC()
{
  return sub_1D26CCDB0();
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.viewModel.getter()
{
  return swift_retain();
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.viewModel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*LiveWidgetEntryLaunchHandlingModifier.viewModel.modify())()
{
  return CGSizeMake;
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.$viewModel.getter()
{
  type metadata accessor for LiveWidgetEntryViewModel(0);
  sub_1D25369B0(&qword_1ED96D290, type metadata accessor for LiveWidgetEntryViewModel, (uint64_t)&protocol conformance descriptor for LiveWidgetEntryViewModel);
  return sub_1D26CC3A8();
}

uint64_t LiveWidgetEntryLaunchHandlingModifier.body(content:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v19;
  char v20;

  v19 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CE0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962BC0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v12 = v1[1];
  v13 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canConsumeLaunchRequest;
  v14 = *(_BYTE *)(v12 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canConsumeLaunchRequest);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = v12;
  swift_retain_n();
  sub_1D2552A3C(v14, (uint64_t)sub_1D2553A14, v12, (uint64_t)sub_1D2553A18, v15, (uint64_t)v4);
  swift_release();
  swift_release();
  v16 = *(_BYTE *)(v12 + v13);
  swift_retain();
  sub_1D2552CA0(v16, (uint64_t)sub_1D2553A20, v12, (uint64_t)v7);
  swift_release();
  sub_1D253703C((uint64_t)v4, &qword_1ED962CE0);
  if (*(_BYTE *)(v12 + v13) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    swift_release();
    v17 = v20 ^ 1;
  }
  else
  {
    v17 = 0;
  }
  sub_1D2537078((uint64_t)v7, (uint64_t)v10, &qword_1ED962CF0);
  v10[*(int *)(v8 + 36)] = v17 & 1;
  sub_1D253703C((uint64_t)v7, &qword_1ED962CF0);
  return sub_1D25384CC((uint64_t)v10, v19, &qword_1ED962BC0);
}

uint64_t sub_1D25529CC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t sub_1D2552A3C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v7 = v6;
  v28 = a3;
  v29 = a5;
  v27 = a4;
  v30 = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962D60);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CA0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C00);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    KeyPath = swift_getKeyPath();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v19, v7, v10);
    v21 = &v19[*(int *)(v17 + 36)];
    v22 = v27;
    v23 = v28;
    *(_QWORD *)v21 = a2;
    *((_QWORD *)v21 + 1) = v23;
    v24 = v29;
    *((_QWORD *)v21 + 2) = v22;
    *((_QWORD *)v21 + 3) = v24;
    *((_QWORD *)v21 + 4) = KeyPath;
    *((_WORD *)v21 + 20) = 0;
    sub_1D2537078((uint64_t)v19, (uint64_t)v16, &qword_1ED962C00);
    swift_storeEnumTagMultiPayload();
    sub_1D2554428();
    sub_1D2536488(&qword_1ED962D58, &qword_1ED962D60, MEMORY[0x1E0CDBF10]);
    swift_retain();
    swift_retain();
    sub_1D26CC90C();
    return sub_1D253703C((uint64_t)v19, &qword_1ED962C00);
  }
  else
  {
    v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v26(v13, v7, v10);
    v26(v16, (uint64_t)v13, v10);
    swift_storeEnumTagMultiPayload();
    sub_1D2554428();
    sub_1D2536488(&qword_1ED962D58, &qword_1ED962D60, MEMORY[0x1E0CDBF10]);
    sub_1D26CC90C();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_1D2552CA0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  _QWORD v22[2];

  v5 = v4;
  v22[1] = a4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CE0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CA8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962BA0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) != 0)
  {
    v18 = swift_allocObject();
    *(_QWORD *)(v18 + 16) = a2;
    *(_QWORD *)(v18 + 24) = a3;
    swift_retain();
    sub_1D26CC360();
    sub_1D2537078(v5, (uint64_t)v17, &qword_1ED962CE0);
    v19 = &qword_1ED962BA0;
    sub_1D2537078((uint64_t)v17, (uint64_t)v14, &qword_1ED962BA0);
    swift_storeEnumTagMultiPayload();
    sub_1D2554320();
    sub_1D25543A4();
    sub_1D26CC90C();
    v20 = (uint64_t)v17;
  }
  else
  {
    v19 = &qword_1ED962CE0;
    sub_1D2537078(v5, (uint64_t)v11, &qword_1ED962CE0);
    sub_1D2537078((uint64_t)v11, (uint64_t)v14, &qword_1ED962CE0);
    swift_storeEnumTagMultiPayload();
    sub_1D2554320();
    sub_1D25543A4();
    sub_1D26CC90C();
    v20 = (uint64_t)v11;
  }
  return sub_1D253703C(v20, v19);
}

uint64_t sub_1D2552ECC()
{
  return sub_1D26CC30C();
}

uint64_t sub_1D2552EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB30);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2537078(v1, (uint64_t)v10, &qword_1ED96D438);
  if (swift_getEnumCaseMultiPayload() > 1)
    return *(_QWORD *)v10;
  sub_1D2539ADC((uint64_t)v10, (uint64_t)v7, type metadata accessor for DefaultWidgetLiveViewEntry);
  DefaultWidgetLiveViewEntry.view.getter((uint64_t)v4);
  sub_1D2554600();
  v11 = sub_1D26CCFC0();
  sub_1D25340E4((uint64_t)v7, type metadata accessor for DefaultWidgetLiveViewEntry);
  return v11;
}

uint64_t sub_1D2553048@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D255305C()
{
  return sub_1D2553300();
}

uint64_t sub_1D2553070@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D2553084()
{
  return sub_1D2553300();
}

uint64_t sub_1D2553098@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D25530AC()
{
  return sub_1D2553300();
}

double sub_1D25530C0@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1D255313C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1D2554718;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  if (v1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
  }
  sub_1D2549DF0(v1);
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t sub_1D2553230(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v3;

  v3 = a1;
  return a2(&v3);
}

uint64_t sub_1D2553260@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D2553274@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D25532EC()
{
  return sub_1D2553300();
}

uint64_t sub_1D2553300()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

unint64_t sub_1D255336C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED962ED8;
  if (!qword_1ED962ED8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CD60);
    v2 = MEMORY[0x1E0CDFD08];
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0798], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED962ED8);
  }
  return result;
}

uint64_t sub_1D25533C8()
{
  return sub_1D26CC6A8();
}

uint64_t sub_1D25533EC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC51C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2553418()
{
  return sub_1D26CC528();
}

unint64_t sub_1D255343C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962EA8;
  if (!qword_1ED962EA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962EB0);
    v2[0] = MEMORY[0x1E0CDFD08];
    v2[1] = MEMORY[0x1E0CDF5B0];
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962EA8);
  }
  return result;
}

uint64_t sub_1D25534A0@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D25534C4()
{
  return sub_1D2553300();
}

uint64_t sub_1D25534E8@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D255350C()
{
  return sub_1D2553300();
}

uint64_t sub_1D2553530@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC588();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D255355C()
{
  return sub_1D26CC594();
}

uint64_t sub_1D2553584()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LiveWidgetEntryView() - 8) + 80);
  return sub_1D2550CB4(v0 + ((v1 + 16) & ~v1));
}

uint64_t sub_1D25535B4()
{
  type metadata accessor for LiveWidgetEntryView();
  return sub_1D2550E0C();
}

uint64_t sub_1D25535F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for LiveWidgetEntryView() - 8) + 80);
  return sub_1D2550E90(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1D2553638@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D255365C()
{
  return sub_1D2553300();
}

uint64_t sub_1D2553680@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_currentActionURL;
  swift_beginAccess();
  return sub_1D2537078(v3, a2, (uint64_t *)&unk_1ED96FC50);
}

unint64_t sub_1D25536E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962BC8;
  if (!qword_1ED962BC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962BD0);
    v2[0] = sub_1D2553830(&qword_1ED962D08, &qword_1ED962D10, (uint64_t (*)(void))sub_1D2553788, sub_1D255380C);
    v2[1] = sub_1D25369B0(&qword_1ED96C8A8, type metadata accessor for WidgetURLReaderModifier, (uint64_t)&unk_1D26D6388);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962BC8);
  }
  return result;
}

unint64_t sub_1D2553788()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962BA8;
  if (!qword_1ED962BA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962BB0);
    v2[0] = sub_1D255380C();
    v2[1] = sub_1D2536488(&qword_1ED962C90, &qword_1ED962C98, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962BA8);
  }
  return result;
}

uint64_t sub_1D255380C()
{
  return sub_1D2553830(&qword_1ED962D38, &qword_1ED962D40, (uint64_t (*)(void))sub_1D25538A0, (uint64_t (*)(void))sub_1D2553924);
}

uint64_t sub_1D2553830(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D25538A0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962C38;
  if (!qword_1ED962C38)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962C40);
    v2[0] = sub_1D2553924();
    v2[1] = sub_1D2536488(&qword_1ED962E78, &qword_1ED962E80, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962C38);
  }
  return result;
}

unint64_t sub_1D2553924()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962C08;
  if (!qword_1ED962C08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962C10);
    v2[0] = sub_1D2536488(&qword_1ED962C78, &qword_1ED962C80, MEMORY[0x1E0CDA108]);
    v2[1] = sub_1D25369B0(&qword_1ED962F80, (uint64_t (*)(uint64_t))type metadata accessor for InteractiveWidgetSetupViewModifier, (uint64_t)&protocol conformance descriptor for InteractiveWidgetSetupViewModifier);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962C08);
  }
  return result;
}

uint64_t sub_1D25539C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25539E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1D2553A18()
{
  return sub_1D25529CC();
}

uint64_t sub_1D2553A24@<X0>(_BYTE *a1@<X8>)
{
  return sub_1D2553274(a1);
}

uint64_t sub_1D2553A48()
{
  return sub_1D2553300();
}

uint64_t sub_1D2553A6C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2553A7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2553A8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_1D2553A98(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = v3;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for LiveWidgetEntryView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    v7 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v7;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    v8 = *(int *)(a3 + 36);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    *(_QWORD *)(a1 + 56) = a2[7];
    v11 = sub_1D26CC09C();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v12(v9, v10, v11);
  }
  return v3;
}

uint64_t destroy for LiveWidgetEntryView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1D26CC09C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(int *)(a3 + 36);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = sub_1D26CC09C();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 36);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t initializeWithTake for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v5 = *(int *)(a3 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LiveWidgetEntryView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_release();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_release();
  v8 = *(int *)(a3 + 36);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveWidgetEntryView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2553F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D26CC09C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for LiveWidgetEntryView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2553F94(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1D26CC09C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D2554008()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CC09C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for LiveWidgetEntryLaunchHandlingModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for LiveWidgetEntryLaunchHandlingModifier()
{
  return swift_release();
}

_QWORD *assignWithCopy for LiveWidgetEntryLaunchHandlingModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for LiveWidgetEntryLaunchHandlingModifier(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for LiveWidgetEntryLaunchHandlingModifier()
{
  return &type metadata for LiveWidgetEntryLaunchHandlingModifier;
}

unint64_t sub_1D2554154()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962BD8;
  if (!qword_1ED962BD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962BE0);
    v2[0] = sub_1D25541C0();
    v2[1] = sub_1D255424C();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962BD8);
  }
  return result;
}

unint64_t sub_1D25541C0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962CF8;
  if (!qword_1ED962CF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962D00);
    v2[0] = sub_1D25536E4();
    v2[1] = sub_1D2553830(&qword_1ED962D08, &qword_1ED962D10, (uint64_t (*)(void))sub_1D2553788, sub_1D255380C);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962CF8);
  }
  return result;
}

unint64_t sub_1D255424C()
{
  unint64_t result;

  result = qword_1ED962D98;
  if (!qword_1ED962D98)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for LiveWidgetEntryLaunchHandlingModifier, &type metadata for LiveWidgetEntryLaunchHandlingModifier);
    atomic_store(result, (unint64_t *)&qword_1ED962D98);
  }
  return result;
}

unint64_t sub_1D2554294()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962BB8;
  if (!qword_1ED962BB8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962BC0);
    v2[0] = sub_1D2553830(&qword_1ED962CE8, &qword_1ED962CF0, (uint64_t (*)(void))sub_1D2554320, (uint64_t (*)(void))sub_1D25543A4);
    v2[1] = sub_1D25544F0();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962BB8);
  }
  return result;
}

unint64_t sub_1D2554320()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962B98;
  if (!qword_1ED962B98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962BA0);
    v2[0] = sub_1D25543A4();
    v2[1] = sub_1D25369B0(&qword_1ED96D388, type metadata accessor for SystemURLActionViewModifier, (uint64_t)&unk_1D26D62E8);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962B98);
  }
  return result;
}

unint64_t sub_1D25543A4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962CD8;
  if (!qword_1ED962CD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962CE0);
    v2[0] = sub_1D2554428();
    v2[1] = sub_1D2536488(&qword_1ED962D58, &qword_1ED962D60, MEMORY[0x1E0CDBF10]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962CD8);
  }
  return result;
}

unint64_t sub_1D2554428()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962BF8;
  if (!qword_1ED962BF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962C00);
    v2[0] = sub_1D2536488(&qword_1ED962D58, &qword_1ED962D60, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D25544AC();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962BF8);
  }
  return result;
}

unint64_t sub_1D25544AC()
{
  unint64_t result;

  result = qword_1ED96D338;
  if (!qword_1ED96D338)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D6338, &type metadata for WidgetLaunchViewModifier);
    atomic_store(result, (unint64_t *)&qword_1ED96D338);
  }
  return result;
}

unint64_t sub_1D25544F0()
{
  unint64_t result;

  result = qword_1ED962D68;
  if (!qword_1ED962D68)
  {
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDC898], MEMORY[0x1E0CDC8A8]);
    atomic_store(result, (unint64_t *)&qword_1ED962D68);
  }
  return result;
}

uint64_t sub_1D2554534(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v3;

  return sub_1D25EB4A4(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1D255454C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D255459C(_QWORD *a1)
{
  uint64_t v1;

  return sub_1D25FBCDC(a1, *(uint64_t (**)(_QWORD))(v1 + 16));
}

unint64_t sub_1D25545A4()
{
  unint64_t result;

  result = qword_1ED962EE8;
  if (!qword_1ED962EE8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DA398, &type metadata for FeatureFlags.Widgets);
    atomic_store(result, (unint64_t *)&qword_1ED962EE8);
  }
  return result;
}

uint64_t sub_1D25545E8()
{
  uint64_t v0;

  return sub_1D2551C68(*(_QWORD *)(v0 + 16));
}

unint64_t sub_1D2554600()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CB28;
  if (!qword_1ED96CB28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CB30);
    v2[0] = sub_1D2536488(&qword_1ED96CF58, qword_1ED96CF60, (uint64_t)&protocol conformance descriptor for TintedWidgetView<A, B>);
    v2[1] = sub_1D2554684();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CB28);
  }
  return result;
}

unint64_t sub_1D2554684()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  _QWORD v3[2];

  result = qword_1ED96CA58;
  if (!qword_1ED96CA58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CA60);
    v2 = sub_1D25369B0((unint64_t *)&unk_1ED96D510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0AE0], MEMORY[0x1E0CF0AD8]);
    v3[0] = MEMORY[0x1E0CDFD08];
    v3[1] = v2;
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED96CA58);
  }
  return result;
}

uint64_t PowerlogSuggestionService.__allocating_init(owner:)(_BYTE *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v14 = sub_1D26CDD88();
  v2 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CDD40();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v5);
  v7 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v7);
  LOBYTE(a1) = *a1;
  v8 = type metadata accessor for WidgetPowerlogProvider();
  v9 = swift_allocObject();
  *(_BYTE *)(v9 + 16) = (_BYTE)a1;
  sub_1D2544658();
  sub_1D26CD0B0();
  *(_QWORD *)&v15 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D255496C();
  sub_1D26CDFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DEF8D8], v14);
  *(_QWORD *)(v9 + 24) = sub_1D26CDDB8();
  v16 = v8;
  v17 = sub_1D25369B0(&qword_1ED96EA20, (uint64_t (*)(uint64_t))type metadata accessor for WidgetPowerlogProvider, (uint64_t)&unk_1D26D8DC8);
  *(_QWORD *)&v15 = v9;
  type metadata accessor for PowerlogSuggestionService();
  v10 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v11 = swift_allocObject();
  v12 = (_DWORD *)swift_slowAlloc();
  *v12 = 0;
  *(_QWORD *)(v11 + 16) = v12;
  *(_QWORD *)(v10 + 56) = v11;
  sub_1D2538F38(&v15, v10 + 16);
  return v10;
}

unint64_t sub_1D255496C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96EE28;
  if (!qword_1ED96EE28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96EE20);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96EE28);
  }
  return result;
}

uint64_t type metadata accessor for PowerlogSuggestionService()
{
  return objc_opt_self();
}

uint64_t sub_1D25549D8(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v2 = *(void **)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1D2538510(v1 + 16, (uint64_t)v13);
  v7 = v14;
  v8 = v15;
  __swift_project_boxed_opaque_existential_0(v13, v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962858);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1D26D1280;
  *(_QWORD *)(v9 + 32) = v2;
  *(_QWORD *)(v9 + 40) = v3;
  *(_QWORD *)(v9 + 48) = v4;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 64);
  v11 = v2;
  swift_bridgeObjectRetain();
  v10(v9, v7, v8);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

uint64_t PowerlogSuggestionService.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return v0;
}

uint64_t PowerlogSuggestionService.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2554B10(uint64_t a1)
{
  return sub_1D25549D8(a1);
}

uint64_t method lookup function for PowerlogSuggestionService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PowerlogSuggestionService.noteWidgetSuggestionRequested(entry:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t (*sub_1D2554B48())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void AssertedStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  swift_allocObject();
  sub_1D2556CE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1D2554C0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

void AssertedStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  sub_1D2556CE8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1D2554C94(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

uint64_t sub_1D2554CDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_1D2613CB8();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  sub_1D2615628((uint64_t)sub_1D2556E98, v0, v2);
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2556EB0();
  sub_1D26CD8E4();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D2554DD4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t result;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  int64_t v32;
  unint64_t v33;
  int64_t v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;
  char *v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  unint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  char *v66;
  _QWORD *v67;
  _QWORD *v68;
  int64_t v69;
  _QWORD *v70;
  uint64_t v71;
  int64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  int64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  int64_t v82;
  uint64_t v83;
  char *v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  unint64_t v99;
  _QWORD *v100;

  v70 = a2;
  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 1504);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v97 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = sub_1D26CDF38();
  v92 = *(_QWORD *)(v8 - 8);
  v93 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v96 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v91 = (char *)&v69 - v12;
  v13 = *(_QWORD *)(v3 + 1496);
  MEMORY[0x1E0C80A78](v11);
  v84 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = v3;
  v16 = v15;
  sub_1D26CD89C();
  v86 = v13;
  v17 = swift_getTupleTypeMetadata2();
  v80 = sub_1D26CDF38();
  v79 = *(_QWORD *)(v80 - 8);
  v18 = MEMORY[0x1E0C80A78](v80);
  v81 = (char *)&v69 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v78 = (char *)&v69 - v20;
  v21 = (uint64_t *)((char *)a1 + qword_1ED962528);
  swift_beginAccess();
  v22 = *v21;
  v23 = *(_QWORD *)(*v21 + 64);
  v71 = *v21 + 64;
  v24 = 1 << *(_BYTE *)(v22 + 32);
  if (v24 < 64)
    v25 = ~(-1 << v24);
  else
    v25 = -1;
  v26 = v25 & v23;
  v72 = (unint64_t)(v24 + 63) >> 6;
  v69 = v72 - 1;
  v73 = v22;
  result = swift_bridgeObjectRetain();
  v82 = 0;
  v74 = 0x80000001D26DE860;
  v90 = 0x80000001D26DE880;
  v85 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v94 = v5;
  v76 = v16;
  v75 = v17;
  if (!v26)
    goto LABEL_7;
LABEL_5:
  v83 = (v26 - 1) & v26;
  v28 = __clz(__rbit64(v26)) | (v82 << 6);
LABEL_6:
  v29 = v73;
  v30 = v81;
  (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v81, *(_QWORD *)(v73 + 48) + *(_QWORD *)(v16 + 72) * v28, v86);
  *(_QWORD *)&v30[*(int *)(v17 + 48)] = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v28);
  v31 = *(_QWORD *)(v17 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v30, 0, 1, v17);
  swift_bridgeObjectRetain();
LABEL_23:
  v36 = v78;
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v30, v80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v36, 1, v17) == 1)
  {
    result = swift_release();
    *v70 = v85;
    return result;
  }
  v37 = *(_QWORD *)&v36[*(int *)(v17 + 48)];
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(v84, v36, v86);
  v38 = 0;
  v39 = *(_QWORD *)(v37 + 64);
  v87 = v37 + 64;
  v40 = 1 << *(_BYTE *)(v37 + 32);
  if (v40 < 64)
    v41 = ~(-1 << v40);
  else
    v41 = -1;
  v42 = v41 & v39;
  v88 = (unint64_t)(v40 + 63) >> 6;
  v89 = v37;
  v77 = v88 - 1;
  v43 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v44 = v96;
  if ((v41 & v39) != 0)
  {
LABEL_28:
    v45 = __clz(__rbit64(v42));
    v42 &= v42 - 1;
    v46 = v38;
    v47 = v45 | (v38 << 6);
    goto LABEL_29;
  }
  while (1)
  {
    v50 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      goto LABEL_63;
    }
    if (v50 >= v88)
    {
      v46 = v38;
LABEL_35:
      v42 = 0;
      v49 = 1;
      goto LABEL_36;
    }
    v51 = *(_QWORD *)(v87 + 8 * v50);
    if (v51)
      goto LABEL_33;
    v46 = v38 + 2;
    if (v38 + 2 < v88)
      break;
    v42 = 0;
    v49 = 1;
    v46 = v38 + 1;
LABEL_36:
    v52 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v44, v49, 1, TupleTypeMetadata2);
    v53 = v91;
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v91, v44, v93);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v53, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      v98 = 0;
      v99 = 0xE000000000000000;
      sub_1D26CE0A0();
      sub_1D26CDA04();
      sub_1D26CE3A0();
      sub_1D26CDA04();
      v100 = v43;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
      sub_1D2556EB0();
      sub_1D26CD8E4();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v62 = v98;
      v63 = v99;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v85 = sub_1D25615EC(0, v85[2] + 1, 1, v85);
      v17 = v75;
      v65 = v85[2];
      v64 = v85[3];
      v5 = v94;
      if (v65 >= v64 >> 1)
        v85 = sub_1D25615EC((_QWORD *)(v64 > 1), v65 + 1, 1, v85);
      v66 = v84;
      v67 = v85;
      v85[2] = v65 + 1;
      v68 = &v67[2 * v65];
      v68[4] = v62;
      v68[5] = v63;
      v16 = v76;
      result = (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v66, v86);
      v26 = v83;
      if (v83)
        goto LABEL_5;
LABEL_7:
      v32 = v82 + 1;
      if (__OFADD__(v82, 1))
        goto LABEL_64;
      v30 = v81;
      if (v32 < v72)
      {
        v33 = *(_QWORD *)(v71 + 8 * v32);
        if (v33)
          goto LABEL_10;
        v34 = v82 + 2;
        ++v82;
        if (v32 + 1 < v72)
        {
          v33 = *(_QWORD *)(v71 + 8 * v34);
          if (v33)
          {
            ++v32;
            goto LABEL_10;
          }
          v35 = v32 + 2;
          v82 = v32 + 1;
          if (v32 + 2 < v72)
          {
            v33 = *(_QWORD *)(v71 + 8 * v35);
            if (!v33)
            {
              while (1)
              {
                v32 = v35 + 1;
                if (__OFADD__(v35, 1))
                  goto LABEL_65;
                if (v32 >= v72)
                {
                  v82 = v69;
                  goto LABEL_22;
                }
                v33 = *(_QWORD *)(v71 + 8 * v32);
                ++v35;
                if (v33)
                  goto LABEL_10;
              }
            }
            v32 += 2;
LABEL_10:
            v82 = v32;
            v83 = (v33 - 1) & v33;
            v28 = __clz(__rbit64(v33)) + (v32 << 6);
            goto LABEL_6;
          }
        }
      }
LABEL_22:
      v31 = *(_QWORD *)(v17 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v81, 1, 1, v17);
      v83 = 0;
      goto LABEL_23;
    }
    v54 = *(_QWORD **)&v53[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v97, v53, v4);
    v98 = 0;
    v99 = 0xE000000000000000;
    sub_1D26CE0A0();
    sub_1D26CDA04();
    v55 = v4;
    sub_1D26CE3A0();
    sub_1D26CDA04();
    v100 = v54;
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v56 = v98;
    v57 = v99;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v43 = sub_1D25615EC(0, v43[2] + 1, 1, v43);
    v59 = v43[2];
    v58 = v43[3];
    if (v59 >= v58 >> 1)
      v43 = sub_1D25615EC((_QWORD *)(v58 > 1), v59 + 1, 1, v43);
    v43[2] = v59 + 1;
    v60 = &v43[2 * v59];
    v60[4] = v56;
    v60[5] = v57;
    v5 = v94;
    v4 = v55;
    result = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v97, v55);
    v38 = v46;
    v44 = v96;
    if (v42)
      goto LABEL_28;
  }
  v51 = *(_QWORD *)(v87 + 8 * v46);
  if (v51)
  {
    v50 = v38 + 2;
    goto LABEL_33;
  }
  v61 = v38 + 3;
  if (v38 + 3 >= v88)
    goto LABEL_35;
  v51 = *(_QWORD *)(v87 + 8 * v61);
  if (v51)
  {
    v50 = v38 + 3;
LABEL_33:
    v42 = (v51 - 1) & v51;
    v47 = __clz(__rbit64(v51)) + (v50 << 6);
    v46 = v50;
LABEL_29:
    v48 = v89;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v44, *(_QWORD *)(v89 + 48) + *(_QWORD *)(v5 + 72) * v47, v4);
    v49 = 0;
    *(_QWORD *)&v44[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)(*(_QWORD *)(v48 + 56) + 8 * v47);
    goto LABEL_36;
  }
  while (1)
  {
    v50 = v61 + 1;
    if (__OFADD__(v61, 1))
      break;
    if (v50 >= v88)
    {
      v42 = 0;
      v49 = 1;
      v46 = v77;
      goto LABEL_36;
    }
    v51 = *(_QWORD *)(v87 + 8 * v50);
    ++v61;
    if (v51)
      goto LABEL_33;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_1D255571C(uint64_t a1, uint64_t a2)
{
  if (sub_1D25560B8(a1))
    return sub_1D2613D24(a1, a2);
  else
    return 0;
}

uint64_t sub_1D2555768(uint64_t a1)
{
  if (sub_1D25560B8(a1))
    return sub_1D262AF7C();
  else
    return 0;
}

uint64_t sub_1D255578C()
{
  uint64_t v0;

  v0 = sub_1D2556EFC();
  sub_1D2549DF0(v0);
  return v0;
}

uint64_t sub_1D25557BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + qword_1ED977D40);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1D25495F4(v6);
}

uint64_t (*sub_1D2555818())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D255585C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD v4[6];

  v4[3] = a1;
  v4[4] = a2;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962030);
  return sub_1D2615628((uint64_t)sub_1D2556F40, (uint64_t)v4, v2);
}

_QWORD *sub_1D25558B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t, uint64_t);
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  NSObject *v31;
  os_log_type_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  _DWORD *v57;
  void (**v58)(_QWORD **, uint64_t);
  void (*v59)(_QWORD **, uint64_t);
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t);
  void (*v64)(char *, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  char v83;
  uint64_t v84;
  _UNKNOWN **v85;
  uint64_t v86;
  uint64_t v87;

  v81 = a2;
  v67 = a3;
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 1496);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v68 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v77 = (char *)&v61 - v11;
  v12 = v5[188];
  v79 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v79 + 64);
  v14 = MEMORY[0x1E0C80A78](v10);
  v69 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v76 = (char *)&v61 - v15;
  v80 = v3;
  v16 = (uint64_t *)(v3 + qword_1ED962528);
  swift_beginAccess();
  v17 = *v16;
  v18 = v5[193];
  v19 = sub_1D26CD89C();
  v71 = v5;
  v20 = v5[191];
  swift_bridgeObjectRetain();
  v70 = v6;
  v75 = v20;
  MEMORY[0x1D8239074](&v82, a1, v17, v6, v19, v20);
  swift_bridgeObjectRelease();
  v21 = (uint64_t)v82;
  if (!v82)
  {
    swift_getTupleTypeMetadata2();
    sub_1D26CDB3C();
    v21 = sub_1D26CD824();
  }
  v86 = v21;
  result = MEMORY[0x1D8239074](&v82, v81);
  v23 = (uint64_t)v82;
  if (v83)
    v23 = 0;
  v24 = v23 + 1;
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v24 < 1)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  v65 = v18;
  v66 = v13;
  v25 = a1;
  v26 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 16);
  v26(v76, v81, v12);
  v62 = v24;
  v82 = (_QWORD *)v24;
  v83 = 0;
  sub_1D26CD8C0();
  v78 = v12;
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v28 = v70;
  v27(v77, v25, v70);
  v87 = v86;
  swift_beginAccess();
  sub_1D26CD89C();
  v73 = v7;
  swift_bridgeObjectRetain();
  sub_1D26CD8C0();
  swift_endAccess();
  v29 = v68;
  v74 = v25;
  v63 = v27;
  v27(v68, v25, v28);
  v30 = v69;
  v64 = v26;
  v26(v69, v81, v78);
  v31 = sub_1D26CC084();
  v32 = sub_1D26CDD04();
  if (os_log_type_enabled(v31, v32))
  {
    v33 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v82 = (_QWORD *)v61;
    *(_DWORD *)v33 = 136446722;
    v34 = v71;
    v35 = sub_1D26CE370();
    v87 = sub_1D2537880(v35, v36, (uint64_t *)&v82);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v28);
    *(_WORD *)(v33 + 12) = 2082;
    v37 = v78;
    v38 = sub_1D26CE370();
    v87 = sub_1D2537880(v38, v39, (uint64_t *)&v82);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v40 = v79;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v30, v37);
    *(_WORD *)(v33 + 22) = 2048;
    v87 = v62;
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v31, v32, "%{public}s:%{public}s assertion: acquired (%ld)", (uint8_t *)v33, 0x20u);
    v41 = v61;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v41, -1, -1);
    MEMORY[0x1D823A5E0](v33, -1, -1);

    v42 = v73;
    v43 = v40;
  }
  else
  {

    v42 = v73;
    (*(void (**)(char *, uint64_t))(v73 + 8))(v29, v28);
    v43 = v79;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v30, v78);
    v34 = v71;
  }
  v44 = swift_allocObject();
  swift_weakInit();
  v45 = v77;
  v46 = v28;
  v63(v77, v74, v28);
  v47 = v76;
  v48 = v78;
  v64(v76, v81, v78);
  v49 = (*(unsigned __int8 *)(v42 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  v50 = (v72 + *(unsigned __int8 *)(v43 + 80) + v49) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  v51 = (char *)swift_allocObject();
  *((_QWORD *)v51 + 2) = v46;
  *((_QWORD *)v51 + 3) = v48;
  *((_QWORD *)v51 + 4) = v34[189];
  v52 = v75;
  *((_QWORD *)v51 + 5) = v34[190];
  *((_QWORD *)v51 + 6) = v52;
  v53 = v65;
  *((_QWORD *)v51 + 7) = v34[192];
  *((_QWORD *)v51 + 8) = v53;
  *((_QWORD *)v51 + 9) = v34[194];
  *((_QWORD *)v51 + 10) = v44;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v51[v49], v45, v46);
  (*(void (**)(char *, char *, uint64_t))(v79 + 32))(&v51[v50], v47, v48);
  v54 = type metadata accessor for BlockAssertion();
  v55 = (_QWORD *)swift_allocObject();
  type metadata accessor for UnfairLock();
  v56 = swift_allocObject();
  swift_retain();
  v57 = (_DWORD *)swift_slowAlloc();
  *v57 = 0;
  *(_QWORD *)(v56 + 16) = v57;
  v55[2] = v56;
  v55[3] = sub_1D255703C;
  v55[4] = v51;
  sub_1D25495F4(0);
  swift_release();
  v58 = (void (**)(_QWORD **, uint64_t))(v80 + qword_1ED977D40);
  swift_beginAccess();
  v59 = *v58;
  if (*v58)
  {
    v84 = v54;
    v85 = &protocol witness table for BlockAssertion;
    v82 = v55;
    sub_1D2549DF0((uint64_t)v59);
    swift_retain();
    v59(&v82, v74);
    sub_1D25495F4((uint64_t)v59);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v82);
  }
  else
  {
    v60 = v67;
    v67[3] = v54;
    v60[4] = &protocol witness table for BlockAssertion;
    *v60 = v55;
  }
  return (_QWORD *)swift_bridgeObjectRelease();
}

uint64_t sub_1D255602C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _BYTE v6[16];
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    v8 = a2;
    v9 = a3;
    sub_1D2615628((uint64_t)sub_1D2557214, (uint64_t)v6, MEMORY[0x1E0DEE9C0] + 8);
    return swift_release();
  }
  return result;
}

BOOL sub_1D25560B8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *v1;
  v4 = (uint64_t *)((char *)v1 + qword_1ED962528);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(v3 + 1496);
  v7 = sub_1D26CD89C();
  v8 = *(_QWORD *)(v3 + 1528);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v11, a1, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  v9 = v11;
  if (v11)
    swift_bridgeObjectRelease();
  return v9 != 0;
}

uint64_t sub_1D255617C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[6];

  v3[3] = a1;
  v3[4] = a2;
  return sub_1D2615628((uint64_t)sub_1D2557214, (uint64_t)v3, MEMORY[0x1E0DEE9C0] + 8);
}

void sub_1D25561C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  NSObject *v40;
  char *v41;
  uint64_t v42;
  void (*v43)(uint64_t *, _QWORD);
  uint64_t *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  NSObject *v52;
  os_log_type_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char *v62;
  os_log_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t (*v67)();
  char *v68;
  _QWORD *v69;
  os_log_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82[4];
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v5 = *(_QWORD **)a1;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 1496);
  v79 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v68 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v71 = (char *)&v65 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v72 = (char *)&v65 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v74 = (char *)&v65 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v70 = (os_log_t)((char *)&v65 - v16);
  v17 = v5[188];
  v80 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x1E0C80A78](v15);
  v66 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v67 = (uint64_t (*)())((char *)&v65 - v21);
  v22 = MEMORY[0x1E0C80A78](v20);
  v73 = (char *)&v65 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v65 - v25;
  v77 = v24;
  v27 = (uint64_t *)(v24 + qword_1ED962528);
  swift_beginAccess();
  v28 = *v27;
  v29 = v5[193];
  v30 = sub_1D26CD89C();
  v69 = v5;
  v31 = (char *)v5[191];
  swift_bridgeObjectRetain();
  v78 = a2;
  v81 = v6;
  MEMORY[0x1D8239074](&v83, a2, v28, v6, v30, v31);
  swift_bridgeObjectRelease();
  v32 = v83;
  if (!v83)
    goto LABEL_22;
  v86 = v83;
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v83, a3, v32, v17, MEMORY[0x1E0DEB418], v29);
  swift_bridgeObjectRelease();
  if ((v84 & 1) != 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v71, v78, v81);
    (*(void (**)(uint64_t (*)(), uint64_t, uint64_t))(v80 + 16))(v67, a3, v17);
    v83 = 0;
    v84 = 0xE000000000000000;
    sub_1D26CE0A0();
    sub_1D26CE3A0();
    sub_1D26CDA04();
    sub_1D26CE3A0();
    sub_1D26CDA04();
    goto LABEL_24;
  }
  v33 = v83 - 1;
  v34 = v80;
  if (__OFSUB__(v83, 1))
  {
    __break(1u);
    goto LABEL_21;
  }
  if (v33 < 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v68, v78, v81);
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v66, a3, v17);
    v83 = 0;
    v84 = 0xE000000000000000;
    sub_1D26CE0A0();
    sub_1D26CE3A0();
    sub_1D26CDA04();
    sub_1D26CE3A0();
    sub_1D26CDA04();
LABEL_24:
    sub_1D26CE1D8();
    __break(1u);
    return;
  }
  v75 = v17;
  v76 = a3;
  v71 = (char *)(v83 - 1);
  if (v83 == 1)
  {
    v39 = v79;
    v40 = *(NSObject **)(v79 + 16);
    v41 = v74;
    v42 = v81;
    ((void (*)(char *, uint64_t, uint64_t))v40)(v74, v78, v81);
    v67 = sub_1D2554B48();
    v68 = v31;
    v66 = (char *)sub_1D26CD89C();
    v43 = (void (*)(uint64_t *, _QWORD))sub_1D26CD8A8();
    v45 = *v44;
    v70 = v40;
    v65 = v29;
    if (v45)
      sub_1D26CD80C();
    v43(v82, 0);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v42);
    ((void (*)(uint64_t *, _QWORD))v67)(&v83, 0);
    v46 = (uint64_t *)(v77 + qword_1ED962528);
    swift_beginAccess();
    v47 = *v46;
    swift_bridgeObjectRetain();
    v35 = v78;
    MEMORY[0x1D8239074](v82, v78, v47, v42, v30, v68);
    swift_bridgeObjectRelease();
    v38 = v73;
    if (v82[0])
    {
      v48 = MEMORY[0x1D8239020](v82[0], v75, MEMORY[0x1E0DEB418], v65);
      swift_bridgeObjectRelease();
      if ((v48 & 1) != 0)
      {
        swift_beginAccess();
        sub_1D26CD80C();
        swift_endAccess();
        swift_bridgeObjectRelease();
      }
      v37 = v76;
      v36 = v70;
      v34 = v80;
    }
    else
    {
      v37 = v76;
      v36 = v70;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v26, a3, v17);
    v83 = v33;
    LOBYTE(v84) = 0;
    sub_1D26CD8C0();
    v35 = v78;
    v36 = *(os_log_t *)(v79 + 16);
    ((void (*)(os_log_t, uint64_t, uint64_t))v36)(v70, v78, v81);
    v82[0] = v86;
    swift_beginAccess();
    sub_1D26CD89C();
    swift_bridgeObjectRetain();
    v37 = v76;
    v34 = v80;
    sub_1D26CD8C0();
    swift_endAccess();
    v38 = v73;
  }
  v49 = v72;
  v50 = v35;
  ((void (*)(char *, uint64_t, uint64_t))v36)(v72, v35, v81);
  v51 = v75;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v38, v37, v75);
  v52 = sub_1D26CC084();
  v53 = sub_1D26CDD04();
  v54 = v53;
  if (os_log_type_enabled(v52, v53))
  {
    v55 = swift_slowAlloc();
    v74 = (char *)swift_slowAlloc();
    v82[0] = (uint64_t)v74;
    *(_DWORD *)v55 = 136446722;
    LODWORD(v73) = v54;
    v70 = v52;
    v56 = v81;
    v57 = sub_1D26CE370();
    v85 = sub_1D2537880(v57, v58, v82);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v49, v56);
    *(_WORD *)(v55 + 12) = 2082;
    v59 = sub_1D26CE370();
    v85 = sub_1D2537880(v59, v60, v82);
    v61 = v78;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v38, v51);
    *(_WORD *)(v55 + 22) = 2048;
    v62 = v71;
    v85 = (uint64_t)v71;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v63 = v70;
    _os_log_impl(&dword_1D2531000, v70, (os_log_type_t)v73, "%{public}s:%{public}s assertion released (%ld)", (uint8_t *)v55, 0x20u);
    v64 = v74;
    swift_arrayDestroy();
    v37 = v76;
    MEMORY[0x1D823A5E0](v64, -1, -1);
    MEMORY[0x1D823A5E0](v55, -1, -1);

    if (!v62)
LABEL_18:
      sub_1D261716C(v61, v37);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v79 + 8))(v49, v81);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v38, v51);

    swift_bridgeObjectRelease();
    v61 = v50;
    if (!v71)
      goto LABEL_18;
  }
}

uint64_t sub_1D2556B3C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = v0 + qword_1ED961D78;
  v2 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return sub_1D25495F4(*(_QWORD *)(v0 + qword_1ED977D40));
}

uint64_t AssertedStatefulStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = StatefulStore.deinit();
  swift_bridgeObjectRelease();
  v1 = v0 + qword_1ED961D78;
  v2 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D25495F4(*(_QWORD *)(v0 + qword_1ED977D40));
  return v0;
}

uint64_t AssertedStatefulStore.__deallocating_deinit()
{
  AssertedStatefulStore.deinit();
  return swift_deallocClassInstance();
}

void *sub_1D2556C2C(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  uint64_t v4;

  if (__src)
    v4 = a2 - (_QWORD)__src;
  else
    v4 = 0;
  if (!__dst)
  {
    if (v4 <= 0)
      return __src;
LABEL_10:
    __src = (void *)sub_1D26CE220();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v4)
    goto LABEL_10;
  if (__src)
    return memmove(__dst, __src, a2 - (_QWORD)__src);
  return __src;
}

uint64_t sub_1D2556CC0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

void sub_1D2556CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, __int128 a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  _BYTE v29[40];

  v28 = a8;
  v26 = a6;
  v27 = a7;
  v24 = a2;
  v25 = a3;
  v23 = a1;
  v22 = a9;
  v21 = a10;
  v13 = sub_1D26CC09C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = qword_1ED962528;
  sub_1D26CD89C();
  swift_retain();
  swift_getTupleTypeMetadata2();
  sub_1D26CDB3C();
  *(_QWORD *)(v10 + v17) = sub_1D26CD824();
  v18 = (_QWORD *)(v10 + qword_1ED977D40);
  *v18 = 0;
  v18[1] = 0;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v19(v10 + qword_1ED961D78, a4, v13);
  swift_release();
  v19((uint64_t)v16, a4, v13);
  sub_1D2538510(a5, (uint64_t)v29);
  sub_1D262A394(v23, v24, v25, (uint64_t)v16, (uint64_t)v29, v26, v27, v28, v22, *((uint64_t *)&v22 + 1), v21);
}

uint64_t sub_1D2556E54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  return a1;
}

uint64_t sub_1D2556E98@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1D2554DD4(v1, a1);
}

unint64_t sub_1D2556EB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96BF78;
  if (!qword_1ED96BF78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96BF70);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96BF78);
  }
  return result;
}

uint64_t sub_1D2556EFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1ED977D40;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

_QWORD *sub_1D2556F40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1D25558B8(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1D2556F70()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2556F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v2);
  return swift_deallocObject();
}

uint64_t sub_1D255703C()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0[2] - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v0[3] - 8) + 80);
  return sub_1D255602C(v0[10], (uint64_t)v0 + v2, (uint64_t)v0 + ((v2 + *(_QWORD *)(v1 + 64) + v3) & ~v3));
}

uint64_t sub_1D25570A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1D2556EFC();
  if (v2)
    v4 = v3;
  else
    v4 = 0;
  *a1 = v2;
  a1[1] = v4;
  return sub_1D2549DF0(v2);
}

uint64_t sub_1D25570D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  if (*a1)
    v2 = a1[1];
  else
    v2 = 0;
  sub_1D2549DF0(*a1);
  return sub_1D25557BC(v1, v2);
}

uint64_t sub_1D255711C()
{
  return 64;
}

__n128 sub_1D2557128(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D255713C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CC09C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for AssertedStatefulStore()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for AssertedStatefulStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AssertedStatefulStore.lifetimeAssertionWrapper.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1608))();
}

uint64_t dispatch thunk of AssertedStatefulStore.lifetimeAssertionWrapper.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1616))();
}

uint64_t dispatch thunk of AssertedStatefulStore.lifetimeAssertionWrapper.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1624))();
}

uint64_t dispatch thunk of AssertedStatefulStore.acquireLifetimeAssertion(for:variantKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1632))();
}

uint64_t dispatch thunk of AssertedStatefulStore._locked_acquireLifetimeAssertion(for:variantKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1640))();
}

void sub_1D2557214()
{
  uint64_t *v0;

  sub_1D25561C4(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D2557230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  unsigned __int8 v11;
  NSObject *v12;
  _BYTE *v13;
  NSObject *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t result;
  uint64_t v19;
  NSObject *v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  NSObject *v24;
  void (*v25)(void);
  NSObject *v26;
  id v27;
  _QWORD *v28;
  id v29;
  id v30;
  NSObject *aBlock;
  unint64_t v32;
  uint64_t (*v33)();
  void *v34;
  uint64_t (*v35)(void *);
  uint64_t v36;
  uint64_t v37;

  v2 = v1;
  v37 = *MEMORY[0x1E0C80C00];
  v4 = *(void **)(v2 + 32);
  v5 = (void *)sub_1D26CD914();
  v6 = objc_msgSend(v4, sel_prepareStatement_, v5);

  if (!v6)
  {
    sub_1D255F2B0();
    swift_allocError();
    *v13 = 3;
    swift_willThrow();
    return v2;
  }
  v7 = sub_1D255A618(a1);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = MEMORY[0x1E0DEE9D8];
  sub_1D25D55D0(v7);
  swift_release();
  v9 = (void *)sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  v35 = sub_1D255F3D0;
  v36 = v8;
  aBlock = MEMORY[0x1E0C809B0];
  v32 = 1107296256;
  v33 = sub_1D2559594;
  v34 = &block_descriptor_15;
  v10 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  aBlock = 0;
  v11 = objc_msgSend(v6, sel_executeWithBindings_resultRowHandler_error_, v9, v10, &aBlock);
  _Block_release(v10);

  v12 = aBlock;
  if ((v11 & 1) != 0)
  {

    swift_beginAccess();
    v2 = *(_QWORD *)(v8 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v2;
  }
  v14 = v12;
  v15 = (void *)sub_1D26CB76C();

  swift_willThrow();
  v30 = v15;
  v16 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
  sub_1D2539514(0, (unint64_t *)&qword_1ED962310);
  if (!swift_dynamicCast())
  {
LABEL_10:

    swift_release();
    return v2;
  }
  if (objc_msgSend(v29, sel_code) != (id)11)
  {

    goto LABEL_10;
  }

  if (*(_BYTE *)(v2 + 40) != 1)
  {
    v17 = v29;
    swift_willThrow();

    goto LABEL_10;
  }
  if (qword_1ED962330 != -1)
    swift_once();
  v19 = sub_1D26CC09C();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED977D20);
  v20 = v29;
  v21 = sub_1D26CC084();
  v22 = sub_1D26CDCF8();
  if (os_log_type_enabled(v21, v22))
  {
    v23 = (uint8_t *)swift_slowAlloc();
    v28 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v23 = 138543362;
    aBlock = v20;
    v24 = v20;
    sub_1D26CDF50();
    *v28 = v20;

    _os_log_impl(&dword_1D2531000, v21, v22, "Corrupt database detected. Calling corruption handler and exiting: %{public}@", v23, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v28, -1, -1);
    MEMORY[0x1D823A5E0](v23, -1, -1);
  }
  else
  {

    v21 = v20;
  }

  v25 = *(void (**)(void))(v2 + 48);
  v26 = v20;
  v25();

  aBlock = 0;
  v32 = 0xE000000000000000;
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  aBlock = 0xD00000000000002CLL;
  v32 = 0x80000001D26DEC20;
  v27 = -[NSObject description](v26, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

void sub_1D2557754(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  unint64_t v5;

  v2 = v1;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v2 + 24) + 16));
  if (a1 == 1)
  {
    if (!*(_QWORD *)(v2 + 80))
    {
      v5 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
      MEMORY[0x1D8239188](18);
      sub_1D26CDA04();
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D2557230(v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else if (!a1 && *(_QWORD *)(v2 + 80) == 1)
  {
    v4 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    sub_1D2557230(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D25578FC(void *a1, uint64_t a2, unsigned int a3, char *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v14;
  _DWORD *v15;
  id v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  id v20;
  NSObject *v21;
  os_log_type_t v22;
  uint8_t *v23;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  unint64_t v42;
  _QWORD *v43;
  void *v44;
  uint64_t v46;

  v8 = v6;
  *(_QWORD *)(v8 + 16) = 10;
  type metadata accessor for UnfairLock();
  v14 = swift_allocObject();
  v15 = (_DWORD *)swift_slowAlloc();
  *v15 = 0;
  *(_QWORD *)(v14 + 16) = v15;
  *(_BYTE *)(v8 + 40) = 0;
  *(_QWORD *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 80) = 0;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 64) = 0;
  *(_QWORD *)(v8 + 24) = v14;
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 48) = a5;
  v16 = a1;
  swift_retain();
  v17 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  sub_1D2557230(v17);
  if (v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v8 + 32), sel_close);
    swift_release();
    if (qword_1ED962330 != -1)
      swift_once();
    v19 = sub_1D26CC09C();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED977D20);
    v20 = v7;
    v21 = sub_1D26CC084();
    v22 = sub_1D26CDCEC();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = (uint8_t *)swift_slowAlloc();
      v43 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v23 = 138543362;
      v46 = sub_1D26CB760();
      sub_1D26CDF50();
      *v43 = v46;

      _os_log_impl(&dword_1D2531000, v21, v22, "Failed to open database: %{public}@", v23, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v43, -1, -1);
      MEMORY[0x1D823A5E0](v23, -1, -1);
    }
    else
    {

    }
    swift_willThrow();

    swift_release();
    sub_1D253703C(a2, (uint64_t *)&unk_1ED96FC50);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    sub_1D2557230(v18);
    v44 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    MEMORY[0x1D8239188](18);
    sub_1D26CDA04();
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D2557230(v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    sub_1D2557230(v26);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    sub_1D2557230(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    sub_1D2557230(v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a4)
    {
      sub_1D25580F4(a3, a4, a2);
      swift_bridgeObjectRelease();
    }
    v29 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    v30 = sub_1D2558AF0(v29);
    swift_bridgeObjectRelease();
    v31 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    v32 = sub_1D2558AF0(v31);
    swift_bridgeObjectRelease();
    if (qword_1ED962330 != -1)
      swift_once();
    v33 = fmax((double)v32 * 0.05, 256.0);
    v34 = sub_1D26CC09C();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED977D20);
    v35 = sub_1D26CC084();
    v36 = sub_1D26CDD04();
    if (os_log_type_enabled(v35, v36))
    {
      v37 = swift_slowAlloc();
      *(_DWORD *)v37 = 134349312;
      sub_1D26CDF50();
      *(_WORD *)(v37 + 12) = 2050;
      sub_1D26CDF50();
      _os_log_impl(&dword_1D2531000, v35, v36, "Database has %{public}lld/%{public}lld free pages.", (uint8_t *)v37, 0x16u);
      v38 = v37;
      v16 = v44;
      MEMORY[0x1D823A5E0](v38, -1, -1);
    }

    if (v33 > (double)v30)
    {

      swift_release();
    }
    else
    {
      v39 = sub_1D26CC084();
      v40 = sub_1D26CDD04();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v41 = 0;
        _os_log_impl(&dword_1D2531000, v39, v40, "Vacuuming", v41, 2u);
        MEMORY[0x1D823A5E0](v41, -1, -1);
      }

      v42 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
      sub_1D2557230(v42);
      swift_bridgeObjectRelease();

      swift_release();
      swift_bridgeObjectRelease();
    }
    sub_1D253703C(a2, (uint64_t *)&unk_1ED96FC50);
    *(_BYTE *)(v8 + 40) = 1;
  }
  return v8;
}

uint64_t sub_1D25580F4(unsigned int a1, char *a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  _BOOL4 v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  unsigned int v33;
  unint64_t v34;
  uint64_t v35;
  NSObject *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  void *v45;
  unsigned int v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint8_t *v51;
  unint64_t v52;
  void *v53;
  unsigned int v54;
  uint64_t v55;
  void *v56;
  id v57;
  id v58;
  void *v59;
  unsigned int v60;
  id v61;
  uint64_t v62;
  char *v63;
  unint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unsigned int v70;
  unsigned int v71;
  uint64_t v72;
  unsigned int v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  __int16 v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82[3];

  v76 = a3;
  v77 = a2;
  v82[1] = *MEMORY[0x1E0C80C00];
  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v62 - v14;
  v16 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  v17 = sub_1D2558AF0(v16);
  v18 = v4;
  result = swift_bridgeObjectRelease();
  if (v4)
    return result;
  v74 = v9;
  v75 = 0;
  v73 = a1;
  v63 = v13;
  v65 = v7;
  v66 = v15;
  if (v17 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (v17 <= 0x7FFFFFFF)
  {
    v20 = *((_QWORD *)v77 + 2);
    if (v20 >= 0x10000)
    {
      result = sub_1D26CE1CC();
      __break(1u);
      return result;
    }
    v18 = v3;
    v15 = v77;
    v72 = v6;
    v68 = v20;
    v70 = (unsigned __int16)v17;
    v71 = (unsigned __int16)v20;
    if (qword_1ED962330 == -1)
      goto LABEL_6;
    goto LABEL_29;
  }
  __break(1u);
LABEL_29:
  swift_once();
LABEL_6:
  v21 = sub_1D26CC09C();
  v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED977D20);
  v23 = sub_1D26CC084();
  v24 = sub_1D26CDD04();
  v25 = os_log_type_enabled(v23, v24);
  v69 = v17;
  v67 = v22;
  if (v25)
  {
    v26 = swift_slowAlloc();
    v64 = v18;
    v27 = v26;
    v62 = swift_slowAlloc();
    v82[0] = v62;
    *(_DWORD *)v27 = 136446466;
    v79 = 118;
    v80 = 0xE100000000000000;
    v78 = WORD1(v17);
    sub_1D26CE370();
    v28 = v73;
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    v78 = v70;
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v79 = sub_1D2537880(v79, v80, v82);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    v79 = 118;
    v80 = 0xE100000000000000;
    v78 = v28;
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    v78 = v71;
    sub_1D26CE370();
    sub_1D26CDA04();
    v29 = v28;
    swift_bridgeObjectRelease();
    v79 = sub_1D2537880(v79, v80, v82);
    v15 = v77;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v23, v24, "Migrating database from %{public}s to %{public}s", (uint8_t *)v27, 0x16u);
    v17 = v62;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v17, -1, -1);
    WORD1(v17) = WORD1(v69);
    v30 = v64;
    MEMORY[0x1D823A5E0](v27, -1, -1);

  }
  else
  {

    v29 = v73;
    v30 = v18;
  }
  v31 = v74;
  v32 = v72;
  v33 = v29;
  result = v76;
  if (WORD1(v17) == (unsigned __int16)v29)
  {
    if (v70 == v71)
      return result;
    v81 = (unsigned __int16)v69;
    if (v71 >= v70)
    {
LABEL_24:
      v60 = (unsigned __int16)v33 | ((unsigned __int16)v68 << 16);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1D255E6D4(0x6F6974617267694DLL, 0xE90000000000006ELL, v30, v33, (uint64_t)v15, &v81, v30, v60);
      swift_bridgeObjectRelease();
      return swift_release();
    }
    v34 = v30;
    v35 = (uint64_t)v66;
    sub_1D255F2F4(v76, (uint64_t)v66);
    v36 = sub_1D26CC084();
    v37 = sub_1D26CDCEC();
    if (os_log_type_enabled(v36, (os_log_type_t)v37))
    {
      LODWORD(v76) = v37;
      v64 = v34;
      v38 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v82[0] = v39;
      *(_DWORD *)v38 = 136446722;
      v79 = 118;
      v80 = 0xE100000000000000;
      v78 = v33;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      v78 = v70;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v79 = sub_1D2537880(v79, v80, v82);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2082;
      v79 = 118;
      v80 = 0xE100000000000000;
      v78 = v33;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      v78 = v71;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v79 = sub_1D2537880(v79, v80, v82);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 22) = 2080;
      v40 = (uint64_t)v63;
      sub_1D255F2F4((uint64_t)v66, (uint64_t)v63);
      v41 = sub_1D26CB880();
      v42 = *(_QWORD *)(v41 - 8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41) == 1)
      {
        sub_1D253703C(v40, (uint64_t *)&unk_1ED96FC50);
        v43 = 0xEB000000003E7972;
        v44 = 0x6F6D656D2D6E693CLL;
      }
      else
      {
        v44 = sub_1D26CB7A8();
        v43 = v52;
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
      }
      v32 = v72;
      v31 = v74;
      v79 = sub_1D2537880(v44, v43, v82);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D253703C((uint64_t)v66, (uint64_t *)&unk_1ED96FC50);
      _os_log_impl(&dword_1D2531000, v36, (os_log_type_t)v76, "Detected database schema downgrade from %{public}s to %{public}s. Will attempt to truncate %s", (uint8_t *)v38, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v39, -1, -1);
      MEMORY[0x1D823A5E0](v38, -1, -1);

      v34 = v64;
      v15 = v77;
      v33 = v73;
    }
    else
    {
      sub_1D253703C(v35, (uint64_t *)&unk_1ED96FC50);

    }
    v53 = *(void **)(v34 + 32);
    v79 = 0;
    v54 = objc_msgSend(v53, sel_truncateDatabaseAndReturnError_, &v79);
    v47 = (id)v79;
    v55 = v65;
    if (v54)
    {
      v81 = 0;
      v56 = (void *)objc_opt_self();
      v57 = v47;
      v58 = objc_msgSend(v56, sel_standardUserDefaults);
      sub_1D26CB9B8();
      v59 = (void *)sub_1D26CB940();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v31, v32);
      v49 = sub_1D26CD914();
      objc_msgSend(v58, sel_setObject_forKey_, v59, v49);

LABEL_23:
      v30 = v34;
      goto LABEL_24;
    }
  }
  else
  {
    v45 = *(void **)(v30 + 32);
    v79 = 0;
    v46 = objc_msgSend(v45, sel_truncateDatabaseAndReturnError_, &v79);
    v47 = (id)v79;
    if (v46)
    {
      v34 = v30;
      v81 = 0;
      v48 = (id)v79;
      v49 = sub_1D26CC084();
      v50 = sub_1D26CDD04();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v51 = 0;
        _os_log_impl(&dword_1D2531000, v49, v50, "Truncated database for major schema version migration.", v51, 2u);
        MEMORY[0x1D823A5E0](v51, -1, -1);
      }
      goto LABEL_23;
    }
  }
  v61 = v47;
  sub_1D26CB76C();

  return swift_willThrow();
}

uint64_t sub_1D2558AF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  _BYTE *v7;

  v3 = sub_1D2557230(a1);
  if (!v2)
  {
    v1 = v3;
    if (!*(_QWORD *)(v3 + 16)
      || (v4 = *(_QWORD *)(v3 + 32), swift_bridgeObjectRetain(),
                                     swift_bridgeObjectRelease(),
                                     *(_QWORD *)(v4 + 16) != 1))
    {
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    v1 = *(_QWORD *)(v4 + 48);
    v5 = *(_QWORD *)(v4 + 56);
    v6 = *(unsigned __int8 *)(v4 + 64);
    swift_bridgeObjectRetain();
    sub_1D2541E98(v1, v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_1D253FBE8(v1, v5, v6);
LABEL_7:
      sub_1D255F2B0();
      swift_allocError();
      *v7 = 4;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_1D2558BE4@<X0>(uint64_t a1@<X8>)
{
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  _OWORD v9[2];
  _BYTE v10[24];
  uint64_t v11;

  v2 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  v3 = (void *)sub_1D26CD914();
  v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1D255DF24((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    v5 = sub_1D26CB9DC();
    v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_1D253703C((uint64_t)v10, &qword_1ED96FCE0);
    v8 = sub_1D26CB9DC();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t SQLDatabase.deinit()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return v0;
}

uint64_t SQLDatabase.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLDatabase()
{
  return objc_opt_self();
}

uint64_t method lookup function for SQLDatabase()
{
  return swift_lookUpClassMethod();
}

uint64_t *initializeBufferWithCopyOfBuffer for SQLDatabase.Storage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = sub_1D26CB880();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 48));
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for SQLDatabase.Storage(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = sub_1D26CB880();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

char *initializeWithCopy for SQLDatabase.Storage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1D26CB880();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    *(_QWORD *)&a1[*(int *)(v6 + 48)] = *(_QWORD *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithCopy for SQLDatabase.Storage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1D26CB880();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      *(_QWORD *)&a1[*(int *)(v6 + 48)] = *(_QWORD *)&a2[*(int *)(v6 + 48)];
      return a1;
    }
    sub_1D253703C((uint64_t)a1, &qword_1ED961AE8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1D26CB880();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  *(_QWORD *)&a1[*(int *)(v6 + 48)] = *(_QWORD *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

char *initializeWithTake for SQLDatabase.Storage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = sub_1D26CB880();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    *(_QWORD *)&a1[*(int *)(v6 + 48)] = *(_QWORD *)&a2[*(int *)(v6 + 48)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

char *assignWithTake for SQLDatabase.Storage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = sub_1D26CB880();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      *(_QWORD *)&a1[*(int *)(v6 + 48)] = *(_QWORD *)&a2[*(int *)(v6 + 48)];
      return a1;
    }
    sub_1D253703C((uint64_t)a1, &qword_1ED961AE8);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = sub_1D26CB880();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  *(_QWORD *)&a1[*(int *)(v6 + 48)] = *(_QWORD *)&a2[*(int *)(v6 + 48)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLDatabase.Storage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25592DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SQLDatabase.Storage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2559338(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D255938C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1D25593C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t type metadata accessor for SQLDatabase.Storage()
{
  uint64_t result;

  result = qword_1ED961BA8;
  if (!qword_1ED961BA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2559448()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB880();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D25594BC(void *a1, uint64_t a2)
{
  _QWORD *v3;
  unint64_t v4;
  _QWORD *v5;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v7;
  unint64_t v8;

  v3 = (_QWORD *)(a2 + 16);
  v4 = sub_1D2648A98(a1);
  swift_beginAccess();
  v5 = *(_QWORD **)(a2 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(a2 + 16) = v5;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v5 = sub_1D2561914(0, v5[2] + 1, 1, v5);
    *v3 = v5;
  }
  v8 = v5[2];
  v7 = v5[3];
  if (v8 >= v7 >> 1)
  {
    v5 = sub_1D2561914((_QWORD *)(v7 > 1), v8 + 1, 1, v5);
    *v3 = v5;
  }
  v5[2] = v8 + 1;
  v5[v8 + 4] = v4;
  return swift_endAccess();
}

uint64_t sub_1D2559598()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t result;
  id v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  _QWORD v9[6];

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  result = *(_QWORD *)(v0 + 80);
  if (result == -1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 80) = result + 1;
    sub_1D2557754(result);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
    swift_release();
    v4 = objc_allocWithZone(MEMORY[0x1E0D01868]);
    swift_bridgeObjectRetain();
    swift_retain();
    v5 = (void *)sub_1D26CD914();
    v6 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v9[4] = sub_1D255DF1C;
    v9[5] = v0;
    v9[0] = MEMORY[0x1E0C809B0];
    v9[1] = 1107296256;
    v9[2] = sub_1D2559594;
    v9[3] = &block_descriptor_2;
    v7 = _Block_copy(v9);
    v8 = objc_msgSend(v4, sel_initWithIdentifier_forReason_invalidationBlock_, v5, v6, v7);

    _Block_release(v7);
    swift_release();
    return (uint64_t)v8;
  }
  return result;
}

uint64_t sub_1D25596EC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18[2];
  uint64_t v19;

  v5 = v4;
  if (qword_1ED962330 != -1)
    swift_once();
  v10 = sub_1D26CC09C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v11 = sub_1D26CC084();
  v12 = sub_1D26CDCE0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    v14 = v18[0];
    *(_DWORD *)v13 = 136446466;
    swift_bridgeObjectRetain();
    v19 = sub_1D2537880(a1, a2, v18);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    v19 = sub_1D2537880(a3, a4, v18);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v11, v12, "Committing transaction savepoint [%{public}s]: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    v15 = v14;
    v5 = v4;
    MEMORY[0x1D823A5E0](v15, -1, -1);
    MEMORY[0x1D823A5E0](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v18[0] = 0;
  v18[1] = 0xE000000000000000;
  v16 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](18);
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D2557230(v16);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v5)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D25599A4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v5 = v4;
  if (qword_1ED962330 != -1)
    swift_once();
  v10 = sub_1D26CC09C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v11 = sub_1D26CC084();
  v12 = sub_1D26CDCE0();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v18 = v14;
    *(_DWORD *)v13 = 136446466;
    swift_bridgeObjectRetain();
    v20 = sub_1D2537880(a1, a2, &v18);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2082;
    swift_bridgeObjectRetain();
    v20 = sub_1D2537880(a3, a4, &v18);
    v5 = v4;
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v11, v12, "Rollback to transaction savepoint [%{public}s]: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v14, -1, -1);
    MEMORY[0x1D823A5E0](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v18 = 0;
  v19 = 0xE000000000000000;
  v15 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](22);
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D2557230(v15);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v18 = 0;
    v19 = 0xE000000000000000;
    v17 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
    MEMORY[0x1D8239188](18);
    sub_1D26CDA04();
    sub_1D26CDA04();
    sub_1D2557230(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1D2559CF4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  unint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  sub_1D2557230(v6);
  if (v3)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED962330 != -1)
      swift_once();
    v7 = sub_1D26CC09C();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED977D20);
    swift_bridgeObjectRetain_n();
    v8 = sub_1D26CC084();
    v9 = sub_1D26CDCE0();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v17 = v11;
      *(_DWORD *)v10 = 136446210;
      swift_bridgeObjectRetain();
      sub_1D2537880(a2, a3, &v17);
      sub_1D26CDF50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2531000, v8, v9, "Unable to execute wal_checkpoint(FULL, privacy: .public) for: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v11, -1, -1);
      MEMORY[0x1D823A5E0](v10, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_1ED962330 != -1)
      swift_once();
    v12 = sub_1D26CC09C();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED977D20);
    swift_bridgeObjectRetain_n();
    v13 = sub_1D26CC084();
    v14 = sub_1D26CDCE0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v16 = swift_slowAlloc();
      v17 = v16;
      *(_DWORD *)v15 = 136446210;
      swift_bridgeObjectRetain();
      sub_1D2537880(a2, a3, &v17);
      sub_1D26CDF50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2531000, v13, v14, "Successfully executed wal_checkpoint(FULL, privacy: .public) for: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v16, -1, -1);
      MEMORY[0x1D823A5E0](v15, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1D255A070(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t result;

  v3 = *(_QWORD *)(a2 + 24);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  result = *(_QWORD *)(a2 + 80);
  if (result)
  {
    *(_QWORD *)(a2 + 80) = result - 1;
    sub_1D2557754(result);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D255A0D0(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4, unsigned int a5)
{
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v30;
  uint64_t v32[2];
  unint64_t v33;

  v7 = *a3;
  if ((*a3 & 0x8000000000000000) != 0)
    goto LABEL_34;
  v8 = v5;
  v30 = *(_QWORD *)(a2 + 16);
  if (!v7)
    goto LABEL_16;
  if (!v30)
    goto LABEL_27;
  v10 = v7 - 2;
  if (v7 < 2)
  {
LABEL_16:
    if (v7 == v30)
      goto LABEL_27;
    swift_bridgeObjectRetain();
    while (v7 < *(_QWORD *)(a2 + 16))
    {
      v6 = swift_allocObject();
      *(_OWORD *)(v6 + 16) = *(_OWORD *)(a2 + 16 * v7 + 32);
      v17 = qword_1ED962330;
      swift_retain();
      if (v17 != -1)
        swift_once();
      v18 = v7 + 1;
      v19 = sub_1D26CC09C();
      __swift_project_value_buffer(v19, (uint64_t)qword_1ED977D20);
      v20 = sub_1D26CC084();
      v21 = sub_1D26CDD04();
      if (os_log_type_enabled(v20, v21))
      {
        v22 = swift_slowAlloc();
        *(_DWORD *)v22 = 134349312;
        *(_QWORD *)(v22 + 4) = v7;
        *(_WORD *)(v22 + 12) = 2050;
        *(_QWORD *)(v22 + 14) = v18;
        _os_log_impl(&dword_1D2531000, v20, v21, "Migrating from minor revision %{public}ld to %{public}ld", (uint8_t *)v22, 0x16u);
        MEMORY[0x1D823A5E0](v22, -1, -1);
      }

      sub_1D26CE0A0();
      swift_bridgeObjectRelease();
      strcpy((char *)v32, "MigratingFrom_");
      HIBYTE(v32[1]) = -18;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      v33 = v7 + 1;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      swift_retain();
      swift_retain();
      sub_1D255DF6C(v32[0], v32[1], a4, (void (*)(uint64_t))sub_1D255F384, v6, a4);
      swift_bridgeObjectRelease();
      if (v8)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();
        return 1;
      }
      swift_release_n();
      swift_release();
      ++v7;
      if (v30 == v18)
      {
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    swift_once();
    goto LABEL_29;
  }
  if (v30 - 1 < v10)
    v10 = v30 - 1;
  v11 = v10 + 1;
  if (v11 >= 0x21)
  {
    v13 = v11 & 0x1F;
    if ((v11 & 0x1F) == 0)
      v13 = 32;
    v14 = v11 - v13;
    v12 = v14 + 1;
    do
      v14 -= 32;
    while (v14);
  }
  else
  {
    v12 = 1;
  }
  v15 = v7 - v12;
  v16 = v30 - v12;
  while (v16)
  {
    --v16;
    if (!--v15)
      goto LABEL_16;
  }
LABEL_27:
  v32[0] = 0;
  v32[1] = 0xE000000000000000;
  v23 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](22);
  sub_1D26CDA04();
  LODWORD(v6) = __PAIR64__(a5, a5) >> 16;
  LODWORD(v33) = v6;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D2557230(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
    return 1;
  swift_bridgeObjectRelease();
  if (qword_1ED962330 != -1)
    goto LABEL_35;
LABEL_29:
  v24 = sub_1D26CC09C();
  __swift_project_value_buffer(v24, (uint64_t)qword_1ED977D20);
  v25 = sub_1D26CC084();
  v26 = sub_1D26CDD04();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v27 = 67240192;
    LODWORD(v32[0]) = v6;
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v25, v26, "Set revision to %{public}d", v27, 8u);
    MEMORY[0x1D823A5E0](v27, -1, -1);
  }

  return 1;
}

void sub_1D255A5C8(uint64_t a1, void *a2)
{
  void (*v3)(void);
  id v4;

  v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3();
  swift_release();

}

uint64_t sub_1D255A618(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962130);
  result = sub_1D26CE1FC();
  v3 = *(_QWORD *)(a1 + 64);
  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v10 = (unint64_t)(v4 + 63) >> 6;
  if ((v5 & v3) != 0)
  {
    v6 = __clz(__rbit64(v5 & v3));
    goto LABEL_18;
  }
  if ((unint64_t)(v4 + 63) >> 6 > 1)
  {
    v7 = *(_QWORD *)(a1 + 72);
    v8 = 1;
    if (v7)
      goto LABEL_17;
    v8 = 2;
    if (v10 <= 2)
      return result;
    v7 = *(_QWORD *)(a1 + 80);
    if (v7)
      goto LABEL_17;
    v8 = 3;
    if (v10 <= 3)
      return result;
    v7 = *(_QWORD *)(a1 + 88);
    if (v7)
    {
LABEL_17:
      v6 = __clz(__rbit64(v7)) + (v8 << 6);
LABEL_18:
      __asm { BR              X9 }
    }
    v9 = 4;
    if (v10 > 4)
    {
      v7 = *(_QWORD *)(a1 + 96);
      if (v7)
      {
        v8 = 4;
        goto LABEL_17;
      }
      while (1)
      {
        v8 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          JUMPOUT(0x1D255A930);
        }
        if (v8 >= v10)
          break;
        v7 = *(_QWORD *)(a1 + 64 + 8 * v8);
        ++v9;
        if (v7)
          goto LABEL_17;
      }
    }
  }
  return result;
}

uint64_t sub_1D255A944(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  char v6;

  sub_1D255DF6C(a1, a2, a3, a4, a5, a6);
  return v6 & 1;
}

void sub_1D255A95C(uint64_t a1, unint64_t a2, _QWORD *a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  os_unfair_lock_s *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  os_unfair_lock_s *v36;
  uint64_t v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  os_unfair_lock_s *v42;
  os_unfair_lock_s *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  id v52;
  uint64_t v53[2];
  uint64_t v54;

  v7 = v5;
  v11 = a3[3];
  v12 = *(os_unfair_lock_s **)(v11 + 16);
  v52 = a5;
  swift_retain();
  os_unfair_lock_lock(v12);
  v13 = a3[9];
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
  {
    __break(1u);
    goto LABEL_26;
  }
  a3[9] = v15;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
  v16 = a3[8];
  v17 = a3[9];
  v12 = (os_unfair_lock_s *)(v16 + v17);
  if (__OFADD__(v16, v17))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v53, "transaction_");
  BYTE5(v53[1]) = 0;
  HIWORD(v53[1]) = -5120;
  sub_1D26CDA04();
  sub_1D26CDA04();
  v54 = (uint64_t)v12;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v49 = a1;
  v6 = v11;
  v12 = (os_unfair_lock_s *)v53[0];
  v11 = v53[1];
  v51 = (id)sub_1D2559598();
  v53[0] = 0;
  v53[1] = 0xE000000000000000;
  v18 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](10);
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D2557230(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    v47 = (uint64_t)a3;
    v48 = a2;
    swift_bridgeObjectRelease();
    if (qword_1ED962330 == -1)
      goto LABEL_7;
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  v19 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v19);
  v20 = a3[9];
  v14 = __OFSUB__(v20, 1);
  v21 = v20 - 1;
  if (!v14)
  {
    a3[9] = v21;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    swift_willThrow();
LABEL_17:
    objc_msgSend(v51, sel_invalidate);
    swift_unknownObjectRelease();

    swift_release();
    return;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  swift_once();
LABEL_7:
  v22 = sub_1D26CC09C();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain_n();
  v23 = v11;
  swift_bridgeObjectRetain_n();
  v24 = sub_1D26CC084();
  v25 = sub_1D26CDCE0();
  v26 = (uint64_t)v12;
  v46 = v7;
  if (os_log_type_enabled(v24, v25))
  {
    v27 = swift_slowAlloc();
    v28 = swift_slowAlloc();
    v53[0] = v28;
    *(_DWORD *)v27 = 136446466;
    swift_bridgeObjectRetain();
    v54 = sub_1D2537880(v49, v48, v53);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2082;
    swift_bridgeObjectRetain();
    v54 = sub_1D2537880(v26, v23, v53);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v24, v25, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v28, -1, -1);
    MEMORY[0x1D823A5E0](v27, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v29 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v29);
  v31 = *(_QWORD *)(v47 + 64);
  v30 = *(_QWORD *)(v47 + 72);
  v14 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v14)
  {
    __break(1u);
    goto LABEL_30;
  }
  *(_QWORD *)(v47 + 72) = v32;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  v33 = *(_QWORD *)(v47 + 64);
  v14 = __OFADD__(v33, 1);
  v34 = v33 + 1;
  if (v14)
  {
LABEL_30:
    __break(1u);
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(_QWORD *)(v47 + 64) = v34;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  v35 = v52;
  ChronoMetadataStore.MutableRemoteExtensionStore.removeExtension(with:)(v35);
  if (v46)
  {

    sub_1D25599A4(v49, v48, v26, v23);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v36 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v36);
    v37 = *(_QWORD *)(v47 + 64);
    v14 = __OFSUB__(v37, 1);
    v38 = v37 - 1;
    if (!v14)
    {
      *(_QWORD *)(v47 + 64) = v38;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      goto LABEL_17;
    }
    goto LABEL_31;
  }

  sub_1D25596EC(v49, v48, v26, v23);
  swift_bridgeObjectRelease();
  if (v31)
  {
    swift_retain();
    v39 = sub_1D26CC084();
    v40 = sub_1D26CDCE0();
    if (os_log_type_enabled(v39, v40))
    {
      v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v41 = 134349056;
      v42 = *(os_unfair_lock_s **)(v6 + 16);
      swift_retain();
      os_unfair_lock_lock(v42);
      v50 = *(_QWORD *)(v47 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      v53[0] = v50;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v39, v40, "Outstanding transactions remaining: %{public}ld", v41, 0xCu);
      MEMORY[0x1D823A5E0](v41, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1D2559CF4(v47, v49, v48);
  }
  v43 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v43);
  v44 = *(_QWORD *)(v47 + 64);
  v14 = __OFSUB__(v44, 1);
  v45 = v44 - 1;
  if (!v14)
  {
    *(_QWORD *)(v47 + 64) = v45;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    objc_msgSend(v51, sel_invalidate);

    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_32:
  __break(1u);
  __break(1u);
}

void sub_1D255B110(uint64_t a1, unint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  os_unfair_lock_s *v45;
  uint64_t v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54[2];
  uint64_t v55;

  v6 = v3;
  v10 = a3[3];
  v11 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain();
  os_unfair_lock_lock(v11);
  v12 = a3[9];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
  {
    __break(1u);
    goto LABEL_25;
  }
  a3[9] = v14;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v10 + 16));
  v15 = a3[8];
  v16 = a3[9];
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
  swift_release();
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v54, "transaction_");
  BYTE5(v54[1]) = 0;
  HIWORD(v54[1]) = -5120;
  sub_1D26CDA04();
  sub_1D26CDA04();
  v55 = v17;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v52 = a1;
  v4 = v10;
  v5 = v54[0];
  v10 = v54[1];
  v53 = (id)sub_1D2559598();
  v54[0] = 0;
  v54[1] = 0xE000000000000000;
  v18 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](10);
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D2557230(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v6)
  {
    v50 = (uint64_t)a3;
    v51 = a2;
    swift_bridgeObjectRelease();
    if (qword_1ED962330 == -1)
      goto LABEL_7;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  v19 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v19);
  v20 = a3[9];
  v13 = __OFSUB__(v20, 1);
  v21 = v20 - 1;
  if (!v13)
  {
    a3[9] = v21;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v4 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    swift_willThrow();
LABEL_16:
    objc_msgSend(v53, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  swift_once();
LABEL_7:
  v22 = sub_1D26CC09C();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED977D20);
  v23 = v51;
  swift_bridgeObjectRetain_n();
  v24 = v10;
  swift_bridgeObjectRetain_n();
  v25 = sub_1D26CC084();
  v26 = sub_1D26CDCE0();
  v27 = v5;
  v28 = v4;
  if (os_log_type_enabled(v25, v26))
  {
    v29 = v26;
    v30 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v54[0] = v31;
    *(_DWORD *)v30 = 136446466;
    swift_bridgeObjectRetain();
    v55 = sub_1D2537880(v52, v51, v54);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    v55 = sub_1D2537880(v27, v24, v54);
    v23 = v51;
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v25, v29, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v31, -1, -1);
    MEMORY[0x1D823A5E0](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v32 = *(os_unfair_lock_s **)(v28 + 16);
  swift_retain();
  os_unfair_lock_lock(v32);
  v34 = *(_QWORD *)(v50 + 64);
  v33 = *(_QWORD *)(v50 + 72);
  v13 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v13)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(_QWORD *)(v50 + 72) = v35;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v28 + 16));
  v36 = *(_QWORD *)(v50 + 64);
  v13 = __OFADD__(v36, 1);
  v37 = v36 + 1;
  if (v13)
  {
LABEL_29:
    __break(1u);
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_QWORD *)(v50 + 64) = v37;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v28 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
  swift_release();
  ChronoMetadataStore.MutableRemoteExtensionStore.removeAllExtensions()();
  if (v38)
  {
    sub_1D25599A4(v52, v23, v27, v24);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v39 = *(os_unfair_lock_s **)(v28 + 16);
    swift_retain();
    os_unfair_lock_lock(v39);
    v40 = *(_QWORD *)(v50 + 64);
    v13 = __OFSUB__(v40, 1);
    v41 = v40 - 1;
    if (!v13)
    {
      *(_QWORD *)(v50 + 64) = v41;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v28 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  sub_1D25596EC(v52, v23, v27, v24);
  swift_bridgeObjectRelease();
  if (v34)
  {
    swift_retain();
    v42 = sub_1D26CC084();
    v43 = sub_1D26CDCE0();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v44 = 134349056;
      v45 = *(os_unfair_lock_s **)(v28 + 16);
      swift_retain();
      os_unfair_lock_lock(v45);
      v46 = *(_QWORD *)(v50 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
      swift_release();
      v54[0] = v46;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v42, v43, "Outstanding transactions remaining: %{public}ld", v44, 0xCu);
      MEMORY[0x1D823A5E0](v44, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1D2559CF4(v50, v52, v23);
  }
  v47 = *(os_unfair_lock_s **)(v28 + 16);
  swift_retain();
  os_unfair_lock_lock(v47);
  v48 = *(_QWORD *)(v50 + 64);
  v13 = __OFSUB__(v48, 1);
  v49 = v48 - 1;
  if (!v13)
  {
    *(_QWORD *)(v50 + 64) = v49;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v28 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v28 + 16));
    swift_release();
    objc_msgSend(v53, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_31:
  __break(1u);
}

void sub_1D255B864(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v11;
  unint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  os_unfair_lock_s *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  os_unfair_lock_s *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  uint8_t *v43;
  os_unfair_lock_s *v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  uint64_t v48;
  NSObject *log;
  os_log_type_t type;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  id v58;
  uint64_t v59[2];
  uint64_t v60;

  v7 = v6;
  v11 = a3;
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v15);
  v16 = *(_QWORD *)(v11 + 72);
  v17 = __OFADD__(v16, 1);
  v18 = v16 + 1;
  if (v17)
  {
    __break(1u);
    goto LABEL_25;
  }
  *(_QWORD *)(v11 + 72) = v18;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
  v19 = *(_QWORD *)(v11 + 64);
  v20 = *(_QWORD *)(v11 + 72);
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v54 = a4;
  v55 = a5;
  v56 = a6;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v59, "transaction_");
  BYTE5(v59[1]) = 0;
  HIWORD(v59[1]) = -5120;
  sub_1D26CDA04();
  sub_1D26CDA04();
  v60 = v21;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v57 = a1;
  v22 = v7;
  v23 = v11;
  v11 = v14;
  v7 = v59[0];
  v14 = v59[1];
  v58 = (id)sub_1D2559598();
  v59[0] = 0;
  v59[1] = 0xE000000000000000;
  v24 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](10);
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D2557230(v24);
  a5 = (uint64_t *)v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v52 = v23;
    v53 = a2;
    swift_bridgeObjectRelease();
    if (qword_1ED962330 == -1)
      goto LABEL_7;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  v25 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v25);
  v26 = *(_QWORD *)(v23 + 72);
  v17 = __OFSUB__(v26, 1);
  v27 = v26 - 1;
  if (!v17)
  {
    *(_QWORD *)(v23 + 72) = v27;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
    swift_release();
    swift_willThrow();
LABEL_16:
    objc_msgSend(v58, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  swift_once();
LABEL_7:
  v28 = sub_1D26CC09C();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v29 = sub_1D26CC084();
  type = sub_1D26CDCE0();
  v51 = v7;
  if (os_log_type_enabled(v29, type))
  {
    log = v29;
    v30 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v59[0] = v31;
    *(_DWORD *)v30 = 136446466;
    swift_bridgeObjectRetain();
    v60 = sub_1D2537880(v57, v53, v59);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    v60 = sub_1D2537880(v7, v14, v59);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, log, type, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v31, -1, -1);
    MEMORY[0x1D823A5E0](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v32 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v32);
  v34 = *(_QWORD *)(v52 + 64);
  v33 = *(_QWORD *)(v52 + 72);
  v17 = __OFSUB__(v33, 1);
  v35 = v33 - 1;
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(_QWORD *)(v52 + 72) = v35;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
  v36 = *(_QWORD *)(v52 + 64);
  v17 = __OFADD__(v36, 1);
  v37 = v36 + 1;
  if (v17)
  {
LABEL_29:
    __break(1u);
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_QWORD *)(v52 + 64) = v37;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  sub_1D25962F8(v54, v55, v56);
  if (a5)
  {
    sub_1D25599A4(v57, v53, v51, v14);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v38 = *(os_unfair_lock_s **)(v11 + 16);
    swift_retain();
    os_unfair_lock_lock(v38);
    v39 = *(_QWORD *)(v52 + 64);
    v17 = __OFSUB__(v39, 1);
    v40 = v39 - 1;
    if (!v17)
    {
      *(_QWORD *)(v52 + 64) = v40;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  sub_1D25596EC(v57, v53, v51, v14);
  swift_bridgeObjectRelease();
  if (v34)
  {
    swift_retain();
    v41 = sub_1D26CC084();
    v42 = sub_1D26CDCE0();
    if (os_log_type_enabled(v41, v42))
    {
      v43 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v43 = 134349056;
      v44 = *(os_unfair_lock_s **)(v11 + 16);
      swift_retain();
      os_unfair_lock_lock(v44);
      v45 = *(_QWORD *)(v52 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
      swift_release();
      v59[0] = v45;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v41, v42, "Outstanding transactions remaining: %{public}ld", v43, 0xCu);
      MEMORY[0x1D823A5E0](v43, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1D2559CF4(v52, v57, v53);
  }
  v46 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v46);
  v47 = *(_QWORD *)(v52 + 64);
  v17 = __OFSUB__(v47, 1);
  v48 = v47 - 1;
  if (!v17)
  {
    *(_QWORD *)(v52 + 64) = v48;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v11 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
    swift_release();
    objc_msgSend(v58, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_31:
  __break(1u);
}

void sub_1D255BFC8(uint64_t a1, unint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint8_t *v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61[2];
  uint64_t v62;

  v7 = v6;
  v13 = a3[3];
  v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v14);
  v15 = a3[9];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_26;
  }
  a3[9] = v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
  v18 = a3[8];
  v19 = a3[9];
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v57 = a5;
  v60 = a6;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v61, "transaction_");
  BYTE5(v61[1]) = 0;
  HIWORD(v61[1]) = -5120;
  sub_1D26CDA04();
  sub_1D26CDA04();
  v62 = v20;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v21 = v61[0];
  v22 = v61[1];
  v59 = (id)sub_1D2559598();
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  v23 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](10);
  sub_1D26CDA04();
  sub_1D26CDA04();
  v58 = a2;
  sub_1D2557230(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a5 = v7;
  if (!v7)
  {
    v54 = (uint64_t)a3;
    v55 = v13;
    v56 = v22;
    v53 = v21;
    v13 = a1;
    swift_bridgeObjectRelease();
    if (qword_1ED962330 == -1)
      goto LABEL_7;
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  v24 = *(os_unfair_lock_s **)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock(v24);
  v25 = a3[9];
  v16 = __OFSUB__(v25, 1);
  v26 = v25 - 1;
  if (!v16)
  {
    a3[9] = v26;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
    swift_release();
    swift_willThrow();
    v27 = v59;
LABEL_17:
    objc_msgSend(v27, sel_invalidate);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  swift_once();
LABEL_7:
  v28 = sub_1D26CC09C();
  __swift_project_value_buffer(v28, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v29 = sub_1D26CC084();
  v30 = sub_1D26CDCE0();
  v31 = a5;
  if (os_log_type_enabled(v29, v30))
  {
    v32 = swift_slowAlloc();
    v52 = swift_slowAlloc();
    v61[0] = v52;
    *(_DWORD *)v32 = 136446466;
    swift_bridgeObjectRetain();
    v62 = sub_1D2537880(v13, v58, v61);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v32 + 12) = 2082;
    swift_bridgeObjectRetain();
    v62 = sub_1D2537880(v53, v56, v61);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v29, v30, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v32, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v52, -1, -1);
    MEMORY[0x1D823A5E0](v32, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v33 = *(os_unfair_lock_s **)(v55 + 16);
  swift_retain();
  os_unfair_lock_lock(v33);
  v35 = *(_QWORD *)(v54 + 64);
  v34 = *(_QWORD *)(v54 + 72);
  v16 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_30;
  }
  *(_QWORD *)(v54 + 72) = v36;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v55 + 16));
  v37 = *(_QWORD *)(v54 + 64);
  v16 = __OFADD__(v37, 1);
  v38 = v37 + 1;
  if (v16)
  {
LABEL_30:
    __break(1u);
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(_QWORD *)(v54 + 64) = v38;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v55 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));
  swift_release();
  swift_bridgeObjectRetain();
  sub_1D26A68DC(v57, v60);
  if (v31)
  {
    swift_bridgeObjectRelease();
    sub_1D25599A4(v13, v58, v53, v56);
    v27 = v59;
    swift_bridgeObjectRelease();
    swift_willThrow();
    v39 = *(os_unfair_lock_s **)(v55 + 16);
    swift_retain();
    os_unfair_lock_lock(v39);
    v40 = *(_QWORD *)(v54 + 64);
    v16 = __OFSUB__(v40, 1);
    v41 = v40 - 1;
    if (!v16)
    {
      *(_QWORD *)(v54 + 64) = v41;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v55 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));
      swift_release();
      goto LABEL_17;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  sub_1D25596EC(v13, v58, v53, v56);
  swift_bridgeObjectRelease();
  if (v35)
  {
    v42 = v54;
    swift_retain();
    v43 = sub_1D26CC084();
    v44 = sub_1D26CDCE0();
    v45 = v55;
    if (os_log_type_enabled(v43, v44))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v46 = 134349056;
      v47 = *(os_unfair_lock_s **)(v55 + 16);
      swift_retain();
      os_unfair_lock_lock(v47);
      v48 = *(_QWORD *)(v54 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v55 + 16));
      swift_release();
      v61[0] = v48;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v43, v44, "Outstanding transactions remaining: %{public}ld", v46, 0xCu);
      MEMORY[0x1D823A5E0](v46, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    v42 = v54;
    sub_1D2559CF4(v54, v13, v58);
    v45 = v55;
  }
  v49 = *(os_unfair_lock_s **)(v45 + 16);
  swift_retain();
  os_unfair_lock_lock(v49);
  v50 = *(_QWORD *)(v42 + 64);
  v16 = __OFSUB__(v50, 1);
  v51 = v50 - 1;
  if (!v16)
  {
    *(_QWORD *)(v42 + 64) = v51;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v45 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v45 + 16));
    swift_release();
    objc_msgSend(v59, sel_invalidate);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_32:
  __break(1u);
  __break(1u);
}

void sub_1D255C7EC(uint64_t a1, unint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  os_unfair_lock_s *v39;
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  os_unfair_lock_s *v45;
  uint64_t v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57[2];
  uint64_t v58;

  v7 = v5;
  v13 = a3[3];
  v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v14);
  v15 = a3[9];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_26;
  }
  a3[9] = v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
  v18 = a3[8];
  v19 = a3[9];
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  v55 = a5;
  v56 = a4;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v57, "transaction_");
  BYTE5(v57[1]) = 0;
  HIWORD(v57[1]) = -5120;
  sub_1D26CDA04();
  sub_1D26CDA04();
  v58 = v20;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v52 = a1;
  v21 = v7;
  v6 = v13;
  v7 = v57[0];
  v13 = v57[1];
  v53 = (id)sub_1D2559598();
  v57[0] = 0;
  v57[1] = 0xE000000000000000;
  v22 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](10);
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D2557230(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v54 = v21;
  if (!v21)
  {
    v50 = (uint64_t)a3;
    v51 = a2;
    swift_bridgeObjectRelease();
    if (qword_1ED962330 == -1)
      goto LABEL_7;
    goto LABEL_28;
  }
  swift_bridgeObjectRelease();
  v23 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v23);
  v24 = a3[9];
  v16 = __OFSUB__(v24, 1);
  v25 = v24 - 1;
  if (!v16)
  {
    a3[9] = v25;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    swift_willThrow();
LABEL_17:
    objc_msgSend(v53, sel_invalidate);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
LABEL_27:
  __break(1u);
LABEL_28:
  swift_once();
LABEL_7:
  v26 = sub_1D26CC09C();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v27 = sub_1D26CC084();
  v28 = sub_1D26CDCE0();
  v29 = v7;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc();
    v57[0] = swift_slowAlloc();
    v31 = v57[0];
    *(_DWORD *)v30 = 136446466;
    swift_bridgeObjectRetain();
    v58 = sub_1D2537880(v52, v51, v57);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v30 + 12) = 2082;
    swift_bridgeObjectRetain();
    v58 = sub_1D2537880(v7, v13, v57);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v27, v28, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    v32 = v31;
    v29 = v7;
    MEMORY[0x1D823A5E0](v32, -1, -1);
    MEMORY[0x1D823A5E0](v30, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v33 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v33);
  v35 = *(_QWORD *)(v50 + 64);
  v34 = *(_QWORD *)(v50 + 72);
  v16 = __OFSUB__(v34, 1);
  v36 = v34 - 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_30;
  }
  *(_QWORD *)(v50 + 72) = v36;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  v37 = *(_QWORD *)(v50 + 64);
  v16 = __OFADD__(v37, 1);
  v38 = v37 + 1;
  if (v16)
  {
LABEL_30:
    __break(1u);
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  *(_QWORD *)(v50 + 64) = v38;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  swift_bridgeObjectRetain();
  sub_1D26B4818(v56, v55);
  if (v54)
  {
    swift_bridgeObjectRelease();
    sub_1D25599A4(v52, v51, v29, v13);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v39 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v39);
    v40 = *(_QWORD *)(v50 + 64);
    v16 = __OFSUB__(v40, 1);
    v41 = v40 - 1;
    if (!v16)
    {
      *(_QWORD *)(v50 + 64) = v41;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      goto LABEL_17;
    }
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  sub_1D25596EC(v52, v51, v29, v13);
  swift_bridgeObjectRelease();
  if (v35)
  {
    swift_retain();
    v42 = sub_1D26CC084();
    v43 = sub_1D26CDCE0();
    if (os_log_type_enabled(v42, v43))
    {
      v44 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v44 = 134349056;
      v45 = *(os_unfair_lock_s **)(v6 + 16);
      swift_retain();
      os_unfair_lock_lock(v45);
      v46 = *(_QWORD *)(v50 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      v57[0] = v46;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v42, v43, "Outstanding transactions remaining: %{public}ld", v44, 0xCu);
      MEMORY[0x1D823A5E0](v44, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1D2559CF4(v50, v52, v51);
  }
  v47 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v47);
  v48 = *(_QWORD *)(v50 + 64);
  v16 = __OFSUB__(v48, 1);
  v49 = v48 - 1;
  if (!v16)
  {
    *(_QWORD *)(v50 + 64) = v49;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    objc_msgSend(v53, sel_invalidate);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_32:
  __break(1u);
  __break(1u);
}

void sub_1D255CFBC(uint64_t a1, unint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  unint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  os_unfair_lock_s *v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  uint64_t v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  id v55;
  uint64_t v56[2];
  uint64_t v57;

  v8 = v5;
  v13 = a3[3];
  v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_bridgeObjectRetain();
  swift_retain();
  os_unfair_lock_lock(v14);
  v15 = a3[9];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_28;
  }
  a3[9] = v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
  v18 = a3[8];
  v19 = a3[9];
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v53 = a5;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  v55 = v8;
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v56, "transaction_");
  BYTE5(v56[1]) = 0;
  HIWORD(v56[1]) = -5120;
  sub_1D26CDA04();
  sub_1D26CDA04();
  v57 = v20;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v6 = v13;
  v7 = v56[0];
  v13 = v56[1];
  v52 = (id)sub_1D2559598();
  v56[0] = 0;
  v56[1] = 0xE000000000000000;
  v21 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](10);
  sub_1D26CDA04();
  sub_1D26CDA04();
  v51 = a1;
  sub_1D2557230(v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v55)
  {
    v49 = (uint64_t)a3;
    v50 = a2;
    swift_bridgeObjectRelease();
    if (qword_1ED962330 == -1)
      goto LABEL_7;
    goto LABEL_30;
  }
  swift_bridgeObjectRelease();
  v22 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v22);
  v23 = a3[9];
  v16 = __OFSUB__(v23, 1);
  v24 = v23 - 1;
  if (!v16)
  {
    a3[9] = v24;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    swift_willThrow();
LABEL_22:
    objc_msgSend(v52, sel_invalidate);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  swift_once();
LABEL_7:
  v25 = sub_1D26CC09C();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v26 = sub_1D26CC084();
  v27 = sub_1D26CDCE0();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = swift_slowAlloc();
    v29 = swift_slowAlloc();
    v56[0] = v29;
    *(_DWORD *)v28 = 136446466;
    swift_bridgeObjectRetain();
    v57 = sub_1D2537880(v51, v50, v56);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v28 + 12) = 2082;
    swift_bridgeObjectRetain();
    v57 = sub_1D2537880(v7, v13, v56);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v26, v27, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v28, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v29, -1, -1);
    MEMORY[0x1D823A5E0](v28, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v30 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v30);
  v31 = *(_QWORD *)(v49 + 72);
  v16 = __OFSUB__(v31, 1);
  v32 = v31 - 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_32;
  }
  v33 = *(_QWORD *)(v49 + 64);
  *(_QWORD *)(v49 + 72) = v32;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  v34 = *(_QWORD *)(v49 + 64);
  v16 = __OFADD__(v34, 1);
  v35 = v34 + 1;
  if (v16)
  {
LABEL_32:
    __break(1u);
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  *(_QWORD *)(v49 + 64) = v35;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  swift_bridgeObjectRetain();
  v36 = sub_1D2672F44(a4, v53);
  if (v55)
  {
    swift_bridgeObjectRelease();
    sub_1D25599A4(v51, v50, v7, v13);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v43 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v43);
    v44 = *(_QWORD *)(v49 + 64);
    v16 = __OFSUB__(v44, 1);
    v45 = v44 - 1;
    if (!v16)
    {
      *(_QWORD *)(v49 + 64) = v45;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      goto LABEL_22;
    }
    goto LABEL_33;
  }
  v37 = v36;
  swift_bridgeObjectRelease();
  if ((v37 & 1) != 0)
    sub_1D25596EC(v51, v50, v7, v13);
  else
    sub_1D25599A4(v51, v50, v7, v13);
  swift_bridgeObjectRelease();
  if (v33)
  {
    swift_retain();
    v38 = sub_1D26CC084();
    v39 = sub_1D26CDCE0();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v40 = 134349056;
      v41 = *(os_unfair_lock_s **)(v6 + 16);
      swift_retain();
      os_unfair_lock_lock(v41);
      v42 = *(_QWORD *)(v49 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
      swift_release();
      v56[0] = v42;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v38, v39, "Outstanding transactions remaining: %{public}ld", v40, 0xCu);
      MEMORY[0x1D823A5E0](v40, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1D2559CF4(v49, v51, v50);
  }
  v46 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v46);
  v47 = *(_QWORD *)(v49 + 64);
  v16 = __OFSUB__(v47, 1);
  v48 = v47 - 1;
  if (!v16)
  {
    *(_QWORD *)(v49 + 64) = v48;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v6 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    objc_msgSend(v52, sel_invalidate);
    swift_bridgeObjectRelease();
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_34:
  __break(1u);
}

void sub_1D255D788(uint64_t a1, unint64_t a2, _QWORD *a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  os_unfair_lock_s *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  os_unfair_lock_s *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_unfair_lock_s *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  os_unfair_lock_s *v48;
  uint64_t v49;
  os_unfair_lock_s *v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t type;
  uint64_t v54;
  unint64_t v55;
  void (*v56)(uint64_t);
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v61[2];
  uint64_t v62;

  v7 = v6;
  v12 = a3[3];
  v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  v14 = a3[9];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_25;
  }
  a3[9] = v16;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v12 + 16));
  v17 = a3[8];
  v18 = a3[9];
  v5 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v56 = a5;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v61, "transaction_");
  BYTE5(v61[1]) = 0;
  HIWORD(v61[1]) = -5120;
  sub_1D26CDA04();
  sub_1D26CDA04();
  v62 = v5;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v19 = v7;
  v7 = v12;
  v20 = v61[0];
  v12 = v61[1];
  v58 = (id)sub_1D2559598();
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  v21 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](10);
  sub_1D26CDA04();
  sub_1D26CDA04();
  v57 = a1;
  v22 = v19;
  sub_1D2557230(v21);
  v5 = (uint64_t)a3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v59 = v22;
  if (!v22)
  {
    v54 = (uint64_t)a3;
    v55 = a2;
    v5 = v20;
    swift_bridgeObjectRelease();
    if (qword_1ED962330 == -1)
      goto LABEL_7;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  v23 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v23);
  v24 = a3[9];
  v15 = __OFSUB__(v24, 1);
  v25 = v24 - 1;
  if (!v15)
  {
    a3[9] = v25;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v7 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
    swift_release();
    swift_willThrow();
LABEL_16:
    objc_msgSend(v58, sel_invalidate);
    swift_unknownObjectRelease();
    swift_release();
    return;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  swift_once();
LABEL_7:
  v26 = sub_1D26CC09C();
  __swift_project_value_buffer(v26, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain_n();
  v27 = v12;
  swift_bridgeObjectRetain_n();
  v28 = sub_1D26CC084();
  v29 = sub_1D26CDCE0();
  v30 = v7;
  if (os_log_type_enabled(v28, v29))
  {
    type = v29;
    v31 = swift_slowAlloc();
    v61[0] = swift_slowAlloc();
    v32 = v5;
    v33 = v61[0];
    *(_DWORD *)v31 = 136446466;
    swift_bridgeObjectRetain();
    v62 = sub_1D2537880(v57, v55, v61);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 12) = 2082;
    swift_bridgeObjectRetain();
    v62 = sub_1D2537880(v32, v27, v61);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v28, type, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    v34 = v33;
    v5 = v32;
    MEMORY[0x1D823A5E0](v34, -1, -1);
    MEMORY[0x1D823A5E0](v31, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v35 = *(os_unfair_lock_s **)(v30 + 16);
  swift_retain();
  os_unfair_lock_lock(v35);
  v37 = *(_QWORD *)(v54 + 64);
  v36 = *(_QWORD *)(v54 + 72);
  v15 = __OFSUB__(v36, 1);
  v38 = v36 - 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(_QWORD *)(v54 + 72) = v38;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v30 + 16));
  v39 = *(_QWORD *)(v54 + 64);
  v15 = __OFADD__(v39, 1);
  v40 = v39 + 1;
  if (v15)
  {
LABEL_29:
    __break(1u);
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_QWORD *)(v54 + 64) = v40;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v30 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
  swift_release();
  v56(a4);
  if (v59)
  {
    sub_1D25599A4(v57, v55, v5, v27);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v41 = *(os_unfair_lock_s **)(v30 + 16);
    swift_retain();
    os_unfair_lock_lock(v41);
    v42 = *(_QWORD *)(v54 + 64);
    v15 = __OFSUB__(v42, 1);
    v43 = v42 - 1;
    if (!v15)
    {
      *(_QWORD *)(v54 + 64) = v43;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v30 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  sub_1D25596EC(v57, v55, v5, v27);
  swift_bridgeObjectRelease();
  if (v37)
  {
    v44 = v54;
    swift_retain();
    v45 = sub_1D26CC084();
    v46 = sub_1D26CDCE0();
    if (os_log_type_enabled(v45, v46))
    {
      v47 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v47 = 134349056;
      v48 = *(os_unfair_lock_s **)(v30 + 16);
      swift_retain();
      os_unfair_lock_lock(v48);
      v49 = *(_QWORD *)(v54 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
      swift_release();
      v61[0] = v49;
      v44 = v54;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v45, v46, "Outstanding transactions remaining: %{public}ld", v47, 0xCu);
      MEMORY[0x1D823A5E0](v47, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    v44 = v54;
    sub_1D2559CF4(v54, v57, v55);
  }
  v50 = *(os_unfair_lock_s **)(v30 + 16);
  swift_retain();
  os_unfair_lock_lock(v50);
  v51 = *(_QWORD *)(v44 + 64);
  v15 = __OFSUB__(v51, 1);
  v52 = v51 - 1;
  if (!v15)
  {
    *(_QWORD *)(v44 + 64) = v52;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v30 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v30 + 16));
    swift_release();
    objc_msgSend(v58, sel_invalidate);
    swift_release();
    swift_unknownObjectRelease();
    return;
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1D255DF1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D255A070(a1, v1);
}

uint64_t sub_1D255DF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D255DF6C(uint64_t a1, unint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint64_t v32;
  uint64_t v33;
  os_log_type_t v34;
  uint64_t v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  os_unfair_lock_s *v43;
  uint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  uint8_t *v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  os_unfair_lock_s *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61[2];
  uint64_t v62;

  v7 = v6;
  v10 = a3;
  v13 = *(_QWORD *)(a3 + 24);
  v14 = *(os_unfair_lock_s **)(v13 + 16);
  swift_retain();
  os_unfair_lock_lock(v14);
  v15 = *(_QWORD *)(v10 + 72);
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_25;
  }
  *(_QWORD *)(v10 + 72) = v17;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v13 + 16));
  v18 = *(_QWORD *)(v10 + 64);
  v19 = *(_QWORD *)(v10 + 72);
  v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v56 = a6;
  v57 = a4;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
  swift_release();
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v61, "transaction_");
  BYTE5(v61[1]) = 0;
  HIWORD(v61[1]) = -5120;
  sub_1D26CDA04();
  sub_1D26CDA04();
  v62 = v20;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v21 = v7;
  v58 = a1;
  v22 = v10;
  v10 = v13;
  v7 = v61[0];
  v13 = v61[1];
  v59 = (id)sub_1D2559598();
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  v23 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](10);
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D2557230(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v60 = v21;
  if (!v21)
  {
    v54 = v22;
    v55 = a2;
    swift_bridgeObjectRelease();
    if (qword_1ED962330 == -1)
      goto LABEL_7;
    goto LABEL_27;
  }
  swift_bridgeObjectRelease();
  v24 = *(os_unfair_lock_s **)(v10 + 16);
  swift_retain();
  os_unfair_lock_lock(v24);
  v25 = *(_QWORD *)(v22 + 72);
  v16 = __OFSUB__(v25, 1);
  v26 = v25 - 1;
  if (!v16)
  {
    *(_QWORD *)(v22 + 72) = v26;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v10 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
    swift_release();
    swift_willThrow();
LABEL_16:
    objc_msgSend(v59, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_26:
  __break(1u);
LABEL_27:
  swift_once();
LABEL_7:
  v27 = sub_1D26CC09C();
  __swift_project_value_buffer(v27, (uint64_t)qword_1ED977D20);
  v28 = v55;
  swift_bridgeObjectRetain_n();
  v29 = v13;
  swift_bridgeObjectRetain_n();
  v30 = sub_1D26CC084();
  v31 = sub_1D26CDCE0();
  v32 = v7;
  v33 = v10;
  if (os_log_type_enabled(v30, v31))
  {
    v34 = v31;
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v61[0] = v36;
    *(_DWORD *)v35 = 136446466;
    swift_bridgeObjectRetain();
    v62 = sub_1D2537880(v58, v55, v61);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2082;
    swift_bridgeObjectRetain();
    v62 = sub_1D2537880(v32, v29, v61);
    v28 = v55;
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v30, v34, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v36, -1, -1);
    MEMORY[0x1D823A5E0](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v37 = *(os_unfair_lock_s **)(v33 + 16);
  swift_retain();
  os_unfair_lock_lock(v37);
  v39 = *(_QWORD *)(v54 + 64);
  v38 = *(_QWORD *)(v54 + 72);
  v16 = __OFSUB__(v38, 1);
  v40 = v38 - 1;
  if (v16)
  {
    __break(1u);
    goto LABEL_29;
  }
  *(_QWORD *)(v54 + 72) = v40;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v33 + 16));
  v41 = *(_QWORD *)(v54 + 64);
  v16 = __OFADD__(v41, 1);
  v42 = v41 + 1;
  if (v16)
  {
LABEL_29:
    __break(1u);
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  *(_QWORD *)(v54 + 64) = v42;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v33 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
  swift_release();
  v57(v56);
  if (v60)
  {
    sub_1D25599A4(v58, v28, v32, v29);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v43 = *(os_unfair_lock_s **)(v33 + 16);
    swift_retain();
    os_unfair_lock_lock(v43);
    v44 = *(_QWORD *)(v54 + 64);
    v16 = __OFSUB__(v44, 1);
    v45 = v44 - 1;
    if (!v16)
    {
      *(_QWORD *)(v54 + 64) = v45;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v33 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
      swift_release();
      goto LABEL_16;
    }
    goto LABEL_30;
  }
  sub_1D25596EC(v58, v28, v32, v29);
  swift_bridgeObjectRelease();
  if (v39)
  {
    swift_retain();
    v46 = sub_1D26CC084();
    v47 = sub_1D26CDCE0();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v48 = 134349056;
      v49 = *(os_unfair_lock_s **)(v33 + 16);
      swift_retain();
      os_unfair_lock_lock(v49);
      v50 = *(_QWORD *)(v54 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
      swift_release();
      v61[0] = v50;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v46, v47, "Outstanding transactions remaining: %{public}ld", v48, 0xCu);
      MEMORY[0x1D823A5E0](v48, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1D2559CF4(v54, v58, v28);
  }
  v51 = *(os_unfair_lock_s **)(v33 + 16);
  swift_retain();
  os_unfair_lock_lock(v51);
  v52 = *(_QWORD *)(v54 + 64);
  v16 = __OFSUB__(v52, 1);
  v53 = v52 - 1;
  if (!v16)
  {
    *(_QWORD *)(v54 + 64) = v53;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v33 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
    swift_release();
    objc_msgSend(v59, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_31:
  __break(1u);
}

void sub_1D255E6D4(uint64_t a1, unint64_t a2, unint64_t a3, unsigned int a4, uint64_t a5, unint64_t *a6, uint64_t a7, unsigned int a8)
{
  uint64_t v8;
  uint64_t v9;
  unint64_t v14;
  unint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  os_unfair_lock_s *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  os_unfair_lock_s *v47;
  uint64_t v48;
  os_unfair_lock_s *v49;
  uint64_t v50;
  uint64_t v51;
  os_unfair_lock_s *v52;
  uint64_t v53;
  uint64_t v54;
  NSObject *log;
  os_log_type_t type;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t *v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;
  uint64_t v65;
  id v66;
  uint64_t v67[2];
  uint64_t v68;

  v9 = v8;
  v14 = a3;
  v17 = *(_QWORD *)(a3 + 24);
  v18 = *(os_unfair_lock_s **)(v17 + 16);
  swift_retain();
  os_unfair_lock_lock(v18);
  v19 = *(_QWORD *)(v14 + 72);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_27;
  }
  v63 = a5;
  *(_QWORD *)(v14 + 72) = v21;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v17 + 16));
  v22 = *(_QWORD *)(v14 + 64);
  v23 = *(_QWORD *)(v14 + 72);
  v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v60 = a6;
  v61 = a7;
  v62 = a8;
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 16));
  swift_release();
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v67, "transaction_");
  BYTE5(v67[1]) = 0;
  HIWORD(v67[1]) = -5120;
  sub_1D26CDA04();
  sub_1D26CDA04();
  v68 = v24;
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v25 = a2;
  v26 = v9;
  v65 = a1;
  v27 = v14;
  v14 = v17;
  v9 = v67[0];
  v17 = v67[1];
  v28 = v25;
  v66 = (id)sub_1D2559598();
  v67[0] = 0;
  v67[1] = 0xE000000000000000;
  v29 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](10);
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D2557230(v29);
  a7 = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v26)
  {
    v58 = v27;
    v59 = v28;
    swift_bridgeObjectRelease();
    if (qword_1ED962330 == -1)
      goto LABEL_7;
    goto LABEL_29;
  }
  swift_bridgeObjectRelease();
  v30 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v30);
  v31 = *(_QWORD *)(v27 + 72);
  v20 = __OFSUB__(v31, 1);
  v32 = v31 - 1;
  if (!v20)
  {
    *(_QWORD *)(v27 + 72) = v32;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
    swift_release();
    swift_willThrow();
LABEL_21:
    objc_msgSend(v66, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_28:
  __break(1u);
LABEL_29:
  swift_once();
LABEL_7:
  v33 = sub_1D26CC09C();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  v34 = sub_1D26CC084();
  type = sub_1D26CDCE0();
  v57 = v9;
  if (os_log_type_enabled(v34, type))
  {
    log = v34;
    v35 = swift_slowAlloc();
    v36 = swift_slowAlloc();
    v67[0] = v36;
    *(_DWORD *)v35 = 136446466;
    swift_bridgeObjectRetain();
    v68 = sub_1D2537880(v65, v59, v67);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2082;
    swift_bridgeObjectRetain();
    v68 = sub_1D2537880(v9, v17, v67);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, log, type, "Beginning db savepoint [%{public}s]: %{public}s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v36, -1, -1);
    MEMORY[0x1D823A5E0](v35, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  v37 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v37);
  v38 = *(_QWORD *)(v58 + 72);
  v20 = __OFSUB__(v38, 1);
  v39 = v38 - 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_31;
  }
  v40 = *(_QWORD *)(v58 + 64);
  *(_QWORD *)(v58 + 72) = v39;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
  v41 = *(_QWORD *)(v58 + 64);
  v20 = __OFADD__(v41, 1);
  v42 = v41 + 1;
  if (v20)
  {
LABEL_31:
    __break(1u);
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  *(_QWORD *)(v58 + 64) = v42;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  swift_release();
  v43 = sub_1D255A0D0(a4, v63, v60, v61, v62);
  if (a7)
  {
    sub_1D25599A4(v65, v59, v57, v17);
    swift_bridgeObjectRelease();
    swift_willThrow();
    v49 = *(os_unfair_lock_s **)(v14 + 16);
    swift_retain();
    os_unfair_lock_lock(v49);
    v50 = *(_QWORD *)(v58 + 64);
    v20 = __OFSUB__(v50, 1);
    v51 = v50 - 1;
    if (!v20)
    {
      *(_QWORD *)(v58 + 64) = v51;
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
      swift_release();
      goto LABEL_21;
    }
    goto LABEL_32;
  }
  if ((v43 & 1) != 0)
    sub_1D25596EC(v65, v59, v57, v17);
  else
    sub_1D25599A4(v65, v59, v57, v17);
  swift_bridgeObjectRelease();
  if (v40)
  {
    swift_retain();
    v44 = sub_1D26CC084();
    v45 = sub_1D26CDCE0();
    if (os_log_type_enabled(v44, v45))
    {
      v46 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v46 = 134349056;
      v47 = *(os_unfair_lock_s **)(v14 + 16);
      swift_retain();
      os_unfair_lock_lock(v47);
      v48 = *(_QWORD *)(v58 + 64);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
      swift_release();
      v67[0] = v48;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v44, v45, "Outstanding transactions remaining: %{public}ld", v46, 0xCu);
      MEMORY[0x1D823A5E0](v46, -1, -1);

    }
    else
    {

      swift_release();
    }
  }
  else
  {
    sub_1D2559CF4(v58, v65, v59);
  }
  v52 = *(os_unfair_lock_s **)(v14 + 16);
  swift_retain();
  os_unfair_lock_lock(v52);
  v53 = *(_QWORD *)(v58 + 64);
  v20 = __OFSUB__(v53, 1);
  v54 = v53 - 1;
  if (!v20)
  {
    *(_QWORD *)(v58 + 64) = v54;
    os_unfair_lock_assert_owner(*(const os_unfair_lock **)(v14 + 16));
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
    swift_release();
    objc_msgSend(v66, sel_invalidate);
    swift_unknownObjectRelease();
    return;
  }
LABEL_33:
  __break(1u);
}

uint64_t sub_1D255EE7C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t result;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  id v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  char *v30;
  uint64_t v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(_QWORD *);
  _BYTE *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;

  v46 = a5;
  v48 = a4;
  v45 = a2;
  v50 = sub_1D26CB880();
  v7 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v44 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v10 = MEMORY[0x1E0C80A78](v9);
  v47 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v43 - v12;
  v14 = type metadata accessor for SQLDatabase.Storage();
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v43 - v18;
  sub_1D255F230(a1, (uint64_t)&v43 - v18);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
  v22 = v21(v19, 1, v20);
  result = sub_1D255F274((uint64_t)v19);
  v49 = a3;
  if (v22 != 1 || a3 == 0)
  {
    v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v25(v13, 1, 1, v50);
    sub_1D255F230(a1, (uint64_t)v17);
    v26 = a1;
    if (v21(v17, 1, v20) == 1)
    {
      v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01878]), sel_initWithInMemoryDatabase);
    }
    else
    {
      v28 = *(_QWORD *)&v17[*(int *)(v20 + 48)];
      v29 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v30 = v44;
      v31 = v50;
      v29(v44, v17, v50);
      v32 = objc_allocWithZone(MEMORY[0x1E0D01878]);
      v33 = (void *)sub_1D26CB7D8();
      v34 = v28;
      v26 = a1;
      v27 = objc_msgSend(v32, sel_initWithFileURL_dataProtectionClass_, v33, v34);

      sub_1D253703C((uint64_t)v13, (uint64_t *)&unk_1ED96FC50);
      v29(v13, v30, v31);
      v25(v13, 0, 1, v31);
    }
    v35 = (uint64_t)v13;
    v37 = v47;
    v36 = v48;
    if (v27)
    {
      sub_1D255F2F4((uint64_t)v13, v47);
      if (v36)
      {
        v38 = swift_allocObject();
        v39 = v46;
        *(_QWORD *)(v38 + 16) = v36;
        *(_QWORD *)(v38 + 24) = v39;
        v40 = sub_1D255F360;
      }
      else
      {
        v38 = 0;
        v40 = (uint64_t (*)(_QWORD *))CGSizeMake;
      }
      v42 = swift_allocObject();
      *(_QWORD *)(v42 + 16) = v40;
      *(_QWORD *)(v42 + 24) = v38;
      type metadata accessor for SQLDatabase();
      swift_allocObject();
      v13 = (char *)sub_1D25578FC(v27, v37, v45, v49, (uint64_t)sub_1D25539E4, v42);
      sub_1D255F274(v26);
      sub_1D253703C(v35, (uint64_t *)&unk_1ED96FC50);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1D255F2B0();
      swift_allocError();
      *v41 = 2;
      swift_willThrow();
      sub_1D25495F4(v36);
      sub_1D255F274(v26);
      sub_1D253703C((uint64_t)v13, (uint64_t *)&unk_1ED96FC50);
    }
    return (uint64_t)v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D255F230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SQLDatabase.Storage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D255F274(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SQLDatabase.Storage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D255F2B0()
{
  unint64_t result;

  result = qword_1EFC826B8;
  if (!qword_1EFC826B8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D147C, &type metadata for SQLiteError);
    atomic_store(result, (unint64_t *)&qword_1EFC826B8);
  }
  return result;
}

uint64_t sub_1D255F2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D255F33C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D255F360(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_1D255F384(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1D255F3AC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D255F3D0(void *a1)
{
  uint64_t v1;

  return sub_1D25594BC(a1, v1);
}

uint64_t getEnumTagSinglePayload for ReloadState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLiteError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D255F4B4 + 4 * byte_1D26D1385[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D255F4E8 + 4 * byte_1D26D1380[v4]))();
}

uint64_t sub_1D255F4E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D255F4F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D255F4F8);
  return result;
}

uint64_t sub_1D255F504(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D255F50CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D255F510(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D255F518(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SQLiteError()
{
  return &type metadata for SQLiteError;
}

unint64_t sub_1D255F538()
{
  unint64_t result;

  result = qword_1EFC826C0;
  if (!qword_1EFC826C0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D1454, &type metadata for SQLiteError);
    atomic_store(result, (unint64_t *)&qword_1EFC826C0);
  }
  return result;
}

uint64_t WidgetViewSecurityPolicyResult.description.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v6 = 0x6C6F686563616C50;
  if (EnumCaseMultiPayload != 1)
    v6 = 0x7974706D45;
  if (EnumCaseMultiPayload)
    v7 = v6;
  else
    v7 = 1702259020;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v7;
}

uint64_t WidgetViewSecurityPolicyResult.entryData.getter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, a1);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v9, v2);
    v10 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 32))(v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return v10;
}

uint64_t DefaultWidgetViewSecurityPolicy.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DefaultWidgetViewSecurityPolicy.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D255F7A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  NSObject *v58;
  os_log_type_t v59;
  _BOOL4 v60;
  uint8_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  char *v82;
  unint64_t v83;
  uint64_t v84;
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_QWORD, _QWORD);
  char v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  NSObject *v93;
  os_log_type_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  os_unfair_lock_s *v107;
  char v108;
  char v109;
  _QWORD *v110;
  unint64_t v111;
  unint64_t v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  char *v121;
  char *v122;
  char v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  NSObject *v127;
  os_log_type_t v128;
  uint8_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  char *v142;
  _QWORD *v143;
  unint64_t v144;
  unint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  int v149;
  NSObject *v150;
  os_log_type_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t (*v156)(uint64_t, uint64_t);
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  unsigned int (*v165)(char *, uint64_t, void (*)(_QWORD, _QWORD));
  void (*v166)(_QWORD, _QWORD);
  uint64_t v167;
  uint64_t v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  void (*v175)(char *, uint64_t);
  _QWORD *v176;
  uint64_t v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  _QWORD *v182;
  const char *v183;
  unint64_t v184;
  unint64_t v185;
  _QWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  char *v192;
  uint64_t v193;
  void (*v194)(char *, char *, uint64_t);
  char *v195;
  uint64_t v196;
  void (*v197)(_QWORD, _QWORD);
  _QWORD *v198;
  unint64_t v199;
  unint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  unint64_t v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  NSObject *v208;
  os_log_type_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  char *v217;
  void (*v218)(char *, char *, void (*)(_QWORD, _QWORD));
  uint64_t v219;
  unint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  NSObject *v225;
  os_log_type_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  uint64_t v232;
  char *v233;
  void (*v234)(char *, char *, void (*)(_QWORD, _QWORD));
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t *v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  NSObject *v247;
  os_log_type_t v248;
  uint8_t *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  void (*v256)(char *, uint64_t);
  uint64_t v257;
  _QWORD *v259;
  unint64_t v260;
  unint64_t v261;
  _QWORD *v262;
  uint64_t v263;
  char *v264;
  char *v265;
  char *v266;
  uint64_t *v267;
  char *v268;
  char *v269;
  char *v270;
  char *v271;
  char *v272;
  int v273;
  char *v274;
  char *v275;
  uint8_t *v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  char *v284;
  uint64_t v285;
  unint64_t v286;
  char *v287;
  char *v288;
  char *v289;
  char *v290;
  char *v291;
  uint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  void (*v301)(_QWORD, _QWORD);
  char *v302;
  uint64_t v303;
  void (*v304)(char *, uint64_t);
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  unsigned __int8 v309;
  _QWORD *v310;
  _QWORD *v311;
  uint64_t v312;
  uint64_t v313;

  v281 = a5;
  v282 = a3;
  v292 = type metadata accessor for WidgetViewSecurityPolicyResult(0, a2, a3, a4);
  v283 = *(_QWORD *)(v292 - 8);
  v7 = MEMORY[0x1E0C80A78](v292);
  v267 = (uint64_t *)((char *)&v263 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v291 = (char *)&v263 - v9;
  v280 = sub_1D26CD488();
  v279 = *(_QWORD *)(v280 - 8);
  v10 = MEMORY[0x1E0C80A78](v280);
  v290 = (char *)&v263 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v289 = (char *)&v263 - v13;
  v300 = *(_QWORD *)(a2 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v275 = (char *)&v263 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v266 = (char *)&v263 - v17;
  MEMORY[0x1E0C80A78](v16);
  v265 = (char *)&v263 - v18;
  v301 = (void (*)(_QWORD, _QWORD))a2;
  v295 = sub_1D26CDF38();
  v298 = *(_QWORD *)(v295 - 8);
  v19 = MEMORY[0x1E0C80A78](v295);
  v274 = (char *)&v263 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v288 = (char *)&v263 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v269 = (char *)&v263 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v270 = (char *)&v263 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v268 = (char *)&v263 - v28;
  MEMORY[0x1E0C80A78](v27);
  v302 = (char *)&v263 - v29;
  v297 = sub_1D26CC438();
  v285 = *(_QWORD *)(v297 - 8);
  v30 = MEMORY[0x1E0C80A78](v297);
  v299 = (char *)&v263 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v296 = (char *)&v263 - v32;
  v303 = sub_1D26CC7A4();
  v286 = *(_QWORD *)(v303 - 8);
  v33 = MEMORY[0x1E0C80A78](v303);
  v294 = (char *)&v263 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = MEMORY[0x1E0C80A78](v33);
  v277 = (char *)&v263 - v36;
  MEMORY[0x1E0C80A78](v35);
  v293 = (char *)&v263 - v37;
  v38 = sub_1D26CC09C();
  v39 = *(void (**)(char *, uint64_t))(v38 - 8);
  v40 = MEMORY[0x1E0C80A78](v38);
  v42 = (char *)&v263 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = MEMORY[0x1E0C80A78](v40);
  v45 = (char *)&v263 - v44;
  v46 = MEMORY[0x1E0C80A78](v43);
  v271 = (char *)&v263 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v287 = (char *)&v263 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v264 = (char *)&v263 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v284 = (char *)&v263 - v53;
  MEMORY[0x1E0C80A78](v52);
  v55 = (char *)&v263 - v54;
  v56 = a1[3];
  v57 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v56);
  (*(void (**)(uint64_t, uint64_t))(v57 + 24))(v56, v57);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v311);
  v58 = sub_1D26CC084();
  v59 = sub_1D26CDCE0();
  v60 = os_log_type_enabled(v58, v59);
  v305 = v38;
  v278 = v42;
  v272 = v45;
  if (v60)
  {
    v61 = (uint8_t *)swift_slowAlloc();
    v62 = swift_slowAlloc();
    v304 = v39;
    v63 = v62;
    v308 = v62;
    *(_DWORD *)v61 = 136315138;
    v276 = v61 + 4;
    v64 = v312;
    v65 = v313;
    __swift_project_boxed_opaque_existential_0(&v311, v312);
    v66 = (*(uint64_t (**)(uint64_t, uint64_t))(v65 + 32))(v64, v65);
    v310 = (_QWORD *)sub_1D2537880(v66, v67, &v308);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
    _os_log_impl(&dword_1D2531000, v58, v59, "[%s] viewEvaluate: begin", v61, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v63, -1, -1);
    MEMORY[0x1D823A5E0](v61, -1, -1);

    v68 = v305;
    v69 = (void (*)(char *, uint64_t))*((_QWORD *)v304 + 1);
    v70 = v55;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);

    v69 = (void (*)(char *, uint64_t))*((_QWORD *)v39 + 1);
    v70 = v55;
    v68 = v38;
  }
  v304 = v69;
  v69(v70, v68);
  v310 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v71 = a1[3];
  v72 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v71);
  v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 48))(v71, v72);
  v74 = a1[3];
  v75 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v74);
  LODWORD(v276) = (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 56))(v74, v75);
  v76 = a1[3];
  v77 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v76);
  v78 = v293;
  (*(void (**)(uint64_t, uint64_t))(v77 + 40))(v76, v77);
  v79 = v296;
  sub_1D26CC4F8();
  v80 = *(void (**)(char *, uint64_t))(v286 + 8);
  v81 = v303;
  v80(v78, v303);
  v82 = v299;
  sub_1D26CC42C();
  v83 = sub_1D256283C();
  v84 = v297;
  v286 = v83;
  LOBYTE(v76) = sub_1D26CDFBC();
  v85 = *(void (**)(char *, uint64_t))(v285 + 8);
  v85(v82, v84);
  v85(v79, v84);
  v86 = a1[3];
  v87 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v86);
  (*(void (**)(uint64_t, uint64_t))(v87 + 40))(v86, v87);
  LOBYTE(v85) = sub_1D26CC51C();
  v299 = (char *)v80;
  v80(v78, v81);
  v273 = v73;
  v88 = v301;
  v89 = sub_1D2562F94(v85 & 1, a1, &v310, v76 & 1, v73 & 1, v276 & 1);
  v90 = a1[3];
  v91 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v90);
  v92 = v284;
  (*(void (**)(uint64_t, uint64_t))(v91 + 24))(v90, v91);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v311);
  v93 = sub_1D26CC084();
  v94 = sub_1D26CDCE0();
  if (os_log_type_enabled(v93, v94))
  {
    v95 = swift_slowAlloc();
    v96 = swift_slowAlloc();
    v308 = v96;
    *(_DWORD *)v95 = 136315394;
    v97 = v312;
    v98 = v313;
    __swift_project_boxed_opaque_existential_0(&v311, v312);
    v99 = (*(uint64_t (**)(uint64_t, uint64_t))(v98 + 32))(v97, v98);
    v307 = sub_1D2537880(v99, v100, &v308);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
    *(_WORD *)(v95 + 12) = 1024;
    LODWORD(v307) = v89 & 1;
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v93, v94, "[%s] viewEvaluate: securityAllowsLiveContent = %{BOOL}d", (uint8_t *)v95, 0x12u);
    swift_arrayDestroy();
    v101 = v96;
    v88 = v301;
    MEMORY[0x1D823A5E0](v101, -1, -1);
    MEMORY[0x1D823A5E0](v95, -1, -1);

    v102 = v284;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);

    v102 = v92;
  }
  v103 = v305;
  v304(v102, v305);
  v104 = v295;
  v105 = v300;
  if (qword_1ED96F1C8 != -1)
    swift_once();
  v106 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 12) + 88);
  v107 = *(os_unfair_lock_s **)(v106 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v107);
  v108 = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v106 + 16));
  swift_release();
  swift_release();
  v109 = v89;
  if ((v108 & 1) != 0)
  {
    v110 = v310;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v110 = sub_1D25615EC(0, v110[2] + 1, 1, v110);
    v112 = v110[2];
    v111 = v110[3];
    if (v112 >= v111 >> 1)
      v110 = sub_1D25615EC((_QWORD *)(v111 > 1), v112 + 1, 1, v110);
    v110[2] = v112 + 1;
    v113 = &v110[2 * v112];
    v113[4] = 0xD000000000000049;
    v113[5] = 0x80000001D26DED70;
    v310 = v110;
    v109 = 1;
  }
  v309 = v89 & ~v108 & 1;
  v284 = *(char **)(v105 + 56);
  ((void (*)(char *, uint64_t, uint64_t, void (*)(_QWORD, _QWORD)))v284)(v302, 1, 1, v88);
  if ((v109 & 1) == 0 && ((v273 ^ 1) & 1) == 0)
  {
    v114 = a1[3];
    v115 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v114);
    v116 = v277;
    (*(void (**)(uint64_t, uint64_t))(v115 + 40))(v114, v115);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC826C8);
    v117 = swift_allocObject();
    *(_OWORD *)(v117 + 16) = xmmword_1D26D1280;
    sub_1D26CC42C();
    v311 = (_QWORD *)v117;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
    sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
    sub_1D26CDFE0();
    sub_1D26CC504();
    v118 = a1[3];
    v119 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v118);
    v120 = v268;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 88))(v116, v118, v119);
    v121 = v302;
    (*(void (**)(char *, char *, uint64_t))(v298 + 40))(v302, v120, v104);
    if ((*(unsigned int (**)(char *, uint64_t, void (*)(_QWORD, _QWORD)))(v105 + 48))(v121, 1, v88)|| (v122 = v265, (*(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v105 + 16))(v265, v302, v88), v123 = (*(uint64_t (**)(void (*)(_QWORD, _QWORD)))(v282 + 40))(v88), (*(void (**)(char *, _QWORD))(v105 + 8))(v122, v88), (v123 & 1) == 0))
    {
      ((void (*)(char *, uint64_t))v299)(v277, v303);
    }
    else
    {
      v124 = a1[3];
      v125 = a1[4];
      __swift_project_boxed_opaque_existential_0(a1, v124);
      v126 = v264;
      (*(void (**)(uint64_t, uint64_t))(v125 + 24))(v124, v125);
      sub_1D2538510((uint64_t)a1, (uint64_t)&v311);
      v127 = sub_1D26CC084();
      v128 = sub_1D26CDCE0();
      if (os_log_type_enabled(v127, v128))
      {
        v129 = (uint8_t *)swift_slowAlloc();
        v130 = swift_slowAlloc();
        v308 = v130;
        *(_DWORD *)v129 = 136315138;
        v131 = v312;
        v132 = v313;
        __swift_project_boxed_opaque_existential_0(&v311, v312);
        v133 = (*(uint64_t (**)(uint64_t, uint64_t))(v132 + 32))(v131, v132);
        v307 = sub_1D2537880(v133, v134, &v308);
        v88 = v301;
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
        _os_log_impl(&dword_1D2531000, v127, v128, "[%s] viewEvaluate: liveContentContainsPrivacyRedactions = true", v129, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v130, -1, -1);
        MEMORY[0x1D823A5E0](v129, -1, -1);

        v135 = v264;
        v136 = v305;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);

        v135 = v126;
        v136 = v103;
      }
      v304(v135, v136);
      v259 = v310;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v259 = sub_1D25615EC(0, v259[2] + 1, 1, v259);
      v261 = v259[2];
      v260 = v259[3];
      if (v261 >= v260 >> 1)
        v259 = sub_1D25615EC((_QWORD *)(v260 > 1), v261 + 1, 1, v259);
      v259[2] = v261 + 1;
      v262 = &v259[2 * v261];
      v262[4] = 0xD000000000000021;
      v262[5] = 0x80000001D26DED40;
      v310 = v259;
      ((void (*)(char *, uint64_t))v299)(v277, v303);
      v309 = 1;
      v104 = v295;
    }
  }
  v137 = a1[3];
  v138 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v137);
  (*(void (**)(uint64_t, uint64_t))(v138 + 80))(v137, v138);
  v139 = a1[3];
  v140 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v139);
  (*(void (**)(uint64_t, uint64_t))(v140 + 72))(v139, v140);
  v141 = sub_1D26CD470();
  v142 = v287;
  if ((v141 & 1) == 0)
  {
    v143 = v310;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v143 = sub_1D25615EC(0, v143[2] + 1, 1, v143);
    v145 = v143[2];
    v144 = v143[3];
    if (v145 >= v144 >> 1)
      v143 = sub_1D25615EC((_QWORD *)(v144 > 1), v145 + 1, 1, v143);
    v143[2] = v145 + 1;
    v146 = &v143[2 * v145];
    v146[4] = 0xD000000000000042;
    v146[5] = 0x80000001D26DEC50;
    v310 = v143;
    v309 = 0;
  }
  v147 = a1[3];
  v148 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v147);
  (*(void (**)(uint64_t, uint64_t))(v148 + 24))(v147, v148);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v311);
  v149 = v309;
  v150 = sub_1D26CC084();
  v151 = sub_1D26CDCE0();
  if (os_log_type_enabled(v150, v151))
  {
    v152 = swift_slowAlloc();
    v153 = swift_slowAlloc();
    v308 = v153;
    *(_DWORD *)v152 = 136315394;
    v154 = v312;
    v155 = v313;
    __swift_project_boxed_opaque_existential_0(&v311, v312);
    v156 = *(uint64_t (**)(uint64_t, uint64_t))(v155 + 32);
    v157 = v155;
    v104 = v295;
    v158 = v156(v154, v157);
    v307 = sub_1D2537880(v158, v159, &v308);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
    *(_WORD *)(v152 + 12) = 1024;
    LODWORD(v307) = v149;
    v88 = v301;
    v160 = v298;
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v150, v151, "[%s] viewEvaluate: allowedToFetchLiveContent = %{BOOL}d", (uint8_t *)v152, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v153, -1, -1);
    MEMORY[0x1D823A5E0](v152, -1, -1);

    v304(v287, v305);
    v161 = v300;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);

    v304(v142, v305);
    v161 = v300;
    v160 = v298;
  }
  v162 = a1[3];
  v163 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v162);
  (*(void (**)(uint64_t, uint64_t))(v163 + 40))(v162, v163);
  v311 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
  sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  sub_1D26CC504();
  swift_beginAccess();
  if (v309 != 1)
    goto LABEL_42;
  v164 = v269;
  (*(void (**)(char *, char *, uint64_t))(v160 + 16))(v269, v302, v104);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v311);
  v165 = *(unsigned int (**)(char *, uint64_t, void (*)(_QWORD, _QWORD)))(v161 + 48);
  if (v165(v164, 1, v88) == 1)
  {
    v166 = v88;
    v167 = v104;
    v168 = v160;
    v169 = v164;
    v170 = v312;
    v171 = v313;
    __swift_project_boxed_opaque_existential_0(&v311, v312);
    v172 = v270;
    (*(void (**)(char *, uint64_t, uint64_t))(v171 + 88))(v294, v170, v171);
    v173 = v172;
    v174 = v168;
    v175 = *(void (**)(char *, uint64_t))(v168 + 8);
    v104 = v167;
    v88 = v166;
    v161 = v300;
    v175(v169, v104);
  }
  else
  {
    v174 = v160;
    v173 = v270;
    (*(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v161 + 32))(v270, v164, v88);
    ((void (*)(char *, _QWORD, uint64_t, void (*)(_QWORD, _QWORD)))v284)(v173, 0, 1, v88);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
  if (v165(v173, 1, v88) != 1)
  {
    v234 = *(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v161 + 32);
    v235 = v266;
    v234(v266, v173, v88);
    v234(v291, v235, v88);
    swift_storeEnumTagMultiPayload();
    v193 = v174;
    goto LABEL_61;
  }
  v160 = v174;
  (*(void (**)(char *, uint64_t))(v174 + 8))(v173, v104);
  if (v309 == 1)
  {
    v176 = v310;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v176 = sub_1D25615EC(0, v176[2] + 1, 1, v176);
    v177 = v104;
    v179 = v176[2];
    v178 = v176[3];
    v180 = v174;
    if (v179 >= v178 >> 1)
      v176 = sub_1D25615EC((_QWORD *)(v178 > 1), v179 + 1, 1, v176);
    v176[2] = v179 + 1;
    v181 = &v176[2 * v179];
    v181[4] = 0xD00000000000003DLL;
    v182 = v181 + 4;
    v183 = "Policy would prefer live entry, but couldn't find one to show";
  }
  else
  {
LABEL_42:
    v176 = v310;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v176 = sub_1D25615EC(0, v176[2] + 1, 1, v176);
    v177 = v104;
    v185 = v176[2];
    v184 = v176[3];
    v180 = v160;
    if (v185 >= v184 >> 1)
      v176 = sub_1D25615EC((_QWORD *)(v184 > 1), v185 + 1, 1, v176);
    v176[2] = v185 + 1;
    v186 = &v176[2 * v185];
    v186[4] = 0xD000000000000024;
    v182 = v186 + 4;
    v183 = "Policy decided must show placeholder";
  }
  v182[1] = (unint64_t)(v183 - 32) | 0x8000000000000000;
  v310 = v176;
  v187 = a1[3];
  v188 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v187);
  v189 = a1[3];
  v190 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v189);
  v191 = v293;
  (*(void (**)(uint64_t, uint64_t))(v190 + 40))(v189, v190);
  v192 = v288;
  (*(void (**)(char *, uint64_t, uint64_t))(v188 + 96))(v191, v187, v188);
  ((void (*)(char *, uint64_t))v299)(v191, v303);
  v193 = v180;
  v194 = *(void (**)(char *, char *, uint64_t))(v180 + 16);
  v195 = v274;
  v104 = v177;
  v194(v274, v192, v177);
  v196 = v300;
  v197 = v301;
  if ((*(unsigned int (**)(char *, uint64_t, void (*)(_QWORD, _QWORD)))(v300 + 48))(v195, 1, v301) == 1)
  {
    v301 = *(void (**)(_QWORD, _QWORD))(v193 + 8);
    v301(v195, v177);
    v198 = v310;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v198 = sub_1D25615EC(0, v198[2] + 1, 1, v198);
    v200 = v198[2];
    v199 = v198[3];
    if (v200 >= v199 >> 1)
      v198 = sub_1D25615EC((_QWORD *)(v199 > 1), v200 + 1, 1, v198);
    v198[2] = v200 + 1;
    v201 = &v198[2 * v200];
    v201[4] = 0xD000000000000023;
    v201[5] = 0x80000001D26DECD0;
    v310 = v198;
    v311 = v198;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
    sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
    v202 = sub_1D26CD8E4();
    v204 = v203;
    swift_bridgeObjectRelease();
    v205 = a1[3];
    v206 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v205);
    v207 = v272;
    (*(void (**)(uint64_t, uint64_t))(v206 + 24))(v205, v206);
    sub_1D2538510((uint64_t)a1, (uint64_t)&v311);
    swift_bridgeObjectRetain();
    v208 = sub_1D26CC084();
    v209 = sub_1D26CDCEC();
    if (os_log_type_enabled(v208, v209))
    {
      v210 = swift_slowAlloc();
      v211 = swift_slowAlloc();
      v307 = v211;
      *(_DWORD *)v210 = 136446466;
      v300 = v202;
      v213 = v312;
      v212 = v313;
      __swift_project_boxed_opaque_existential_0(&v311, v312);
      v214 = (*(uint64_t (**)(uint64_t, uint64_t))(v212 + 32))(v213, v212);
      v306 = sub_1D2537880(v214, v215, &v307);
      v193 = v298;
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
      *(_WORD *)(v210 + 12) = 2082;
      swift_bridgeObjectRetain();
      v306 = sub_1D2537880(v300, v204, &v307);
      sub_1D26CDF50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2531000, v208, v209, "[%{public}s] Security policy determined view will be empty: %{public}s.", (uint8_t *)v210, 0x16u);
      swift_arrayDestroy();
      v216 = v211;
      v104 = v295;
      MEMORY[0x1D823A5E0](v216, -1, -1);
      MEMORY[0x1D823A5E0](v210, -1, -1);

      v217 = v272;
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);

      swift_bridgeObjectRelease_n();
      v217 = v207;
    }
    v304(v217, v305);
    v236 = a1[3];
    v237 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v236);
    v238 = a1[3];
    v239 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v238);
    v240 = v293;
    (*(void (**)(uint64_t, uint64_t))(v239 + 40))(v238, v239);
    v241 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v237 + 104))(v240, v236, v237);
    ((void (*)(char *, uint64_t))v299)(v240, v303);
    v301(v288, v104);
    v242 = v267;
    *v267 = v241;
    v243 = v292;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t *, uint64_t))(v283 + 32))(v291, v242, v243);
  }
  else
  {
    v218 = *(void (**)(char *, char *, void (*)(_QWORD, _QWORD)))(v196 + 32);
    v218(v275, v195, v197);
    v311 = v310;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
    sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
    v219 = sub_1D26CD8E4();
    v221 = v220;
    swift_bridgeObjectRelease();
    v222 = a1[3];
    v223 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v222);
    v224 = v271;
    (*(void (**)(uint64_t, uint64_t))(v223 + 24))(v222, v223);
    sub_1D2538510((uint64_t)a1, (uint64_t)&v311);
    swift_bridgeObjectRetain();
    v225 = sub_1D26CC084();
    v226 = sub_1D26CDD04();
    if (os_log_type_enabled(v225, v226))
    {
      v227 = swift_slowAlloc();
      v300 = swift_slowAlloc();
      v307 = v300;
      *(_DWORD *)v227 = 136446466;
      v297 = v219;
      v229 = v312;
      v228 = v313;
      __swift_project_boxed_opaque_existential_0(&v311, v312);
      v230 = (*(uint64_t (**)(uint64_t, uint64_t))(v228 + 32))(v229, v228);
      v306 = sub_1D2537880(v230, v231, &v307);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
      *(_WORD *)(v227 + 12) = 2082;
      swift_bridgeObjectRetain();
      v306 = sub_1D2537880(v297, v221, &v307);
      sub_1D26CDF50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2531000, v225, v226, "[%{public}s] Security policy yielding placeholder content: %{public}s.", (uint8_t *)v227, 0x16u);
      v232 = v300;
      swift_arrayDestroy();
      v104 = v295;
      MEMORY[0x1D823A5E0](v232, -1, -1);
      MEMORY[0x1D823A5E0](v227, -1, -1);

      v233 = v271;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
      v233 = v224;
    }
    v304(v233, v305);
    v193 = v298;
    (*(void (**)(char *, uint64_t))(v298 + 8))(v288, v104);
    v218(v291, v275, v301);
    swift_storeEnumTagMultiPayload();
  }
LABEL_61:
  v244 = a1[3];
  v245 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v244);
  v246 = v278;
  (*(void (**)(uint64_t, uint64_t))(v245 + 24))(v244, v245);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v311);
  v247 = sub_1D26CC084();
  v248 = sub_1D26CDCE0();
  if (os_log_type_enabled(v247, v248))
  {
    v249 = (uint8_t *)swift_slowAlloc();
    v250 = swift_slowAlloc();
    v307 = v250;
    *(_DWORD *)v249 = 136315138;
    v251 = v312;
    v252 = v313;
    __swift_project_boxed_opaque_existential_0(&v311, v312);
    v253 = v251;
    v104 = v295;
    v254 = (*(uint64_t (**)(uint64_t, uint64_t))(v252 + 32))(v253, v252);
    v306 = sub_1D2537880(v254, v255, &v307);
    v193 = v298;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
    _os_log_impl(&dword_1D2531000, v247, v248, "[%s] viewEvaluate: end", v249, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v250, -1, -1);
    MEMORY[0x1D823A5E0](v249, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v311);
  }

  v304(v246, v305);
  swift_bridgeObjectRelease();
  v310 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  ((void (*)(char *, uint64_t))v299)(v294, v303);
  v256 = *(void (**)(char *, uint64_t))(v279 + 8);
  v257 = v280;
  v256(v290, v280);
  v256(v289, v257);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, char *, uint64_t))(v283 + 32))(v281, v291, v292);
  return (*(uint64_t (**)(char *, uint64_t))(v193 + 8))(v302, v104);
}

uint64_t DefaultWidgetViewSecurityPolicy.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultWidgetViewSecurityPolicy.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D25615D8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1D255F7A4(a1, a2, a3, a4, a5);
}

_QWORD *sub_1D25615EC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0E8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2562A5C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1D25616F8(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FB0);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * v11 - 64;
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32])
          memmove(v12, a4 + 32, v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x1E0DEE9D8];
      v12 = (char *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1D2562978(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D25617F0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962180);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1D2562D98(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D2561914(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962170);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2562EA4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2561A20(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2561D80(a1, a2, a3, a4, (uint64_t *)&unk_1ED962150, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

_QWORD *sub_1D2561A34(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC826F8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2563EAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D2561B40(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D570);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D25640A8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D2561C4C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9639C0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4])
          memmove(v12, a4 + 4, 48 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1D2563F9C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2561D6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2561D80(a1, a2, a3, a4, &qword_1ED9639B8, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD86F8]);
}

uint64_t sub_1D2561D80(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_1D26CE1CC();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D2564394(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

_QWORD *sub_1D2561F8C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9639C8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4])
          memmove(v12, a4 + 4, 40 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1D25641B0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D25620AC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82700);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D25642A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D25621B8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1D25621E0(a1, a2, a3, a4, &qword_1ED9639D8, (uint64_t *)&unk_1ED963888);
}

_QWORD *sub_1D25621CC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1D25621E0(a1, a2, a3, a4, &qword_1ED963260, &qword_1ED963228);
}

_QWORD *sub_1D25621E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v16 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D2563DA8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D25622F8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_1D25621E0(a1, a2, a3, a4, &qword_1ED9639D0, &qword_1ED963870);
}

_QWORD *sub_1D256230C(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627B8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v12 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_1D2562884(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2562430(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2561D80(a1, a2, a3, a4, &qword_1EFC826F0, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0998]);
}

uint64_t sub_1D2562444(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2561D80(a1, a2, a3, a4, &qword_1EFC826E8, (uint64_t (*)(_QWORD))MEMORY[0x1E0D87970]);
}

uint64_t sub_1D2562458(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2561D80(a1, a2, a3, a4, &qword_1EFC826E0, (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
}

uint64_t sub_1D256246C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2561D80(a1, a2, a3, a4, &qword_1EFC826D8, (uint64_t (*)(_QWORD))type metadata accessor for PushSubscription);
}

uint64_t sub_1D2562480(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2561D80(a1, a2, a3, a4, &qword_1EFC826D0, (uint64_t (*)(_QWORD))type metadata accessor for PushToken);
}

_QWORD *sub_1D2562494(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FB8);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v13 = (_QWORD *)(MEMORY[0x1E0DEE9D8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1D25644AC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D25625A0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1D2561D80(a1, a2, a3, a4, &qword_1ED962160, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
}

uint64_t sub_1D25625B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9639B0);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_1D26CE1CC();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1D25645A0(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1D25627C4(uint64_t (*a1)(void))
{
  return a1() & 1;
}

uint64_t sub_1D25627E8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D2562808@<X0>(uint64_t (*a1)(void)@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for WidgetViewSecurityPolicyResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for WidgetViewSecurityPolicyResult);
}

unint64_t sub_1D256283C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96C308;
  if (!qword_1ED96C308)
  {
    v1 = sub_1D26CC438();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDA028], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96C308);
  }
  return result;
}

uint64_t sub_1D2562884(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

char *sub_1D2562978(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2562A5C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2562B4C(char a1, char a2, char a3, _QWORD **a4)
{
  _QWORD *v8;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t result;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  const char *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;

  v8 = *a4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a1 & 1) != 0)
  {
    if ((a2 & 1) != 0)
    {
      if ((a3 & 1) != 0)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v8 = sub_1D25615EC(0, v8[2] + 1, 1, v8);
        v11 = v8[2];
        v10 = v8[3];
        if (v11 >= v10 >> 1)
          v8 = sub_1D25615EC((_QWORD *)(v10 > 1), v11 + 1, 1, v8);
        v12 = &v8[2 * v11];
        v12[4] = 0xD000000000000036;
        v13 = v12 + 4;
        v8[2] = v11 + 1;
        v14 = 0x80000001D26DEF50;
        result = 1;
        goto LABEL_25;
      }
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v8 = sub_1D25615EC(0, v8[2] + 1, 1, v8);
      v24 = v8[2];
      v23 = v8[3];
      if (v24 >= v23 >> 1)
        v8 = sub_1D25615EC((_QWORD *)(v23 > 1), v24 + 1, 1, v8);
      result = 0;
      v8[2] = v24 + 1;
      v25 = &v8[2 * v24];
      v25[4] = 0xD00000000000003BLL;
      v13 = v25 + 4;
      v22 = "Keybag locked and user's Setting is set to hide widget data";
    }
    else
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        v8 = sub_1D25615EC(0, v8[2] + 1, 1, v8);
      v20 = v8[2];
      v19 = v8[3];
      if (v20 >= v19 >> 1)
        v8 = sub_1D25615EC((_QWORD *)(v19 > 1), v20 + 1, 1, v8);
      result = 0;
      v8[2] = v20 + 1;
      v21 = &v8[2 * v20];
      v21[4] = 0xD000000000000072;
      v13 = v21 + 4;
      v22 = "Keybag locked and widget's configured to not 'canAppearInSecureEnvironment' - error in widget host's configuration";
    }
    v14 = (unint64_t)(v22 - 32) | 0x8000000000000000;
    goto LABEL_25;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    v8 = sub_1D25615EC(0, v8[2] + 1, 1, v8);
  v17 = v8[2];
  v16 = v8[3];
  if (v17 >= v16 >> 1)
    v8 = sub_1D25615EC((_QWORD *)(v16 > 1), v17 + 1, 1, v8);
  v8[2] = v17 + 1;
  v18 = &v8[2 * v17];
  v18[4] = 0x752067616279654BLL;
  v13 = v18 + 4;
  result = 1;
  v14 = 0xEF64656B636F6C6ELL;
LABEL_25:
  v13[1] = v14;
  *a4 = v8;
  return result;
}

uint64_t sub_1D2562D98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962088);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2562EA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2562F94(char a1, _QWORD *a2, _QWORD **a3, char a4, char a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;

  v11 = a2[3];
  v12 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v11);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 64))(v11, v12);
  if ((a1 & 1) == 0)
    return sub_1D2562B4C(a4 & 1, a5 & 1, a6 & 1, a3);
  v14 = v13;
  v15 = *a3;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v15;
  if ((v14 & 1) != 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v15 = sub_1D25615EC(0, v15[2] + 1, 1, v15);
      *a3 = v15;
    }
    v18 = v15[2];
    v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      v15 = sub_1D25615EC((_QWORD *)(v17 > 1), v18 + 1, 1, v15);
      *a3 = v15;
    }
    v15[2] = v18 + 1;
    v19 = &v15[2 * v18];
    v19[4] = 0xD00000000000002ELL;
    v19[5] = 0x80000001D26DF020;
    return sub_1D2562B4C(a4 & 1, a5 & 1, a6 & 1, a3);
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = sub_1D25615EC(0, v15[2] + 1, 1, v15);
    *a3 = v15;
  }
  v22 = v15[2];
  v21 = v15[3];
  if (v22 >= v21 >> 1)
  {
    v15 = sub_1D25615EC((_QWORD *)(v21 > 1), v22 + 1, 1, v15);
    *a3 = v15;
  }
  v15[2] = v22 + 1;
  v23 = &v15[2 * v22];
  v23[4] = 0xD00000000000002DLL;
  v23[5] = 0x80000001D26DEFF0;
  return 0;
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.logger.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.logIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.currentEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.canAppearInSecureEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.userAllowsLiveContentWhenInSecureEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.prefersUnredactedContentInLowLuminanceEnvironment.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.contentProtectionLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.currentProtectionLevel.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.liveViewEntryProvider(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.placeholderViewEntryProvider(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of WidgetViewSecurityDataSource.emptyView(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t sub_1D2563198()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D25631A0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1D2563218(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    v8 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_19:
    swift_retain();
    return v3;
  }
  v9 = *((unsigned __int8 *)a2 + v5);
  if (v9 >= 3)
  {
    if (v5 <= 3)
      v10 = v5;
    else
      v10 = 4;
    __asm { BR              X13 }
  }
  if (v9 == 2)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v5) = 2;
    goto LABEL_19;
  }
  if (v9 == 1)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    *((_BYTE *)v3 + v5) = 1;
  }
  else
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    *((_BYTE *)v3 + v5) = 0;
  }
  return v3;
}

uint64_t sub_1D256334C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unsigned int v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = *(unsigned __int8 *)(a1 + v3);
  if (v4 < 3)
  {
    if (v4 == 2)
      return swift_release();
    else
      return (*(uint64_t (**)(void))(v2 + 8))();
  }
  else
  {
    if (v3 <= 3)
      v5 = v3;
    else
      v5 = 4;
    return ((uint64_t (*)(void))((char *)&loc_1D2563394 + 4 * byte_1D26D14C5[v5]))();
  }
}

_QWORD *sub_1D25633F0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    *a1 = *a2;
    *((_BYTE *)a1 + v5) = 2;
    swift_retain();
  }
  else if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    *((_BYTE *)a1 + v5) = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 16))(a1);
    *((_BYTE *)a1 + v5) = 0;
  }
  return a1;
}

_QWORD *sub_1D25634E8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
      swift_release();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      *a1 = *a2;
      *((_BYTE *)a1 + v7) = 2;
      swift_retain();
    }
    else if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((_BYTE *)a1 + v7) = 0;
    }
  }
  return a1;
}

_QWORD *sub_1D25636A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  char v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  v6 = *((unsigned __int8 *)a2 + v5);
  if (v6 >= 3)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  if (v6 == 2)
  {
    *a1 = *a2;
    v8 = 2;
  }
  else if (v6 == 1)
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 1;
  }
  else
  {
    (*(void (**)(_QWORD *))(v4 + 32))(a1);
    v8 = 0;
  }
  *((_BYTE *)a1 + v5) = v8;
  return a1;
}

_QWORD *sub_1D2563794(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  char v12;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    v8 = *((unsigned __int8 *)a1 + v7);
    if (v8 >= 3)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    if (v8 == 2)
      swift_release();
    else
      (*(void (**)(_QWORD *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 16));
    v10 = *((unsigned __int8 *)a2 + v7);
    if (v10 >= 3)
    {
      if (v7 <= 3)
        v11 = v7;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    if (v10 == 2)
    {
      *a1 = *a2;
      v12 = 2;
    }
    else if (v10 == 1)
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(v6 + 32))(a1, a2, v5);
      v12 = 0;
    }
    *((_BYTE *)a1 + v7) = v12;
  }
  return a1;
}

uint64_t sub_1D2563948(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  v3 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) > 8uLL)
    v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_21:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 3)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_21;
LABEL_14:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 254);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D2563A0C + 4 * byte_1D26D14E8[(v4 - 1)]))();
}

void sub_1D2563A58(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v8 = a2 - 254;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1D2563C00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = 8;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64) > 8uLL)
    v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 3u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D2563C48 + 4 * byte_1D26D14F6[v3]))();
}

void sub_1D2563C90(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64) <= 8uLL)
    v4 = 8;
  else
    v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    v5 = a2 - 3;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t dispatch thunk of WidgetViewEntrySecurityProviding.containsPrivacyRedactions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of WidgetViewSecurityPolicy.evaluate<A>(dataSource:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for DefaultWidgetViewSecurityPolicy()
{
  return objc_opt_self();
}

uint64_t method lookup function for DefaultWidgetViewSecurityPolicy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultWidgetViewSecurityPolicy.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of DefaultWidgetViewSecurityPolicy.evaluate<A>(dataSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t sub_1D2563DA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2563EAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2563F9C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963578);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25640A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D580);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25641B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25642A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2564394(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25644AC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25645A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25646C4()
{
  return sub_1D26CB964();
}

uint64_t RemoteActivityWindowBudgeting.nextRefreshDate.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 168))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 152))(a1, a2);
  sub_1D26CB964();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D256478C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  char v7;
  void (*v8)(char *, uint64_t);
  uint64_t v10;

  v0 = sub_1D26CB9DC();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v10 - v5;
  sub_1D26CB9B8();
  sub_1D26CB964();
  v7 = sub_1D26CB94C();
  v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  v8(v6, v0);
  return v7 & 1;
}

uint64_t RemoteActivityWindowBudgeting.windowExpired.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  char v15;
  uint64_t v17;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v17 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v17 - v12;
  sub_1D26CB9B8();
  (*(void (**)(uint64_t, uint64_t))(a2 + 168))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 152))(a1, a2);
  sub_1D26CB964();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v15 = sub_1D26CB94C();
  v14(v11, v4);
  v14(v13, v4);
  return v15 & 1;
}

uint64_t sub_1D256497C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  BOOL v4;

  v2 = *(_QWORD *)(v1 + *(int *)(a1 + 48));
  result = *(_QWORD *)(v1 + *(int *)(a1 + 44));
  if (v2 >= 1)
  {
    v4 = __OFSUB__(result, v2);
    result -= v2;
    if (v4)
      __break(1u);
  }
  return result;
}

uint64_t RemoteActivityWindowBudgeting.consumedBudget.getter(uint64_t a1, uint64_t a2)
{
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  BOOL v8;

  v4 = *(uint64_t (**)(void))(a2 + 224);
  v5 = v4();
  v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 208))(a1, a2);
  if (v5 < 1)
    return v6;
  result = ((uint64_t (*)(uint64_t, uint64_t))v4)(a1, a2);
  v8 = __OFSUB__(v6, result);
  v6 -= result;
  if (!v8)
    return v6;
  __break(1u);
  return result;
}

BOOL sub_1D2564A14(uint64_t a1)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1 + 48)) < 1;
}

BOOL RemoteActivityWindowBudgeting.isExhausted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))() < 1;
}

uint64_t sub_1D2564A48(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v2 = *(int *)(result + 48);
  v3 = *(_QWORD *)(v1 + v2);
  v4 = __OFSUB__(v3, 1);
  v5 = v3 - 1;
  if (v4)
    __break(1u);
  else
    *(_QWORD *)(v1 + v2) = v5;
  return result;
}

Swift::Void __swiftcall RemoteActivityWindowBudgeting.decrement()()
{
  uint64_t v0;
  void (*v1)(_BYTE *, _QWORD);
  _QWORD *v2;
  _BYTE v3[32];

  v1 = (void (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *))(v0 + 240))(v3);
  if (__OFSUB__(*v2, 1))
  {
    __break(1u);
  }
  else
  {
    --*v2;
    v1(v3, 0);
  }
}

uint64_t sub_1D2564AB4(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  void (*v12)(char *, uint64_t);
  uint64_t result;
  uint64_t v14;

  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  sub_1D26CB9B8();
  v10 = v1 + a1[8];
  sub_1D26CB964();
  v11 = sub_1D26CB94C();
  v12 = *(void (**)(char *, uint64_t))(v4 + 8);
  v12(v7, v3);
  result = ((uint64_t (*)(char *, uint64_t))v12)(v9, v3);
  if ((v11 & 1) != 0)
  {
    *(_QWORD *)(v1 + a1[12]) = *(_QWORD *)(v1 + a1[11]);
    sub_1D26CB9B8();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 40))(v10, v9, v3);
  }
  return result;
}

Swift::Void __swiftcall RemoteActivityWindowBudgeting.refreshIfNecessary()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1;
  v3 = v0;
  if (((*(uint64_t (**)(void))(v1 + 200))() & 1) != 0)
    (*(void (**)(uint64_t, uint64_t))(v2 + 280))(v3, v2);
}

uint64_t sub_1D2564C10(int *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + a1[12]) = *(_QWORD *)(v1 + a1[11]);
  sub_1D26CB9B8();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 40))(v1 + a1[8], v6, v3);
}

Swift::Void __swiftcall RemoteActivityWindowBudgeting.refresh()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1;
  v3 = v0;
  v4 = sub_1D26CB9DC();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 208))(v3, v2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 232))(v7, v3, v2);
  sub_1D26CB9B8();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 176))(v6, v3, v2);
}

uint64_t RemoteActivityWindowBudgeting.description.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];
  uint64_t v14;
  unint64_t v15;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v13 - v9;
  v14 = 0;
  v15 = 0xE000000000000000;
  sub_1D26CE0A0();
  (*(void (**)(uint64_t, uint64_t))(a2 + 120))(a1, a2);
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v13[1] = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 224))(a1, a2);
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  (*(void (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  sub_1D2564F90();
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v11 = *(void (**)(char *, uint64_t))(v5 + 8);
  v11(v10, v4);
  sub_1D26CDA04();
  (*(void (**)(uint64_t, uint64_t))(a2 + 192))(a1, a2);
  sub_1D26CB9B8();
  sub_1D26CB928();
  v11(v8, v4);
  v11(v10, v4);
  sub_1D26CDBE4();
  sub_1D26CDA04();
  return v14;
}

unint64_t sub_1D2564F90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED961B10;
  if (!qword_1ED961B10)
  {
    v1 = sub_1D26CB9DC();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB08F0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED961B10);
  }
  return result;
}

uint64_t RemoteActivityWindowBudgeting.budgetExpired.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t);
  char v15;
  uint64_t v17;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)&v17 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v17 - v12;
  sub_1D26CB9B8();
  (*(void (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  (*(void (**)(uint64_t, uint64_t))(a2 + 160))(a1, a2);
  sub_1D26CB964();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  v15 = sub_1D26CB94C();
  v14(v11, v4);
  v14(v13, v4);
  return v15 & 1;
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.activityBudgetID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.activityBudgetType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.startDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.windowDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.maximumDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.lastRefreshDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.lastRefreshDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.lastRefreshDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 184))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.nextRefreshDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.windowExpired.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.maximumBudgetPerWindow.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.consumedBudget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.remainingBudget.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.remainingBudget.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.remainingBudget.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.isExhausted.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.init(activityBudgetID:activityBudgetType:windowDuration:maximumDuration:maximumBudgetPerWindow:startDate:remainingBudget:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(a8 + 256))(a1, a2, a3, a4, a5, a6 & 1);
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.decrement()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.refreshIfNecessary()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 272))();
}

uint64_t dispatch thunk of RemoteActivityWindowBudgeting.refresh()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t sub_1D25651C0()
{
  sub_1D26CB868();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 60;
}

uint64_t DataProtectedArchiveFilePromise.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D256524C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  id v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v2 = sub_1D26CC00C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963780);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v21 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - v13;
  result = sub_1D2566264((uint64_t)&v21 - v13);
  if (!v1)
  {
    v23 = v2;
    v16 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
    v24 = *(_QWORD *)(v16 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v14, 0, 1, v16);
    v17 = v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
    swift_beginAccess();
    sub_1D2566B04((uint64_t)v14, v17);
    swift_endAccess();
    v22 = sub_1D26CDE18();
    if (qword_1ED96C1C0 != -1)
      swift_once();
    v21 = qword_1ED977FC0;
    sub_1D2537078(v17, (uint64_t)v12, &qword_1ED963780);
    v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48);
    result = v18(v12, 1, v16);
    if ((_DWORD)result == 1)
    {
      __break(1u);
    }
    else
    {
      v19 = v23;
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, &v12[*(int *)(v16 + 32)], v23);
      sub_1D2567BB0((uint64_t)v12);
      sub_1D26CBFD0();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v19);
      sub_1D2537078(v17, (uint64_t)v9, &qword_1ED963780);
      result = v18(v9, 1, v16);
      if ((_DWORD)result != 1)
      {
        v20 = *(id *)&v9[*(int *)(v16 + 24)];
        sub_1D2567BB0((uint64_t)v9);
        return (uint64_t)v20;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D25654F8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1D2565520@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (**v12)(char *, uint64_t);
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void);
  void (*v21)(char *, uint64_t);
  void *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  NSObject *v34;
  os_log_type_t v35;
  uint8_t *v36;
  _QWORD *v37;
  id v38;
  uint64_t v39;
  _QWORD *v40;
  id v41;
  void *v42;
  unsigned __int8 v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (**v54)(char *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;

  v53 = a1;
  v2 = sub_1D26CB55C();
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1D26CB574();
  v54 = *(void (***)(char *, uint64_t))(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963780);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (void (**)(char *, uint64_t))((char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (uint64_t)v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
  swift_beginAccess();
  sub_1D2537078(v13, (uint64_t)v8, &qword_1ED963780);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v15 = v9;
  if (v14(v8, 1, v9) == 1)
  {
    sub_1D253703C((uint64_t)v8, &qword_1ED963780);
    sub_1D26CB520();
    sub_1D2567BEC(MEMORY[0x1E0DEE9D8]);
    sub_1D25369B0(&qword_1ED96B1A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48], MEMORY[0x1E0CADE40]);
    sub_1D26CB754();
    sub_1D26CB4F0();
    v54[1](v5, v3);
    return swift_willThrow();
  }
  else
  {
    sub_1D2567D20((uint64_t)v8, (uint64_t)v12);
    v17 = v1 + 4;
    v18 = v1[8];
    __swift_project_boxed_opaque_existential_0(v1 + 4, v1[7]);
    v52 = v15;
    v19 = *(int *)(v15 + 24);
    v54 = v12;
    v20 = *(void (**)(void))(v18 + 32);
    v21 = *(void (**)(char *, uint64_t))((char *)v12 + v19);
    v22 = (void *)v55;
    v20();
    v23 = v22;
    if (v22)
    {

      v23 = 0;
    }

    v59 = 0;
    MEMORY[0x1E0C80A78](v24);
    *(&v52 - 4) = (uint64_t)&v59;
    *(&v52 - 3) = (uint64_t)v1;
    v25 = (uint64_t)v54;
    *(&v52 - 2) = (uint64_t)v54;
    (*(void (**)(void (*)()))(*v1 + 160))(sub_1D2567D64);
    if (v23)
    {
      if (qword_1ED96C1C8 != -1)
        swift_once();
      v31 = sub_1D26CC09C();
      __swift_project_value_buffer(v31, (uint64_t)qword_1ED977F80);
      v32 = v23;
      v33 = v23;
      v34 = sub_1D26CC084();
      v35 = sub_1D26CDCEC();
      if (os_log_type_enabled(v34, v35))
      {
        v36 = (uint8_t *)swift_slowAlloc();
        v37 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v36 = 138543362;
        v38 = v23;
        v39 = _swift_stdlib_bridgeErrorToNSError();
        v57 = v39;
        sub_1D26CDF50();
        *v37 = v39;

        _os_log_impl(&dword_1D2531000, v34, v35, "There was an error during archiving: %{public}@", v36, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        v40 = v37;
        v25 = (uint64_t)v54;
        MEMORY[0x1D823A5E0](v40, -1, -1);
        MEMORY[0x1D823A5E0](v36, -1, -1);
      }
      else
      {

      }
      sub_1D2566B4C(1, 0x6620747065636341, 0xEE002E64656C6961);
      swift_willThrow();
      return sub_1D2567BB0(v25);
    }
    else
    {
      v26 = v1[7];
      v27 = v1[8];
      __swift_project_boxed_opaque_existential_0(v17, v26);
      v28 = (char *)v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40))((uint64_t)v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination, v26, v27);
      v29 = v1[7];
      v30 = v1[8];
      __swift_project_boxed_opaque_existential_0(v17, v29);
      (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v30 + 88))(v25 + *(int *)(v52 + 20), v28, v29, v30);
      v57 = 0;
      v58 = 0xE000000000000000;
      sub_1D26CE0A0();
      swift_bridgeObjectRelease();
      v57 = 0xD000000000000019;
      v58 = 0x80000001D26DF070;
      sub_1D26CB7A8();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D2566B4C(0, v57, v58);
      swift_bridgeObjectRelease();
      v41 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
      sub_1D26CB85C();
      v42 = (void *)sub_1D26CD914();
      swift_bridgeObjectRelease();
      v43 = objc_msgSend(v41, sel_fileExistsAtPath_, v42);

      if ((v43 & 1) == 0)
      {
        if (qword_1ED96C1C8 != -1)
          swift_once();
        v44 = sub_1D26CC09C();
        __swift_project_value_buffer(v44, (uint64_t)qword_1ED977F80);
        swift_retain_n();
        v45 = sub_1D26CC084();
        v46 = sub_1D26CDCF8();
        if (os_log_type_enabled(v45, v46))
        {
          v47 = (uint8_t *)swift_slowAlloc();
          v55 = swift_slowAlloc();
          v57 = v55;
          *(_DWORD *)v47 = 136446210;
          v48 = sub_1D26CB85C();
          v56 = sub_1D2537880(v48, v49, &v57);
          sub_1D26CDF50();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D2531000, v45, v46, "Destination file DOES NOT EXIST at %{public}s.", v47, 0xCu);
          v50 = v55;
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v50, -1, -1);
          MEMORY[0x1D823A5E0](v47, -1, -1);

        }
        else
        {

          swift_release_n();
        }
        v25 = (uint64_t)v54;
      }
      sub_1D2567BB0(v25);
      v51 = sub_1D26CB880();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v53, v28, v51);
    }
  }
}

void sub_1D2565CA4(_BYTE *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  unsigned int v27;
  unsigned int (*v28)(uint64_t, uint64_t, uint64_t);
  char v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  char v60;
  _QWORD v61[3];
  uint64_t v62;
  uint64_t v63;

  v56 = 0;
  v57 = a3;
  v5 = sub_1D26CB880();
  v52 = *(_QWORD *)(v5 - 8);
  v53 = v5;
  MEMORY[0x1E0C80A78](v5);
  v51 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CD488();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962060);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  v15 = MEMORY[0x1E0C80A78](v14);
  v50 = (uint64_t)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v54 = (uint64_t)&v49 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v49 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v49 - v22;
  *a1 = 1;
  v58 = a2;
  v24 = (uint64_t)a2 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel;
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))((char *)&v49 - v22, *MEMORY[0x1E0CF0408], v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v7);
  v25 = (uint64_t)&v13[*(int *)(v11 + 48)];
  v55 = v24;
  sub_1D2537078(v24, (uint64_t)v13, &qword_1ED96FC90);
  sub_1D2537078((uint64_t)v23, v25, &qword_1ED96FC90);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v26((uint64_t)v13, 1, v7) == 1)
  {
    sub_1D253703C((uint64_t)v23, &qword_1ED96FC90);
    v27 = v26(v25, 1, v7);
    v28 = v56;
    if (v27 == 1)
    {
      sub_1D253703C((uint64_t)v13, &qword_1ED96FC90);
      goto LABEL_8;
    }
LABEL_6:
    sub_1D253703C((uint64_t)v13, &qword_1ED962060);
    goto LABEL_14;
  }
  sub_1D2537078((uint64_t)v13, (uint64_t)v21, &qword_1ED96FC90);
  if (v26(v25, 1, v7) == 1)
  {
    sub_1D253703C((uint64_t)v23, &qword_1ED96FC90);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v21, v7);
    v28 = v56;
    goto LABEL_6;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v25, v7);
  sub_1D25369B0((unint64_t *)&qword_1ED96FC88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0450]);
  v29 = sub_1D26CD908();
  v30 = v26;
  v31 = *(void (**)(char *, uint64_t))(v8 + 8);
  v31(v10, v7);
  sub_1D253703C((uint64_t)v23, &qword_1ED96FC90);
  v31(v21, v7);
  v26 = v30;
  sub_1D253703C((uint64_t)v13, &qword_1ED96FC90);
  v28 = v56;
  if ((v29 & 1) == 0)
    goto LABEL_14;
LABEL_8:
  v32 = (uint64_t)(v58 + 4);
  sub_1D2538510((uint64_t)(v58 + 4), (uint64_t)v61);
  v33 = v62;
  v34 = v63;
  __swift_project_boxed_opaque_existential_0(v61, v62);
  v35 = v54;
  sub_1D2537078(v55, v54, &qword_1ED96FC90);
  v56 = v26;
  if (v26(v35, 1, v7) == 1)
  {
    __break(1u);
    goto LABEL_18;
  }
  v36 = (void *)sub_1D26CD464();
  v37 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v37(v35, v7);
  v38 = v57 + *(int *)(type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0) + 20);
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v34 + 64))(v36, v38, v33, v34);
  if (!v28)
  {

    goto LABEL_13;
  }

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
  sub_1D2538510(v32, (uint64_t)v61);
  v39 = v62;
  v40 = v63;
  __swift_project_boxed_opaque_existential_0(v61, v62);
  v42 = v51;
  v41 = v52;
  v43 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v51, v38, v53);
  v44 = v50;
  sub_1D2537078(v55, v50, &qword_1ED96FC90);
  if (v56(v44, 1, v7) == 1)
  {
LABEL_18:
    __break(1u);
    return;
  }
  v45 = sub_1D26CD47C();
  v37(v44, v7);
  v59 = v45;
  v60 = 0;
  v28 = 0;
  (*(void (**)(char *, unint64_t, unint64_t, uint64_t *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v40 + 48))(v42, 0xD00000000000002DLL, 0x80000001D26DF1A0, &v59, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB448], MEMORY[0x1E0DEB420], v39, v40);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
LABEL_13:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v61);
LABEL_14:
  v46 = v58[7];
  v47 = v58[8];
  __swift_project_boxed_opaque_existential_0(v58 + 4, v46);
  v48 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  (*(void (**)(_QWORD, uint64_t, uint64_t))(v47 + 32))(*(_QWORD *)(v57 + *(int *)(v48 + 28)), v46, v47);
  if (v28)

}

uint64_t sub_1D2566238()
{
  return sub_1D2566B4C(0, 0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_1D2566254(uint64_t a1, unint64_t a2)
{
  return sub_1D2566B4C(0, a1, a2);
}

uint64_t sub_1D2566264@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t result;
  void (*v25)(char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t inited;
  void *v29;
  id v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  _QWORD *v36;
  _QWORD *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  uint64_t v45;
  uint8_t *v46;
  char *v47;
  uint8_t *v48;
  uint64_t v49;
  unint64_t v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  void *v55;
  char *v56;
  void (*v57)(char *, char *, uint64_t);
  id v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  int *v74;
  uint64_t v75;
  void (*v76)(uint64_t, char *, uint64_t);
  uint64_t v77;
  os_log_t v78;
  void (*v79)(char *, char *, uint64_t);
  void (*v80)(char *, uint64_t);
  _QWORD *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD v95[2];
  __int128 v96;
  uint64_t v97;
  unint64_t v98;

  v2 = v1;
  v82 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v3);
  v89 = (unint64_t)&v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = sub_1D26CD488();
  v87 = *(_QWORD *)(v88 - 8);
  v5 = MEMORY[0x1E0C80A78](v88);
  v83 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v84 = (char *)&v77 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v85 = (char *)&v77 - v10;
  MEMORY[0x1E0C80A78](v9);
  v86 = (char *)&v77 - v11;
  v12 = sub_1D26CB880();
  v93 = *(_QWORD *)(v12 - 8);
  v94 = v12;
  v13 = MEMORY[0x1E0C80A78](v12);
  v90 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v77 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v77 - v18;
  v20 = v1[7];
  v21 = v1[8];
  __swift_project_boxed_opaque_existential_0(v1 + 4, v20);
  sub_1D26CB82C();
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 8);
  v91 = v19;
  v23 = v92;
  v22(v17, v20, v21);
  if (v23)
    return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v17, v94);
  v92 = (uint64_t)(v1 + 4);
  v25 = *(void (**)(char *, uint64_t))(v93 + 8);
  v25(v17, v94);
  sub_1D26CB7CC();
  v26 = v90;
  v27 = v91;
  sub_1D26CB814();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0F8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D26D1280;
  v29 = (void *)*MEMORY[0x1E0CB2AA8];
  *(_QWORD *)(inited + 64) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(inited + 32) = v29;
  *(_QWORD *)(inited + 40) = 438;
  v30 = v29;
  v31 = sub_1D253DD6C(inited);
  v81 = v2;
  v32 = v89;
  sub_1D2537078((uint64_t)v2 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel, v89, &qword_1ED96FC90);
  v33 = v87;
  v34 = v88;
  v35 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v32, 1, v88);
  v80 = v25;
  if (v35 == 1)
  {
    sub_1D253703C(v32, &qword_1ED96FC90);
    v36 = v81;
    v37 = (_QWORD *)v92;
    v38 = v27;
  }
  else
  {
    v39 = v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v86, v32, v34);
    if (qword_1ED96C1C8 != -1)
      swift_once();
    v89 = v31;
    v40 = sub_1D26CC09C();
    __swift_project_value_buffer(v40, (uint64_t)qword_1ED977F80);
    v41 = v85;
    v79 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
    v79(v85, v39, v34);
    v42 = sub_1D26CC084();
    v43 = sub_1D26CDCE0();
    if (os_log_type_enabled(v42, v43))
    {
      v78 = v42;
      v44 = (uint8_t *)swift_slowAlloc();
      v77 = swift_slowAlloc();
      *(_QWORD *)&v96 = v77;
      v45 = v33;
      v46 = v44;
      *(_DWORD *)v44 = 136446210;
      v47 = v41;
      v48 = v46;
      sub_1D25369B0(&qword_1ED962050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0468]);
      v49 = sub_1D26CE370();
      *(_QWORD *)&v95[0] = sub_1D2537880(v49, v50, (uint64_t *)&v96);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v51 = *(void (**)(char *, uint64_t))(v33 + 8);
      v51(v47, v34);
      v42 = v78;
      _os_log_impl(&dword_1D2531000, v78, v43, "Specific FileDataProtectionLevel requested: %{public}s", v48, 0xCu);
      v52 = v77;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v52, -1, -1);
      MEMORY[0x1D823A5E0](v48, -1, -1);
    }
    else
    {
      v45 = v33;
      v51 = *(void (**)(char *, uint64_t))(v33 + 8);
      v51(v41, v34);
    }

    v53 = v84;
    v54 = v83;
    v55 = (void *)*MEMORY[0x1E0CB2AD8];
    v56 = v86;
    v57 = v79;
    v79(v83, v86, v34);
    if ((*(unsigned int (**)(char *, uint64_t))(v45 + 88))(v54, v34) == *MEMORY[0x1E0CF0408])
    {
      (*(void (**)(char *, _QWORD, uint64_t))(v45 + 104))(v53, *MEMORY[0x1E0CF0410], v34);
      v58 = v55;
    }
    else
    {
      v57(v53, v56, v34);
      v59 = v55;
      v51(v54, v34);
    }
    v26 = v90;
    v60 = sub_1D26CD464();
    v51(v53, v34);
    type metadata accessor for FileProtectionType(0);
    v97 = v61;
    *(_QWORD *)&v96 = v60;
    sub_1D2538448(&v96, v95);
    v62 = v89;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v98 = v62;
    sub_1D266E4C4(v95, v55, isUniquelyReferenced_nonNull_native);
    v31 = v98;

    swift_bridgeObjectRelease();
    v51(v56, v34);
    v36 = v81;
    v38 = v91;
    v37 = (_QWORD *)v92;
  }
  v64 = v36[7];
  v65 = v36[8];
  __swift_project_boxed_opaque_existential_0(v37, v64);
  (*(void (**)(char *, unint64_t, uint64_t, uint64_t))(v65 + 80))(v26, v31, v64, v65);
  v66 = v38;
  swift_bridgeObjectRelease();
  v67 = v36[7];
  v68 = v36[8];
  __swift_project_boxed_opaque_existential_0(v37, v67);
  v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 24))(v26, v67, v68);
  v70 = v36[7];
  v71 = v36[8];
  __swift_project_boxed_opaque_existential_0(v37, v70);
  v92 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v71 + 16))(v26, v70, v71);
  v72 = v94;
  if (qword_1ED96C1C0 != -1)
    swift_once();
  v73 = (id)qword_1ED977FC0;
  sub_1D26CB7D8();
  v74 = (int *)type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  v75 = v82;
  sub_1D26CBFE8();
  v76 = *(void (**)(uint64_t, char *, uint64_t))(v93 + 32);
  v76(v75, v66, v72);
  result = ((uint64_t (*)(uint64_t, char *, uint64_t))v76)(v75 + v74[5], v26, v72);
  *(_QWORD *)(v75 + v74[6]) = v69;
  *(_QWORD *)(v75 + v74[7]) = v92;
  return result;
}

uint64_t type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED963770);
}

uint64_t sub_1D2566B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963780);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2566B4C(int a1, uint64_t a2, unint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  _BOOL4 v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  os_log_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  void (*v47)(void);
  id v48;
  uint64_t v49;
  void (*v50)(void);
  id v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  os_log_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  int v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;

  v4 = v3;
  v66 = a2;
  v67 = a3;
  v68 = a1;
  v5 = sub_1D26CC00C();
  v70 = *(_QWORD *)(v5 - 8);
  v71 = v5;
  MEMORY[0x1E0C80A78](v5);
  v69 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963780);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v59 - v11;
  v13 = (int *)type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  v14 = *((_QWORD *)v13 - 1);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v59 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v59 - v21;
  v23 = (uint64_t)v3 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
  swift_beginAccess();
  sub_1D2537078(v23, (uint64_t)v12, &qword_1ED963780);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13) == 1)
    return sub_1D253703C((uint64_t)v12, &qword_1ED963780);
  sub_1D2567D20((uint64_t)v12, (uint64_t)v22);
  if (qword_1ED96C1C8 != -1)
    swift_once();
  v25 = sub_1D26CC09C();
  __swift_project_value_buffer(v25, (uint64_t)qword_1ED977F80);
  sub_1D256888C((uint64_t)v22, (uint64_t)v20);
  swift_retain_n();
  v26 = v67;
  swift_bridgeObjectRetain_n();
  v27 = sub_1D26CC084();
  v28 = sub_1D26CDD04();
  v62 = v28;
  v29 = os_log_type_enabled(v27, v28);
  v64 = v14;
  v65 = v10;
  v63 = v23;
  if (v29)
  {
    v30 = swift_slowAlloc();
    v61 = swift_slowAlloc();
    v72 = v61;
    *(_DWORD *)v30 = 136446722;
    v60 = v27;
    v32 = v4[2];
    v31 = v4[3];
    swift_bridgeObjectRetain();
    v73 = sub_1D2537880(v32, v31, &v72);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    sub_1D256888C((uint64_t)v20, (uint64_t)v17);
    v73 = 60;
    v74 = 0xE100000000000000;
    sub_1D26CB868();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    v33 = v73;
    v34 = v74;
    sub_1D2567BB0((uint64_t)v17);
    v73 = sub_1D2537880(v33, v34, &v72);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D2567BB0((uint64_t)v20);
    *(_WORD *)(v30 + 22) = 2082;
    swift_bridgeObjectRetain();
    v73 = sub_1D2537880(v66, v26, &v72);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    v35 = v60;
    _os_log_impl(&dword_1D2531000, v60, (os_log_type_t)v62, "Destroy promise for %{public}s - %{public}s for reason: %{public}s", (uint8_t *)v30, 0x20u);
    v36 = v61;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v36, -1, -1);
    MEMORY[0x1D823A5E0](v30, -1, -1);

  }
  else
  {
    swift_release_n();
    sub_1D2567BB0((uint64_t)v20);

    swift_bridgeObjectRelease_n();
  }
  sub_1D26CDE0C();
  if (qword_1ED96C1C0 != -1)
    swift_once();
  v38 = v69;
  v37 = v70;
  v39 = v71;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v69, &v22[v13[8]], v71);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9621A8);
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1D26D1280;
  v41 = sub_1D25688D0();
  v42 = (v68 & 1) == 0;
  v43 = 20302;
  if ((v68 & 1) != 0)
    v43 = 5457241;
  v44 = 0xE200000000000000;
  *(_QWORD *)(v40 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v40 + 64) = v41;
  if (!v42)
    v44 = 0xE300000000000000;
  *(_QWORD *)(v40 + 32) = v43;
  *(_QWORD *)(v40 + 40) = v44;
  sub_1D26CBFD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v39);
  v45 = v4 + 4;
  v46 = v4[8];
  __swift_project_boxed_opaque_existential_0(v4 + 4, v4[7]);
  v47 = *(void (**)(void))(v46 + 32);
  v48 = *(id *)&v22[v13[6]];
  v47();

  v49 = v4[8];
  __swift_project_boxed_opaque_existential_0(v4 + 4, v4[7]);
  v50 = *(void (**)(void))(v49 + 32);
  v51 = *(id *)&v22[v13[7]];
  v50();
  v52 = v63;

  v53 = v4[7];
  v54 = v4[8];
  __swift_project_boxed_opaque_existential_0(v4 + 4, v53);
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 40))(&v22[v13[5]], v53, v54);
  v55 = v64;
  v57 = v4[7];
  v56 = v4[8];
  __swift_project_boxed_opaque_existential_0(v45, v57);
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 40))(v22, v57, v56);
  v58 = (uint64_t)v65;
  (*(void (**)(char *, uint64_t, uint64_t, int *))(v55 + 56))(v65, 1, 1, v13);
  swift_beginAccess();
  sub_1D2566B04(v58, v52);
  swift_endAccess();
  return sub_1D2567BB0((uint64_t)v22);
}

uint64_t DataProtectedArchiveFilePromise.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination;
  v2 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel, &qword_1ED96FC90);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates, &qword_1ED963780);
  return v0;
}

uint64_t DataProtectedArchiveFilePromise.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination;
  v2 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel, &qword_1ED96FC90);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates, &qword_1ED963780);
  return swift_deallocClassInstance();
}

uint64_t sub_1D256731C()
{
  return sub_1D256524C();
}

uint64_t sub_1D2567330@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2565520(a1);
}

uint64_t sub_1D2567344@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void sub_1D2567354(void (*a1)(void), _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, unint64_t, char *, uint64_t, uint64_t, uint64_t, void (*)(void), uint64_t);
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  id v37;
  void *v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  void (*v58)(void);
  uint64_t v59;
  unsigned int (*v60)(char *, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  _QWORD v65[3];
  void (*v66)(void);
  uint64_t v67;
  uint64_t v68;

  v4 = v2;
  v57 = a2;
  v58 = a1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_1D26CB880();
  v62 = *(_QWORD *)(v68 - 8);
  v8 = MEMORY[0x1E0C80A78](v68);
  v54 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v56 = (char *)&v49 - v10;
  v59 = sub_1D26CB9DC();
  v61 = *(_QWORD *)(v59 - 8);
  MEMORY[0x1E0C80A78](v59);
  v63 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963780);
  v13 = MEMORY[0x1E0C80A78](v12);
  v55 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v49 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v49 - v18;
  v20 = v4 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
  swift_beginAccess();
  sub_1D2537078(v20, (uint64_t)v19, &qword_1ED963780);
  v21 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48);
  if (v60(v19, 1, v21) == 1)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_1D26CD374();
  v22 = *(id *)&v19[*(int *)(v21 + 28)];
  sub_1D2567BB0((uint64_t)v19);
  v23 = sub_1D26CD368();

  if (v3)
    return;
  v53 = 0;
  v58();
  v66 = (void (*)(void))sub_1D26CD7B8();
  v67 = MEMORY[0x1E0CF0B30];
  v65[0] = v23;
  v52 = v23;
  swift_retain();
  v24 = v63;
  sub_1D2567948(v65, v63);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
  v51 = v4 + 32;
  sub_1D2538510(v4 + 32, (uint64_t)v65);
  v25 = v67;
  v58 = v66;
  v57 = __swift_project_boxed_opaque_existential_0(v65, (uint64_t)v66);
  v50 = v20;
  sub_1D2537078(v20, (uint64_t)v17, &qword_1ED963780);
  if (v60(v17, 1, v21) == 1)
    goto LABEL_13;
  v26 = &v17[*(int *)(v21 + 20)];
  v27 = v56;
  v49 = *(void (**)(char *, char *, uint64_t))(v62 + 16);
  v49(v56, v26, v68);
  sub_1D2567BB0((uint64_t)v17);
  v28 = v61;
  v29 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 16))(v7, v24, v59);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v7, 0, 1, v29);
  v30 = *(void (**)(char *, unint64_t, unint64_t, char *, uint64_t, uint64_t, uint64_t, void (*)(void), uint64_t))(v25 + 48);
  v31 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870];
  v32 = sub_1D25369B0(&qword_1ED961B08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v33 = sub_1D25369B0(&qword_1ED961B00, v31, MEMORY[0x1E0CB0890]);
  v34 = v53;
  v30(v27, 0xD00000000000001DLL, 0x80000001D26DF130, v7, v29, v32, v33, v58, v25);
  if (!v34)
  {
    v53 = 0;
    sub_1D253703C((uint64_t)v7, &qword_1ED96B1E0);
    v35 = v27;
    v36 = *(void (**)(char *, uint64_t))(v62 + 8);
    v36(v35, v68);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
    v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D016F8]), sel_init);
    if (!v37)
    {
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v63, v29);
      swift_release();
      return;
    }
    v38 = v37;
    v39 = objc_msgSend(v37, sel_stringRepresentation);

    v40 = sub_1D26CD938();
    v42 = v41;

    sub_1D2538510(v51, (uint64_t)v65);
    v43 = (uint64_t)v66;
    v44 = v67;
    __swift_project_boxed_opaque_existential_0(v65, (uint64_t)v66);
    v45 = v55;
    sub_1D2537078(v50, v55, &qword_1ED963780);
    if (v60((char *)v45, 1, v21) != 1)
    {
      v46 = v45 + *(int *)(v21 + 20);
      v47 = v54;
      v48 = v68;
      v49(v54, (char *)v46, v68);
      sub_1D2567BB0(v45);
      v64[0] = v40;
      v64[1] = v42;
      (*(void (**)(char *, unint64_t, unint64_t, _QWORD *, _QWORD, _QWORD, _QWORD, uint64_t, uint64_t))(v44 + 48))(v47, 0xD00000000000001FLL, 0x80000001D26DF150, v64, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA970], v43, v44);
      swift_bridgeObjectRelease();
      swift_release();
      v36(v47, v48);
      (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v63, v59);
      goto LABEL_9;
    }
LABEL_14:
    __break(1u);
    return;
  }
  swift_release();
  sub_1D253703C((uint64_t)v7, &qword_1ED96B1E0);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v27, v68);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v63, v29);
LABEL_9:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v65);
}

uint64_t sub_1D2567948@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[4];

  v18 = a2;
  v17 = sub_1D26CB628();
  v3 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CD4DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D26CD584();
  sub_1D26CD4D0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1D2538510((uint64_t)a1, (uint64_t)v19);
  v13 = sub_1D26CB9DC();
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
  {
    __swift_project_boxed_opaque_existential_0(v19, v19[3]);
    sub_1D26CD5C0();
    sub_1D26CB61C();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
    sub_1D253703C((uint64_t)v8, &qword_1ED96B1E0);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v18, v8, v13);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
}

uint64_t sub_1D2567B20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination;
  v2 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel, &qword_1ED96FC90);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates, &qword_1ED963780);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2567BB0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D2567BEC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0C0);
  v2 = sub_1D26CE214();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1D2537078(v6, (uint64_t)&v15, &qword_1ED9620A8);
    v7 = v15;
    v8 = v16;
    result = sub_1D2567D90(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1D2538448(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1D2567D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1D2567D64()
{
  uint64_t v0;

  sub_1D2565CA4(*(_BYTE **)(v0 + 16), *(_QWORD **)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1D2567D70(void (*a1)(void))
{
  a1();
  return _swift_stdlib_bridgeErrorToNSError();
}

unint64_t sub_1D2567D90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D26CE460();
  sub_1D26CD9D4();
  v4 = sub_1D26CE49C();
  return sub_1D2567DF4(a1, a2, v4);
}

unint64_t sub_1D2567DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1D26CE3D0() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1D26CE3D0() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1D26CE3D0() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

void sub_1D2567F38(uint64_t *a1, _QWORD **a2, uint64_t a3, uint64_t (*a4)(void))
{
  void *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = (void *)a4();
  v7 = *a1 + 8;
  sub_1D26CDF50();
  *a1 = v7;
  v8 = *a2;
  if (*a2)
  {
    *v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {

  }
}

uint64_t dispatch thunk of FilePromise.open()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FilePromise.accept()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of FilePromise.reject()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FilePromise.reject(withReason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_1D2568028()
{
  return type metadata accessor for DataProtectedArchiveFilePromise(0);
}

uint64_t type metadata accessor for DataProtectedArchiveFilePromise(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED9637A0);
}

void sub_1D2568044()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D26CB880();
  if (v0 <= 0x3F)
  {
    sub_1D2568174(319, (unint64_t *)&qword_1ED962058, (void (*)(uint64_t))MEMORY[0x1E0CF0430]);
    if (v1 <= 0x3F)
    {
      sub_1D2568174(319, &qword_1ED963788, (void (*)(uint64_t))type metadata accessor for DataProtectedArchiveFilePromise.Intermediates);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DataProtectedArchiveFilePromise()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DataProtectedArchiveFilePromise.open()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DataProtectedArchiveFilePromise.accept()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DataProtectedArchiveFilePromise.reject()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DataProtectedArchiveFilePromise.reject(withReason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

void sub_1D2568174(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1D26CDF38();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_1D25681C0()
{
  return type metadata accessor for WidgetArchiveFilePromise(0);
}

uint64_t type metadata accessor for WidgetArchiveFilePromise(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED9636F0);
}

uint64_t sub_1D25681DC()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_1D2568210(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  id v18;
  id v19;
  uint64_t v20;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CB880();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    v9 = a3[6];
    v10 = a3[7];
    v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    v12 = *(void **)((char *)a2 + v10);
    *(uint64_t *)((char *)a1 + v10) = (uint64_t)v12;
    v13 = a3[8];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = sub_1D26CC00C();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    v18 = v11;
    v19 = v12;
    v17(v14, v15, v16);
  }
  return a1;
}

uint64_t sub_1D2568300(uint64_t a1, int *a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1D26CB880();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);

  v6 = a1 + a2[8];
  v7 = sub_1D26CC00C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

uint64_t sub_1D2568390(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  id v17;
  id v18;

  v6 = sub_1D26CB880();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = a3[7];
  v10 = *(void **)(a2 + v8);
  *(_QWORD *)(a1 + v8) = v10;
  v11 = *(void **)(a2 + v9);
  *(_QWORD *)(a1 + v9) = v11;
  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1D26CC00C();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  v17 = v10;
  v18 = v11;
  v16(v13, v14, v15);
  return a1;
}

uint64_t sub_1D2568454(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = sub_1D26CB880();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = *(void **)(a2 + v8);
  v10 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = v9;
  v11 = v9;

  v12 = a3[7];
  v13 = *(void **)(a2 + v12);
  v14 = *(void **)(a1 + v12);
  *(_QWORD *)(a1 + v12) = v13;
  v15 = v13;

  v16 = a3[8];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1D26CC00C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t sub_1D2568520(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1D26CB880();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  v9 = a3[8];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1D26CC00C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t sub_1D25685D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = sub_1D26CB880();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  v8 = a3[6];
  v9 = *(void **)(a1 + v8);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);

  v10 = a3[7];
  v11 = *(void **)(a1 + v10);
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);

  v12 = a3[8];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_1D26CC00C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 40))(v13, v14, v15);
  return a1;
}

uint64_t sub_1D2568694()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25686A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1D26CC00C();
    v10 = a1 + *(int *)(a3 + 32);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t sub_1D2568748()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2568754(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D26CB880();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return result;
    }
    v10 = sub_1D26CC00C();
    v12 = a1 + *(int *)(a4 + 32);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D25687F8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CB880();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CC00C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D256888C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D25688D0()
{
  unint64_t result;

  result = qword_1ED962068;
  if (!qword_1ED962068)
  {
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED962068);
  }
  return result;
}

uint64_t dispatch thunk of EnvironmentProvidingFactory.system.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of EnvironmentProvidingFactory.makeProvider(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

void WatchCompactJindoView.init(isLeftToRight:leadingView:trailingView:spacing:smartStackPlatterPadding:launchRequestHandler:)()
{
  type metadata accessor for WatchCompactJindoView();
}

uint64_t sub_1D2568988(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t result;

  v12 = &v8[a1[17]];
  *v8 = v7;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32))(&v8[a1[13]], v6, v2);
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(&v8[a1[14]], v5, v1);
  *(_QWORD *)&v8[a1[15]] = v10;
  *(_QWORD *)&v8[a1[16]] = v9;
  *v12 = v4;
  v12[1] = v3;
  return result;
}

void type metadata accessor for WatchCompactJindoView()
{
  JUMPOUT(0x1D823A430);
}

uint64_t WatchCompactJindoView.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  uint64_t v51;
  _QWORD v52[2];
  _QWORD v53[2];
  _QWORD v54[2];
  _QWORD v55[2];
  _QWORD v56[3];

  v46 = a2;
  v47 = a1;
  v2 = *(_QWORD *)(a1 + 24);
  v44 = *(_QWORD *)(a1 + 16);
  swift_getTupleTypeMetadata3();
  v3 = sub_1D26CD044();
  v4 = MEMORY[0x1E0CE0680];
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0680], v3);
  v5 = sub_1D26CCF48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82708);
  v6 = sub_1D26CC3E4();
  swift_getTupleTypeMetadata3();
  v7 = sub_1D26CD044();
  MEMORY[0x1D823A4E4](v4, v7);
  v8 = sub_1D26CCF48();
  v9 = sub_1D26CC3E4();
  v10 = sub_1D26CC918();
  v11 = MEMORY[0x1E0CDFB10];
  v12 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFB10], v5);
  v13 = sub_1D2568E60();
  v56[0] = v12;
  v56[1] = v13;
  v14 = MEMORY[0x1E0CD9C20];
  v15 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v6, v56);
  v55[0] = MEMORY[0x1D823A4E4](v11, v8);
  v55[1] = v13;
  v54[0] = v15;
  v54[1] = MEMORY[0x1D823A4E4](v14, v9, v55);
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v10, v54);
  v16 = sub_1D26CCF9C();
  v41 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - v17;
  v19 = sub_1D26CC3E4();
  v42 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v38 - v20;
  v22 = sub_1D26CC3E4();
  v43 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v39 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v40 = (uint64_t)&v38 - v25;
  v48 = v44;
  v49 = v2;
  v50 = *(_OWORD *)(v47 + 32);
  v26 = v45;
  v51 = v45;
  sub_1D26CC888();
  sub_1D26CCF90();
  sub_1D26CCB70();
  v27 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFCC0], v16);
  sub_1D26CCE40();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v16);
  v28 = (uint64_t *)(v26 + *(int *)(v47 + 68));
  v29 = *v28;
  v30 = v28[1];
  v53[0] = v27;
  v53[1] = MEMORY[0x1E0CD9758];
  v31 = MEMORY[0x1E0CD9C20];
  v32 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v19, v53);
  v33 = (uint64_t)v39;
  sub_1D2610958(v29, v30, v19);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v21, v19);
  v34 = sub_1D2569900();
  v52[0] = v32;
  v52[1] = v34;
  MEMORY[0x1D823A4E4](v31, v22, v52);
  v35 = v40;
  sub_1D25EDCB8(v33, v22, v40);
  v36 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
  v36(v33, v22);
  sub_1D25EAC44(v35, v22, v46);
  return ((uint64_t (*)(uint64_t, uint64_t))v36)(v35, v22);
}

unint64_t sub_1D2568E60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC82710;
  if (!qword_1EFC82710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82708);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDBEF0], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC82710);
  }
  return result;
}

uint64_t sub_1D2568EAC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v50[2];
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 *v73;
  _QWORD v74[2];
  _QWORD v75[2];
  _QWORD v76[2];
  _QWORD v77[2];
  _QWORD v78[2];
  _QWORD v79[2];
  _QWORD v80[2];

  v62 = a5;
  v61 = a4;
  v60 = a1;
  v66 = a6;
  swift_getTupleTypeMetadata3();
  v8 = sub_1D26CD044();
  v9 = MEMORY[0x1E0CE0680];
  v56 = v8;
  v54 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0680], v8);
  v10 = sub_1D26CCF48();
  v57 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v55 = (char *)v50 - v11;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82708);
  v65 = v10;
  v12 = sub_1D26CC3E4();
  v58 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v59 = (uint64_t)v50 - v16;
  swift_getTupleTypeMetadata3();
  v17 = sub_1D26CD044();
  v50[1] = MEMORY[0x1D823A4E4](v9, v17);
  v18 = sub_1D26CCF48();
  v51 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v50 - v19;
  v68 = v21;
  v22 = sub_1D26CC3E4();
  v52 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v53 = (uint64_t)v50 - v26;
  v64 = sub_1D26CC918();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x1E0C80A78](v64);
  v67 = (uint64_t)v50 - v27;
  LODWORD(v8) = *v60;
  v69 = a2;
  v70 = a3;
  v71 = v61;
  v72 = v62;
  v73 = v60;
  sub_1D26CC7B0();
  if ((_DWORD)v8 == 1)
  {
    sub_1D26CCF3C();
    v28 = MEMORY[0x1E0CDFB10];
    v29 = v68;
    v30 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFB10], v68);
    sub_1D26CCDBC();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v20, v29);
    v31 = sub_1D2568E60();
    v75[0] = v30;
    v75[1] = v31;
    v32 = MEMORY[0x1E0CD9C20];
    MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v22, v75);
    v33 = v53;
    sub_1D25EDCB8((uint64_t)v25, v22, v53);
    v34 = *(void (**)(char *, uint64_t))(v52 + 8);
    v34(v25, v22);
    sub_1D25EAC44(v33, v22, (uint64_t)v25);
    v35 = v65;
    v74[0] = MEMORY[0x1D823A4E4](v28, v65);
    v74[1] = v31;
    MEMORY[0x1D823A4E4](v32, v12, v74);
    sub_1D25EAC5C((uint64_t)v25, v22);
    v34(v25, v22);
    v34((char *)v33, v22);
  }
  else
  {
    v36 = v55;
    sub_1D26CCF3C();
    v28 = MEMORY[0x1E0CDFB10];
    v35 = v65;
    v37 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFB10], v65);
    sub_1D26CCDBC();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v35);
    v38 = sub_1D2568E60();
    v80[0] = v37;
    v80[1] = v38;
    v39 = MEMORY[0x1E0CD9C20];
    MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v12, v80);
    v40 = v59;
    sub_1D25EDCB8((uint64_t)v15, v12, v59);
    v41 = *(void (**)(char *, uint64_t))(v58 + 8);
    v41(v15, v12);
    sub_1D25EAC44(v40, v12, (uint64_t)v15);
    v79[0] = MEMORY[0x1D823A4E4](v28, v68);
    v79[1] = v38;
    MEMORY[0x1D823A4E4](v39, v22, v79);
    sub_1D25EAD20((uint64_t)v15, v22, v12);
    v41(v15, v12);
    v41((char *)v40, v12);
  }
  v42 = MEMORY[0x1D823A4E4](v28, v68);
  v43 = sub_1D2568E60();
  v78[0] = v42;
  v78[1] = v43;
  v44 = MEMORY[0x1E0CD9C20];
  v45 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v22, v78);
  v77[0] = MEMORY[0x1D823A4E4](v28, v35);
  v77[1] = v43;
  v46 = MEMORY[0x1D823A4E4](v44, v12, v77);
  v76[0] = v45;
  v76[1] = v46;
  v47 = v64;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v64, v76);
  v48 = v67;
  sub_1D25EAC44(v67, v47, v66);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8))(v48, v47);
}

uint64_t sub_1D2569508()
{
  return sub_1D256A6D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D2568EAC);
}

void sub_1D2569514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = MEMORY[0x1E0C80A78](a1);
  v2 = MEMORY[0x1E0C80A78](v1);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  type metadata accessor for WatchCompactJindoView();
}

uint64_t sub_1D25695F8(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  void (*v19)(uint64_t, uint64_t);

  sub_1D25EDCB8(v9 + a1[13], v1, v8);
  v12 = a1[14];
  v13 = *(_QWORD *)(v9 + a1[15]);
  sub_1D25EDCB8(v9 + v12, v2, v7);
  v14 = *(_QWORD *)(v10 - 200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v5, v8, v1);
  *(_QWORD *)(v10 - 128) = v13;
  *(_BYTE *)(v10 - 120) = 0;
  *(_QWORD *)(v10 - 112) = v5;
  *(_QWORD *)(v10 - 104) = v10 - 128;
  v15 = *(_QWORD *)(v10 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v3, v7, v2);
  *(_QWORD *)(v10 - 96) = v3;
  v16 = MEMORY[0x1E0CDFC10];
  *(_QWORD *)(v10 - 152) = v1;
  *(_QWORD *)(v10 - 144) = v16;
  *(_QWORD *)(v10 - 136) = v2;
  v17 = MEMORY[0x1E0CDFBE8];
  *(_QWORD *)(v10 - 176) = v4;
  *(_QWORD *)(v10 - 168) = v17;
  *(_QWORD *)(v10 - 160) = v6;
  sub_1D26BABC4((uint64_t *)(v10 - 112), 3uLL, v10 - 152);
  v18 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v18(v7, v2);
  v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  v19(v8, v1);
  v18(v3, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v19)(v5, v1);
}

void sub_1D2569704(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = MEMORY[0x1E0C80A78](a1);
  v2 = MEMORY[0x1E0C80A78](v1);
  v3 = MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  type metadata accessor for WatchCompactJindoView();
}

uint64_t sub_1D25697EC(int *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t);
  void (*v17)(uint64_t, uint64_t);

  sub_1D25EDCB8(v8 + a1[14], v1, v7);
  v11 = *(_QWORD *)(v8 + a1[15]);
  sub_1D25EDCB8(v8 + a1[13], v2, v6);
  v12 = *(_QWORD *)(v9 - 200);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v4, v7, v1);
  *(_QWORD *)(v9 - 128) = v11;
  *(_BYTE *)(v9 - 120) = 0;
  *(_QWORD *)(v9 - 112) = v4;
  *(_QWORD *)(v9 - 104) = v9 - 128;
  v13 = *(_QWORD *)(v9 - 192);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v3, v6, v2);
  *(_QWORD *)(v9 - 96) = v3;
  v14 = MEMORY[0x1E0CDFC10];
  *(_QWORD *)(v9 - 152) = v1;
  *(_QWORD *)(v9 - 144) = v14;
  *(_QWORD *)(v9 - 136) = v2;
  v15 = MEMORY[0x1E0CDFBE8];
  *(_QWORD *)(v9 - 176) = *(_QWORD *)(v9 - 208);
  *(_QWORD *)(v9 - 168) = v15;
  *(_QWORD *)(v9 - 160) = v5;
  sub_1D26BABC4((uint64_t *)(v9 - 112), 3uLL, v9 - 152);
  v16 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v16(v6, v2);
  v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v17(v7, v1);
  v16(v3, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v17)(v4, v1);
}

unint64_t sub_1D2569900()
{
  unint64_t result;

  result = qword_1EFC82718[0];
  if (!qword_1EFC82718[0])
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D6F74, &type metadata for LiveActivityLaunchHandlingModifier);
    atomic_store(result, qword_1EFC82718);
  }
  return result;
}

uint64_t sub_1D2569944()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D256997C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D2569984()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D2569A34(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v4 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v5 + 64) + v8;
  v10 = *(_QWORD *)(v7 + 64) + 7;
  if ((v8 | v6) > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v5 + 80)) & 0x100000) != 0
    || ((((((v10 + ((v9 + ((v6 + 1) & ~v6)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v13 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v13 + (((v8 | v6) & 0xF8 ^ 0x1F8) & ((v8 | v6) + 16)));
  }
  else
  {
    v14 = ~v8;
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v15 = ((unint64_t)a1 + v6 + 1) & ~v6;
    v16 = ((unint64_t)a2 + v6 + 1) & ~v6;
    (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v15, v16);
    v17 = (v15 + v9) & v14;
    v18 = (v16 + v9) & v14;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v17, v18, v4);
    v19 = (_QWORD *)((v10 + v17) & 0xFFFFFFFFFFFFF8);
    v20 = (_QWORD *)((v10 + v18) & 0xFFFFFFFFFFFFF8);
    *v19 = *v20;
    v21 = (_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFF8);
    *v21 = *v22;
    v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    if (*(_QWORD *)v24 < 0xFFFFFFFFuLL)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
      return v3;
    }
    v25 = *(_QWORD *)(v24 + 8);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *(_QWORD *)(v23 + 8) = v25;
  }
  swift_retain();
  return v3;
}

uint64_t sub_1D2569BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  v4 = (a1 + *(unsigned __int8 *)(v3 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v4);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  result = (*(uint64_t (**)(unint64_t))(v6 + 8))(v7);
  if (*(_QWORD *)((((((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) >= 0xFFFFFFFFuLL)
    return swift_release();
  return result;
}

_BYTE *sub_1D2569C70(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = ((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_QWORD *)v21 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  else
  {
    v22 = *(_QWORD *)(v21 + 8);
    *(_QWORD *)v20 = *(_QWORD *)v21;
    *(_QWORD *)(v20 + 8) = v22;
    swift_retain();
  }
  return a1;
}

_BYTE *sub_1D2569D70(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v24 = v21[1];
      *v20 = v22;
      v20[1] = v24;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    return a1;
  }
  if (v22 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v23 = v21[1];
  *v20 = v22;
  v20[1] = v23;
  swift_retain();
  swift_release();
  return a1;
}

_BYTE *sub_1D2569EB0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 32))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = ((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  v21 = (uint64_t *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if ((unint64_t)*v21 < 0xFFFFFFFF)
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
  }
  else
  {
    v23 = v21[1];
    *(_QWORD *)v20 = v22;
    *(_QWORD *)(v20 + 8) = v23;
  }
  return a1;
}

_BYTE *sub_1D2569FAC(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD *v20;
  unint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  *a1 = *a2;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = (unint64_t)&a1[v6 + 1] & ~v6;
  v8 = (unint64_t)&a2[v6 + 1] & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v7, v8);
  v9 = *(_QWORD *)(v5 + 64);
  v10 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v11 = *(unsigned __int8 *)(v10 + 80);
  v12 = v9 + v11;
  v13 = (v12 + v7) & ~v11;
  v14 = (v12 + v8) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v10 + 40))(v13, v14);
  v15 = *(_QWORD *)(v10 + 64) + 7;
  v16 = (_QWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v15 + v14) & 0xFFFFFFFFFFFFFFF8);
  *v16 = *v17;
  v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = (_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFFFF8);
  v21 = (unint64_t *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  v22 = *v21;
  if (*v20 < 0xFFFFFFFFuLL)
  {
    if (v22 >= 0xFFFFFFFF)
    {
      v24 = v21[1];
      *v20 = v22;
      v20[1] = v24;
      return a1;
    }
LABEL_7:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    return a1;
  }
  if (v22 < 0xFFFFFFFF)
  {
    swift_release();
    goto LABEL_7;
  }
  v23 = v21[1];
  *v20 = v22;
  v20[1] = v23;
  swift_release();
  return a1;
}

uint64_t sub_1D256A0E0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v6 <= v8)
    v9 = *(_DWORD *)(v7 + 84);
  else
    v9 = *(_DWORD *)(v5 + 84);
  if (v9 <= 0x7FFFFFFE)
    v9 = 2147483646;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v5 + 80);
  v11 = *(_QWORD *)(v5 + 64);
  v12 = *(unsigned __int8 *)(v7 + 80);
  v13 = *(_QWORD *)(v7 + 64) + 7;
  if (v9 >= a2)
  {
    v18 = (a1 + v10 + 1) & ~v10;
    if (v6 == v9)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v5 + 48))(v18, *(unsigned int *)(v5 + 84), v4);
    }
    else
    {
      v19 = (v18 + v11 + v12) & ~v12;
      if (v8 == v9)
      {
        return (*(uint64_t (**)(uint64_t))(v7 + 48))(v19);
      }
      else
      {
        v20 = *(_QWORD *)((((((v13 + v19) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFF8);
        if (v20 >= 0xFFFFFFFF)
          LODWORD(v20) = -1;
        if ((v20 + 1) >= 2)
          return v20;
        else
          return 0;
      }
    }
  }
  else
  {
    if (((((((((v13 + ((v11 + v12 + ((v10 + 1) & ~v10)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v14 = 2;
    else
      v14 = a2 - v9 + 1;
    if (v14 >= 0x10000)
      v15 = 4;
    else
      v15 = 2;
    if (v14 < 0x100)
      v15 = 1;
    if (v14 >= 2)
      v16 = v15;
    else
      v16 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D256A1A0 + 4 * byte_1D26D1800[v16]))();
  }
}

void sub_1D256A274(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v5 + 84) <= *(_DWORD *)(v6 + 84))
    v7 = *(_DWORD *)(v6 + 84);
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (v7 <= 0x7FFFFFFE)
    v7 = 2147483646;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = *(unsigned __int8 *)(v6 + 80);
  if (v7 >= a3)
  {
    v12 = 0u;
    if (a2 <= v7)
      goto LABEL_19;
  }
  else
  {
    if (((((((*(_DWORD *)(v6 + 64)
             + 7
             + ((*(_DWORD *)(v5 + 64) + (_DWORD)v9 + (((_DWORD)v8 + 1) & ~(_DWORD)v8)) & ~(_DWORD)v9)) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v10 = a3 - v7 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (a2 <= v7)
LABEL_19:
      __asm { BR              X6 }
  }
  if (((((((*(_DWORD *)(v6 + 64)
           + 7
           + ((*(_DWORD *)(v5 + 64) + (_DWORD)v9 + (((_DWORD)v8 + 1) & ~(_DWORD)v8)) & ~(_DWORD)v9)) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v13 = ~v7 + a2;
    bzero(a1, ((((((*(_QWORD *)(v6 + 64) + 7 + ((*(_QWORD *)(v5 + 64) + v9 + ((v8 + 1) & ~v8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 16);
    *a1 = v13;
  }
  __asm { BR              X10 }
}

void sub_1D256A3B4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1D256A470);
}

void sub_1D256A3BC(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1D256A3C4);
  JUMPOUT(0x1D256A470);
}

void sub_1D256A414()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D256A470);
}

void sub_1D256A41C()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D256A470);
}

uint64_t sub_1D256A424(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_WORD *)(v14 + v15) = 0;
  if (!a2)
    JUMPOUT(0x1D256A470);
  v3 = (v14 + v13 + 1) & a1;
  if (v6 == v9)
  {
    v4 = *(uint64_t (**)(uint64_t))(v10 + 56);
  }
  else
  {
    v3 = (v3 + v12 + v11) & v7;
    if (a3 != v9)
      JUMPOUT(0x1D256A430);
    v4 = *(uint64_t (**)(uint64_t))(v8 + 56);
  }
  return v4(v3);
}

uint64_t sub_1D256A488()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];
  _QWORD v18[2];
  _QWORD v19[2];
  _QWORD v20[2];
  _QWORD v21[2];

  swift_getTupleTypeMetadata3();
  v0 = sub_1D26CD044();
  v1 = MEMORY[0x1E0CE0680];
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CE0680], v0);
  v2 = sub_1D26CCF48();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82708);
  v3 = sub_1D26CC3E4();
  swift_getTupleTypeMetadata3();
  v4 = sub_1D26CD044();
  MEMORY[0x1D823A4E4](v1, v4);
  v5 = sub_1D26CCF48();
  v6 = sub_1D26CC3E4();
  v7 = sub_1D26CC918();
  v8 = MEMORY[0x1E0CDFB10];
  v9 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFB10], v2);
  v10 = sub_1D2568E60();
  v21[0] = v9;
  v21[1] = v10;
  v11 = MEMORY[0x1E0CD9C20];
  v12 = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v3, v21);
  v20[0] = MEMORY[0x1D823A4E4](v8, v5);
  v20[1] = v10;
  v19[0] = v12;
  v19[1] = MEMORY[0x1D823A4E4](v11, v6, v20);
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v7, v19);
  v13 = sub_1D26CCF9C();
  v14 = sub_1D26CC3E4();
  v15 = sub_1D26CC3E4();
  v18[0] = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDFCC0], v13);
  v18[1] = MEMORY[0x1E0CD9758];
  v17[0] = MEMORY[0x1D823A4E4](v11, v14, v18);
  v17[1] = sub_1D2569900();
  return MEMORY[0x1D823A4E4](v11, v15, v17);
}

uint64_t sub_1D256A6BC()
{
  return sub_1D256A6D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D2569704);
}

uint64_t sub_1D256A6C8()
{
  return sub_1D256A6D4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1D2569514);
}

uint64_t sub_1D256A6D4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[6], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1D256A6E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  char *v13;
  __int128 v14;
  _OWORD v16[3];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA50);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v6 = sub_1D26CC7B0();
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C978);
  sub_1D256A890(a1, (uint64_t)&v6[*(int *)(v10 + 44)]);
  sub_1D26CC330();
  sub_1D26CC330();
  v11 = *(void **)(a1 + *(int *)(type metadata accessor for InlineTextView(0) + 20));
  if (!v11)
    goto LABEL_5;
  v12 = objc_msgSend(v11, sel_horizontalAlignment);
  if (v12 == (id)1)
  {
    sub_1D26CD014();
    goto LABEL_7;
  }
  if (v12 == (id)2)
    sub_1D26CD020();
  else
LABEL_5:
    sub_1D26CD008();
LABEL_7:
  sub_1D26CC324();
  sub_1D2537078((uint64_t)v6, (uint64_t)v9, &qword_1ED96CD40);
  v13 = &v9[*(int *)(v7 + 36)];
  v14 = v16[1];
  *(_OWORD *)v13 = v16[0];
  *((_OWORD *)v13 + 1) = v14;
  *((_OWORD *)v13 + 2) = v16[2];
  sub_1D253703C((uint64_t)v6, &qword_1ED96CD40);
  return sub_1D25384CC((uint64_t)v9, a2, &qword_1ED96CA50);
}

uint64_t sub_1D256A890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  id v26;
  char *v27;
  id v28;
  char *v29;
  uint64_t KeyPath;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;

  v48 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C948);
  MEMORY[0x1E0C80A78](v3);
  v46 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C950);
  MEMORY[0x1E0C80A78](v5);
  v49 = (uint64_t *)((char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v47 = sub_1D26CB9DC();
  v45 = *(_QWORD *)(v47 - 8);
  v7 = MEMORY[0x1E0C80A78](v47);
  v44 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v42 = (char *)&v38 - v9;
  v10 = sub_1D26CC09C();
  v39 = *(_QWORD *)(v10 - 8);
  v11 = v39;
  v40 = v10;
  MEMORY[0x1E0C80A78](v10);
  v41 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for InlineDateModifier(0);
  MEMORY[0x1E0C80A78](v43);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v15);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C9A0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1D26CCB1C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, a1, v19);
  v20 = type metadata accessor for InlineTextView(0);
  v21 = *(void **)(a1 + *(int *)(v20 + 20));
  v22 = a1 + *(int *)(v20 + 24);
  v23 = type metadata accessor for MetadataInlineView(0);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v25 = v40;
  v24(&v18[*(int *)(v23 + 24)], v22, v40);
  *(_QWORD *)&v18[*(int *)(v23 + 20)] = v21;
  v26 = v21;
  sub_1D26CCA74();
  sub_1D26CD1E8();
  v27 = v41;
  v24(v41, v22, v25);
  v28 = v26;
  v29 = v42;
  sub_1D26CB9D0();
  *v49 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C928);
  swift_storeEnumTagMultiPayload();
  KeyPath = swift_getKeyPath();
  v31 = (uint64_t)v46;
  *v46 = KeyPath;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C918);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)v14 = v21;
  v32 = v43;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(&v14[*(int *)(v43 + 20)], v27, v25);
  v33 = v45;
  v34 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v44, v29, v47);
  sub_1D26CCF18();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v34);
  sub_1D25384CC((uint64_t)v49, (uint64_t)&v14[*(int *)(v32 + 28)], &qword_1ED96C950);
  sub_1D25384CC(v31, (uint64_t)&v14[*(int *)(v32 + 32)], &qword_1ED96C948);
  v35 = v48;
  sub_1D2537078((uint64_t)v18, v48, &qword_1ED96C9A0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA80);
  sub_1D2539ADC((uint64_t)v14, v35 + *(int *)(v36 + 36), type metadata accessor for InlineDateModifier);
  return sub_1D253703C((uint64_t)v18, &qword_1ED96C9A0);
}

uint64_t sub_1D256AC8C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t KeyPath;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a2;
  v25 = a3;
  v27 = a4;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB08);
  MEMORY[0x1E0C80A78](v26);
  v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CCA8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1D26CC3D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA10);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v24 - v18;
  if ((a1 & 1) != 0)
  {
    KeyPath = swift_getKeyPath();
    (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0CD9A90], v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))((char *)v9 + *(int *)(v7 + 28), v13, v10);
    *v9 = KeyPath;
    sub_1D2537078((uint64_t)v9, (uint64_t)v17 + *(int *)(v14 + 36), &qword_1ED96CCA8);
    v21 = v25;
    *v17 = v24;
    v17[1] = v21;
    swift_retain();
    sub_1D253703C((uint64_t)v9, &qword_1ED96CCA8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    sub_1D25384CC((uint64_t)v17, (uint64_t)v19, &qword_1ED96CA10);
    sub_1D2537078((uint64_t)v19, (uint64_t)v6, &qword_1ED96CA10);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C988);
    sub_1D2572C98();
    sub_1D2536488(&qword_1ED96C980, &qword_1ED96C988, MEMORY[0x1E0CD9318]);
    sub_1D26CC90C();
    return sub_1D253703C((uint64_t)v19, &qword_1ED96CA10);
  }
  else
  {
    v23 = v25;
    *v6 = v24;
    v6[1] = v23;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C988);
    sub_1D2572C98();
    sub_1D2536488(&qword_1ED96C980, &qword_1ED96C988, MEMORY[0x1E0CD9318]);
    return sub_1D26CC90C();
  }
}

uint64_t sub_1D256AF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;

  v4 = v2;
  v6 = *(_QWORD *)(a1 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBA0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2534120(v4, (uint64_t)v8, type metadata accessor for InlineTextView);
  v12 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v13 = swift_allocObject();
  sub_1D2539ADC((uint64_t)v8, v13 + v12, type metadata accessor for InlineTextView);
  v14 = *(void **)(v4 + *(int *)(a1 + 20));
  if (v14)
    LOBYTE(v14) = objc_msgSend(v14, sel_ignoresRTL);
  sub_1D256AC8C((char)v14, (uint64_t)sub_1D2572C84, v13, (uint64_t)v11);
  swift_release();
  return sub_1D25384CC((uint64_t)v11, a2, &qword_1ED96CBA0);
}

uint64_t MetadataInlineGraphicView.graphic.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D256F1D0((uint64_t (*)(_QWORD))MEMORY[0x1E0CDCD18], a1);
}

uint64_t MetadataInlineGraphicView.graphic.setter(uint64_t a1)
{
  return sub_1D256F218(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDCD18]);
}

uint64_t (*MetadataInlineGraphicView.graphic.modify())()
{
  return CGSizeMake;
}

uint64_t MetadataInlineGraphicView.alwaysTemplate.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MetadataInlineGraphicView(0) + 20));
}

uint64_t type metadata accessor for MetadataInlineGraphicView(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96D348);
}

uint64_t MetadataInlineGraphicView.alwaysTemplate.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MetadataInlineGraphicView(0);
  *(_BYTE *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

uint64_t (*MetadataInlineGraphicView.alwaysTemplate.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MetadataInlineGraphicView(0);
  return CGSizeMake;
}

void *MetadataInlineGraphicView.parameters.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for MetadataInlineGraphicView(0) + 24));
  v2 = v1;
  return v1;
}

void MetadataInlineGraphicView.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for MetadataInlineGraphicView(0) + 24);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*MetadataInlineGraphicView.parameters.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MetadataInlineGraphicView(0);
  return CGSizeMake;
}

uint64_t MetadataInlineGraphicView.init(_:alwaysTemplate:parameters:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = type metadata accessor for MetadataInlineGraphicView(0);
  v9 = *(int *)(v8 + 24);
  v10 = sub_1D26CCAF8();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a4, a1, v10);
  *(_BYTE *)(a4 + *(int *)(v8 + 20)) = a2;
  *(_QWORD *)(a4 + v9) = a3;
  return result;
}

uint64_t MetadataInlineGraphicView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  void *v24;
  uint64_t v25;
  id v26;
  void *v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t KeyPath;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  void *v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v2 = v1;
  v67 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C50);
  v4 = MEMORY[0x1E0C80A78](v3);
  v56 = (uint64_t)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v57 = (uint64_t)&v55 - v6;
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CC0);
  MEMORY[0x1E0C80A78](v65);
  v66 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96E7A0);
  MEMORY[0x1E0C80A78](v8);
  v59 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_1D26CCE70();
  v10 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D26CCAF8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CD4AC();
  v62 = *(_QWORD *)(v17 - 8);
  v63 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962B90);
  MEMORY[0x1E0C80A78](v61);
  v21 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C20);
  MEMORY[0x1E0C80A78](v64);
  v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v2, v13);
  v60 = *(int *)(type metadata accessor for MetadataInlineGraphicView(0) + 24);
  v24 = *(void **)(v2 + v60);
  v68 = v3;
  if (v24)
    v58 = objc_msgSend(v24, sel_allowsNonSystemForegroundColors);
  else
    v58 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D560);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1D26D1280;
  if (v24 && (v26 = objc_msgSend(v24, sel_foregroundColor)) != 0)
  {
    v27 = v26;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0CDF3E0], v55);
    objc_msgSend(v27, sel_red);
    v29 = v28;
    objc_msgSend(v27, sel_green);
    v31 = v30;
    objc_msgSend(v27, sel_blue);
    v33 = v32;
    objc_msgSend(v27, sel_alpha);
    v35 = MEMORY[0x1D8238690](v12, v29, v31, v33, v34);

  }
  else
  {
    v35 = sub_1D26CCEB8();
  }
  *(_QWORD *)(v25 + 32) = v35;
  v69 = v25;
  sub_1D26CDB0C();
  sub_1D26CCAE0();
  v36 = sub_1D26CC8AC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v59, 1, 1, v36);
  sub_1D26CD4B8();
  v37 = sub_1D256B874(0, v24);
  KeyPath = swift_getKeyPath();
  v40 = v62;
  v39 = v63;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v21, v19, v63);
  v41 = (uint64_t *)&v21[*(int *)(v61 + 36)];
  *v41 = KeyPath;
  v41[1] = v37;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v39);
  v42 = v60;
  v43 = *(void **)(v2 + v60);
  sub_1D2537078((uint64_t)v21, (uint64_t)v23, &qword_1ED962B90);
  *(_QWORD *)&v23[*(int *)(v64 + 36)] = v43;
  v44 = v43;
  sub_1D253703C((uint64_t)v21, &qword_1ED962B90);
  if ((sub_1D26CCAE0() & 1) != 0)
  {
    sub_1D2537078((uint64_t)v23, v66, &qword_1ED962C20);
    swift_storeEnumTagMultiPayload();
    sub_1D2575DEC(&qword_1ED962C18, &qword_1ED962C20, (uint64_t (*)(void))sub_1D257186C, (uint64_t (*)(void))sub_1D2571908);
    sub_1D257194C();
    sub_1D26CC90C();
  }
  else
  {
    v45 = *(_QWORD *)(v2 + v42);
    v46 = v68;
    if (v45)
    {
      objc_msgSend(*(id *)(v2 + v42), sel_graphicMaxSize);
      v48 = v47;
      v50 = v49;
    }
    else
    {
      v48 = 0;
      v50 = 0;
    }
    v51 = v56;
    sub_1D2537078((uint64_t)v23, v56, &qword_1ED962C20);
    v52 = v51 + *(int *)(v46 + 36);
    *(_QWORD *)v52 = v48;
    *(_QWORD *)(v52 + 8) = v50;
    *(_BYTE *)(v52 + 16) = v45 == 0;
    v53 = v57;
    sub_1D25384CC(v51, v57, &qword_1ED962C50);
    sub_1D2537078(v53, v66, &qword_1ED962C50);
    swift_storeEnumTagMultiPayload();
    sub_1D2575DEC(&qword_1ED962C18, &qword_1ED962C20, (uint64_t (*)(void))sub_1D257186C, (uint64_t (*)(void))sub_1D2571908);
    sub_1D257194C();
    sub_1D26CC90C();
    sub_1D253703C(v53, &qword_1ED962C50);
  }
  return sub_1D253703C((uint64_t)v23, &qword_1ED962C20);
}

uint64_t sub_1D256B874(uint64_t a1, void *a2)
{
  id v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  sub_1D2571464(a2);
  if (a2)
  {
    v4 = a2;
    v5 = objc_msgSend(v4, sel_fontSpecification);
    if (v5)
    {
      v6 = v5;
      v7 = objc_msgSend(v5, sel_weight);

      if (v7)
      {
        objc_msgSend(v7, sel_doubleValue);
        sub_1D26CCBE8();

        goto LABEL_7;
      }
    }

  }
  sub_1D26CCC00();
LABEL_7:
  v8 = sub_1D26CCC30();
  swift_release();
  if (a2)
  {
    v9 = a2;
    v10 = objc_msgSend(v9, sel_fontSpecification);
    if (v10)
    {
      v11 = v10;
      v12 = objc_msgSend(v10, sel_fontFeatures);

      sub_1D2539514(0, &qword_1ED96D538);
      v13 = sub_1D26CDAF4();

    }
    else
    {
      v13 = MEMORY[0x1E0DEE9D8];
    }

  }
  else
  {
    v13 = MEMORY[0x1E0DEE9D8];
  }
  v14 = sub_1D25716A0(v13, v8);
  swift_release();
  swift_bridgeObjectRelease();
  if (!a1)
    return v14;
  swift_retain();
  v15 = sub_1D26CCC54();
  swift_release_n();
  return v15;
}

uint64_t sub_1D256BA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;

  v1 = type metadata accessor for MetadataInlineTextGraphicView(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB18);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C960);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D256BD04();
  if (v10)
  {
    v11 = v10;
    if (*(_QWORD *)(v10 + 16))
    {
      *v9 = sub_1D26CCB64();
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC827F8);
      sub_1D256BF14(v11, v0, &v9[*(int *)(v12 + 44)]);
      swift_bridgeObjectRelease();
      sub_1D2537078((uint64_t)v9, (uint64_t)v6, &qword_1ED96C960);
      swift_storeEnumTagMultiPayload();
      sub_1D2536488(&qword_1ED96C958, &qword_1ED96C960, MEMORY[0x1E0CD8CC8]);
      sub_1D25369B0(&qword_1ED96D430, type metadata accessor for MetadataInlineTextGraphicView, (uint64_t)&unk_1D26D1ECC);
      sub_1D26CC90C();
      return sub_1D253703C((uint64_t)v9, &qword_1ED96C960);
    }
    swift_bridgeObjectRelease();
  }
  sub_1D26CCA2C();
  sub_1D26CCB04();
  v14 = type metadata accessor for MetadataInlineView(0);
  v15 = *(void **)(v0 + *(int *)(v14 + 20));
  v16 = v0 + *(int *)(v14 + 24);
  v17 = &v3[*(int *)(v1 + 28)];
  v18 = sub_1D26CC09C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, v16, v18);
  v19 = v15;
  sub_1D26CCA68();
  *(_QWORD *)&v3[*(int *)(v1 + 24)] = v15;
  sub_1D2534120((uint64_t)v3, (uint64_t)v6, type metadata accessor for MetadataInlineTextGraphicView);
  swift_storeEnumTagMultiPayload();
  sub_1D2536488(&qword_1ED96C958, &qword_1ED96C960, MEMORY[0x1E0CD8CC8]);
  sub_1D25369B0(&qword_1ED96D430, type metadata accessor for MetadataInlineTextGraphicView, (uint64_t)&unk_1D26D1ECC);
  sub_1D26CC90C();
  return sub_1D25340E4((uint64_t)v3, type metadata accessor for MetadataInlineTextGraphicView);
}

uint64_t sub_1D256BD04()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD v16[2];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v0 = sub_1D26CCB1C();
  v19 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MetadataInlineView.IterableFallback(0);
  v3 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CCB10();
  if (!v6)
    return 0;
  v7 = v6;
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1D2584344(0, v8, 0);
    v9 = v7 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v10 = *(_QWORD *)(v19 + 72);
    v16[1] = v7;
    v17 = v10;
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
    do
    {
      v11(v2, v9, v0);
      v11(v5, (unint64_t)v2, v0);
      _s9ChronoKit26RemoteActivitySubscriptionV2id10activityID12hostIdentity0G5Owner7metrics6family16subscriptionType12creationDateAC10Foundation4UUIDV_SS0A8Services012DeviceScopedJ0VyAO15TypedIdentifierVyAO0xO0O10WidgetHostOGGAC0D9OwnershipO0yB00D17MetricsDefinitionVA0_0D6FamilyOAC0deO0OAL0Q0VSgtcfcfA__0();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v2, v0);
      v12 = v20;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2584344(0, *(_QWORD *)(v12 + 16) + 1, 1);
        v12 = v20;
      }
      v14 = *(_QWORD *)(v12 + 16);
      v13 = *(_QWORD *)(v12 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1D2584344(v13 > 1, v14 + 1, 1);
        v12 = v20;
      }
      *(_QWORD *)(v12 + 16) = v14 + 1;
      sub_1D2539ADC((uint64_t)v5, v12+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v14, type metadata accessor for MetadataInlineView.IterableFallback);
      v9 += v17;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v12;
}

uint64_t sub_1D256BF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  int *v102;
  char *v103;
  uint64_t v104;

  v103 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC60);
  MEMORY[0x1E0C80A78](v5);
  v93 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CC09C();
  v91 = *(_QWORD *)(v7 - 8);
  v92 = v7;
  MEMORY[0x1E0C80A78](v7);
  v89 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
  v10 = MEMORY[0x1E0C80A78](v9);
  v84 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v88 = (char *)&v78 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
  v14 = MEMORY[0x1E0C80A78](v13);
  v81 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v85 = (char *)&v78 - v16;
  v17 = type metadata accessor for MetadataInlineTextGraphicView(0);
  v101 = *(_QWORD *)(v17 - 8);
  v102 = (int *)v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v87 = (uint64_t)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v86 = (uint64_t)&v78 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82800);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = type metadata accessor for MetadataInlineView.IterableFallback(0);
  v24 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v83 = (uint64_t)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82808);
  v27 = MEMORY[0x1E0C80A78](v26);
  v100 = (uint64_t)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v99 = (uint64_t)&v78 - v29;
  v82 = type metadata accessor for MetadataInlineView(0);
  v30 = *(_QWORD *)(v82 - 8);
  v31 = *(_QWORD *)(v30 + 64);
  v32 = MEMORY[0x1E0C80A78](v82);
  v80 = (char *)&v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v32);
  v79 = (uint64_t)&v78 - v34;
  MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v78 - v35;
  v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82810);
  v96 = *(_QWORD *)(v98 - 8);
  v37 = MEMORY[0x1E0C80A78](v98);
  v97 = (char *)&v78 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v37);
  v40 = (char *)&v78 - v39;
  v104 = a1;
  v90 = a2;
  sub_1D2534120(a2, (uint64_t)v36, type metadata accessor for MetadataInlineView);
  v41 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  v42 = swift_allocObject();
  sub_1D2539ADC((uint64_t)v36, v42 + v41, type metadata accessor for MetadataInlineView);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82818);
  sub_1D26CBA24();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82820);
  sub_1D2536488(&qword_1EFC82828, &qword_1EFC82818, MEMORY[0x1E0DEAF48]);
  sub_1D257460C();
  sub_1D25369B0(&qword_1EFC82838, type metadata accessor for MetadataInlineView.IterableFallback, (uint64_t)&unk_1D26D1E94);
  v95 = v40;
  sub_1D26CCFE4();
  v43 = *(_QWORD *)(a1 + 16);
  if (!v43)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v23, 1, 1, v94);
    goto LABEL_6;
  }
  sub_1D2534120(a1+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(_QWORD *)(v24 + 72) * (v43 - 1), (uint64_t)v23, type metadata accessor for MetadataInlineView.IterableFallback);
  v44 = v94;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v23, 0, 1, v94);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v23, 1, v44) == 1)
  {
LABEL_6:
    sub_1D253703C((uint64_t)v23, &qword_1EFC82800);
    v52 = 1;
    v53 = v102;
    v54 = v99;
    goto LABEL_12;
  }
  v45 = v83;
  sub_1D2539ADC((uint64_t)v23, v83, type metadata accessor for MetadataInlineView.IterableFallback);
  v46 = (uint64_t)v81;
  sub_1D26CCA2C();
  v47 = v90;
  v48 = v79;
  sub_1D2534120(v90, v79, type metadata accessor for MetadataInlineView);
  v49 = sub_1D26CCAD4();
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v46, 1, v49) == 1)
  {
    v51 = (uint64_t)v85;
    sub_1D26CCA2C();
    sub_1D25340E4(v48, type metadata accessor for MetadataInlineView);
    sub_1D253703C(v46, &qword_1ED96CC70);
  }
  else
  {
    sub_1D25340E4(v48, type metadata accessor for MetadataInlineView);
    v51 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v85, v46, v49);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v50 + 56))(v51, 0, 1, v49);
  }
  v55 = (uint64_t)v88;
  v56 = (uint64_t)v84;
  v57 = (uint64_t)v80;
  sub_1D26CCB04();
  sub_1D2534120(v47, v57, type metadata accessor for MetadataInlineView);
  v58 = sub_1D26CCAF8();
  v59 = *(_QWORD *)(v58 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v56, 1, v58) == 1)
  {
    sub_1D26CCB04();
    sub_1D25340E4(v57, type metadata accessor for MetadataInlineView);
    sub_1D253703C(v56, &qword_1ED96CC80);
  }
  else
  {
    sub_1D25340E4(v57, type metadata accessor for MetadataInlineView);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v55, v56, v58);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v55, 0, 1, v58);
  }
  v60 = *(void **)(v47 + *(int *)(v82 + 20));
  v62 = v91;
  v61 = v92;
  v63 = v89;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v89, v47 + *(int *)(v82 + 24), v92);
  v64 = v60;
  v65 = (uint64_t)v93;
  sub_1D26CCA68();
  sub_1D25340E4(v45, type metadata accessor for MetadataInlineView.IterableFallback);
  v66 = v87;
  sub_1D25384CC(v51, v87, &qword_1ED96CC70);
  v53 = v102;
  sub_1D25384CC(v55, v66 + v102[5], &qword_1ED96CC80);
  *(_QWORD *)(v66 + v53[6]) = v60;
  (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v66 + v53[7], v63, v61);
  sub_1D25384CC(v65, v66 + v53[8], &qword_1ED96CC60);
  v67 = v86;
  sub_1D2539ADC(v66, v86, type metadata accessor for MetadataInlineTextGraphicView);
  v54 = v99;
  sub_1D2539ADC(v67, v99, type metadata accessor for MetadataInlineTextGraphicView);
  v52 = 0;
LABEL_12:
  (*(void (**)(uint64_t, uint64_t, uint64_t, int *))(v101 + 56))(v54, v52, 1, v53);
  v69 = v96;
  v68 = v97;
  v70 = *(void (**)(char *, char *, uint64_t))(v96 + 16);
  v71 = v95;
  v72 = v98;
  v70(v97, v95, v98);
  v73 = v100;
  sub_1D2537078(v54, v100, &qword_1EFC82808);
  v74 = v103;
  v70(v103, v68, v72);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82840);
  sub_1D2537078(v73, (uint64_t)&v74[*(int *)(v75 + 48)], &qword_1EFC82808);
  sub_1D253703C(v54, &qword_1EFC82808);
  v76 = *(void (**)(char *, uint64_t))(v69 + 8);
  v76(v71, v72);
  sub_1D253703C(v73, &qword_1EFC82808);
  return ((uint64_t (*)(char *, uint64_t))v76)(v68, v72);
}

uint64_t sub_1D256C7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  id v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;

  v45 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)&v40 - v9;
  v43 = type metadata accessor for MetadataInlineView(0);
  v10 = MEMORY[0x1E0C80A78](v43);
  v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v40 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v40 - v19;
  v21 = (int *)type metadata accessor for MetadataInlineTextGraphicView(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82820);
  MEMORY[0x1E0C80A78](v41);
  v25 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  sub_1D26CCA2C();
  v42 = a2;
  sub_1D2534120(a2, (uint64_t)v14, type metadata accessor for MetadataInlineView);
  v26 = sub_1D26CCAD4();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v18, 1, v26) == 1)
  {
    sub_1D26CCA2C();
    sub_1D25340E4((uint64_t)v14, type metadata accessor for MetadataInlineView);
    sub_1D253703C((uint64_t)v18, &qword_1ED96CC70);
  }
  else
  {
    sub_1D25340E4((uint64_t)v14, type metadata accessor for MetadataInlineView);
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v20, v18, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v20, 0, 1, v26);
  }
  v28 = (uint64_t)v20;
  sub_1D26CCB04();
  v29 = v42;
  sub_1D2534120(v42, (uint64_t)v12, type metadata accessor for MetadataInlineView);
  v30 = sub_1D26CCAF8();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v8, 1, v30);
  v33 = (uint64_t)v44;
  if (v32 == 1)
  {
    sub_1D26CCB04();
    sub_1D25340E4((uint64_t)v12, type metadata accessor for MetadataInlineView);
    sub_1D253703C((uint64_t)v8, &qword_1ED96CC80);
  }
  else
  {
    sub_1D25340E4((uint64_t)v12, type metadata accessor for MetadataInlineView);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v8, v30);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v31 + 56))(v33, 0, 1, v30);
  }
  v34 = *(void **)(v29 + *(int *)(v43 + 20));
  v35 = v29 + *(int *)(v43 + 24);
  v36 = &v23[v21[7]];
  v37 = sub_1D26CC09C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v36, v35, v37);
  v38 = v34;
  sub_1D26CCA68();
  sub_1D25384CC(v28, (uint64_t)v23, &qword_1ED96CC70);
  sub_1D25384CC(v33, (uint64_t)&v23[v21[5]], &qword_1ED96CC80);
  *(_QWORD *)&v23[v21[6]] = v34;
  sub_1D2534120((uint64_t)v23, (uint64_t)v25, type metadata accessor for MetadataInlineTextGraphicView);
  *(_WORD *)&v25[*(int *)(v41 + 36)] = 257;
  sub_1D25340E4((uint64_t)v23, type metadata accessor for MetadataInlineTextGraphicView);
  return sub_1D25384CC((uint64_t)v25, v45, &qword_1EFC82820);
}

uint64_t sub_1D256CBC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1D256CC04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(char *, uint64_t, uint64_t);
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = v1;
  v56 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC60);
  v4 = MEMORY[0x1E0C80A78](v3);
  v55 = (uint64_t)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v49 = (uint64_t)&v47 - v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v47 - v8;
  v47 = sub_1D26CCA08();
  v10 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD58);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD18);
  v16 = *(_QWORD *)(v50 - 8);
  MEMORY[0x1E0C80A78](v50);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA48);
  MEMORY[0x1E0C80A78](v48);
  v20 = (char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CAA8);
  MEMORY[0x1E0C80A78](v51);
  v54 = (uint64_t)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CAB8);
  MEMORY[0x1E0C80A78](v52);
  v53 = (uint64_t)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v15 = sub_1D26CC7B0();
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C970);
  sub_1D256D0D8(v2, (uint64_t)&v15[*(int *)(v23 + 44)]);
  sub_1D26CC9FC();
  sub_1D2536488(&qword_1ED96CD50, &qword_1ED96CD58, MEMORY[0x1E0CDFB10]);
  sub_1D26CCDF8();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v47);
  sub_1D253703C((uint64_t)v15, &qword_1ED96CD58);
  v24 = v2 + *(int *)(type metadata accessor for MetadataInlineTextGraphicView(0) + 32);
  sub_1D2537078(v24, (uint64_t)v9, &qword_1ED96CC60);
  v25 = sub_1D26CCA5C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v9, 1, v25);
  v47 = v26;
  if (v28 == 1)
  {
    sub_1D253703C((uint64_t)v9, &qword_1ED96CC60);
    v29 = 0;
    v30 = 0;
  }
  else
  {
    v29 = sub_1D26CCA44();
    v30 = v31;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
  }
  v32 = v50;
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v18, v50);
  v33 = (uint64_t *)&v20[*(int *)(v48 + 36)];
  *v33 = v29;
  v33[1] = v30;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v32);
  v34 = v49;
  sub_1D2537078(v24, v49, &qword_1ED96CC60);
  if (v27((char *)v34, 1, v25) == 1)
  {
    sub_1D253703C(v34, &qword_1ED96CC60);
    v35 = 0;
    v36 = 0;
  }
  else
  {
    v35 = sub_1D26CCA50();
    v36 = v37;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v34, v25);
  }
  v38 = v54;
  sub_1D2537078((uint64_t)v20, v54, &qword_1ED96CA48);
  v39 = (uint64_t *)(v38 + *(int *)(v51 + 36));
  *v39 = v35;
  v39[1] = v36;
  sub_1D253703C((uint64_t)v20, &qword_1ED96CA48);
  v40 = v55;
  sub_1D2537078(v24, v55, &qword_1ED96CC60);
  if (v27((char *)v40, 1, v25) == 1)
  {
    sub_1D253703C(v40, &qword_1ED96CC60);
    v41 = 0;
    v42 = 0;
  }
  else
  {
    v41 = sub_1D26CCA38();
    v42 = v43;
    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v40, v25);
  }
  v44 = v53;
  sub_1D2537078(v38, v53, &qword_1ED96CAA8);
  v45 = (uint64_t *)(v44 + *(int *)(v52 + 36));
  *v45 = v41;
  v45[1] = v42;
  sub_1D253703C(v38, &qword_1ED96CAA8);
  return sub_1D25384CC(v44, v56, &qword_1ED96CAB8);
}

uint64_t sub_1D256D0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void *v40;
  char v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;

  v103 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD88);
  v4 = MEMORY[0x1E0C80A78](v3);
  v105 = (uint64_t)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v100 = (char *)&v91 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBA8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v104 = (uint64_t)&v91 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v91 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
  v13 = MEMORY[0x1E0C80A78](v12);
  v97 = (uint64_t)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v91 - v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA38);
  v18 = MEMORY[0x1E0C80A78](v17);
  v96 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v91 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v91 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB48);
  v26 = MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = MEMORY[0x1E0C80A78](v26);
  v102 = (uint64_t)&v91 - v30;
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v91 - v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD98);
  v34 = MEMORY[0x1E0C80A78](v33);
  v36 = (char *)&v91 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v91 - v37;
  v39 = type metadata accessor for MetadataInlineTextGraphicView(0);
  v101 = *(int *)(v39 + 24);
  v40 = *(void **)(a1 + v101);
  v98 = v28;
  if (v40 && objc_msgSend(v40, sel_graphicAlignment) == (id)2)
    sub_1D26CC8A0();
  else
    sub_1D26CC894();
  sub_1D26CC894();
  v41 = sub_1D26CC87C();
  v99 = a1;
  if ((v41 & 1) != 0)
  {
    v92 = v11;
    sub_1D256D9F4((uint64_t)v32);
    sub_1D2537078(a1 + *(int *)(v39 + 20), (uint64_t)v16, &qword_1ED96CC80);
    v42 = sub_1D26CCAF8();
    v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v16, 1, v42);
    sub_1D253703C((uint64_t)v16, &qword_1ED96CC80);
    v93 = v39;
    if (v43 == 1)
    {
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA30);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v24, 1, 1, v44);
    }
    else
    {
      sub_1D26CC810();
      v47 = sub_1D26CCD08();
      v49 = v48;
      v95 = v22;
      v106 = v47;
      v107 = v48;
      v51 = v50 & 1;
      v108 = v50 & 1;
      v109 = v52;
      sub_1D26CCDEC();
      sub_1D25725E0(v47, v49, v51);
      v22 = v95;
      swift_bridgeObjectRelease();
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v24, 0, 1, v53);
    }
    v54 = v100;
    v11 = v92;
    v55 = v102;
    sub_1D2537078((uint64_t)v32, v102, &qword_1ED96CB48);
    sub_1D2537078((uint64_t)v24, (uint64_t)v22, &qword_1ED96CA38);
    sub_1D2537078(v55, (uint64_t)v36, &qword_1ED96CB48);
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB50);
    sub_1D2537078((uint64_t)v22, (uint64_t)&v36[*(int *)(v56 + 48)], &qword_1ED96CA38);
    sub_1D253703C((uint64_t)v24, &qword_1ED96CA38);
    sub_1D253703C((uint64_t)v32, &qword_1ED96CB48);
    sub_1D253703C((uint64_t)v22, &qword_1ED96CA38);
    sub_1D253703C(v55, &qword_1ED96CB48);
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD90);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v36, 0, 1, v57);
    sub_1D25384CC((uint64_t)v36, (uint64_t)v38, &qword_1ED96CD98);
    a1 = v99;
    v46 = (uint64_t)v54;
    v39 = v93;
  }
  else
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD90);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v38, 1, 1, v45);
    v46 = (uint64_t)v100;
  }
  v58 = v101;
  sub_1D256DEAC((uint64_t)v11);
  v59 = *(void **)(a1 + v58);
  if (v59 && objc_msgSend(v59, sel_graphicAlignment) == (id)2)
    sub_1D26CC8A0();
  else
    sub_1D26CC894();
  sub_1D26CC8A0();
  if ((sub_1D26CC87C() & 1) != 0)
  {
    v95 = v22;
    v60 = v97;
    sub_1D2537078(a1 + *(int *)(v39 + 20), v97, &qword_1ED96CC80);
    v61 = sub_1D26CCAF8();
    v62 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48))(v60, 1, v61);
    sub_1D253703C(v60, &qword_1ED96CC80);
    v94 = v36;
    v63 = v46;
    if (v62 == 1)
    {
      v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA30);
      v65 = (uint64_t)v96;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 56))(v96, 1, 1, v64);
    }
    else
    {
      sub_1D26CC810();
      v67 = sub_1D26CCD08();
      v68 = v38;
      v69 = v11;
      v71 = v70;
      v106 = v67;
      v107 = v70;
      v73 = v72 & 1;
      v108 = v72 & 1;
      v109 = v74;
      v65 = (uint64_t)v96;
      sub_1D26CCDEC();
      v75 = v71;
      v11 = v69;
      v38 = v68;
      sub_1D25725E0(v67, v75, v73);
      swift_bridgeObjectRelease();
      v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA30);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v65, 0, 1, v76);
    }
    v77 = (uint64_t)v95;
    v78 = v102;
    sub_1D256D9F4(v102);
    sub_1D2537078(v65, v77, &qword_1ED96CA38);
    v79 = (uint64_t)v98;
    sub_1D2537078(v78, (uint64_t)v98, &qword_1ED96CB48);
    v80 = v105;
    sub_1D2537078(v77, v105, &qword_1ED96CA38);
    v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82848);
    sub_1D2537078(v79, v80 + *(int *)(v81 + 48), &qword_1ED96CB48);
    sub_1D253703C(v78, &qword_1ED96CB48);
    sub_1D253703C(v65, &qword_1ED96CA38);
    sub_1D253703C(v79, &qword_1ED96CB48);
    sub_1D253703C(v77, &qword_1ED96CA38);
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD80);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v80, 0, 1, v82);
    v46 = v63;
    sub_1D25384CC(v80, v63, &qword_1ED96CD88);
    v36 = v94;
  }
  else
  {
    v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD80);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v46, 1, 1, v66);
  }
  sub_1D2537078((uint64_t)v38, (uint64_t)v36, &qword_1ED96CD98);
  v83 = v104;
  sub_1D2537078((uint64_t)v11, v104, &qword_1ED96CBA8);
  v84 = v105;
  sub_1D2537078(v46, v105, &qword_1ED96CD88);
  v85 = (uint64_t)v38;
  v86 = v103;
  sub_1D2537078((uint64_t)v36, v103, &qword_1ED96CD98);
  v87 = (uint64_t)v36;
  v88 = v46;
  v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDA0);
  sub_1D2537078(v83, v86 + *(int *)(v89 + 48), &qword_1ED96CBA8);
  sub_1D2537078(v84, v86 + *(int *)(v89 + 64), &qword_1ED96CD88);
  sub_1D253703C(v88, &qword_1ED96CD88);
  sub_1D253703C((uint64_t)v11, &qword_1ED96CBA8);
  sub_1D253703C(v85, &qword_1ED96CD98);
  sub_1D253703C(v84, &qword_1ED96CD88);
  sub_1D253703C(v83, &qword_1ED96CBA8);
  return sub_1D253703C(v87, &qword_1ED96CD98);
}

uint64_t sub_1D256D9F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  NSObject *v24;
  os_log_type_t v25;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  id v35;
  uint8_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v49 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CAE0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MetadataInlineGraphicView(0);
  MEMORY[0x1E0C80A78](v5);
  v45 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CC09C();
  v47 = *(_QWORD *)(v7 - 8);
  v48 = v7;
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D26CCAF8();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v43 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v44 = (char *)&v36 - v17;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v36 - v18;
  v20 = type metadata accessor for MetadataInlineTextGraphicView(0);
  sub_1D2537078(v1 + *(int *)(v20 + 20), (uint64_t)v11, &qword_1ED96CC80);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_1D253703C((uint64_t)v11, &qword_1ED96CC80);
    swift_storeEnumTagMultiPayload();
    sub_1D25369B0(&qword_1ED96D340, type metadata accessor for MetadataInlineGraphicView, (uint64_t)&protocol conformance descriptor for MetadataInlineGraphicView);
    return sub_1D26CC90C();
  }
  else
  {
    v40 = v5;
    v41 = v2;
    v42 = v4;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v11, v12);
    v38 = v1;
    v39 = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v1 + *(int *)(v20 + 28), v48);
    v22 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v23 = v44;
    v22(v44, v19, v12);
    v24 = sub_1D26CC084();
    v25 = sub_1D26CDCE0();
    if (os_log_type_enabled(v24, v25))
    {
      v26 = (uint8_t *)swift_slowAlloc();
      v51 = swift_slowAlloc();
      v37 = v19;
      v27 = v51;
      *(_DWORD *)v26 = 136380675;
      v36 = v26 + 4;
      v22(v43, v23, v12);
      v28 = sub_1D26CD98C();
      v50 = sub_1D2537880(v28, v29, &v51);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v30 = *(void (**)(char *, uint64_t))(v13 + 8);
      v30(v23, v12);
      _os_log_impl(&dword_1D2531000, v24, v25, "Inline image: %{private}s", v26, 0xCu);
      swift_arrayDestroy();
      v31 = v27;
      v19 = v37;
      MEMORY[0x1D823A5E0](v31, -1, -1);
      MEMORY[0x1D823A5E0](v26, -1, -1);
    }
    else
    {
      v30 = *(void (**)(char *, uint64_t))(v13 + 8);
      v30(v23, v12);
    }

    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
    v32 = (uint64_t)v45;
    v22(v45, v19, v12);
    v33 = *(void **)(v38 + *(int *)(v39 + 24));
    v34 = *(int *)(v40 + 24);
    *(_BYTE *)(v32 + *(int *)(v40 + 20)) = 1;
    *(_QWORD *)(v32 + v34) = v33;
    sub_1D2534120(v32, (uint64_t)v42, type metadata accessor for MetadataInlineGraphicView);
    swift_storeEnumTagMultiPayload();
    sub_1D25369B0(&qword_1ED96D340, type metadata accessor for MetadataInlineGraphicView, (uint64_t)&protocol conformance descriptor for MetadataInlineGraphicView);
    v35 = v33;
    sub_1D26CC90C();
    sub_1D25340E4(v32, type metadata accessor for MetadataInlineGraphicView);
    return ((uint64_t (*)(char *, uint64_t))v30)(v19, v12);
  }
}

uint64_t sub_1D256DEAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, char *, uint64_t);
  void (*v32)(char *, char *, uint64_t);
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char *v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  void *v49;
  unsigned __int8 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  id v54;
  uint64_t KeyPath;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  void (*v65)(char *, char *, uint64_t);
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v78 = a1;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB10);
  MEMORY[0x1E0C80A78](v77);
  v3 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = type metadata accessor for MetadataTextView(0);
  MEMORY[0x1E0C80A78](v70);
  v72 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C998);
  MEMORY[0x1E0C80A78](v69);
  v67 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA78);
  v7 = MEMORY[0x1E0C80A78](v6);
  v71 = (uint64_t)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v68 = (char *)&v58 - v9;
  v10 = sub_1D26CC09C();
  v74 = *(_QWORD *)(v10 - 8);
  v75 = v10;
  MEMORY[0x1E0C80A78](v10);
  v73 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D26CCAD4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v76 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v58 - v20;
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v58 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v58 - v25;
  v27 = v1;
  v29 = v28;
  sub_1D2537078(v1, (uint64_t)v14, &qword_1ED96CC70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v29) == 1)
  {
    sub_1D253703C((uint64_t)v14, &qword_1ED96CC70);
    swift_storeEnumTagMultiPayload();
    sub_1D2575C54();
    return sub_1D26CC90C();
  }
  else
  {
    v61 = v6;
    v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v64 = v3;
    v65 = v31;
    v31(v26, v14, v29);
    v62 = type metadata accessor for MetadataInlineTextGraphicView(0);
    (*(void (**)(char *, uint64_t, uint64_t))(v74 + 16))(v73, v1 + *(int *)(v62 + 28), v75);
    v32 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v32(v24, v26, v29);
    v33 = sub_1D26CC084();
    v34 = sub_1D26CDCE0();
    v35 = os_log_type_enabled(v33, v34);
    v66 = v26;
    if (v35)
    {
      v36 = swift_slowAlloc();
      v60 = v1;
      v37 = (uint8_t *)v36;
      v38 = swift_slowAlloc();
      v80 = v38;
      *(_DWORD *)v37 = 136380675;
      v63 = (void (*)(char *, uint64_t))(v37 + 4);
      v59 = v32;
      v32(v21, v24, v29);
      v39 = sub_1D26CD98C();
      v79 = sub_1D2537880(v39, v40, &v80);
      v41 = v66;
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v63 = *(void (**)(char *, uint64_t))(v16 + 8);
      v63(v24, v29);
      _os_log_impl(&dword_1D2531000, v33, v34, "Inline text: %{private}s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v38, -1, -1);
      v42 = v37;
      v27 = v60;
      MEMORY[0x1D823A5E0](v42, -1, -1);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
      v43 = (uint64_t)v64;
      v45 = v61;
      v44 = v62;
      v47 = (uint64_t)v67;
      v46 = (uint64_t)v68;
      v59(v76, v41, v29);
    }
    else
    {
      v63 = *(void (**)(char *, uint64_t))(v16 + 8);
      v63(v24, v29);

      (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);
      v43 = (uint64_t)v64;
      v44 = v62;
      v47 = (uint64_t)v67;
      v46 = (uint64_t)v68;
      v48 = v32;
      v45 = v61;
      v48(v76, v26, v29);
    }
    v49 = *(void **)(v27 + *(int *)(v44 + 24));
    if (v49)
      v50 = objc_msgSend(v49, sel_allowsNonSystemForegroundColors);
    else
      v50 = 0;
    v51 = v70;
    v52 = *(int *)(v70 + 20);
    v53 = (uint64_t)v72;
    v65(v72, v76, v29);
    *(_QWORD *)(v53 + v52) = v49;
    *(_BYTE *)(v53 + *(int *)(v51 + 24)) = v50;
    sub_1D2534120(v53, v47, type metadata accessor for MetadataTextView);
    *(_QWORD *)(v47 + *(int *)(v69 + 36)) = v49;
    v54 = v49;
    sub_1D25340E4(v53, type metadata accessor for MetadataTextView);
    KeyPath = swift_getKeyPath();
    v56 = v71;
    sub_1D2537078(v47, v71, &qword_1ED96C998);
    v57 = v56 + *(int *)(v45 + 36);
    *(_QWORD *)v57 = KeyPath;
    *(_QWORD *)(v57 + 8) = 1;
    *(_BYTE *)(v57 + 16) = 0;
    sub_1D253703C(v47, &qword_1ED96C998);
    sub_1D25384CC(v56, v46, &qword_1ED96CA78);
    sub_1D2537078(v46, v43, &qword_1ED96CA78);
    swift_storeEnumTagMultiPayload();
    sub_1D2575C54();
    sub_1D26CC90C();
    sub_1D253703C(v46, &qword_1ED96CA78);
    return ((uint64_t (*)(char *, uint64_t))v63)(v66, v29);
  }
}

uint64_t MetadataTextView.init(_:parameters:allowsCustomColors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v8 = type metadata accessor for MetadataTextView(0);
  v9 = *(int *)(v8 + 20);
  v10 = sub_1D26CCAD4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a4, a1, v10);
  *(_QWORD *)(a4 + v9) = a2;
  *(_BYTE *)(a4 + *(int *)(v8 + 24)) = a3;
  return result;
}

uint64_t sub_1D256E564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_BYTE *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_BYTE *)(a2 + 16) = v5;
  v6 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC827A0) + 44);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC827A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, a1, v7);
}

uint64_t sub_1D256E5D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  char v11;
  _QWORD v13[2];
  char v14;
  char v15;

  v13[1] = a6;
  v6 = sub_1D26CC354();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CC390();
  sub_1D26CC408();
  v15 = v10 & 1;
  v14 = v11 & 1;
  sub_1D26CC33C();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D256E740(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v12;
  uint64_t result;

  v6 = v5;
  v12 = *v6;
  sub_1D26CC384();
  sub_1D25369B0(&qword_1EFC827F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9370], MEMORY[0x1E0CD9390]);
  sub_1D26CDC44();
  sub_1D26CDC68();
  result = sub_1D26CDC5C();
  if (result == 1)
    return sub_1D256E5D0(a1, a2 & 1, a3, a4 & 1, a5, v12);
  return result;
}

uint64_t sub_1D256E83C(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;

  return sub_1D2572E28(a9, a1, a2, a3, a4, a10, *v10);
}

uint64_t sub_1D256E850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D256E8A8(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E0CDFB58]);
}

uint64_t sub_1D256E87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1D256E8A8(a1, a2, a3, a4, a5, a6, a7, a8, a9, MEMORY[0x1E0CDFB60]);
}

uint64_t sub_1D256E8A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_1D256E8E4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1D26CC2A0();
  return sub_1D256E940;
}

void sub_1D256E940(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t sub_1D256E970(int a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;

  v81 = a1;
  v65 = sub_1D26CCA20();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v63 = (char *)&v63 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8D8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v66 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v67 = (uint64_t)&v63 - v5;
  v6 = sub_1D26CB628();
  v73 = *(_QWORD *)(v6 - 8);
  v74 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v71 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v72 = (char *)&v63 - v9;
  v10 = sub_1D26CCCD8();
  v79 = *(_QWORD *)(v10 - 8);
  v80 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v75 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v78 = (char *)&v63 - v13;
  v14 = sub_1D26CB9DC();
  v76 = *(_QWORD *)(v14 - 8);
  v77 = v14;
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v63 - v18;
  v20 = sub_1D26CCEF4();
  v69 = *(_QWORD *)(v20 - 8);
  v70 = v20;
  MEMORY[0x1E0C80A78](v20);
  v68 = (char *)&v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96E7A0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_1D26CCAF8();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v28 = (char *)&v63 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = sub_1D26CCA80();
  v30 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v32 = (char *)&v63 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CCA8C();
  v33 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v32, v29);
  if (v33 != *MEMORY[0x1E0CDCC30])
  {
    if (v33 == *MEMORY[0x1E0CDCC38])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
      v39 = v26;
      v29 = v25;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v32, v25);
      v40 = sub_1D26CC8AC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v24, 1, 1, v40);
      v41 = sub_1D26CCAEC();
      sub_1D253703C((uint64_t)v24, &qword_1ED96E7A0);
      if (v41)
      {
        if ((sub_1D26CCAE0() & 1) == 0)
        {
          v54 = v68;
          v53 = v69;
          v55 = v70;
          (*(void (**)(char *, _QWORD, uint64_t))(v69 + 104))(v68, *MEMORY[0x1E0CDF6F8], v70);
          sub_1D26CCF0C();
          (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
          v38 = sub_1D26CCD2C();
          swift_release();
          goto LABEL_17;
        }
        v42 = sub_1D26CCD2C();
      }
      else
      {
        sub_1D26CC810();
        v42 = sub_1D26CCD08();
      }
LABEL_15:
      v38 = v42;
LABEL_17:
      v56 = *(void (**)(char *, uint64_t))(v39 + 8);
      v57 = v28;
LABEL_18:
      v56(v57, v29);
      return v38;
    }
    if (v33 == *MEMORY[0x1E0CDCC20])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
      v43 = &v32[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC827B8) + 48)];
      v44 = v77;
      v45 = v76;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v19, v32, v77);
      v47 = v78;
      v46 = v79;
      v48 = v80;
      (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v43, v80);
      (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v17, v19, v44);
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v75, v47, v48);
      v38 = sub_1D26CCCF0();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v48);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v19, v44);
      return v38;
    }
    if (v33 == *MEMORY[0x1E0CDCC28])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
      v50 = v72;
      v49 = v73;
      v51 = v74;
      (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v32, v74);
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v71, v50, v51);
      v52 = sub_1D26CCD14();
    }
    else
    {
      if (v33 == *MEMORY[0x1E0CDCC18])
      {
        (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
        v59 = v32[16];
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96E798);
        v61 = v67;
        sub_1D25384CC((uint64_t)&v32[*(int *)(v60 + 64)], v67, &qword_1ED96C8D8);
        sub_1D2537078(v61, v66, &qword_1ED96C8D8);
        if ((v59 & 1) != 0)
          v62 = sub_1D26CCC9C();
        else
          v62 = sub_1D26CCC60();
        v38 = v62;
        sub_1D253703C(v61, &qword_1ED96C8D8);
        return v38;
      }
      if (v33 == *MEMORY[0x1E0CDCC48])
      {
        (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC827B0);
        v28 = v72;
        v39 = v73;
        v29 = v74;
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v72, v32, v74);
        (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v71, v28, v29);
        v42 = sub_1D26CCCCC();
        goto LABEL_15;
      }
      if (v33 != *MEMORY[0x1E0CDCC40])
      {
        sub_1D26CC810();
        v38 = sub_1D26CCD08();
        v56 = *(void (**)(char *, uint64_t))(v30 + 8);
        v57 = v32;
        goto LABEL_18;
      }
      (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
      v49 = v64;
      v50 = v63;
      v51 = v65;
      (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v63, v32, v65);
      v52 = sub_1D26CCA14();
    }
    v38 = v52;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v51);
    return v38;
  }
  (*(void (**)(char *, uint64_t))(v30 + 96))(v32, v29);
  v35 = *(_QWORD *)v32;
  v34 = *((_QWORD *)v32 + 1);
  if ((v81 & 1) != 0)
  {
    v82 = *(_QWORD *)v32;
    v83 = v34;
    sub_1D257293C();
    v35 = sub_1D26CDF74();
    v37 = v36;
    swift_bridgeObjectRelease();
    v34 = v37;
  }
  v82 = v35;
  v83 = v34;
  sub_1D257293C();
  return sub_1D26CCD20();
}

uint64_t MetadataTextView.text.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D256F1D0((uint64_t (*)(_QWORD))MEMORY[0x1E0CDCC90], a1);
}

uint64_t sub_1D256F1D0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;

  v4 = a1(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v2, v4);
}

uint64_t MetadataTextView.text.setter(uint64_t a1)
{
  return sub_1D256F218(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CDCC90]);
}

uint64_t sub_1D256F218(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;

  v4 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v2, a1, v4);
}

uint64_t (*MetadataTextView.text.modify())()
{
  return CGSizeMake;
}

void *MetadataTextView.parameters.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for MetadataTextView(0) + 20));
  v2 = v1;
  return v1;
}

void MetadataTextView.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for MetadataTextView(0) + 20);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*MetadataTextView.parameters.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MetadataTextView(0);
  return CGSizeMake;
}

uint64_t MetadataTextView.allowsCustomColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MetadataTextView(0) + 24));
}

uint64_t MetadataTextView.allowsCustomColors.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MetadataTextView(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*MetadataTextView.allowsCustomColors.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for MetadataTextView(0);
  return CGSizeMake;
}

uint64_t MetadataTextView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  result = sub_1D256F398();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1D256F398()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  void *v20;
  uint64_t result;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  BOOL v34;
  void (*v35)(char *, unint64_t, uint64_t);
  char *v36;
  unint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  void *v44;
  uint64_t v45;
  id v46;
  id v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  id v57;
  void *v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unsigned int v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962868);
  MEMORY[0x1E0C80A78](v1);
  v92 = (char *)&v82 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v91 = sub_1D26CCCC0();
  v90 = *(_QWORD *)(v91 - 8);
  MEMORY[0x1E0C80A78](v91);
  v82 = (char *)&v82 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MetadataTextView(0);
  MEMORY[0x1E0C80A78](v4);
  v104 = (uint64_t)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CCABC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v106 = (char *)&v82 - v11;
  sub_1D26CC810();
  v12 = sub_1D26CCD08();
  v14 = v13;
  v16 = v15;
  v18 = v17 & 1;
  v19 = *(int *)(v4 + 20);
  v105 = v0;
  v94 = v19;
  v20 = *(void **)(v0 + v19);
  if (v20)
    v93 = objc_msgSend(v20, sel_forceUppercase);
  else
    v93 = 0;
  result = sub_1D26CCAC8();
  v89 = *(_QWORD *)(result + 16);
  if (!v89)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    return v12;
  }
  v103 = v18;
  v22 = 0;
  v23 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v83 = *(int *)(v4 + 24);
  v88 = result + v23;
  v86 = v7;
  v85 = v10;
  v87 = v6;
  v84 = result;
  while (1)
  {
    v102 = v14;
    if (v22 >= *(_QWORD *)(result + 16))
      break;
    v99 = v12;
    v100 = v16;
    v35 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    v36 = v106;
    v35(v106, v88 + *(_QWORD *)(v7 + 72) * v22, v6);
    sub_1D2534120(v105, v104, type metadata accessor for MetadataTextView);
    v35(v10, (unint64_t)v36, v6);
    if (v93)
    {
      v37 = sub_1D26CCAA4();
      v38 = sub_1D256FC2C(v37);
      swift_bridgeObjectRelease();
      v39 = v38 ^ 1;
    }
    else
    {
      v39 = 0;
    }
    v98 = *(void (**)(char *, uint64_t))(v7 + 8);
    v98(v10, v6);
    sub_1D25340E4(v104, type metadata accessor for MetadataTextView);
    v40 = sub_1D256E970(v39 & 1);
    v96 = v41;
    v97 = v42;
    v95 = v43;
    v44 = *(void **)(v105 + v94);
    v45 = sub_1D26CCAA4();
    sub_1D2571464(v44);
    if (v44)
    {
      v46 = v44;
      v47 = objc_msgSend(v46, sel_fontSpecification);
      if (v47)
      {
        v48 = v47;
        v49 = objc_msgSend(v47, sel_weight);

        if (v49)
        {
          objc_msgSend(v49, sel_doubleValue);
          sub_1D26CCBE8();

          goto LABEL_17;
        }
      }

    }
    sub_1D26CCC00();
LABEL_17:
    sub_1D26CCC30();
    swift_release();
    if (v44)
    {
      v50 = v44;
      v51 = objc_msgSend(v50, sel_fontSpecification);
      if (v51)
      {
        v52 = v51;
        v53 = objc_msgSend(v51, sel_fontFeatures);

        sub_1D2539514(0, &qword_1ED96D538);
        v54 = sub_1D26CDAF4();

      }
      else
      {
        v54 = MEMORY[0x1E0DEE9D8];
      }

    }
    else
    {
      v54 = MEMORY[0x1E0DEE9D8];
    }
    v101 = v22;
    if (v54 >> 62)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      result = sub_1D26CE1F0();
      v55 = result;
      if (!result)
        goto LABEL_32;
    }
    else
    {
      v55 = *(_QWORD *)((v54 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      result = swift_retain();
      if (!v55)
        goto LABEL_32;
    }
    if (v55 < 1)
      goto LABEL_42;
    v56 = 0;
    do
    {
      if ((v54 & 0xC000000000000001) != 0)
        v57 = (id)MEMORY[0x1D8239890](v56, v54);
      else
        v57 = *(id *)(v54 + 8 * v56 + 32);
      v58 = v57;
      ++v56;
      objc_msgSend(v57, sel_type);
      objc_msgSend(v58, sel_selector);
      sub_1D26CCC3C();

      swift_release();
    }
    while (v55 != v56);
LABEL_32:
    swift_bridgeObjectRelease_n();
    swift_release();
    if (v45)
    {
      swift_retain();
      sub_1D26CCC54();
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    v59 = (uint64_t)v92;
    v60 = v95 & 1;
    v61 = v96;
    v62 = sub_1D26CCCB4();
    v64 = v63;
    v66 = v65;
    swift_release();
    v67 = v64;
    v68 = v62;
    v69 = v66 & 1;
    sub_1D25725E0(v40, v61, v60);
    swift_bridgeObjectRelease();
    sub_1D25725F0(v68, v67, v66 & 1);
    swift_bridgeObjectRetain();
    sub_1D26CCAB0();
    v70 = v90;
    v71 = v91;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v59, 1, v91) == 1)
    {
      sub_1D25725E0(v68, v67, v69);
      swift_bridgeObjectRelease();
      sub_1D253703C(v59, &qword_1ED962868);
    }
    else
    {
      v72 = v82;
      (*(void (**)(char *, uint64_t, uint64_t))(v70 + 32))(v82, v59, v71);
      v73 = sub_1D26CCCE4();
      v97 = v74;
      v76 = v75 & 1;
      sub_1D25725E0(v68, v67, v69);
      swift_bridgeObjectRelease();
      sub_1D25725E0(v68, v67, v69);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v71);
      v68 = v73;
      v67 = v97;
      v69 = v76;
    }
    if (*(_BYTE *)(v105 + v83) == 1)
    {
      if (sub_1D26CCA98())
      {
        v77 = sub_1D26CCC84();
        v79 = v78;
        v81 = v80 & 1;
        swift_release();
        sub_1D25725E0(v68, v67, v69);
        swift_bridgeObjectRelease();
        v68 = v77;
        v67 = v79;
        v69 = v81;
      }
    }
    v24 = v102;
    v25 = v101 + 1;
    v26 = v103 & 1;
    v27 = v99;
    v28 = sub_1D26CCCA8();
    v16 = v29;
    v103 = v30 & 1;
    v31 = v27;
    v14 = v32;
    v33 = v24;
    v12 = v28;
    sub_1D25725E0(v31, v33, v26);
    swift_bridgeObjectRelease();
    sub_1D25725E0(v68, v67, v69);
    v22 = v25;
    swift_bridgeObjectRelease();
    v6 = v87;
    v98(v106, v87);
    v34 = v25 == v89;
    v7 = v86;
    v10 = v85;
    result = v84;
    if (v34)
      goto LABEL_40;
  }
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

unint64_t sub_1D256FC2C(unint64_t result)
{
  unint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  uint64_t v12;
  void *v13;
  __int128 v14;
  __int128 v15;
  _BYTE v16[24];
  uint64_t v17;

  if (result)
  {
    v1 = result;
    if (result >> 62)
      goto LABEL_28;
    v2 = *(_QWORD *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v2; v2 = sub_1D26CE1F0())
    {
      v3 = (void *)*MEMORY[0x1E0CA8328];
      v13 = (void *)*MEMORY[0x1E0CA8318];
      v4 = 4;
      v11 = (void *)*MEMORY[0x1E0CA8328];
      v12 = v2;
      while (1)
      {
        v5 = v4 - 4;
        if ((v1 & 0xC000000000000001) == 0)
          break;
        v6 = (id)MEMORY[0x1D8239890](v4 - 4, v1);
        v7 = v4 - 3;
        if (__OFADD__(v5, 1))
          goto LABEL_27;
LABEL_12:
        v8 = v6;
        v9 = v3;
        if (objc_msgSend(v8, sel___swift_objectForKeyedSubscript_, v9))
        {
          sub_1D26CDFA4();
          swift_unknownObjectRelease();
        }
        else
        {
          v14 = 0u;
          v15 = 0u;
        }
        sub_1D25384CC((uint64_t)&v14, (uint64_t)v16, &qword_1ED96FCE0);
        if (v17)
        {
          if ((swift_dynamicCast() & 1) != 0)
          {

            v10 = v13;
            if (objc_msgSend(v8, (SEL)&selRef_objCType + 6, v10))
            {
              sub_1D26CDFA4();
              swift_unknownObjectRelease();

            }
            else
            {

              v14 = 0u;
              v15 = 0u;
            }
            sub_1D25384CC((uint64_t)&v14, (uint64_t)v16, &qword_1ED96FCE0);
            if (!v17)
            {

              sub_1D253703C((uint64_t)v16, &qword_1ED96FCE0);
LABEL_26:
              v3 = v11;
              v2 = v12;
              goto LABEL_6;
            }
            if ((swift_dynamicCast() & 1) == 0)
            {

              goto LABEL_26;
            }

            v3 = v11;
            v2 = v12;
          }
          else
          {

          }
        }
        else
        {

          sub_1D253703C((uint64_t)v16, &qword_1ED96FCE0);
        }
LABEL_6:
        ++v4;
        if (v7 == v2)
          goto LABEL_29;
      }
      v6 = *(id *)(v1 + 8 * v4);
      v7 = v4 - 3;
      if (!__OFADD__(v5, 1))
        goto LABEL_12;
LABEL_27:
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
    }
LABEL_29:
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1D256FF04@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  result = sub_1D256F398();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4 & 1;
  *(_QWORD *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1D256FF34@<X0>(id *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  _QWORD v63[2];
  uint64_t v64;
  id v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  id v82;

  v74 = a2;
  v76 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBE0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v77 = (char *)v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v75 = (char *)v63 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA98);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v72 = (char *)v63 - v13;
  v14 = sub_1D26CB9DC();
  MEMORY[0x1E0C80A78](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD70);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v73 = (uint64_t)v63 - v19;
  v20 = *a1;
  if (*a1 && objc_msgSend(*a1, sel_showsDateAlongsideText))
  {
    type metadata accessor for InlineDateModifier(0);
    v70 = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
    sub_1D26CCF24();
    sub_1D25704A8();
    sub_1D25369B0((unint64_t *)&qword_1ED96C8C8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0858]);
    v21 = sub_1D26CCCFC();
    v23 = v22;
    v25 = v24 & 1;
    sub_1D256B874(0, v20);
    v69 = v12;
    v26 = sub_1D26CCCB4();
    v67 = v27;
    v68 = v26;
    v29 = v28;
    v71 = v30;
    swift_release();
    v66 = v29 & 1;
    sub_1D25725E0(v21, v23, v25);
    swift_bridgeObjectRelease();
    v65 = v20;
    sub_1D26CC810();
    v31 = sub_1D26CCD08();
    v33 = v32;
    v63[1] = v34;
    v36 = v35 & 1;
    sub_1D256B874(0, v20);
    v37 = sub_1D26CCCB4();
    v64 = v4;
    v38 = v37;
    v40 = v39;
    LOBYTE(v21) = v41;
    v43 = v42;
    swift_release();
    sub_1D25725E0(v31, v33, v36);
    swift_bridgeObjectRelease();
    v78 = v38;
    v79 = v40;
    v80 = v21 & 1;
    v81 = v43;
    v82 = v20;
    v44 = v65;
    v65 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA20);
    sub_1D25744FC();
    v45 = (uint64_t)v72;
    sub_1D26CCDEC();
    v46 = v38;
    v4 = v64;
    sub_1D25725E0(v46, v40, v21 & 1);

    swift_bridgeObjectRelease();
    v47 = (uint64_t)v69;
    sub_1D2537078(v45, (uint64_t)v69, &qword_1ED96CA98);
    v48 = v67;
    v49 = v68;
    *(_QWORD *)v18 = v68;
    *((_QWORD *)v18 + 1) = v48;
    LOBYTE(v21) = v66;
    v18[16] = v66;
    *((_QWORD *)v18 + 3) = v71;
    *((_QWORD *)v18 + 4) = v20;
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA28);
    sub_1D2537078(v47, (uint64_t)&v18[*(int *)(v50 + 48)], &qword_1ED96CA98);
    v51 = v21;
    sub_1D25725F0(v49, v48, v21);
    swift_bridgeObjectRetain();
    v52 = v65;
    sub_1D253703C(v45, &qword_1ED96CA98);
    v5 = v70;
    sub_1D253703C(v47, &qword_1ED96CA98);
    sub_1D25725E0(v49, v48, v51);

    swift_bridgeObjectRelease();
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v18, 0, 1, v53);
    v54 = v73;
    sub_1D25384CC((uint64_t)v18, v73, &qword_1ED96CD70);
  }
  else
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD68);
    v54 = v73;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56))(v73, 1, 1, v55);
  }
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v57 = v75;
  v56(v75, v74, v4);
  sub_1D2537078(v54, (uint64_t)v18, &qword_1ED96CD70);
  v58 = v77;
  v56(v77, (uint64_t)v57, v4);
  v59 = v76;
  sub_1D2537078((uint64_t)v18, v76, &qword_1ED96CD70);
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD78);
  v56((char *)(v59 + *(int *)(v60 + 48)), (uint64_t)v58, v4);
  v61 = *(void (**)(char *, uint64_t))(v5 + 8);
  v61(v57, v4);
  sub_1D253703C(v54, &qword_1ED96CD70);
  v61(v58, v4);
  return sub_1D253703C((uint64_t)v18, &qword_1ED96CD70);
}

id sub_1D25704A8()
{
  id *v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  void *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  void *v28;
  char **v29;
  id v30;
  uint64_t v32;
  id *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v2 = sub_1D26CBA60();
  v38 = *(_QWORD *)(v2 - 8);
  v39 = v2;
  MEMORY[0x1E0C80A78](v2);
  v37 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8D0);
  MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CBAA8();
  v35 = *(_QWORD *)(v6 - 8);
  v36 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CBA78();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v32 - v14;
  v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  type metadata accessor for InlineDateModifier(0);
  sub_1D25EBF94((uint64_t)v15);
  v17 = (void *)sub_1D26CBA48();
  v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v15, v9);
  objc_msgSend(v16, sel_setLocale_, v17);

  v33 = v1;
  v19 = (uint64_t)v34;
  sub_1D25EBF6C((uint64_t)v8);
  v20 = (void *)sub_1D26CBA84();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
  objc_msgSend(v16, sel_setTimeZone_, v20);

  objc_msgSend(v16, sel_setFormattingContext_, 2);
  sub_1D25EBF94((uint64_t)v13);
  v21 = v37;
  sub_1D26CBA6C();
  v18(v13, v9);
  sub_1D26CBA54();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v39);
  v22 = sub_1D26CBA3C();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v19, 1, v22) != 1)
  {
    v24 = sub_1D26CBA30();
    v26 = v25;
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v19, v22);
    if (v24 == 28261 && v26 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
      if ((v27 & 1) == 0)
        goto LABEL_8;
    }
    v28 = (void *)sub_1D26CD914();
    v29 = &selRef_setDateFormat_;
    goto LABEL_12;
  }
  sub_1D253703C(v19, &qword_1ED96C8D0);
LABEL_8:
  if (*v33)
  {
    v30 = objc_msgSend(*v33, sel__effectiveDateFormat);
    sub_1D26CD938();

  }
  else
  {
    sub_1D26CD938();
  }
  v28 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v29 = &selRef_setLocalizedDateFormatFromTemplate_;
LABEL_12:
  objc_msgSend(v16, *v29, v28);

  return v16;
}

uint64_t sub_1D257085C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v0 = sub_1D26CDD7C();
  v17 = *(_QWORD *)(v0 - 8);
  v18 = v0;
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v16 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D26CDE60();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1F30];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C8E8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = objc_msgSend((id)objc_opt_self(), sel_defaultCenter);
  sub_1D26CDE6C();

  sub_1D26CDD64();
  sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
  v13 = (void *)sub_1D26CDD94();
  v19 = v13;
  sub_1D25369B0((unint64_t *)&qword_1ED96C050, v4, MEMORY[0x1E0CB1F20]);
  sub_1D25744A4();
  sub_1D26CC270();

  (*(void (**)(char *, uint64_t))(v17 + 8))(v2, v18);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  sub_1D2536488(&qword_1ED96C8E0, &qword_1ED96C8E8, MEMORY[0x1E0C95C28]);
  v14 = sub_1D26CC204();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v14;
}

uint64_t sub_1D2570A74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint8_t *v19;
  uint8_t *v20;
  _QWORD v22[2];

  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v22 - v8;
  v10 = sub_1D26CC09C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(int *)(type metadata accessor for InlineDateModifier(0) + 20);
  v22[1] = a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2 + v14, v10);
  v15 = sub_1D26CC084();
  v16 = sub_1D26CDD04();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    v22[0] = v4;
    v18 = v3;
    v19 = v17;
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1D2531000, v15, v16, "Significant time changed - reloading inline date modifier", v17, 2u);
    v20 = v19;
    v3 = v18;
    v4 = v22[0];
    MEMORY[0x1D823A5E0](v20, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_1D26CB9D0();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
  sub_1D26CCF30();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1D2570C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (**v16)(uint64_t);
  uint64_t v18;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD48);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)v10 = sub_1D26CC7B0();
  *((_QWORD *)v10 + 1) = 0;
  v10[16] = 0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C968);
  sub_1D256FF34(v3, a1, (uint64_t)&v10[*(int *)(v11 + 44)]);
  v12 = sub_1D257085C();
  sub_1D2534120((uint64_t)v3, (uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for InlineDateModifier);
  v13 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v14 = swift_allocObject();
  sub_1D2539ADC((uint64_t)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13, type metadata accessor for InlineDateModifier);
  sub_1D2537078((uint64_t)v10, a3, &qword_1ED96CD48);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CAC8);
  *(_QWORD *)(a3 + *(int *)(v15 + 52)) = v12;
  v16 = (uint64_t (**)(uint64_t))(a3 + *(int *)(v15 + 56));
  *v16 = sub_1D2574468;
  v16[1] = (uint64_t (*)(uint64_t))v14;
  return sub_1D253703C((uint64_t)v10, &qword_1ED96CD48);
}

uint64_t sub_1D2570DB8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unsigned int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  void *v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t KeyPath;
  uint64_t *v44;
  _BYTE v46[12];
  unsigned int v47;
  uint64_t v48;
  uint64_t v49;

  v6 = sub_1D26CCE70();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v46[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD20);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v46[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB60);
  MEMORY[0x1E0C80A78](v13);
  v15 = &v46[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C9B0);
  MEMORY[0x1E0C80A78](v16);
  v18 = &v46[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a2)
    goto LABEL_6;
  v19 = objc_msgSend(a2, sel_symbolScale);
  if (v19 == (id)3)
  {
    v26 = (unsigned int *)MEMORY[0x1E0CDF7C0];
LABEL_9:
    v47 = *v26;
    v27 = sub_1D26CCF00();
    v48 = a1;
    v49 = a3;
    v28 = v27;
    v29 = v6;
    v30 = *(_QWORD *)(v27 - 8);
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v30 + 104))(v12, v47, v27);
    v31 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v30 + 56);
    v6 = v29;
    v32 = v28;
    a3 = v49;
    v31(v12, 0, 1, v32);
    goto LABEL_10;
  }
  if (v19 == (id)2)
  {
    v26 = (unsigned int *)MEMORY[0x1E0CDF7D8];
    goto LABEL_9;
  }
  if (v19 != (id)1)
  {
LABEL_6:
    v25 = sub_1D26CCF00();
    (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 1, 1, v25);
    goto LABEL_10;
  }
  v47 = *MEMORY[0x1E0CDF7D0];
  v20 = sub_1D26CCF00();
  v48 = v6;
  v49 = a3;
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v22 + 104))(v12, v47, v20);
  v23 = *(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v22 + 56);
  v24 = v21;
  v6 = v48;
  a3 = v49;
  v23(v12, 0, 1, v24);
LABEL_10:
  sub_1D257112C((uint64_t)v12, (uint64_t)v15);
  sub_1D253703C((uint64_t)v12, &qword_1ED96CD20);
  if (a2 && (v33 = objc_msgSend(a2, sel_foregroundColor)) != 0)
  {
    v34 = v33;
    (*(void (**)(_BYTE *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0CDF3E0], v6);
    objc_msgSend(v34, sel_red);
    v36 = v35;
    objc_msgSend(v34, sel_green);
    v38 = v37;
    objc_msgSend(v34, sel_blue);
    v40 = v39;
    objc_msgSend(v34, sel_alpha);
    v42 = MEMORY[0x1D8238690](v9, v36, v38, v40, v41);

  }
  else
  {
    v42 = sub_1D26CCEB8();
  }
  KeyPath = swift_getKeyPath();
  sub_1D2537078((uint64_t)v15, (uint64_t)v18, &qword_1ED96CB60);
  v44 = (uint64_t *)&v18[*(int *)(v16 + 36)];
  *v44 = KeyPath;
  v44[1] = v42;
  sub_1D253703C((uint64_t)v15, &qword_1ED96CB60);
  return sub_1D25384CC((uint64_t)v18, a3, &qword_1ED96C9B0);
}

uint64_t sub_1D257112C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t KeyPath;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC08);
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CAE8);
  MEMORY[0x1E0C80A78](v25);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C9C0);
  MEMORY[0x1E0C80A78](v26);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD20);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D26CCF00();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2537078(a1, (uint64_t)v12, &qword_1ED96CD20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1D253703C((uint64_t)v12, &qword_1ED96CD20);
    v17 = v27;
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
    v18(v5, v24, v3);
    v18(v7, (uint64_t)v5, v3);
    swift_storeEnumTagMultiPayload();
    sub_1D2572484();
    sub_1D2536488(&qword_1ED96CC00, &qword_1ED96CC08, MEMORY[0x1E0CDBF10]);
    sub_1D26CC90C();
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v5, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    KeyPath = swift_getKeyPath();
    v21 = (uint64_t *)&v9[*(int *)(v26 + 36)];
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CCD8);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)v21 + *(int *)(v22 + 28), v16, v13);
    *v21 = KeyPath;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v9, v24, v3);
    sub_1D2537078((uint64_t)v9, (uint64_t)v7, &qword_1ED96C9C0);
    swift_storeEnumTagMultiPayload();
    sub_1D2572484();
    sub_1D2536488(&qword_1ED96CC00, &qword_1ED96CC08, MEMORY[0x1E0CDBF10]);
    sub_1D26CC90C();
    sub_1D253703C((uint64_t)v9, &qword_1ED96C9C0);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
}

uint64_t sub_1D257145C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void **v2;

  return sub_1D2570DB8(a1, *v2, a2);
}

uint64_t sub_1D2571464(void *a1)
{
  id v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  id v15;

  if (!a1)
    return sub_1D26CCBAC();
  v2 = a1;
  v3 = objc_msgSend(v2, sel_fontSpecification);
  if (!v3)
  {

    return sub_1D26CCBAC();
  }
  v4 = v3;
  v5 = objc_msgSend(v3, sel_name);
  if (v5)
  {
    v6 = v5;
    sub_1D26CD938();

    v7 = objc_msgSend(v4, sel_size);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_doubleValue);
      v9 = sub_1D26CCC0C();

      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
      objc_msgSend(v14, sel_pointSize);

      v9 = sub_1D26CCC0C();
      swift_bridgeObjectRelease();
    }
    return v9;
  }
  else
  {
    v11 = objc_msgSend(v4, sel_size);
    if (v11)
    {
      v12 = v11;
      objc_msgSend(v11, sel_doubleValue);
      objc_msgSend(v4, sel_design);
      v13 = sub_1D2572600(a1);

    }
    else
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_preferredFontForTextStyle_, *MEMORY[0x1E0DC4A88]);
      objc_msgSend(v15, sel_pointSize);

      objc_msgSend(v4, sel_design);
      v13 = sub_1D2572600(a1);

    }
    return v13;
  }
}

uint64_t sub_1D25716A0(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;

  if (!(a1 >> 62))
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    result = swift_retain();
    if (v4)
      goto LABEL_3;
LABEL_10:
    v9 = a2;
LABEL_11:
    swift_bridgeObjectRelease();
    return v9;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  result = sub_1D26CE1F0();
  v4 = result;
  if (!result)
    goto LABEL_10;
LABEL_3:
  if (v4 >= 1)
  {
    v6 = 0;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v7 = (id)MEMORY[0x1D8239890](v6, a1);
      else
        v7 = *(id *)(a1 + 8 * v6 + 32);
      v8 = v7;
      ++v6;
      objc_msgSend(v7, sel_type);
      objc_msgSend(v8, sel_selector);
      v9 = sub_1D26CCC3C();

      swift_release();
    }
    while (v4 != v6);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D25717CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC5B8();
  *a1 = result;
  return result;
}

uint64_t sub_1D25717F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC5B8();
  *a1 = result;
  return result;
}

uint64_t sub_1D257181C()
{
  swift_retain();
  return sub_1D26CC5C4();
}

uint64_t sub_1D2571844()
{
  swift_retain();
  return sub_1D26CC5C4();
}

unint64_t sub_1D257186C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962B88;
  if (!qword_1ED962B88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962B90);
    v2[0] = sub_1D25369B0(&qword_1ED962DA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF04A0], MEMORY[0x1E0CF0498]);
    v2[1] = sub_1D2536488(&qword_1ED96CCB0, &qword_1ED96CCB8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962B88);
  }
  return result;
}

unint64_t sub_1D2571908()
{
  unint64_t result;

  result = qword_1ED96D1E0;
  if (!qword_1ED96D1E0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D1AE8, &type metadata for TextParametersModifier);
    atomic_store(result, (unint64_t *)&qword_1ED96D1E0);
  }
  return result;
}

uint64_t sub_1D257194C()
{
  return sub_1D257220C(&qword_1ED962C48, &qword_1ED962C50, (uint64_t (*)(void))sub_1D2571970, MEMORY[0x1E0CD9C20]);
}

unint64_t sub_1D2571970()
{
  unint64_t result;

  result = qword_1ED96D450;
  if (!qword_1ED96D450)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D1A98, &type metadata for MetadataInlineShrinkToFitModifier);
    atomic_store(result, (unint64_t *)&qword_1ED96D450);
  }
  return result;
}

uint64_t type metadata accessor for MetadataTextView(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED96CEC8);
}

uint64_t sub_1D25719C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D25719D8()
{
  return swift_getOpaqueTypeConformance2();
}

_QWORD *initializeBufferWithCopyOfBuffer for MetadataInlineGraphicView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CCAF8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 24);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
    v9 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v9;
    v10 = v9;
  }
  return a1;
}

void destroy for MetadataInlineGraphicView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CCAF8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_1D26CCAF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t assignWithCopy for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_1D26CCAF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v7 = *(int *)(a3 + 24);
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  return a1;
}

uint64_t initializeWithTake for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D26CCAF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MetadataInlineGraphicView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_1D26CCAF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataInlineGraphicView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2571C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D26CCAF8();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for MetadataInlineGraphicView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2571D0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D26CCAF8();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

uint64_t sub_1D2571D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D257215C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18]);
}

_QWORD *initializeBufferWithCopyOfBuffer for MetadataTextView(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CCAD4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(_QWORD *)((char *)a1 + v8) = v10;
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v11 = v10;
  }
  return a1;
}

void destroy for MetadataTextView(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CCAD4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;

  v6 = sub_1D26CCAD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v10 = v9;
  return a1;
}

uint64_t assignWithCopy for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_1D26CCAD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D26CCAD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for MetadataTextView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_1D26CCAD4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  *(_BYTE *)(a1 + *(int *)(a3 + 24)) = *(_BYTE *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataTextView()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2572034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D26CCAD4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for MetadataTextView()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25720C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D26CCAD4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_1D2572140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D257215C(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCC90]);
}

uint64_t sub_1D257215C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D25721D8()
{
  return sub_1D257220C(&qword_1ED962D18, &qword_1ED962D20, sub_1D257194C, MEMORY[0x1E0CDB8A0]);
}

uint64_t sub_1D257220C(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_1D2575DEC(&qword_1ED962C18, &qword_1ED962C20, (uint64_t (*)(void))sub_1D257186C, (uint64_t (*)(void))sub_1D2571908);
    v9[1] = a3();
    result = MEMORY[0x1D823A4E4](a4, v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D25722A0()
{
  return MEMORY[0x1E0CDDD58];
}

ValueMetadata *type metadata accessor for MetadataInlineShrinkToFitModifier()
{
  return &type metadata for MetadataInlineShrinkToFitModifier;
}

void **initializeBufferWithCopyOfBuffer for TextParametersModifier(void **a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  *a1 = *a2;
  v4 = v3;
  return a1;
}

void **assignWithCopy for TextParametersModifier(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a1;
  v4 = *a2;
  *a1 = *a2;
  v5 = v4;

  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for TextParametersModifier(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for TextParametersModifier(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TextParametersModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextParametersModifier()
{
  return &type metadata for TextParametersModifier;
}

uint64_t sub_1D2572414()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2572424()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2572434@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC4BC();
  *a1 = result;
  return result;
}

uint64_t sub_1D257245C()
{
  swift_retain();
  return sub_1D26CC4C8();
}

unint64_t sub_1D2572484()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96C9B8;
  if (!qword_1ED96C9B8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96C9C0);
    v2[0] = sub_1D2536488(&qword_1ED96CC00, &qword_1ED96CC08, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D2536488(&qword_1ED96CCD0, &qword_1ED96CCD8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96C9B8);
  }
  return result;
}

uint64_t sub_1D2572520()
{
  return sub_1D26CC468();
}

uint64_t sub_1D2572540(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1D25725BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2572540(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDF7E8], MEMORY[0x1E0CDA4B0]);
}

uint64_t sub_1D25725E0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t sub_1D25725F0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t sub_1D2572600(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD08);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD00);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CCBA0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    sub_1D253703C((uint64_t)v7, &qword_1ED96CD00);
    goto LABEL_19;
  }
  v12 = a1;
  v13 = objc_msgSend(v12, sel_fontSpecification);
  if (!v13)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_12;
  }
  v14 = v13;
  v15 = objc_msgSend(v13, sel_design);
  if (v15 == (id)4)
  {
    sub_1D26CCB94();
    goto LABEL_9;
  }
  if (v15 == (id)5)
  {
    sub_1D26CCB88();
LABEL_9:

    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);

LABEL_11:
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_12:
    sub_1D253703C((uint64_t)v7, &qword_1ED96CD00);
    v16 = v12;
    v17 = objc_msgSend(v16, sel_fontSpecification);
    if (v17)
    {
      v18 = v17;
      v19 = objc_msgSend(v17, sel_design);

      if (v19 == (id)1)
      {
        v20 = (unsigned int *)MEMORY[0x1E0CDD530];
        goto LABEL_20;
      }
      if (v19 == (id)2)
      {
        v20 = (unsigned int *)MEMORY[0x1E0CDD550];
        goto LABEL_20;
      }
      if (v19 == (id)3)
      {
        v20 = (unsigned int *)MEMORY[0x1E0CDD538];
LABEL_20:
        v22 = *v20;
        v23 = sub_1D26CCBDC();
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v4, v22, v23);
        sub_1D26CCBDC();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v4, 0, 1, v23);
        v21 = sub_1D26CCC24();
        sub_1D253703C((uint64_t)v4, &qword_1ED96CD08);
        return v21;
      }
    }
    else
    {

    }
LABEL_19:
    v20 = (unsigned int *)MEMORY[0x1E0CDD548];
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  sub_1D26CCC00();
  v21 = sub_1D26CCC18();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v21;
}

unint64_t sub_1D257293C()
{
  unint64_t result;

  result = qword_1ED96FC98;
  if (!qword_1ED96FC98)
  {
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED96FC98);
  }
  return result;
}

uint64_t sub_1D2572998()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25729A8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t type metadata accessor for InlineTextView(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96CE78);
}

uint64_t getEnumTagSinglePayload for _MetadataInlineShrinkToFitLayout(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for _MetadataInlineShrinkToFitLayout(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for _MetadataInlineShrinkToFitLayout()
{
  return &type metadata for _MetadataInlineShrinkToFitLayout;
}

unint64_t sub_1D2572A30()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96C9A8;
  if (!qword_1ED96C9A8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96C9B0);
    v2[0] = sub_1D2572AB4();
    v2[1] = sub_1D2536488(&qword_1ED96CCC0, &qword_1ED96CCC8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96C9A8);
  }
  return result;
}

unint64_t sub_1D2572AB4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CB58;
  if (!qword_1ED96CB58)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CB60);
    v2[0] = sub_1D2572484();
    v2[1] = sub_1D2536488(&qword_1ED96CC00, &qword_1ED96CC08, MEMORY[0x1E0CDBF10]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CB58);
  }
  return result;
}

unint64_t sub_1D2572B3C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC827C0;
  if (!qword_1EFC827C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC827A0);
    v2[0] = sub_1D2536488(&qword_1EFC827C8, &qword_1EFC827D0, MEMORY[0x1E0CD8A20]);
    v2[1] = sub_1D2536488(&qword_1EFC827D8, &qword_1EFC827A8, MEMORY[0x1E0CDBF10]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD91E0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC827C0);
  }
  return result;
}

unint64_t sub_1D2572BDC()
{
  unint64_t result;

  result = qword_1EFC827E0;
  if (!qword_1EFC827E0)
  {
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB3D0], MEMORY[0x1E0CDB3F0]);
    atomic_store(result, (unint64_t *)&qword_1EFC827E0);
  }
  return result;
}

unint64_t sub_1D2572C24()
{
  unint64_t result;

  result = qword_1EFC827E8;
  if (!qword_1EFC827E8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D1BD4, &type metadata for _MetadataInlineShrinkToFitLayout);
    atomic_store(result, (unint64_t *)&qword_1EFC827E8);
  }
  return result;
}

uint64_t sub_1D2572C68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2572C78()
{
  return objectdestroyTm_0(type metadata accessor for InlineTextView);
}

uint64_t sub_1D2572C84(uint64_t a1)
{
  return sub_1D25745B0(a1, type metadata accessor for InlineTextView, (uint64_t (*)(uint64_t, uint64_t))sub_1D256A6E8);
}

unint64_t sub_1D2572C98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CA08;
  if (!qword_1ED96CA08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CA10);
    v2[0] = sub_1D2536488(&qword_1ED96C980, &qword_1ED96C988, MEMORY[0x1E0CD9318]);
    v2[1] = sub_1D2536488(&qword_1ED96CCA0, &qword_1ED96CCA8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CA08);
  }
  return result;
}

uint64_t sub_1D2572D34()
{
  return sub_1D26CC4D4();
}

uint64_t sub_1D2572D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2572540(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CD9AA8], MEMORY[0x1E0CDA650]);
}

uint64_t type metadata accessor for InlineDateModifier(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96D008);
}

uint64_t type metadata accessor for MetadataInlineView(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96D028);
}

uint64_t sub_1D2572DA0()
{
  return sub_1D26CC5E8();
}

uint64_t sub_1D2572DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2572540(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CB1470], MEMORY[0x1E0CDA9B8]);
}

uint64_t sub_1D2572DE4()
{
  return sub_1D26CC5D0();
}

uint64_t sub_1D2572E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2572540(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CDA920]);
}

uint64_t sub_1D2572E28(uint64_t a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t result;
  _BYTE v16[8];
  char v17;

  v11 = sub_1D26CC354();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D26CC384();
  sub_1D25369B0(&qword_1EFC827F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9370], MEMORY[0x1E0CD9390]);
  sub_1D26CDC44();
  sub_1D26CDC68();
  result = sub_1D26CDC5C();
  if (result == 1)
  {
    sub_1D26CC390();
    sub_1D26CD05C();
    v17 = 0;
    v16[0] = 0;
    sub_1D256E5D0(*(uint64_t *)&a4, 0, *(uint64_t *)&a5, 0, a1, a7);
    v17 = 0;
    v16[0] = 0;
    sub_1D26CC348();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

void **sub_1D2572FC8(void **a1, void **a2, int *a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D26CC09C();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = a3[6];
    v15 = (char *)v7 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_1D26CB9DC();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
    *(_QWORD *)&v15[*(int *)(v18 + 28)] = *(_QWORD *)&v16[*(int *)(v18 + 28)];
    v19 = a3[7];
    v20 = (void **)((char *)v7 + v19);
    v21 = (void **)((char *)a2 + v19);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C928);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_1D26CBAA8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v23 = a3[8];
    v24 = (void **)((char *)v7 + v23);
    v25 = (void **)((char *)a2 + v23);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v26 = sub_1D26CBA78();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v7;
}

uint64_t sub_1D25731A4(id *a1, int *a2)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v4 = (char *)a1 + a2[5];
  v5 = sub_1D26CC09C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)a1 + a2[6];
  v7 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
  swift_release();
  v8 = (char *)a1 + a2[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C928);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1D26CBAA8();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = (char *)a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C918);
  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_release();
  v11 = sub_1D26CBA78();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

void **sub_1D25732D8(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = *a2;
  *a1 = *a2;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D26CC09C();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
  *(_QWORD *)&v14[*(int *)(v17 + 28)] = *(_QWORD *)&v15[*(int *)(v17 + 28)];
  v18 = a3[7];
  v19 = (void **)((char *)a1 + v18);
  v20 = (void **)((char *)a2 + v18);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C928);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = sub_1D26CBAA8();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  }
  else
  {
    *v19 = *v20;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  v22 = a3[8];
  v23 = (void **)((char *)a1 + v22);
  v24 = (void **)((char *)a2 + v22);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v25 = sub_1D26CBA78();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *v23 = *v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_1D2573484(void **a1, void **a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = *a1;
  v7 = *a2;
  *a1 = *a2;
  v8 = v7;

  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D26CC09C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
  *(_QWORD *)&v14[*(int *)(v17 + 28)] = *(_QWORD *)&v15[*(int *)(v17 + 28)];
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v18 = a3[7];
    v19 = (void **)((char *)a1 + v18);
    v20 = (void **)((char *)a2 + v18);
    sub_1D253703C((uint64_t)a1 + v18, &qword_1ED96C928);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C928);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = sub_1D26CBAA8();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    v22 = a3[8];
    v23 = (void **)((char *)a1 + v22);
    v24 = (void **)((char *)a2 + v22);
    sub_1D253703C((uint64_t)a1 + v22, &qword_1ED96C918);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_1D26CBA78();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    }
    else
    {
      *v23 = *v24;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_1D2573660(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D26CC09C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
  *(_QWORD *)&v11[*(int *)(v14 + 28)] = *(_QWORD *)&v12[*(int *)(v14 + 28)];
  v15 = a3[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C928);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = sub_1D26CBAA8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v16, v17, v19);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  v20 = a3[8];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v24 = sub_1D26CBA78();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v21, v22, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  return a1;
}

void **sub_1D2573800(void **a1, void **a2, int *a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v6 = *a1;
  *a1 = *a2;

  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D26CC09C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
  *(_QWORD *)&v12[*(int *)(v15 + 28)] = *(_QWORD *)&v13[*(int *)(v15 + 28)];
  swift_release();
  if (a1 != a2)
  {
    v16 = a3[7];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    sub_1D253703C((uint64_t)a1 + v16, &qword_1ED96C928);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C928);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v20 = sub_1D26CBAA8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    v21 = a3[8];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    sub_1D253703C((uint64_t)a1 + v21, &qword_1ED96C918);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C918);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v25 = sub_1D26CBA78();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v22, v23, v25);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1D25739D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25739E4(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1D26CC09C();
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = a3[5];
    }
    else
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
      v10 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
      {
        v11 = v13;
        v12 = a3[6];
      }
      else
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C950);
        v10 = *(_QWORD *)(v14 - 8);
        if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
        {
          v11 = v14;
          v12 = a3[7];
        }
        else
        {
          v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C948);
          v10 = *(_QWORD *)(v11 - 8);
          v12 = a3[8];
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a1[v12], a2, v11);
  }
}

uint64_t sub_1D2573AE4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D2573AF0(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v8 = sub_1D26CC09C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[5];
    }
    else
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[6];
      }
      else
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C950);
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[7];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C948);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[8];
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1D2573BE0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D26CC09C();
  if (v0 <= 0x3F)
  {
    sub_1D25756A0(319, &qword_1ED96CD30, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CDF9A8]);
    if (v1 <= 0x3F)
    {
      sub_1D25756A0(319, &qword_1ED96C930, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1470], MEMORY[0x1E0CD87D0]);
      if (v2 <= 0x3F)
      {
        sub_1D25756A0(319, &qword_1ED96C920, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0E38], MEMORY[0x1E0CD87D0]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t *sub_1D2573CF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  id v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CCB1C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    v11 = (char *)a1 + v9;
    v12 = (char *)a2 + v9;
    v13 = sub_1D26CC09C();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v10;
    v14(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_1D2573DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

  v5 = a1 + *(int *)(a2 + 24);
  v6 = sub_1D26CC09C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1D2573E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  id v14;

  v6 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = a1 + v8;
  v11 = a2 + v8;
  v12 = sub_1D26CC09C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14 = v9;
  v13(v10, v11, v12);
  return a1;
}

uint64_t sub_1D2573EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1D2573F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1D2573FC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_1D2574054()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_13Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_1D26CCB1C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = sub_1D26CC09C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v11);
  }
}

uint64_t sub_1D2574118()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_14Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1D26CCB1C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
      return result;
    }
    v10 = sub_1D26CC09C();
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D25741CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CCB1C();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CC09C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1D257425C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CB98;
  if (!qword_1ED96CB98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CBA0);
    v2[0] = sub_1D2572C98();
    v2[1] = sub_1D2536488(&qword_1ED96C980, &qword_1ED96C988, MEMORY[0x1E0CD9318]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CB98);
  }
  return result;
}

uint64_t sub_1D25742E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D25742F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2574300()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  id *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for InlineDateModifier(0);
  v2 = *(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80);
  v3 = (id *)(v0 + ((v2 + 16) & ~v2));

  v4 = (char *)v3 + v1[5];
  v5 = sub_1D26CC09C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = (char *)v3 + v1[6];
  v7 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD28);
  swift_release();
  v8 = (char *)v3 + v1[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C928);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = sub_1D26CBAA8();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  else
  {
    swift_release();
  }
  v10 = (char *)v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C918);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v11 = sub_1D26CBA78();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_1D2574468(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InlineDateModifier(0) - 8) + 80);
  return sub_1D2570A74(a1, v1 + ((v3 + 16) & ~v3));
}

unint64_t sub_1D25744A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96BFD0;
  if (!qword_1ED96BFD0)
  {
    v1 = sub_1D2539514(255, (unint64_t *)&qword_1ED96EE50);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEF7F8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96BFD0);
  }
  return result;
}

unint64_t sub_1D25744FC()
{
  unint64_t result;
  uint64_t v1;
  unint64_t v2;
  _QWORD v3[2];

  result = qword_1ED96CA18;
  if (!qword_1ED96CA18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CA20);
    v2 = sub_1D2571908();
    v3[0] = MEMORY[0x1E0CDDD58];
    v3[1] = v2;
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v3);
    atomic_store(result, (unint64_t *)&qword_1ED96CA18);
  }
  return result;
}

uint64_t type metadata accessor for MetadataInlineTextGraphicView(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED96C6D0);
}

uint64_t type metadata accessor for MetadataInlineView.IterableFallback(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96D018);
}

uint64_t sub_1D2574590()
{
  return objectdestroyTm_0(type metadata accessor for MetadataInlineView);
}

uint64_t sub_1D257459C(uint64_t a1)
{
  return sub_1D25745B0(a1, type metadata accessor for MetadataInlineView, (uint64_t (*)(uint64_t, uint64_t))sub_1D256C7B4);
}

uint64_t sub_1D25745B0(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a2(0) - 8) + 80);
  return a3(a1, v3 + ((v5 + 16) & ~v5));
}

unint64_t sub_1D257460C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC82830;
  if (!qword_1EFC82830)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82820);
    v2[0] = sub_1D25369B0(&qword_1ED96D430, type metadata accessor for MetadataInlineTextGraphicView, (uint64_t)&unk_1D26D1ECC);
    v2[1] = MEMORY[0x1E0CDA1F0];
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC82830);
  }
  return result;
}

uint64_t *sub_1D2574690(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CCAD4();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1D26CCAF8();
    v15 = *(_QWORD *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v17 = a3[6];
    v18 = a3[7];
    v19 = *(void **)((char *)a2 + v17);
    *(uint64_t *)((char *)a1 + v17) = (uint64_t)v19;
    v20 = (char *)a1 + v18;
    v21 = (char *)a2 + v18;
    v22 = sub_1D26CC09C();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    v24 = v19;
    v23(v20, v21, v22);
    v25 = a3[8];
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = sub_1D26CCA5C();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC60);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
  }
  return a1;
}

uint64_t sub_1D25748B8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  v4 = sub_1D26CCAD4();
  v5 = *(_QWORD *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = a1 + a2[5];
  v7 = sub_1D26CCAF8();
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);

  v9 = a1 + a2[7];
  v10 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
  v11 = a1 + a2[8];
  v12 = sub_1D26CCA5C();
  v13 = *(_QWORD *)(v12 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  return result;
}

char *sub_1D25749E0(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  id v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1D26CCAD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1D26CCAF8();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[6];
  v16 = a3[7];
  v17 = *(void **)&a2[v15];
  *(_QWORD *)&a1[v15] = v17;
  v18 = &a1[v16];
  v19 = &a2[v16];
  v20 = sub_1D26CC09C();
  v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22 = v17;
  v21(v18, v19, v20);
  v23 = a3[8];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_1D26CCA5C();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC60);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

char *sub_1D2574BDC(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  void *v23;
  id v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  uint64_t v36;

  v6 = sub_1D26CCAD4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1D26CCAF8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = *(void **)&a1[v21];
  v23 = *(void **)&a2[v21];
  *(_QWORD *)&a1[v21] = v23;
  v24 = v23;

  v25 = a3[7];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_1D26CC09C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  v29 = a3[8];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_1D26CCA5C();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  LODWORD(v27) = v34(v30, 1, v32);
  v35 = v34(v31, 1, v32);
  if (!(_DWORD)v27)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    goto LABEL_18;
  }
  if (v35)
  {
LABEL_18:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC60);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  return a1;
}

char *sub_1D2574EB4(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1D26CCAD4();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[5];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_1D26CCAF8();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = sub_1D26CC09C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = sub_1D26CCA5C();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC60);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  return a1;
}

char *sub_1D25750A8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(char *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  uint64_t v34;

  v6 = sub_1D26CCAD4();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  v12 = a3[5];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1D26CCAF8();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
LABEL_12:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v13, v14, v15);
LABEL_13:
  v21 = a3[6];
  v22 = *(void **)&a1[v21];
  *(_QWORD *)&a1[v21] = *(_QWORD *)&a2[v21];

  v23 = a3[7];
  v24 = &a1[v23];
  v25 = &a2[v23];
  v26 = sub_1D26CC09C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  v27 = a3[8];
  v28 = &a1[v27];
  v29 = &a2[v27];
  v30 = sub_1D26CCA5C();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  LODWORD(v25) = v32(v28, 1, v30);
  v33 = v32(v29, 1, v30);
  if (!(_DWORD)v25)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
    goto LABEL_18;
  }
  if (v33)
  {
LABEL_18:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC60);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
  return a1;
}

uint64_t sub_1D257537C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2575388(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int v14;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
  v10 = *(_QWORD *)(v9 - 8);
  if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
  {
    v11 = v9;
    v12 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v15 = sub_1D26CC09C();
    v10 = *(_QWORD *)(v15 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v15;
      v12 = a3[7];
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC60);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = a3[8];
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
  v13 = *(_QWORD *)(a1 + a3[6]);
  if (v13 >= 0xFFFFFFFF)
    LODWORD(v13) = -1;
  v14 = v13 - 1;
  if (v14 < 0)
    v14 = -1;
  return (v14 + 1);
}

uint64_t sub_1D2575490()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D257549C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC70);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC80);
    v14 = *(_QWORD *)(result - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = result;
      v15 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(_QWORD *)(a1 + a4[6]) = a2;
        return result;
      }
      v16 = sub_1D26CC09C();
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC60);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[8];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D2575594()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D25756A0(319, &qword_1ED96CC78, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCC90], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
  {
    sub_1D25756A0(319, &qword_1ED96CC88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCD18], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    if (v1 <= 0x3F)
    {
      sub_1D26CC09C();
      if (v2 <= 0x3F)
      {
        sub_1D25756A0(319, &qword_1ED96CC68, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDCBE0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

void sub_1D25756A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
}

uint64_t *sub_1D25756F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CCB1C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D26CBA24();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1D25757A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_1D25757FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_1D2575878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1D25758F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1D2575970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D26CCB1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1D25759EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25759F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_1D26CCB1C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_1D26CBA24();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t sub_1D2575A6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2575A78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_1D26CCB1C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_1D26CBA24();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1D2575AF4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CCB1C();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CBA24();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D2575B78()
{
  return sub_1D2536488(&qword_1ED96CAC0, &qword_1ED96CAC8, MEMORY[0x1E0CDA108]);
}

unint64_t sub_1D2575BA8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CBB0;
  if (!qword_1ED96CBB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CBB8);
    v2[0] = sub_1D2536488(&qword_1ED96C958, &qword_1ED96C960, MEMORY[0x1E0CD8CC8]);
    v2[1] = sub_1D25369B0(&qword_1ED96D430, type metadata accessor for MetadataInlineTextGraphicView, (uint64_t)&unk_1D26D1ECC);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CBB0);
  }
  return result;
}

uint64_t sub_1D2575C44()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1D2575C54()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CA70;
  if (!qword_1ED96CA70)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CA78);
    v2[0] = sub_1D2575CD8();
    v2[1] = sub_1D2536488(&qword_1ED96CCE0, &qword_1ED96CCE8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CA70);
  }
  return result;
}

unint64_t sub_1D2575CD8()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96C990;
  if (!qword_1ED96C990)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96C998);
    v2[0] = sub_1D25369B0(&qword_1ED96CEC0, type metadata accessor for MetadataTextView, (uint64_t)&protocol conformance descriptor for MetadataTextView);
    v2[1] = sub_1D2571908();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96C990);
  }
  return result;
}

uint64_t sub_1D2575D5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1D26CC780();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1D2575D8C()
{
  return sub_1D26CC78C();
}

uint64_t sub_1D2575DB8()
{
  return sub_1D2575DEC(&qword_1ED96CAB0, &qword_1ED96CAB8, sub_1D2575E5C, (uint64_t (*)(void))sub_1D2575FBC);
}

uint64_t sub_1D2575DEC(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = a3();
    v9[1] = a4();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2575E5C()
{
  return sub_1D2575DEC(&qword_1ED96CAA0, &qword_1ED96CAA8, (uint64_t (*)(void))sub_1D2575E80, (uint64_t (*)(void))sub_1D2575F78);
}

unint64_t sub_1D2575E80()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[4];

  result = qword_1ED96CA40;
  if (!qword_1ED96CA40)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CA48);
    v2[2] = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CD58);
    v2[3] = sub_1D2536488(&qword_1ED96CD50, &qword_1ED96CD58, MEMORY[0x1E0CDFB10]);
    v2[0] = swift_getOpaqueTypeConformance2();
    v2[1] = sub_1D2575F34();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CA40);
  }
  return result;
}

unint64_t sub_1D2575F34()
{
  unint64_t result;

  result = qword_1ED96D358;
  if (!qword_1ED96D358)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D446C, &type metadata for AccessibilityOptionalLabel);
    atomic_store(result, (unint64_t *)&qword_1ED96D358);
  }
  return result;
}

unint64_t sub_1D2575F78()
{
  unint64_t result;

  result = qword_1ED96D360;
  if (!qword_1ED96D360)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D44BC, &type metadata for AccessibilityOptionalValue);
    atomic_store(result, (unint64_t *)&qword_1ED96D360);
  }
  return result;
}

unint64_t sub_1D2575FBC()
{
  unint64_t result;

  result = qword_1ED96D448;
  if (!qword_1ED96D448)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D450C, &type metadata for AccessibilityOptionalIdentifier);
    atomic_store(result, (unint64_t *)&qword_1ED96D448);
  }
  return result;
}

uint64_t static ReloadConfiguration.maximumRetryAttempts.getter()
{
  return 1;
}

uint64_t sub_1D257601C()
{
  int *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = (int *)type metadata accessor for ReloadConfiguration(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer((uint64_t)v0, qword_1EFC82850);
  v6 = __swift_project_value_buffer((uint64_t)v0, (uint64_t)qword_1EFC82850);
  v7 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_1D2534120((uint64_t)v5, (uint64_t)v2, type metadata accessor for ReloadConfiguration.ReloadType);
  v2[v0[5]] = 1;
  *(_QWORD *)&v2[v0[7]] = 1;
  *(_QWORD *)&v2[v0[6]] = 0xA000000000000030;
  v2[v0[8]] = 1;
  sub_1D25340E4((uint64_t)v5, type metadata accessor for ReloadConfiguration.ReloadType);
  return sub_1D25341AC((uint64_t)v2, v6);
}

uint64_t ReloadConfiguration.init(type:cost:reason:retryAttempts:allowCostOverride:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v10;
  uint64_t v11;
  int *v12;

  v10 = *a2;
  v11 = *a3;
  sub_1D2534120(a1, a6, type metadata accessor for ReloadConfiguration.ReloadType);
  v12 = (int *)type metadata accessor for ReloadConfiguration(0);
  *(_BYTE *)(a6 + v12[5]) = v10;
  *(_QWORD *)(a6 + v12[7]) = a4;
  *(_QWORD *)(a6 + v12[6]) = v11;
  *(_BYTE *)(a6 + v12[8]) = a5;
  return sub_1D25340E4(a1, type metadata accessor for ReloadConfiguration.ReloadType);
}

uint64_t static ReloadConfiguration.initial.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EFC82190 != -1)
    swift_once();
  v2 = type metadata accessor for ReloadConfiguration(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EFC82850);
  return sub_1D2534120(v3, a1, type metadata accessor for ReloadConfiguration);
}

uint64_t ReloadConfiguration.ReloadCost.description.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1701147238;
  else
    return 0x6465746567647562;
}

BOOL static ReloadConfiguration.ReloadCost.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ReloadConfiguration.ReloadCost.hash(into:)()
{
  return sub_1D26CE46C();
}

uint64_t ReloadConfiguration.ReloadCost.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D257630C()
{
  _BYTE *v0;

  if (*v0)
    return 1701147238;
  else
    return 0x6465746567647562;
}

uint64_t ReloadConfiguration.ReloadType.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v1 = v0;
  v2 = sub_1D26CB9DC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2534120(v1, (uint64_t)v8, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return 0x74616964656D6D69;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  if (qword_1ED96C7C0 != -1)
    swift_once();
  v11 = (id)qword_1ED96C848;
  v12 = (void *)sub_1D26CB940();
  v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

  v10 = sub_1D26CD938();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

void ReloadConfiguration.ReloadReason.description.getter()
{
  __asm { BR              X11 }
}

unint64_t sub_1D2576514@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(a1 + 16);
  v2 = v1;
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  if (v1)
  {
    v3 = objc_msgSend(v2, sel_description);
    sub_1D26CD938();

  }
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D26CDA04();

  return 0xD000000000000018;
}

void sub_1D25767E0()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D25767F4()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D2576810()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D2576824()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D2576834()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D257684C()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D2576870()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D2576880()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D2576890()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D25768A0()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D25768C0()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D25768DC()
{
  JUMPOUT(0x1D25767C8);
}

void sub_1D25768EC()
{
  JUMPOUT(0x1D25768F8);
}

void sub_1D2576904()
{
  JUMPOUT(0x1D25767C8);
}

uint64_t ReloadConfiguration.ReloadReason.isMandatory.getter()
{
  _QWORD *v0;
  uint64_t v1;
  unint64_t v3;
  __int128 v4;

  v1 = *v0 >> 61;
  if (v1 < 5)
    return 0;
  *((_QWORD *)&v4 + 1) = *v0;
  *(_QWORD *)&v4 = *v0 + 0x5FFFFFFFFFFFFFE0;
  v3 = v4 >> 3;
  if ((_DWORD)v1 != 5 || v3 >= 0xC)
    return 1;
  else
    return (0x84u >> v3) & 1;
}

void ReloadConfiguration.ReloadReason.mayDeferOnSuggestedWidgetLocationReload.getter()
{
  __asm { BR              X11 }
}

uint64_t sub_1D2576A18()
{
  return ReloadConfiguration.ReloadReason.mayDeferOnSuggestedWidgetLocationReload.getter() & 1;
}

void ReloadConfiguration.ReloadReason.powerlogWakeReason.getter()
{
  __asm { BR              X12 }
}

void sub_1D2576A88(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

void sub_1D2576AE8()
{
  JUMPOUT(0x1D2576ACCLL);
}

void sub_1D2576AF0()
{
  JUMPOUT(0x1D2576ACCLL);
}

void sub_1D2576AF8()
{
  JUMPOUT(0x1D2576ACCLL);
}

void sub_1D2576B00()
{
  JUMPOUT(0x1D2576ACCLL);
}

void sub_1D2576B08()
{
  JUMPOUT(0x1D2576ACCLL);
}

void sub_1D2576B10()
{
  JUMPOUT(0x1D2576ACCLL);
}

BOOL ReloadConfiguration.ReloadReason.isReloadLoop.getter()
{
  _QWORD *v0;

  return *v0 >> 61 == 3;
}

void static ReloadConfiguration.ReloadReason.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2576B70()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  char v9;
  char v10;
  uint64_t v12;

  if (v1 >> 61)
    goto LABEL_12;
  v3 = (void *)v0[2];
  v2 = v0[3];
  v4 = *(void **)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  if (!v3)
  {
    if (!v4)
    {
      v12 = v0[4];
      sub_1D2534610(v1);
      sub_1D2534610((unint64_t)v0);
      goto LABEL_8;
    }
LABEL_12:
    sub_1D2534610(v1);
    sub_1D2534610((unint64_t)v0);
    goto LABEL_13;
  }
  if (!v4)
    goto LABEL_12;
  v12 = v0[4];
  sub_1D25787D8();
  v7 = v4;
  sub_1D2534610(v1);
  sub_1D2534610((unint64_t)v0);
  v8 = v3;
  v9 = sub_1D26CDECC();

  if ((v9 & 1) == 0)
  {

LABEL_13:
    sub_1D2534224((unint64_t)v0);
    sub_1D2534224(v1);
    v10 = 0;
    return v10 & 1;
  }
LABEL_8:
  if (v2 == v5 && v12 == v6)
  {

    sub_1D2534224((unint64_t)v0);
    sub_1D2534224(v1);
    v10 = 1;
  }
  else
  {
    v10 = sub_1D26CE3D0();

    sub_1D2534224((unint64_t)v0);
    sub_1D2534224(v1);
  }
  return v10 & 1;
}

void ReloadConfiguration.ReloadReason.hash(into:)()
{
  __asm { BR              X11 }
}

void sub_1D2576F84(uint64_t a1@<X8>, id a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  void *v21;
  id v22;

  v21 = *(void **)(a1 + 16);
  sub_1D26CE46C();
  sub_1D26CE478();
  if (v21)
  {
    v22 = v21;
    sub_1D26CDED8();
  }
  else
  {
    v22 = 0;
  }
  sub_1D26CD9D4();

}

uint64_t sub_1D257709C()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(1);
}

uint64_t sub_1D25770A4()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(2);
}

uint64_t sub_1D25770AC()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(3);
}

uint64_t sub_1D25770B4()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(4);
}

uint64_t sub_1D25770BC()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(7);
}

uint64_t sub_1D25770C4()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(8);
}

uint64_t sub_1D25770CC()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(9);
}

uint64_t sub_1D25770D4()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(11);
}

uint64_t sub_1D25770DC()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(12);
}

uint64_t sub_1D25770E4()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(16);
}

uint64_t sub_1D25770EC()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(17);
}

uint64_t sub_1D25770F4()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(18);
}

uint64_t sub_1D25770FC()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(19);
}

uint64_t sub_1D2577104()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(20);
}

uint64_t sub_1D257710C()
{
  return ((uint64_t (*)(uint64_t))sub_1D26CE46C)(21);
}

uint64_t ReloadConfiguration.ReloadReason.hashValue.getter()
{
  sub_1D26CE460();
  ReloadConfiguration.ReloadReason.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D2577184()
{
  sub_1D26CE460();
  ReloadConfiguration.ReloadReason.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D25771D0()
{
  sub_1D26CE460();
  ReloadConfiguration.ReloadReason.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t ReloadConfiguration.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2534120(v1, a1, type metadata accessor for ReloadConfiguration.ReloadType);
}

uint64_t ReloadConfiguration.cost.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for ReloadConfiguration(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

unint64_t ReloadConfiguration.reason.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  v3 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for ReloadConfiguration(0) + 24));
  *a1 = v3;
  return sub_1D2534610(v3);
}

uint64_t ReloadConfiguration.retryAttempts.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for ReloadConfiguration(0) + 28));
}

uint64_t ReloadConfiguration.allowCostOverride.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ReloadConfiguration(0) + 32));
}

unint64_t sub_1D25772DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  unint64_t v30;
  int v31;
  int v32;
  char v33;
  char v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  char v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  char *v62;
  char *v63;
  int v64;
  int v65;
  unint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;

  v68 = a2;
  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  v70 = v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v62 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v67 = (char *)&v61 - v8;
  v9 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v61 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v61 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v63 = (char *)&v61 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v61 - v17;
  v19 = (int *)type metadata accessor for ReloadConfiguration(0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v61 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v61 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v61 - v27;
  v29 = *(int *)(v26 + 24);
  v30 = *(_QWORD *)(v2 + v29);
  v71 = *(_QWORD *)(a1 + v29);
  v72 = v30;
  sub_1D25778D4(&v72, &v71, &v73);
  v66 = v73;
  v31 = *(unsigned __int8 *)(v2 + v19[5]);
  sub_1D2534120(a1, (uint64_t)v28, type metadata accessor for ReloadConfiguration);
  if (v31 == 1)
  {
    sub_1D25340E4((uint64_t)v28, type metadata accessor for ReloadConfiguration);
    v32 = 1;
  }
  else
  {
    v33 = v28[v19[5]];
    sub_1D25340E4((uint64_t)v28, type metadata accessor for ReloadConfiguration);
    if ((v33 & 1) != 0)
      v32 = 1;
    else
      v32 = *(unsigned __int8 *)(a1 + v19[5]);
  }
  v65 = v32;
  v34 = *(_BYTE *)(v2 + v19[8]);
  sub_1D2534120(a1, (uint64_t)v25, type metadata accessor for ReloadConfiguration);
  v35 = v69;
  if ((v34 & 1) != 0)
    v36 = 1;
  else
    v36 = v25[v19[8]];
  v64 = v36;
  sub_1D25340E4((uint64_t)v25, type metadata accessor for ReloadConfiguration);
  sub_1D2534120(v2, (uint64_t)v18, type metadata accessor for ReloadConfiguration.ReloadType);
  v37 = v70;
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
  if (v38(v18, 1, v35) == 1)
  {
    v39 = (uint64_t)v63;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v63, 1, 1, v35);
    v40 = *(_QWORD *)(a1 + v19[7]);
    sub_1D2534120(v39, (uint64_t)v22, type metadata accessor for ReloadConfiguration.ReloadType);
    v22[v19[5]] = v65;
    *(_QWORD *)&v22[v19[7]] = v40;
    v41 = v66;
    *(_QWORD *)&v22[v19[6]] = v66;
    v22[v19[8]] = v64;
    sub_1D2534610(v41);
    sub_1D25340E4(v39, type metadata accessor for ReloadConfiguration.ReloadType);
    sub_1D25341AC((uint64_t)v22, v68);
    return sub_1D2534224(v41);
  }
  else
  {
    v43 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    v43(v67, v18, v35);
    sub_1D2534120(a1, (uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
    if (v38(v14, 1, v35) == 1)
    {
      v44 = (uint64_t)v63;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v63, 1, 1, v35);
      v45 = *(_QWORD *)(a1 + v19[7]);
      sub_1D2534120(v44, (uint64_t)v22, type metadata accessor for ReloadConfiguration.ReloadType);
      v22[v19[5]] = v65;
      *(_QWORD *)&v22[v19[7]] = v45;
      v46 = v66;
      *(_QWORD *)&v22[v19[6]] = v66;
      v22[v19[8]] = v64;
      sub_1D2534610(v46);
      sub_1D25340E4(v44, type metadata accessor for ReloadConfiguration.ReloadType);
      sub_1D25341AC((uint64_t)v22, v68);
      sub_1D2534224(v46);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v67, v35);
    }
    else
    {
      v47 = v62;
      v43(v62, v14, v35);
      if (*(_QWORD *)(a1 + v29) >> 61 == 3)
      {
        v48 = v70;
        v49 = (uint64_t)v63;
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v63, v47, v35);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v48 + 56))(v49, 0, 1, v35);
        v50 = *(_QWORD *)(a1 + v19[7]);
        sub_1D2534120(v49, (uint64_t)v22, type metadata accessor for ReloadConfiguration.ReloadType);
        v22[v19[5]] = v65;
        *(_QWORD *)&v22[v19[7]] = v50;
        v51 = v66;
        *(_QWORD *)&v22[v19[6]] = v66;
        v22[v19[8]] = v64;
        sub_1D2534610(v51);
        sub_1D25340E4(v49, type metadata accessor for ReloadConfiguration.ReloadType);
        sub_1D25341AC((uint64_t)v22, v68);
        sub_1D2534224(v51);
        v52 = *(void (**)(char *, uint64_t))(v48 + 8);
        v52(v47, v35);
        return ((uint64_t (*)(char *, uint64_t))v52)(v67, v35);
      }
      else
      {
        sub_1D2579968();
        v53 = v67;
        v54 = sub_1D26CD8F0();
        v55 = v70;
        if ((v54 & 1) != 0)
          v56 = v47;
        else
          v56 = v53;
        v57 = (uint64_t)v61;
        (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v61, v56, v35);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v55 + 56))(v57, 0, 1, v35);
        v58 = *(_QWORD *)(a1 + v19[7]);
        sub_1D2534120(v57, (uint64_t)v22, type metadata accessor for ReloadConfiguration.ReloadType);
        v22[v19[5]] = v65;
        *(_QWORD *)&v22[v19[7]] = v58;
        v59 = v66;
        *(_QWORD *)&v22[v19[6]] = v66;
        v22[v19[8]] = v64;
        sub_1D2534610(v59);
        sub_1D25340E4(v57, type metadata accessor for ReloadConfiguration.ReloadType);
        sub_1D25341AC((uint64_t)v22, v68);
        sub_1D2534224(v59);
        v60 = *(void (**)(char *, uint64_t))(v55 + 8);
        v60(v47, v35);
        return ((uint64_t (*)(char *, uint64_t))v60)(v53, v35);
      }
    }
  }
}

void sub_1D25778D4(unint64_t *a1@<X0>, unint64_t *a2@<X1>, unint64_t *a3@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  __int128 v9;
  BOOL v10;
  uint64_t v11;
  unint64_t v13;
  __int128 v14;
  unint64_t v15;

  v4 = *a1;
  v5 = *a2;
  v15 = *a2;
  static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v15);
  if ((v6 & 1) != 0 || (v15 = v4, static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v15), (v7 & 1) != 0))
  {
    *a3 = 0xA000000000000030;
  }
  else
  {
    if ((v5 >> 61) >= 5)
    {
      *((_QWORD *)&v9 + 1) = v5;
      *(_QWORD *)&v9 = v5 + 0x5FFFFFFFFFFFFFE0;
      v8 = v9 >> 3;
      v10 = v5 >> 61 != 5 || v8 > 0xB;
      v11 = (1 << v8) & 0xF7B;
      if (v10 || v11 == 0)
        goto LABEL_6;
    }
    if ((v4 >> 61) < 5
      || v4 >> 61 == 5
      && (*((_QWORD *)&v14 + 1) = v4, *(_QWORD *)&v14 = v4 + 0x5FFFFFFFFFFFFFE0, v13 = v14 >> 3, v13 <= 0xB)
      && ((1 << v13) & 0xF7B) != 0)
    {
LABEL_6:
      *a3 = v5;
      sub_1D2534610(v5);
    }
    else
    {
      *a3 = v4;
      sub_1D2534610(v4);
    }
  }
}

uint64_t sub_1D25779DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  char v58;
  char v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v65;
  int v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unsigned int (*v75)(uint64_t, uint64_t, uint64_t);
  uint64_t v76;
  unint64_t v77;
  __int128 v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t, uint64_t);
  char *v84;
  char *v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  void (*v88)(char *, uint64_t, uint64_t);
  char *v89;
  char *v90;
  void (*v91)(char *, uint64_t);
  char *v92;
  uint64_t v93;
  unint64_t v94;
  __int128 v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(char *, uint64_t, uint64_t);
  char *v101;
  char *v102;
  void (*v103)(char *, uint64_t);
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  int *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;

  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v119 = (char *)&v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v118 = (char *)&v107 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v116 = (char *)&v107 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v117 = (char *)&v107 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v114 = (char *)&v107 - v14;
  MEMORY[0x1E0C80A78](v13);
  v115 = (char *)&v107 - v15;
  v16 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1E0C80A78](v16);
  v120 = (uint64_t)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED961CD0);
  MEMORY[0x1E0C80A78](v121);
  v19 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)type metadata accessor for ReloadConfiguration(0);
  v21 = MEMORY[0x1E0C80A78](v20);
  v112 = (uint64_t)&v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v113 = (uint64_t)&v107 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v122 = (uint64_t)&v107 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v107 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v32 = (char *)&v107 - v31;
  v33 = MEMORY[0x1E0C80A78](v30);
  v35 = (char *)&v107 - v34;
  MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v107 - v36;
  if ((_s9ChronoKit19ReloadConfigurationV2eeoiySbAC_ACtFZ_0(v1, a1) & 1) != 0)
    goto LABEL_2;
  v107 = v3;
  v108 = v4;
  v109 = v19;
  v110 = v1;
  v39 = v20[6];
  v40 = *(_QWORD *)(v1 + v39);
  v123 = 0xA000000000000080;
  v124 = v40;
  static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v124);
  v42 = v41;
  v111 = a1;
  sub_1D2534120(a1, (uint64_t)v37, type metadata accessor for ReloadConfiguration);
  if ((v42 & 1) != 0)
  {
    v43 = *(_QWORD *)&v37[v20[6]];
    v123 = 0xA000000000000080;
    v124 = v43;
    static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v124);
    v45 = v44;
    sub_1D25340E4((uint64_t)v37, type metadata accessor for ReloadConfiguration);
    if ((v45 & 1) == 0)
      goto LABEL_19;
  }
  else
  {
    sub_1D25340E4((uint64_t)v37, type metadata accessor for ReloadConfiguration);
  }
  v46 = v110;
  v47 = *(_QWORD *)(v110 + v39);
  v123 = 0xA000000000000060;
  v124 = v47;
  static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v124);
  v49 = v48;
  v50 = v111;
  sub_1D2534120(v111, (uint64_t)v35, type metadata accessor for ReloadConfiguration);
  if ((v49 & 1) != 0)
  {
    v51 = *(_QWORD *)&v35[v20[6]];
    v123 = 0xA000000000000060;
    v124 = v51;
    static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v124);
    v53 = v52;
    sub_1D25340E4((uint64_t)v35, type metadata accessor for ReloadConfiguration);
    if ((v53 & 1) == 0)
      goto LABEL_19;
  }
  else
  {
    sub_1D25340E4((uint64_t)v35, type metadata accessor for ReloadConfiguration);
  }
  v54 = *(_QWORD *)(v46 + v39);
  v123 = 0xA000000000000030;
  v124 = v54;
  static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v124);
  v56 = v55;
  sub_1D2534120(v50, (uint64_t)v32, type metadata accessor for ReloadConfiguration);
  if ((v56 & 1) != 0)
  {
    v57 = *(_QWORD *)&v32[v20[6]];
    v123 = 0xA000000000000030;
    v124 = v57;
    static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v124);
    v59 = v58;
    sub_1D25340E4((uint64_t)v32, type metadata accessor for ReloadConfiguration);
    if ((v59 & 1) != 0)
      goto LABEL_15;
LABEL_19:
    v38 = 1;
    return v38 & 1;
  }
  sub_1D25340E4((uint64_t)v32, type metadata accessor for ReloadConfiguration);
LABEL_15:
  v60 = *(_QWORD *)(v46 + v39);
  if ((v60 >> 61) < 5
    || v60 >> 61 == 5
    && (*((_QWORD *)&v78 + 1) = *(_QWORD *)(v46 + v39),
        *(_QWORD *)&v78 = v60 + 0x5FFFFFFFFFFFFFE0,
        v77 = v78 >> 3,
        v77 <= 0xB)
    && ((1 << v77) & 0xF7B) != 0)
  {
    sub_1D2534120(v50, (uint64_t)v29, type metadata accessor for ReloadConfiguration);
    sub_1D25340E4((uint64_t)v29, type metadata accessor for ReloadConfiguration);
  }
  else
  {
    sub_1D2534120(v50, (uint64_t)v29, type metadata accessor for ReloadConfiguration);
    v79 = *(_QWORD *)&v29[v20[6]];
    sub_1D2534610(v79);
    sub_1D25340E4((uint64_t)v29, type metadata accessor for ReloadConfiguration);
    if ((v79 >> 61) < 5
      || v79 >> 61 == 5
      && (*((_QWORD *)&v95 + 1) = v79, *(_QWORD *)&v95 = v79 + 0x5FFFFFFFFFFFFFE0, v94 = v95 >> 3, v94 <= 0xB)
      && ((1 << v94) & 0xF7B) != 0)
    {
      sub_1D2534224(v79);
      v38 = 1;
      return v38 & 1;
    }
    sub_1D2534224(v79);
  }
  v61 = *(_QWORD *)(v46 + v39);
  v62 = v122;
  sub_1D2534120(v50, v122, type metadata accessor for ReloadConfiguration);
  if (v61 >> 61 == 3)
  {
    v63 = *(_QWORD *)(v62 + v20[6]);
    sub_1D25340E4(v62, type metadata accessor for ReloadConfiguration);
    if (v63 >> 61 != 3)
      goto LABEL_19;
  }
  else
  {
    sub_1D25340E4(v62, type metadata accessor for ReloadConfiguration);
  }
  v65 = v20[5];
  v66 = *(unsigned __int8 *)(v46 + v65);
  v67 = *(unsigned __int8 *)(v50 + v65);
  v68 = (uint64_t)v109;
  v69 = (uint64_t)&v109[v121[12]];
  v70 = v121[16];
  v71 = v46;
  v72 = v50;
  v73 = v121[20];
  sub_1D2534120(v71, (uint64_t)v109, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1D2534120(v72, v69, type metadata accessor for ReloadConfiguration.ReloadType);
  *(_BYTE *)(v68 + v70) = v66;
  *(_BYTE *)(v68 + v73) = v67;
  v74 = v107;
  v75 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48);
  if (v75(v68, 1, v107) != 1)
  {
    v76 = v120;
    sub_1D2534120(v68, v120, type metadata accessor for ReloadConfiguration.ReloadType);
    if (v75(v69, 1, v74) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v76, v74);
      sub_1D253703C(v68, &qword_1ED961CD0);
LABEL_2:
      v38 = 0;
      return v38 & 1;
    }
    if (v66)
    {
      if ((v67 & 1) == 0)
      {
        v81 = v107;
        v82 = v108;
        v83 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 32);
        v84 = v115;
        v83(v115, v76, v107);
        v85 = v114;
        v83(v114, v69, v81);
        if ((sub_1D26CB9A0() & 1) != 0)
        {
          v86 = *(void (**)(char *, uint64_t))(v82 + 8);
          v86(v85, v81);
          v86(v84, v81);
          v80 = (uint64_t)v109;
          goto LABEL_34;
        }
        v38 = sub_1D26CB958();
        v91 = *(void (**)(char *, uint64_t))(v82 + 8);
        v91(v85, v81);
        v92 = v84;
        goto LABEL_43;
      }
    }
    else if ((v67 & 1) == 0)
    {
      v98 = v107;
      v99 = v108;
      v100 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 32);
      v101 = v117;
      v100(v117, v76, v107);
      v102 = v116;
      v100(v116, v69, v98);
      if ((sub_1D26CB9A0() & 1) != 0)
      {
        v103 = *(void (**)(char *, uint64_t))(v99 + 8);
        v103(v102, v98);
        v103(v101, v98);
        LODWORD(v103) = *(unsigned __int8 *)(v110 + v20[8]);
        v104 = v112;
        sub_1D2534120(v111, v112, type metadata accessor for ReloadConfiguration);
        v105 = (uint64_t)v109;
        if ((_DWORD)v103 == 1)
          v38 = *(_BYTE *)(v104 + v20[8]) ^ 1;
        else
          v38 = 0;
        sub_1D25340E4(v104, type metadata accessor for ReloadConfiguration);
        sub_1D25340E4(v105, type metadata accessor for ReloadConfiguration.ReloadType);
        return v38 & 1;
      }
      v38 = sub_1D26CB958();
      v91 = *(void (**)(char *, uint64_t))(v99 + 8);
      v91(v102, v98);
      v92 = v101;
      v93 = v98;
LABEL_44:
      v91(v92, v93);
      sub_1D25340E4((uint64_t)v109, type metadata accessor for ReloadConfiguration.ReloadType);
      return v38 & 1;
    }
    v81 = v107;
    v87 = v108;
    v88 = *(void (**)(char *, uint64_t, uint64_t))(v108 + 32);
    v89 = v118;
    v88(v118, v76, v107);
    v90 = v119;
    v88(v119, v69, v81);
    v38 = sub_1D26CB958();
    v91 = *(void (**)(char *, uint64_t))(v87 + 8);
    v91(v90, v81);
    v92 = v89;
LABEL_43:
    v93 = v81;
    goto LABEL_44;
  }
  if (v75(v69, 1, v74) != 1)
  {
    sub_1D25340E4(v69, type metadata accessor for ReloadConfiguration.ReloadType);
    v80 = (uint64_t)v109;
LABEL_34:
    sub_1D25340E4(v80, type metadata accessor for ReloadConfiguration.ReloadType);
    v38 = 1;
    return v38 & 1;
  }
  if (v66)
  {
    sub_1D25340E4((uint64_t)v109, type metadata accessor for ReloadConfiguration.ReloadType);
    v38 = v67 ^ 1;
    return v38 & 1;
  }
  if (v67)
  {
    sub_1D25340E4((uint64_t)v109, type metadata accessor for ReloadConfiguration.ReloadType);
    goto LABEL_2;
  }
  v96 = *(unsigned __int8 *)(v110 + v20[8]);
  v97 = v113;
  sub_1D2534120(v111, v113, type metadata accessor for ReloadConfiguration);
  if (v96 == 1)
    v38 = *(_BYTE *)(v97 + v20[8]) ^ 1;
  else
    v38 = 0;
  v106 = (uint64_t)v109;
  sub_1D25340E4(v97, type metadata accessor for ReloadConfiguration);
  sub_1D25340E4(v106, type metadata accessor for ReloadConfiguration.ReloadType);
  return v38 & 1;
}

uint64_t ReloadConfiguration.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;

  v1 = v0;
  v2 = sub_1D26CB9DC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 91;
  v18 = 0xE100000000000000;
  v9 = type metadata accessor for ReloadConfiguration(0);
  v10 = *(_QWORD *)(v0 + *(int *)(v9 + 24));
  v16 = v10;
  sub_1D2534610(v10);
  ReloadConfiguration.ReloadReason.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D2534224(v10);
  sub_1D26CDA04();
  sub_1D2534120(v0, (uint64_t)v8, type metadata accessor for ReloadConfiguration.ReloadType);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    if (qword_1ED96C7C0 != -1)
      swift_once();
    v11 = (id)qword_1ED96C848;
    v12 = (void *)sub_1D26CB940();
    v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

    sub_1D26CD938();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v16 = *(_QWORD *)(v1 + *(int *)(v9 + 28));
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return v17;
}

uint64_t _s9ChronoKit19ReloadConfigurationV0C4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961CC8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1D2534120(a1, (uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1D2534120(a2, v15, type metadata accessor for ReloadConfiguration.ReloadType);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_1D2534120((uint64_t)v14, (uint64_t)v10, type metadata accessor for ReloadConfiguration.ReloadType);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_1D26CB9A0();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_1D25340E4((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_1D253703C((uint64_t)v14, &qword_1ED961CC8);
    v17 = 0;
    return v17 & 1;
  }
  sub_1D25340E4((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  v17 = 1;
  return v17 & 1;
}

unint64_t sub_1D25787D8()
{
  unint64_t result;

  result = qword_1ED9638A8;
  if (!qword_1ED9638A8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9638A8);
  }
  return result;
}

uint64_t _s9ChronoKit19ReloadConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t v26;
  uint64_t v27;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961CC8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1D2534120(a1, (uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1D2534120(a2, v15, type metadata accessor for ReloadConfiguration.ReloadType);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    if (v16(v15, 1, v4) == 1)
      goto LABEL_8;
    goto LABEL_6;
  }
  sub_1D2534120((uint64_t)v14, (uint64_t)v10, type metadata accessor for ReloadConfiguration.ReloadType);
  if (v16(v15, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
LABEL_6:
    sub_1D253703C((uint64_t)v14, &qword_1ED961CC8);
LABEL_13:
    v24 = 0;
    return v24 & 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
  v17 = sub_1D26CB9A0();
  v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v7, v4);
  v18(v10, v4);
  if ((v17 & 1) == 0)
  {
    sub_1D25340E4((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
    goto LABEL_13;
  }
LABEL_8:
  sub_1D25340E4((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  v19 = type metadata accessor for ReloadConfiguration(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v19 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v19 + 20)))
    goto LABEL_13;
  v20 = v19;
  v21 = *(int *)(v19 + 24);
  v22 = *(_QWORD *)(a1 + v21);
  v26 = *(_QWORD *)(a2 + v21);
  v27 = v22;
  static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v27);
  if ((v23 & 1) == 0 || *(_QWORD *)(a1 + *(int *)(v20 + 28)) != *(_QWORD *)(a2 + *(int *)(v20 + 28)))
    goto LABEL_13;
  v24 = *(_BYTE *)(a1 + *(int *)(v20 + 32)) ^ *(_BYTE *)(a2 + *(int *)(v20 + 32)) ^ 1;
  return v24 & 1;
}

unint64_t sub_1D2578A9C()
{
  unint64_t result;

  result = qword_1EFC82868;
  if (!qword_1EFC82868)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for ReloadConfiguration.ReloadCost, &type metadata for ReloadConfiguration.ReloadCost);
    atomic_store(result, (unint64_t *)&qword_1EFC82868);
  }
  return result;
}

unint64_t sub_1D2578AE4()
{
  unint64_t result;

  result = qword_1ED962520;
  if (!qword_1ED962520)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for ReloadConfiguration.ReloadReason, &type metadata for ReloadConfiguration.ReloadReason);
    atomic_store(result, (unint64_t *)&qword_1ED962520);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ReloadConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CB9DC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = type metadata accessor for ReloadConfiguration.ReloadType(0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v12 = *(uint64_t *)((char *)a2 + v11);
    sub_1D2534610(v12);
    *(uint64_t *)((char *)a1 + v11) = v12;
    v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *((_BYTE *)a1 + v13) = *((_BYTE *)a2 + v13);
  }
  return a1;
}

char *initializeWithCopy for ReloadConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v10 = *(_QWORD *)&a2[v9];
  sub_1D2534610(v10);
  *(_QWORD *)&a1[v9] = v10;
  v11 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  a1[v11] = a2[v11];
  return a1;
}

char *assignWithCopy for ReloadConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for ReloadConfiguration.ReloadType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  a1[a3[5]] = a2[a3[5]];
  v12 = a3[6];
  v13 = *(_QWORD *)&a2[v12];
  sub_1D2534610(v13);
  v14 = *(_QWORD *)&a1[v12];
  *(_QWORD *)&a1[v12] = v13;
  sub_1D2534224(v14);
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *initializeWithTake for ReloadConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(_QWORD *)&a1[v9] = *(_QWORD *)&a2[v9];
  v10 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  a1[v10] = a2[v10];
  return a1;
}

char *assignWithTake for ReloadConfiguration(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;

  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = type metadata accessor for ReloadConfiguration.ReloadType(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  v13 = *(_QWORD *)&a1[v12];
  *(_QWORD *)&a1[v12] = *(_QWORD *)&a2[v12];
  sub_1D2534224(v13);
  v14 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  a1[v14] = a2[v14];
  return a1;
}

uint64_t getEnumTagSinglePayload for ReloadConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D257904C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ReloadConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25790D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for ReloadConfiguration.ReloadType(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

uint64_t sub_1D2579148()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ReloadConfiguration.ReloadType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ReloadConfiguration.ReloadCost(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2579220 + 4 * byte_1D26D1FB0[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D2579254 + 4 * byte_1D26D1FAB[v4]))();
}

uint64_t sub_1D2579254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D257925C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2579264);
  return result;
}

uint64_t sub_1D2579270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2579278);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D257927C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2579284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ReloadConfiguration.ReloadType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CB9DC();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for ReloadConfiguration.ReloadType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1D26CB9DC();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for ReloadConfiguration.ReloadType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for ReloadConfiguration.ReloadType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for ReloadConfiguration.ReloadType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for ReloadConfiguration.ReloadType(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReloadConfiguration.ReloadType()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25796F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1D26CB9DC();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ReloadConfiguration.ReloadType()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D257974C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D257979C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1D25797D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB9DC();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

unint64_t *assignWithCopy for ReloadConfiguration.ReloadReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1D2534610(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1D2534224(v4);
  return a1;
}

unint64_t *assignWithTake for ReloadConfiguration.ReloadReason(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1D2534224(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReloadConfiguration.ReloadReason(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7B && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 123);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7A)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ReloadConfiguration.ReloadReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7A)
  {
    *(_QWORD *)result = a2 - 123;
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7B)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1D257993C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 61;
  if (v1 <= 4)
    return v1;
  else
    return (*a1 >> 3) + 5;
}

_QWORD *sub_1D2579958(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t sub_1D2579968()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96B1C0;
  if (!qword_1ED96B1C0)
  {
    v1 = sub_1D26CB9DC();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB08B0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96B1C0);
  }
  return result;
}

uint64_t DefaultStatefulStoreFailurePolicy.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DefaultStatefulStoreFailurePolicy.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D25799C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _BYTE *a5)
{
  uint64_t v6;
  unint64_t v7;
  BOOL v8;
  unint64_t v10;
  __int128 v11;

  if (*a5 != 2)
    return 0;
  v6 = type metadata accessor for ReloadConfiguration(0);
  v7 = *(_QWORD *)(a3 + *(int *)(v6 + 24));
  v8 = v7 >> 61 == 5;
  if ((v7 >> 61) < 5)
    return 0;
  *((_QWORD *)&v11 + 1) = *(_QWORD *)(a3 + *(int *)(v6 + 24));
  *(_QWORD *)&v11 = v7 + 0x5FFFFFFFFFFFFFE0;
  v10 = v11 >> 3;
  if (!v8 || v10 >= 0xC)
    return 1;
  else
    return (0x84u >> v10) & 1;
}

uint64_t DefaultStatefulStoreFailurePolicy.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DefaultStatefulStoreFailurePolicy.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2579A58(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 136);
}

uint64_t sub_1D2579A60(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 104);
}

uint64_t sub_1D2579A68(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 112);
}

uint64_t sub_1D2579A70(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 120);
}

uint64_t sub_1D2579A78(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 128);
}

uint64_t sub_1D2579A80()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for DefaultStatefulStoreFailurePolicy()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for DefaultStatefulStoreFailurePolicy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultStatefulStoreFailurePolicy.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DefaultStatefulStoreFailurePolicy.reloadFailed(for:entries:originalConfiguration:nextConfiguration:nextState:error:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t static Priority.< infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  if (*a1)
  {
    if (*a1 == 1)
    {
      if (!*a2)
        return 1;
    }
    else if (*a2 < 2u)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t Priority.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E7574726F70706FLL;
  if (*v0 != 1)
    v1 = 0x6E696B61576E6F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6C616D726F6ELL;
}

ChronoKit::Priority_optional __swiftcall Priority.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (ChronoKit::Priority_optional)rawValue;
}

uint64_t Priority.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

ChronoKit::Priority_optional sub_1D2579B9C(Swift::Int *a1)
{
  return Priority.init(rawValue:)(*a1);
}

void sub_1D2579BA4(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1D2579BB0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E7574726F70706FLL;
  if (*v0 != 1)
    v1 = 0x6E696B61576E6F6ELL;
  if (*v0)
    return v1;
  else
    return 0x6C616D726F6ELL;
}

uint64_t sub_1D2579C18(_BYTE *a1, _BYTE *a2)
{
  if (!*a1)
    return 0;
  if (*a1 == 1)
  {
    if (*a2)
      return 0;
  }
  else if (*a2 > 1u)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1D2579C48(_BYTE *a1, _BYTE *a2)
{
  if (!*a2)
    return 1;
  if (*a2 == 1)
  {
    if (*a1)
      return 1;
  }
  else if (*a1 > 1u)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1D2579C78(_BYTE *a1, _BYTE *a2)
{
  if (!*a1)
    return 1;
  if (*a1 == 1)
  {
    if (*a2)
      return 1;
  }
  else if (*a2 > 1u)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1D2579CA8(_BYTE *a1, _BYTE *a2)
{
  if (!*a2)
    return 0;
  if (*a2 == 1)
  {
    if (*a1)
      return 0;
  }
  else if (*a1 > 1u)
  {
    return 0;
  }
  return 1;
}

uint64_t PushSubscription.SubscriptionType.Control.PushType.description.getter()
{
  sub_1D26CDA04();
  return 0x203A6E656B6F74;
}

uint64_t static PushSubscription.SubscriptionType.Control.PushType.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1D26CE3D0();
}

uint64_t PushSubscription.SubscriptionType.Control.PushType.hash(into:)()
{
  sub_1D26CE46C();
  return sub_1D26CD9D4();
}

uint64_t PushSubscription.SubscriptionType.Control.PushType.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  sub_1D26CD9D4();
  return sub_1D26CE49C();
}

uint64_t sub_1D2579DEC(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1D26CE3D0();
}

uint64_t sub_1D2579E1C()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  sub_1D26CD9D4();
  return sub_1D26CE49C();
}

uint64_t sub_1D2579E78()
{
  sub_1D26CE46C();
  return sub_1D26CD9D4();
}

uint64_t sub_1D2579EB8()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  sub_1D26CD9D4();
  return sub_1D26CE49C();
}

uint64_t sub_1D2579F10()
{
  sub_1D26CDA04();
  return 0x203A6E656B6F74;
}

uint64_t PushSubscription.SubscriptionType.Control.id.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

id PushSubscription.SubscriptionType.Control.controlIdentity.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t PushSubscription.SubscriptionType.Control.pushType.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = *(_QWORD *)(v1 + 24);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushSubscription.SubscriptionType.Control.init(controlIdentity:pushType:)@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  uint64_t result;
  uint64_t v13;

  v5 = *a2;
  v6 = a2[1];
  v7 = objc_msgSend(a1, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v8 = sub_1D26CBC88();
  v10 = v9;
  swift_endAccess();

  v13 = v8;
  sub_1D26CDA04();
  v11 = objc_msgSend(a1, sel_kind);
  sub_1D26CD938();

  sub_1D26CDA04();
  result = swift_bridgeObjectRelease();
  *a3 = v13;
  a3[1] = v10;
  a3[2] = (uint64_t)a1;
  a3[3] = v5;
  a3[4] = v6;
  return result;
}

unint64_t PushSubscription.SubscriptionType.Control.description.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + 16);
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  v2 = v1;
  v3 = objc_msgSend(v2, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 0xD000000000000011;
}

uint64_t PushSubscription.SubscriptionType.Control.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1D26CDED8();

  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t PushSubscription.SubscriptionType.Control.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1D26CDED8();

  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D257A340()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1D26CDED8();

  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D257A3DC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1D26CDED8();

  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t PushSubscription.SubscriptionType.description.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  PushSubscription.SubscriptionType.Control.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x3A6C6F72746E6F63;
}

uint64_t PushSubscription.SubscriptionType.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1D26CDED8();

  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t PushSubscription.SubscriptionType.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1D26CE460();
  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1D26CDED8();

  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D257A6AC()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1D26CDED8();

  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D257A754()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  sub_1D26CE460();
  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  v2 = v1;
  sub_1D26CDED8();

  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D257A80C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  v2 = v1;
  swift_bridgeObjectRetain();
  PushSubscription.SubscriptionType.Control.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0x3A6C6F72746E6F63;
}

uint64_t PushSubscription.id.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PushSubscription.topic.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushSubscription.topic.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*PushSubscription.topic.modify())()
{
  return CGSizeMake;
}

uint64_t PushSubscription.subscriptionType.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  id v6;

  v2 = v1[3];
  v4 = (void *)v1[4];
  v3 = v1[5];
  v5 = v1[6];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  a1[4] = v5;
  swift_bridgeObjectRetain();
  v6 = v4;
  return swift_bridgeObjectRetain();
}

__n128 PushSubscription.subscriptionType.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  __n128 result;

  v3 = *a1;
  v4 = a1[3];
  v5 = a1[4];
  v6 = *(void **)(v1 + 32);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v3;
  result = *(__n128 *)(a1 + 1);
  *(__n128 *)(v1 + 24) = result;
  *(_QWORD *)(v1 + 40) = v4;
  *(_QWORD *)(v1 + 48) = v5;
  return result;
}

uint64_t (*PushSubscription.subscriptionType.modify())()
{
  return CGSizeMake;
}

uint64_t PushSubscription.budget.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PushSubscription() + 24);
  return sub_1D257B420(v3, a1);
}

uint64_t PushSubscription.budget.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for PushSubscription() + 24);
  return sub_1D257B464(a1, v3);
}

uint64_t (*PushSubscription.budget.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for PushSubscription();
  return CGSizeMake;
}

uint64_t PushSubscription.description.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;

  v1 = v0;
  v2 = type metadata accessor for Budget();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 0;
  v17 = 0xE000000000000000;
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  v23 = 0x203A6369706F74;
  v24 = 0xE700000000000000;
  v5 = v0[1];
  v16 = *v0;
  v17 = v5;
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v6 = v0[2];
  v7 = v0[3];
  v9 = (void *)v0[4];
  v8 = v1[5];
  v10 = v1[6];
  v21 = 0x3A6C6F72746E6F63;
  v22 = 0xE900000000000020;
  v16 = v6;
  v17 = v7;
  v18 = v9;
  v19 = v8;
  v20 = v10;
  swift_bridgeObjectRetain_n();
  v11 = v9;
  swift_bridgeObjectRetain_n();
  v12 = v11;
  PushSubscription.SubscriptionType.Control.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v13 = type metadata accessor for PushSubscription();
  sub_1D257B420((uint64_t)v1 + *(int *)(v13 + 24), (uint64_t)v4);
  sub_1D26CD98C();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return v23;
}

uint64_t PushSubscription.init(control:environment:budget:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v26;

  v7 = a1;
  v8 = objc_msgSend(v7, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v9 = sub_1D26CBC88();
  v11 = v10;
  swift_endAccess();

  v26 = v9;
  sub_1D26CDA04();
  v12 = objc_msgSend(v7, sel_kind);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v13 = v11;
  v14 = (char *)objc_msgSend(v7, sel_extensionIdentity);
  v15 = &v14[*MEMORY[0x1E0D0FE18]];
  swift_beginAccess();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v15, 1, v16))
  {
    swift_endAccess();

    v17 = objc_msgSend(v7, sel_extensionIdentity);
    swift_beginAccess();
    v18 = sub_1D26CBC88();
    v20 = v19;
    swift_endAccess();
    v14 = v7;
  }
  else
  {
    v18 = sub_1D26CBC88();
    v20 = v21;
    swift_endAccess();
    v17 = v7;
  }

  *a5 = v18;
  a5[1] = v20;
  a5[2] = v26;
  a5[3] = v13;
  a5[4] = (uint64_t)v7;
  a5[5] = a2;
  a5[6] = a3;
  v22 = type metadata accessor for PushSubscription();
  return sub_1D257B4A8(a4, (uint64_t)a5 + *(int *)(v22 + 24));
}

void Topic.init(_:)(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char *v4;
  char *v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (char *)objc_msgSend(a1, sel_extensionIdentity);
  v5 = &v4[*MEMORY[0x1E0D0FE18]];
  swift_beginAccess();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    swift_endAccess();

    v7 = objc_msgSend(a1, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    v8 = sub_1D26CBC88();
    v10 = v9;
    swift_endAccess();
    v4 = a1;
  }
  else
  {
    v8 = sub_1D26CBC88();
    v10 = v11;
    swift_endAccess();
    v7 = a1;
  }

  *a2 = v8;
  a2[1] = v10;
}

uint64_t PushSubscription.init(control:pushEnvironment:topic:budget:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v20;

  v11 = *a4;
  v12 = a4[1];
  v13 = objc_msgSend(a1, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v14 = sub_1D26CBC88();
  v16 = v15;
  swift_endAccess();

  v20 = v14;
  sub_1D26CDA04();
  v17 = objc_msgSend(a1, sel_kind);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  a6[2] = v20;
  a6[3] = v16;
  a6[4] = a1;
  a6[5] = a2;
  a6[6] = a3;
  *a6 = v11;
  a6[1] = v12;
  v18 = type metadata accessor for PushSubscription();
  return sub_1D257B4A8(a5, (uint64_t)a6 + *(int *)(v18 + 24));
}

uint64_t sub_1D257B140@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t PushSubscription.environment.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void *PushSubscription.control.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 32);
  v2 = v1;
  return v1;
}

uint64_t _s9ChronoKit16PushSubscriptionV0D4TypeO7ControlV2eeoiySbAG_AGtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a2[3];
  v5 = a2[4];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1D26CE3D0(), result = 0, (v7 & 1) != 0))
  {
    sub_1D257C290();
    if ((sub_1D26CDECC() & 1) != 0)
    {
      if (v2 == v4 && v3 == v5)
        return 1;
      else
        return sub_1D26CE3D0();
    }
    else
    {
      return 0;
    }
  }
  return result;
}

BOOL _s9ChronoKit16PushSubscriptionV0D4TypeO2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  id v9;
  id v10;
  char v12;

  v2 = (void *)a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v5 = (void *)a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = *a1 == *a2 && a1[1] == a2[1];
  if (!v8 && (sub_1D26CE3D0() & 1) == 0)
    return 0;
  sub_1D257C290();
  swift_bridgeObjectRetain();
  v9 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = v5;
  swift_bridgeObjectRetain();
  if ((sub_1D26CDECC() & 1) == 0)
  {
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    return 0;
  }
  if (v4 == v6 && v3 == v7)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease();
    return 1;
  }
  v12 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return (v12 & 1) != 0;
}

uint64_t type metadata accessor for PushSubscription()
{
  uint64_t result;

  result = qword_1ED9630F0;
  if (!qword_1ED9630F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D257B420(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D257B464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D257B4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Budget();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL _s9ChronoKit16PushSubscriptionV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  char v13;
  uint64_t v14;

  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1D26CE3D0() & 1) != 0)
  {
    if ((v5 = (void *)a1[4], v6 = a1[5], v7 = a1[6], v9 = (void *)a2[4], v8 = a2[5], v10 = a2[6], a1[2] == a2[2])
      && a1[3] == a2[3]
      || (sub_1D26CE3D0() & 1) != 0)
    {
      sub_1D257C290();
      swift_bridgeObjectRetain();
      v11 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = v9;
      swift_bridgeObjectRetain();
      if ((sub_1D26CDECC() & 1) != 0)
      {
        if (v6 == v8 && v7 == v10)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();

          swift_bridgeObjectRelease();
LABEL_15:
          v14 = *(int *)(type metadata accessor for PushSubscription() + 24);
          return _s9ChronoKit6BudgetV2eeoiySbAC_ACtFZ_0((uint64_t)a1 + v14, (uint64_t)a2 + v14);
        }
        v13 = sub_1D26CE3D0();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
          goto LABEL_15;
      }
      else
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
      }
    }
  }
  return 0;
}

unint64_t sub_1D257B6CC()
{
  unint64_t result;

  result = qword_1EFC82870;
  if (!qword_1EFC82870)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for Priority, &type metadata for Priority);
    atomic_store(result, (unint64_t *)&qword_1EFC82870);
  }
  return result;
}

unint64_t sub_1D257B714()
{
  unint64_t result;

  result = qword_1EFC82878;
  if (!qword_1EFC82878)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PushSubscription.SubscriptionType.Control.PushType, &type metadata for PushSubscription.SubscriptionType.Control.PushType);
    atomic_store(result, (unint64_t *)&qword_1EFC82878);
  }
  return result;
}

unint64_t sub_1D257B75C()
{
  unint64_t result;

  result = qword_1EFC82880;
  if (!qword_1EFC82880)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PushSubscription.SubscriptionType.Control, &type metadata for PushSubscription.SubscriptionType.Control);
    atomic_store(result, (unint64_t *)&qword_1EFC82880);
  }
  return result;
}

unint64_t sub_1D257B7A4()
{
  unint64_t result;

  result = qword_1EFC82888;
  if (!qword_1EFC82888)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PushSubscription.SubscriptionType, &type metadata for PushSubscription.SubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1EFC82888);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Priority(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D257B834 + 4 * byte_1D26D2315[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D257B868 + 4 * asc_1D26D2310[v4]))();
}

uint64_t sub_1D257B868(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D257B870(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D257B878);
  return result;
}

uint64_t sub_1D257B884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D257B88CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D257B890(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D257B898(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Priority()
{
  return &type metadata for Priority;
}

uint64_t *initializeBufferWithCopyOfBuffer for PushSubscription(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  id v14;
  int *v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v8 = (void *)a2[4];
    v7 = a2[5];
    a1[4] = (uint64_t)v8;
    a1[5] = v7;
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    a1[6] = a2[6];
    v12 = sub_1D26CB9DC();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = v8;
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v15 = (int *)type metadata accessor for Budget();
    *(_QWORD *)&v10[v15[5]] = *(_QWORD *)&v11[v15[5]];
    v10[v15[6]] = v11[v15[6]];
    *(_QWORD *)&v10[v15[7]] = *(_QWORD *)&v11[v15[7]];
    *(_QWORD *)&v10[v15[8]] = *(_QWORD *)&v11[v15[8]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t destroy for PushSubscription(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for Budget();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for PushSubscription(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  id v13;
  int *v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v7 = (void *)a2[4];
  v6 = a2[5];
  a1[4] = v7;
  a1[5] = v6;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  a1[6] = a2[6];
  v11 = sub_1D26CB9DC();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = v7;
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v14 = (int *)type metadata accessor for Budget();
  *(_QWORD *)&v9[v14[5]] = *(_QWORD *)&v10[v14[5]];
  v9[v14[6]] = v10[v14[6]];
  *(_QWORD *)&v9[v14[7]] = *(_QWORD *)&v10[v14[7]];
  *(_QWORD *)&v9[v14[8]] = *(_QWORD *)&v10[v14[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for PushSubscription(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (void *)a2[4];
  v7 = (void *)a1[4];
  a1[4] = v6;
  v8 = v6;

  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = (int *)type metadata accessor for Budget();
  *(_QWORD *)&v10[v13[5]] = *(_QWORD *)&v11[v13[5]];
  v10[v13[6]] = v11[v13[6]];
  *(_QWORD *)&v10[v13[7]] = *(_QWORD *)&v11[v13[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v10[v13[8]] = *(_QWORD *)&v11[v13[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PushSubscription(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  v9 = (int *)type metadata accessor for Budget();
  *(_QWORD *)(v6 + v9[5]) = *(_QWORD *)(v7 + v9[5]);
  *(_BYTE *)(v6 + v9[6]) = *(_BYTE *)(v7 + v9[6]);
  *(_QWORD *)(v6 + v9[7]) = *(_QWORD *)(v7 + v9[7]);
  *(_QWORD *)(v6 + v9[8]) = *(_QWORD *)(v7 + v9[8]);
  return a1;
}

_QWORD *assignWithTake for PushSubscription(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  int *v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = (void *)a1[4];
  a1[4] = a2[4];

  v9 = a2[6];
  a1[5] = a2[5];
  a1[6] = v9;
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = (int *)type metadata accessor for Budget();
  *(_QWORD *)&v11[v14[5]] = *(_QWORD *)&v12[v14[5]];
  v11[v14[6]] = v12[v14[6]];
  *(_QWORD *)&v11[v14[7]] = *(_QWORD *)&v12[v14[7]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&v11[v14[8]] = *(_QWORD *)&v12[v14[8]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PushSubscription()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D257BE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for Budget();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for PushSubscription()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D257BEA0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for Budget();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D257BF14()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Budget();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushSubscription.SubscriptionType()
{
  return &type metadata for PushSubscription.SubscriptionType;
}

uint64_t initializeBufferWithCopyOfBuffer for PushSubscription.SubscriptionType.Control(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for DuetWidgetViewIdentity(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DuetWidgetViewIdentity(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v5 = (void *)a2[2];
  v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DuetWidgetViewIdentity(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DuetWidgetViewIdentity(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DuetWidgetViewIdentity(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DuetWidgetViewIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PushSubscription.SubscriptionType.Control()
{
  return &type metadata for PushSubscription.SubscriptionType.Control;
}

_QWORD *initializeBufferWithCopyOfBuffer for Topic(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for Topic()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for Topic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for Topic(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PushSubscription.SubscriptionType.Control.PushType()
{
  return &type metadata for PushSubscription.SubscriptionType.Control.PushType;
}

unint64_t sub_1D257C290()
{
  unint64_t result;

  result = qword_1ED96FCC8;
  if (!qword_1ED96FCC8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96FCC8);
  }
  return result;
}

uint64_t dispatch thunk of RemoteWidgetDescriptorServicing.remoteWidgetExtensionsDidUpdateDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of RemoteWidgetDescriptorServicing.loadRemoteWidgetDescriptors(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

BOOL static PowerlogOwner.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PowerlogOwner.hash(into:)()
{
  return sub_1D26CE46C();
}

uint64_t PowerlogOwner.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

unint64_t sub_1D257C36C()
{
  unint64_t result;

  result = qword_1EFC82890;
  if (!qword_1EFC82890)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogOwner, &type metadata for PowerlogOwner);
    atomic_store(result, (unint64_t *)&qword_1EFC82890);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PowerlogOwner(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D257C3FC + 4 * byte_1D26D2765[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D257C430 + 4 * byte_1D26D2760[v4]))();
}

uint64_t sub_1D257C430(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D257C438(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D257C440);
  return result;
}

uint64_t sub_1D257C44C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D257C454);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D257C458(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D257C460(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PowerlogOwner()
{
  return &type metadata for PowerlogOwner;
}

uint64_t CHSWidgetRenderingMode.widgetRenderingMode.getter(uint64_t a1)
{
  if (!a1)
    return sub_1D26CD290();
  if (a1 != 1)
  {
    if (a1 == 2)
      return sub_1D26CD284();
    return sub_1D26CD290();
  }
  return sub_1D26CD278();
}

uint64_t sub_1D257C4AC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + qword_1ED977FB8;
  swift_beginAccess();
  v4 = sub_1D26CD350();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1D257C514(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1D26CD350();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + qword_1ED977FB8;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1D257C5D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1ED977FB8;
  swift_beginAccess();
  v4 = sub_1D26CD350();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D257C63C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1ED977FB8;
  swift_beginAccess();
  v4 = sub_1D26CD350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1D257C6A8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t WidgetCacheManager.__allocating_init(subdirectory:fileExtension:descriptorProvider:protectionLevelProvider:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  _BYTE v17[40];
  _QWORD v18[5];
  _BYTE v19[40];
  _BYTE v20[40];
  _BYTE v21[48];

  swift_bridgeObjectRelease();
  sub_1D2538510(a5, (uint64_t)v21);
  sub_1D2538510(a6, (uint64_t)v20);
  v13 = type metadata accessor for WidgetCacheURLProvider();
  v14 = (_QWORD *)swift_allocObject();
  v14[3] = 0;
  v14[2] = 0;
  swift_beginAccess();
  v14[2] = a1;
  v14[3] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14[4] = 0x742D6F6E6F726863;
  v14[5] = 0xEF656E696C656D69;
  sub_1D2538510((uint64_t)v21, (uint64_t)v19);
  v18[3] = v13;
  v18[4] = &protocol witness table for WidgetCacheURLProvider;
  v18[0] = v14;
  sub_1D2538510((uint64_t)v20, (uint64_t)v17);
  v15 = (*(uint64_t (**)(uint64_t, uint64_t, _BYTE *, _QWORD *, _BYTE *, uint64_t, _QWORD))(v7 + 288))(a1, a2, v19, v18, v17, a7, 0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  __swift_destroy_boxed_opaque_existential_1(a6);
  __swift_destroy_boxed_opaque_existential_1(a5);
  return v15;
}

uint64_t WidgetCacheManager.__allocating_init(subdirectory:cacheKeyProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _BYTE v17[40];
  _QWORD v18[5];
  _BYTE v19[40];

  v12 = type metadata accessor for WidgetCacheURLProvider();
  v13 = (_QWORD *)swift_allocObject();
  v13[3] = 0;
  v13[2] = 0;
  swift_beginAccess();
  v13[2] = a1;
  v13[3] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13[4] = 0x742D6F6E6F726863;
  v13[5] = 0xEF656E696C656D69;
  sub_1D2538510(a3, (uint64_t)v19);
  v18[3] = v12;
  v18[4] = &protocol witness table for WidgetCacheURLProvider;
  v18[0] = v13;
  sub_1D2538510(a4, (uint64_t)v17);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, _BYTE *, _QWORD *, _BYTE *, uint64_t, _QWORD))(v6 + 288))(a1, a2, v19, v18, v17, a5, a6);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v14;
}

uint64_t sub_1D257C988(id *a1)
{
  _BYTE *v1;

  return sub_1D25B8128(a1, v1) & 1;
}

uint64_t sub_1D257C9C8@<X0>(_BYTE *a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  char *v19;
  char *v20;
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  _BYTE *v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;

  v26 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC828E8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v31 - 8);
  v10 = MEMORY[0x1E0C80A78](v31);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v23 - v13;
  v27 = 0xD00000000000001DLL;
  v28 = 0x80000001D26DF130;
  sub_1D26CB844();
  if (v1)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v8, 1, 1, v31);
LABEL_4:
    sub_1D253703C((uint64_t)v8, &qword_1ED96B1E0);
LABEL_5:
    type metadata accessor for WidgetCacheManager.CacheManagementError(0);
    sub_1D25369B0(&qword_1EFC828B0, type metadata accessor for WidgetCacheManager.CacheManagementError, (uint64_t)&unk_1D26D28B0);
    swift_allocError();
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  v24 = v14;
  v25 = v12;
  v16 = v29;
  v15 = v30;
  sub_1D26CB6F4();
  swift_allocObject();
  sub_1D26CB6E8();
  sub_1D2536488(&qword_1EFC828F0, &qword_1EFC828E8, MEMORY[0x1E0D0F6A8]);
  sub_1D26CB6DC();
  swift_release();
  sub_1D253EE04(v16, v15);
  sub_1D26CBC04();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v18 = v31;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v31);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v18) == 1)
    goto LABEL_4;
  v19 = v24;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v24, v8, v18);
  v20 = v25;
  sub_1D26CB9D0();
  v21 = sub_1D26CB958();
  v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v20, v18);
  result = ((uint64_t (*)(char *, uint64_t))v22)(v19, v18);
  if ((v21 & 1) == 0)
    goto LABEL_5;
  *v26 = 1;
  return result;
}

uint64_t sub_1D257CCF8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v3[4];

  v3[3] = a1;
  return sub_1D257E778(a1, (void (*)(char *, char *))sub_1D257F264, (uint64_t)v3, a2);
}

uint64_t sub_1D257CD24@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD v3[4];

  v3[3] = a1;
  return sub_1D257E778(a1, (void (*)(char *, char *))sub_1D257FBE4, (uint64_t)v3, a2);
}

uint64_t sub_1D257CD50@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, id *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  BOOL v44;
  uint64_t v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  os_log_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  _QWORD v58[2];
  int v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  os_log_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;

  v68 = a5;
  v63 = a2;
  v72 = a1;
  v7 = sub_1D26CB628();
  v61 = *(_QWORD *)(v7 - 8);
  v62 = v7;
  MEMORY[0x1E0C80A78](v7);
  v60 = (char *)v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CB880();
  v66 = *(_QWORD *)(v9 - 8);
  v67 = v9;
  MEMORY[0x1E0C80A78](v9);
  v65 = (char *)v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1E0C80A78](v11);
  v64 = (uint64_t)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D26CD488();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CD350();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a3 + qword_1ED977FB8;
  swift_beginAccess();
  v70 = v18;
  v71 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v20, v21, v17);
  v22 = (char *)objc_msgSend(*a4, sel_extensionIdentity);
  v23 = &v22[*MEMORY[0x1E0D0FE10]];
  swift_beginAccess();
  v24 = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();

  if (v24)
  {
    swift_bridgeObjectRelease();
    sub_1D26CD338();
  }
  sub_1D26CD374();
  v25 = v69;
  v26 = sub_1D26CD35C();
  if (!v25)
  {
    v27 = v26;
    (*(void (**)(char *, os_log_t, uint64_t))(v14 + 16))(v16, v63, v13);
    sub_1D26CD788();
    sub_1D257D3B8(a4);
    sub_1D26CD77C();
    if (qword_1ED96C1C8 != -1)
      swift_once();
    v28 = sub_1D26CC09C();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED977F80);
    v29 = v64;
    sub_1D257F290((uint64_t)a4, v64);
    v30 = v65;
    v31 = v66;
    v32 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v66 + 16))(v65, v72, v67);
    swift_retain_n();
    v33 = sub_1D26CC084();
    v34 = sub_1D26CDD04();
    v35 = v34;
    if (os_log_type_enabled(v33, v34))
    {
      v36 = swift_slowAlloc();
      v72 = 0;
      v37 = v36;
      v69 = swift_slowAlloc();
      v75 = v69;
      *(_DWORD *)v37 = 136447234;
      v63 = v33;
      v59 = v35;
      v38 = WidgetEntryKey.description.getter();
      v73 = sub_1D2537880(v38, v39, &v75);
      v58[1] = &v74;
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D25340E4(v29, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
      *(_WORD *)(v37 + 12) = 2082;
      sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v40 = sub_1D26CE370();
      v73 = sub_1D2537880(v40, v41, &v75);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
      *(_WORD *)(v37 + 22) = 2048;
      v42 = *(_QWORD *)(sub_1D26CD794() + 16);
      swift_release();
      swift_bridgeObjectRelease();
      v73 = v42;
      sub_1D26CDF50();
      swift_release();
      *(_WORD *)(v37 + 32) = 2082;
      v43 = sub_1D26CD770();
      v44 = (v43 & 1) == 0;
      if ((v43 & 1) != 0)
        v45 = 1702195828;
      else
        v45 = 0x65736C6166;
      if (v44)
        v46 = 0xE500000000000000;
      else
        v46 = 0xE400000000000000;
      v73 = sub_1D2537880(v45, v46, &v75);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 42) = 2080;
      v47 = v60;
      sub_1D26CD7AC();
      sub_1D25369B0(&qword_1ED96B1A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE5D0], MEMORY[0x1E0CAE608]);
      v48 = v62;
      v49 = sub_1D26CE370();
      v51 = v50;
      (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v48);
      v73 = sub_1D2537880(v49, v51, &v75);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      v52 = v63;
        (uint8_t *)v37,
        0x34u);
      v53 = v69;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v53, -1, -1);
      MEMORY[0x1D823A5E0](v37, -1, -1);

    }
    else
    {
      swift_release();
      sub_1D25340E4(v29, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);

      swift_release_n();
    }
    v54 = sub_1D26CD7B8();
    v55 = MEMORY[0x1E0CF0B30];
    v56 = v68;
    v68[3] = v54;
    v56[4] = v55;
    *v56 = v27;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v20, v71);
}

uint64_t sub_1D257D3AC()
{
  return 0;
}

uint64_t sub_1D257D3B8(id *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  int v26;
  id v27;
  void *v28;
  id v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  unint64_t v46;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82898);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v42 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB78);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v42 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CB880();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D257E56C(a1, &qword_1ED96B510, (uint64_t (*)(_QWORD))type metadata accessor for WidgetCacheKey, &qword_1EFC828D8, &qword_1EFC828E0, (uint64_t)v16);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_1D253703C((uint64_t)v16, (uint64_t *)&unk_1ED96FC50);
LABEL_3:
    v21 = 0;
    return v21 & 1;
  }
  v44 = v7;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB70);
  MEMORY[0x1E0C80A78](v23);
  *(&v42 - 2) = 0xD000000000000021;
  *(&v42 - 1) = 0x80000001D26DF380;
  sub_1D26CB844();
  v24 = v46;
  v43 = v45;
  sub_1D26CB6F4();
  swift_allocObject();
  sub_1D26CB6E8();
  sub_1D2536488((unint64_t *)&qword_1ED96E7E8, &qword_1ED96FB70, MEMORY[0x1E0D0F6A8]);
  v42 = v24;
  sub_1D26CB6DC();
  swift_release();
  sub_1D253EE04(v43, v42);
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v13, 0, 1, v23);
  sub_1D2537078((uint64_t)v13, (uint64_t)v11, &qword_1ED96FB78);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v23) == 1)
  {
    sub_1D253703C((uint64_t)v11, &qword_1ED96FB78);
  }
  else
  {
    sub_1D26CBC04();
    v26 = v45;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v23);
    if (v26 == 1)
    {
      sub_1D253703C((uint64_t)v13, &qword_1ED96FB78);
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      v21 = 1;
      return v21 & 1;
    }
  }
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D016F8]), sel_init);
  if (!v27)
  {
    sub_1D253703C((uint64_t)v13, &qword_1ED96FB78);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    goto LABEL_3;
  }
  v28 = v27;
  v29 = objc_msgSend(v27, sel_stringRepresentation);

  v43 = sub_1D26CD938();
  v31 = v30;

  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC828A0);
  MEMORY[0x1E0C80A78](v32);
  *(&v42 - 2) = 0xD00000000000001FLL;
  *(&v42 - 1) = 0x80000001D26DF150;
  sub_1D26CB844();
  v42 = v31;
  v34 = v45;
  v33 = v46;
  sub_1D26CB6F4();
  swift_allocObject();
  sub_1D26CB6E8();
  sub_1D2536488(&qword_1EFC828A8, &qword_1EFC828A0, MEMORY[0x1E0D0F6A8]);
  sub_1D26CB6DC();
  swift_release();
  sub_1D253EE04(v34, v33);
  v35 = v42;
  v36 = *(_QWORD *)(v32 - 8);
  v37 = (uint64_t)v44;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v44, 0, 1, v32);
  sub_1D2537078(v37, (uint64_t)v5, &qword_1EFC82898);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v5, 1, v32) == 1)
  {
    sub_1D253703C((uint64_t)v5, &qword_1EFC82898);
    swift_bridgeObjectRetain();
    v38 = 0;
    v39 = (uint64_t)v44;
  }
  else
  {
    sub_1D26CBC04();
    v40 = v45;
    v41 = v46;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v5, v32);
    if (v43 == v40 && v35 == v41)
      v38 = 1;
    else
      v38 = sub_1D26CE3D0();
    v39 = (uint64_t)v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  sub_1D253703C(v39, &qword_1EFC82898);
  sub_1D253703C((uint64_t)v13, &qword_1ED96FB78);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_bridgeObjectRelease_n();
  v21 = v38 ^ 1;
  return v21 & 1;
}

_QWORD *sub_1D257DA58(id *a1)
{
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unint64_t v19;
  _UNKNOWN **v20;
  char v21;
  _QWORD *v22;
  _UNKNOWN **v23;
  id v24;
  void (*v25)(void);
  uint64_t v26;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  id v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  unint64_t v52;
  _UNKNOWN **v53;
  uint64_t v54;

  v3 = v1;
  v54 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CD488();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D26CB880();
  v13 = MEMORY[0x1E0C80A78](v12);
  v14 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)&v42 - v17;
  if (v3[160] != 1)
  {
    v22 = (_QWORD *)type metadata accessor for WidgetCacheManager.CacheManagementError(0);
    sub_1D25369B0(&qword_1EFC828B0, type metadata accessor for WidgetCacheManager.CacheManagementError, (uint64_t)&unk_1D26D28B0);
    swift_allocError();
LABEL_7:
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return v22;
  }
  v47 = v8;
  v48 = v16;
  v49 = v15;
  v50 = v14;
  v46 = v7;
  sub_1D2538510((uint64_t)(v3 + 40), (uint64_t)&v51);
  v19 = v52;
  v20 = v53;
  __swift_project_boxed_opaque_existential_0(&v51, v52);
  v21 = ((uint64_t (*)(id *, unint64_t, _UNKNOWN **))v20[5])(a1, v19, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
  if ((v21 & 1) == 0)
  {
    v22 = (_QWORD *)type metadata accessor for WidgetCacheManager.CacheManagementError(0);
    sub_1D25369B0(&qword_1EFC828B0, type metadata accessor for WidgetCacheManager.CacheManagementError, (uint64_t)&unk_1D26D28B0);
    swift_allocError();
    sub_1D257F290((uint64_t)a1, v26);
    goto LABEL_7;
  }
  v22 = v3;
  sub_1D257E56C(a1, &qword_1ED96B510, (uint64_t (*)(_QWORD))type metadata accessor for WidgetCacheKey, &qword_1EFC828D8, &qword_1EFC828E0, (uint64_t)v18);
  if (!v2)
  {
    swift_beginAccess();
    sub_1D2538510((uint64_t)(v3 + 120), (uint64_t)&v51);
    v23 = v53;
    __swift_project_boxed_opaque_existential_0(&v51, v52);
    v24 = objc_msgSend(*a1, sel_extensionIdentity);
    v25 = (void (*)(void))v23[2];
    v45 = v24;
    v25();

    v28 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v51);
    v44 = *(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 168);
    v29 = (void *)v44(v28);
    v30 = v48;
    sub_1D26CB82C();
    v31 = (void *)sub_1D26CB7D8();
    v45 = *(id *)(v49 + 8);
    ((void (*)(uint64_t, uint64_t))v45)(v30, v50);
    *(_QWORD *)&v51 = 0;
    LOBYTE(v30) = objc_msgSend(v29, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v31, 1, 0, &v51);

    v32 = (id)v51;
    if ((v30 & 1) != 0)
    {
      *(_QWORD *)&v51 = WidgetEntryKey.description.getter();
      *((_QWORD *)&v51 + 1) = v33;
      sub_1D26CDA04();
      sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v34 = v50;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v42 = *((_QWORD *)&v51 + 1);
      v43 = v51;
      (*(void (**)(uint64_t, char *, uint64_t))(v49 + 16))(v48, v18, v34);
      v36 = (uint64_t)v46;
      v35 = v47;
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v46, v11, v47);
      v37 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(v36, 0, 1, v35);
      v38 = v44(v37);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v35);
      ((void (*)(char *, uint64_t))v45)(v18, v34);
      v52 = sub_1D257F2D4();
      v53 = &off_1E93D53E8;
      *(_QWORD *)&v51 = v38;
      type metadata accessor for WidgetArchiveFilePromise(0);
      v22 = (_QWORD *)swift_allocObject();
      v39 = (char *)v22 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
      v40 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 1, 1, v40);
      v41 = v42;
      v22[2] = v43;
      v22[3] = v41;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32))((uint64_t)v22 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination, v48, v34);
      sub_1D2538F38(&v51, (uint64_t)(v22 + 4));
      sub_1D257F310(v36, (uint64_t)v22 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel);
    }
    else
    {
      v22 = v32;
      sub_1D26CB76C();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v47);
      ((void (*)(char *, uint64_t))v45)(v18, v50);
    }
  }
  return v22;
}

uint64_t (*sub_1D257DFE0(_QWORD *a1))(uint64_t, uint64_t)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v14)(uint64_t, uint64_t);
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  void *v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  _QWORD v33[3];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = type metadata accessor for WidgetCacheKey();
  MEMORY[0x1E0C80A78](v31);
  v32 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1D26CB880();
  v7 = *(_QWORD *)(v36 - 8);
  MEMORY[0x1E0C80A78](v36);
  v29 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = v1;
  sub_1D2538510(v1 + 40, (uint64_t)v33);
  v9 = v34;
  v10 = v35;
  __swift_project_boxed_opaque_existential_0(v33, v34);
  v11 = a1[3];
  v12 = a1[4];
  v13 = __swift_project_boxed_opaque_existential_0(a1, v11);
  v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 40);
  v26[1] = v13;
  v27 = v11;
  v15 = v11;
  v16 = v14;
  v28 = v12;
  v17 = (void *)v14(v15, v12);
  v18 = v36;
  (*(void (**)(void *, uint64_t, uint64_t))(v10 + 48))(v17, v9, v10);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, v18) == 1)
  {
    sub_1D253703C((uint64_t)v6, (uint64_t *)&unk_1ED96FC50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    type metadata accessor for WidgetCacheManager.CacheManagementError(0);
    sub_1D25369B0(&qword_1EFC828B0, type metadata accessor for WidgetCacheManager.CacheManagementError, (uint64_t)&unk_1D26D28B0);
    swift_allocError();
    *v19 = v16(v27, v28);
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
  }
  else
  {
    v20 = v29;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v29, v6, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    sub_1D2538510(v30 + 80, (uint64_t)v33);
    v21 = v34;
    v22 = v35;
    __swift_project_boxed_opaque_existential_0(v33, v34);
    v23 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v32, v20, v18);
    v24 = *(int *)(v31 + 24);
    *(_QWORD *)(v23 + *(int *)(v31 + 20)) = 0;
    *(_QWORD *)(v23 + v24) = 0;
    v16 = (uint64_t (*)(uint64_t, uint64_t))(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v21, v22);
    sub_1D25340E4(v23, (uint64_t (*)(_QWORD))type metadata accessor for WidgetCacheKey);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
  }
  return v16;
}

uint64_t WidgetCacheManager.__allocating_init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, __int128 *a5, uint64_t a6, char a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  sub_1D26CD344();
  *(_BYTE *)(v14 + 160) = a7 ^ 1;
  *(_QWORD *)(v14 + 24) = a1;
  *(_QWORD *)(v14 + 32) = a2;
  sub_1D2538F38(a3, v14 + 40);
  sub_1D2538F38(a4, v14 + 80);
  sub_1D2538F38(a5, v14 + 120);
  *(_QWORD *)(v14 + 16) = a6;
  return v14;
}

uint64_t WidgetCacheManager.init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, __int128 *a5, uint64_t a6, char a7)
{
  uint64_t v7;

  sub_1D26CD344();
  *(_BYTE *)(v7 + 160) = a7 ^ 1;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  sub_1D2538F38(a3, v7 + 40);
  sub_1D2538F38(a4, v7 + 80);
  sub_1D2538F38(a5, v7 + 120);
  *(_QWORD *)(v7 + 16) = a6;
  return v7;
}

uint64_t sub_1D257E3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1ED977FB8;
  v2 = sub_1D26CD350();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t WidgetCacheManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  v1 = v0 + qword_1ED977FB8;
  v2 = sub_1D26CD350();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t WidgetCacheManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  v1 = v0 + qword_1ED977FB8;
  v2 = sub_1D26CD350();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D257E504@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D257E56C(a1, &qword_1ED96B510, (uint64_t (*)(_QWORD))type metadata accessor for WidgetCacheKey, &qword_1EFC828D8, &qword_1EFC828E0, a2);
}

uint64_t sub_1D257E538@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D257E56C(a1, &qword_1ED96FAA0, (uint64_t (*)(_QWORD))type metadata accessor for ControlCacheKey, &qword_1EFC828C8, &qword_1EFC828D0, a2);
}

uint64_t sub_1D257E56C@<X0>(id *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t *a4@<X3>, unint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t *v20;
  _QWORD *v21;
  uint64_t (*v23)(_QWORD);
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  unint64_t *v27;
  uint64_t *v28;
  uint64_t (*v29)(_QWORD);
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v27 = a5;
  v28 = a4;
  v26[1] = a6;
  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a3;
  v13 = a3(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v26 - v15;
  v26[0] = v6;
  sub_1D2538510(v6 + 40, (uint64_t)v30);
  v17 = v31;
  v18 = v32;
  __swift_project_boxed_opaque_existential_0(v30, v31);
  (*(void (**)(id *, uint64_t, uint64_t))(v18 + 56))(a1, v17, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1D253703C((uint64_t)v12, a2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    v19 = objc_msgSend(*a1, sel_extensionIdentity);
    v20 = v28;
    __swift_instantiateConcreteTypeFromMangledName(v28);
    sub_1D2536488(v27, v20, (uint64_t)&unk_1D26D4B00);
    swift_allocError();
    *v21 = v19;
    return swift_willThrow();
  }
  else
  {
    v23 = v29;
    sub_1D2539ADC((uint64_t)v12, (uint64_t)v16, v29);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    sub_1D2538510(v26[0] + 80, (uint64_t)v30);
    v24 = v31;
    v25 = v32;
    __swift_project_boxed_opaque_existential_0(v30, v31);
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 24))(v16, v24, v25);
    sub_1D25340E4((uint64_t)v16, v23);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
}

uint64_t sub_1D257E778@<X0>(id *a1@<X0>, void (*a2)(char *, char *)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  char *v29;
  os_log_t v30;
  void (**v31)(void);
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  void (*isa)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  void *v50;
  void *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  void *v56;
  uint64_t v57;
  int v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  void *v63;
  unsigned __int8 v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  NSObject *v71;
  os_log_type_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  os_log_t v83;
  char *v84;
  id v85;
  void *v86;
  uint64_t v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, char *);
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  uint64_t v103;
  char *v104;
  os_log_t v105;
  _QWORD *v106;
  char *v107;
  uint64_t v108;
  id v109[7];

  v97 = a3;
  v98 = a2;
  v96 = a4;
  v109[5] = *(id *)MEMORY[0x1E0C80C00];
  v6 = type metadata accessor for WidgetEntryKey();
  v7 = MEMORY[0x1E0C80A78](v6);
  v92 = (uint64_t)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v93 = (uint64_t)&v89 - v10;
  MEMORY[0x1E0C80A78](v9);
  v94 = (uint64_t)&v89 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED96FBD0);
  MEMORY[0x1E0C80A78](v12);
  v102 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = sub_1D26CB574();
  v105 = *(os_log_t *)(v103 - 8);
  MEMORY[0x1E0C80A78](v103);
  v106 = (uint64_t *)((char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = sub_1D26CD488();
  v15 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v100 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CB880();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v101 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v89 - v21;
  v23 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v24 = MEMORY[0x1E0C80A78](v23);
  v99 = (uint64_t)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v89 - v26;
  v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  v28((char *)&v89 - v26, 1, 1, v17);
  v29 = v104;
  sub_1D257E56C(a1, &qword_1ED96B510, (uint64_t (*)(_QWORD))type metadata accessor for WidgetCacheKey, &qword_1EFC828D8, &qword_1EFC828E0, (uint64_t)v22);
  v107 = v4;
  if (v29)
  {
    v30 = v105;
    v39 = v106;
    if (v107[160] == 1)
    {
      v109[0] = v29;
      v40 = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
      v42 = (uint64_t)v102;
      v41 = v103;
      v43 = swift_dynamicCast();
      isa = (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))v30[7].isa;
      if (v43)
      {
        isa(v42, 0, 1, v41);
        ((void (*)(_QWORD *, uint64_t, uint64_t))v30[4].isa)(v39, v42, v41);
        if (sub_1D25BA0DC())
        {
          if (qword_1EFC821F0 != -1)
            swift_once();
          v45 = sub_1D26CC09C();
          __swift_project_value_buffer(v45, (uint64_t)qword_1EFC8AB10);
          v46 = v94;
          sub_1D257F290((uint64_t)a1, v94);
          v47 = sub_1D26CC084();
          v48 = sub_1D26CDD04();
          if (os_log_type_enabled(v47, v48))
          {
            v49 = (uint8_t *)swift_slowAlloc();
            v50 = (void *)swift_slowAlloc();
            v104 = v27;
            v51 = v50;
            v109[0] = v50;
            v107 = v29;
            *(_DWORD *)v49 = 136446210;
            v102 = (char *)(v49 + 4);
            v52 = v93;
            sub_1D257F290(v46, v93);
            sub_1D25340E4(v46, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            v53 = WidgetEntryKey.description.getter();
            v55 = v54;
            sub_1D25340E4(v52, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            v108 = sub_1D2537880(v53, v55, (uint64_t *)v109);
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D2531000, v47, v48, "Not removing item for key %{public}s because of keybag", v49, 0xCu);
            swift_arrayDestroy();
            v56 = v51;
            v27 = v104;
            MEMORY[0x1D823A5E0](v56, -1, -1);
            MEMORY[0x1D823A5E0](v49, -1, -1);

            ((void (*)(_QWORD *, uint64_t))v105[1].isa)(v106, v103);
          }
          else
          {
            sub_1D25340E4(v46, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

            ((void (*)(_QWORD *, uint64_t))v30[1].isa)(v106, v41);
          }
          goto LABEL_25;
        }
        ((void (*)(_QWORD *, uint64_t))v30[1].isa)(v39, v41);
      }
      else
      {
        isa(v42, 1, 1, v41);
        sub_1D253703C(v42, qword_1ED96FBD0);
      }
      v57 = v99;
      sub_1D2537078((uint64_t)v27, v99, (uint64_t *)&unk_1ED96FC50);
      v58 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v57, 1, v17);
      v59 = v101;
      if (v58 == 1)
      {
        sub_1D253703C(v57, (uint64_t *)&unk_1ED96FC50);
      }
      else
      {
        v60 = (uint64_t)a1;
        v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 32))(v101, v57, v17);
        v62 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v107 + 168))(v61);
        v63 = (void *)sub_1D26CB7D8();
        v109[0] = 0;
        v64 = objc_msgSend(v62, sel_removeItemAtURL_error_, v63, v109);

        if ((v64 & 1) != 0)
        {
          v91 = v18;
          v65 = qword_1ED96C1C8;
          v66 = v109[0];
          if (v65 != -1)
            swift_once();
          v67 = sub_1D26CC09C();
          __swift_project_value_buffer(v67, (uint64_t)qword_1ED977F80);
          v68 = v92;
          sub_1D257F290(v60, v92);
          v69 = v29;
          v70 = v29;
          v71 = sub_1D26CC084();
          v72 = sub_1D26CDD04();
          if (os_log_type_enabled(v71, v72))
          {
            v73 = swift_slowAlloc();
            v90 = v17;
            v74 = v73;
            v106 = (_QWORD *)swift_slowAlloc();
            v75 = (char *)swift_slowAlloc();
            v104 = v27;
            v107 = v75;
            v109[0] = v75;
            *(_DWORD *)v74 = 136446466;
            v105 = v71;
            v76 = v93;
            sub_1D257F290(v68, v93);
            sub_1D25340E4(v68, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            v77 = WidgetEntryKey.description.getter();
            v79 = v78;
            sub_1D25340E4(v76, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            v108 = sub_1D2537880(v77, v79, (uint64_t *)v109);
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            *(_WORD *)(v74 + 12) = 2112;
            v80 = v29;
            v81 = _swift_stdlib_bridgeErrorToNSError();
            v108 = v81;
            sub_1D26CDF50();
            v82 = v106;
            *v106 = v81;

            v83 = v105;
            _os_log_impl(&dword_1D2531000, v105, v72, "Removing item for key %{public}s because  %@", (uint8_t *)v74, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v82, -1, -1);
            v84 = v107;
            swift_arrayDestroy();
            v27 = v104;
            MEMORY[0x1D823A5E0](v84, -1, -1);
            MEMORY[0x1D823A5E0](v74, -1, -1);

            (*(void (**)(char *, uint64_t))(v91 + 8))(v101, v90);
          }
          else
          {
            sub_1D25340E4(v68, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

            (*(void (**)(char *, uint64_t))(v91 + 8))(v59, v17);
          }
        }
        else
        {
          v85 = v109[0];
          v86 = (void *)sub_1D26CB76C();

          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v18 + 8))(v59, v17);
        }
      }
    }
LABEL_25:
    swift_willThrow();
    v87 = (uint64_t)v27;
    return sub_1D253703C(v87, (uint64_t *)&unk_1ED96FC50);
  }
  v89 = v15;
  sub_1D253703C((uint64_t)v27, (uint64_t *)&unk_1ED96FC50);
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v27, v22, v17);
  v104 = v27;
  v28(v27, 0, 1, v17);
  swift_beginAccess();
  sub_1D2538510((uint64_t)(v4 + 120), (uint64_t)v109);
  v91 = v18;
  v90 = v17;
  v31 = (void (**)(void))v109[4];
  __swift_project_boxed_opaque_existential_0(v109, (uint64_t)v109[3]);
  v32 = objc_msgSend(*a1, sel_extensionIdentity);
  v33 = v100;
  v31[2]();
  v34 = v91;
  v35 = v90;

  v36 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v109);
  if ((v107[160] & 1) != 0)
  {
    v37 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v107 + 168))(v36);
    sub_1D25BA864((uint64_t)v22, v37);

  }
  v98(v22, v33);
  v38 = (uint64_t)v104;
  (*(void (**)(char *, uint64_t))(v89 + 8))(v33, v95);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v35);
  v87 = v38;
  return sub_1D253703C(v87, (uint64_t *)&unk_1ED96FC50);
}

uint64_t sub_1D257F264@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;

  return sub_1D257CD50(a1, a2, *(_QWORD *)(v3 + 16), *(id **)(v3 + 24), a3);
}

uint64_t type metadata accessor for WidgetCacheManager.CacheManagementError(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1EFC828B8);
}

uint64_t sub_1D257F290(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetEntryKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D257F2D4()
{
  unint64_t result;

  result = qword_1ED9620C0;
  if (!qword_1ED9620C0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9620C0);
  }
  return result;
}

uint64_t sub_1D257F310(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for WidgetCacheManager(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96B580);
}

uint64_t sub_1D257F374()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CD350();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for WidgetCacheManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetCacheManager.archiveValidationOptions.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of WidgetCacheManager.archiveValidationOptions.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of WidgetCacheManager.archiveValidationOptions.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of WidgetCacheManager.timelineData(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of WidgetCacheManager.requiresReload(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of WidgetCacheManager.urls(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

char *sub_1D257F454(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *a2;
      v12 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v12;
      v13 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
      v14 = &a1[v13];
      v15 = (char *)a2 + v13;
      v16 = v11;
      v17 = v12;
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v14, v15, v18);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
      }
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      v8 = *a2;
      *(_QWORD *)a1 = *a2;
      v9 = v8;
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

void sub_1D257F5B0(id *a1)
{
  int EnumCaseMultiPayload;
  char *v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {

    v3 = (char *)a1 + *(int *)(type metadata accessor for WidgetEntryKey() + 24);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v5 = *(_QWORD *)(v4 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
      (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
  }
  else if (!EnumCaseMultiPayload)
  {

  }
}

void **sub_1D257F660(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v9 = *a2;
    v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    v11 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = v9;
    v15 = v10;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v17 = *(_QWORD *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v13, v16);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    v7 = *a2;
    *a1 = *a2;
    v8 = v7;
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void **sub_1D257F794(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_1D25340E4((uint64_t)a1, type metadata accessor for WidgetCacheManager.CacheManagementError);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v9 = *a2;
      *a1 = *a2;
      v10 = a2[1];
      a1[1] = v10;
      v11 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = v9;
      v15 = v10;
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v12, v13, v16);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v16);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      v7 = *a2;
      *a1 = *a2;
      v8 = v7;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1D257F8E8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1D257F9F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1D25340E4((uint64_t)a1, type metadata accessor for WidgetCacheManager.CacheManagementError);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for WidgetEntryKey() + 24);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v10 = *(_QWORD *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultWidgetLiveViewEntry(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for DefaultWidgetLiveViewEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1D257FB34()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D257FB44()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for WidgetEntryKey();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1D257FBB8()
{
  return sub_1D25369B0(&qword_1EFC828B0, type metadata accessor for WidgetCacheManager.CacheManagementError, (uint64_t)&unk_1D26D28B0);
}

uint64_t sub_1D257FBE4@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1D257F264(a1, a2, a3);
}

void sub_1D257FBF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, __int16 a8, char a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  objc_class *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  objc_super v43;
  uint64_t v44;

  v10 = v9;
  *(_QWORD *)(v9 + 72) = 0;
  v15 = v9 + 72;
  *(_WORD *)(v9 + 80) = 256;
  *(_QWORD *)(v9 + 24) = 0;
  *(_QWORD *)(v9 + 32) = 0;
  *(_QWORD *)(v9 + 104) = 0;
  type metadata accessor for UnfairLock();
  v16 = swift_allocObject();
  v17 = (_DWORD *)swift_slowAlloc();
  *v17 = 0;
  *(_QWORD *)(v16 + 16) = v17;
  *(_QWORD *)(v15 + 40) = v16;
  *(_QWORD *)(v15 + 48) = 0;
  *(_WORD *)(v15 + 56) = 256;
  if (!a2)
    goto LABEL_11;
  v18 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v19 = objc_msgSend(v18, sel_bundleIdentifier);

  if (!v19)
    goto LABEL_8;
  v20 = sub_1D26CD938();
  v22 = v21;

  if (v20 == a1 && v22 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v24 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0)
  {
LABEL_8:
    v25 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    swift_bridgeObjectRetain();
    v26 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v25, sel_initWithSuiteName_, v26);

    if (v27)
      goto LABEL_12;
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  v27 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
LABEL_12:
  *(_QWORD *)(v10 + 16) = v27;
  *(_QWORD *)(v10 + 24) = a1;
  *(_QWORD *)(v10 + 32) = a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v10 + 56) = a5;
  *(_QWORD *)(v10 + 40) = a3;
  *(_QWORD *)(v10 + 48) = a4;
  *(_BYTE *)(v10 + 64) = (a6 & 1) != 0;
  *(_BYTE *)(v10 + 82) = a9 & 1;
  if ((a8 & 0x100) == 0)
  {
    swift_beginAccess();
    if ((a9 & 1) != 0)
    {
      *(_QWORD *)(v10 + 56) = a7;
      *(_BYTE *)(v10 + 64) = a8 & 1;
    }
    else
    {
      *(_QWORD *)(v10 + 72) = a5;
      *(_BYTE *)(v10 + 80) = a6 & 1;
      *(_BYTE *)(v10 + 81) = 0;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96F0D0);
  swift_allocObject();
  v28 = sub_1D26CC150();
  *(_QWORD *)(v10 + 88) = v28;
  v44 = v28;
  sub_1D2536488(&qword_1ED96F0C8, &qword_1ED96F0D0, MEMORY[0x1E0C95F48]);
  v29 = sub_1D26CC204();
  v30 = *(void **)(v10 + 104);
  *(_QWORD *)(v10 + 96) = v29;
  *(_QWORD *)(v10 + 104) = 0;

  v31 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96F260);
  v32 = objc_allocWithZone(v31);
  swift_weakInit();
  swift_weakAssign();
  v43.receiver = v32;
  v43.super_class = v31;
  v33 = objc_msgSendSuper2(&v43, sel_init);
  v34 = *(void **)(v10 + 104);
  *(_QWORD *)(v10 + 104) = v33;

  v35 = *(void **)(v10 + 104);
  if (v35)
  {
    v36 = *(id *)(v10 + 16);
    v37 = v35;
    swift_bridgeObjectRetain();
    v38 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_addObserver_forKeyPath_options_context_, v37, v38, 0, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_1D257FF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  id v26;
  void *v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  objc_class *v32;
  id v33;
  id v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  unsigned int v40;
  objc_super v43;
  uint64_t v44;

  v9 = v8;
  *(_QWORD *)(v8 + 64) = 0;
  v16 = v8 + 64;
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = 0;
  *(_BYTE *)(v8 + 72) = 1;
  *(_QWORD *)(v8 + 96) = 0;
  type metadata accessor for UnfairLock();
  v17 = swift_allocObject();
  v18 = (_DWORD *)swift_slowAlloc();
  *v18 = 0;
  *(_QWORD *)(v17 + 16) = v18;
  *(_QWORD *)(v16 + 40) = v17;
  *(_QWORD *)(v16 + 48) = 0;
  *(_BYTE *)(v16 + 56) = 1;
  if (!a2)
    goto LABEL_11;
  v19 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v20 = objc_msgSend(v19, sel_bundleIdentifier);

  if (!v20)
    goto LABEL_8;
  v40 = a8;
  a8 = a5;
  a5 = a7;
  a7 = a6;
  v21 = sub_1D26CD938();
  v23 = v22;

  if (v21 == a1 && v23 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    a6 = a7;
    LOBYTE(a7) = a5;
    a5 = a8;
    LOBYTE(a8) = v40;
    goto LABEL_11;
  }
  v25 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  a6 = a7;
  a7 = a5;
  a5 = a8;
  a8 = v40;
  if ((v25 & 1) == 0)
  {
LABEL_8:
    v26 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    swift_bridgeObjectRetain();
    v27 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v26, sel_initWithSuiteName_, v27);

    if (v28)
      goto LABEL_12;
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  v28 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
LABEL_12:
  *(_QWORD *)(v9 + 16) = v28;
  *(_QWORD *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v9 + 56) = a5;
  *(_QWORD *)(v9 + 40) = a3;
  *(_QWORD *)(v9 + 48) = a4;
  *(_BYTE *)(v9 + 73) = a8 & 1;
  if ((a7 & 1) == 0)
  {
    swift_beginAccess();
    if ((a8 & 1) != 0)
    {
      *(_QWORD *)(v9 + 56) = a6;
    }
    else
    {
      *(_QWORD *)(v9 + 64) = a5;
      *(_BYTE *)(v9 + 72) = 0;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED96F0E0);
  swift_allocObject();
  v29 = sub_1D26CC150();
  *(_QWORD *)(v9 + 80) = v29;
  v44 = v29;
  sub_1D2536488(&qword_1ED96F0D8, qword_1ED96F0E0, MEMORY[0x1E0C95F48]);
  v30 = sub_1D26CC204();
  v31 = *(void **)(v9 + 96);
  *(_QWORD *)(v9 + 88) = v30;
  *(_QWORD *)(v9 + 96) = 0;

  v32 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(qword_1ED96F268);
  v33 = objc_allocWithZone(v32);
  swift_weakInit();
  swift_weakAssign();
  v43.receiver = v33;
  v43.super_class = v32;
  v34 = objc_msgSendSuper2(&v43, sel_init);
  v35 = *(void **)(v9 + 96);
  *(_QWORD *)(v9 + 96) = v34;

  v36 = *(void **)(v9 + 96);
  if (v36)
  {
    v37 = *(id *)(v9 + 16);
    v38 = v36;
    swift_bridgeObjectRetain();
    v39 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    objc_msgSend(v37, sel_addObserver_forKeyPath_options_context_, v38, v39, 0, 0);

  }
  else
  {
    __break(1u);
  }
}

void sub_1D25802F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  objc_class *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  char v39;
  objc_super v41;
  uint64_t v42;

  v8 = v7;
  LOBYTE(v10) = a6;
  *(_BYTE *)(v7 + 57) = 2;
  v15 = v7 + 57;
  *(_QWORD *)(v15 - 25) = 0;
  *(_QWORD *)(v15 - 33) = 0;
  *(_QWORD *)(v15 + 23) = 0;
  type metadata accessor for UnfairLock();
  v16 = swift_allocObject();
  v17 = (_DWORD *)swift_slowAlloc();
  *v17 = 0;
  *(_QWORD *)(v16 + 16) = v17;
  *(_QWORD *)(v15 + 31) = v16;
  *(_BYTE *)(v15 + 39) = 2;
  if (!a2)
    goto LABEL_11;
  v18 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v19 = objc_msgSend(v18, sel_bundleIdentifier);

  if (!v19)
    goto LABEL_8;
  v39 = a7;
  a7 = v10;
  v10 = a5;
  a5 = a4;
  v20 = sub_1D26CD938();
  v22 = v21;

  if (v20 == a1 && v22 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    a4 = a5;
    LOBYTE(a5) = v10;
    LOBYTE(v10) = a7;
    a7 = v39;
    goto LABEL_11;
  }
  v24 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  a4 = a5;
  a5 = v10;
  LOBYTE(v10) = a7;
  a7 = v39;
  if ((v24 & 1) == 0)
  {
LABEL_8:
    v25 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    swift_bridgeObjectRetain();
    v26 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v25, sel_initWithSuiteName_, v26);

    if (v27)
      goto LABEL_12;
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  v27 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
LABEL_12:
  *(_QWORD *)(v8 + 16) = v27;
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 32) = a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 56) = a5 & 1;
  *(_QWORD *)(v8 + 40) = a3;
  *(_QWORD *)(v8 + 48) = a4;
  *(_BYTE *)(v8 + 58) = a7 & 1;
  if (v10 != 2)
  {
    swift_beginAccess();
    if ((a7 & 1) != 0)
      *(_BYTE *)(v8 + 56) = v10 & 1;
    else
      *(_BYTE *)v15 = a5 & 1;
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED96EE98);
  swift_allocObject();
  v28 = sub_1D26CC150();
  *(_QWORD *)(v8 + 64) = v28;
  v42 = v28;
  sub_1D2536488(&qword_1ED96EE90, qword_1ED96EE98, MEMORY[0x1E0C95F48]);
  v29 = sub_1D26CC204();
  v30 = *(void **)(v8 + 80);
  *(_QWORD *)(v8 + 72) = v29;
  *(_QWORD *)(v8 + 80) = 0;

  v31 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96F258);
  v32 = objc_allocWithZone(v31);
  swift_weakInit();
  swift_weakAssign();
  v41.receiver = v32;
  v41.super_class = v31;
  v33 = objc_msgSendSuper2(&v41, sel_init);
  v34 = *(void **)(v8 + 80);
  *(_QWORD *)(v8 + 80) = v33;

  v35 = *(void **)(v8 + 80);
  if (v35)
  {
    v36 = *(id *)(v8 + 16);
    v37 = v35;
    swift_bridgeObjectRetain();
    v38 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_addObserver_forKeyPath_options_context_, v37, v38, 0, 0);

  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_1D2580688(uint64_t a1))(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  char v5;

  *(_QWORD *)a1 = v1;
  v3 = *(_QWORD *)(v1 + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  v5 = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  *(_BYTE *)(a1 + 8) = v5 & 1;
  return sub_1D25806F4;
}

uint64_t sub_1D25806F4(unsigned __int8 *a1)
{
  int v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = a1[8];
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v3 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1D2580848(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  return swift_release();
}

uint64_t (*sub_1D2580748(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 104);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  v5 = sub_1D254A328();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  *a1 = v5;
  return sub_1D25807B0;
}

uint64_t sub_1D25807B0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v2 = *a1;
  v3 = *(_QWORD *)(a1[1] + 104);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_1D2580CFC(v2);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(v4);
    sub_1D2580CFC(v2);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

void sub_1D2580848(int a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + 88) + 16));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 57) == 2 && ((sub_1D2534A90() ^ a1) & 1) != 0)
  {
    v11 = a1 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
    swift_dynamicCast();
    if (v10)
    {
      sub_1D2538448(&v9, &v12);
      v3 = *(void **)(v1 + 16);
      __swift_project_boxed_opaque_existential_0(&v12, v13);
      v4 = v3;
      v5 = sub_1D26CE3B8();
      swift_bridgeObjectRetain();
      v6 = (void *)sub_1D26CD914();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    }
    else
    {
      sub_1D2536700((uint64_t)&v9);
      v7 = *(id *)(v1 + 16);
      swift_bridgeObjectRetain();
      v8 = (void *)sub_1D26CD914();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_removeObjectForKey_, v8);

    }
  }
}

void sub_1D25809CC(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + 104) + 16));
  swift_beginAccess();
  if (*(_BYTE *)(v1 + 72) == 1 && sub_1D254A098() != a1)
  {
    v11 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
    swift_dynamicCast();
    if (v10)
    {
      sub_1D2538448(&v9, &v12);
      v3 = *(void **)(v1 + 16);
      __swift_project_boxed_opaque_existential_0(&v12, v13);
      v4 = v3;
      v5 = sub_1D26CE3B8();
      swift_bridgeObjectRetain();
      v6 = (void *)sub_1D26CD914();
      swift_bridgeObjectRelease();
      objc_msgSend(v4, sel_setObject_forKey_, v5, v6);

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v12);
    }
    else
    {
      sub_1D2536700((uint64_t)&v9);
      v7 = *(id *)(v1 + 16);
      swift_bridgeObjectRetain();
      v8 = (void *)sub_1D26CD914();
      swift_bridgeObjectRelease();
      objc_msgSend(v7, sel_removeObjectForKey_, v8);

    }
  }
}

void sub_1D2580B4C(uint64_t a1, char a2)
{
  uint64_t v2;
  double v5;
  char v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v2 + 112) + 16));
  swift_beginAccess();
  if (*(_BYTE *)(v2 + 81) == 1)
  {
    v5 = COERCE_DOUBLE(sub_1D254A1D0());
    if ((a2 & 1) != 0)
    {
      if ((v6 & 1) != 0)
        return;
      goto LABEL_7;
    }
    if ((v6 & 1) != 0 || *(double *)&a1 != v5)
    {
LABEL_7:
      v15 = a1;
      v16 = a2 & 1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B158);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
      swift_dynamicCast();
      if (v14)
      {
        sub_1D2538448(&v13, &v17);
        v7 = *(void **)(v2 + 16);
        __swift_project_boxed_opaque_existential_0(&v17, v18);
        v8 = v7;
        v9 = sub_1D26CE3B8();
        swift_bridgeObjectRetain();
        v10 = (void *)sub_1D26CD914();
        swift_bridgeObjectRelease();
        objc_msgSend(v8, sel_setObject_forKey_, v9, v10);

        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v17);
      }
      else
      {
        sub_1D2536700((uint64_t)&v13);
        v11 = *(id *)(v2 + 16);
        swift_bridgeObjectRetain();
        v12 = (void *)sub_1D26CD914();
        swift_bridgeObjectRelease();
        objc_msgSend(v11, sel_removeObjectForKey_, v12);

      }
    }
  }
}

void sub_1D2580CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + 104) + 16));
  swift_beginAccess();
  if (!*(_QWORD *)(v1 + 64))
  {
    v3 = sub_1D254A328();
    v4 = sub_1D25840F0(a1, v3);
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      v13 = a1;
      swift_bridgeObjectRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82578);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
      swift_dynamicCast();
      if (v12)
      {
        sub_1D2538448(&v11, &v14);
        v5 = *(void **)(v1 + 16);
        __swift_project_boxed_opaque_existential_0(&v14, v15);
        v6 = v5;
        v7 = sub_1D26CE3B8();
        swift_bridgeObjectRetain();
        v8 = (void *)sub_1D26CD914();
        swift_bridgeObjectRelease();
        objc_msgSend(v6, sel_setObject_forKey_, v7, v8);

        swift_unknownObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v14);
      }
      else
      {
        sub_1D2536700((uint64_t)&v11);
        v9 = *(id *)(v1 + 16);
        swift_bridgeObjectRetain();
        v10 = (void *)sub_1D26CD914();
        swift_bridgeObjectRelease();
        objc_msgSend(v9, sel_removeObjectForKey_, v10);

      }
    }
  }
}

_QWORD *sub_1D2580EA4()
{
  _QWORD *result;

  type metadata accessor for Preferences();
  swift_allocObject();
  result = sub_1D2582CF8();
  off_1ED96F1C0 = result;
  return result;
}

uint64_t sub_1D2580EDC()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2580F44(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2580FA8()
{
  return swift_retain();
}

uint64_t sub_1D2580FB4()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D258101C(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 24) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581080()
{
  return swift_retain();
}

uint64_t sub_1D258108C(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D25810F0()
{
  return swift_retain();
}

uint64_t sub_1D25810FC()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581164(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 40) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t (*sub_1D25811C8(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 40);
  swift_retain();
  v3[5] = sub_1D2580688((uint64_t)v3);
  return sub_1D2581220;
}

uint64_t sub_1D2581224()
{
  return swift_retain();
}

uint64_t sub_1D2581230()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581298(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t (*sub_1D25812FC(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 48);
  swift_retain();
  v3[5] = sub_1D2580688((uint64_t)v3);
  return sub_1D2581220;
}

uint64_t sub_1D2581354()
{
  return swift_retain();
}

uint64_t sub_1D2581360()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 56) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D25813C8(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 56) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t (*sub_1D258142C(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 56);
  swift_retain();
  v3[5] = sub_1D2580688((uint64_t)v3);
  return sub_1D2581220;
}

uint64_t sub_1D2581484()
{
  return swift_retain();
}

uint64_t sub_1D2581490()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 64) + 104);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = sub_1D254A098();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1D25814F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 64) + 104);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D25809CC(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D258155C()
{
  return swift_retain();
}

uint64_t sub_1D2581568()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + 104);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = sub_1D254A098();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1D25815D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 72) + 104);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D25809CC(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581634()
{
  return swift_retain();
}

uint64_t sub_1D2581640()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D25816A8(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 80) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D258170C()
{
  return swift_retain();
}

uint64_t sub_1D2581718()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 88) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581780(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 88) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D25817E4()
{
  return swift_retain();
}

uint64_t sub_1D25817F0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 96) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581858(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 96) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D25818BC()
{
  return swift_retain();
}

uint64_t sub_1D25818C8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 104) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581930(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 104) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581994()
{
  return swift_retain();
}

uint64_t sub_1D25819A0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 112) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581A08(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 112) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581A6C()
{
  return swift_retain();
}

uint64_t sub_1D2581A78()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 120) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581AE0(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 120) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581B44()
{
  return swift_retain();
}

uint64_t sub_1D2581B50()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 128) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581BB8(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 128) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581C1C()
{
  return swift_retain();
}

uint64_t sub_1D2581C28()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 136) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581C90(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 136) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581CF4()
{
  return swift_retain();
}

uint64_t sub_1D2581D00()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 144) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581D68(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 144) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581DCC()
{
  return swift_retain();
}

uint64_t sub_1D2581DD8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 152) + 112);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = sub_1D254A1D0();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1D2581E48(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(*(_QWORD *)(v2 + 152) + 112);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1D2580B4C(a1, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581EBC()
{
  return swift_retain();
}

uint64_t sub_1D2581EC8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 160) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2581F30(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 160) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2581F94()
{
  return swift_retain();
}

uint64_t sub_1D2581FA0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 168) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2582008(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 168) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D258206C()
{
  return swift_retain();
}

uint64_t sub_1D2582078()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 176) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D25820E0(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 176) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2582144()
{
  return swift_retain();
}

uint64_t sub_1D2582150()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 184) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D25821B8(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 184) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D258221C()
{
  return swift_retain();
}

uint64_t sub_1D2582228()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 192) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2582290(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 192) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D25822F4()
{
  return swift_retain();
}

uint64_t sub_1D2582300()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 200) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2582368(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 200) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D25823CC()
{
  return swift_retain();
}

uint64_t sub_1D25823D8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 208) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2582440(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 208) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D25824A4()
{
  return swift_retain();
}

uint64_t sub_1D25824B0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 216) + 112);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = sub_1D254A1D0();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1D2582520(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v4 = a2 & 1;
  v5 = *(_QWORD *)(*(_QWORD *)(v2 + 216) + 112);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1D2580B4C(a1, v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2582594()
{
  return swift_retain();
}

uint64_t sub_1D25825A0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 224) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2582608(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 224) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D258266C()
{
  return swift_retain();
}

uint64_t sub_1D2582678()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 232) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D25826E0(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 232) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2582744()
{
  return swift_retain();
}

uint64_t sub_1D2582750()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 240) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D25827B8(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 240) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D258281C()
{
  return swift_retain();
}

uint64_t sub_1D2582828()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 248) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2582890(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 248) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D25828F4()
{
  return swift_retain();
}

uint64_t sub_1D2582900()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 256) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2582968(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 256) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D25829CC()
{
  return swift_retain();
}

uint64_t sub_1D25829D8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 264) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2582A40(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 264) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2582AA4()
{
  return swift_retain();
}

uint64_t sub_1D2582AB0()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 272) + 88);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  LOBYTE(v2) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v2 & 1;
}

uint64_t sub_1D2582B18(int a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 272) + 88);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580848(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return swift_release();
}

uint64_t sub_1D2582B7C()
{
  return swift_retain();
}

uint64_t sub_1D2582B88()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 280) + 104);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = sub_1D254A328();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_1D2582BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 280) + 104);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2580CFC(a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t (*sub_1D2582C5C(uint64_t **a1))()
{
  uint64_t v1;
  uint64_t *v3;

  v3 = (uint64_t *)malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(_QWORD *)(v1 + 280);
  swift_retain();
  v3[5] = (uint64_t)sub_1D2580748(v3);
  return sub_1D2581220;
}

void sub_1D2582CB4(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  swift_release();
  free(v1);
}

uint64_t sub_1D2582CEC()
{
  return swift_retain();
}

_QWORD *sub_1D2582CF8()
{
  _QWORD *v0;
  _QWORD *v1;
  char has_internal_ui;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v1 = v0;
  has_internal_ui = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96F2F8);
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000026, 0x80000001D26DF8C0, 1, 2, has_internal_ui);
  v1[2] = v3;
  v4 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000024, 0x80000001D26DF8F0, 1, 2, v4);
  v1[3] = v5;
  v6 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000015, 0x80000001D26DF920, 0xD00000000000001DLL, 0x80000001D26DF940, 0, 2, v6);
  v1[4] = v7;
  v8 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000014, 0x80000001D26DF960, 1, 2, v8);
  v1[5] = v9;
  v10 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000024, 0x80000001D26DF980, 0, 2, v10);
  v1[6] = v11;
  v12 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD00000000000001DLL, 0x80000001D26DF9B0, 1, 2, v12);
  v1[7] = v13;
  v14 = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED96F308);
  swift_allocObject();
  sub_1D257FF70(0xD000000000000011, 0x80000001D26DF8A0, 0xD00000000000001DLL, 0x80000001D26DF9D0, 5, 0, 1, v14);
  v1[8] = v15;
  v16 = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D257FF70(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000023, 0x80000001D26DF9F0, 120, 0, 1, v16);
  v1[9] = v17;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000016, 0x80000001D26DFA20, 0, 2, v16);
  v1[10] = v18;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000015, 0x80000001D26DFA40, 0, 2, v16);
  v1[11] = v19;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000015, 0x80000001D26DFA60, 0, 2, v16);
  v1[12] = v20;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000014, 0x80000001D26DFA80, 0, 2, v16);
  v1[13] = v21;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000011, 0x80000001D26DFAA0, 0, 2, v16);
  v1[14] = v22;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000018, 0x80000001D26DFAC0, 0, 2, v16);
  v1[15] = v23;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000011, 0x80000001D26DFAE0, 0, 2, v16);
  v1[16] = v24;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000015, 0x80000001D26DFB00, 0, 2, v16);
  v1[17] = v25;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000010, 0x80000001D26DFB20, 0, 2, v16);
  v1[18] = v26;
  LOBYTE(v16) = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96F300);
  swift_allocObject();
  sub_1D257FBF8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000012, 0x80000001D26DFB40, 0, 1, 0, 256, v16);
  v1[19] = v27;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000013, 0x80000001D26DFB60, 0, 2, v16);
  v1[20] = v28;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000010, 0x80000001D26DFB80, 0, 2, v16);
  v1[21] = v29;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000014, 0x80000001D26DFBA0, 0, 2, v16);
  v1[22] = v30;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000019, 0x80000001D26DFBC0, 0, 2, v16);
  v1[23] = v31;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0x61745379616C6544, 0xEC00000070757472, 0, 2, v16);
  v1[24] = v32;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000014, 0x80000001D26DFBE0, 0, 2, v16);
  v1[25] = v33;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD00000000000001BLL, 0x80000001D26DFC00, 0, 2, v16);
  v1[26] = v34;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D257FBF8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000012, 0x80000001D26DFC20, 0, 1, 0, 256, v16);
  v1[27] = v35;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000013, 0x80000001D26DFC40, 0, 2, v16);
  v1[28] = v36;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000011, 0x80000001D26DFC60, 0, 2, v16);
  v1[29] = v37;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0x72614D6775626544, 0xEC000000736E6967, 0, 2, v16);
  v1[30] = v38;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0x6563536775626544, 0xEE006B73614D656ELL, 0, 2, v16);
  v1[31] = v39;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000028, 0x80000001D26DFC80, 0, 1, v16);
  v1[32] = v40;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000020, 0x80000001D26DFCB0, 0, 1, v16);
  v1[33] = v41;
  LOBYTE(v16) = os_variant_has_internal_ui();
  swift_allocObject();
  sub_1D25802F8(0xD000000000000011, 0x80000001D26DF8A0, 0xD000000000000022, 0x80000001D26DFCE0, 0, 0, v16);
  v1[34] = v42;
  v43 = MEMORY[0x1E0DEE9D8];
  v44 = sub_1D253DB20(MEMORY[0x1E0DEE9D8]);
  v45 = sub_1D253DB20(v43);
  swift_bridgeObjectRetain();
  v46 = os_variant_has_internal_ui();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96F2F0);
  swift_allocObject();
  sub_1D25860AC(0xD000000000000011, 0x80000001D26DF8A0, 0xD00000000000001CLL, 0x80000001D26DFD10, v44, v45, v46);
  v48 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  v1[35] = v48;
  return v1;
}

unint64_t sub_1D2583A04()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v1 = sub_1D26CE4CC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = type metadata accessor for Preferences();
  v19 = v0;
  swift_retain();
  sub_1D26CE4B4();
  sub_1D26CE4C0();
  v5 = sub_1D26CE184();
  swift_release();
  v19 = 0;
  v20 = 0xE000000000000000;
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  v19 = 0xD000000000000010;
  v20 = 0x80000001D26DF400;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v16 = v2;
    v17 = v1;
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1D258430C(0, v6, 0);
    v7 = v18;
    v8 = (uint64_t *)(v5 + 40);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      v18 = v7;
      v12 = *(_QWORD *)(v7 + 16);
      v11 = *(_QWORD *)(v7 + 24);
      swift_bridgeObjectRetain();
      if (v12 >= v11 >> 1)
      {
        sub_1D258430C(v11 > 1, v12 + 1, 1);
        v7 = v18;
      }
      v8 += 2;
      *(_QWORD *)(v7 + 16) = v12 + 1;
      v13 = v7 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v9;
      *(_QWORD *)(v13 + 40) = v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    v2 = v16;
    v1 = v17;
  }
  else
  {
    swift_bridgeObjectRelease();
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v18 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
  sub_1D26CD8E4();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v14 = v19;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v14;
}

uint64_t Preferences.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t Preferences.__deallocating_deinit()
{
  Preferences.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_1D2583DD8()
{
  return sub_1D2583A04();
}

unint64_t sub_1D2583DF8(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  double v15;
  char v16;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(double *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    result = sub_1D2589198(*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11));
    if ((v16 & 1) == 0 || *(double *)(*(_QWORD *)(a2 + 56) + 8 * result) != v15)
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_1D2583F74(unint64_t result, uint64_t a2)
{
  unint64_t v3;
  int64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  char v16;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v15 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    result = sub_1D2589198(*(_BYTE *)(*(_QWORD *)(v3 + 48) + v11));
    if ((v16 & 1) == 0 || *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * result) != v15)
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D25840F0(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  char v23;
  _QWORD *v24;
  char v26;
  int64_t v27;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_25;
    }
    v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v11 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      v4 = v11 + 1;
      if (v11 + 1 >= v27)
        return 1;
      v12 = *(_QWORD *)(v5 + 8 * v4);
      if (!v12)
      {
        v4 = v11 + 2;
        if (v11 + 2 >= v27)
          return 1;
        v12 = *(_QWORD *)(v5 + 8 * v4);
        if (!v12)
        {
          v4 = v11 + 3;
          if (v11 + 3 >= v27)
            return 1;
          v12 = *(_QWORD *)(v5 + 8 * v4);
          if (!v12)
            break;
        }
      }
    }
LABEL_24:
    v8 = (v12 - 1) & v12;
    v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_25:
    v14 = 16 * v10;
    v15 = (uint64_t *)(*(_QWORD *)(v3 + 48) + v14);
    v16 = *v15;
    v17 = v15[1];
    v18 = (uint64_t *)(*(_QWORD *)(v3 + 56) + v14);
    v20 = *v18;
    v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = sub_1D25891F4(v16, v17);
    v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    v24 = (_QWORD *)(*(_QWORD *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v26 = sub_1D26CE3D0();
      result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0)
        return 0;
    }
  }
  v13 = v11 + 4;
  if (v13 >= v27)
    return 1;
  v12 = *(_QWORD *)(v5 + 8 * v13);
  if (v12)
  {
    v4 = v13;
    goto LABEL_24;
  }
  while (1)
  {
    v4 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v4 >= v27)
      return 1;
    v12 = *(_QWORD *)(v5 + 8 * v4);
    ++v13;
    if (v12)
      goto LABEL_24;
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1D258430C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D2584514(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1D2584328(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D258467C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1D2584344(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2584E54(a1, a2, a3, (_QWORD *)*v3, &qword_1EFC82910, type metadata accessor for MetadataInlineView.IterableFallback);
  *v3 = result;
  return result;
}

uint64_t sub_1D2584370(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2584AF4(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1ED963998, &qword_1ED9632F8);
  *v3 = result;
  return result;
}

uint64_t sub_1D258439C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2584E54(a1, a2, a3, (_QWORD *)*v3, (uint64_t *)&unk_1ED962150, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
  *v3 = result;
  return result;
}

uint64_t sub_1D25843C8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D2584810(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1D25843E4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D258495C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1D2584400(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2584AF4(a1, a2, a3, (_QWORD *)*v3, &qword_1ED9639B0, &qword_1ED9633A0);
  *v3 = result;
  return result;
}

uint64_t sub_1D258442C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_1D2584CD4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_1D2584448(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2584E54(a1, a2, a3, (_QWORD *)*v3, &qword_1ED962160, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
  *v3 = result;
  return result;
}

uint64_t sub_1D2584474(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2584E54(a1, a2, a3, (_QWORD *)*v3, &qword_1EFC82908, MEMORY[0x1E0D877F8]);
  *v3 = result;
  return result;
}

uint64_t sub_1D25844A0(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2584E54(a1, a2, a3, (_QWORD *)*v3, &qword_1EFC82900, MEMORY[0x1E0D87650]);
  *v3 = result;
  return result;
}

uint64_t sub_1D25844CC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2584E54(a1, a2, a3, (_QWORD *)*v3, &qword_1EFC828F8, type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest);
  *v3 = result;
  return result;
}

uint64_t sub_1D25844F8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1D2585034(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_1D2584514(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0E8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D258467C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962178);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 5 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962080);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2584810(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D258495C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;
  _QWORD *v13;
  size_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9639C0);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 4;
  v13 = a4 + 4;
  v14 = 6 * v8;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v14])
      memmove(v10 + 4, a4 + 4, v14 * 8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963578);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2584AF4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2584CD4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9639C8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8])
      memmove(v12, v13, 40 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2584E54(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D2585034(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962168);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v12 = (unint64_t)(v10 + 4);
  v13 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8)
      memmove(v10 + 4, a4 + 4, 40 * v8);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25851D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CE190();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  return result;
}

uint64_t sub_1D2585238@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2580EDC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585264(unsigned __int8 *a1)
{
  return sub_1D2580F44(*a1);
}

uint64_t sub_1D2585288@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2580FB4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25852B4(unsigned __int8 *a1)
{
  return sub_1D258101C(*a1);
}

uint64_t sub_1D25852D8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2534940();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585304(unsigned __int8 *a1)
{
  return sub_1D258108C(*a1);
}

uint64_t sub_1D2585328@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25810FC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585354(unsigned __int8 *a1)
{
  return sub_1D2581164(*a1);
}

uint64_t sub_1D2585378@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581230();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25853A4(unsigned __int8 *a1)
{
  return sub_1D2581298(*a1);
}

uint64_t sub_1D25853C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581360();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25853F4(unsigned __int8 *a1)
{
  return sub_1D25813C8(*a1);
}

uint64_t sub_1D2585418@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581490();
  *a1 = result;
  return result;
}

uint64_t sub_1D2585440(uint64_t *a1)
{
  return sub_1D25814F8(*a1);
}

uint64_t sub_1D2585464@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581568();
  *a1 = result;
  return result;
}

uint64_t sub_1D258548C(uint64_t *a1)
{
  return sub_1D25815D0(*a1);
}

uint64_t sub_1D25854B0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581640();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25854DC(unsigned __int8 *a1)
{
  return sub_1D25816A8(*a1);
}

uint64_t sub_1D2585500@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581718();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D258552C(unsigned __int8 *a1)
{
  return sub_1D2581780(*a1);
}

uint64_t sub_1D2585550@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25817F0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D258557C(unsigned __int8 *a1)
{
  return sub_1D2581858(*a1);
}

uint64_t sub_1D25855A0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25818C8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25855CC(unsigned __int8 *a1)
{
  return sub_1D2581930(*a1);
}

uint64_t sub_1D25855F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25819A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D258561C(unsigned __int8 *a1)
{
  return sub_1D2581A08(*a1);
}

uint64_t sub_1D2585640@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581A78();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D258566C(unsigned __int8 *a1)
{
  return sub_1D2581AE0(*a1);
}

uint64_t sub_1D2585690@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581B50();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25856BC(unsigned __int8 *a1)
{
  return sub_1D2581BB8(*a1);
}

uint64_t sub_1D25856E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581C28();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D258570C(unsigned __int8 *a1)
{
  return sub_1D2581C90(*a1);
}

uint64_t sub_1D2585730@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581D00();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D258575C(unsigned __int8 *a1)
{
  return sub_1D2581D68(*a1);
}

uint64_t sub_1D2585780@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_33Tm(sub_1D2581DD8, a1);
}

uint64_t sub_1D258578C(uint64_t a1)
{
  return sub_1D2581E48(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1D25857BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581EC8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25857E8(unsigned __int8 *a1)
{
  return sub_1D2581F30(*a1);
}

uint64_t sub_1D258580C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2581FA0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585838(unsigned __int8 *a1)
{
  return sub_1D2582008(*a1);
}

uint64_t sub_1D258585C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582078();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585888(unsigned __int8 *a1)
{
  return sub_1D25820E0(*a1);
}

uint64_t sub_1D25858AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582150();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25858D8(unsigned __int8 *a1)
{
  return sub_1D25821B8(*a1);
}

uint64_t sub_1D25858FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582228();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585928(unsigned __int8 *a1)
{
  return sub_1D2582290(*a1);
}

uint64_t sub_1D258594C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582300();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585978(unsigned __int8 *a1)
{
  return sub_1D2582368(*a1);
}

uint64_t sub_1D258599C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25823D8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25859C8(unsigned __int8 *a1)
{
  return sub_1D2582440(*a1);
}

uint64_t sub_1D25859EC@<X0>(uint64_t a1@<X8>)
{
  return keypath_get_33Tm(sub_1D25824B0, a1);
}

uint64_t keypath_get_33Tm@<X0>(uint64_t (*a1)(void)@<X3>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = a1();
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1D2585A28(uint64_t a1)
{
  return sub_1D2582520(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t sub_1D2585A58@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25825A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585A84(unsigned __int8 *a1)
{
  return sub_1D2582608(*a1);
}

uint64_t sub_1D2585AA8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582678();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585AD4(unsigned __int8 *a1)
{
  return sub_1D25826E0(*a1);
}

uint64_t sub_1D2585AF8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582750();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585B24(unsigned __int8 *a1)
{
  return sub_1D25827B8(*a1);
}

uint64_t sub_1D2585B48@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582828();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585B74(unsigned __int8 *a1)
{
  return sub_1D2582890(*a1);
}

uint64_t sub_1D2585B98@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582900();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585BC4(unsigned __int8 *a1)
{
  return sub_1D2582968(*a1);
}

uint64_t sub_1D2585BE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25829D8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585C14(unsigned __int8 *a1)
{
  return sub_1D2582A40(*a1);
}

uint64_t sub_1D2585C38@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582AB0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2585C64(unsigned __int8 *a1)
{
  return sub_1D2582B18(*a1);
}

uint64_t sub_1D2585C88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2582B88();
  *a1 = result;
  return result;
}

uint64_t sub_1D2585CB0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_1D2582BF0(v0);
}

uint64_t method lookup function for Preferences()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Preferences.userWantsWidgetDataWhenPasscodeLocked.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of Preferences.$userWantsWidgetDataWhenPasscodeLocked.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of Preferences.userWantsLiveActivityDataWhenPasscodeLocked.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of Preferences.$userWantsLiveActivityDataWhenPasscodeLocked.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of Preferences.$widgetKitDeveloperModeEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of Preferences.remoteWidgetsEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of Preferences.remoteWidgetsEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of Preferences.remoteWidgetsEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of Preferences.$remoteWidgetsEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of Preferences.hasMigratedRemoteWidgetsEnabledState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of Preferences.hasMigratedRemoteWidgetsEnabledState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of Preferences.hasMigratedRemoteWidgetsEnabledState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of Preferences.$hasMigratedRemoteWidgetsEnabledState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of Preferences.effectiveRemoteWidgetsEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of Preferences.effectiveRemoteWidgetsEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of Preferences.effectiveRemoteWidgetsEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of Preferences.$effectiveRemoteWidgetsEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of Preferences.taskServiceMaximumPoolSize.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of Preferences.$taskServiceMaximumPoolSize.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of Preferences.taskServiceWatchdogSecondsTimeout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of Preferences.$taskServiceWatchdogSecondsTimeout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of Preferences.debugIsSnapshotting.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of Preferences.$debugIsSnapshotting.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of Preferences.debugAnimationsPaused.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of Preferences.$debugAnimationsPaused.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of Preferences.debugPlaceholderViews.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of Preferences.$debugPlaceholderViews.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of Preferences.debugAlwaysOnDisplay.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of Preferences.$debugAlwaysOnDisplay.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of Preferences.debugLabels.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of Preferences.$debugLabels.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of Preferences.debugLabelsVerbose.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of Preferences.$debugLabelsVerbose.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of Preferences.disableAnimations.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of Preferences.$disableAnimations.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of Preferences.disableLiveActivities.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of Preferences.$disableLiveActivities.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of Preferences.disableSnapshots.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of Preferences.$disableSnapshots.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t dispatch thunk of Preferences.snapshotExpirationOverride.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of Preferences.$snapshotExpirationOverride.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

uint64_t dispatch thunk of Preferences.disablePlaceholders.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

uint64_t dispatch thunk of Preferences.$disablePlaceholders.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t dispatch thunk of Preferences.disableTimelines.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t dispatch thunk of Preferences.$disableTimelines.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t dispatch thunk of Preferences.disableArchiveReaper.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 992))();
}

uint64_t dispatch thunk of Preferences.$disableArchiveReaper.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t dispatch thunk of Preferences.enableCAMLLayerSnapshots.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t dispatch thunk of Preferences.$enableCAMLLayerSnapshots.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1048))();
}

uint64_t dispatch thunk of Preferences.delayStartup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1056))();
}

uint64_t dispatch thunk of Preferences.$delayStartup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of Preferences.rendererDelayStartup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1088))();
}

uint64_t dispatch thunk of Preferences.$rendererDelayStartup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1112))();
}

uint64_t dispatch thunk of Preferences.simulateSystemDataMigration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1120))();
}

uint64_t dispatch thunk of Preferences.$simulateSystemDataMigration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1144))();
}

uint64_t dispatch thunk of Preferences.overrideDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1152))();
}

uint64_t dispatch thunk of Preferences.$overrideDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1176))();
}

uint64_t dispatch thunk of Preferences.showInternalWidgets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1184))();
}

uint64_t dispatch thunk of Preferences.$showInternalWidgets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1208))();
}

uint64_t dispatch thunk of Preferences.debugViewIdentity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1216))();
}

uint64_t dispatch thunk of Preferences.$debugViewIdentity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1240))();
}

uint64_t dispatch thunk of Preferences.debugMargins.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1248))();
}

uint64_t dispatch thunk of Preferences.$debugMargins.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1272))();
}

uint64_t dispatch thunk of Preferences.debugSceneMask.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1280))();
}

uint64_t dispatch thunk of Preferences.$debugSceneMask.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1304))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticTriggersLogCoreAnalytics.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1312))();
}

uint64_t dispatch thunk of Preferences.$widgetDiagnosticTriggersLogCoreAnalytics.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1336))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticTriggersLogFault.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1344))();
}

uint64_t dispatch thunk of Preferences.$widgetDiagnosticTriggersLogFault.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1368))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticTriggersTapToRadar.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1376))();
}

uint64_t dispatch thunk of Preferences.$widgetDiagnosticTriggersTapToRadar.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1400))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticsBootSession.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1408))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticsBootSession.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1416))();
}

uint64_t dispatch thunk of Preferences.widgetDiagnosticsBootSession.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1424))();
}

uint64_t dispatch thunk of Preferences.$widgetDiagnosticsBootSession.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1432))();
}

uint64_t dispatch thunk of Preferences.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1448))();
}

void sub_1D25860AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v16;
  _DWORD *v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  id v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  objc_class *v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  id v37;
  void *v38;
  unsigned int v39;
  uint64_t v40;
  objc_super v41;
  uint64_t v42;

  v8 = v7;
  *(_QWORD *)(v8 + 64) = 0;
  *(_QWORD *)(v8 + 96) = 0;
  type metadata accessor for UnfairLock();
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = 0;
  v16 = swift_allocObject();
  v17 = (_DWORD *)swift_slowAlloc();
  *v17 = 0;
  *(_QWORD *)(v16 + 16) = v17;
  *(_QWORD *)(v8 + 104) = v16;
  *(_QWORD *)(v8 + 112) = 0;
  if (!a2)
    goto LABEL_11;
  v40 = a3;
  v18 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v19 = objc_msgSend(v18, sel_bundleIdentifier);

  if (!v19)
    goto LABEL_8;
  v39 = a7;
  a7 = a6;
  a6 = a4;
  v20 = sub_1D26CD938();
  v22 = v21;

  if (v20 == a1 && v22 == a2)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    a4 = a6;
    a6 = a7;
    LOBYTE(a7) = v39;
    a3 = v40;
    goto LABEL_11;
  }
  v24 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  a4 = a6;
  a6 = a7;
  a7 = v39;
  a3 = v40;
  if ((v24 & 1) == 0)
  {
LABEL_8:
    v25 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
    swift_bridgeObjectRetain();
    v26 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    v27 = objc_msgSend(v25, sel_initWithSuiteName_, v26);

    a3 = v40;
    if (v27)
      goto LABEL_12;
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  v27 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
LABEL_12:
  *(_QWORD *)(v8 + 16) = v27;
  *(_QWORD *)(v8 + 24) = a1;
  *(_QWORD *)(v8 + 32) = a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v8 + 56) = a5;
  *(_QWORD *)(v8 + 40) = a3;
  *(_QWORD *)(v8 + 48) = a4;
  *(_BYTE *)(v8 + 72) = a7 & 1;
  if (a6)
  {
    if ((a7 & 1) != 0)
    {
      swift_beginAccess();
      *(_QWORD *)(v8 + 56) = a6;
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_beginAccess();
      *(_QWORD *)(v8 + 64) = a5;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96F0C0);
  swift_allocObject();
  v28 = sub_1D26CC150();
  *(_QWORD *)(v8 + 80) = v28;
  v42 = v28;
  sub_1D2536488(&qword_1ED96F0B8, &qword_1ED96F0C0, MEMORY[0x1E0C95F48]);
  v29 = sub_1D26CC204();
  v30 = *(void **)(v8 + 96);
  *(_QWORD *)(v8 + 88) = v29;
  *(_QWORD *)(v8 + 96) = 0;

  v31 = (objc_class *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96F250);
  v32 = objc_allocWithZone(v31);
  swift_weakInit();
  swift_weakAssign();
  v41.receiver = v32;
  v41.super_class = v31;
  v33 = objc_msgSendSuper2(&v41, sel_init);
  v34 = *(void **)(v8 + 96);
  *(_QWORD *)(v8 + 96) = v33;

  v35 = *(void **)(v8 + 96);
  if (v35)
  {
    v36 = *(id *)(v8 + 16);
    v37 = v35;
    swift_bridgeObjectRetain();
    v38 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
    objc_msgSend(v36, sel_addObserver_forKeyPath_options_context_, v37, v38, 0, 0);

  }
  else
  {
    __break(1u);
  }
}

void CHSConfiguredWidgetDescriptor.powerlogViewIdentity.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  id v22;
  void *v23;
  uint64_t v24;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_container);
  if (v4)
  {
    v5 = v4;
    if (objc_msgSend(v1, sel_isSuggestion))
    {
      v6 = objc_msgSend(v5, sel_uniqueIdentifier);
      v7 = sub_1D26CD938();
      v9 = v8;

    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v16 = objc_msgSend(v2, sel_widget);
    v17 = objc_msgSend(v2, sel_uniqueIdentifier);
    v18 = sub_1D26CD938();
    v20 = v19;

    v21 = objc_msgSend(v5, sel_isStack);
    v22 = objc_msgSend(v2, sel_container);
    if (v22)
    {
      v23 = v22;
      if (objc_msgSend(v22, sel_location) == (id)1)
      {
        v24 = (uint64_t)objc_msgSend(v23, sel_page);

        v15 = 0;
      }
      else
      {
        objc_msgSend(v23, sel_location);

        v24 = 0;
        v15 = 0;
        switch(v21)
        {
          case 0u:
            goto LABEL_11;
          case 1u:
            break;
          case 2u:
            v24 = 1;
            goto LABEL_12;
          case 3u:
            v15 = 1;
            v24 = 2;
            break;
          case 4u:
            v15 = 1;
            v24 = 3;
            break;
          case 5u:
            v15 = 1;
            v24 = 4;
            break;
          case 6u:
            v15 = 1;
            v24 = 5;
            break;
          case 7u:
            v15 = 1;
            v24 = 6;
            break;
          case 8u:
            v15 = 1;
            v24 = 7;
            break;
          default:
            v24 = 0;
            v15 = 1;
            break;
        }
      }
    }
    else
    {

LABEL_11:
      v24 = 0;
LABEL_12:
      v15 = 1;
    }
    *(_QWORD *)a1 = v16;
    *(_QWORD *)(a1 + 8) = v18;
    *(_QWORD *)(a1 + 16) = v20;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v9;
    *(_BYTE *)(a1 + 40) = v21;
    *(_QWORD *)(a1 + 48) = v24;
  }
  else
  {
    v10 = objc_msgSend(v1, sel_widget);
    v11 = objc_msgSend(v2, sel_uniqueIdentifier);
    v12 = sub_1D26CD938();
    v14 = v13;

    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 48) = 0;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 16) = v14;
    *(_BYTE *)(a1 + 40) = 0;
    v15 = 1;
  }
  *(_BYTE *)(a1 + 56) = v15;
}

void CHSConfiguredWidgetDescriptor.powerlogUpdateIdentity.getter(uint64_t a1@<X8>)
{
  void *v1;
  void *v2;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  id v24;

  v2 = v1;
  v4 = objc_msgSend(v1, sel_container);
  if (v4)
  {
    v5 = v4;
    if (objc_msgSend(v1, sel_isSuggestion))
    {
      v6 = objc_msgSend(v5, sel_uniqueIdentifier);
      v7 = sub_1D26CD938();
      v9 = v8;

    }
    else
    {
      v7 = 0;
      v9 = 0;
    }
    v16 = objc_msgSend(v2, sel_widget);
    v17 = objc_msgSend(v2, sel_uniqueIdentifier);
    v18 = sub_1D26CD938();
    v20 = v19;

    v21 = objc_msgSend(v2, sel_container);
    if (v21)
    {
      v22 = v21;
      if (objc_msgSend(v21, sel_location) == (id)1)
      {
        v23 = (uint64_t)objc_msgSend(v22, sel_page);

        v15 = 0;
      }
      else
      {
        v24 = objc_msgSend(v22, sel_location);

        v23 = 0;
        v15 = 0;
        switch((unint64_t)v24)
        {
          case 1uLL:
            break;
          case 2uLL:
            v23 = 1;
            goto LABEL_11;
          case 3uLL:
            v15 = 1;
            v23 = 2;
            break;
          case 4uLL:
            v15 = 1;
            v23 = 3;
            break;
          case 5uLL:
            v15 = 1;
            v23 = 4;
            break;
          case 6uLL:
            v15 = 1;
            v23 = 5;
            break;
          case 7uLL:
            v15 = 1;
            v23 = 6;
            break;
          case 8uLL:
            v15 = 1;
            v23 = 7;
            break;
          default:
            goto LABEL_10;
        }
      }
    }
    else
    {

LABEL_10:
      v23 = 0;
LABEL_11:
      v15 = 1;
    }
    *(_QWORD *)a1 = v16;
    *(_QWORD *)(a1 + 8) = v18;
    *(_QWORD *)(a1 + 16) = v20;
    *(_QWORD *)(a1 + 24) = v7;
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v23;
  }
  else
  {
    v10 = objc_msgSend(v1, sel_widget);
    v11 = objc_msgSend(v2, sel_uniqueIdentifier);
    v12 = sub_1D26CD938();
    v14 = v13;

    *(_QWORD *)a1 = v10;
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = v14;
    *(_QWORD *)(a1 + 24) = 0;
    *(_QWORD *)(a1 + 32) = 0;
    *(_QWORD *)(a1 + 40) = 0;
    v15 = 1;
  }
  *(_BYTE *)(a1 + 48) = v15;
}

uint64_t CHSConfiguredWidgetDescriptor.duetWidgetViewIdentity.getter@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  v4 = sub_1D258B70C(v3);
  v6 = v5;
  swift_bridgeObjectRetain();
  v7 = objc_msgSend(v3, sel_uniqueIdentifier);
  sub_1D26CD938();

  sub_1D257293C();
  v10 = sub_1D26CDF8C();
  v11 = v8;
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease_n();
  *a1 = v4;
  a1[1] = v6;
  a1[2] = (uint64_t)v3;
  a1[3] = v10;
  a1[4] = v11;
  return result;
}

void CHSControlConfigurationItem.powerlogViewIdentity(isStateBased:)(char a1@<W0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  char v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v2;
  v6 = 0;
  v7 = 0;
  switch((unint64_t)objc_msgSend(v3, sel_location))
  {
    case 1uLL:
      break;
    case 2uLL:
      v6 = 1;
      goto LABEL_4;
    case 3uLL:
      v7 = 1;
      v6 = 2;
      break;
    case 4uLL:
      v7 = 1;
      v6 = 3;
      break;
    case 5uLL:
      v7 = 1;
      v6 = 4;
      break;
    case 6uLL:
      v7 = 1;
      v6 = 5;
      break;
    case 7uLL:
      v7 = 1;
      v6 = 6;
      break;
    case 8uLL:
      v7 = 1;
      v6 = 7;
      break;
    default:
      v6 = 0;
LABEL_4:
      v7 = 1;
      break;
  }
  v8 = objc_msgSend(v3, sel_controlIdentity);
  v9 = objc_msgSend(v3, sel_uniqueIdentifier);
  v10 = sub_1D26CD938();
  v12 = v11;

  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v12;
  *(_QWORD *)(a2 + 24) = v6;
  *(_BYTE *)(a2 + 32) = v7;
  *(_BYTE *)(a2 + 33) = a1 & 1;
}

void CHSControlConfigurationItem.powerlogUpdateIdentity.getter(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v3;
  char v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = 0;
  v4 = 0;
  switch((unint64_t)objc_msgSend(v1, sel_location))
  {
    case 1uLL:
      break;
    case 2uLL:
      v3 = 1;
      goto LABEL_4;
    case 3uLL:
      v4 = 1;
      v3 = 2;
      break;
    case 4uLL:
      v4 = 1;
      v3 = 3;
      break;
    case 5uLL:
      v4 = 1;
      v3 = 4;
      break;
    case 6uLL:
      v4 = 1;
      v3 = 5;
      break;
    case 7uLL:
      v4 = 1;
      v3 = 6;
      break;
    case 8uLL:
      v4 = 1;
      v3 = 7;
      break;
    default:
      v3 = 0;
LABEL_4:
      v4 = 1;
      break;
  }
  v5 = objc_msgSend(v1, sel_controlIdentity);
  v6 = objc_msgSend(v1, sel_uniqueIdentifier);
  v7 = sub_1D26CD938();
  v9 = v8;

  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v4;
}

uint64_t RemoteActivityCacheURLProvider.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t RemoteActivityCacheURLProvider.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D2586D60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962150);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D26CB880() - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D26D1280;
  sub_1D2586DE0(a1, v4 + v3);
  return v4;
}

uint64_t sub_1D2586DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963178);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for ActivityVariantKey(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v25[0] = (uint64_t)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED963058);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActivityKey(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25[1] = a2;
  sub_1D26CB814();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  sub_1D2537078(a1 + *(int *)(v17 + 68), (uint64_t)v12, qword_1ED963058);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_1D253703C((uint64_t)v12, qword_1ED963058);
  sub_1D2539ADC((uint64_t)v12, (uint64_t)v16, type metadata accessor for ActivityKey);
  sub_1D2537078(a1 + *(int *)(v17 + 72), (uint64_t)v6, &qword_1ED963178);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D25340E4((uint64_t)v16, type metadata accessor for ActivityKey);
    return sub_1D253703C((uint64_t)v6, &qword_1ED963178);
  }
  else
  {
    v19 = v25[0];
    sub_1D2539ADC((uint64_t)v6, v25[0], type metadata accessor for ActivityVariantKey);
    v20 = &v16[*(int *)(v13 + 24)];
    v21 = *((_QWORD *)v20 + 1);
    v28 = *(_QWORD *)v20;
    v29 = v21;
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    v26 = sub_1D26CD650();
    v27 = v22;
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v23 = v26;
    v24 = v27;
    sub_1D26CD3EC();
    v26 = v23;
    v27 = v24;
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CB7E4();
    swift_bridgeObjectRelease();
    sub_1D26CB7FC();
    sub_1D25340E4(v19, type metadata accessor for ActivityVariantKey);
    return sub_1D25340E4((uint64_t)v16, type metadata accessor for ActivityKey);
  }
}

uint64_t RemoteActivityCacheURLProvider.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t RemoteActivityCacheURLProvider.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1D2587134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2586DE0(a1, a2);
}

uint64_t sub_1D2587148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  _QWORD v19[3];
  id v20;
  uint64_t v21;
  uint64_t v22;

  v22 = *MEMORY[0x1E0C80C00];
  v2 = type metadata accessor for WidgetCacheKey();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0DEE9D8];
  v21 = MEMORY[0x1E0DEE9D8];
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v9 = (void *)objc_opt_self();
    v10 = *(_QWORD *)(v3 + 72);
    v19[1] = a1;
    swift_bridgeObjectRetain();
    do
    {
      sub_1D258738C(v8, (uint64_t)v5);
      v14 = objc_msgSend(v9, sel_defaultManager);
      v15 = (void *)sub_1D26CB7D8();
      v20 = 0;
      v16 = objc_msgSend(v14, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v15, 0, 0, &v20);

      v17 = v20;
      if (v16)
      {
        sub_1D26CB880();
        v13 = sub_1D26CDAF4();
        v18 = v17;

      }
      else
      {
        v11 = v20;
        v12 = (void *)sub_1D26CB76C();

        swift_willThrow();
        v13 = MEMORY[0x1E0DEE9D8];
      }
      sub_1D25340E4((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WidgetCacheKey);
      sub_1D25F68E4(v13);
      v8 += v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    return v21;
  }
  return result;
}

uint64_t type metadata accessor for RemoteActivityCacheURLProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for RemoteActivityCacheURLProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteActivityCacheURLProvider.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of RemoteActivityCacheURLProvider.urls(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of RemoteActivityCacheURLProvider.url(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of RemoteActivityCacheURLProvider.candidateURLs(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t sub_1D258738C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetCacheKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_1D25873D0()
{
  return 0.0;
}

uint64_t sub_1D25873D8()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D258741C(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D2587464())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void *sub_1D25874F0()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1D2587598(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

uint64_t (*sub_1D25875E8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void sub_1D258762C(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

  sub_1D258769C();
}

void sub_1D258769C()
{
  uint64_t v0;
  void *v1;
  uint64_t *v2;
  uint64_t v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView);
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  v3 = *v2;
  if (v3)
  {
    v4 = objc_allocWithZone(MEMORY[0x1E0D01958]);
    v5 = v1;
    v6 = objc_msgSend(v4, sel_initWithEffectType_backgroundType_color_, 1, 0, v3);
  }
  else
  {
    v7 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
    v8 = v1;
    v9 = objc_msgSend(v7, sel_initWithWhite_alpha_, 1.0, 0.5);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01958]), sel_initWithEffectType_backgroundType_color_, 0, 0, v9);

  }
  objc_msgSend(v1, sel_setConfiguration_, v6);

}

void *sub_1D25877AC()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1D25877F8(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  sub_1D258769C();
}

void (*sub_1D2587860(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1D25878A8;
}

void sub_1D25878A8(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1D258769C();
}

char *sub_1D25878D8(uint64_t a1, char a2, char a3, char a4)
{
  _BYTE *v4;
  char v8;
  char *v9;
  id v10;

  v4[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor] = 0;
  v8 = a2 & 1;
  v4[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize] = 1;
  sub_1D26CD1F4();
  sub_1D25369B0(&qword_1EFC82940, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCB8], MEMORY[0x1E0CEFCB0]);
  v9 = v4;
  sub_1D26CC9F0();
  sub_1D26CD638();
  sub_1D25369B0(&qword_1EFC82948, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF08F0], MEMORY[0x1E0CF08E8]);
  sub_1D26CC9F0();
  sub_1D26CD6A4();
  sub_1D25369B0(&qword_1EFC82950, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0A10], MEMORY[0x1E0CF0A08]);
  sub_1D26CC9F0();
  sub_1D26CD140();
  sub_1D25369B0(&qword_1EFC82958, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFB50], MEMORY[0x1E0CEFB48]);
  sub_1D26CC3F0();
  sub_1D26CD32C();
  sub_1D25369B0(&qword_1EFC82960, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFE98], MEMORY[0x1E0CEFE90]);
  sub_1D26CC9F0();
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01960]), sel_init);
  *(_QWORD *)&v9[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView] = v10;

  return sub_1D259BB24(a1, v8, a3, a4);
}

id PreviewHostingViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void PreviewHostingViewController.init(coder:)()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor] = 0;
  v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize] = 1;

  sub_1D26CE1D8();
  __break(1u);
}

uint64_t sub_1D2587C50()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize);
  swift_beginAccess();
  return *v1;
}

void sub_1D2587CF8(char a1)
{
  uint64_t v1;
  _BYTE *v3;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize);
  swift_beginAccess();
  *v3 = a1;
  sub_1D2587DC4();
}

void (*sub_1D2587D4C(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1D2587D94;
}

void sub_1D2587D94(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1D2587DC4();
}

void sub_1D2587DC4()
{
  _QWORD *v0;
  unsigned __int8 *v1;
  uint64_t v2;
  double v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  void *v10;

  v1 = (unsigned __int8 *)v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize;
  v2 = swift_beginAccess();
  v3 = 0.0;
  if (*v1 == 1)
    v3 = (*(double (**)(uint64_t))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))(v2);
  v4 = objc_msgSend(v0, sel_view);
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_layer);

  objc_msgSend(v6, sel_setMasksToBounds_, *v1);
  v7 = objc_msgSend(v0, sel_view);
  if (!v7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v8 = v7;
  objc_msgSend(v7, sel__setContinuousCornerRadius_, v3);

  v9 = objc_msgSend(v0, sel_view);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_setNeedsLayout);

    return;
  }
LABEL_9:
  __break(1u);
}

void sub_1D2587F08()
{
  uint64_t v0;

}

id PreviewHostingViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PreviewHostingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for PreviewHostingViewController()
{
  return objc_opt_self();
}

uint64_t sub_1D2587F94@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming, a2);
}

uint64_t sub_1D2587FA0(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_requiresStrictViewFraming);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1D2587FEC@<X0>(_QWORD **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0x188))();
  *a2 = result;
  return result;
}

uint64_t sub_1D258802C(id *a1, _QWORD **a2)
{
  id v2;
  uint64_t (*v3)(id);
  id v4;

  v2 = *a1;
  v3 = *(uint64_t (**)(id))((*MEMORY[0x1E0DEEDD8] & **a2) + 0x190);
  v4 = *a1;
  return v3(v2);
}

id sub_1D2588078@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1D25880CC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _BYTE *a3@<X8>)
{
  _BYTE *v4;
  uint64_t result;

  v4 = (_BYTE *)(*a1 + *a2);
  result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

void sub_1D2588124(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize);
  swift_beginAccess();
  *v3 = v2;
  sub_1D2587DC4();
}

uint64_t method lookup function for PreviewHostingViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PreviewHostingViewController.cornerRadius.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x168))();
}

uint64_t dispatch thunk of PreviewHostingViewController.requiresStrictViewFraming.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x170))();
}

uint64_t dispatch thunk of PreviewHostingViewController.requiresStrictViewFraming.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x178))();
}

uint64_t dispatch thunk of PreviewHostingViewController.requiresStrictViewFraming.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x180))();
}

uint64_t dispatch thunk of PreviewHostingViewController.inlineTextParameters.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x188))();
}

uint64_t dispatch thunk of PreviewHostingViewController.inlineTextParameters.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x190))();
}

uint64_t dispatch thunk of PreviewHostingViewController.inlineTextParameters.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x198))();
}

uint64_t dispatch thunk of PreviewHostingViewController.vibrancyColor.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C0))();
}

uint64_t dispatch thunk of PreviewHostingViewController.vibrancyColor.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1C8))();
}

uint64_t dispatch thunk of PreviewHostingViewController.vibrancyColor.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of PreviewHostingViewController.metricsDefineSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

uint64_t dispatch thunk of PreviewHostingViewController.metricsDefineSize.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of PreviewHostingViewController.metricsDefineSize.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

double WidgetContentRenderStatistics.totalRenderTime.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double WidgetContentRenderStatistics.totalSubmitTime.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t WidgetContentRenderStatistics.totalFramesRendered.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t WidgetContentRenderStatistics.totalFramesSubmitted.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t _UIHostingViewable.rbLayer.getter()
{
  uint64_t result;

  result = sub_1D26CC834();
  if (result)
  {
    objc_opt_self();
    result = swift_dynamicCastObjCClass();
    if (!result)
    {
      swift_unknownObjectRelease();
      return 0;
    }
  }
  return result;
}

Swift::Void __swiftcall _UIHostingViewable.setNeedsSynchronousUpdate()()
{
  void *v0;
  id v1;

  v0 = (void *)_UIHostingViewable.rbLayer.getter();
  if (v0)
  {
    v1 = v0;
    objc_msgSend(v0, sel_setNeedsSynchronousUpdate_, 1);

  }
}

Swift::Void __swiftcall _UIHostingViewable.setForegroundUpdateInterval()()
{
  sub_1D25883F4();
}

uint64_t sub_1D25883F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v0 = sub_1D26CC9E4();
  v1 = *(_QWORD *)(v0 - 8);
  v2 = MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  sub_1D26CC84C();
  sub_1D26CC978();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  sub_1D26CC858();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

Swift::Void __swiftcall _UIHostingViewable.setBackgroundUpdateInterval()()
{
  sub_1D25883F4();
}

Swift::Void __swiftcall _UIHostingViewable.configureRenderBox(async:isOpaque:minAnimationInterval:)(Swift::Bool async, Swift::Bool isOpaque, Swift::Double minAnimationInterval)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  BOOL v26;
  char v27;
  uint64_t v28;
  os_log_type_t v29;
  uint8_t *v30;
  char *v31;
  uint64_t v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  char v36;
  id v37;
  void *v38;
  id v39;
  id v40;
  void (*v41)(_QWORD *, _QWORD);
  void *v42;
  void *v43;
  id v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  void *v51;
  _QWORD v52[2];
  id v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  _BOOL4 v58;
  NSObject *v59;
  id v60;
  _QWORD aBlock[3];
  ValueMetadata *v62;
  uint64_t (*v63)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v64;
  _OWORD v65[3];

  v5 = v3;
  v58 = async;
  LODWORD(v59) = isOpaque;
  v6 = sub_1D26CC960();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D26CC9E4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v54 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v52 - v14;
  v16 = sub_1D26CC9CC();
  v56 = *(_QWORD *)(v16 - 8);
  v57 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v55 = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v52 - v19;
  v53 = (id)objc_opt_self();
  if (objc_msgSend(v53, sel_isSupported))
  {
    v52[0] = v4;
    v52[1] = v5;
    sub_1D26CC84C();
    sub_1D26CC9D8();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
    if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x1E0CDC1F8])
    {
      (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
      v21 = swift_projectBox();
      v23 = v56;
      v22 = v57;
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v20, v21, v57);
      swift_release();
      v24 = sub_1D26CC990();
      v25 = sub_1D26CC9A8();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v20, v22);
      v26 = v58;
      v27 = (char)v59;
      if (((v24 ^ v58) & 1) != 0 || ((v25 ^ v59) & 1) != 0)
        goto LABEL_13;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      v26 = v58;
      v27 = (char)v59;
      if (v58 || (v59 & 1) != 0)
      {
LABEL_13:
        v31 = v55;
        sub_1D26CC9C0();
        sub_1D26CC99C();
        sub_1D26CC9B4();
        if (qword_1ED96C188 != -1)
          swift_once();
        v32 = sub_1D26CC09C();
        __swift_project_value_buffer(v32, (uint64_t)qword_1ED977F68);
        v33 = sub_1D26CC084();
        v34 = sub_1D26CDCE0();
        if (os_log_type_enabled(v33, v34))
        {
          v35 = swift_slowAlloc();
          *(_DWORD *)v35 = 67109376;
          LODWORD(aBlock[0]) = v26;
          sub_1D26CDF50();
          *(_WORD *)(v35 + 8) = 1024;
          LODWORD(aBlock[0]) = v27 & 1;
          sub_1D26CDF50();
          _os_log_impl(&dword_1D2531000, v33, v34, "RenderBox hosting configured - async? %{BOOL}d, opaque: %{BOOL}d", (uint8_t *)v35, 0xEu);
          MEMORY[0x1D823A5E0](v35, -1, -1);
        }

        objc_msgSend(v53, sel_setAllowsRenderingInBackground_, 1);
        v62 = &type metadata for FeatureFlags.SpringBoard;
        v63 = (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1D258AD80();
        LOBYTE(aBlock[0]) = 0;
        v36 = sub_1D26CBB98();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
        v37 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
        v38 = (void *)sub_1D26CD914();
        v39 = objc_msgSend(v37, sel_objectForKey_, v38);

        if (v39)
        {
          sub_1D26CDFA4();
          swift_unknownObjectRelease();
        }
        else
        {
          memset(v65, 0, 32);
        }
        sub_1D255DF24((uint64_t)v65, (uint64_t)aBlock);
        if (v62)
        {
          sub_1D2539514(0, (unint64_t *)&qword_1ED96C070);
          if ((swift_dynamicCast() & 1) != 0)
          {
            v40 = v60;
            objc_msgSend(v60, sel_intValue);

LABEL_26:
            LOBYTE(aBlock[0]) = 0;
            sub_1D26CC984();
LABEL_27:
            sub_1D26CC96C();
            sub_1D26CC858();
            v41 = (void (*)(_QWORD *, _QWORD))sub_1D26CC840();
            sub_1D26CC978();
            v41(aBlock, 0);
            if (sub_1D26CC834())
            {
              objc_opt_self();
              v42 = (void *)swift_dynamicCastObjCClass();
              if (v42)
              {
                v43 = v42;
                objc_msgSend(v42, sel_setNeedsSynchronousUpdate_, 1);
                objc_msgSend(v43, sel_setNeedsDisplay);
                v44 = objc_msgSend(v43, sel_statisticsHandler);
                if (v44)
                {
                  _Block_release(v44);
                  (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v57);
                  swift_unknownObjectRelease();
                  return;
                }
                v48 = sub_1D26CC084();
                v49 = sub_1D26CDCE0();
                if (os_log_type_enabled(v48, v49))
                {
                  v50 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)v50 = 0;
                  _os_log_impl(&dword_1D2531000, v48, v49, "Attaching layer statistics handler", v50, 2u);
                  MEMORY[0x1D823A5E0](v50, -1, -1);
                }

                objc_msgSend(v43, sel_resetStatistics_alpha_, 11, 0.0);
                v63 = CGSizeMake;
                v64 = 0;
                aBlock[0] = MEMORY[0x1E0C809B0];
                aBlock[1] = 1107296256;
                aBlock[2] = sub_1D2588D50;
                v62 = (ValueMetadata *)&block_descriptor_3;
                v51 = _Block_copy(aBlock);
                objc_msgSend(v43, sel_setStatisticsHandler_, v51);
                _Block_release(v51);
                swift_unknownObjectRelease();
                goto LABEL_35;
              }
              swift_unknownObjectRelease();
            }
            v45 = sub_1D26CC084();
            v46 = sub_1D26CDD04();
            if (os_log_type_enabled(v45, v46))
            {
              v47 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)v47 = 0;
              _os_log_impl(&dword_1D2531000, v45, v46, "RenderBox unable to attach layer statistics", v47, 2u);
              MEMORY[0x1D823A5E0](v47, -1, -1);
            }

LABEL_35:
            (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v57);
            return;
          }
        }
        else
        {
          sub_1D253703C((uint64_t)aBlock, &qword_1ED96FCE0);
        }
        if ((v36 & 1) == 0)
          goto LABEL_27;
        goto LABEL_26;
      }
    }
  }
  else
  {
    if (qword_1ED96C188 != -1)
      swift_once();
    v28 = sub_1D26CC09C();
    __swift_project_value_buffer(v28, (uint64_t)qword_1ED977F68);
    v59 = sub_1D26CC084();
    v29 = sub_1D26CDD04();
    if (os_log_type_enabled(v59, v29))
    {
      v30 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v30 = 67240192;
      LODWORD(aBlock[0]) = 0;
      sub_1D26CDF50();
      _os_log_impl(&dword_1D2531000, v59, v29, "RenderBox hosting disabled (isSupported=%{BOOL,public}d)", v30, 8u);
      MEMORY[0x1D823A5E0](v30, -1, -1);
    }

  }
}

uint64_t sub_1D2588D50(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

void __swiftcall _UIHostingViewable.consumeRenderStatistics()(ChronoKit::WidgetContentRenderStatistics_optional *__return_ptr retstr)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  char v23;
  Swift::Double v24;
  __int128 v25;
  __int128 v26;

  if (!sub_1D26CC834())
    goto LABEL_37;
  objc_opt_self();
  v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
    goto LABEL_36;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_statistics);
  type metadata accessor for RBDrawableStatisticsKey(0);
  sub_1D25369B0(&qword_1ED96C058, (uint64_t (*)(uint64_t))type metadata accessor for RBDrawableStatisticsKey, (uint64_t)&unk_1D26CFC10);
  v5 = sub_1D26CD7F4();

  if (!*(_QWORD *)(v5 + 16))
  {
    v25 = 0u;
    v26 = 0u;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v6 = (id)*MEMORY[0x1E0D87488];
  v7 = sub_1D2589504((uint64_t)v6);
  if ((v8 & 1) == 0)
  {
    v25 = 0u;
    v26 = 0u;

    goto LABEL_12;
  }
  sub_1D2537950(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v25);

  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v26 + 1))
  {
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_36;
    v9 = objc_msgSend(v3, sel_statistics);
    v10 = sub_1D26CD7F4();

    if (*(_QWORD *)(v10 + 16))
    {
      v11 = (id)*MEMORY[0x1E0D87490];
      v12 = sub_1D2589504((uint64_t)v11);
      if ((v13 & 1) != 0)
      {
        sub_1D2537950(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)&v25);
      }
      else
      {
        v25 = 0u;
        v26 = 0u;
      }

    }
    else
    {
      v25 = 0u;
      v26 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v26 + 1))
      goto LABEL_13;
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_36;
    v14 = objc_msgSend(v3, sel_statistics);
    v15 = sub_1D26CD7F4();

    if (*(_QWORD *)(v15 + 16))
    {
      v16 = (id)*MEMORY[0x1E0D87480];
      v17 = sub_1D2589504((uint64_t)v16);
      if ((v18 & 1) != 0)
      {
        sub_1D2537950(*(_QWORD *)(v15 + 56) + 32 * v17, (uint64_t)&v25);
      }
      else
      {
        v25 = 0u;
        v26 = 0u;
      }

    }
    else
    {
      v25 = 0u;
      v26 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v26 + 1))
      goto LABEL_13;
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_36:
      swift_unknownObjectRelease();
      goto LABEL_37;
    }
    v19 = objc_msgSend(v3, sel_statistics);
    v20 = sub_1D26CD7F4();

    if (*(_QWORD *)(v20 + 16))
    {
      v21 = (id)*MEMORY[0x1E0D87478];
      v22 = sub_1D2589504((uint64_t)v21);
      if ((v23 & 1) != 0)
      {
        sub_1D2537950(*(_QWORD *)(v20 + 56) + 32 * v22, (uint64_t)&v25);
      }
      else
      {
        v25 = 0u;
        v26 = 0u;
      }

    }
    else
    {
      v25 = 0u;
      v26 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v26 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        objc_msgSend(v3, sel_resetStatistics_alpha_, 11, 0.0);
        swift_unknownObjectRelease();
        retstr->value.totalRenderTime = v24;
        retstr->value.totalSubmitTime = v24;
        *(Swift::Double *)&retstr->value.totalFramesRendered = v24;
        *(Swift::Double *)&retstr->value.totalFramesSubmitted = v24;
        retstr->is_nil = 0;
        return;
      }
      goto LABEL_36;
    }
  }
LABEL_13:
  swift_unknownObjectRelease();
  sub_1D253703C((uint64_t)&v25, &qword_1ED96FCE0);
LABEL_37:
  *(_OWORD *)&retstr->value.totalRenderTime = 0u;
  *(_OWORD *)&retstr->value.totalFramesRendered = 0u;
  retstr->is_nil = 1;
}

unint64_t sub_1D2589198(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_1D26CE460();
  sub_1D26CE46C();
  v2 = sub_1D26CE49C();
  return sub_1D2589B54(v1, v2);
}

unint64_t sub_1D25891F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1D26CE460();
  sub_1D26CD9D4();
  v4 = sub_1D26CE49C();
  return sub_1D2589C10(a1, a2, v4);
}

unint64_t sub_1D2589258(uint64_t a1)
{
  uint64_t v2;

  sub_1D26CE460();
  type metadata accessor for CFString(0);
  sub_1D25369B0((unint64_t *)&unk_1ED96BFA0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1D26D00F8);
  sub_1D26CBDF0();
  v2 = sub_1D26CE49C();
  return sub_1D2589CF0(a1, v2);
}

unint64_t sub_1D25892E4(uint64_t a1)
{
  uint64_t v2;

  sub_1D26CD938();
  sub_1D26CE460();
  sub_1D26CD9D4();
  v2 = sub_1D26CE49C();
  swift_bridgeObjectRelease();
  return sub_1D2589E30(a1, v2);
}

unint64_t sub_1D2589364(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  sub_1D26CE460();
  type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  sub_1D26CD1DC();
  sub_1D25369B0(&qword_1ED96D4F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC70]);
  sub_1D26CD8D8();
  v2 = a1[3];
  v3 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v2);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v3 + 16))(&v6, v2, v3);
  sub_1D26CE46C();
  v4 = sub_1D26CE49C();
  return sub_1D2589FA4(a1, v4);
}

unint64_t sub_1D2589478(uint64_t a1)
{
  uint64_t v2;

  sub_1D26CE460();
  ReloadConfiguration.ReloadReason.hash(into:)();
  v2 = sub_1D26CE49C();
  return sub_1D258A25C(a1, v2);
}

unint64_t sub_1D25894D4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D26CE04C();
  return sub_1D258A2FC(a1, v2);
}

unint64_t sub_1D2589504(uint64_t a1)
{
  uint64_t v2;

  sub_1D26CD938();
  sub_1D26CE460();
  sub_1D26CD9D4();
  v2 = sub_1D26CE49C();
  swift_bridgeObjectRelease();
  return sub_1D2589E30(a1, v2);
}

unint64_t sub_1D2589590(uint64_t a1)
{
  uint64_t v2;

  sub_1D26CE460();
  PowerlogWidgetViewIdentity.hash(into:)();
  v2 = sub_1D26CE49C();
  return sub_1D258A3C0(a1, v2);
}

unint64_t sub_1D2589600(uint64_t a1)
{
  char v2;
  id v3;
  uint64_t v4;

  sub_1D26CE460();
  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(id *)a1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    sub_1D26CE46C();
  sub_1D26CE46C();
  sub_1D26CE478();
  v4 = sub_1D26CE49C();
  return sub_1D258A640(a1, v4);
}

unint64_t sub_1D25896D8(id *a1)
{
  id v2;
  uint64_t v3;

  sub_1D26CE460();
  v2 = *a1;
  sub_1D26CDED8();

  type metadata accessor for ActivityKey(0);
  sub_1D26CBAF0();
  sub_1D25369B0(&qword_1ED962FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F840]);
  sub_1D26CD8D8();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  sub_1D26CD65C();
  sub_1D25369B0(&qword_1ED963218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0938]);
  sub_1D26CD8D8();
  type metadata accessor for ActivityVariantKey(0);
  sub_1D26CD3F8();
  sub_1D25369B0(&qword_1ED962928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF01F8]);
  sub_1D26CD8D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
  sub_1D26CD8D8();
  v3 = sub_1D26CE49C();
  return sub_1D258A854((uint64_t)a1, v3);
}

unint64_t sub_1D258989C(uint64_t a1)
{
  return sub_1D25898D4(a1, &qword_1ED9632F8, &qword_1ED9632E8, (unint64_t *)&qword_1ED9632F0);
}

unint64_t sub_1D25898B8(uint64_t a1)
{
  return sub_1D25898D4(a1, &qword_1ED96FE70, &qword_1ED963318, &qword_1ED963320);
}

unint64_t sub_1D25898D4(uint64_t a1, uint64_t *a2, unint64_t *a3, unint64_t *a4)
{
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1D2536488(a3, a2, MEMORY[0x1E0D0F978]);
  v8 = sub_1D26CD8CC();
  return sub_1D25364C8(a1, v8, a2, a4, MEMORY[0x1E0D0F980]);
}

unint64_t sub_1D2589970(uint64_t a1)
{
  return sub_1D25363EC(a1, &qword_1ED96FD28, &qword_1ED963340, &qword_1ED963348);
}

unint64_t sub_1D258998C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1D26CBA24();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1D25369B0(&qword_1EFC825D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  v3 = sub_1D26CD8CC();
  return sub_1D258AC50(a1, v3, v2, &qword_1EFC82978, MEMORY[0x1E0CB09D0]);
}

unint64_t sub_1D2589A24(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1D26CBED4();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D875E8];
  sub_1D25369B0(&qword_1EFC82968, (uint64_t (*)(uint64_t))MEMORY[0x1E0D875E8], MEMORY[0x1E0D875F8]);
  v3 = sub_1D26CD8CC();
  return sub_1D258AC50(a1, v3, v2, &qword_1EFC82970, MEMORY[0x1E0D87600]);
}

unint64_t sub_1D2589ABC(uint64_t a1)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1D26CC948();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CDBE80];
  sub_1D25369B0(&qword_1EFC82980, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDBE80], MEMORY[0x1E0CDBE90]);
  v3 = sub_1D26CD8CC();
  return sub_1D258AC50(a1, v3, v2, &qword_1EFC82988, MEMORY[0x1E0CDBE98]);
}

unint64_t sub_1D2589B54(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_1D2589C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1D26CE3D0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1D26CE3D0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1D2589CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_1D25369B0((unint64_t *)&unk_1ED96BFA0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1D26D00F8);
    v7 = v6;
    v8 = sub_1D26CBDE4();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_1D26CBDE4();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1D2589E30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1D26CD938();
    v8 = v7;
    if (v6 == sub_1D26CD938() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1D26CD938();
          v15 = v14;
          if (v13 == sub_1D26CD938() && v15 == v16)
            break;
          v18 = sub_1D26CE3D0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1D2589FA4(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v31 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  v5 = MEMORY[0x1E0C80A78](v31);
  v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v30 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)&v30 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v30 - v14;
  MEMORY[0x1E0C80A78](v13);
  v18 = (uint64_t *)((char *)&v30 - v17);
  v36 = v2;
  v19 = -1 << *(_BYTE *)(v2 + 32);
  v20 = a2 & ~v19;
  v34 = v2 + 64;
  if (((*(_QWORD *)(v2 + 64 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) != 0)
  {
    v32 = ~v19;
    v33 = *(_QWORD *)(v16 + 72);
    while (1)
    {
      sub_1D258AE34(*(_QWORD *)(v36 + 48) + v33 * v20, (uint64_t)v18);
      v22 = v18[3];
      v21 = v18[4];
      __swift_project_boxed_opaque_existential_0(v18, v22);
      (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v21 + 16))((char *)&v37 + 1, v22, v21);
      v23 = BYTE1(v37);
      v24 = a1[3];
      v25 = a1[4];
      __swift_project_boxed_opaque_existential_0(a1, v24);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v25 + 16))(&v37, v24, v25);
      LODWORD(v24) = v37;
      sub_1D258AE34((uint64_t)v18, (uint64_t)v15);
      v26 = v35;
      sub_1D258AE34((uint64_t)a1, v35);
      if (v23 != (_DWORD)v24)
        break;
      v27 = sub_1D26CD1AC();
      sub_1D258AE78(v26);
      sub_1D258AE78((uint64_t)v15);
      sub_1D258AE34((uint64_t)v18, (uint64_t)v10);
      sub_1D258AE34((uint64_t)a1, (uint64_t)v7);
      if ((v27 & 1) == 0)
        goto LABEL_4;
      v28 = sub_1D26CB9A0();
      sub_1D258AE78((uint64_t)v7);
      sub_1D258AE78((uint64_t)v10);
      sub_1D258AE78((uint64_t)v18);
      if ((v28 & 1) != 0)
        return v20;
LABEL_5:
      v20 = (v20 + 1) & v32;
      if (((*(_QWORD *)(v34 + ((v20 >> 3) & 0xFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
        return v20;
    }
    sub_1D258AE78(v26);
    sub_1D258AE78((uint64_t)v15);
    sub_1D258AE34((uint64_t)v18, (uint64_t)v10);
    sub_1D258AE34((uint64_t)a1, (uint64_t)v7);
LABEL_4:
    sub_1D258AE78((uint64_t)v7);
    sub_1D258AE78((uint64_t)v10);
    sub_1D258AE78((uint64_t)v18);
    goto LABEL_5;
  }
  return v20;
}

unint64_t sub_1D258A25C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  _QWORD v8[2];

  v8[1] = a1;
  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    do
    {
      v8[0] = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v4);
      static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)v8);
      if ((v6 & 1) != 0)
        break;
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1D258A2FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1D258AEB4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1D8239818](v9, a1);
      sub_1D258AEF0((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1D258A3C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  char v13;
  id v14;
  BOOL v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v26 = ~v3;
    v24 = *(_QWORD *)(a1 + 16);
    v25 = *(_QWORD *)(a1 + 8);
    v22 = *(_QWORD *)(a1 + 24);
    v23 = *(_QWORD *)(a1 + 32);
    v19 = *(_QWORD *)(a1 + 48);
    v20 = *(unsigned __int8 *)(a1 + 56);
    v21 = *(unsigned __int8 *)(a1 + 40);
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
    while (1)
    {
      v5 = *(_QWORD *)(v28 + 48) + (v4 << 6);
      v7 = *(void **)v5;
      v6 = *(_QWORD *)(v5 + 8);
      v9 = *(_QWORD *)(v5 + 16);
      v8 = *(_QWORD *)(v5 + 24);
      v10 = *(_QWORD *)(v5 + 32);
      v11 = *(unsigned __int8 *)(v5 + 40);
      v12 = *(_QWORD *)(v5 + 48);
      v13 = *(_BYTE *)(v5 + 56);
      swift_bridgeObjectRetain();
      v14 = v7;
      swift_bridgeObjectRetain();
      if ((sub_1D26CDECC() & 1) == 0)
        break;
      v15 = v6 == v25 && v9 == v24;
      if (!v15 && (sub_1D26CE3D0() & 1) == 0)
        break;
      if (v10)
      {
        if (!v23)
          break;
        v16 = v8 == v22 && v10 == v23;
        if (!v16 && (sub_1D26CE3D0() & 1) == 0)
          break;
      }
      else if (v23)
      {
        break;
      }
      if (((v21 ^ v11) & 1) != 0)
        break;
      if ((v13 & 1) != 0)
      {
        v17 = qword_1D26D2B70[v12];
        if (v20)
          goto LABEL_26;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v17 == 3)
          return v4;
      }
      else
      {
        if ((v20 & 1) != 0)
LABEL_26:
          __asm { BR              X8 }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if (v12 == v19)
          return v4;
      }
LABEL_20:
      v4 = (v4 + 1) & v26;
      if (((*(_QWORD *)(v27 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
        return v4;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    goto LABEL_20;
  }
  return v4;
}

unint64_t sub_1D258A640(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  int v10;
  id v11;
  BOOL v12;
  uint64_t v13;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v20 = ~v3;
    v18 = *(_QWORD *)(a1 + 16);
    v19 = *(_QWORD *)(a1 + 8);
    v16 = *(_QWORD *)(a1 + 24);
    v17 = *(unsigned __int8 *)(a1 + 32);
    v15 = *(unsigned __int8 *)(a1 + 33);
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
    do
    {
      v5 = *(_QWORD *)(v2 + 48) + 40 * v4;
      v6 = *(_QWORD *)(v5 + 8);
      v8 = *(_QWORD *)(v5 + 16);
      v7 = *(_QWORD *)(v5 + 24);
      v9 = *(_BYTE *)(v5 + 32);
      v10 = *(unsigned __int8 *)(v5 + 33);
      v11 = *(id *)v5;
      swift_bridgeObjectRetain();
      if ((sub_1D26CDECC() & 1) == 0 || (v6 == v19 ? (v12 = v8 == v18) : (v12 = 0), !v12 && (sub_1D26CE3D0() & 1) == 0))
      {
        swift_bridgeObjectRelease();

        goto LABEL_4;
      }
      if ((v9 & 1) != 0)
      {
        v13 = qword_1D26D2B70[v7];
        if (v17)
          goto LABEL_15;
        swift_bridgeObjectRelease();

        if (v13 != 3)
          goto LABEL_4;
      }
      else
      {
        if ((v17 & 1) != 0)
LABEL_15:
          __asm { BR              X8 }
        swift_bridgeObjectRelease();

        if (v7 != v16)
          goto LABEL_4;
      }
      if (((v15 ^ v10) & 1) == 0)
        return v4;
LABEL_4:
      v4 = (v4 + 1) & v20;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_1D258A854(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = v2;
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  v6 = *(_QWORD *)(v27 - 8);
  MEMORY[0x1E0C80A78](v27);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3 + 64;
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return v11;
  v28 = ~v10;
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
  v12 = *(_QWORD *)(v6 + 72);
  v24 = v3 + 64;
  v25 = v3;
  while (1)
  {
    sub_1D258AF24(*(_QWORD *)(v3 + 48) + v12 * v11, (uint64_t)v8);
    if ((sub_1D26CDECC() & 1) == 0)
      goto LABEL_4;
    v14 = type metadata accessor for ActivityKey(0);
    if ((sub_1D26CBAE4() & 1) == 0)
      goto LABEL_4;
    v15 = *(int *)(v14 + 24);
    v16 = *(_QWORD *)&v8[v15];
    v17 = *(_QWORD *)&v8[v15 + 8];
    v18 = (_QWORD *)(a1 + v15);
    v19 = v16 == *v18 && v17 == v18[1];
    if (!v19 && (sub_1D26CE3D0() & 1) == 0)
      goto LABEL_4;
    v20 = *(int *)(v27 + 68);
    v21 = a1 + v20;
    if ((MEMORY[0x1D8238E04](&v8[v20], a1 + v20) & 1) == 0)
      goto LABEL_4;
    v23 = type metadata accessor for ActivityVariantKey(0);
    v26 = v21 + *(int *)(v23 + 20);
    sub_1D26CD3F8();
    sub_1D25369B0(&qword_1ED963210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF0208]);
    sub_1D26CDAC4();
    v3 = v25;
    v9 = v24;
    sub_1D26CDAC4();
    if (v31 != v29)
      goto LABEL_4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    sub_1D2536488(&qword_1ED962FF8, &qword_1ED96FD28, MEMORY[0x1E0D0FB60]);
    sub_1D26CDAC4();
    sub_1D26CDAC4();
    if (v31 == v29 && v32 == v30)
      break;
    v13 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v24;
    v3 = v25;
    if ((v13 & 1) != 0)
      goto LABEL_17;
LABEL_4:
    sub_1D253703C((uint64_t)v8, &qword_1ED963110);
    v11 = (v11 + 1) & v28;
    if (((*(_QWORD *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      return v11;
  }
  swift_bridgeObjectRelease_n();
LABEL_17:
  sub_1D253703C((uint64_t)v8, &qword_1ED963110);
  return v11;
}

unint64_t sub_1D258AB48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  id v6;
  char v7;
  uint64_t v8;
  id v9;
  char v10;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    sub_1D26CDE54();
    v6 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v7 = sub_1D26CDECC();

    if ((v7 & 1) == 0)
    {
      v8 = ~v4;
      for (i = (i + 1) & v8; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v8)
      {
        v9 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v10 = sub_1D26CDECC();

        if ((v10 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_1D258AC50(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  char v17;
  uint64_t v19;
  uint64_t (*v20)(uint64_t);
  unint64_t *v21;
  uint64_t v22;

  v21 = a4;
  v22 = a5;
  v6 = v5;
  v19 = a1;
  v20 = a3;
  v8 = a3(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - v10;
  v12 = -1 << *(_BYTE *)(v6 + 32);
  v13 = a2 & ~v12;
  if (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v12;
    v15 = *(_QWORD *)(v9 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    do
    {
      v16(v11, *(_QWORD *)(v6 + 48) + v15 * v13, v8);
      sub_1D25369B0(v21, v20, v22);
      v17 = sub_1D26CD908();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_1D258AD80()
{
  unint64_t result;

  result = qword_1ED96CE68;
  if (!qword_1ED96CE68)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26DA3C8, &type metadata for FeatureFlags.SpringBoard);
    atomic_store(result, (unint64_t *)&qword_1ED96CE68);
  }
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetContentRenderStatistics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WidgetContentRenderStatistics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WidgetContentRenderStatistics()
{
  return &type metadata for WidgetContentRenderStatistics;
}

uint64_t dispatch thunk of RenderStatisticsProvider.consumeRenderStatistics()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D258AE34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D258AE78(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D258AEB4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1D258AEF0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1D258AF24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t DuetWidgetBudgetIdentity.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DuetWidgetBudgetIdentity.init(for:kind:intentHash:)@<X0>(uint64_t a1@<X0>, char a2@<W4>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  if ((a2 & 1) == 0)
  {
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
  }
  sub_1D257293C();
  sub_1D26CDF8C();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v8 = sub_1D26CBC88();
  v9 = v6;
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  *a3 = v8;
  a3[1] = v9;
  return result;
}

ChronoKit::DuetWidgetBudgetIdentity __swiftcall DuetWidgetBudgetIdentity.init(forStackSuggestionIdentifier:)(Swift::String forStackSuggestionIdentifier)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  ChronoKit::DuetWidgetBudgetIdentity result;
  _QWORD v7[2];

  v2 = v1;
  sub_1D257293C();
  sub_1D26CDF8C();
  strcpy((char *)v7, "suggestion::");
  BYTE5(v7[1]) = 0;
  HIWORD(v7[1]) = -5120;
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v3 = swift_bridgeObjectRelease();
  v5 = v7[1];
  *v2 = v7[0];
  v2[1] = v5;
  result.identifier._object = v4;
  result.identifier._countAndFlagsBits = v3;
  return result;
}

void DuetWidgetBudgetIdentity.init(for:)(char **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  id v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v19 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)a1[1];
  v8 = (unint64_t)a1[2];
  v9 = a1[3];
  v10 = *MEMORY[0x1E0D0FE30];
  v18 = *a1;
  v11 = &v18[v10];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v11, v3);
  if (v9)
  {
    v12 = objc_msgSend(v9, sel_stableHash);
    v24 = 14906;
    v25 = 0xE200000000000000;
    v22 = (uint64_t)v12;
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
  }
  v24 = v7;
  v25 = v8;
  v22 = 14906;
  v23 = 0xE200000000000000;
  v20 = 0x413325413325;
  v21 = 0xE600000000000000;
  sub_1D257293C();
  sub_1D26CDF8C();
  v24 = sub_1D26CBC88();
  v25 = v13;
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v14 = v24;
  v15 = v25;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

  swift_bridgeObjectRelease();
  v16 = v19;
  *v19 = v14;
  v16[1] = v15;
}

void DuetWidgetBudgetIdentity.init(forViewConfiguration:)(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D258B70C(a1);
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

ChronoKit::DuetWidgetBudgetIdentity __swiftcall DuetWidgetBudgetIdentity.init(forUpdateConfigurations:)(Swift::OpaquePointer forUpdateConfigurations)
{
  uint64_t *v1;
  unint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  uint64_t i;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  ChronoKit::DuetWidgetBudgetIdentity result;

  v4 = v1;
  if (!((unint64_t)forUpdateConfigurations._rawValue >> 62))
  {
    v5 = *(_QWORD *)(((unint64_t)forUpdateConfigurations._rawValue & 0xFFFFFFFFFFFFF8) + 0x10);
    v6 = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_13:
    swift_bridgeObjectRelease();
    __break(1u);
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  v6 = sub_1D26CE1F0();
  v5 = v6;
  if (!v6)
    goto LABEL_13;
LABEL_3:
  v2 = (unint64_t)forUpdateConfigurations._rawValue & 0xC000000000000001;
  if (((unint64_t)forUpdateConfigurations._rawValue & 0xC000000000000001) != 0)
  {
LABEL_14:
    v8 = (id)MEMORY[0x1D8239890](0, forUpdateConfigurations._rawValue);
    goto LABEL_6;
  }
  if (!*(_QWORD *)(((unint64_t)forUpdateConfigurations._rawValue & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_16;
  }
  v8 = *((id *)forUpdateConfigurations._rawValue + 4);
LABEL_6:
  v9 = v8;
  v6 = swift_bridgeObjectRelease();
  if (v5 < 1)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_bridgeObjectRetain();
  for (i = 0; i != v5; ++i)
  {
    if (v2)
    {
      MEMORY[0x1D8239890](i, forUpdateConfigurations._rawValue);
      swift_unknownObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  v11 = sub_1D258BA9C((unint64_t)forUpdateConfigurations._rawValue);
  v13 = v12;

  v6 = swift_bridgeObjectRelease();
  *v4 = v11;
  v4[1] = v13;
LABEL_17:
  result.identifier._object = v7;
  result.identifier._countAndFlagsBits = v6;
  return result;
}

uint64_t DuetWidgetBudgetIdentity.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t static DuetWidgetBudgetIdentity.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1D26CE3D0();
}

uint64_t DuetWidgetBudgetIdentity.hashValue.getter()
{
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D258B61C()
{
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D258B674()
{
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D258B6B8()
{
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D258B70C(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  char *v20;
  id v21;
  unint64_t v22;
  _QWORD v24[3];
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD v29[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (objc_msgSend(a1, sel_isSuggestion))
  {
    v6 = objc_msgSend(a1, sel_container);
    if (v6)
    {
      v7 = v6;
      if (objc_msgSend(v6, sel_isStack))
      {
        v8 = objc_msgSend(v7, sel_uniqueIdentifier);
        v9 = sub_1D26CD938();
        v11 = v10;

        v29[0] = v9;
        v29[1] = v11;
        v27 = 14906;
        v28 = 0xE200000000000000;
        v25 = 0x413325413325;
        v26 = 0xE600000000000000;
        sub_1D257293C();
        sub_1D26CDF8C();
        strcpy((char *)v29, "suggestion::");
        BYTE5(v29[1]) = 0;
        HIWORD(v29[1]) = -5120;
        sub_1D26CDA04();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v29[0];
      }

    }
  }
  v13 = objc_msgSend(a1, sel_widget);
  v14 = (char *)objc_msgSend(v13, sel_extensionIdentity);
  v15 = objc_msgSend(v13, sel_kind);
  v16 = sub_1D26CD938();
  v18 = v17;

  v19 = objc_msgSend(v13, sel_intentReference);
  v20 = &v14[*MEMORY[0x1E0D0FE30]];
  swift_beginAccess();
  v24[0] = v3;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v20, v2);
  if (v19)
  {
    v21 = objc_msgSend(v19, sel_stableHash);
    v27 = 14906;
    v28 = 0xE200000000000000;
    v25 = (uint64_t)v21;
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
  }
  v27 = v16;
  v28 = v18;
  v25 = 14906;
  v26 = 0xE200000000000000;
  v24[1] = 0x413325413325;
  v24[2] = 0xE600000000000000;
  sub_1D257293C();
  sub_1D26CDF8C();
  v27 = sub_1D26CBC88();
  v28 = v22;
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v12 = v27;
  (*(void (**)(char *, uint64_t))(v24[0] + 8))(v5, v2);

  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1D258BA9C(unint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t result;
  id v9;
  uint64_t v10;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_18:
    swift_bridgeObjectRelease();
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    v9 = (id)MEMORY[0x1D8239890](0, a1);
    swift_bridgeObjectRelease();
LABEL_13:
    v10 = sub_1D258B70C(v9);
LABEL_15:

    return v10;
  }
LABEL_17:
  swift_bridgeObjectRetain();
  v2 = sub_1D26CE1F0();
  if (!v2)
    goto LABEL_18;
LABEL_3:
  v3 = a1 & 0xC000000000000001;
  v4 = 4;
  do
  {
    if (v3)
      v5 = (id)MEMORY[0x1D8239890](v4 - 4, a1);
    else
      v5 = *(id *)(a1 + 8 * v4);
    v6 = v5;
    v7 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    if (objc_msgSend(v5, sel_isSuggestion))
    {
      swift_bridgeObjectRelease();
      v9 = v6;
      v10 = sub_1D258B70C(v9);

      goto LABEL_15;
    }

    ++v4;
  }
  while (v7 != v2);
  result = swift_bridgeObjectRelease();
  if (v3)
    goto LABEL_19;
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v9 = *(id *)(a1 + 32);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

unint64_t sub_1D258BC08()
{
  unint64_t result;

  result = qword_1EFC82990;
  if (!qword_1EFC82990)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for DuetWidgetBudgetIdentity, &type metadata for DuetWidgetBudgetIdentity);
    atomic_store(result, (unint64_t *)&qword_1EFC82990);
  }
  return result;
}

uint64_t sub_1D258BC4C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = sub_1D258BC78();
  return v0;
}

uint64_t sub_1D258BC78()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  _QWORD v23[4];

  v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D26CB880();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D258C184((uint64_t)v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1D258C76C((uint64_t)v2);
    if (qword_1ED9621C0 != -1)
      swift_once();
    v7 = sub_1D26CC09C();
    __swift_project_value_buffer(v7, (uint64_t)qword_1ED977CF0);
    v8 = sub_1D26CC084();
    v9 = sub_1D26CDCEC();
    if (os_log_type_enabled(v8, v9))
    {
      v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v10 = 0;
      _os_log_impl(&dword_1D2531000, v8, v9, "Couldn't find nominated container data", v10, 2u);
      MEMORY[0x1D823A5E0](v10, -1, -1);
    }

    return MEMORY[0x1E0DEE9D8];
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  v11 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  sub_1D26CB868();
  v12 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_contentsAtPath_, v12);

  if (!v13)
  {
    if (qword_1ED9621C0 != -1)
      swift_once();
    v17 = sub_1D26CC09C();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED977CF0);
    v18 = sub_1D26CC084();
    v19 = sub_1D26CDCEC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D2531000, v18, v19, "Couldn't load nominated container data", v20, 2u);
      MEMORY[0x1D823A5E0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return MEMORY[0x1E0DEE9D8];
  }
  v14 = sub_1D26CB8E0();
  v16 = v15;

  sub_1D26CB6F4();
  swift_allocObject();
  sub_1D26CB6E8();
  type metadata accessor for NominatedContainerPermissions();
  sub_1D258C7AC();
  sub_1D26CB6DC();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_release();
  sub_1D253EE04(v14, v16);
  v21 = *(_QWORD *)(v23[3] + 16);
  swift_bridgeObjectRetain();
  swift_release();
  return v21;
}

uint64_t sub_1D258C184@<X0>(uint64_t a1@<X8>)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;

  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v4 = (void *)sub_1D26CD914();
  v5 = (void *)sub_1D26CD914();
  v6 = objc_msgSend(v3, sel_URLForResource_withExtension_, v4, v5);

  if (v6)
  {
    sub_1D26CB850();

    v7 = sub_1D26CB880();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 0;
  }
  else
  {

    v7 = sub_1D26CB880();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  return v8(v9, v10, 1, v7);
}

uint64_t sub_1D258C2A4()
{
  return 1;
}

uint64_t sub_1D258C2AC()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D258C2EC()
{
  return sub_1D26CE46C();
}

uint64_t sub_1D258C310()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

unint64_t sub_1D258C34C()
{
  return 0xD00000000000001BLL;
}

uint64_t sub_1D258C368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D258CA18(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1D258C390()
{
  sub_1D258C728();
  return sub_1D26CE4F0();
}

uint64_t sub_1D258C3B8()
{
  sub_1D258C728();
  return sub_1D26CE4FC();
}

uint64_t sub_1D258C3E0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NominatedContainerPermissions()
{
  return objc_opt_self();
}

uint64_t sub_1D258C424(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82998);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D258C728();
  sub_1D26CE4E4();
  v9[1] = *(_QWORD *)(v2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  sub_1D258C7F0(&qword_1ED963868, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
  sub_1D26CE358();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D258C544(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627B0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D258C728();
  sub_1D26CE4D8();
  if (v2)
  {
    type metadata accessor for NominatedContainerPermissions();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
    sub_1D258C7F0(&qword_1ED962798, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
    sub_1D26CE2C8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)(v1 + 16) = v9[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1D258C6B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for NominatedContainerPermissions();
  v5 = swift_allocObject();
  result = sub_1D258C544(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1D258C708(_QWORD *a1)
{
  return sub_1D258C424(a1);
}

unint64_t sub_1D258C728()
{
  unint64_t result;

  result = qword_1ED962678;
  if (!qword_1ED962678)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D2DB4, &type metadata for NominatedContainerPermissions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED962678);
  }
  return result;
}

uint64_t sub_1D258C76C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D258C7AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED962690[0];
  if (!qword_1ED962690[0])
  {
    v1 = type metadata accessor for NominatedContainerPermissions();
    result = MEMORY[0x1D823A4E4](&unk_1D26D2CC8, v1);
    atomic_store(result, qword_1ED962690);
  }
  return result;
}

uint64_t sub_1D258C7F0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96BF70);
    v8 = a2;
    result = MEMORY[0x1D823A4E4](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NominatedContainerPermissions.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for NominatedContainerPermissions.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D258C8E4 + 4 * asc_1D26D2C50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D258C904 + 4 * byte_1D26D2C55[v4]))();
}

_BYTE *sub_1D258C8E4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D258C904(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D258C90C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D258C914(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D258C91C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D258C924(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NominatedContainerPermissions.CodingKeys()
{
  return &type metadata for NominatedContainerPermissions.CodingKeys;
}

unint64_t sub_1D258C944()
{
  unint64_t result;

  result = qword_1EFC829A0[0];
  if (!qword_1EFC829A0[0])
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D2D8C, &type metadata for NominatedContainerPermissions.CodingKeys);
    atomic_store(result, qword_1EFC829A0);
  }
  return result;
}

unint64_t sub_1D258C98C()
{
  unint64_t result;

  result = qword_1ED962688;
  if (!qword_1ED962688)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D2CFC, &type metadata for NominatedContainerPermissions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED962688);
  }
  return result;
}

unint64_t sub_1D258C9D4()
{
  unint64_t result;

  result = qword_1ED962680;
  if (!qword_1ED962680)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D2D24, &type metadata for NominatedContainerPermissions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED962680);
  }
  return result;
}

uint64_t sub_1D258CA18(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD00000000000001BLL && a2 == 0x80000001D26DFF80)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1D258CA9C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1D26CB880();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return sub_1D258CB80((uint64_t)v4);
}

uint64_t sub_1D258CB1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1EFC8AA70;
  swift_beginAccess();
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D258CB80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1EFC8AA70;
  swift_beginAccess();
  v4 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1D258CBEC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t BaseDirectoryCacheKeyProvider.__allocating_init(subsystem:in:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  BaseDirectoryCacheKeyProvider.init(subsystem:in:fileManager:)(a1, a2, a3, a4);
  return v8;
}

_QWORD *BaseDirectoryCacheKeyProvider.init(subsystem:in:fileManager:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  void *v21;
  id v22;
  unsigned __int8 v23;
  id v24;
  id v25;
  __int128 v26;
  void *v27;
  uint64_t v29;
  uint64_t v30;
  id v31;
  id v32;
  _OWORD v33[2];
  uint64_t v34;

  v5 = v4;
  v34 = *MEMORY[0x1E0C80C00];
  v30 = *v4;
  v8 = sub_1D26CB880();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v29 - v13;
  *(_QWORD *)&v33[0] = 0;
  v31 = a4;
  v15 = objc_msgSend(a4, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, a3, 1, 0, 1, v33);
  v16 = *(void **)&v33[0];
  if (!v15)
  {
    v25 = *(id *)&v33[0];
    swift_bridgeObjectRelease();
    sub_1D26CB76C();

    swift_willThrow();
    v26 = *(_OWORD *)(v30 + 96);
    v33[0] = *(_OWORD *)(v30 + 80);
    v33[1] = v26;
    type metadata accessor for BaseDirectoryCacheKeyProvider();
  }
  v17 = v15;
  sub_1D26CB850();
  v18 = v16;

  sub_1D26CB814();
  swift_bridgeObjectRelease();
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  v20 = (char *)v5 + qword_1EFC8AA70;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))((uint64_t)v5 + qword_1EFC8AA70, v14, v8);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v20, v8);
  v21 = (void *)sub_1D26CB7D8();
  v19(v12, v8);
  v32 = 0;
  v22 = v31;
  v23 = objc_msgSend(v31, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v21, 1, 0, &v32);

  v24 = v32;
  if ((v23 & 1) == 0)
  {
    v27 = v24;
    swift_release();
    sub_1D26CB76C();

    swift_willThrow();
  }

  return v5;
}

void type metadata accessor for BaseDirectoryCacheKeyProvider()
{
  JUMPOUT(0x1D823A430);
}

uint64_t BaseDirectoryCacheKeyProvider.__allocating_init(cacheURL:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = swift_allocObject();
  v3 = v2 + qword_1EFC8AA70;
  v4 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v2;
}

uint64_t BaseDirectoryCacheKeyProvider.init(cacheURL:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1EFC8AA70;
  v4 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_1D258CFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *MEMORY[0x1E0D0FE10];
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 8))
  {
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    sub_1D26CBC88();
    swift_endAccess();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    sub_1D26CBC88();
    swift_endAccess();
  }
  sub_1D258D370();
  swift_bridgeObjectRelease();
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a2, 0, 1, v4);
}

uint64_t sub_1D258D164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t);
  void *v19;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;

  v3 = v2;
  v27 = a2;
  v5 = *(_QWORD **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v24 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v25 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CB880();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v24 - v16;
  v18 = *(uint64_t (**)(uint64_t))(v5[12] + 16);
  v26 = a1;
  v19 = (void *)v18(v6);
  sub_1D258CFF8((uint64_t)v19, (uint64_t)v10);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D258C76C((uint64_t)v10);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v5[11] - 8) + 56))(v27, 1, 1, v5[11]);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    v21 = v5[11];
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    v22 = v25;
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v25, v26, v6);
    v23 = v27;
    (*(void (**)(char *, char *, uint64_t))(v5[13] + 16))(v15, v22, v21);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v23, 0, 1, v21);
  }
}

uint64_t sub_1D258D370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1D26CB880();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D258CB1C((uint64_t)v3);
  sub_1D26CB814();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t BaseDirectoryCacheKeyProvider.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1EFC8AA70;
  v2 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t BaseDirectoryCacheKeyProvider.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + qword_1EFC8AA70;
  v2 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D258D4AC(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 96);
}

uint64_t sub_1D258D4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D258CFF8(a1, a2);
}

uint64_t sub_1D258D4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D258D164(a1, a2);
}

uint64_t sub_1D258D4F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D258CB1C(a1);
}

uint64_t sub_1D258D518()
{
  return 32;
}

__n128 sub_1D258D524(uint64_t a1, _OWORD *a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1D258D530()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB880();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for BaseDirectoryCacheKeyProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.cacheURL.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.cacheURL.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.cacheURL.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.__allocating_init(subsystem:in:fileManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.__allocating_init(cacheURL:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.isSupported(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.baseURL(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of BaseDirectoryCacheKeyProvider.cacheKey(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t RelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(a1, a2, a3);
  return v6;
}

uint64_t RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  id v17;
  void *v18;
  unsigned int v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint8_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v31;
  _QWORD v32[2];
  id v33[2];

  v4 = v3;
  v33[1] = *(id *)MEMORY[0x1E0C80C00];
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CB880();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache) = 0;
  sub_1D2538510(a1, v4 + 112);
  sub_1D2538510(a2, v4 + 152);
  sub_1D255F2F4(a3, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    v15 = (id)CHSWidgetRelevanceServiceCacheDirectory();
    sub_1D26CB850();

    sub_1D258C76C((uint64_t)v10);
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL, v14, v11);
  }
  else
  {
    v16 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v16(v14, v10, v11);
    v16((char *)(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL), v14, v11);
  }
  v17 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v18 = (void *)sub_1D26CB7D8();
  v33[0] = 0;
  v19 = objc_msgSend(v17, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v18, 1, 0, v33);

  if (v19)
  {
    v20 = qword_1ED963A88;
    v21 = v33[0];
    if (v20 != -1)
      swift_once();
    v22 = sub_1D26CC09C();
    __swift_project_value_buffer(v22, (uint64_t)qword_1ED977ED0);
    v23 = sub_1D26CC084();
    v24 = sub_1D26CDD04();
    if (os_log_type_enabled(v23, v24))
    {
      v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v25 = 0;
      _os_log_impl(&dword_1D2531000, v23, v24, "Loading RelevanceCache", v25, 2u);
      MEMORY[0x1D823A5E0](v25, -1, -1);
    }

    v26 = swift_retain();
    v27 = v32[1];
    v28 = sub_1D258E4B4(v26, v4);
    if (!v27)
    {
      v31 = v28;
      sub_1D258C76C(a3);
      __swift_destroy_boxed_opaque_existential_1(a2);
      __swift_destroy_boxed_opaque_existential_1(a1);
      *(_QWORD *)(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache) = v31;
      swift_release();
      return v4;
    }
    swift_release();
  }
  else
  {
    v29 = v33[0];
    swift_release();
    sub_1D26CB76C();

    swift_willThrow();
  }
  sub_1D258C76C(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v4;
}

uint64_t sub_1D258D9D0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  void *v21;
  unsigned __int8 v22;
  void *v23;
  uint64_t v24;
  void *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  id v30;
  void (*v31)(char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  __int128 v43;
  uint64_t v44;
  _UNKNOWN **v45;
  uint64_t v46;

  v46 = *MEMORY[0x1E0C80C00];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CB880();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v41 = (char *)&v37 - v11;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v37 - v12;
  v14 = objc_msgSend(a1, sel_kind);
  v15 = sub_1D26CD938();
  v17 = v16;

  v18 = v42;
  sub_1D258DD68(a1, (uint64_t)v13);
  if (v18)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v37 = v15;
    v38 = v9;
    v39 = v17;
    v42 = v6;
    sub_1D26CB82C();
    v19 = (void *)objc_opt_self();
    v20 = objc_msgSend(v19, sel_defaultManager);
    v21 = (void *)sub_1D26CB7D8();
    *(_QWORD *)&v43 = 0;
    v22 = objc_msgSend(v20, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v21, 1, 0, &v43);

    v23 = (void *)v43;
    if ((v22 & 1) != 0)
    {
      v24 = v42;
      v25 = v19;
      v26 = v38;
      (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v38, v13, v5);
      v27 = sub_1D26CD488();
      v28 = (uint64_t)v40;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v40, 1, 1, v27);
      v29 = v23;
      v30 = objc_msgSend(v25, sel_defaultManager);
      v44 = sub_1D2539514(0, (unint64_t *)&qword_1ED9620C0);
      v45 = &off_1E93D53E8;
      *(_QWORD *)&v43 = v30;
      v31 = *(void (**)(char *, uint64_t))(v24 + 8);
      v31(v41, v5);
      v31(v13, v5);
      type metadata accessor for DataProtectedArchiveFilePromise(0);
      v1 = swift_allocObject();
      v32 = v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
      v33 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
      v34 = v39;
      *(_QWORD *)(v1 + 16) = v37;
      *(_QWORD *)(v1 + 24) = v34;
      (*(void (**)(uint64_t, char *, uint64_t))(v24 + 32))(v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination, v26, v5);
      sub_1D2538F38(&v43, v1 + 32);
      sub_1D257F310(v28, v1 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel);
    }
    else
    {
      v35 = (id)v43;
      swift_bridgeObjectRelease();
      sub_1D26CB76C();

      swift_willThrow();
      v1 = *(_QWORD *)(v42 + 8);
      ((void (*)(char *, uint64_t))v1)(v41, v5);
      ((void (*)(char *, uint64_t))v1)(v13, v5);
    }
  }
  return v1;
}

uint64_t sub_1D258DD68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  id v17;
  void (*v18)(void);
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;

  v48 = a2;
  v47 = sub_1D26CBFB8();
  v45 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v44 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CB880();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x1E0C80A78](v5);
  v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1D26CB604();
  v7 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v43 - v14;
  v16 = v2[18];
  __swift_project_boxed_opaque_existential_0(v2 + 14, v2[17]);
  v17 = objc_msgSend(a1, sel_extensionIdentity);
  v18 = *(void (**)(void))(v16 + 48);
  v54 = v15;
  v18();

  v19 = objc_msgSend(a1, sel_kind);
  v20 = sub_1D26CD938();
  v22 = v21;

  swift_bridgeObjectRetain();
  v23 = sub_1D26443E4(0x32uLL, v20, v22);
  v25 = v24;
  v27 = v26;
  v29 = v28;
  swift_bridgeObjectRelease();
  v30 = MEMORY[0x1D823917C](v23, v25, v27, v29);
  v32 = v31;
  swift_bridgeObjectRelease();
  v52 = v30;
  v53 = v32;
  sub_1D26CB5F8();
  sub_1D257293C();
  sub_1D26CDF98();
  v34 = v33;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v51);
  swift_bridgeObjectRelease();
  if (v34)
  {
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v54;
    sub_1D255F2F4((uint64_t)v54, (uint64_t)v13);
    v37 = v49;
    v36 = v50;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v13, 1, v50) == 1)
    {
      swift_bridgeObjectRelease();
      sub_1D258C76C((uint64_t)v13);
      sub_1D2592A88();
      swift_allocError();
      *v38 = 1;
      swift_willThrow();
    }
    else
    {
      v41 = v46;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v46, v13, v36);
      (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v48, v41, v36);
      v42 = v44;
      sub_1D26CBFAC();
      sub_1D26CB808();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v42, v47);
      sub_1D26CB7F0();
      swift_bridgeObjectRelease();
      sub_1D26CB7FC();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v41, v36);
    }
    return sub_1D258C76C(v35);
  }
  else
  {
    sub_1D2592A88();
    swift_allocError();
    *v40 = 2;
    swift_willThrow();
    sub_1D258C76C((uint64_t)v54);
    return swift_bridgeObjectRelease();
  }
}

void sub_1D258E158(uint64_t a1, uint64_t a2)
{
  _QWORD v2[6];

  v2[3] = a1;
  v2[4] = a2;
  sub_1D258EEA4((void (*)(uint64_t *__return_ptr))sub_1D2590ED8, (uint64_t)v2);
}

void sub_1D258E188(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  id v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;

  v5 = sub_1D26CB898();
  if (v2)
  {
    sub_1D2592A88();
    swift_allocError();
    *v11 = v2;
LABEL_4:
    swift_willThrow();
    return;
  }
  v7 = v5;
  v8 = v6;
  sub_1D2539514(0, &qword_1ED9620C8);
  sub_1D26CD2E4();
  v9 = (void *)sub_1D26CDD28();
  v10 = sub_1D253EE04(v7, v8);
  if (!v9)
  {
    sub_1D2592A88();
    swift_allocError();
    *v13 = 0;
    goto LABEL_4;
  }
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    MEMORY[0x1E0C80A78](v10);
    v12 = v9;
    swift_retain();
    sub_1D26CBC1C();
    swift_release();
    v14 = sub_1D26CD2CC();
    if (v14 >> 62)
      v15 = sub_1D26CE1F0();
    else
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

    *a2 = v15;
  }
  else
  {
    __break(1u);
  }
}

void sub_1D258E360(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  char v8;
  double v9;
  double v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;

  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2;
  v8 = sub_1D26CD2D8();
  sub_1D26CB9D0();
  sub_1D26CB994();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1D26CD2CC();
  v11 = objc_allocWithZone(MEMORY[0x1E0D10230]);
  sub_1D2539514(0, &qword_1ED963C88);
  v12 = (void *)sub_1D26CDADC();
  swift_bridgeObjectRelease();
  v13 = objc_msgSend(v11, sel_initWithWidgetRelevanceKey_supportsBackgroundRefresh_lastRelevanceUpdate_relevances_, v7, (v8 & 1) == 0, v12, v10);

  sub_1D26CBDA8();
}

uint64_t sub_1D258E4B4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  void *v24;
  uint64_t v25;
  id v26;
  char *v27;
  int v28;
  uint64_t v29;
  NSObject *v30;
  os_log_type_t v31;
  uint8_t *v32;
  uint8_t *v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  void (*v41)(uint64_t, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  _QWORD *v52;
  id v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  NSObject *v60;
  os_log_type_t v61;
  uint8_t *v62;
  _QWORD *v63;
  uint64_t v64;
  char *v65;
  _QWORD v67[2];
  __int128 v68;
  __int128 v69;
  uint64_t v70;
  void (*v71)(uint64_t, char *, uint64_t);
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;

  v3 = v2;
  v70 = a1;
  v5 = sub_1D26CB55C();
  v6 = *(_QWORD *)(v5 - 8);
  v75 = v5;
  v76 = v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v72 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)v67 - v9;
  v10 = sub_1D26CB574();
  v82 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v67[0] = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v73 = (char *)v67 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v88 = (char *)v67 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v67 - v17;
  v19 = sub_1D26CBD00();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v67 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1D26CBC34();
  v89 = 0;
  v67[1] = a2;
  v86 = a2 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL;
  v77 = *MEMORY[0x1E0D0FAA8];
  *(_QWORD *)&v23 = 138412290;
  v68 = v23;
  *(_QWORD *)&v23 = 138412546;
  v69 = v23;
  v83 = v18;
  v84 = v20;
  v78 = v19;
  v85 = v22;
  while (1)
  {
    sub_1D26CB85C();
    v24 = v3;
    v25 = sub_1D26CBC40();
    if (!v3)
      break;
    v3 = 0;
    v92 = v24;
    v26 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
    v27 = v85;
    if (swift_dynamicCast())
    {
      v28 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v27, v19);
      if (v28 == v77)
      {

        if (qword_1ED963A88 != -1)
          swift_once();
        v29 = sub_1D26CC09C();
        __swift_project_value_buffer(v29, (uint64_t)qword_1ED977ED0);
        v30 = sub_1D26CC084();
        v31 = sub_1D26CDCEC();
        if (os_log_type_enabled(v30, v31))
        {
          v32 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v32 = 0;
          _os_log_impl(&dword_1D2531000, v30, v31, "RelevanceCache corruption detected, rebuilding cache", v32, 2u);
          v33 = v32;
          v20 = v84;
          MEMORY[0x1D823A5E0](v33, -1, -1);
        }

        sub_1D258F874();
        v3 = 0;

        goto LABEL_4;
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v27, v19);
    }

    v92 = v24;
    v34 = v24;
    if (swift_dynamicCast())
    {
      v79 = 0;
      v80 = v25;

      v35 = v82;
      v36 = v75;
      v37 = v72;
      (*(void (**)(void))(v82 + 32))();
      sub_1D25369B0(&qword_1ED96B1A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48], MEMORY[0x1E0CADE40]);
      v38 = v74;
      sub_1D26CB73C();
      sub_1D26CB508();
      sub_1D25369B0(&qword_1ED96B198, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE20], MEMORY[0x1E0CADE30]);
      sub_1D26CDAC4();
      sub_1D26CDAC4();
      v39 = v90;
      v81 = v91;
      v40 = *(void (**)(char *, uint64_t))(v76 + 8);
      v40(v37, v36);
      v40(v38, v36);
      v41 = *(void (**)(uint64_t, char *, uint64_t))(v35 + 16);
      v42 = v73;
      v71 = v41;
      v41((uint64_t)v73, v88, v10);
      if (v81 == v39)
      {
        v45 = *(void (**)(char *, uint64_t))(v82 + 8);
        v45(v42, v10);
LABEL_24:
        v57 = v10;
        v25 = v80;
        v58 = (char *)v67[0];
        if (qword_1ED963A88 != -1)
          swift_once();
        v59 = sub_1D26CC09C();
        __swift_project_value_buffer(v59, (uint64_t)qword_1ED977ED0);
        v71((uint64_t)v58, v88, v57);
        v60 = sub_1D26CC084();
        v61 = sub_1D26CDCEC();
        if (os_log_type_enabled(v60, v61))
        {
          v62 = (uint8_t *)swift_slowAlloc();
          v63 = (_QWORD *)swift_slowAlloc();
          v89 = v57;
          *(_DWORD *)v62 = v68;
          v87 = (uint64_t)(v62 + 4);
          sub_1D26CB4F0();
          v64 = _swift_stdlib_bridgeErrorToNSError();
          v91 = v64;
          v57 = v89;
          sub_1D26CDF50();
          *v63 = v64;
          v45(v58, v57);
          _os_log_impl(&dword_1D2531000, v60, v61, "RelevanceCache failed due to access permission %@, rethrowing now", v62, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v63, -1, -1);
          MEMORY[0x1D823A5E0](v62, -1, -1);
        }
        else
        {
          v45(v58, v57);
        }

        v65 = v88;
        sub_1D26CB4F0();
        swift_willThrow();
        v45(v65, v57);

        break;
      }
      sub_1D26CB73C();
      sub_1D26CB514();
      sub_1D26CDAC4();
      sub_1D26CDAC4();
      v44 = v90;
      v43 = v91;
      v40(v37, v36);
      v40(v38, v36);
      v45 = *(void (**)(char *, uint64_t))(v82 + 8);
      v45(v42, v10);
      if (v43 == v44)
        goto LABEL_24;
      v45(v88, v10);

      v3 = v79;
      v25 = v80;
      v20 = v84;
      v19 = v78;
    }
    else
    {

      if (qword_1ED963A88 != -1)
        swift_once();
      v46 = sub_1D26CC09C();
      __swift_project_value_buffer(v46, (uint64_t)qword_1ED977ED0);
      v47 = v24;
      v48 = v24;
      v49 = sub_1D26CC084();
      v50 = sub_1D26CDCEC();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = swift_slowAlloc();
        v52 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v51 = v69;
        v53 = v24;
        v54 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v51 + 4) = v54;
        *v52 = v54;

        *(_WORD *)(v51 + 12) = 2048;
        *(_QWORD *)(v51 + 14) = v89;
        _os_log_impl(&dword_1D2531000, v49, v50, "RelevanceCache failed to load with error %@, retry %ld", (uint8_t *)v51, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        v55 = v52;
        v3 = 0;
        v19 = v78;
        MEMORY[0x1D823A5E0](v55, -1, -1);
        MEMORY[0x1D823A5E0](v51, -1, -1);

      }
      else
      {

      }
      v20 = v84;
    }
LABEL_4:
    if (++v89 == 3)
    {
      sub_1D2592A88();
      swift_allocError();
      *v56 = 3;
      swift_willThrow();
      break;
    }
  }
  swift_release();
  return v25;
}

void sub_1D258EEA4(void (*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  NSObject *v28;
  os_log_type_t v29;
  BOOL v30;
  uint8_t *v31;
  id v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  void (*v41)(char *, char *, uint64_t);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  id v47;
  id v48;
  NSObject *v49;
  os_log_type_t v50;
  uint64_t v51;
  char *v52;
  _QWORD *v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  __int128 v69;
  __int128 v70;
  void (*v71)(char *, char *, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  void (*v85)(uint64_t *__return_ptr);
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  uint64_t v93;

  v3 = v2;
  v85 = a1;
  v86 = a2;
  v4 = sub_1D26CB55C();
  v75 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v72 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v67 - v7;
  v89 = sub_1D26CB574();
  v74 = *(_QWORD *)(v89 - 8);
  v9 = MEMORY[0x1E0C80A78](v89);
  v68 = (char *)&v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v73 = (char *)&v67 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v87 = (char *)&v67 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v67 - v15;
  v17 = sub_1D26CBD00();
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v88 = 0;
  v76 = *MEMORY[0x1E0D0FAA8];
  *(_QWORD *)&v21 = 138412290;
  v69 = v21;
  *(_QWORD *)&v21 = 138412546;
  v70 = v21;
  v79 = v20;
  v80 = v4;
  v77 = v22;
  v78 = v8;
  v83 = v18;
  v84 = v16;
  while (1)
  {
    v23 = v3;
    v85(&v93);
    if (!v3)
      break;
    v92 = v3;
    v24 = v3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
    if (swift_dynamicCast())
    {
      v25 = v77;
      v26 = (*(uint64_t (**)(char *, uint64_t))(v77 + 88))(v20, v17);
      if (v26 == v76)
      {

        if (qword_1ED963A88 != -1)
          swift_once();
        v27 = sub_1D26CC09C();
        __swift_project_value_buffer(v27, (uint64_t)qword_1ED977ED0);
        v28 = sub_1D26CC084();
        v29 = sub_1D26CDCEC();
        v30 = os_log_type_enabled(v28, v29);
        v20 = v79;
        v16 = v84;
        if (v30)
        {
          v31 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v31 = 0;
          _os_log_impl(&dword_1D2531000, v28, v29, "RelevanceCache corruption detected, rebuilding cache", v31, 2u);
          v8 = v78;
          MEMORY[0x1D823A5E0](v31, -1, -1);
        }

        sub_1D258F874();
        v3 = 0;

        v17 = v83;
        goto LABEL_4;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v20, v17);
      v16 = v84;
    }

    v92 = v3;
    v32 = v3;
    if (swift_dynamicCast())
    {
      v81 = 0;

      v33 = v74;
      (*(void (**)(void))(v74 + 32))();
      sub_1D25369B0(&qword_1ED96B1A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48], MEMORY[0x1E0CADE40]);
      sub_1D26CB73C();
      v34 = v72;
      sub_1D26CB508();
      sub_1D25369B0(&qword_1ED96B198, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE20], MEMORY[0x1E0CADE30]);
      sub_1D26CDAC4();
      sub_1D26CDAC4();
      v35 = v90;
      v82 = v91;
      v36 = v4;
      v37 = v8;
      v38 = v34;
      v39 = *(void (**)(char *, uint64_t))(v75 + 8);
      v39(v38, v36);
      v39(v37, v36);
      v40 = v33;
      v41 = *(void (**)(char *, char *, uint64_t))(v33 + 16);
      v42 = v73;
      v71 = v41;
      v41(v73, v87, v89);
      if (v82 == v35)
      {
        v45 = *(void (**)(char *, uint64_t))(v40 + 8);
        v45(v42, v89);
LABEL_25:
        v59 = v68;
        if (qword_1ED963A88 != -1)
          swift_once();
        v60 = sub_1D26CC09C();
        __swift_project_value_buffer(v60, (uint64_t)qword_1ED977ED0);
        v71(v59, v87, v89);
        v61 = sub_1D26CC084();
        v62 = sub_1D26CDCEC();
        if (os_log_type_enabled(v61, v62))
        {
          v63 = (uint8_t *)swift_slowAlloc();
          v64 = (_QWORD *)swift_slowAlloc();
          *(_DWORD *)v63 = v69;
          sub_1D26CB4F0();
          v65 = _swift_stdlib_bridgeErrorToNSError();
          v91 = v65;
          sub_1D26CDF50();
          *v64 = v65;
          v45(v59, v89);
          _os_log_impl(&dword_1D2531000, v61, v62, "RelevanceCache failed due to access permission %@, rethrowing now", v63, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v64, -1, -1);
          MEMORY[0x1D823A5E0](v63, -1, -1);
        }
        else
        {
          v45(v59, v89);
        }

        v66 = v87;
        sub_1D26CB4F0();
        swift_willThrow();
        v45(v66, v89);

        return;
      }
      sub_1D26CB73C();
      sub_1D26CB514();
      sub_1D26CDAC4();
      sub_1D26CDAC4();
      v44 = v90;
      v43 = v91;
      v39(v38, v36);
      v39(v37, v36);
      v45 = *(void (**)(char *, uint64_t))(v40 + 8);
      v45(v42, v89);
      if (v43 == v44)
        goto LABEL_25;
      v8 = v37;
      v45(v87, v89);

      v4 = v80;
      v3 = v81;
      v17 = v83;
      v16 = v84;
      v20 = v79;
    }
    else
    {

      if (qword_1ED963A88 != -1)
        swift_once();
      v46 = sub_1D26CC09C();
      __swift_project_value_buffer(v46, (uint64_t)qword_1ED977ED0);
      v47 = v3;
      v48 = v3;
      v49 = sub_1D26CC084();
      v50 = sub_1D26CDCEC();
      if (os_log_type_enabled(v49, v50))
      {
        v51 = swift_slowAlloc();
        v52 = v16;
        v53 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v51 = v70;
        v54 = v23;
        v55 = _swift_stdlib_bridgeErrorToNSError();
        *(_QWORD *)(v51 + 4) = v55;
        *v53 = v55;

        *(_WORD *)(v51 + 12) = 2048;
        *(_QWORD *)(v51 + 14) = v88;
        _os_log_impl(&dword_1D2531000, v49, v50, "RelevanceCache failed to load with error %@, retry %ld", (uint8_t *)v51, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        v56 = v53;
        v16 = v52;
        v4 = v80;
        MEMORY[0x1D823A5E0](v56, -1, -1);
        v57 = v51;
        v17 = v83;
        MEMORY[0x1D823A5E0](v57, -1, -1);

      }
      else
      {

      }
      v3 = 0;
      v8 = v78;
    }
LABEL_4:
    if (++v88 == 3)
    {
      sub_1D2592A88();
      swift_allocError();
      *v58 = 3;
      swift_willThrow();
      return;
    }
  }
}

uint64_t sub_1D258F874()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  void *v16;
  uint64_t v17;
  unint64_t v18;

  v2 = v0[22];
  v3 = v0[23];
  __swift_project_boxed_opaque_existential_0(v0 + 19, v2);
  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 24))(v2, v3);
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    goto LABEL_13;
  MEMORY[0x1E0C80A78](v4);
  sub_1D2539514(0, (unint64_t *)&unk_1ED96E0F8);
  swift_getKeyPath();
  swift_retain();
  v6 = swift_bridgeObjectRetain();
  v7 = sub_1D25917A4(v6);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release_n();
  if (!(v7 >> 62))
  {
    v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
      goto LABEL_4;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1D26CE1F0();
  swift_bridgeObjectRelease();
  if (!v8)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    sub_1D258FB14(v5);
    return swift_bridgeObjectRelease();
  }
LABEL_4:
  v18 = v5;
  result = sub_1D26CE13C();
  if ((v8 & 0x8000000000000000) == 0)
  {
    v17 = v1;
    v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0)
        v11 = (id)MEMORY[0x1D8239890](v10, v7);
      else
        v11 = *(id *)(v7 + 8 * v10 + 32);
      v12 = v11;
      ++v10;
      v13 = objc_msgSend(v11, sel_extensionIdentity, v17);
      v14 = objc_msgSend(v12, sel_kind);
      sub_1D26CD938();

      v15 = objc_allocWithZone(MEMORY[0x1E0D10228]);
      v16 = (void *)sub_1D26CD914();
      swift_bridgeObjectRelease();
      objc_msgSend(v15, sel_initWithExtensionIdentity_kind_, v13, v16);

      sub_1D26CE118();
      sub_1D26CE148();
      sub_1D26CE154();
      sub_1D26CE124();
    }
    while (v8 != v10);
    v5 = v18;
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

void sub_1D258FB14(unint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  void *v10;
  id v11;
  void *v12;
  unsigned int v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  unsigned int v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27[2];

  v3 = v2;
  v4 = v1;
  v27[1] = *(id *)MEMORY[0x1E0C80C00];
  if (qword_1ED963A88 != -1)
    goto LABEL_19;
  while (1)
  {
    v6 = sub_1D26CC09C();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED977ED0);
    v7 = sub_1D26CC084();
    v8 = sub_1D26CDCEC();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v9 = 0;
      _os_log_impl(&dword_1D2531000, v7, v8, "RelevanceCache rebuilding...", v9, 2u);
      MEMORY[0x1D823A5E0](v9, -1, -1);
    }

    v10 = (void *)objc_opt_self();
    v11 = objc_msgSend(v10, sel_defaultManager);
    v12 = (void *)sub_1D26CB7D8();
    v27[0] = 0;
    v13 = objc_msgSend(v11, sel_removeItemAtURL_error_, v12, v27);

    v14 = v27[0];
    if (!v13)
      break;
    v15 = v27[0];
    v16 = objc_msgSend(v10, sel_defaultManager);
    v17 = (void *)sub_1D26CB7D8();
    v27[0] = 0;
    v18 = objc_msgSend(v16, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v17, 1, 0, v27);

    v14 = v27[0];
    if (!v18)
      break;
    sub_1D26CBC34();
    v19 = v14;
    sub_1D26CB85C();
    v20 = sub_1D26CBC40();
    if (v3)
      return;
    *(_QWORD *)(v4 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache) = v20;
    swift_release();
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v3 = sub_1D26CE1F0();
      if (!v3)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        return;
      }
    }
    else
    {
      v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v3)
        goto LABEL_15;
    }
    v21 = 4;
    while (1)
    {
      v22 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D8239890](v21 - 4, a1) : *(id *)(a1 + 8 * v21);
      v23 = v22;
      v24 = v21 - 3;
      if (__OFADD__(v21 - 4, 1))
        break;
      v25 = (void *)MEMORY[0x1D8239E84]();
      sub_1D258FE34(v4, v23);
      objc_autoreleasePoolPop(v25);

      ++v21;
      if (v24 == v3)
        goto LABEL_15;
    }
    __break(1u);
LABEL_19:
    swift_once();
  }
  v26 = v14;
  sub_1D26CB76C();

  swift_willThrow();
}

uint64_t sub_1D258FE34(uint64_t a1, void *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  NSObject *v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  _BOOL4 v22;
  uint64_t v23;
  uint8_t *v24;
  NSObject *v25;
  _QWORD *v26;
  uint8_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint8_t *v31;
  char *v32;
  NSObject *v33;
  os_log_type_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  char *v41;
  uint8_t *v42;
  uint8_t *v43;
  void *v44;
  _QWORD *v45;
  uint8_t *v46;
  _QWORD *v47;
  uint8_t *v48;
  uint64_t v49;
  id v50;
  char *v51;
  char *v52;
  uint64_t v53;
  NSObject *v54;

  v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CB880();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v46 - v13;
  sub_1D258DD68(a2, (uint64_t)v7);
  if (v2)
  {

    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    return sub_1D258C76C((uint64_t)v7);
  }
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    return sub_1D258C76C((uint64_t)v7);
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  if (qword_1ED963A88 != -1)
    swift_once();
  v51 = v12;
  v16 = sub_1D26CC09C();
  v17 = (void *)__swift_project_value_buffer(v16, (uint64_t)qword_1ED977ED0);
  v18 = a2;
  v19 = sub_1D26CC084();
  v20 = sub_1D26CDCEC();
  v21 = v20;
  v22 = os_log_type_enabled(v19, v20);
  v52 = v14;
  v50 = v17;
  if (v22)
  {
    v23 = swift_slowAlloc();
    LODWORD(v49) = v21;
    v24 = (uint8_t *)v23;
    v47 = (_QWORD *)swift_slowAlloc();
    v48 = v24;
    *(_DWORD *)v24 = 138412290;
    v46 = v24 + 4;
    v54 = v18;
    v25 = v18;
    sub_1D26CDF50();
    v26 = v47;
    *v47 = v18;

    v14 = v52;
    v27 = v48;
    _os_log_impl(&dword_1D2531000, v19, (os_log_type_t)v49, "RelevanceCache rebuild insert %@", v48, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v26, -1, -1);
    MEMORY[0x1D823A5E0](v27, -1, -1);
  }
  else
  {

    v19 = v18;
  }

  v28 = sub_1D26CB898();
  v30 = v29;
  sub_1D2539514(0, &qword_1ED9620C8);
  sub_1D26CD2E4();
  v31 = (uint8_t *)sub_1D26CDD28();
  result = sub_1D253EE04(v28, v30);
  if (v31)
  {
    if (*(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
    {
      MEMORY[0x1E0C80A78](result);
      *(&v46 - 2) = v42;
      *(&v46 - 1) = v31;
      v43 = v31;
      swift_retain();
      sub_1D26CBC1C();
      swift_release();
      if ((unint64_t)sub_1D26CD2CC() >> 62)
        sub_1D26CE1F0();
      swift_bridgeObjectRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1D2592A88();
    v44 = (void *)swift_allocError();
    *v45 = 0;
    swift_willThrow();
    v32 = v51;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v51, v14, v8);
    v33 = sub_1D26CC084();
    v34 = sub_1D26CDCEC();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = swift_slowAlloc();
      v50 = v44;
      v36 = (uint8_t *)v35;
      v49 = swift_slowAlloc();
      v54 = v49;
      *(_DWORD *)v36 = 136315138;
      v48 = v36 + 4;
      sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v37 = sub_1D26CE370();
      v53 = sub_1D2537880(v37, v38, (uint64_t *)&v54);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v39 = *(void (**)(char *, uint64_t))(v9 + 8);
      v39(v32, v8);
      _os_log_impl(&dword_1D2531000, v33, v34, "Failed to append %s when rebuilding cache", v36, 0xCu);
      v40 = v49;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v40, -1, -1);
      MEMORY[0x1D823A5E0](v36, -1, -1);

      v41 = v52;
    }
    else
    {

      v39 = *(void (**)(char *, uint64_t))(v9 + 8);
      v39(v32, v8);
      v41 = v14;
    }
    return ((uint64_t (*)(char *, uint64_t))v39)(v41, v8);
  }
  return result;
}

void sub_1D259045C(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  id v6;
  uint64_t v7;

  v2 = v1;
  v3 = OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache;
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    swift_retain();
    v5 = sub_1D26CBC28();
    swift_release();
    v6 = a1;
    sub_1D2591D04(v5, v6);

    if (*(_QWORD *)(v2 + v3))
    {
      MEMORY[0x1E0C80A78](v7);
      swift_retain();
      sub_1D26CBC1C();
      swift_release();
      swift_release();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1D2590544(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  id v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;

  v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D26CE004();
    sub_1D2539514(0, &qword_1ED963C90);
    sub_1D2592A30();
    sub_1D26CDC20();
    v2 = v18;
    v17 = v19;
    v3 = v20;
    v4 = v21;
    v5 = v22;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a2 + 32);
    v17 = a2 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v2 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_27;
    }
    v14 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v14 >= v9)
      goto LABEL_30;
    v15 = *(_QWORD *)(v17 + 8 * v14);
    v12 = v4 + 1;
    if (!v15)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        goto LABEL_30;
      v15 = *(_QWORD *)(v17 + 8 * v12);
      if (!v15)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          goto LABEL_30;
        v15 = *(_QWORD *)(v17 + 8 * v12);
        if (!v15)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            goto LABEL_30;
          v15 = *(_QWORD *)(v17 + 8 * v12);
          if (!v15)
          {
            v16 = v4 + 5;
            while (v9 != v16)
            {
              v15 = *(_QWORD *)(v17 + 8 * v16++);
              if (v15)
              {
                v12 = v16 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_1D2592A28();
            return;
          }
        }
      }
    }
LABEL_26:
    v10 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v12 << 6);
LABEL_27:
    v13 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v11);
    if (!v13)
      goto LABEL_30;
    while (1)
    {
      sub_1D26CBDB4();

      v4 = v12;
      v5 = v10;
      if ((v2 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1D26CE034())
      {
        sub_1D2539514(0, &qword_1ED963C90);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v13 = v23;
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v23)
          continue;
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

uint64_t sub_1D25907E4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache;
  if (!*(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCache))
  {
    __break(1u);
    goto LABEL_7;
  }
  v4 = result;
  swift_retain();
  v5 = sub_1D26CBC28();
  swift_release();
  swift_bridgeObjectRetain();
  sub_1D25924D0(v5, v4);
  v7 = v6;
  result = swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v1 + v3);
  if (!v8)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  MEMORY[0x1E0C80A78](result);
  swift_retain();
  sub_1D26CBC1C();
  swift_release();
  if (!v2)
    v8 = sub_1D2591434(v7, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1D2648100);
  swift_release();
  return v8;
}

void sub_1D259090C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  NSObject *v11;
  unint64_t v12;
  uint64_t v13;
  id v14;
  int64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;

  v2 = a2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D26CE004();
    sub_1D2539514(0, &qword_1ED963C90);
    sub_1D2592A30();
    sub_1D26CDC20();
    v2 = v31;
    v28 = v32;
    v5 = v33;
    v4 = v34;
    v6 = v35;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v28 = a2 + 56;
    v5 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v4 = 0;
  }
  v27 = (unint64_t)(v5 + 64) >> 6;
  v10 = &unk_1ED963000;
  while (v2 < 0)
  {
    if (!sub_1D26CE034())
      goto LABEL_35;
    sub_1D2539514(0, &qword_1ED963C90);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v14 = v36;
    swift_unknownObjectRelease();
    v13 = v4;
    v30 = v6;
    if (!v36)
      goto LABEL_35;
LABEL_31:
    v29 = v13;
    if (v10[337] != -1)
      swift_once();
    v18 = sub_1D26CC09C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED977ED0);
    v19 = v14;
    v11 = sub_1D26CC084();
    v20 = sub_1D26CDCEC();
    if (os_log_type_enabled(v11, v20))
    {
      v21 = swift_slowAlloc();
      v22 = v5;
      v23 = v2;
      v24 = a1;
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v21 = 138412290;
      *(_QWORD *)(v21 + 4) = v19;
      *v25 = v14;
      _os_log_impl(&dword_1D2531000, v11, v20, "RelevanceCacheManager removing abandoned key %@", (uint8_t *)v21, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      v26 = v25;
      a1 = v24;
      v2 = v23;
      v5 = v22;
      v10 = (_QWORD *)&unk_1ED963000;
      MEMORY[0x1D823A5E0](v26, -1, -1);
      MEMORY[0x1D823A5E0](v21, -1, -1);
    }
    else
    {

      v11 = v19;
    }

    sub_1D26CBDB4();
    v4 = v29;
    v6 = v30;
  }
  if (v6)
  {
    v30 = (v6 - 1) & v6;
    v12 = __clz(__rbit64(v6)) | (v4 << 6);
    v13 = v4;
LABEL_30:
    v14 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v12);
    if (!v14)
      goto LABEL_35;
    goto LABEL_31;
  }
  v15 = v4 + 1;
  if (!__OFADD__(v4, 1))
  {
    if (v15 >= v27)
      goto LABEL_35;
    v16 = *(_QWORD *)(v28 + 8 * v15);
    v13 = v4 + 1;
    if (!v16)
    {
      v13 = v4 + 2;
      if (v4 + 2 >= v27)
        goto LABEL_35;
      v16 = *(_QWORD *)(v28 + 8 * v13);
      if (!v16)
      {
        v13 = v4 + 3;
        if (v4 + 3 >= v27)
          goto LABEL_35;
        v16 = *(_QWORD *)(v28 + 8 * v13);
        if (!v16)
        {
          v13 = v4 + 4;
          if (v4 + 4 >= v27)
            goto LABEL_35;
          v16 = *(_QWORD *)(v28 + 8 * v13);
          if (!v16)
          {
            v17 = v4 + 5;
            while (v27 != v17)
            {
              v16 = *(_QWORD *)(v28 + 8 * v17++);
              if (v16)
              {
                v13 = v17 - 1;
                goto LABEL_29;
              }
            }
LABEL_35:
            sub_1D2592A28();
            return;
          }
        }
      }
    }
LABEL_29:
    v30 = (v16 - 1) & v16;
    v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_30;
  }
  __break(1u);
}

uint64_t RelevanceCacheManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL;
  v2 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t RelevanceCacheManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  __swift_destroy_boxed_opaque_existential_1(v0 + 152);
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit21RelevanceCacheManager_relevanceCacheURL;
  v2 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t RelevanceCacheManager.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D2590DE0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1D2590DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  type metadata accessor for RelevanceCacheManager();
  v6 = swift_allocObject();
  RelevanceCacheManager.init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)(a1, a2, a3);
  return v6;
}

uint64_t sub_1D2590E58(void *a1)
{
  return sub_1D258D9D0(a1);
}

void sub_1D2590E6C(uint64_t a1, uint64_t a2)
{
  _QWORD v2[6];

  v2[3] = a1;
  v2[4] = a2;
  sub_1D258EEA4((void (*)(uint64_t *__return_ptr))sub_1D2592D70, (uint64_t)v2);
}

uint64_t sub_1D2590E9C()
{
  return sub_1D258F874();
}

void sub_1D2590EB0(void *a1)
{
  sub_1D259045C(a1);
}

uint64_t sub_1D2590EC4(uint64_t a1)
{
  return sub_1D25907E4(a1);
}

void sub_1D2590ED8(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1D258E188(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_1D2590EF4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t *v28;

  v4 = a4;
  if (!a3)
  {
    v9 = MEMORY[0x1E0DEE9E8];
LABEL_36:
    swift_release();
    return v9;
  }
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
    return v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82A38);
  result = sub_1D26CE094();
  v9 = result;
  v28 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_39;
    if (v15 >= a2)
      goto LABEL_36;
    v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= a2)
        goto LABEL_36;
      v16 = v28[v11];
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= a2)
          goto LABEL_36;
        v16 = v28[v11];
        if (!v16)
          break;
      }
    }
LABEL_23:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    v18 = *(id *)(*(_QWORD *)(v4 + 48) + 8 * v14);
    result = sub_1D26CDEC0();
    v19 = -1 << *(_BYTE *)(v9 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v21 == v24;
        if (v21 == v24)
          v21 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(_QWORD *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v22) = v18;
    ++*(_QWORD *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5)
      goto LABEL_36;
  }
  v17 = v15 + 3;
  if (v17 >= a2)
    goto LABEL_36;
  v16 = v28[v17];
  if (v16)
  {
    v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= a2)
      goto LABEL_36;
    v16 = v28[v11];
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_40:
  __break(1u);
  return result;
}

_QWORD *sub_1D2591150(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  _QWORD *v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82A28);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  swift_bridgeObjectRetain();
  v5 = sub_1D2648004(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRelease();
  if (v5 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1D2591214(uint64_t a1)
{
  return sub_1D2591434(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1D2648100);
}

_QWORD *sub_1D2591220(unint64_t a1)
{
  return sub_1D2591238(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1D25F6F1C);
}

_QWORD *sub_1D259122C(unint64_t a1)
{
  return sub_1D2591238(a1, (void (*)(_QWORD *, uint64_t, unint64_t))sub_1D25F7130);
}

_QWORD *sub_1D2591238(unint64_t a1, void (*a2)(_QWORD *, uint64_t, unint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  void (*v8)(_QWORD *, uint64_t, unint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  while (1)
  {
    if (v4 <= 0)
    {
      v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D568);
      v5 = (_QWORD *)swift_allocObject();
      v6 = _swift_stdlib_malloc_size(v5);
      v7 = v6 - 32;
      if (v6 < 32)
        v7 = v6 - 25;
      v5[2] = v4;
      v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(_QWORD *, uint64_t, unint64_t))v4)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v4 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (!v4)
      return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v5;
}

_QWORD *sub_1D2591338(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962168);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  v5 = sub_1D264811C((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1D2592A28();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t sub_1D2591428(uint64_t a1)
{
  return sub_1D2591434(a1, (uint64_t (*)(uint64_t *, _QWORD *, uint64_t, uint64_t))sub_1D2648328);
}

uint64_t sub_1D2591434(uint64_t a1, uint64_t (*a2)(uint64_t *, _QWORD *, uint64_t, uint64_t))
{
  uint64_t v4;
  _QWORD *v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  if ((a1 & 0xC000000000000001) != 0)
  {
    v4 = sub_1D26CE010();
    if (v4)
      goto LABEL_3;
    return MEMORY[0x1E0DEE9D8];
  }
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
    return MEMORY[0x1E0DEE9D8];
LABEL_3:
  if (v4 <= 0)
  {
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D568);
    v5 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v5);
    v7 = v6 - 32;
    if (v6 < 32)
      v7 = v6 - 25;
    v5[2] = v4;
    v5[3] = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  v8 = a2(&v10, v5 + 4, v4, a1);
  result = sub_1D2592A28();
  if (v8 == v4)
    return (uint64_t)v5;
  __break(1u);
  return result;
}

_QWORD *sub_1D2591538(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D568);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = (2 * (v5 >> 3)) | 1;
  v6 = sub_1D264863C(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1D2592A28();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

void (*sub_1D2591620(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1D25916CC(v6, a2, a3);
  return sub_1D2591674;
}

void (*sub_1D2591678(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(_QWORD *)
{
  void (*v6)(id *);

  v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_1D2591738(v6, a2, a3);
  return sub_1D2591674;
}

uint64_t (*sub_1D25916CC(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t (*v3)();
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1D8239890](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return j__s9ChronoKit16LayerSnapshotterC14SupportedLayerOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1D2591738(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  void (*v3)(id *);
  id v4;

  v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = (id)MEMORY[0x1D8239890](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(_QWORD *)v3 = v4;
    return destroy for LayerSnapshotter.SupportedLayer;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D25917A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;

  v16 = MEMORY[0x1E0DEE9D8];
  v2 = a1 + 64;
  v3 = 1 << *(_BYTE *)(a1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v6 = (unint64_t)(v3 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v6)
      goto LABEL_23;
    v13 = *(_QWORD *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      v8 = v12 + 1;
      if (v12 + 1 >= v6)
        goto LABEL_23;
      v13 = *(_QWORD *)(v2 + 8 * v8);
      if (!v13)
      {
        v8 = v12 + 2;
        if (v12 + 2 >= v6)
          goto LABEL_23;
        v13 = *(_QWORD *)(v2 + 8 * v8);
        if (!v13)
        {
          v8 = v12 + 3;
          if (v12 + 3 >= v6)
            goto LABEL_23;
          v13 = *(_QWORD *)(v2 + 8 * v8);
          if (!v13)
            break;
        }
      }
    }
LABEL_22:
    v5 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_5:
    v11 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_bridgeObjectRelease();

    result = sub_1D25F6A30(v15);
  }
  v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_23:
    swift_release();
    return v16;
  }
  v13 = *(_QWORD *)(v2 + 8 * v14);
  if (v13)
  {
    v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v8 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v8 >= v6)
      goto LABEL_23;
    v13 = *(_QWORD *)(v2 + 8 * v8);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1D2591958(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  void *v11;
  id v12;
  id v13;
  char v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v19;
  uint64_t v21;
  int64_t v22;

  v19 = a2;
  v4 = 0;
  v5 = a3 + 56;
  v6 = 1 << *(_BYTE *)(a3 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a3 + 56);
  v22 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v10 = v9 | (v4 << 6);
      goto LABEL_5;
    }
    v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v22)
      goto LABEL_24;
    v16 = *(_QWORD *)(v5 + 8 * v15);
    ++v4;
    if (!v16)
    {
      v4 = v15 + 1;
      if (v15 + 1 >= v22)
        goto LABEL_24;
      v16 = *(_QWORD *)(v5 + 8 * v4);
      if (!v16)
      {
        v4 = v15 + 2;
        if (v15 + 2 >= v22)
          goto LABEL_24;
        v16 = *(_QWORD *)(v5 + 8 * v4);
        if (!v16)
          break;
      }
    }
LABEL_20:
    v8 = (v16 - 1) & v16;
    v10 = __clz(__rbit64(v16)) + (v4 << 6);
LABEL_5:
    v11 = *(void **)(*(_QWORD *)(a3 + 48) + 8 * v10);
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
    v12 = v11;
    v13 = objc_msgSend(v12, sel_extensionIdentity, v19);
    v14 = sub_1D26CDECC();

    if ((v14 & 1) != 0)
    {
      *(unint64_t *)((char *)a1 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        sub_1D2590EF4(a1, v19, v21, a3);
        return;
      }
    }
  }
  v17 = v15 + 3;
  if (v17 >= v22)
    goto LABEL_24;
  v16 = *(_QWORD *)(v5 + 8 * v17);
  if (v16)
  {
    v4 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    v4 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v4 >= v22)
      goto LABEL_24;
    v16 = *(_QWORD *)(v5 + 8 * v4);
    ++v17;
    if (v16)
      goto LABEL_20;
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1D2591B58(uint64_t a1, void *a2)
{
  uint64_t v2;
  char v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t isStackAllocationSafe;
  void *v8;
  char *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  _QWORD v17[2];

  v17[1] = *MEMORY[0x1E0C80C00];
  v4 = *(_BYTE *)(a1 + 32);
  v5 = v4 & 0x3F;
  v6 = (unint64_t)((1 << v4) + 63) >> 6;
  isStackAllocationSafe = a2;
  v8 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    v9 = (char *)v17 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v9, 8 * v6);
    v10 = v8;
    sub_1D2591958((unint64_t *)v9, v6, a1);
    v12 = v11;
    swift_release();

    if (v2)
      swift_willThrow();

  }
  else
  {
    v13 = (void *)swift_slowAlloc();
    bzero(v13, 8 * v6);
    v14 = v8;
    sub_1D2591958((unint64_t *)v13, v6, a1);
    v12 = v15;
    swift_release();

    MEMORY[0x1D823A5E0](v13, -1, -1);
  }
  return v12;
}

uint64_t sub_1D2591D04(uint64_t a1, void *a2)
{
  uint64_t v2;
  id v3;
  id v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  BOOL v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;

  if ((a1 & 0xC000000000000001) == 0)
    return sub_1D2591B58(a1, a2);
  v2 = MEMORY[0x1E0DEE9E8];
  v19 = MEMORY[0x1E0DEE9E8];
  v3 = a2;
  sub_1D26CE004();
  if (sub_1D26CE034())
  {
    sub_1D2539514(0, &qword_1ED963C90);
    do
    {
      swift_dynamicCast();
      sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
      v4 = objc_msgSend(v18, sel_extensionIdentity);
      v5 = sub_1D26CDECC();

      if ((v5 & 1) != 0)
      {
        v6 = v19;
        v7 = *(_QWORD *)(v19 + 16);
        if (*(_QWORD *)(v19 + 24) <= v7)
        {
          sub_1D25F197C(v7 + 1);
          v6 = v19;
        }
        result = sub_1D26CDEC0();
        v9 = v6 + 56;
        v10 = -1 << *(_BYTE *)(v6 + 32);
        v11 = result & ~v10;
        v12 = v11 >> 6;
        if (((-1 << v11) & ~*(_QWORD *)(v6 + 56 + 8 * (v11 >> 6))) != 0)
        {
          v13 = __clz(__rbit64((-1 << v11) & ~*(_QWORD *)(v6 + 56 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v14 = 0;
          v15 = (unint64_t)(63 - v10) >> 6;
          do
          {
            if (++v12 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v16 = v12 == v15;
            if (v12 == v15)
              v12 = 0;
            v14 |= v16;
            v17 = *(_QWORD *)(v9 + 8 * v12);
          }
          while (v17 == -1);
          v13 = __clz(__rbit64(~v17)) + (v12 << 6);
        }
        *(_QWORD *)(v9 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
        *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v13) = v18;
        ++*(_QWORD *)(v6 + 16);
      }
      else
      {

      }
    }
    while (sub_1D26CE034());
    v2 = v19;
  }

  swift_release();
  return v2;
}

void sub_1D2591F64(uint64_t a1)
{
  uint64_t v1;

  sub_1D2590544(a1, *(_QWORD *)(v1 + 16));
}

void sub_1D2591F7C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  void *v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  char v27;
  id v29;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;

  v5 = a3;
  v6 = 0;
  v33 = 0;
  v34 = a3 + 56;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 56);
  v35 = (unint64_t)(v7 + 63) >> 6;
  v36 = a4 & 0xFFFFFFFFFFFFFF8;
  v38 = a4 & 0xC000000000000001;
  while (1)
  {
LABEL_5:
    if (v9)
    {
      v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v11 = v10 | (v6 << 6);
      goto LABEL_21;
    }
    v12 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_50;
    if (v12 >= v35)
    {
LABEL_47:
      swift_retain();
      sub_1D2590EF4(a1, a2, v33, v5);
      return;
    }
    v13 = *(_QWORD *)(v34 + 8 * v12);
    ++v6;
    if (!v13)
    {
      v6 = v12 + 1;
      if (v12 + 1 >= v35)
        goto LABEL_47;
      v13 = *(_QWORD *)(v34 + 8 * v6);
      if (!v13)
      {
        v6 = v12 + 2;
        if (v12 + 2 >= v35)
          goto LABEL_47;
        v13 = *(_QWORD *)(v34 + 8 * v6);
        if (!v13)
          break;
      }
    }
LABEL_20:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
LABEL_21:
    v15 = *(void **)(*(_QWORD *)(v5 + 48) + 8 * v11);
    if (a4 >> 62)
    {
      v29 = v15;
      swift_bridgeObjectRetain();
      v16 = sub_1D26CE1F0();
      if (!v16)
      {
LABEL_45:

        swift_bridgeObjectRelease();
        goto LABEL_39;
      }
    }
    else
    {
      v16 = *(_QWORD *)(v36 + 16);
      v17 = v15;
      swift_bridgeObjectRetain();
      if (!v16)
        goto LABEL_45;
    }
    v37 = v11;
    if (v38)
      v18 = (id)MEMORY[0x1D8239890](0, a4);
    else
      v18 = *(id *)(a4 + 32);
    v19 = v18;
    sub_1D2539514(0, &qword_1ED963C90);
    v20 = sub_1D26CDECC();

    if ((v20 & 1) != 0)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      if (v16 != 1)
      {
        if (v38)
        {
          v21 = 1;
          while (1)
          {
            MEMORY[0x1D8239890](v21, a4);
            v22 = v21 + 1;
            if (__OFADD__(v21, 1))
              break;
            v23 = sub_1D26CDECC();
            swift_unknownObjectRelease();
            if ((v23 & 1) != 0)
              goto LABEL_42;
            ++v21;
            if (v22 == v16)
              goto LABEL_37;
          }
          __break(1u);
        }
        else
        {
          v24 = 5;
          while (1)
          {
            v25 = v24 - 3;
            if (__OFADD__(v24 - 4, 1))
              break;
            v26 = *(id *)(a4 + 8 * v24);
            v27 = sub_1D26CDECC();

            if ((v27 & 1) != 0)
            {
LABEL_42:

              swift_bridgeObjectRelease();
              v5 = a3;
              goto LABEL_5;
            }
            ++v24;
            if (v25 == v16)
            {
LABEL_37:

              swift_bridgeObjectRelease();
              v5 = a3;
              goto LABEL_38;
            }
          }
        }
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }

      swift_bridgeObjectRelease();
LABEL_38:
      v11 = v37;
LABEL_39:
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v33++, 1))
        goto LABEL_51;
    }
  }
  v14 = v12 + 3;
  if (v14 >= v35)
    goto LABEL_47;
  v13 = *(_QWORD *)(v34 + 8 * v14);
  if (v13)
  {
    v6 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v35)
      goto LABEL_47;
    v13 = *(_QWORD *)(v34 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_20;
  }
LABEL_52:
  __break(1u);
}

uint64_t sub_1D259230C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  char v5;
  unsigned int v6;
  unint64_t v7;
  size_t v8;
  uint64_t isStackAllocationSafe;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  _QWORD v15[2];

  v15[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v7 = (unint64_t)((1 << v5) + 63) >> 6;
  v8 = 8 * v7;
  isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_1D2591F7C((_QWORD *)((char *)v15 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    v11 = v10;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2)
      swift_willThrow();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    sub_1D2591F7C((unint64_t *)v12, v7, a1, a2);
    v11 = v13;
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1D823A5E0](v12, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

void sub_1D25924D0(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  unint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  char v25;
  unint64_t v26;
  void *v27;
  uint64_t v28;

  if ((a1 & 0xC000000000000001) == 0)
  {
    sub_1D259230C(a1, a2);
    return;
  }
  v28 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRetain();
  sub_1D26CE004();
  if (!sub_1D26CE034())
  {
LABEL_40:
    swift_bridgeObjectRelease();
    swift_release();
    return;
  }
  sub_1D2539514(0, &qword_1ED963C90);
  v26 = a2 & 0xC000000000000001;
  while (1)
  {
    swift_dynamicCast();
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1D26CE1F0();
      if (!v9)
        goto LABEL_14;
    }
    else
    {
      v9 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v9)
        goto LABEL_14;
    }
    v10 = v26 ? (id)MEMORY[0x1D8239890](0, a2) : *(id *)(a2 + 32);
    v11 = v10;
    v12 = sub_1D26CDECC();

    if ((v12 & 1) == 0)
      break;
LABEL_35:
    swift_bridgeObjectRelease();

LABEL_7:
    if (!sub_1D26CE034())
      goto LABEL_40;
  }
  if (v9 == 1)
  {
LABEL_14:
    swift_bridgeObjectRelease();
    v13 = v28;
    v14 = *(_QWORD *)(v28 + 16);
    if (*(_QWORD *)(v28 + 24) <= v14)
    {
      sub_1D25F197C(v14 + 1);
      v13 = v28;
    }
    v3 = sub_1D26CDEC0();
    v4 = v13 + 56;
    v5 = -1 << *(_BYTE *)(v13 + 32);
    v6 = v3 & ~v5;
    v7 = v6 >> 6;
    if (((-1 << v6) & ~*(_QWORD *)(v13 + 56 + 8 * (v6 >> 6))) != 0)
    {
      v8 = __clz(__rbit64((-1 << v6) & ~*(_QWORD *)(v13 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v15 = 0;
      v16 = (unint64_t)(63 - v5) >> 6;
      do
      {
        if (++v7 == v16 && (v15 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v17 = v7 == v16;
        if (v7 == v16)
          v7 = 0;
        v15 |= v17;
        v18 = *(_QWORD *)(v4 + 8 * v7);
      }
      while (v18 == -1);
      v8 = __clz(__rbit64(~v18)) + (v7 << 6);
    }
    *(_QWORD *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
    *(_QWORD *)(*(_QWORD *)(v13 + 48) + 8 * v8) = v27;
    ++*(_QWORD *)(v13 + 16);
    goto LABEL_7;
  }
  if (v26)
  {
    v19 = 1;
    while (1)
    {
      MEMORY[0x1D8239890](v19, a2);
      v20 = v19 + 1;
      if (__OFADD__(v19, 1))
        break;
      v21 = sub_1D26CDECC();
      swift_unknownObjectRelease();
      if ((v21 & 1) != 0)
        goto LABEL_35;
      ++v19;
      if (v20 == v9)
        goto LABEL_14;
    }
LABEL_41:
    __break(1u);
  }
  else
  {
    v22 = 5;
    while (1)
    {
      v23 = v22 - 3;
      if (__OFADD__(v22 - 4, 1))
        break;
      v24 = *(id *)(a2 + 8 * v22);
      v25 = sub_1D26CDECC();

      if ((v25 & 1) != 0)
        goto LABEL_35;
      ++v22;
      if (v23 == v9)
        goto LABEL_14;
    }
  }
  __break(1u);
}

void sub_1D2592854(uint64_t a1)
{
  uint64_t v1;

  sub_1D259090C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D259286C(uint64_t a1)
{
  uint64_t result;

  result = sub_1D25369B0(&qword_1ED96B108, (uint64_t (*)(uint64_t))type metadata accessor for RelevanceCacheManager, (uint64_t)&protocol conformance descriptor for RelevanceCacheManager);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for RelevanceCacheManager()
{
  uint64_t result;

  result = qword_1ED963B28;
  if (!qword_1ED963B28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D25928E4()
{
  return type metadata accessor for RelevanceCacheManager();
}

uint64_t sub_1D25928EC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB880();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for RelevanceCacheManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RelevanceCacheManager.__allocating_init(cacheKeyProvider:descriptorProvider:relevanceCacheUrl:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of RelevanceCacheManager.archiveFilePromise(relevanceKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of RelevanceCacheManager.ingestFetchResult(for:at:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of RelevanceCacheManager.rebuildCache()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of RelevanceCacheManager.remove(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of RelevanceCacheManager.removeAll(keeping:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t sub_1D2592A28()
{
  return swift_release();
}

unint64_t sub_1D2592A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC82A30;
  if (!qword_1EFC82A30)
  {
    v1 = sub_1D2539514(255, &qword_1ED963C90);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC82A30);
  }
  return result;
}

unint64_t sub_1D2592A88()
{
  unint64_t result;

  result = qword_1EFC82A40;
  if (!qword_1EFC82A40)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D2FA0, &type metadata for RelevanceCacheManagerErrorCode);
    atomic_store(result, (unint64_t *)&qword_1EFC82A40);
  }
  return result;
}

void sub_1D2592ACC(uint64_t a1)
{
  uint64_t v1;

  sub_1D258E360(a1, *(void **)(v1 + 16));
}

void destroy for RelevanceCacheManagerErrorCode(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if (v2 - 1 < 0)

}

_QWORD *_s9ChronoKit30RelevanceCacheManagerErrorCodeOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if ((int)v4 - 1 < 0)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for RelevanceCacheManagerErrorCode(void **a1, void **a2)
{
  void *v3;
  void *v4;
  void *v5;
  int v6;
  void *v7;
  int v8;
  id v9;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v5) = -1;
  else
    v5 = *a1;
  v6 = (_DWORD)v5 - 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      v11 = v7;
      *a1 = v7;

    }
    else
    {

      *a1 = *a2;
    }
  }
  else
  {
    if (v8 < 0)
      v9 = v7;
    *a1 = v7;
  }
  return a1;
}

void **assignWithTake for RelevanceCacheManagerErrorCode(void **a1, unint64_t *a2)
{
  void *v3;
  int v4;
  unint64_t v5;
  unint64_t v6;

  v3 = *a1;
  v4 = -1;
  if ((unint64_t)v3 < 0xFFFFFFFF)
    v4 = (int)v3;
  v5 = *a2;
  if (v4 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if (v5 < 0xFFFFFFFF)
      v6 = *a2;
    if ((int)v6 - 1 < 0)
    {
      *a1 = (void *)v5;

      return a1;
    }

  }
  *a1 = (void *)v5;
  return a1;
}

uint64_t getEnumTagSinglePayload for RelevanceCacheManagerErrorCode(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = v4 + 1;
  v6 = v4 - 2;
  if (v5 >= 4)
    return v6;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RelevanceCacheManagerErrorCode(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

uint64_t sub_1D2592D00(uint64_t *a1)
{
  uint64_t v1;
  int v2;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

_QWORD *sub_1D2592D24(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    a2 -= 0x7FFFFFFF;
    goto LABEL_5;
  }
  if (a2)
LABEL_5:
    *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for RelevanceCacheManagerErrorCode()
{
  return &type metadata for RelevanceCacheManagerErrorCode;
}

void sub_1D2592D5C(uint64_t a1)
{
  sub_1D2592ACC(a1);
}

void sub_1D2592D70(uint64_t *a1@<X8>)
{
  sub_1D2590ED8(a1);
}

uint64_t sub_1D2592D88()
{
  return sub_1D2593008(&qword_1EFC82A48, &qword_1EFC82A50, MEMORY[0x1E0C95F48]);
}

uint64_t sub_1D2592DA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2593210(&OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, a1);
}

uint64_t sub_1D2592DB0(uint64_t a1)
{
  return sub_1D2593284(a1, &OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, (void (*)(char *))MEMORY[0x1E0C95F08]);
}

void (*sub_1D2592DC4(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_1D26CD488();
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = malloc(*(_QWORD *)(v5 + 64));
  v7 = OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  v3[6] = v6;
  v3[7] = v7;
  swift_beginAccess();
  return sub_1D2592E48;
}

void sub_1D2592E48(_QWORD **a1, char a2)
{
  sub_1D2593404(a1, a2, (void (*)(void *))MEMORY[0x1E0C95F08]);
}

uint64_t sub_1D2592E54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FixedDataProtectionMonitor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t FixedDataProtectionMonitor.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2592F5C(uint64_t a1, uint64_t a2)
{
  return sub_1D2594058(a1, a2, &qword_1EFC82A48, &qword_1EFC82A50, MEMORY[0x1E0C95F48]);
}

uint64_t sub_1D2592F78@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2534728(&OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, a1);
}

uint64_t sub_1D2592F84@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D2592FEC()
{
  return sub_1D2593008(&qword_1ED96FD00, &qword_1ED96FCF8, MEMORY[0x1E0C95FB8]);
}

uint64_t sub_1D2593008(uint64_t *a1, unint64_t *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a1);
  sub_1D2536488(a2, a1, a3);
  return sub_1D26CC204();
}

uint64_t sub_1D2593074@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1 + *a2;
  swift_beginAccess();
  v5 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v4, v5);
}

uint64_t sub_1D25930D8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5, void (*a6)(char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v10 = sub_1D26CD488();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v21 - v15;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17((char *)&v21 - v15, a1, v10);
  v18 = *a2 + *a5;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 24))(v18, v16, v10);
  swift_endAccess();
  v17(v14, v18, v10);
  a6(v14);
  v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v14, v10);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v10);
}

uint64_t sub_1D2593204@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2593210(&OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, a1);
}

uint64_t sub_1D2593210@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  swift_beginAccess();
  v5 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1D2593270(uint64_t a1)
{
  return sub_1D2593284(a1, &OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, (void (*)(char *))MEMORY[0x1E0C95F60]);
}

uint64_t sub_1D2593284(uint64_t a1, _QWORD *a2, void (*a3)(char *))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t);
  uint64_t v14;

  v7 = sub_1D26CD488();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v3 + *a2;
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, a1, v7);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  a3(v10);
  v12 = *(void (**)(char *, uint64_t))(v8 + 8);
  v12(v10, v7);
  return ((uint64_t (*)(uint64_t, uint64_t))v12)(a1, v7);
}

void (*sub_1D2593374(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = sub_1D26CD488();
  v3[4] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[5] = v5;
  v6 = malloc(*(_QWORD *)(v5 + 64));
  v7 = OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
  v3[6] = v6;
  v3[7] = v7;
  swift_beginAccess();
  return sub_1D25933F8;
}

void sub_1D25933F8(_QWORD **a1, char a2)
{
  sub_1D2593404(a1, a2, (void (*)(void *))MEMORY[0x1E0C95F60]);
}

void sub_1D2593404(_QWORD **a1, char a2, void (*a3)(void *))
{
  _QWORD *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *a1;
  swift_endAccess();
  v6 = (void *)v5[6];
  if ((a2 & 1) == 0)
  {
    v7 = v5[4];
    v8 = v5[5];
    (*(void (**)(_QWORD, _QWORD, uint64_t))(v8 + 16))(v5[6], v5[3] + v5[7], v7);
    a3(v6);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  free(v6);
  free(v5);
}

uint64_t DataProtectionMonitor.keybagStateProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider, a1);
}

uint64_t DataProtectionMonitor.__allocating_init(keybagStateProvider:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DataProtectionMonitor.init(keybagStateProvider:)(a1);
  return v2;
}

uint64_t *DataProtectionMonitor.init(keybagStateProvider:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  uint64_t v10;

  v3 = *v1;
  v4 = sub_1D26CD488();
  MEMORY[0x1E0C80A78](v4);
  v6 = *MEMORY[0x1E0CF0420];
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  v8((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v6, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD00);
  swift_allocObject();
  v1[2] = sub_1D26CC174();
  *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_token) = 0;
  sub_1D2538510((uint64_t)a1, (uint64_t)v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider);
  v8((char *)v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, v6, v4);
  sub_1D25935FC((uint64_t)v1, a1, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_1D25935FC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v55 = a1;
  v56 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FAF0);
  v5 = *(_QWORD *)(v4 - 8);
  v49 = v4;
  v50 = v5;
  MEMORY[0x1E0C80A78](v4);
  v46 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FBA8);
  v8 = *(_QWORD *)(v7 - 8);
  v51 = v7;
  v52 = v8;
  MEMORY[0x1E0C80A78](v7);
  v47 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB98);
  v11 = *(_QWORD *)(v10 - 8);
  v53 = v10;
  v54 = v11;
  MEMORY[0x1E0C80A78](v10);
  v48 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_1D26CBC4C();
  v13 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D26CBC64();
  v43 = *(_QWORD *)(v16 - 8);
  v44 = v16;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1D26CD488();
  v19 = *(_QWORD *)(v45 - 8);
  v20 = MEMORY[0x1E0C80A78](v45);
  v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v42 - v23;
  __swift_project_boxed_opaque_existential_0(a2, a2[3]);
  sub_1D26CBCD0();
  __swift_project_boxed_opaque_existential_0(a2, a2[3]);
  v25 = sub_1D26CBCE8();
  v26 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0D0F8A0], v42);
  sub_1D2593D8C((uint64_t)v18, v25 & 1, (uint64_t)v15, (uint64_t)v24);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v26);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v44);
  v27 = v55 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
  swift_beginAccess();
  v28 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v19 + 24))(v27, v24, v45);
  swift_endAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v22, v27, v28);
  sub_1D26CC168();
  v29 = *(void (**)(char *, uint64_t))(v19 + 8);
  v29(v22, v28);
  v29(v24, v28);
  __swift_project_boxed_opaque_existential_0(a2, a2[3]);
  v58 = sub_1D26CBCDC();
  __swift_project_boxed_opaque_existential_0(a2, a2[3]);
  v57 = sub_1D26CBCF4();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FBB8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCF0);
  v30 = MEMORY[0x1E0C95D90];
  sub_1D2536488(&qword_1ED96FBB0, &qword_1ED96FBB8, MEMORY[0x1E0C95D90]);
  sub_1D2536488(&qword_1ED96FCE8, &qword_1ED96FCF0, v30);
  v31 = v46;
  sub_1D26CC21C();
  swift_release();
  swift_release();
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v56;
  v33 = swift_allocObject();
  *(_QWORD *)(v33 + 16) = sub_1D259465C;
  *(_QWORD *)(v33 + 24) = v32;
  sub_1D2536488(&qword_1ED96FB88, &qword_1ED96FAF0, MEMORY[0x1E0C95698]);
  v34 = v47;
  v35 = v49;
  sub_1D26CC228();
  swift_release();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v31, v35);
  sub_1D2536488(&qword_1ED96FBA0, &qword_1ED96FBA8, MEMORY[0x1E0C95950]);
  sub_1D25946D4();
  v36 = v48;
  v37 = v51;
  sub_1D26CC27C();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v34, v37);
  swift_allocObject();
  v38 = v55;
  swift_weakInit();
  sub_1D2536488(&qword_1ED96FB90, &qword_1ED96FB98, MEMORY[0x1E0C958E0]);
  v39 = v53;
  v40 = sub_1D26CC288();
  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v39);
  *(_QWORD *)(v38 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_token) = v40;
  return swift_release();
}

uint64_t DataProtectionMonitor.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_token))
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  swift_release();
  v2 = v0 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
  v3 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider);
  swift_release();
  return v1;
}

uint64_t DataProtectionMonitor.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_token))
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  swift_release();
  v2 = v0 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
  v3 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1(v1 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2593C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD *v9;
  char v10;
  uint64_t v12;

  v5 = sub_1D26CBC64();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider), *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_keybagStateProvider + 24));
  sub_1D26CBCD0();
  __swift_project_boxed_opaque_existential_0(v9, v9[3]);
  v10 = sub_1D26CBCE8();
  sub_1D2593D8C((uint64_t)v8, v10 & 1, a1, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D2593D8C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unsigned int *v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int *v27;
  int v30;
  uint64_t v31;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB80);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = &v11[*(int *)(v9 + 48)];
  v13 = sub_1D26CBC64();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v11, a1, v13);
  v15 = sub_1D26CBC4C();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v12, a3, v15);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v11, v13);
  if (v17 == *MEMORY[0x1E0D0F8F8])
  {
    v18 = *MEMORY[0x1E0CF0420];
    v19 = sub_1D26CD488();
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104);
    v21 = a4;
    v22 = v18;
LABEL_3:
    v20(v21, v22, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v12, v15);
  }
  if (v17 == *MEMORY[0x1E0D0F908])
    goto LABEL_5;
  if (v17 == *MEMORY[0x1E0D0F8E8])
  {
    v19 = sub_1D26CD488();
    v27 = (unsigned int *)MEMORY[0x1E0CF0418];
    v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 104);
    if ((a2 & 1) == 0)
      v27 = (unsigned int *)MEMORY[0x1E0CF0420];
    v22 = *v27;
    v21 = a4;
    goto LABEL_3;
  }
  if (v17 == *MEMORY[0x1E0D0F8F0])
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
LABEL_15:
    v24 = (unsigned int *)MEMORY[0x1E0CF0410];
    goto LABEL_7;
  }
  if (v17 != *MEMORY[0x1E0D0F900] && v17 != *MEMORY[0x1E0D0F8D8] && v17 != *MEMORY[0x1E0D0F8D0])
  {
    if (v17 == *MEMORY[0x1E0D0F8C8])
    {
      v30 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v12, v15);
      if (v30 == *MEMORY[0x1E0D0F890])
        goto LABEL_15;
      if (v30 == *MEMORY[0x1E0D0F8A0])
        goto LABEL_6;
LABEL_28:
      result = sub_1D26CE3C4();
      __break(1u);
      return result;
    }
    if (v17 != *MEMORY[0x1E0D0F8C0])
      goto LABEL_28;
  }
LABEL_5:
  (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v15);
LABEL_6:
  v24 = (unsigned int *)MEMORY[0x1E0CF0408];
LABEL_7:
  v25 = *v24;
  v26 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(a4, v25, v26);
}

uint64_t sub_1D259403C(uint64_t a1, uint64_t a2)
{
  return sub_1D2594058(a1, a2, &qword_1ED96FD00, &qword_1ED96FCF8, MEMORY[0x1E0C95FB8]);
}

uint64_t sub_1D2594058(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_1D2536488(a4, a3, a5);
  return sub_1D26CC204();
}

uint64_t sub_1D25940CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2593C94(a1, a2);
}

uint64_t sub_1D25940EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2593074(a1, &OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, a2);
}

uint64_t sub_1D2594108(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25930D8(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit26FixedDataProtectionMonitor_maxUnlockedProtectionLevel, (void (*)(char *))MEMORY[0x1E0C95F08]);
}

uint64_t sub_1D259412C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D2593074(a1, &OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, a2);
}

uint64_t sub_1D2594148(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25930D8(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel, (void (*)(char *))MEMORY[0x1E0C95F60]);
}

uint64_t sub_1D259416C()
{
  return type metadata accessor for FixedDataProtectionMonitor(0);
}

uint64_t type metadata accessor for FixedDataProtectionMonitor(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1EFC82A58);
}

uint64_t sub_1D2594188()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CD488();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FixedDataProtectionMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.maxUnlockedProtectionLevelPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.maxUnlockedProtectionLevel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.maxUnlockedProtectionLevel.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.maxUnlockedProtectionLevel.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of FixedDataProtectionMonitor.unlockedProtectionLevel(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t sub_1D259424C()
{
  return type metadata accessor for DataProtectionMonitor(0);
}

uint64_t type metadata accessor for DataProtectionMonitor(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED96FD10);
}

uint64_t sub_1D2594268()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CD488();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DataProtectionMonitor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DataProtectionMonitor.maxUnlockedProtectionLevelPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DataProtectionMonitor.maxUnlockedProtectionLevel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DataProtectionMonitor.maxUnlockedProtectionLevel.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DataProtectionMonitor.maxUnlockedProtectionLevel.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DataProtectionMonitor.__allocating_init(keybagStateProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DataProtectionMonitor.unlockedProtectionLevel(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t sub_1D2594348@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  int v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t result;
  unsigned int *v26;
  int v29;
  _BYTE v30[4];
  int v31;
  uint64_t v32;

  v31 = a2;
  v32 = a3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB80);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v30[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1D26CBC4C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *MEMORY[0x1E0D0F8A0];
  (*(void (**)(_BYTE *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0D0F8A0], v7);
  v12 = &v6[*(int *)(v4 + 48)];
  v13 = sub_1D26CBC64();
  v14 = *(_QWORD *)(v13 - 8);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v6, a1, v13);
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 16))(v12, v10, v7);
  v15 = (*(uint64_t (**)(_BYTE *, uint64_t))(v14 + 88))(v6, v13);
  if (v15 == *MEMORY[0x1E0D0F8F8])
  {
    v16 = *MEMORY[0x1E0CF0420];
    v17 = sub_1D26CD488();
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104);
    v19 = v32;
    v20 = v16;
LABEL_3:
    v18(v19, v20, v17);
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v12, v7);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
  v21 = v32;
  if (v15 == *MEMORY[0x1E0D0F908])
    goto LABEL_5;
  if (v15 == *MEMORY[0x1E0D0F8E8])
  {
    v17 = sub_1D26CD488();
    v26 = (unsigned int *)MEMORY[0x1E0CF0418];
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104);
    if ((v31 & 1) == 0)
      v26 = (unsigned int *)MEMORY[0x1E0CF0420];
    v20 = *v26;
    v19 = v21;
    goto LABEL_3;
  }
  if (v15 == *MEMORY[0x1E0D0F8F0])
  {
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v12, v7);
LABEL_15:
    v22 = (unsigned int *)MEMORY[0x1E0CF0410];
    goto LABEL_7;
  }
  if (v15 == *MEMORY[0x1E0D0F900] || v15 == *MEMORY[0x1E0D0F8D8] || v15 == *MEMORY[0x1E0D0F8D0])
    goto LABEL_5;
  if (v15 != *MEMORY[0x1E0D0F8C8])
  {
    if (v15 != *MEMORY[0x1E0D0F8C0])
      goto LABEL_28;
LABEL_5:
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v12, v7);
LABEL_6:
    v22 = (unsigned int *)MEMORY[0x1E0CF0408];
LABEL_7:
    v23 = *v22;
    v24 = sub_1D26CD488();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 104))(v21, v23, v24);
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
  v29 = (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 88))(v12, v7);
  if (v29 == *MEMORY[0x1E0D0F890])
    goto LABEL_15;
  if (v29 == v11)
    goto LABEL_6;
LABEL_28:
  result = sub_1D26CE3C4();
  __break(1u);
  return result;
}

uint64_t sub_1D259464C()
{
  return swift_deallocObject();
}

uint64_t sub_1D259465C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return sub_1D2594348(a1, a2, a3);
}

uint64_t sub_1D2594664()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2594688(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, _QWORD);
  uint64_t v4;

  v3 = *(uint64_t (**)(uint64_t, _QWORD))(v1 + 16);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82A68);
  return v3(a1, *(unsigned __int8 *)(a1 + *(int *)(v4 + 48)));
}

unint64_t sub_1D25946D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96FC88;
  if (!qword_1ED96FC88)
  {
    v1 = sub_1D26CD488();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CF0450], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96FC88);
  }
  return result;
}

uint64_t sub_1D259471C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2594740(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t result;
  uint64_t v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  _BYTE v14[24];

  v2 = sub_1D26CD488();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = &v14[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v4);
  v8 = &v14[-v7];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    v11 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16);
    v11(v8, a1, v2);
    v12 = v10 + OBJC_IVAR____TtC9ChronoKit21DataProtectionMonitor_maxUnlockedProtectionLevel;
    swift_beginAccess();
    (*(void (**)(uint64_t, _BYTE *, uint64_t))(v3 + 24))(v12, v8, v2);
    swift_endAccess();
    v11(v6, v12, v2);
    sub_1D26CC168();
    v13 = *(void (**)(_BYTE *, uint64_t))(v3 + 8);
    v13(v6, v2);
    v13(v8, v2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D259488C(uint64_t a1)
{
  return sub_1D2594740(a1);
}

uint64_t sub_1D2594894(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1D259489C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1D25948A4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1D25948AC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_1D25948B4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t sub_1D25948BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t sub_1D25948D4()
{
  uint64_t v0;

  MEMORY[0x1D823A5E0](*(_QWORD *)(v0 + 16), -1, -1);
  return swift_deallocClassInstance();
}

uint64_t Topic.suffixed.getter()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  return v2;
}

uint64_t static Topic.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1D26CE3D0();
}

ChronoKit::Topic __swiftcall Topic.init(_:)(ChronoKit::Topic result)
{
  ChronoKit::Topic *v1;

  *v1 = result;
  return result;
}

uint64_t Topic.unsuffixed.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

ChronoKit::Topic __swiftcall Topic.init(suffixed:)(Swift::String suffixed)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  ChronoKit::Topic result;

  v2 = v1;
  v3 = sub_1D26CDA28();
  if ((v3 & 1) != 0)
  {
    v5 = sub_1D26CD9E0();
    v6 = sub_1D2594B10(v5);
    v8 = v7;
    v10 = v9;
    v12 = v11;
    swift_bridgeObjectRelease();
    v13 = MEMORY[0x1D823917C](v6, v8, v10, v12);
    v15 = v14;
    v3 = swift_bridgeObjectRelease();
    *v2 = v13;
    v2[1] = v15;
  }
  else
  {
    __break(1u);
  }
  result.unsuffixed._object = v4;
  result.unsuffixed._countAndFlagsBits = v3;
  return result;
}

uint64_t Topic.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t Topic.hashValue.getter()
{
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D2594B10(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D26CD9F8();
    return sub_1D26CDA40();
  }
  return result;
}

unint64_t sub_1D2594B9C()
{
  unint64_t result;

  result = qword_1EFC82A70;
  if (!qword_1EFC82A70)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for Topic, &type metadata for Topic);
    atomic_store(result, (unint64_t *)&qword_1EFC82A70);
  }
  return result;
}

ValueMetadata *type metadata accessor for Topic()
{
  return &type metadata for Topic;
}

unint64_t sub_1D2594BF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  id v35;
  void *v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  _QWORD v48[2];
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962070);
  v3 = MEMORY[0x1E0C80A78](v56);
  v55 = (_QWORD *)((char *)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x1E0C80A78](v3);
  v54 = (_QWORD *)((char *)v48 - v6);
  MEMORY[0x1E0C80A78](v5);
  v53 = (char *)v48 - v7;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (!v8)
    return v9;
  v48[1] = v1;
  v63 = MEMORY[0x1E0DEE9D8];
  sub_1D258430C(0, v8, 0);
  result = sub_1D2597D84(a1);
  v12 = 0;
  v13 = a1 + 64;
  v14 = *(_BYTE *)(a1 + 32);
  v57 = a1 + 80;
  v51 = a1 + 64;
  v52 = a1;
  v49 = v8;
  v50 = v11;
  v15 = v56;
  v16 = v53;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << v14)
  {
    v19 = result >> 6;
    if ((*(_QWORD *)(v13 + 8 * (result >> 6)) & (1 << result)) == 0)
      goto LABEL_27;
    if (*(_DWORD *)(a1 + 36) != (_DWORD)v11)
      goto LABEL_28;
    v58 = v12;
    v59 = 1 << result;
    v20 = (char *)v16 + *(int *)(v15 + 48);
    v21 = *(_QWORD *)(a1 + 48);
    v22 = *(_QWORD *)(a1 + 56);
    v23 = (uint64_t *)(v21 + 16 * result);
    v24 = result;
    v26 = *v23;
    v25 = v23[1];
    v27 = sub_1D26CB9DC();
    v28 = *(_QWORD *)(v27 - 8);
    v29 = *(_QWORD *)(v28 + 72);
    v60 = v24;
    v30 = v22 + v29 * v24;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    v31(v20, v30, v27);
    *v16 = v26;
    v16[1] = v25;
    v32 = (uint64_t)v54;
    *v54 = v26;
    *(_QWORD *)(v32 + 8) = v25;
    v31((char *)(v32 + *(int *)(v15 + 48)), (uint64_t)v20, v27);
    v33 = v55;
    sub_1D25384CC(v32, (uint64_t)v55, &qword_1ED962070);
    swift_bridgeObjectRetain_n();
    sub_1D253703C((uint64_t)v16, &qword_1ED962070);
    v34 = v33[1];
    v61 = *v33;
    v62 = v34;
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    if (qword_1ED96C7C0 != -1)
      swift_once();
    v35 = (id)qword_1ED96C848;
    v36 = (void *)sub_1D26CB940();
    v37 = objc_msgSend(v35, sel_stringFromDate_, v36);

    sub_1D26CD938();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v38 = v61;
    v39 = v62;
    sub_1D253703C((uint64_t)v33, &qword_1ED962070);
    v9 = v63;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1D258430C(0, *(_QWORD *)(v9 + 16) + 1, 1);
      v9 = v63;
    }
    v41 = *(_QWORD *)(v9 + 16);
    v40 = *(_QWORD *)(v9 + 24);
    if (v41 >= v40 >> 1)
    {
      result = sub_1D258430C(v40 > 1, v41 + 1, 1);
      v9 = v63;
    }
    *(_QWORD *)(v9 + 16) = v41 + 1;
    v42 = v9 + 16 * v41;
    *(_QWORD *)(v42 + 32) = v38;
    *(_QWORD *)(v42 + 40) = v39;
    a1 = v52;
    v14 = *(_BYTE *)(v52 + 32);
    v17 = 1 << v14;
    if (v60 >= 1 << v14)
      goto LABEL_29;
    v13 = v51;
    v43 = *(_QWORD *)(v51 + 8 * v19);
    if ((v43 & v59) == 0)
      goto LABEL_30;
    LODWORD(v11) = v50;
    if (*(_DWORD *)(v52 + 36) != (_DWORD)v50)
      goto LABEL_31;
    v44 = v43 & (-2 << (v60 & 0x3F));
    if (v44)
    {
      v17 = __clz(__rbit64(v44)) | v60 & 0xFFFFFFFFFFFFFFC0;
      v18 = v49;
    }
    else
    {
      v45 = v19 + 1;
      v46 = (v17 + 63) >> 6;
      v18 = v49;
      if (v19 + 1 < v46)
      {
        v47 = *(_QWORD *)(v51 + 8 * v45);
        if (v47)
        {
LABEL_24:
          v17 = __clz(__rbit64(v47)) + (v45 << 6);
        }
        else
        {
          while (v46 - 2 != v19)
          {
            v47 = *(_QWORD *)(v57 + 8 * v19++);
            if (v47)
            {
              v45 = v19 + 1;
              goto LABEL_24;
            }
          }
        }
      }
    }
    v12 = v58 + 1;
    result = v17;
    if (v58 + 1 == v18)
      return v9;
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t ConfiguredWidgetMetadataCache.__allocating_init(backingStore:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  ConfiguredWidgetMetadataCache.init(backingStore:)(a1);
  return v2;
}

_QWORD *ConfiguredWidgetMetadataCache.init(backingStore:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  _DWORD *v4;
  unint64_t v5;
  os_unfair_lock_s *v6;

  type metadata accessor for UnfairLock();
  v3 = swift_allocObject();
  v4 = (_DWORD *)swift_slowAlloc();
  *v4 = 0;
  *(_QWORD *)(v3 + 16) = v4;
  v1[2] = v3;
  v5 = sub_1D253E0F4(MEMORY[0x1E0DEE9D8]);
  v1[3] = a1;
  v1[4] = v5;
  v6 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1D25950F4(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  swift_release();
  return v1;
}

void sub_1D25950F4(_QWORD *a1)
{
  void *v1;
  unint64_t v3;
  uint64_t v4;
  id v5;
  NSObject *v6;
  os_log_type_t v7;
  uint8_t *v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (a1[3])
  {
    swift_retain();
    v3 = sub_1D265B0DC();
    if (v1)
    {
      swift_release();
      if (qword_1ED962330 != -1)
        swift_once();
      v4 = sub_1D26CC09C();
      __swift_project_value_buffer(v4, (uint64_t)qword_1ED977D20);
      v5 = v1;
      v6 = sub_1D26CC084();
      v7 = sub_1D26CDCEC();
      if (os_log_type_enabled(v6, v7))
      {
        v8 = (uint8_t *)swift_slowAlloc();
        v9 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v8 = 138543362;
        v28 = sub_1D26CB760();
        sub_1D26CDF50();
        *v9 = v28;

        _os_log_impl(&dword_1D2531000, v6, v7, "Failed to load cached widget metadata: %{public}@", v8, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v9, -1, -1);
        MEMORY[0x1D823A5E0](v8, -1, -1);
      }
      else
      {

      }
      a1[4] = sub_1D253E0F4(MEMORY[0x1E0DEE9D8]);
      swift_bridgeObjectRelease();
      os_unfair_lock_assert_owner(*(const os_unfair_lock **)(a1[2] + 16));

      return;
    }
    v10 = v3;
    swift_release();
  }
  else
  {
    v10 = sub_1D253E0F4(MEMORY[0x1E0DEE9D8]);
  }
  a1[4] = v10;
  swift_bridgeObjectRelease();
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(a1[2] + 16));
  if (qword_1ED962330 != -1)
    swift_once();
  v11 = sub_1D26CC09C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED977D20);
  swift_retain_n();
  v12 = sub_1D26CC084();
  v13 = sub_1D26CDD04();
  if (os_log_type_enabled(v12, v13))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v27 = swift_slowAlloc();
    v28 = v27;
    *(_DWORD *)v14 = 136446210;
    sub_1D26CB9DC();
    swift_bridgeObjectRetain();
    v15 = sub_1D26CD800();
    v17 = v16;
    swift_bridgeObjectRelease();
    sub_1D2537880(v15, v17, &v28);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v12, v13, "Start dates for widget ids: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v27, -1, -1);
    MEMORY[0x1D823A5E0](v14, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v18 = swift_bridgeObjectRetain();
  sub_1D2594BF0(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v19 = sub_1D26CC084();
  v20 = sub_1D26CDD04();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v22 = swift_slowAlloc();
    v28 = v22;
    *(_DWORD *)v21 = 136446210;
    v23 = swift_bridgeObjectRetain();
    v24 = MEMORY[0x1D82392C0](v23, MEMORY[0x1E0DEA968]);
    v26 = v25;
    swift_bridgeObjectRelease();
    sub_1D2537880(v24, v26, &v28);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v19, v20, "Loaded cached widget metadata: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v22, -1, -1);
    MEMORY[0x1D823A5E0](v21, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1D259563C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D259569C(v1, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

uint64_t sub_1D259569C(uint64_t a1, unint64_t a2)
{
  NSObject *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  id v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  NSObject *v45;
  int v46;
  uint8_t *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint8_t *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  void *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint8_t *v70;
  id v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v75;
  char v76;
  char v77;
  int isUniquelyReferenced_nonNull_native;
  void (*v79)(char *, uint64_t, uint64_t);
  int v80;
  char v81;
  uint64_t v82;
  _BOOL8 v83;
  uint64_t v84;
  char v85;
  unint64_t v86;
  char v87;
  unint64_t *v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t result;
  uint64_t v97;
  void *v98;
  _QWORD *v99;
  NSObject *v100;
  unint64_t v101;
  _QWORD *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint8_t *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;

  v5 = sub_1D26CB9DC();
  v106 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v103 = (char *)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x1E0C80A78](v8);
  v104 = (char *)&v97 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (unint64_t)&v97 - v13;
  v105 = a1;
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1D25EE53C(v15);
  v112 = v16;
  v111 = MEMORY[0x1E0DEE9D8];
  if (a2 >> 62)
    goto LABEL_83;
  v17 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_3:
  v108 = v5;
  v99 = v10;
  if (v17)
  {
    if (v17 < 1)
    {
      __break(1u);
LABEL_89:
      swift_once();
      goto LABEL_24;
    }
    v18 = 0;
    v107 = (uint8_t *)(a2 & 0xC000000000000001);
    v19 = a2;
    do
    {
      if (v107)
        v20 = (id)MEMORY[0x1D8239890](v18, a2);
      else
        v20 = *(id *)(a2 + 8 * v18 + 32);
      v21 = v20;
      v22 = objc_msgSend(v20, sel_uniqueIdentifier);
      v23 = sub_1D26CD938();
      v25 = v24;

      sub_1D25DE9FC(v23, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = objc_msgSend(v21, sel_uniqueIdentifier);
      v27 = sub_1D26CD938();
      v29 = v28;

      v30 = *(_QWORD *)(v105 + 32);
      if (*(_QWORD *)(v30 + 16))
      {
        swift_bridgeObjectRetain();
        v31 = sub_1D25891F4(v27, v29);
        v33 = v106;
        v34 = v108;
        if ((v32 & 1) != 0)
        {
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v106 + 16))(v14, *(_QWORD *)(v30 + 56) + *(_QWORD *)(v106 + 72) * v31, v108);
          (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v33 + 56))(v14, 0, 1, v34);
        }
        else
        {
          (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v14, 1, 1, v108);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        v33 = v106;
        v34 = v108;
        (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v14, 1, 1, v108);
      }
      swift_bridgeObjectRelease();
      v35 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v33 + 48))(v14, 1, v34);
      sub_1D253703C(v14, &qword_1ED96B1E0);
      v5 = v34;
      if (v35 == 1)
      {
        v36 = v21;
        MEMORY[0x1D8239290]();
        if (*(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1D26CDB30();
        sub_1D26CDB54();
        sub_1D26CDB0C();
        v5 = v108;
      }

      ++v18;
      a2 = v19;
    }
    while (v17 != v18);
    swift_bridgeObjectRelease();
    v16 = v112;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v2 = &unk_1ED962000;
  v17 = v106;
  if (!*(_QWORD *)(v16 + 16))
    goto LABEL_27;
  if (qword_1ED962330 != -1)
    goto LABEL_89;
LABEL_24:
  v37 = sub_1D26CC09C();
  __swift_project_value_buffer(v37, (uint64_t)qword_1ED977D20);
  v38 = sub_1D26CC084();
  v39 = sub_1D26CDD04();
  if (os_log_type_enabled(v38, v39))
  {
    v40 = (uint8_t *)swift_slowAlloc();
    v41 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v40 = 138543362;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v42 = sub_1D26CDBF0();
    swift_bridgeObjectRelease();
    v110 = v42;
    sub_1D26CDF50();
    *v41 = v42;
    v5 = v108;
    _os_log_impl(&dword_1D2531000, v38, v39, "Removing widget metadata entries: %{public}@", v40, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    v43 = v41;
    v17 = v106;
    MEMORY[0x1D823A5E0](v43, -1, -1);
    MEMORY[0x1D823A5E0](v40, -1, -1);
  }

LABEL_27:
  if (v111 >> 62)
  {
    swift_bridgeObjectRetain();
    v92 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (!v92)
      goto LABEL_47;
  }
  else if (!*(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_47;
  }
  if (v2[102].isa != (Class)-1)
    swift_once();
  v44 = sub_1D26CC09C();
  __swift_project_value_buffer(v44, (uint64_t)qword_1ED977D20);
  v45 = sub_1D26CC084();
  v46 = sub_1D26CDD04();
  if (os_log_type_enabled(v45, (os_log_type_t)v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    v107 = v47;
    *(_DWORD *)v47 = 138543362;
    swift_beginAccess();
    v49 = v111;
    if (v111 >> 62)
    {
      swift_bridgeObjectRetain();
      v50 = sub_1D26CE1F0();
    }
    else
    {
      v50 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v102 = (_QWORD *)v48;
    LODWORD(v101) = v46;
    if (v50)
    {
      v100 = v45;
      v110 = MEMORY[0x1E0DEE9D8];
      sub_1D258430C(0, v50 & ~(v50 >> 63), 0);
      if (v50 < 0)
      {
        __break(1u);
LABEL_92:
        result = sub_1D26CE424();
        __break(1u);
        return result;
      }
      v51 = 0;
      v52 = v110;
      do
      {
        if ((v49 & 0xC000000000000001) != 0)
          v53 = (id)MEMORY[0x1D8239890](v51, v49);
        else
          v53 = *(id *)(v49 + 8 * v51 + 32);
        v54 = v53;
        v55 = objc_msgSend(v53, sel_uniqueIdentifier);
        v56 = sub_1D26CD938();
        v58 = v57;

        v110 = v52;
        v60 = *(_QWORD *)(v52 + 16);
        v59 = *(_QWORD *)(v52 + 24);
        if (v60 >= v59 >> 1)
        {
          sub_1D258430C(v59 > 1, v60 + 1, 1);
          v52 = v110;
        }
        ++v51;
        *(_QWORD *)(v52 + 16) = v60 + 1;
        v61 = v52 + 16 * v60;
        *(_QWORD *)(v61 + 32) = v56;
        *(_QWORD *)(v61 + 40) = v58;
      }
      while (v50 != v51);
      swift_bridgeObjectRelease();
      v17 = v106;
      v45 = v100;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v62 = v107;
    v63 = sub_1D26CDADC();
    swift_bridgeObjectRelease();
    v110 = v63;
    sub_1D26CDF50();
    v64 = v102;
    *v102 = v63;
    _os_log_impl(&dword_1D2531000, v45, (os_log_type_t)v101, "Added widget metadata entries: %{public}@", v62, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v64, -1, -1);
    MEMORY[0x1D823A5E0](v62, -1, -1);
    v5 = v108;
  }

LABEL_47:
  v65 = *(_QWORD *)(v105 + 24);
  if (v65)
  {
    v66 = v98;
    sub_1D2650084(0x6957657461647075, 0xEF74655374656764, v65, &v112, (uint64_t *)&v111);
    if (v66)

    v98 = 0;
  }
  swift_beginAccess();
  v14 = v111;
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)sub_1D253E0F4(MEMORY[0x1E0DEE9D8]);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain_n();
    a2 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (a2)
      goto LABEL_54;
  }
  else
  {
    a2 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (a2)
    {
LABEL_54:
      v101 = v14;
      v102 = (_QWORD *)(v14 & 0xC000000000000001);
      v67 = 4;
      v100 = a2;
      do
      {
        v16 = v67 - 4;
        if (v102)
        {
          v70 = (uint8_t *)MEMORY[0x1D8239890](v67 - 4, v14);
          v2 = (v67 - 3);
          if (__OFADD__(v16, 1))
            goto LABEL_80;
        }
        else
        {
          v70 = (uint8_t *)*(id *)(v14 + 8 * v67);
          v2 = (v67 - 3);
          if (__OFADD__(v16, 1))
          {
LABEL_80:
            __break(1u);
LABEL_81:
            __break(1u);
LABEL_82:
            __break(1u);
LABEL_83:
            swift_bridgeObjectRetain();
            v17 = sub_1D26CE1F0();
            goto LABEL_3;
          }
        }
        v107 = v70;
        v71 = -[uint8_t uniqueIdentifier](v70, sel_uniqueIdentifier);
        a2 = sub_1D26CD938();
        v16 = v72;

        v73 = (uint64_t)v104;
        sub_1D26CB9D0();
        v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
        v74(v73, 0, 1, v5);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v73, 1, v5) == 1)
        {
          sub_1D253703C(v73, &qword_1ED96B1E0);
          swift_bridgeObjectRetain();
          v75 = sub_1D25891F4(a2, v16);
          v77 = v76;
          swift_bridgeObjectRelease();
          if ((v77 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v109 = v10;
            if (!isUniquelyReferenced_nonNull_native)
            {
              sub_1D26704A8();
              v10 = v109;
            }
            swift_bridgeObjectRelease();
            v69 = (uint64_t)v99;
            (*(void (**)(_QWORD *, unint64_t, uint64_t))(v17 + 32))(v99, v10[7] + *(_QWORD *)(v17 + 72) * v75, v5);
            sub_1D266C1EC(v75, (uint64_t)v10);
            swift_bridgeObjectRelease();
            v68 = 0;
          }
          else
          {
            v68 = 1;
            v69 = (uint64_t)v99;
          }
          v74(v69, v68, 1, v5);
          swift_bridgeObjectRelease();
          sub_1D253703C(v69, &qword_1ED96B1E0);

          goto LABEL_57;
        }
        v79 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 32);
        v79(v103, v73, v5);
        v80 = swift_isUniquelyReferenced_nonNull_native();
        v109 = v10;
        v14 = sub_1D25891F4(a2, v16);
        v82 = v10[2];
        v83 = (v81 & 1) == 0;
        v84 = v82 + v83;
        if (__OFADD__(v82, v83))
          goto LABEL_81;
        v85 = v81;
        if (v10[3] >= v84)
        {
          if ((v80 & 1) != 0)
          {
            v10 = v109;
            if ((v81 & 1) == 0)
              goto LABEL_77;
          }
          else
          {
            sub_1D26704A8();
            v10 = v109;
            if ((v85 & 1) == 0)
              goto LABEL_77;
          }
        }
        else
        {
          sub_1D26671CC(v84, v80);
          v86 = sub_1D25891F4(a2, v16);
          if ((v85 & 1) != (v87 & 1))
            goto LABEL_92;
          v14 = v86;
          v10 = v109;
          if ((v85 & 1) == 0)
          {
LABEL_77:
            v10[(v14 >> 6) + 8] |= 1 << v14;
            v88 = (unint64_t *)(v10[6] + 16 * v14);
            *v88 = a2;
            v88[1] = v16;
            v5 = v108;
            v79((char *)(v10[7] + *(_QWORD *)(v106 + 72) * v14), (uint64_t)v103, v108);
            v89 = v10[2];
            v90 = __OFADD__(v89, 1);
            v91 = v89 + 1;
            if (v90)
              goto LABEL_82;
            v10[2] = v91;
            swift_bridgeObjectRetain();
            v17 = v106;
            goto LABEL_79;
          }
        }
        v17 = v106;
        v5 = v108;
        (*(void (**)(unint64_t, char *, uint64_t))(v106 + 40))(v10[7] + *(_QWORD *)(v106 + 72) * v14, v103, v108);
LABEL_79:
        v10 = v109;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_57:
        a2 = (unint64_t)v100;
        v14 = v101;
        ++v67;
      }
      while (v2 != v100);
    }
  }
  swift_bridgeObjectRelease_n();
  v93 = v105;
  v94 = swift_bridgeObjectRetain();
  v95 = sub_1D2596E48(v94, &v112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v93 + 32) = sub_1D25966E8((uint64_t)v10, (uint64_t)v95);
  swift_bridgeObjectRelease();
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v93 + 16) + 16));
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25962F8(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v24;
  int64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char *v47;

  v5 = v3;
  v46 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v8);
  v47 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v44 = *(_QWORD *)(v10 - 8);
  v45 = v10;
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v12 = *a2;
  v13 = *a2 + 56;
  v14 = 1 << *(_BYTE *)(*a2 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(*a2 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  v18 = 0;
  while (v16)
  {
    v19 = __clz(__rbit64(v16));
    v16 &= v16 - 1;
    v20 = v19 | (v18 << 6);
LABEL_5:
    v21 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 16 * v20);
    v22 = *v21;
    v4 = v21[1];
    swift_bridgeObjectRetain();
    sub_1D265BD58(v22, v4);
    swift_bridgeObjectRelease();
    if (v5)
      return swift_release();
  }
  if (__OFADD__(v18++, 1))
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v18 >= v17)
    goto LABEL_23;
  v24 = *(_QWORD *)(v13 + 8 * v18);
  if (v24)
  {
LABEL_17:
    v16 = (v24 - 1) & v24;
    v20 = __clz(__rbit64(v24)) + (v18 << 6);
    goto LABEL_5;
  }
  v25 = v18 + 1;
  if (v18 + 1 >= v17)
    goto LABEL_23;
  v24 = *(_QWORD *)(v13 + 8 * v25);
  if (v24)
    goto LABEL_16;
  v25 = v18 + 2;
  if (v18 + 2 >= v17)
    goto LABEL_23;
  v24 = *(_QWORD *)(v13 + 8 * v25);
  if (v24)
    goto LABEL_16;
  v25 = v18 + 3;
  if (v18 + 3 >= v17)
    goto LABEL_23;
  v24 = *(_QWORD *)(v13 + 8 * v25);
  if (v24)
  {
LABEL_16:
    v18 = v25;
    goto LABEL_17;
  }
  while (1)
  {
    v18 = v25 + 1;
    if (__OFADD__(v25, 1))
      goto LABEL_37;
    if (v18 >= v17)
      break;
    v24 = *(_QWORD *)(v13 + 8 * v18);
    ++v25;
    if (v24)
      goto LABEL_17;
  }
LABEL_23:
  v27 = v46;
  swift_release();
  swift_beginAccess();
  v4 = *v27;
  if ((unint64_t)*v27 >> 62)
    goto LABEL_38;
  v28 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v28; v28 = sub_1D26CE1F0())
  {
    v42 = *(_QWORD *)(a1 + 32);
    v43 = v4 & 0xC000000000000001;
    v29 = 4;
    v30 = (uint64_t)v40;
    v41 = v4;
    v31 = (uint64_t)v47;
    while (1)
    {
      v32 = v43 ? (id)MEMORY[0x1D8239890](v29 - 4, v4) : *(id *)(v4 + 8 * v29);
      v33 = v32;
      if (__OFADD__(v29 - 4, 1))
        break;
      v46 = (uint64_t *)(v29 - 3);
      v34 = objc_msgSend(v32, sel_extensionIdentity);
      sub_1D26CDE48();

      v35 = objc_msgSend(v33, sel_uniqueIdentifier);
      a1 = sub_1D26CD938();
      v37 = v36;

      v38 = sub_1D26CB9DC();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v47, 1, 1, v38);
      sub_1D265B774(v30, a1, v37, v31);
      if (v5)
      {

        swift_bridgeObjectRelease();
        sub_1D253703C(v31, &qword_1ED96B1E0);
        (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v30, v45);
        return swift_bridgeObjectRelease();
      }

      swift_bridgeObjectRelease();
      sub_1D253703C(v31, &qword_1ED96B1E0);
      (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v30, v45);
      ++v29;
      v4 = v41;
      if (v46 == (uint64_t *)v28)
        return swift_bridgeObjectRelease();
    }
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25966E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1D25971A0(a1, (uint64_t)sub_1D259711C, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1D2596764()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1D26CB9DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CB970();
  v4 = sub_1D25967F8((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1D25967F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  char v68[16];
  uint64_t v69;
  uint64_t v70;

  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962070);
  v3 = MEMORY[0x1E0C80A78](v63);
  v62 = (uint64_t *)((char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = MEMORY[0x1E0C80A78](v3);
  v61 = (uint64_t *)((char *)&v54 - v6);
  v7 = MEMORY[0x1E0C80A78](v5);
  v60 = (uint64_t *)((char *)&v54 - v8);
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)&v54 - v9;
  v10 = *(os_unfair_lock_s **)(*(_QWORD *)(v1 + 16) + 16);
  v54 = *(_QWORD *)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  v11 = *(_QWORD *)(v1 + 32);
  v69 = a1;
  swift_bridgeObjectRetain();
  v12 = sub_1D2596FAC((uint64_t)sub_1D2596CF4, (uint64_t)v68, v11);
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(v12 + 16);
  if (v13)
  {
    v70 = MEMORY[0x1E0DEE9D8];
    sub_1D258430C(0, v13, 0);
    result = sub_1D2597D84(v12);
    v16 = result;
    v17 = 0;
    v18 = v12 + 64;
    v19 = *(_BYTE *)(v12 + 32);
    v64 = v12 + 80;
    v57 = v12 + 64;
    v58 = v12;
    v55 = v13;
    v56 = v15;
    while ((v16 & 0x8000000000000000) == 0 && (uint64_t)v16 < 1 << v19)
    {
      v22 = v16 >> 6;
      if ((*(_QWORD *)(v18 + 8 * (v16 >> 6)) & (1 << v16)) == 0)
        goto LABEL_27;
      if (*(_DWORD *)(v12 + 36) != (_DWORD)v15)
        goto LABEL_28;
      v65 = v17;
      v66 = 1 << v16;
      v23 = v63;
      v24 = v59;
      v25 = &v59[*(int *)(v63 + 48)];
      v26 = *(_QWORD *)(v12 + 56);
      v27 = (uint64_t *)(*(_QWORD *)(v12 + 48) + 16 * v16);
      v28 = *v27;
      v29 = v27[1];
      v30 = sub_1D26CB9DC();
      v31 = *(_QWORD **)(v30 - 8);
      v32 = v31[9];
      v67 = v16;
      v33 = v26 + v32 * v16;
      v34 = (void (*)(char *, uint64_t, uint64_t))v31[2];
      v34(v25, v33, v30);
      *v24 = v28;
      v24[1] = v29;
      v35 = (char *)v60;
      *v60 = v28;
      *((_QWORD *)v35 + 1) = v29;
      v34(&v35[*(int *)(v23 + 48)], (uint64_t)v25, v30);
      v36 = (uint64_t)v35;
      v37 = v61;
      sub_1D25384CC(v36, (uint64_t)v61, &qword_1ED962070);
      swift_bridgeObjectRetain_n();
      sub_1D253703C((uint64_t)v24, &qword_1ED962070);
      v38 = *(int *)(v23 + 48);
      v39 = v62;
      v40 = (char *)v62 + v38;
      v41 = *v37;
      v42 = v37[1];
      *v62 = *v37;
      v39[1] = v42;
      v34((char *)v39 + v38, (uint64_t)v37 + v38, v30);
      v43 = (void (*)(char *, uint64_t))v31[1];
      swift_bridgeObjectRetain();
      v43(v40, v30);
      sub_1D253703C((uint64_t)v37, &qword_1ED962070);
      v44 = v70;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = sub_1D258430C(0, *(_QWORD *)(v44 + 16) + 1, 1);
        v44 = v70;
      }
      v46 = *(_QWORD *)(v44 + 16);
      v45 = *(_QWORD *)(v44 + 24);
      v12 = v58;
      v47 = v67;
      if (v46 >= v45 >> 1)
      {
        result = sub_1D258430C(v45 > 1, v46 + 1, 1);
        v44 = v70;
      }
      *(_QWORD *)(v44 + 16) = v46 + 1;
      v48 = v44 + 16 * v46;
      *(_QWORD *)(v48 + 32) = v41;
      *(_QWORD *)(v48 + 40) = v42;
      v19 = *(_BYTE *)(v12 + 32);
      v20 = 1 << v19;
      if (v47 >= 1 << v19)
        goto LABEL_29;
      v18 = v57;
      v49 = *(_QWORD *)(v57 + 8 * v22);
      if ((v49 & v66) == 0)
        goto LABEL_30;
      LODWORD(v15) = v56;
      if (*(_DWORD *)(v12 + 36) != (_DWORD)v56)
        goto LABEL_31;
      v50 = v49 & (-2 << (v47 & 0x3F));
      if (v50)
      {
        v20 = __clz(__rbit64(v50)) | v47 & 0xFFFFFFFFFFFFFFC0;
        v21 = v55;
      }
      else
      {
        v51 = v22 + 1;
        v52 = (v20 + 63) >> 6;
        v21 = v55;
        if (v22 + 1 < v52)
        {
          v53 = *(_QWORD *)(v57 + 8 * v51);
          if (v53)
          {
LABEL_22:
            v20 = __clz(__rbit64(v53)) + (v51 << 6);
          }
          else
          {
            while (v52 - 2 != v22)
            {
              v53 = *(_QWORD *)(v64 + 8 * v22++);
              if (v53)
              {
                v51 = v22 + 1;
                goto LABEL_22;
              }
            }
          }
        }
      }
      v17 = v65 + 1;
      v16 = v20;
      if (v65 + 1 == v21)
      {
        swift_release();
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  else
  {
    swift_release();
    v44 = MEMORY[0x1E0DEE9D8];
LABEL_25:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v54 + 16));
    swift_release();
    return v44;
  }
  return result;
}

uint64_t sub_1D2596C18(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962070);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = *a1;
  v9 = a1[1];
  *v7 = v8;
  v7[1] = v9;
  v10 = (char *)v7 + *(int *)(v5 + 48);
  v11 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v10, a2, v11);
  swift_bridgeObjectRetain();
  v12 = sub_1D26CB94C();
  sub_1D253703C((uint64_t)v7, &qword_1ED962070);
  return v12 & 1;
}

uint64_t sub_1D2596CF4(uint64_t *a1, uint64_t a2)
{
  return sub_1D2596C18(a1, a2) & 1;
}

uint64_t ConfiguredWidgetMetadataCache.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ConfiguredWidgetMetadataCache.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2596D70(unint64_t a1)
{
  return sub_1D259563C(a1);
}

uint64_t sub_1D2596D90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1D26CB9DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CB970();
  v4 = sub_1D25967F8((uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t sub_1D2596E28(uint64_t a1)
{
  return sub_1D25967F8(a1);
}

uint64_t *sub_1D2596E48(uint64_t isStackAllocationSafe, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  char v5;
  unint64_t v6;
  size_t v7;
  uint64_t v8;
  void *v9;
  _QWORD v11[2];

  v4 = isStackAllocationSafe;
  v11[1] = *MEMORY[0x1E0C80C00];
  v5 = *(_BYTE *)(isStackAllocationSafe + 32);
  v6 = (unint64_t)((1 << v5) + 63) >> 6;
  v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    v8 = sub_1D25975B0((_QWORD *)((char *)v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0)), v6, v4, a2);
    if (v2)
      swift_willThrow();
    else
      return (uint64_t *)v8;
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    a2 = (uint64_t *)sub_1D25975B0((unint64_t *)v9, v6, v4, a2);
    MEMORY[0x1D823A5E0](v9, -1, -1);
  }
  return a2;
}

uint64_t sub_1D2596FAC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(_QWORD *, char *);
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = (uint64_t (*)(_QWORD *, char *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_1D2597A98((_QWORD *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_1D2597A98((unint64_t *)v11, v8, a3, v6);
    MEMORY[0x1D823A5E0](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_1D259711C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  char *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED962070) + 48);
  v5 = (char *)a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED962090) + 48);
  v7 = *a1;
  v6 = a1[1];
  v8 = sub_1D26CB9DC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v5, v4, v8);
  *a2 = v7;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D25971A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t *a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  void (*v23)(char *, char *, uint64_t);
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  uint64_t v30;
  _BOOL8 v31;
  uint64_t v32;
  unint64_t v33;
  char v34;
  _QWORD *v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  _BYTE v52[4];
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v10 = sub_1D26CB9DC();
  v64 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v52[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962098);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)&v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = -1 << *(_BYTE *)(a1 + 32);
  v17 = ~v16;
  v18 = *(_QWORD *)(a1 + 64);
  v19 = -v16;
  v57 = a1;
  v58 = a1 + 64;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  else
    v20 = -1;
  v59 = v17;
  v60 = 0;
  v61 = v20 & v18;
  v62 = a2;
  v63 = a3;
  v55 = a1;
  swift_bridgeObjectRetain();
  v56 = a3;
  swift_retain();
  sub_1D2597E0C((uint64_t)v15);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962090);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D2592A28();
    return swift_release();
  }
  v53 = a4;
  v23 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  v24 = (char *)v15 + *(int *)(v21 + 48);
  v25 = *v15;
  v26 = v15[1];
  v23(v12, v24, v10);
  v27 = *a5;
  v54 = v25;
  v29 = sub_1D25891F4(v25, v26);
  v30 = *(_QWORD *)(v27 + 16);
  v31 = (v28 & 1) == 0;
  v32 = v30 + v31;
  if (__OFADD__(v30, v31))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  LOBYTE(v25) = v28;
  if (*(_QWORD *)(v27 + 24) >= v32)
  {
    if ((v53 & 1) == 0)
      goto LABEL_24;
    if ((v28 & 1) == 0)
    {
LABEL_13:
      while (1)
      {
        v25 = *a5;
        *(_QWORD *)(*a5 + 8 * (v29 >> 6) + 64) |= 1 << v29;
        v35 = (_QWORD *)(*(_QWORD *)(v25 + 48) + 16 * v29);
        *v35 = v54;
        v35[1] = v26;
        v23((char *)(*(_QWORD *)(v25 + 56) + *(_QWORD *)(v64 + 72) * v29), v12, v10);
        v36 = *(_QWORD *)(v25 + 16);
        v37 = __OFADD__(v36, 1);
        v38 = v36 + 1;
        if (!v37)
          break;
LABEL_23:
        __break(1u);
LABEL_24:
        sub_1D26704A8();
        if ((v25 & 1) != 0)
          goto LABEL_25;
      }
      *(_QWORD *)(v25 + 16) = v38;
      while (1)
      {
        sub_1D2597E0C((uint64_t)v15);
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962090);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v15, 1, v39) == 1)
          goto LABEL_5;
        v40 = (char *)v15 + *(int *)(v39 + 48);
        v25 = *v15;
        v29 = v15[1];
        v23(v12, v40, v10);
        v41 = *a5;
        v42 = sub_1D25891F4(v25, v29);
        v44 = *(_QWORD *)(v41 + 16);
        v45 = (v43 & 1) == 0;
        v37 = __OFADD__(v44, v45);
        v46 = v44 + v45;
        if (v37)
          goto LABEL_22;
        v26 = v43;
        if (*(_QWORD *)(v41 + 24) < v46)
        {
          sub_1D26671CC(v46, 1);
          v42 = sub_1D25891F4(v25, v29);
          if ((v26 & 1) != (v47 & 1))
            goto LABEL_26;
        }
        if ((v26 & 1) != 0)
          goto LABEL_25;
        v48 = (_QWORD *)*a5;
        *(_QWORD *)(*a5 + 8 * (v42 >> 6) + 64) |= 1 << v42;
        v49 = (uint64_t *)(v48[6] + 16 * v42);
        *v49 = v25;
        v49[1] = v29;
        v23((char *)(v48[7] + *(_QWORD *)(v64 + 72) * v42), v12, v10);
        v50 = v48[2];
        v37 = __OFADD__(v50, 1);
        v51 = v50 + 1;
        if (v37)
          goto LABEL_23;
        v48[2] = v51;
      }
    }
    goto LABEL_25;
  }
  sub_1D26671CC(v32, v53 & 1);
  v33 = sub_1D25891F4(v54, v26);
  if ((v25 & 1) == (v34 & 1))
  {
    v29 = v33;
    if ((v25 & 1) == 0)
      goto LABEL_13;
LABEL_25:
    sub_1D26CE1D8();
    __break(1u);
  }
LABEL_26:
  result = sub_1D26CE424();
  __break(1u);
  return result;
}

uint64_t sub_1D25975B0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  BOOL v43;
  uint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  BOOL v47;
  unint64_t v48;
  uint64_t v50[2];
  unint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  _QWORD *v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;

  v50[0] = a2;
  v51 = a1;
  v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962070);
  MEMORY[0x1E0C80A78](v59);
  v7 = (uint64_t *)((char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = (_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 64);
  v53 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  if (v13 < 64)
    v14 = ~(-1 << v13);
  else
    v14 = -1;
  v15 = v14 & v12;
  v60 = a4;
  result = swift_beginAccess();
  v52 = 0;
  v17 = 0;
  v18 = v13 + 63;
  v19 = v15;
  v20 = v9;
  v21 = v8;
  v22 = v11;
  v54 = v18 >> 6;
  v57 = v11;
  v58 = v20;
  v55 = v7;
  v56 = v21;
  while (1)
  {
    if (v19)
    {
      v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v24 = v23 | (v17 << 6);
      goto LABEL_23;
    }
    v25 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v25 >= v54)
      return sub_1D26B6574(v51, v50[0], v52, v61);
    v26 = *(_QWORD *)(v53 + 8 * v25);
    ++v17;
    if (!v26)
    {
      v17 = v25 + 1;
      if (v25 + 1 >= v54)
        return sub_1D26B6574(v51, v50[0], v52, v61);
      v26 = *(_QWORD *)(v53 + 8 * v17);
      if (!v26)
      {
        v17 = v25 + 2;
        if (v25 + 2 >= v54)
          return sub_1D26B6574(v51, v50[0], v52, v61);
        v26 = *(_QWORD *)(v53 + 8 * v17);
        if (!v26)
          break;
      }
    }
LABEL_22:
    v19 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v17 << 6);
LABEL_23:
    v28 = v61[7];
    v29 = (uint64_t *)(v61[6] + 16 * v24);
    v30 = *v29;
    v31 = v29[1];
    v32 = *(_QWORD *)(v20 + 72);
    v62 = v24;
    v33 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
    v33(v22, v28 + v32 * v24, v21);
    *v7 = v30;
    v7[1] = v31;
    v33((char *)v7 + *(int *)(v59 + 48), (unint64_t)v22, v21);
    v34 = *v60;
    if (!*(_QWORD *)(*v60 + 16))
    {
      swift_bridgeObjectRetain_n();
      v20 = v58;
      goto LABEL_41;
    }
    v64 = v19;
    v35 = v7;
    v36 = v21;
    v63 = v17;
    sub_1D26CE460();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1D26CD9D4();
    v37 = sub_1D26CE49C();
    v38 = -1 << *(_BYTE *)(v34 + 32);
    v39 = v37 & ~v38;
    v40 = v34 + 56;
    if (((*(_QWORD *)(v34 + 56 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      v22 = v57;
      v20 = v58;
      v17 = v63;
      v21 = v36;
      v7 = v35;
      v19 = v64;
      goto LABEL_41;
    }
    v41 = *(_QWORD *)(v34 + 48);
    v42 = (_QWORD *)(v41 + 16 * v39);
    v43 = *v42 == v30 && v42[1] == v31;
    if (v43 || (sub_1D26CE3D0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v7 = v55;
      v21 = v56;
      v22 = v57;
      v20 = v58;
      v17 = v63;
      v19 = v64;
      goto LABEL_6;
    }
    v44 = ~v38;
    v45 = (v39 + 1) & v44;
    v19 = v64;
    if (((*(_QWORD *)(v40 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) != 0)
    {
      while (1)
      {
        v46 = (_QWORD *)(v41 + 16 * v45);
        v47 = *v46 == v30 && v46[1] == v31;
        if (v47 || (sub_1D26CE3D0() & 1) != 0)
          break;
        v45 = (v45 + 1) & v44;
        if (((*(_QWORD *)(v40 + ((v45 >> 3) & 0xFFFFFFFFFFFFF8)) >> v45) & 1) == 0)
          goto LABEL_37;
      }
      swift_bridgeObjectRelease();
      v7 = v55;
      v21 = v56;
      v22 = v57;
      v20 = v58;
      v17 = v63;
LABEL_6:
      sub_1D253703C((uint64_t)v7, &qword_1ED962070);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v21);
      result = swift_bridgeObjectRelease();
    }
    else
    {
LABEL_37:
      swift_bridgeObjectRelease();
      v7 = v55;
      v21 = v56;
      v22 = v57;
      v20 = v58;
      v17 = v63;
LABEL_41:
      v48 = v62;
      sub_1D253703C((uint64_t)v7, &qword_1ED962070);
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v21);
      result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v51 + ((v48 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v48;
      if (__OFADD__(v52++, 1))
      {
        __break(1u);
        return sub_1D26B6574(v51, v50[0], v52, v61);
      }
    }
  }
  v27 = v25 + 3;
  if (v27 >= v54)
    return sub_1D26B6574(v51, v50[0], v52, v61);
  v26 = *(_QWORD *)(v53 + 8 * v27);
  if (v26)
  {
    v17 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    v17 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v17 >= v54)
      return sub_1D26B6574(v51, v50[0], v52, v61);
    v26 = *(_QWORD *)(v53 + 8 * v17);
    ++v27;
    if (v26)
      goto LABEL_22;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1D2597A98(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  BOOL v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  unint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t (*v31)(_QWORD *, char *);
  _QWORD v32[2];
  _QWORD *v33;

  v31 = a4;
  v26 = a2;
  v27 = a1;
  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  result = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v33 = (_QWORD *)a3;
  v12 = *(_QWORD *)(a3 + 64);
  v28 = 0;
  v29 = a3 + 64;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v30 = (unint64_t)(v13 + 63) >> 6;
  while (v15)
  {
    v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v17 = v16 | (v11 << 6);
LABEL_17:
    v21 = v33[7];
    v22 = (_QWORD *)(v33[6] + 16 * v17);
    v23 = v22[1];
    v32[0] = *v22;
    v32[1] = v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v10, v21 + *(_QWORD *)(v7 + 72) * v17, v6);
    swift_bridgeObjectRetain();
    v24 = v31(v32, v10);
    if (v4)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      return swift_bridgeObjectRelease();
    }
    v25 = v24;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    result = swift_bridgeObjectRelease();
    if ((v25 & 1) != 0)
    {
      *(unint64_t *)((char *)v27 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = __OFADD__(v28++, 1);
      if (v18)
        goto LABEL_30;
    }
  }
  v18 = __OFADD__(v11++, 1);
  if (v18)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v11 >= v30)
    return sub_1D26B6574(v27, v26, v28, v33);
  v19 = *(_QWORD *)(v29 + 8 * v11);
  if (v19)
  {
LABEL_16:
    v15 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v11 << 6);
    goto LABEL_17;
  }
  v20 = v11 + 1;
  if (v11 + 1 >= v30)
    return sub_1D26B6574(v27, v26, v28, v33);
  v19 = *(_QWORD *)(v29 + 8 * v20);
  if (v19)
    goto LABEL_15;
  v20 = v11 + 2;
  if (v11 + 2 >= v30)
    return sub_1D26B6574(v27, v26, v28, v33);
  v19 = *(_QWORD *)(v29 + 8 * v20);
  if (v19)
    goto LABEL_15;
  v20 = v11 + 3;
  if (v11 + 3 >= v30)
    return sub_1D26B6574(v27, v26, v28, v33);
  v19 = *(_QWORD *)(v29 + 8 * v20);
  if (v19)
  {
LABEL_15:
    v11 = v20;
    goto LABEL_16;
  }
  while (1)
  {
    v11 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v11 >= v30)
      return sub_1D26B6574(v27, v26, v28, v33);
    v19 = *(_QWORD *)(v29 + 8 * v11);
    ++v20;
    if (v19)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCaching.updateWidgetSet(updatedSet:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCaching.widgetIdentifiers(addedInLast:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCaching.widgetIdentifiers(addedAfter:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for ConfiguredWidgetMetadataCache()
{
  return objc_opt_self();
}

uint64_t method lookup function for ConfiguredWidgetMetadataCache()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCache.__allocating_init(backingStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCache.updateWidgetSet(updatedSet:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCache.widgetIdentifiers(addedInLast:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of ConfiguredWidgetMetadataCache.widgetIdentifiers(addedAfter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_1D2597D84(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1D2597E0C@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  int64_t v33;
  void (*v34)(uint64_t);
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  int64_t v45;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962070);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962078);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v40 - v11;
  v13 = *v1;
  v14 = v1[1];
  v16 = v1[2];
  v15 = v1[3];
  v17 = v15;
  v18 = v1[4];
  v40 = v6;
  if (v18)
  {
    v44 = a1;
    v45 = v15;
    v41 = v16;
    v42 = v14;
    v43 = v10;
    v19 = v4;
    v20 = (v18 - 1) & v18;
    v21 = __clz(__rbit64(v18)) | (v15 << 6);
LABEL_3:
    v22 = *(_QWORD *)(v13 + 56);
    v23 = (uint64_t *)(*(_QWORD *)(v13 + 48) + 16 * v21);
    v24 = v13;
    v26 = *v23;
    v25 = v23[1];
    v27 = sub_1D26CB9DC();
    (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(&v12[*(int *)(v3 + 48)], v22 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v21, v27);
    *(_QWORD *)v12 = v26;
    *((_QWORD *)v12 + 1) = v25;
    v4 = v19;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v3);
    v13 = v24;
    swift_bridgeObjectRetain();
    v10 = v43;
    a1 = v44;
    v16 = v41;
    v14 = v42;
    goto LABEL_25;
  }
  v28 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_23:
    v17 = v11;
    goto LABEL_24;
  }
  v29 = (unint64_t)(v16 + 64) >> 6;
  if (v28 < v29)
  {
    v30 = *(_QWORD *)(v14 + 8 * v28);
    if (v30)
    {
LABEL_7:
      v41 = v16;
      v42 = v14;
      v43 = v10;
      v44 = a1;
      v19 = v4;
      v20 = (v30 - 1) & v30;
      v21 = __clz(__rbit64(v30)) + (v28 << 6);
      v45 = v28;
      goto LABEL_3;
    }
    v31 = v15 + 2;
    v17 = v15 + 1;
    if (v15 + 2 < v29)
    {
      v30 = *(_QWORD *)(v14 + 8 * v31);
      if (v30)
      {
LABEL_10:
        v28 = v31;
        goto LABEL_7;
      }
      v17 = v15 + 2;
      if (v15 + 3 < v29)
      {
        v30 = *(_QWORD *)(v14 + 8 * (v15 + 3));
        if (v30)
        {
          v28 = v15 + 3;
          goto LABEL_7;
        }
        v31 = v15 + 4;
        v17 = v15 + 3;
        if (v15 + 4 < v29)
        {
          v30 = *(_QWORD *)(v14 + 8 * v31);
          if (v30)
            goto LABEL_10;
          v28 = v15 + 5;
          v17 = v15 + 4;
          if (v15 + 5 < v29)
          {
            v30 = *(_QWORD *)(v14 + 8 * v28);
            if (v30)
              goto LABEL_7;
            v11 = v29 - 1;
            v32 = v15 + 6;
            while (v29 != v32)
            {
              v30 = *(_QWORD *)(v14 + 8 * v32++);
              if (v30)
              {
                v28 = v32 - 1;
                goto LABEL_7;
              }
            }
            goto LABEL_23;
          }
        }
      }
    }
  }
LABEL_24:
  v45 = v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  v20 = 0;
LABEL_25:
  *v1 = v13;
  v1[1] = v14;
  v33 = v45;
  v1[2] = v16;
  v1[3] = v33;
  v1[4] = v20;
  v34 = (void (*)(uint64_t))v1[5];
  sub_1D25384CC((uint64_t)v12, (uint64_t)v10, &qword_1ED962078);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962090);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(a1, 1, 1, v35);
  }
  else
  {
    v37 = (uint64_t)v10;
    v38 = (uint64_t)v40;
    sub_1D25384CC(v37, (uint64_t)v40, &qword_1ED962070);
    v34(v38);
    sub_1D253703C(v38, &qword_1ED962070);
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962090);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(a1, 0, 1, v39);
  }
}

uint64_t PowerlogWidgetViewIdentity.init(widget:identifier:inStack:location:suggestionIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  char v9;

  v8 = *a5;
  v9 = *((_BYTE *)a5 + 8);
  *(_QWORD *)a8 = result;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = a3;
  *(_QWORD *)(a8 + 24) = a6;
  *(_QWORD *)(a8 + 32) = a7;
  *(_BYTE *)(a8 + 40) = a4;
  *(_QWORD *)(a8 + 48) = v8;
  *(_BYTE *)(a8 + 56) = v9;
  return result;
}

uint64_t PowerlogWidgetLocation.logValue.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
    return qword_1D26D35F8[*(_QWORD *)v0];
  else
    return 3;
}

uint64_t PowerlogWidgetLocation.description.getter()
{
  uint64_t v0;
  _QWORD v2[2];

  if (*(_BYTE *)(v0 + 8) == 1)
    __asm { BR              X9 }
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v2, "homescreenPage");
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return v2[0];
}

void sub_1D259828C()
{
  JUMPOUT(0x1D259827CLL);
}

void sub_1D25982A8()
{
  JUMPOUT(0x1D259827CLL);
}

void sub_1D25982C4()
{
  JUMPOUT(0x1D259827CLL);
}

void sub_1D25982D8()
{
  JUMPOUT(0x1D259827CLL);
}

void sub_1D25982F8()
{
  JUMPOUT(0x1D259827CLL);
}

void sub_1D2598308()
{
  JUMPOUT(0x1D259827CLL);
}

uint64_t PowerlogWidgetLocation.hash(into:)()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_1D26CE46C();
  return sub_1D26CE46C();
}

uint64_t static PowerlogWidgetLocation.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *(_QWORD *)a2;
  if ((a1[1] & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == v3;
    return ((uint64_t (*)(void))((char *)&loc_1D25983C4 + 4 * byte_1D26D3218[v3]))();
  }
  v2 = qword_1D26D35F8[v2];
  if (*(_BYTE *)(a2 + 8))
    return ((uint64_t (*)(void))((char *)&loc_1D25983C4 + 4 * byte_1D26D3218[v3]))();
  v3 = 3;
  return v2 == v3;
}

uint64_t PowerlogWidgetLocation.hashValue.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_1D26CE460();
  if ((v1 & 1) == 0)
    sub_1D26CE46C();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D259845C()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_1D26CE460();
  if ((v1 & 1) == 0)
    sub_1D26CE46C();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D25984C4()
{
  uint64_t v0;

  if ((*(_BYTE *)(v0 + 8) & 1) == 0)
    sub_1D26CE46C();
  return sub_1D26CE46C();
}

uint64_t sub_1D2598510()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  sub_1D26CE460();
  if ((v1 & 1) == 0)
    sub_1D26CE46C();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D2598574(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *(_QWORD *)a2;
  if ((a1[1] & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) == 0)
      return v2 == v3;
    return ((uint64_t (*)(void))((char *)&loc_1D25985C0 + 4 * byte_1D26D3220[v3]))();
  }
  v2 = qword_1D26D35F8[v2];
  if (*(_BYTE *)(a2 + 8))
    return ((uint64_t (*)(void))((char *)&loc_1D25985C0 + 4 * byte_1D26D3220[v3]))();
  v3 = 3;
  return v2 == v3;
}

id PowerlogControlViewIdentity.control.getter()
{
  id *v0;

  return *v0;
}

uint64_t PowerlogControlViewIdentity.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void PowerlogControlViewIdentity.location.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PowerlogControlViewIdentity.isStateBased.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t PowerlogControlViewIdentity.description.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  v2 = objc_msgSend(v1, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  PowerlogWidgetLocation.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 0;
}

uint64_t PowerlogControlViewIdentity.hash(into:)()
{
  uint64_t v0;
  char v1;
  id v2;

  v1 = *(_BYTE *)(v0 + 32);
  v2 = *(id *)v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
    sub_1D26CE46C();
  sub_1D26CE46C();
  return sub_1D26CE478();
}

uint64_t PowerlogControlViewIdentity.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_BYTE *)(v0 + 32);
  sub_1D26CE460();
  v3 = v1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    sub_1D26CE46C();
  sub_1D26CE46C();
  sub_1D26CE478();
  return sub_1D26CE49C();
}

uint64_t sub_1D259891C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1D2598948(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1D2598968()
{
  uint64_t v0;
  void *v1;
  char v2;
  id v3;

  v1 = *(void **)v0;
  v2 = *(_BYTE *)(v0 + 32);
  sub_1D26CE460();
  v3 = v1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
    sub_1D26CE46C();
  sub_1D26CE46C();
  sub_1D26CE478();
  return sub_1D26CE49C();
}

id PowerlogWidgetViewIdentity.widget.getter()
{
  id *v0;

  return *v0;
}

uint64_t PowerlogWidgetViewIdentity.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PowerlogWidgetViewIdentity.suggestionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PowerlogWidgetViewIdentity.inStack.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

void PowerlogWidgetViewIdentity.location.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t PowerlogWidgetViewIdentity.init(widget:identifier:inStack:location:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v6;
  char v7;

  v6 = *a5;
  v7 = *((_BYTE *)a5 + 8);
  *(_QWORD *)a6 = result;
  *(_QWORD *)(a6 + 8) = a2;
  *(_QWORD *)(a6 + 24) = 0;
  *(_QWORD *)(a6 + 32) = 0;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 40) = a4;
  *(_QWORD *)(a6 + 48) = v6;
  *(_BYTE *)(a6 + 56) = v7;
  return result;
}

uint64_t PowerlogWidgetViewIdentity.description.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  v2 = objc_msgSend(v1, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  PowerlogWidgetLocation.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 0;
}

uint64_t PowerlogWidgetViewIdentity.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  id v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_BYTE *)(v0 + 56);
  v3 = *(id *)v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CE478();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1D26CD9D4();
    swift_bridgeObjectRelease();
  }
  sub_1D26CE478();
  if ((v2 & 1) == 0)
    sub_1D26CE46C();
  return sub_1D26CE46C();
}

uint64_t PowerlogWidgetViewIdentity.hashValue.getter()
{
  sub_1D26CE460();
  PowerlogWidgetViewIdentity.hash(into:)();
  return sub_1D26CE49C();
}

void sub_1D2598E70(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_1D2598E88()
{
  sub_1D26CE460();
  PowerlogWidgetViewIdentity.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D2598EFC()
{
  sub_1D26CE460();
  PowerlogWidgetViewIdentity.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D2598F6C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1D25996A0(a2, a2, a3, a4);
  sub_1D259EBF0(a1);
  return swift_release();
}

uint64_t sub_1D2598FA0(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D2598FB8(a1, (void (*)(double))sub_1D259EDB8, a4, a5, a2);
}

uint64_t sub_1D2598FAC(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1D2598FB8(a1, (void (*)(double))sub_1D259EDD0, a4, a5, a2);
}

uint64_t sub_1D2598FB8(uint64_t a1, void (*a2)(double), uint64_t a3, uint64_t a4, double a5)
{
  sub_1D25996A0(a1, (uint64_t)a2, a3, a4);
  a2(a5);
  return swift_release();
}

uint64_t sub_1D2598FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D259900C(a1, a2, (void (*)(uint64_t))sub_1D259EDEC, a4);
}

uint64_t sub_1D2599000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D259900C(a1, a2, (void (*)(uint64_t))sub_1D259EE10, a4);
}

uint64_t sub_1D259900C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  sub_1D25996A0(a2, a2, (uint64_t)a3, a4);
  a3(a1);
  return swift_release();
}

uint64_t sub_1D259904C()
{
  return sub_1D2599054(0);
}

uint64_t sub_1D2599054(char a1)
{
  uint64_t v1;
  uint64_t v2;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t result;
  _QWORD v9[6];

  v2 = v1;
  v4 = *(NSObject **)(v2 + 72);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v2;
  *(_BYTE *)(v5 + 24) = a1;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1D259BAA8;
  *(_QWORD *)(v6 + 24) = v5;
  v9[4] = sub_1D259BAF8;
  v9[5] = v6;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  v9[2] = sub_1D2599184;
  v9[3] = &block_descriptor_29;
  v7 = _Block_copy(v9);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v4, v7);
  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v4 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1D2599184(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1D25991A4(char a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  id v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];

  v2 = v1;
  v4 = *v2;
  v5 = sub_1D26CD128();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD *)((char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = (void *)v2[9];
  *v8 = v9;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v10 = v9;
  LOBYTE(v9) = sub_1D26CD134();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v9 & 1) != 0)
  {
    v12 = swift_beginAccess();
    v26[2] = v2[7];
    v13 = MEMORY[0x1E0C80A78](v12);
    v26[-2] = v2;
    LOBYTE(v26[-1]) = a1 & 1;
    MEMORY[0x1E0C80A78](v13);
    v14 = *(_OWORD *)(v4 + 80);
    v15 = *(_OWORD *)(v4 + 96);
    *(_OWORD *)&v26[-6] = v14;
    *(_OWORD *)&v26[-4] = v15;
    v26[-2] = sub_1D259B86C;
    v26[-1] = v16;
    v18 = (char *)type metadata accessor for PowerlogViewEntry(255, v14, v15, v17);
    v19 = sub_1D26CD89C();
    swift_bridgeObjectRetain();
    v20 = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEA0E0], v19);
    v22 = sub_1D25B585C((void (*)(char *, char *))sub_1D259B878, (uint64_t)&v26[-8], v19, v18, MEMORY[0x1E0DEDCE8], v20, MEMORY[0x1E0DEDD18], v21);
    swift_bridgeObjectRelease();
    v23 = v2 + 2;
    v25 = v2[5];
    v24 = v2[6];
    __swift_project_boxed_opaque_existential_0(v23, v25);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, v25, v24);
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D25993A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v7;
  uint64_t v9;
  uint64_t v10[4];

  sub_1D259A224();
  sub_1D259A068(v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963CB0);
  swift_dynamicCast();
  *(_QWORD *)(a2 + 112) = 0;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  if ((*(_BYTE *)(a2 + 129) & 1) == 0)
  {
    swift_beginAccess();
    sub_1D266AF90(a1);
    swift_endAccess();
    swift_release();
  }
  if ((a4 & 1) != 0)
  {
    v7 = *(unsigned __int8 *)(v9 + 129);
    *(_BYTE *)(v9 + 129) = 0;
    if (v7 == 1)
    {
      sub_1D259A224();
      *(_QWORD *)(v9 + 120) = 0;
      *(_BYTE *)(v9 + 128) = 1;
    }
  }
  return v9;
}

uint64_t sub_1D2599498(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  int v7;
  uint64_t v9;
  uint64_t v10[4];

  sub_1D259A26C();
  sub_1D259A158(v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82A80);
  swift_dynamicCast();
  *(_QWORD *)(a2 + 88) = 0;
  *(_OWORD *)(a2 + 72) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  if ((*(_BYTE *)(a2 + 105) & 1) == 0)
  {
    swift_beginAccess();
    sub_1D266B070(a1);
    swift_endAccess();
    swift_release();
  }
  if ((a4 & 1) != 0)
  {
    v7 = *(unsigned __int8 *)(v9 + 105);
    *(_BYTE *)(v9 + 105) = 0;
    if (v7 == 1)
    {
      sub_1D259A26C();
      *(_QWORD *)(v9 + 96) = 0;
      *(_BYTE *)(v9 + 104) = 1;
    }
  }
  return v9;
}

uint64_t sub_1D2599590(uint64_t a1, uint64_t *a2, uint64_t a3, char a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10[4];

  v6 = *a2;
  sub_1D259EE34();
  sub_1D259EE54(0, v10);
  type metadata accessor for PowerlogViewEntry(0, *(_QWORD *)(v6 + 80), *(_QWORD *)(v6 + 88), v7);
  swift_dynamicCast();
  sub_1D259EE38();
  if ((*((_BYTE *)a2 + *(_QWORD *)(*a2 + 120)) & 1) == 0)
  {
    swift_beginAccess();
    sub_1D26CD89C();
    sub_1D26CD80C();
    swift_endAccess();
    swift_release();
  }
  if ((a4 & 1) != 0)
    sub_1D259EBF0(0);
  return v9;
}

uint64_t sub_1D25996A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for PowerlogViewEntry(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 96), a4);
  sub_1D26CDDA0();
  return v6;
}

uint64_t sub_1D2599708@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD v19[5];
  uint64_t v20;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = a1[7];
  v12 = *(_QWORD *)(v6 + 96);
  v14 = type metadata accessor for PowerlogViewEntry(0, v7, v12, v13);
  v15 = *(_QWORD *)(v12 + 8);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v20, a2, v11, v7, v14, v15);
  result = swift_bridgeObjectRelease();
  v17 = v20;
  if (!v20)
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v18(v10, a2, v7);
    v17 = sub_1D259E7F8((uint64_t)v10);
    v18(v10, a2, v7);
    v19[4] = v17;
    swift_beginAccess();
    sub_1D26CD89C();
    swift_retain();
    sub_1D26CD8C0();
    result = swift_endAccess();
  }
  *a3 = v17;
  return result;
}

void sub_1D2599884(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  _QWORD v16[6];

  objc_msgSend(*(id *)(a1 + 64), sel_invalidate);
  v7 = objc_allocWithZone(MEMORY[0x1E0D01720]);
  v8 = (void *)sub_1D26CD914();
  v9 = objc_msgSend(v7, sel_initWithIdentifier_, v8);

  v10 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v9;

  v11 = *(void **)(a1 + 64);
  if (v11)
  {
    v12 = *(_QWORD *)(a1 + 72);
    v13 = swift_allocObject();
    swift_weakInit();
    v16[4] = a3;
    v16[5] = v13;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1D255A5C8;
    v16[3] = a4;
    v14 = _Block_copy(v16);
    v15 = v11;
    swift_release();
    objc_msgSend(v15, sel_scheduleRepeatingWithFireInterval_repeatInterval_leewayInterval_queue_handler_, v12, v14, 900.0, 900.0, 300.0);
    _Block_release(v14);

  }
}

uint64_t sub_1D25999E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, _BYTE *, _BYTE *))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t result;
  _QWORD *v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];

  v6 = sub_1D26CD128();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v23[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_1ED96E790 != -1)
    swift_once();
  v10 = sub_1D26CC09C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED9780C0);
  v11 = sub_1D26CC084();
  v12 = sub_1D26CDD04();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1D2531000, v11, v12, "Performing scheduled flush of powerlog view entries", v13, 2u);
    MEMORY[0x1D823A5E0](v13, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = (_QWORD *)result;
    v16 = *(void **)(result + 72);
    *v9 = v16;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x1E0DEF740], v6);
    v17 = v16;
    LOBYTE(v16) = sub_1D26CD134();
    result = (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
    if ((v16 & 1) != 0)
    {
      v18 = swift_beginAccess();
      MEMORY[0x1E0C80A78](v18);
      *(_QWORD *)&v23[-16] = v15;
      v23[-8] = 1;
      v19 = swift_bridgeObjectRetain();
      v20 = a4(v19, a3, &v23[-32], v23);
      swift_bridgeObjectRelease();
      v21 = v15[5];
      v22 = v15[6];
      __swift_project_boxed_opaque_existential_0(v15 + 2, v21);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, v21, v22);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t BasePowerlogViewService.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t BasePowerlogViewService.__deallocating_deinit()
{
  BasePowerlogViewService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2599C80(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2598F6C(a1, a2, a3, a4);
}

uint64_t sub_1D2599CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  return sub_1D2598FA0(a1, a5, a2, a3, a4);
}

uint64_t sub_1D2599CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  return sub_1D2598FAC(a1, a5, a2, a3, a4);
}

uint64_t sub_1D2599CE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2598FF4(a1, a2, a3, a4);
}

uint64_t sub_1D2599D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2599000(a1, a2, a3, a4);
}

uint64_t sub_1D2599D20()
{
  return sub_1D259904C();
}

uint64_t PowerlogWidgetViewService.__allocating_init(owner:)(_BYTE *a1)
{
  swift_allocObject();
  return PowerlogWidgetViewService.init(owner:)(a1);
}

uint64_t PowerlogWidgetViewService.init(owner:)(_BYTE *a1)
{
  return sub_1D2599E10(a1, (void (*)(_QWORD))type metadata accessor for WidgetPowerlogProvider, 0xD00000000000001FLL, 0x80000001D26DE6C0, (uint64_t (*)(uint64_t, _QWORD))sub_1D259A2B4);
}

uint64_t PowerlogControlsViewService.__allocating_init(owner:)(_BYTE *a1)
{
  swift_allocObject();
  return PowerlogControlsViewService.init(owner:)(a1);
}

uint64_t PowerlogControlsViewService.init(owner:)(_BYTE *a1)
{
  return sub_1D2599E10(a1, (void (*)(_QWORD))type metadata accessor for ControlsPowerlogProvider, 0xD000000000000027, 0x80000001D26E0290, (uint64_t (*)(uint64_t, _QWORD))sub_1D259A5A0);
}

uint64_t sub_1D2599E10(_BYTE *a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];
  uint64_t (*v17)(uint64_t, _QWORD);
  uint64_t v18;

  v17 = a5;
  v16[1] = a3;
  v16[2] = a4;
  v7 = sub_1D26CDD88();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CDD40();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v11);
  v13 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v13);
  LOBYTE(a1) = *a1;
  a2(0);
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = (_BYTE)a1;
  sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
  sub_1D26CD0B0();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, v12, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D255496C();
  sub_1D26CDFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF8D8], v7);
  *(_QWORD *)(v14 + 24) = sub_1D26CDDB8();
  return v17(v14, v16[3]);
}

uint64_t _s9ChronoKit25PowerlogWidgetViewServiceCfd_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t _s9ChronoKit25PowerlogWidgetViewServiceCfD_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1D259A068@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  id v13;
  uint64_t result;
  uint64_t v15;
  char v16;

  v2 = *(void **)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_BYTE *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v16 = *(_BYTE *)(v1 + 72);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963CB0);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 120) = 0;
  *(_BYTE *)(v10 + 128) = 1;
  *(_QWORD *)(v10 + 16) = v2;
  *(_QWORD *)(v10 + 24) = v3;
  *(_QWORD *)(v10 + 32) = v4;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v6;
  *(_BYTE *)(v10 + 56) = v7;
  *(_QWORD *)(v10 + 64) = v8;
  *(_BYTE *)(v10 + 72) = v16;
  v11 = *(_QWORD *)(v1 + 112);
  v12 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(v10 + 80) = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v10 + 96) = v12;
  *(_QWORD *)(v10 + 112) = v11;
  LOBYTE(v8) = *(_BYTE *)(v1 + 129);
  *(_BYTE *)(v10 + 129) = v8;
  swift_bridgeObjectRetain();
  v13 = v2;
  result = swift_bridgeObjectRetain();
  if ((v8 & 1) != 0)
  {
    result = BSContinuousMachTimeNow();
    *(_QWORD *)(v10 + 120) = v15;
    *(_BYTE *)(v10 + 128) = 0;
  }
  a1[3] = v9;
  *a1 = v10;
  return result;
}

uint64_t sub_1D259A158@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  id v13;
  uint64_t result;
  uint64_t v15;

  v3 = *(void **)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_BYTE *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 49);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82A80);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 96) = 0;
  *(_BYTE *)(v10 + 104) = 1;
  *(_QWORD *)(v10 + 16) = v3;
  *(_QWORD *)(v10 + 24) = v4;
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v6;
  *(_BYTE *)(v10 + 48) = v7;
  *(_BYTE *)(v10 + 49) = v8;
  v11 = *(_QWORD *)(v1 + 88);
  *(_OWORD *)(v10 + 56) = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(v10 + 72) = *(_OWORD *)(v1 + 72);
  *(_QWORD *)(v10 + 88) = v11;
  v12 = *(_BYTE *)(v1 + 105);
  *(_BYTE *)(v10 + 105) = v12;
  v13 = v3;
  result = swift_bridgeObjectRetain();
  if ((v12 & 1) != 0)
  {
    result = BSContinuousMachTimeNow();
    *(_QWORD *)(v10 + 96) = v15;
    *(_BYTE *)(v10 + 104) = 0;
  }
  a1[3] = v9;
  *a1 = v10;
  return result;
}

uint64_t sub_1D259A224()
{
  uint64_t v0;
  uint64_t result;
  double v2;
  char v3;
  double v4;

  result = BSContinuousMachTimeNow();
  if ((*(_BYTE *)(v0 + 128) & 1) == 0)
    *(double *)(v0 + 112) = *(double *)(v0 + 112) + v2 - *(double *)(v0 + 120);
  v3 = *(_BYTE *)(v0 + 129);
  v4 = v2;
  if (!v3)
    v4 = 0.0;
  *(double *)(v0 + 120) = v4;
  *(_BYTE *)(v0 + 128) = v3 ^ 1;
  return result;
}

uint64_t sub_1D259A26C()
{
  uint64_t v0;
  uint64_t result;
  double v2;
  char v3;
  double v4;

  result = BSContinuousMachTimeNow();
  if ((*(_BYTE *)(v0 + 104) & 1) == 0)
    *(double *)(v0 + 88) = *(double *)(v0 + 88) + v2 - *(double *)(v0 + 96);
  v3 = *(_BYTE *)(v0 + 105);
  v4 = v2;
  if (!v3)
    v4 = 0.0;
  *(double *)(v0 + 96) = v4;
  *(_BYTE *)(v0 + 104) = v3 ^ 1;
  return result;
}

uint64_t sub_1D259A2B4(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  _QWORD aBlock[6];
  _QWORD v17[5];

  v4 = sub_1D26CDD88();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CDD40();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v10);
  v17[3] = type metadata accessor for WidgetPowerlogProvider();
  v17[4] = sub_1D25369B0(&qword_1ED96EA20, (uint64_t (*)(uint64_t))type metadata accessor for WidgetPowerlogProvider, (uint64_t)&unk_1D26D8DC8);
  v17[0] = a1;
  a2[7] = MEMORY[0x1E0DEE9E0];
  a2[8] = 0;
  sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D255496C();
  sub_1D26CDFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v4);
  a2[9] = sub_1D26CDDB8();
  sub_1D2538510((uint64_t)v17, (uint64_t)(a2 + 2));
  v11 = a2[9];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1D259B9B8;
  *(_QWORD *)(v12 + 24) = a2;
  aBlock[4] = sub_1D259BAF8;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2599184;
  aBlock[3] = &block_descriptor_13;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v13);
  _Block_release(v13);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v11 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return (uint64_t)a2;
  }
  return result;
}

uint64_t sub_1D259A5A0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  NSObject *v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  _QWORD aBlock[6];
  _QWORD v17[5];

  v4 = sub_1D26CDD88();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&aBlock[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CDD40();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v10);
  v17[3] = type metadata accessor for ControlsPowerlogProvider();
  v17[4] = sub_1D25369B0(&qword_1ED96B118, (uint64_t (*)(uint64_t))type metadata accessor for ControlsPowerlogProvider, (uint64_t)&unk_1D26D60CC);
  v17[0] = a1;
  a2[7] = MEMORY[0x1E0DEE9E0];
  a2[8] = 0;
  sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D255496C();
  sub_1D26CDFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v4);
  a2[9] = sub_1D26CDDB8();
  sub_1D2538510((uint64_t)v17, (uint64_t)(a2 + 2));
  v11 = a2[9];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = sub_1D259B8F8;
  *(_QWORD *)(v12 + 24) = a2;
  aBlock[4] = sub_1D259B938;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D2599184;
  aBlock[3] = &block_descriptor_4;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  dispatch_sync(v11, v13);
  _Block_release(v13);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result = swift_release();
  if ((v11 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
    return (uint64_t)a2;
  }
  return result;
}

BOOL _s9ChronoKit26PowerlogWidgetViewIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  char v10;
  _BOOL8 result;
  char v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 8);
  v20 = *(_QWORD *)(a1 + 16);
  v18 = *(_QWORD *)(a1 + 24);
  v17 = *(unsigned __int8 *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v19 = *(_BYTE *)(a1 + 56);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 16);
  v16 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(unsigned __int8 *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 48);
  v9 = *(unsigned __int8 *)(a2 + 56);
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  if (v2 == v4 && v20 == v15 || (v10 = sub_1D26CE3D0(), result = 0, (v10 & 1) != 0))
  {
    if (v16)
    {
      if (!v6)
        return 0;
      if (v18 == v5 && v16 == v6)
      {
        if (v17 != v7)
          return 0;
        goto LABEL_16;
      }
      v12 = sub_1D26CE3D0();
      result = 0;
      if ((v12 & 1) == 0)
        return result;
    }
    else
    {
      result = 0;
      if (v6)
        return result;
    }
    if (((v17 ^ v7) & 1) != 0)
      return result;
LABEL_16:
    if ((v19 & 1) != 0)
    {
      v13 = v8;
      if (!v9)
        return qword_1D26D35F8[v3] == 3;
    }
    else
    {
      v13 = v8;
      if ((v9 & 1) == 0)
        return v3 == v8;
    }
    __asm { BR              X10 }
  }
  return result;
}

uint64_t _s9ChronoKit27PowerlogControlViewIdentityV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  int v9;
  char v10;
  uint64_t result;
  BOOL v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(unsigned __int8 *)(a1 + 33);
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(unsigned __int8 *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 33);
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  if (v2 == v5 && v15 == v6 || (v10 = sub_1D26CE3D0(), result = 0, (v10 & 1) != 0))
  {
    if ((v3 & 1) != 0)
    {
      if (!v8)
      {
        v12 = qword_1D26D35F8[v14] == 3;
LABEL_12:
        v13 = v12;
        return v13 & (v4 ^ v9 ^ 1u);
      }
    }
    else if ((v8 & 1) == 0)
    {
      v12 = v14 == v7;
      goto LABEL_12;
    }
    __asm { BR              X10 }
  }
  return result;
}

unint64_t sub_1D259ABD4()
{
  unint64_t result;

  result = qword_1EFC82A78;
  if (!qword_1EFC82A78)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogWidgetLocation, &type metadata for PowerlogWidgetLocation);
    atomic_store(result, (unint64_t *)&qword_1EFC82A78);
  }
  return result;
}

unint64_t sub_1D259AC18(uint64_t a1)
{
  unint64_t result;

  result = sub_1D259AC3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D259AC3C()
{
  unint64_t result;

  result = qword_1ED963BB8;
  if (!qword_1ED963BB8)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogControlViewIdentity, &type metadata for PowerlogControlViewIdentity);
    atomic_store(result, (unint64_t *)&qword_1ED963BB8);
  }
  return result;
}

unint64_t sub_1D259AC84()
{
  unint64_t result;

  result = qword_1ED963BC0;
  if (!qword_1ED963BC0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogControlViewIdentity, &type metadata for PowerlogControlViewIdentity);
    atomic_store(result, (unint64_t *)&qword_1ED963BC0);
  }
  return result;
}

unint64_t sub_1D259ACC8(uint64_t a1)
{
  unint64_t result;

  result = sub_1D259ACEC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1D259ACEC()
{
  unint64_t result;

  result = qword_1ED96E328;
  if (!qword_1ED96E328)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogWidgetViewIdentity, &type metadata for PowerlogWidgetViewIdentity);
    atomic_store(result, (unint64_t *)&qword_1ED96E328);
  }
  return result;
}

unint64_t sub_1D259AD34()
{
  unint64_t result;

  result = qword_1ED96BEB8;
  if (!qword_1ED96BEB8)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogWidgetViewIdentity, &type metadata for PowerlogWidgetViewIdentity);
    atomic_store(result, (unint64_t *)&qword_1ED96BEB8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PowerlogWidgetLocation(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PowerlogWidgetLocation(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1D259ADC8(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1D259ADE4(uint64_t result, int a2)
{
  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    *(_BYTE *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogWidgetLocation()
{
  return &type metadata for PowerlogWidgetLocation;
}

uint64_t dispatch thunk of PowerlogIdentity.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PowerlogIdentity.location.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t destroy for PowerlogControlViewIdentity(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PowerlogControlViewIdentity(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v6 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PowerlogControlViewIdentity(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

__n128 __swift_memcpy34_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for PowerlogControlViewIdentity(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerlogControlViewIdentity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 34))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerlogControlViewIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 34) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogControlViewIdentity()
{
  return &type metadata for PowerlogControlViewIdentity;
}

uint64_t destroy for PowerlogWidgetViewIdentity(id *a1)
{

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PowerlogWidgetViewIdentity(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PowerlogWidgetViewIdentity(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  return a1;
}

uint64_t assignWithTake for PowerlogWidgetViewIdentity(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerlogWidgetViewIdentity(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerlogWidgetViewIdentity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogWidgetViewIdentity()
{
  return &type metadata for PowerlogWidgetViewIdentity;
}

uint64_t sub_1D259B25C()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for BasePowerlogViewService()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for BasePowerlogViewService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BasePowerlogViewService.userIsViewing(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of BasePowerlogViewService.incrementTotalFrameRenderTime(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of BasePowerlogViewService.incrementTotalFrameSubmitTime(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of BasePowerlogViewService.incrementTotalFramesSubmitted(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of BasePowerlogViewService.incrementTotalFramesRendered(_:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of BasePowerlogViewService.flush()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t type metadata accessor for PowerlogWidgetViewService(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED963A70);
}

uint64_t method lookup function for PowerlogWidgetViewService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PowerlogWidgetViewService.__allocating_init(owner:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t type metadata accessor for PowerlogControlsViewService(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED963BC8);
}

uint64_t sub_1D259B360()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PowerlogControlsViewService()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D259B3A0(uint64_t a1, void (*a2)(_QWORD *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD v34[5];
  char v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v39 = MEMORY[0x1E0DEE9D8];
    sub_1D26CE13C();
    result = sub_1D2597D10(v2);
    v6 = result;
    v7 = 0;
    v8 = v2 + 64;
    v25 = v2 + 80;
    v26 = v3;
    v28 = v2 + 64;
    v29 = v2;
    v27 = v5;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v2 + 32))
    {
      v10 = (unint64_t)v6 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v2 + 36) != v5)
        goto LABEL_23;
      v31 = v7;
      v11 = *(_QWORD *)(v2 + 56);
      v12 = *(_QWORD *)(v2 + 48) + (v6 << 6);
      v13 = *(_QWORD *)(v12 + 8);
      v15 = *(_QWORD *)(v12 + 16);
      v14 = *(_QWORD *)(v12 + 24);
      v16 = *(_QWORD *)(v12 + 32);
      v17 = *(_BYTE *)(v12 + 40);
      v32 = *(_QWORD *)(v12 + 48);
      v33 = *(_BYTE *)(v12 + 56);
      v18 = *(_QWORD *)(v11 + 8 * v6);
      v19 = *(id *)v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v34[0] = v19;
      v34[1] = v13;
      v34[2] = v15;
      v34[3] = v14;
      v34[4] = v16;
      v35 = v17;
      v36 = v32;
      v37 = v33;
      v38 = v18;
      a2(v34, v18);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1D26CE118();
      sub_1D26CE148();
      v2 = v29;
      sub_1D26CE154();
      result = sub_1D26CE124();
      v9 = 1 << *(_BYTE *)(v29 + 32);
      if (v6 >= v9)
        goto LABEL_24;
      v8 = v28;
      v20 = *(_QWORD *)(v28 + 8 * v10);
      if ((v20 & (1 << v6)) == 0)
        goto LABEL_25;
      v5 = v27;
      if (*(_DWORD *)(v29 + 36) != v27)
        goto LABEL_26;
      v21 = v20 & (-2 << (v6 & 0x3F));
      if (v21)
      {
        v9 = __clz(__rbit64(v21)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = v10 + 1;
        v23 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v23)
        {
          v24 = *(_QWORD *)(v28 + 8 * v22);
          if (v24)
          {
LABEL_18:
            v9 = __clz(__rbit64(v24)) + (v22 << 6);
          }
          else
          {
            while (v23 - 2 != v10)
            {
              v24 = *(_QWORD *)(v25 + 8 * v10++);
              if (v24)
              {
                v22 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v31 + 1;
      v6 = v9;
      if (v31 + 1 == v26)
        return v39;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1D259B61C(uint64_t a1, void (*a2)(_QWORD *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD v31[4];
  char v32;
  char v33;
  uint64_t v34;
  uint64_t v35;

  v2 = a1;
  v3 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v35 = MEMORY[0x1E0DEE9D8];
    sub_1D26CE13C();
    result = sub_1D2597D10(v2);
    v6 = result;
    v7 = 0;
    v8 = v2 + 64;
    v24 = v2 + 80;
    v25 = v3;
    v27 = v2 + 64;
    v28 = v2;
    v26 = v5;
    while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(v2 + 32))
    {
      v10 = (unint64_t)v6 >> 6;
      if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
        goto LABEL_22;
      if (*(_DWORD *)(v2 + 36) != v5)
        goto LABEL_23;
      v30 = v7;
      v11 = *(_QWORD *)(v2 + 48) + 40 * v6;
      v12 = *(_QWORD *)(v11 + 8);
      v14 = *(_QWORD *)(v11 + 16);
      v13 = *(_QWORD *)(v11 + 24);
      v15 = *(_BYTE *)(v11 + 32);
      v16 = *(_BYTE *)(v11 + 33);
      v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v6);
      v18 = *(id *)v11;
      swift_bridgeObjectRetain();
      swift_retain();
      v31[0] = v18;
      v31[1] = v12;
      v31[2] = v14;
      v31[3] = v13;
      v32 = v15;
      v33 = v16;
      v34 = v17;
      a2(v31, v17);
      swift_release();
      swift_bridgeObjectRelease();

      sub_1D26CE118();
      sub_1D26CE148();
      v2 = v28;
      sub_1D26CE154();
      result = sub_1D26CE124();
      v9 = 1 << *(_BYTE *)(v28 + 32);
      if (v6 >= v9)
        goto LABEL_24;
      v8 = v27;
      v19 = *(_QWORD *)(v27 + 8 * v10);
      if ((v19 & (1 << v6)) == 0)
        goto LABEL_25;
      v5 = v26;
      if (*(_DWORD *)(v28 + 36) != v26)
        goto LABEL_26;
      v20 = v19 & (-2 << (v6 & 0x3F));
      if (v20)
      {
        v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v21 = v10 + 1;
        v22 = (unint64_t)(v9 + 63) >> 6;
        if (v10 + 1 < v22)
        {
          v23 = *(_QWORD *)(v27 + 8 * v21);
          if (v23)
          {
LABEL_18:
            v9 = __clz(__rbit64(v23)) + (v21 << 6);
          }
          else
          {
            while (v22 - 2 != v10)
            {
              v23 = *(_QWORD *)(v24 + 8 * v10++);
              if (v23)
              {
                v21 = v10 + 1;
                goto LABEL_18;
              }
            }
          }
        }
      }
      v7 = v30 + 1;
      v6 = v9;
      if (v30 + 1 == v25)
        return v35;
    }
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
  }
  return result;
}

uint64_t sub_1D259B86C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1D2599590(a1, a2, *(_QWORD *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_1D259B878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t (*v6)(uint64_t, _QWORD);
  uint64_t TupleTypeMetadata2;
  uint64_t result;

  v6 = (uint64_t (*)(uint64_t, _QWORD))v3[6];
  type metadata accessor for PowerlogViewEntry(255, v3[2], v3[4], a2);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = v6(a1, *(_QWORD *)(a1 + *(int *)(TupleTypeMetadata2 + 48)));
  *a3 = result;
  return result;
}

void sub_1D259B8F8()
{
  uint64_t v0;

  sub_1D2599884(v0, (uint64_t)&unk_1E93D8578, (uint64_t)sub_1D259B958, (uint64_t)&block_descriptor_6);
}

uint64_t sub_1D259B928()
{
  return swift_deallocObject();
}

uint64_t sub_1D259B938()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1D259B958(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25999E0(a1, v1, (uint64_t)sub_1D259B980, (uint64_t (*)(uint64_t, uint64_t, _BYTE *, _BYTE *))sub_1D259B61C);
}

uint64_t sub_1D259B980(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  _OWORD v7[2];
  __int16 v8;

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_BYTE *)(v2 + 24);
  v5 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v5;
  v8 = *(_WORD *)(a1 + 32);
  return sub_1D2599498((uint64_t)v7, a2, v3, v4);
}

void sub_1D259B9B8()
{
  uint64_t v0;

  sub_1D2599884(v0, (uint64_t)&unk_1E93D8618, (uint64_t)sub_1D259BA1C, (uint64_t)&block_descriptor_19_0);
}

uint64_t sub_1D259B9E8()
{
  return swift_deallocObject();
}

uint64_t sub_1D259B9F8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D259BA1C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25999E0(a1, v1, (uint64_t)sub_1D259BA44, (uint64_t (*)(uint64_t, uint64_t, _BYTE *, _BYTE *))sub_1D259B3A0);
}

uint64_t sub_1D259BA44(_OWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  __int128 v5;
  _OWORD v7[2];
  _OWORD v8[2];

  v3 = *(_QWORD *)(v2 + 16);
  v4 = *(_BYTE *)(v2 + 24);
  v5 = a1[1];
  v7[0] = *a1;
  v7[1] = v5;
  v8[0] = a1[2];
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 41);
  return sub_1D25993A4((uint64_t)v7, a2, v3, v4);
}

uint64_t sub_1D259BA84()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D259BAA8()
{
  uint64_t v0;

  return sub_1D25991A4(*(_BYTE *)(v0 + 24));
}

uint64_t sub_1D259BAD0()
{
  return swift_deallocObject();
}

uint64_t sub_1D259BAE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1D2599708(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

char *sub_1D259BB24(uint64_t a1, char a2, char a3, char a4)
{
  _BYTE *v4;
  int v7;
  _BYTE *v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void *v12;
  char *v13;
  char *result;
  char *v15;
  void *v16;
  id v17;
  char *v18;
  id v19;
  void *v20;
  char *v21;
  char v22;
  id v23;
  char *v24;
  char *v25;
  char *v26;
  void *v27;
  char *v28;
  id v29;
  objc_super v31;
  uint64_t v32;

  v7 = a2 & 1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape] = 0;
  v8 = &v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent];
  v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer] = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay] = 0;
  v4[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController__renderEngine] = a2 & 1;
  objc_allocWithZone((Class)type metadata accessor for SecureHostingController());
  v32 = a1;
  v9 = v4;
  swift_retain();
  *(_QWORD *)&v9[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController] = sub_1D26CC8DC();
  swift_beginAccess();
  *v8 = a3;

  v31.receiver = v9;
  v31.super_class = (Class)type metadata accessor for BaseWidgetContentViewController();
  v10 = (char *)objc_msgSendSuper2(&v31, sel_initWithNibName_bundle_, 0, 0);
  v11 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController;
  v12 = *(void **)&v10[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController];
  v13 = v10;
  result = (char *)objc_msgSend(v12, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  v15 = result;
  v16 = (void *)objc_opt_self();
  v17 = objc_msgSend(v16, sel_clearColor);
  objc_msgSend(v15, sel_setBackgroundColor_, v17);

  result = (char *)objc_msgSend(v13, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v18 = result;
  v19 = objc_msgSend(v16, sel_clearColor);
  objc_msgSend(v18, sel_setBackgroundColor_, v19);

  if (!v7)
  {
    v20 = *(void **)&v10[v11];
    v21 = &v13[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent];
    swift_beginAccess();
    v22 = *v21;
    v23 = v20;
    sub_1D26C5A5C(a4 & 1, (v22 & 1) == 0);
    goto LABEL_7;
  }
  result = (char *)objc_msgSend(v13, sel_view);
  if (result)
  {
    v24 = result;
    v23 = objc_msgSend(result, sel_layer);

    objc_msgSend(v23, sel_setHitTestsAsOpaque_, 1);
LABEL_7:

    objc_msgSend(v13, sel_addChildViewController_, *(_QWORD *)&v10[v11]);
    result = (char *)objc_msgSend(v13, sel_view);
    if (result)
    {
      v25 = result;
      result = (char *)objc_msgSend(*(id *)&v10[v11], sel_view);
      if (result)
      {
        v26 = result;
        objc_msgSend(v25, sel_addSubview_, result);

        v27 = *(void **)&v10[v11];
        v28 = v13;
        v29 = v27;
        objc_msgSend(v29, sel_didMoveToParentViewController_, v28);

        swift_release();
        return v28;
      }
      goto LABEL_13;
    }
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D259BE4C()
{
  uint64_t v0;
  id v1;
  uint64_t v3;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  sub_1D26CC8E8();

  return v3;
}

uint64_t sub_1D259BE90()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  swift_retain();
  sub_1D26CC8F4();

  return swift_release();
}

void (*sub_1D259BEE8(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  id v4;

  v3 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController;
  a1[2] = v1;
  a1[3] = v3;
  v4 = *(id *)(v1 + v3);
  sub_1D26CC8E8();

  *a1 = a1[1];
  return sub_1D259BF48;
}

void sub_1D259BF48(_QWORD *a1, char a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *(void **)(a1[2] + a1[3]);
  a1[1] = *a1;
  if ((a2 & 1) != 0)
  {
    swift_retain_n();
    v3 = v2;
    sub_1D26CC8F4();
    swift_release();

    swift_release();
  }
  else
  {
    v4 = v2;
    swift_retain();
    sub_1D26CC8F4();
    swift_release();

  }
}

uint64_t sub_1D259BFF8()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  type metadata accessor for SecureHostingController();
  sub_1D25369B0(&qword_1ED96D1E8, (uint64_t (*)(uint64_t))type metadata accessor for SecureHostingController, MEMORY[0x1E0CDB648]);
  v2 = v1;
  if (sub_1D26CC834())
  {
    objc_opt_self();
    v3 = swift_dynamicCastObjCClass();

    if (!v3)
      swift_unknownObjectRelease();
  }
  else
  {

    return 0;
  }
  return v3;
}

uint64_t type metadata accessor for SecureHostingController()
{
  uint64_t result;

  result = qword_1ED96D1F0;
  if (!qword_1ED96D1F0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D259C0E4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController__renderEngine);
}

void *sub_1D259C0F4()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1D259C140(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  sub_1D259CCAC(v4);

}

void (*sub_1D259C1AC(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (void **)(v1 + v4);
  swift_beginAccess();
  v6 = *v5;
  v3[3] = *v5;
  v7 = v6;
  return sub_1D259C220;
}

void sub_1D259C220(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;

  v2 = *(void **)a1;
  v4 = (void **)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v7 = *(void **)(v6 + v5);
  *(_QWORD *)(v6 + v5) = *v4;
  if ((a2 & 1) != 0)
  {
    v8 = v3;
    sub_1D259CCAC(v7);

    v7 = *v4;
  }
  else
  {
    v9 = v3;
    sub_1D259CCAC(v7);

  }
  free(v2);
}

uint64_t sub_1D259C2A8()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D259C2EC(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D259C334())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void sub_1D259C378()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  type metadata accessor for SecureHostingController();
  sub_1D25369B0(&qword_1ED96D1E8, (uint64_t (*)(uint64_t))type metadata accessor for SecureHostingController, MEMORY[0x1E0CDB648]);
  v3 = v1;
  if (sub_1D26CC834())
  {
    objc_opt_self();
    v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
      objc_msgSend(v2, sel_setNeedsSynchronousUpdate_, 1);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

void sub_1D259C448(uint64_t a1@<X8>)
{
  uint64_t v1;
  id v3;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  sub_1D259C520(a1);

}

uint64_t sub_1D259C490()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  uint64_t v4;

  BSDispatchQueueAssertMain();
  v1 = *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  v2 = (void *)sub_1D26CB610();
  v3 = objc_msgSend(v1, sel__timelinesForDateInterval_, v2);

  sub_1D259D278();
  v4 = sub_1D26CDAF4();

  return v4;
}

double sub_1D259C520@<D0>(uint64_t a1@<X8>)
{
  void *v2;
  void *v3;
  id v4;
  uint64_t v5;
  id v6;
  unint64_t v7;
  char v8;
  id v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  char v13;
  id v14;
  uint64_t v15;
  id v16;
  unint64_t v17;
  char v18;
  id v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  char v23;
  double result;
  uint64_t v25;
  __int128 v26;
  __int128 v27;

  type metadata accessor for SecureHostingController();
  sub_1D25369B0(&qword_1ED96D1E8, (uint64_t (*)(uint64_t))type metadata accessor for SecureHostingController, MEMORY[0x1E0CDB648]);
  if (!sub_1D26CC834())
    goto LABEL_37;
  objc_opt_self();
  v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
    goto LABEL_36;
  v3 = v2;
  v4 = objc_msgSend(v2, sel_statistics);
  type metadata accessor for RBDrawableStatisticsKey(0);
  sub_1D25369B0(&qword_1ED96C058, (uint64_t (*)(uint64_t))type metadata accessor for RBDrawableStatisticsKey, (uint64_t)&unk_1D26CFC10);
  v5 = sub_1D26CD7F4();

  if (!*(_QWORD *)(v5 + 16))
  {
    v26 = 0u;
    v27 = 0u;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  v6 = (id)*MEMORY[0x1E0D87488];
  v7 = sub_1D25892E0((uint64_t)v6);
  if ((v8 & 1) == 0)
  {
    v26 = 0u;
    v27 = 0u;

    goto LABEL_12;
  }
  sub_1D2537950(*(_QWORD *)(v5 + 56) + 32 * v7, (uint64_t)&v26);

  swift_bridgeObjectRelease();
  if (*((_QWORD *)&v27 + 1))
  {
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_36;
    v9 = objc_msgSend(v3, sel_statistics);
    v10 = sub_1D26CD7F4();

    if (*(_QWORD *)(v10 + 16))
    {
      v11 = (id)*MEMORY[0x1E0D87490];
      v12 = sub_1D25892E0((uint64_t)v11);
      if ((v13 & 1) != 0)
      {
        sub_1D2537950(*(_QWORD *)(v10 + 56) + 32 * v12, (uint64_t)&v26);
      }
      else
      {
        v26 = 0u;
        v27 = 0u;
      }

    }
    else
    {
      v26 = 0u;
      v27 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v27 + 1))
      goto LABEL_13;
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_36;
    v14 = objc_msgSend(v3, sel_statistics);
    v15 = sub_1D26CD7F4();

    if (*(_QWORD *)(v15 + 16))
    {
      v16 = (id)*MEMORY[0x1E0D87480];
      v17 = sub_1D25892E0((uint64_t)v16);
      if ((v18 & 1) != 0)
      {
        sub_1D2537950(*(_QWORD *)(v15 + 56) + 32 * v17, (uint64_t)&v26);
      }
      else
      {
        v26 = 0u;
        v27 = 0u;
      }

    }
    else
    {
      v26 = 0u;
      v27 = 0u;
    }
    swift_bridgeObjectRelease();
    if (!*((_QWORD *)&v27 + 1))
      goto LABEL_13;
    if ((swift_dynamicCast() & 1) == 0)
    {
LABEL_36:
      swift_unknownObjectRelease();
      goto LABEL_37;
    }
    v19 = objc_msgSend(v3, sel_statistics);
    v20 = sub_1D26CD7F4();

    if (*(_QWORD *)(v20 + 16))
    {
      v21 = (id)*MEMORY[0x1E0D87478];
      v22 = sub_1D25892E0((uint64_t)v21);
      if ((v23 & 1) != 0)
      {
        sub_1D2537950(*(_QWORD *)(v20 + 56) + 32 * v22, (uint64_t)&v26);
      }
      else
      {
        v26 = 0u;
        v27 = 0u;
      }

    }
    else
    {
      v26 = 0u;
      v27 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v27 + 1))
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        objc_msgSend(v3, sel_resetStatistics_alpha_, 11, 0.0);
        swift_unknownObjectRelease();
        *(_QWORD *)a1 = v25;
        *(_QWORD *)(a1 + 8) = v25;
        *(_QWORD *)(a1 + 16) = v25;
        *(_QWORD *)(a1 + 24) = v25;
        *(_BYTE *)(a1 + 32) = 0;
        return result;
      }
      goto LABEL_36;
    }
  }
LABEL_13:
  swift_unknownObjectRelease();
  sub_1D2536700((uint64_t)&v26);
LABEL_37:
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_BYTE *)(a1 + 32) = 1;
  return result;
}

uint64_t sub_1D259C948()
{
  return 1;
}

uint64_t SecureHostingController.__allocating_init(rootView:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return sub_1D26CC8DC();
}

uint64_t SecureHostingController.init(rootView:)()
{
  return sub_1D26CC8DC();
}

uint64_t SecureHostingController.__allocating_init(coder:rootView:)()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return sub_1D26CC8D0();
}

uint64_t SecureHostingController.init(coder:rootView:)()
{
  return sub_1D26CC8D0();
}

id SecureHostingController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id SecureHostingController.init(coder:)(void *a1)
{
  void *v1;
  id v3;
  objc_super v5;

  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SecureHostingController();
  v3 = objc_msgSendSuper2(&v5, sel_initWithCoder_, a1);

  return v3;
}

id sub_1D259CAB0(void *a1, uint64_t a2, uint64_t a3)
{
  objc_super v5;

  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for SecureHostingController();
  return objc_msgSendSuper2(&v5, sel_initWithCoder_, a3);
}

id SecureHostingController.__deallocating_deinit()
{
  return sub_1D259D6E0(0, type metadata accessor for SecureHostingController);
}

uint64_t sub_1D259CB08()
{
  id v0;

  v0 = objc_allocWithZone((Class)type metadata accessor for SecureHostingController());
  return sub_1D26CC8DC();
}

uint64_t sub_1D259CB48()
{
  id v0;

  v0 = objc_allocWithZone((Class)type metadata accessor for SecureHostingController());
  return sub_1D26CC8D0();
}

void sub_1D259CB98(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  id v3;
  uint64_t v4;

  v3 = *(id *)(*a1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  sub_1D26CC8E8();

  *a2 = v4;
}

void sub_1D259CBE8(uint64_t a1, _QWORD *a2)
{
  void *v2;
  id v3;

  v2 = *(void **)(*a2 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  swift_retain();
  v3 = v2;
  sub_1D26CC8F4();

}

void sub_1D259CC38(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;
  sub_1D259CCAC(v4);

}

void sub_1D259CCAC(void *a1)
{
  _BYTE *v1;
  _BYTE *v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  id v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  os_unfair_lock_s *v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  id v43;
  double v44;
  double v45;
  double v46;
  double v47;
  double v48;
  double v49;
  double v50;
  double v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  id v57;
  id v58;
  void *v59;
  id v60;
  void *v61;
  void *v62;
  void *v63;
  id v64;

  v2 = v1;
  v4 = (void **)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape];
  swift_beginAccess();
  v5 = *v4;
  if (!*v4)
  {
    if (!a1)
      return;
LABEL_6:
    if (v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController__renderEngine] != 1)
      return;
    v9 = *v4;
    if (v9)
    {
      v10 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer;
      if (*(_QWORD *)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer])
      {
        v11 = v9;
        goto LABEL_15;
      }
      v16 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
      v17 = v9;
      v18 = objc_msgSend(v16, sel_init);
      v19 = objc_msgSend(v2, sel_view);
      if (v19)
      {
        v20 = v19;
        v21 = objc_msgSend(v19, sel_layer);

        objc_msgSend(v21, sel_bounds);
        v23 = v22;
        v25 = v24;
        v27 = v26;
        v29 = v28;

        objc_msgSend(v18, sel_setFrame_, v23, v25, v27, v29);
        v30 = objc_msgSend((id)objc_opt_self(), sel_whiteColor);
        v31 = objc_msgSend(v30, sel_CGColor);

        objc_msgSend(v18, sel_setFillColor_, v31);
        v32 = *(void **)&v2[v10];
        *(_QWORD *)&v2[v10] = v18;
        v33 = v18;

        v34 = objc_msgSend(v2, sel_view);
        if (v34)
        {
          v35 = v34;
          v36 = objc_msgSend(v34, sel_layer);

          objc_msgSend(v36, sel_setMask_, v33);
LABEL_15:
          if (qword_1ED96F1C8 != -1)
            swift_once();
          v37 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 31) + 88);
          v38 = *(os_unfair_lock_s **)(v37 + 16);
          swift_retain();
          swift_retain();
          os_unfair_lock_lock(v38);
          LOBYTE(v38) = sub_1D2534A90();
          os_unfair_lock_unlock(*(os_unfair_lock_t *)(v37 + 16));
          swift_release();
          swift_release();
          if ((v38 & 1) == 0)
            goto LABEL_22;
          v39 = OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay;
          if (*(_QWORD *)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay])
            goto LABEL_22;
          v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
          v41 = objc_msgSend(v2, sel_view);
          if (v41)
          {
            v42 = v41;
            v43 = objc_msgSend(v41, sel_layer);

            objc_msgSend(v43, sel_bounds);
            v45 = v44;
            v47 = v46;
            v49 = v48;
            v51 = v50;

            objc_msgSend(v40, sel_setFrame_, v45, v47, v49, v51);
            v52 = (void *)objc_opt_self();
            v53 = objc_msgSend(v52, sel_redColor);
            v54 = objc_msgSend(v53, sel_CGColor);

            objc_msgSend(v40, sel_setStrokeColor_, v54);
            objc_msgSend(v40, sel_setLineWidth_, 3.0);
            v55 = objc_msgSend(v52, sel_magentaColor);
            v56 = objc_msgSend(v55, sel_colorWithAlphaComponent_, 0.2);

            v57 = objc_msgSend(v56, sel_CGColor);
            objc_msgSend(v40, sel_setFillColor_, v57);

            v58 = objc_msgSend(v2, sel_view);
            if (v58)
            {
              v59 = v58;
              v60 = objc_msgSend(v58, sel_layer);

              objc_msgSend(v60, sel_addSublayer_, v40);
              v61 = *(void **)&v2[v39];
              *(_QWORD *)&v2[v39] = v40;

LABEL_22:
              v62 = *(void **)&v2[v10];
              if (v62)
                objc_msgSend(v62, sel_setPath_, v9);
              v63 = *(void **)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay];
              if (v63)
              {
                v64 = v63;
                objc_msgSend(v64, sel_setPath_, v9);

              }
              goto LABEL_26;
            }
LABEL_32:
            __break(1u);
            return;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
    }
    else
    {
      v12 = objc_msgSend(v2, sel_view);
      if (v12)
      {
        v13 = v12;
        v14 = objc_msgSend(v12, sel_layer);

        objc_msgSend(v14, sel_setMask_, 0);
        v15 = *(void **)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer];
        *(_QWORD *)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer] = 0;

        v9 = *(void **)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay];
        *(_QWORD *)&v2[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay] = 0;
LABEL_26:

        return;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_30;
  }
  if (!a1)
    goto LABEL_6;
  type metadata accessor for CGPath(0);
  sub_1D25369B0(&qword_1EFC82AC8, (uint64_t (*)(uint64_t))type metadata accessor for CGPath, (uint64_t)&unk_1D26CFBA0);
  v6 = a1;
  v7 = v5;
  v8 = sub_1D26CBDE4();

  if ((v8 & 1) == 0)
    goto LABEL_6;
}

unint64_t sub_1D259D278()
{
  unint64_t result;

  result = qword_1EFC82AA8;
  if (!qword_1EFC82AA8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFC82AA8);
  }
  return result;
}

void BaseWidgetContentViewController.init(coder:)()
{
  _BYTE *v0;

  *(_QWORD *)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape] = 0;
  v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_isContentTransparent] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay] = 0;

  sub_1D26CE1D8();
  __break(1u);
}

void sub_1D259D3D8()
{
  char *v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  void *v25;
  id v26;
  id v27;
  void *v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  objc_super v37;

  v37.receiver = v0;
  v37.super_class = (Class)type metadata accessor for BaseWidgetContentViewController();
  objc_msgSendSuper2(&v37, sel_viewWillLayoutSubviews);
  v1 = objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController], sel_view);
  if (!v1)
  {
    __break(1u);
    goto LABEL_11;
  }
  v2 = v1;
  v3 = objc_msgSend(v0, sel_view);
  if (!v3)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = v3;
  objc_msgSend(v3, sel_bounds);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
  v13 = *(void **)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeMaskLayer];
  if (!v13)
    goto LABEL_6;
  v14 = v13;
  v15 = objc_msgSend(v0, sel_view);
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v16 = v15;
  objc_msgSend(v15, sel_bounds);
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;

  objc_msgSend(v14, sel_setFrame_, v18, v20, v22, v24);
LABEL_6:
  v25 = *(void **)&v0[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShapeDebugOverlay];
  if (!v25)
    return;
  v26 = v25;
  v27 = objc_msgSend(v0, sel_view);
  if (!v27)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v28 = v27;
  objc_msgSend(v27, sel_bounds);
  v30 = v29;
  v32 = v31;
  v34 = v33;
  v36 = v35;

  objc_msgSend(v26, sel_setFrame_, v30, v32, v34, v36);
}

uint64_t type metadata accessor for BaseWidgetContentViewController()
{
  return objc_opt_self();
}

id BaseWidgetContentViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  objc_class *v3;
  objc_class *v4;
  void *v6;
  id v7;

  v4 = v3;
  if (a2)
  {
    v6 = (void *)sub_1D26CD914();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = objc_msgSend(objc_allocWithZone(v4), sel_initWithNibName_bundle_, v6, a3);

  return v7;
}

void BaseWidgetContentViewController.init(nibName:bundle:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id BaseWidgetContentViewController.__deallocating_deinit(uint64_t a1)
{
  return sub_1D259D6E0(a1, type metadata accessor for BaseWidgetContentViewController);
}

id sub_1D259D6E0(uint64_t a1, uint64_t (*a2)(void))
{
  void *v2;
  objc_super v4;

  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

void sub_1D259D768(uint64_t a1@<X8>)
{
  _QWORD *v1;
  id v3;

  v3 = *(id *)(*v1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  sub_1D259C520(a1);

}

id sub_1D259D7BC@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_contentShape);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1D259D810@<X0>(_QWORD **a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & **a1) + 0xC0))();
  *a2 = result & 1;
  return result;
}

uint64_t sub_1D259D854(unsigned __int8 *a1, _QWORD **a2)
{
  return (*(uint64_t (**)(_QWORD))((*MEMORY[0x1E0DEEDD8] & **a2) + 0xC8))(*a1);
}

uint64_t sub_1D259D890()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D259D8CC()
{
  return type metadata accessor for SecureHostingController();
}

uint64_t method lookup function for BaseWidgetContentViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.content.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.content.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.content.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.rbLayer.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.isUsingCoreAnimation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.contentShape.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.contentShape.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.contentShape.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.isContentTransparent.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.isContentTransparent.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.isContentTransparent.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.setNeedsSynchronousUpdate()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.consumeRenderStatistics()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t dispatch thunk of BaseWidgetContentViewController.alwaysOnTimelines(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t storeEnumTagSinglePayload for WidgetRenderEngine(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D259DAB4 + 4 * byte_1D26D3645[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D259DAE8 + 4 * byte_1D26D3640[v4]))();
}

uint64_t sub_1D259DAE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D259DAF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D259DAF8);
  return result;
}

uint64_t sub_1D259DB04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D259DB0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D259DB10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D259DB18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetRenderEngine()
{
  return &type metadata for WidgetRenderEngine;
}

unint64_t sub_1D259DB38()
{
  unint64_t result;

  result = qword_1EFC82AC0;
  if (!qword_1EFC82AC0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D3714, &type metadata for WidgetRenderEngine);
    atomic_store(result, (unint64_t *)&qword_1EFC82AC0);
  }
  return result;
}

void sub_1D259DB80(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1D259DBD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v4 = BYTE6(v22);
  if (BYTE6(v22))
  {
    *(_QWORD *)(v3 - 104) = v2;
    v5 = BYTE6(v22);
    sub_1D258430C(0, BYTE6(v22), 0);
    v2 = *(_QWORD *)(v3 - 104);
    if ((_DWORD)v1)
    {
      if ((_DWORD)v1 == 1)
        v6 = (int)a1;
      else
        v6 = *(_QWORD *)(a1 + 16);
    }
    else
    {
      v6 = 0;
    }
    *(_QWORD *)(v3 - 136) = v22 & 0x3FFFFFFFFFFFFFFFLL;
    *(_QWORD *)(v3 - 128) = v1;
    while (v5)
    {
      if ((_DWORD)v1)
      {
        if ((_DWORD)v1 == 1)
        {
          if (v6 < (int)a1 || v6 >= a1 >> 32)
            goto LABEL_29;
          v7 = sub_1D26CB64C();
          if (!v7)
          {
            __break(1u);
LABEL_36:
            __break(1u);
          }
          v8 = v7;
          v9 = sub_1D26CB670();
          v10 = v6 - v9;
          if (__OFSUB__(v6, v9))
            goto LABEL_32;
        }
        else
        {
          if (v6 < *(_QWORD *)(a1 + 16))
            goto LABEL_31;
          if (v6 >= *(_QWORD *)(a1 + 24))
            goto LABEL_33;
          v12 = sub_1D26CB64C();
          if (!v12)
            goto LABEL_36;
          v8 = v12;
          v13 = sub_1D26CB670();
          v10 = v6 - v13;
          if (__OFSUB__(v6, v13))
            goto LABEL_34;
        }
        v11 = *(_BYTE *)(v8 + v10);
      }
      else
      {
        if (v6 >= BYTE6(v22))
          goto LABEL_30;
        *(_QWORD *)(v3 - 118) = a1;
        *(_WORD *)(v3 - 110) = v22;
        *(_BYTE *)(v3 - 108) = BYTE2(v22);
        *(_BYTE *)(v3 - 107) = BYTE3(v22);
        *(_BYTE *)(v3 - 106) = BYTE4(v22);
        *(_BYTE *)(v3 - 105) = BYTE5(v22);
        v11 = *(_BYTE *)(v3 - 118 + v6);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9621A8);
      v14 = swift_allocObject();
      *(_OWORD *)(v14 + 16) = xmmword_1D26D1280;
      *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v14 + 64) = MEMORY[0x1E0DEDEC8];
      *(_BYTE *)(v14 + 32) = v11;
      v15 = sub_1D26CD95C();
      v17 = v16;
      *(_QWORD *)(v3 - 104) = v2;
      v19 = *(_QWORD *)(v2 + 16);
      v18 = *(_QWORD *)(v2 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1D258430C(v18 > 1, v19 + 1, 1);
        v2 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v2 + 16) = v19 + 1;
      v20 = v2 + 16 * v19;
      *(_QWORD *)(v20 + 32) = v15;
      *(_QWORD *)(v20 + 40) = v17;
      ++v6;
      --v5;
      --v4;
      v1 = *(_QWORD *)(v3 - 128);
      if (!v4)
        return v2;
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    __break(1u);
    JUMPOUT(0x1D259DEF0);
  }
  return v2;
}

uint64_t PublicToken.environmentName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PublicToken.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_1D253FE08(v1, *(_QWORD *)(v0 + 24));
  return v1;
}

uint64_t PublicToken.init(environmentName:token:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

unint64_t PublicToken.description.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  sub_1D253FE08(v2, v1);
  sub_1D259DB80(v2, v1);
  sub_1D253EE04(v2, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  sub_1D2556EB0();
  sub_1D26CD8E4();
  swift_bridgeObjectRelease();
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return 0xD000000000000011;
}

void static PublicToken.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1D26CE3D0() & 1) != 0)
    sub_1D259E340(v2, v3);
}

void sub_1D259E140(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (sub_1D26CE3D0() & 1) != 0)
    sub_1D259E340(v2, v3);
}

uint64_t sub_1D259E1B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  char v5;
  char v7;
  uint64_t v8;
  __int16 v9;
  char v10;
  char v11;
  char v12;
  char v13;
  uint64_t v14;

  v14 = *MEMORY[0x1E0C80C00];
  v8 = a1;
  v9 = a2;
  v10 = BYTE2(a2);
  v11 = BYTE3(a2);
  v12 = BYTE4(a2);
  v13 = BYTE5(a2);
  sub_1D26B4E8C((uint64_t)&v8, (uint64_t)&v8 + BYTE6(a2), a3, a4);
  if (!v4)
    v5 = v7;
  return v5 & 1;
}

uint64_t sub_1D259E28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  result = sub_1D26CB64C();
  v11 = result;
  if (result)
  {
    result = sub_1D26CB670();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  v12 = __OFSUB__(a2, a1);
  v13 = a2 - a1;
  if (v12)
  {
    __break(1u);
    goto LABEL_15;
  }
  v14 = sub_1D26CB664();
  if (v14 >= v13)
    v15 = v13;
  else
    v15 = v14;
  v16 = v11 + v15;
  if (v11)
    v17 = v16;
  else
    v17 = 0;
  sub_1D26B4E8C(v11, v17, a4, a5);
  if (!v5)
    v18 = v19;
  return v18 & 1;
}

void sub_1D259E340(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1D259E38C()
{
  unint64_t v0;

  return ((uint64_t (*)(void))((char *)&loc_1D259E3C0 + *((int *)qword_1D259E598 + (v0 >> 62))))();
}

uint64_t sub_1D259E3D0@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (v1 == BYTE6(v2))
  {
    if (v1 >= 1)
      __asm { BR              X10 }
    v3 = 1;
  }
  else
  {
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t destroy for PublicToken(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return sub_1D253EE04(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

_QWORD *initializeWithCopy for PublicToken(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[2];
  v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_1D253FE08(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

_QWORD *assignWithCopy for PublicToken(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[2];
  v4 = a2[3];
  sub_1D253FE08(v5, v4);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_1D253EE04(v6, v7);
  return a1;
}

_QWORD *assignWithTake for PublicToken(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1D253EE04(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for PublicToken(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PublicToken(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PublicToken()
{
  return &type metadata for PublicToken;
}

uint64_t sub_1D259E76C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D259E7F8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  v3 = *(_QWORD *)v2;
  v4 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 104);
  *(_QWORD *)(v4 + 32) = 0;
  *(_OWORD *)v4 = 0u;
  *(_OWORD *)(v4 + 16) = 0u;
  v5 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 112);
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  *(_BYTE *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 120)) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), a1);
  return v2;
}

uint64_t sub_1D259E888()
{
  sub_1D26CE0A0();
  sub_1D26CDA04();
  sub_1D26CDBE4();
  sub_1D26CDA04();
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDBE4();
  sub_1D26CDA04();
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDBE4();
  sub_1D26CDA04();
  return 0;
}

uint64_t sub_1D259EA50()
{
  sub_1D26CE484();
  sub_1D26CE484();
  sub_1D26CE46C();
  sub_1D26CE46C();
  return sub_1D26CE484();
}

uint64_t sub_1D259EAB0()
{
  sub_1D26CE460();
  sub_1D259EA50();
  return sub_1D26CE49C();
}

uint64_t sub_1D259EAF0()
{
  sub_1D26CE460();
  sub_1D259EA50();
  return sub_1D26CE49C();
}

BOOL sub_1D259EB28(uint64_t a1, uint64_t a2)
{
  return *(double *)a1 == *(double *)a2
      && *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16)
      && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24)
      && *(double *)(a1 + 32) == *(double *)(a2 + 32);
}

double sub_1D259EB6C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  double result;
  __int128 v4;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  result = *(double *)(v2 + 32);
  v4 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v4;
  *(double *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1D259EB8C(uint64_t result)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(unsigned __int8 *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120));
  if (v2 != (result & 1))
  {
    if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 120)))
    {
      result = BSContinuousMachTimeNow();
      v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
      *(_QWORD *)(v1 + v3) = v4;
    }
    else
    {
      result = sub_1D259F264();
      v3 = *(_QWORD *)(*(_QWORD *)v1 + 112);
      *(_QWORD *)(v1 + v3) = 0;
    }
    *(_BYTE *)(v1 + v3 + 8) = v2 ^ 1;
  }
  return result;
}

uint64_t sub_1D259EBF0(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v3 = *(unsigned __int8 *)(v1 + v2);
  *(_BYTE *)(v1 + v2) = a1;
  return sub_1D259EB8C(v3);
}

uint64_t *sub_1D259EC08(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = (uint64_t)v1 + *(_QWORD *)(*v1 + 104);
  *(_OWORD *)v3 = 0u;
  *(_OWORD *)(v3 + 16) = 0u;
  *(_QWORD *)(v3 + 32) = 0;
  v4 = (uint64_t)v1 + *(_QWORD *)(*v1 + 112);
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  *((_BYTE *)v1 + *(_QWORD *)(*v1 + 120)) = 0;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 80) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 96), a1);
  return v1;
}

uint64_t sub_1D259EC78(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;

  v2 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v12 = 0;
  *((_QWORD *)&v12 + 1) = 0xE000000000000000;
  sub_1D26CE0A0();
  v11 = v12;
  sub_1D26CDA04();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2 + *(_QWORD *)(*(_QWORD *)v2 + 96), v3);
  sub_1D26CE394();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1D26CDA04();
  v7 = (__int128 *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104));
  v8 = *((_QWORD *)v7 + 4);
  v9 = v7[1];
  v12 = *v7;
  v13 = v9;
  v14 = v8;
  sub_1D259E888();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return v11;
}

double sub_1D259EDB8(double a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  result = *(double *)(v1 + v2) + a1;
  *(double *)(v1 + v2) = result;
  return result;
}

double sub_1D259EDD0(double a1)
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  result = *(double *)(v2 + 8) + a1;
  *(double *)(v2 + 8) = result;
  return result;
}

uint64_t sub_1D259EDEC(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  v3 = *(_QWORD *)(v2 + 24);
  v4 = __OFADD__(v3, result);
  v5 = v3 + result;
  if (v4)
    __break(1u);
  else
    *(_QWORD *)(v2 + 24) = v5;
  return result;
}

uint64_t sub_1D259EE10(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 104);
  v3 = *(_QWORD *)(v2 + 16);
  v4 = __OFADD__(v3, result);
  v5 = v3 + result;
  if (v4)
    __break(1u);
  else
    *(_QWORD *)(v2 + 16) = v5;
  return result;
}

double sub_1D259EE38()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
  result = 0.0;
  *(_OWORD *)v1 = 0u;
  *(_OWORD *)(v1 + 16) = 0u;
  *(_QWORD *)(v1 + 32) = 0;
  return result;
}

uint64_t sub_1D259EE54@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v3 = v2;
  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for PowerlogViewEntry(0, v6, *(_QWORD *)(v5 + 88), v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, (uint64_t)v3 + *(_QWORD *)(v5 + 96), v6);
  v12 = sub_1D259E7F8((uint64_t)v9);
  v13 = (uint64_t)v3 + *(_QWORD *)(*v3 + 104);
  v14 = *(_QWORD *)(v13 + 32);
  v15 = v12 + *(_QWORD *)(*(_QWORD *)v12 + 104);
  v16 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)v15 = *(_OWORD *)v13;
  *(_OWORD *)(v15 + 16) = v16;
  *(_QWORD *)(v15 + 32) = v14;
  v17 = *(_QWORD *)(*(_QWORD *)v12 + 120);
  v18 = *(unsigned __int8 *)(v12 + v17);
  *(_BYTE *)(v12 + v17) = *((_BYTE *)v3 + *(_QWORD *)(*v3 + 120));
  result = sub_1D259EB8C(v18);
  a2[3] = v11;
  *a2 = v12;
  return result;
}

uint64_t sub_1D259EF50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3[4];

  v0 = swift_retain();
  sub_1D259EE54(v0, v3);
  swift_release();
  __swift_project_boxed_opaque_existential_0(v3, v3[3]);
  v1 = sub_1D26CE3B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1;
}

uint64_t sub_1D259EFB0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _OWORD v12[2];
  uint64_t v13;

  v2 = v1;
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, (uint64_t)v2 + *(_QWORD *)(v3 + 96), v4);
  sub_1D26CD8D8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v8 = (uint64_t)v2 + *(_QWORD *)(*v2 + 104);
  v9 = *(_QWORD *)(v8 + 32);
  v10 = *(_OWORD *)(v8 + 16);
  v12[0] = *(_OWORD *)v8;
  v12[1] = v10;
  v13 = v9;
  sub_1D259EA50();
  return sub_1D26CE478();
}

uint64_t sub_1D259F094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  char v22;
  uint64_t v24;

  v5 = *(_QWORD *)(v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v24 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13((char *)&v24 - v11, v10 + *(_QWORD *)(*(_QWORD *)v10 + 96), v5);
  v13(v9, a2 + *(_QWORD *)(*(_QWORD *)a2 + 96), v5);
  v14 = sub_1D26CD908();
  v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  v15(v9, v5);
  v15(v12, v5);
  if ((v14 & 1) != 0
    && ((v16 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 104),
         v17 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 104),
         *(double *)v16 == *(double *)v17)
      ? (v18 = *(double *)(v16 + 8) == *(double *)(v17 + 8))
      : (v18 = 0),
        v18 ? (v19 = *(_QWORD *)(v16 + 16) == *(_QWORD *)(v17 + 16)) : (v19 = 0),
        v19 ? (v20 = *(_QWORD *)(v16 + 24) == *(_QWORD *)(v17 + 24)) : (v20 = 0),
        v20 ? (v21 = *(double *)(v16 + 32) == *(double *)(v17 + 32)) : (v21 = 0),
        v21))
  {
    v22 = *(_BYTE *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 120)) ^ *(_BYTE *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 120)) ^ 1;
  }
  else
  {
    v22 = 0;
  }
  return v22 & 1;
}

double sub_1D259F208(void (*a1)(__int128 *))
{
  uint64_t v1;
  double *v2;
  double v3;
  __int128 v4;
  double result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  double v9;

  v2 = (double *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
  v3 = v2[4];
  v4 = *((_OWORD *)v2 + 1);
  v7 = *(_OWORD *)v2;
  v8 = v4;
  v9 = v3;
  a1(&v7);
  result = v9;
  v6 = v8;
  *(_OWORD *)v2 = v7;
  *((_OWORD *)v2 + 1) = v6;
  v2[4] = result;
  return result;
}

uint64_t sub_1D259F264()
{
  uint64_t *v0;
  uint64_t result;
  double v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  double v6;

  result = BSContinuousMachTimeNow();
  v3 = *v0;
  v4 = (uint64_t)v0 + *(_QWORD *)(*v0 + 112);
  if ((*(_BYTE *)(v4 + 8) & 1) == 0)
  {
    *(double *)((char *)v0 + *(_QWORD *)(v3 + 104) + 32) = v2
                                                         - *(double *)v4
                                                         + *(double *)((char *)v0 + *(_QWORD *)(v3 + 104) + 32);
    v3 = *v0;
  }
  v5 = *((unsigned __int8 *)v0 + *(_QWORD *)(v3 + 120));
  v6 = v2;
  if (!v5)
    v6 = 0.0;
  *(double *)v4 = v6;
  *(_BYTE *)(v4 + 8) = v5 ^ 1;
  return result;
}

double sub_1D259F2CC(uint64_t a1, double a2, double a3)
{
  double result;

  result = a2 - a3 + *(double *)(a1 + 32);
  *(double *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1D259F2E0()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t sub_1D259F310()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PowerlogViewEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PowerlogViewEntry);
}

uint64_t sub_1D259F358()
{
  _BYTE v1[72];

  sub_1D26CE460();
  sub_1D259EFB0((uint64_t)v1);
  return sub_1D26CE49C();
}

uint64_t getEnumTagSinglePayload for PowerlogViewMetrics(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PowerlogViewMetrics(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PowerlogViewMetrics()
{
  return &type metadata for PowerlogViewMetrics;
}

unint64_t sub_1D259F3FC()
{
  unint64_t result;

  result = qword_1EFC82B30;
  if (!qword_1EFC82B30)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D388C, &type metadata for PowerlogViewMetrics);
    atomic_store(result, (unint64_t *)&qword_1EFC82B30);
  }
  return result;
}

uint64_t sub_1D259F440()
{
  return sub_1D259F358();
}

uint64_t sub_1D259F460(uint64_t a1)
{
  return sub_1D259EFB0(a1);
}

uint64_t sub_1D259F480()
{
  _BYTE v1[72];

  sub_1D26CE460();
  sub_1D259EFB0((uint64_t)v1);
  return sub_1D26CE49C();
}

uint64_t sub_1D259F4BC(uint64_t *a1, uint64_t *a2)
{
  return sub_1D259F094(*a1, *a2);
}

uint64_t sub_1D259F4C8(uint64_t a1)
{
  return sub_1D259EC78(a1);
}

void sub_1D259F4E8()
{
  JUMPOUT(0x1D823A4E4);
}

uint64_t sub_1D259F4F8(uint64_t (*a1)(void))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v7;
  char v8;

  v2 = *(_QWORD *)(v1 + 24);
  if (v2 && (v3 = *(_QWORD *)(v1 + 16), v4 = a1(), v5))
  {
    if (v4 == v3 && v5 == v2)
    {
      swift_bridgeObjectRelease();
      v8 = 0;
    }
    else
    {
      v7 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
      v8 = v7 ^ 1;
    }
  }
  else
  {
    v8 = 1;
  }
  return v8 & 1;
}

id SnapshotRequest.key.getter()
{
  id *v0;

  return *v0;
}

void SnapshotRequest.key.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*SnapshotRequest.key.modify())()
{
  return CGSizeMake;
}

id SnapshotRequest.attributes.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void SnapshotRequest.attributes.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
}

uint64_t (*SnapshotRequest.attributes.modify())()
{
  return CGSizeMake;
}

uint64_t SnapshotRequest.contentIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SnapshotRequest.contentIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SnapshotRequest.contentIdentifier.modify())()
{
  return CGSizeMake;
}

uint64_t SnapshotRequest.protectionLevel.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 36);
  v5 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t SnapshotRequest.protectionLevel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 36);
  v5 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*SnapshotRequest.protectionLevel.modify())()
{
  return CGSizeMake;
}

uint64_t SnapshotRequest.signpostID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 40);
  v5 = sub_1D26CC00C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t SnapshotRequest.signpostID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 40);
  v5 = sub_1D26CC00C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*SnapshotRequest.signpostID.modify())()
{
  return CGSizeMake;
}

uint64_t SnapshotRequest.layer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t SnapshotRequest.layer.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*SnapshotRequest.layer.modify())()
{
  return CGSizeMake;
}

id SnapshotRequest.id.getter@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t SnapshotRequest.init(key:attributes:contentIdentifier:protectionLevel:signpostID:layer:)@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  id v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v39;
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;

  v42 = a7;
  v44 = a6;
  v45 = a5;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C2E0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1D26CC00C();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = a1;
  *(_QWORD *)a9 = a1;
  *((_QWORD *)a9 + 1) = a2;
  v41 = a2;
  *((_QWORD *)a9 + 2) = a3;
  *((_QWORD *)a9 + 3) = a4;
  v43 = a8;
  v24 = (int *)type metadata accessor for SnapshotRequest(0, a8, v22, v23);
  v25 = &a9[v24[9]];
  v26 = sub_1D26CD488();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = v25;
  v29 = (uint64_t)v17;
  v31 = v44;
  v30 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v28, v45, v26);
  sub_1D259FAC0(v31, v29);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v29, 1, v18) != 1)
  {
    sub_1D259FB08(v31);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v30, v26);
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 32);
    v37(v21, v29, v18);
    v37(&a9[v24[10]], (uint64_t)v21, v18);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(&a9[v24[11]], v42);
  }
  v39 = v29;
  sub_1D26CE4A8();
  v32 = v40;
  v33 = v41;
  sub_1D26CDED8();
  v53 = v48;
  v54 = v49;
  v55 = v50;
  v51 = v46;
  v52 = v47;
  v34 = sub_1D26CE490();
  if ((v34 & 0x8000000000000000) == 0)
  {
LABEL_5:
    sub_1D26CC018();

    sub_1D259FB08(v44);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v45, v26);
    sub_1D259FB08(v39);
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(&a9[v24[10]], v21, v18);
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(&a9[v24[11]], v42);
  }
  v35 = __OFSUB__(0, v34);
  v36 = -v34;
  if (v35)
  {
    __break(1u);
  }
  else if ((v36 & 0x8000000000000000) == 0)
  {
    goto LABEL_5;
  }
  result = sub_1D26CE1CC();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SnapshotRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SnapshotRequest);
}

uint64_t sub_1D259FAC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C2E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D259FB08(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C2E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D259FB48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D259FB80()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1D26CD488();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CC00C();
    if (v2 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void **sub_1D259FC40(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int v19;
  char *v20;
  _QWORD *v23;
  void **v24;
  void *v25;
  _QWORD *v26;
  _QWORD *v27;
  unint64_t v28;
  unint64_t v29;
  void (*v30)(unint64_t, unint64_t, uint64_t);
  char *v31;
  id v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v38 = sub_1D26CD488();
  v6 = *(_QWORD *)(v38 - 8);
  v7 = *(_DWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = sub_1D26CC00C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80);
  v12 = v8 + v11;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = *(_QWORD *)(v10 + 64) + v15;
  v17 = ((v16 + ((v12 + ((v7 + 32) & ~(unint64_t)v7)) & ~v11)) & ~v15)
      + *(_QWORD *)(v14 + 64);
  v18 = v11 | v7 | v15;
  v19 = (*(_DWORD *)(v10 + 80) | v7 | *(_DWORD *)(v14 + 80)) & 0x100000;
  v20 = (char *)*a2;
  *a1 = *a2;
  if (v18 > 7 || v19 != 0 || v17 > 0x18)
  {
    a1 = (void **)&v20[(v18 & 0xF8 ^ 0x1F8) & (v18 + 16)];
    swift_retain();
  }
  else
  {
    v36 = ~v11;
    v37 = ~v15;
    v23 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
    v24 = (void **)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    v25 = *v24;
    *v23 = *v24;
    v26 = (_QWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    v27 = (_QWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v26 = *v27;
    v26[1] = v27[1];
    v28 = ((unint64_t)v26 + v7 + 16) & ~(unint64_t)v7;
    v29 = ((unint64_t)v27 + v7 + 16) & ~(unint64_t)v7;
    v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v34 = v9;
    v35 = v13;
    v31 = v20;
    v32 = v25;
    swift_bridgeObjectRetain();
    v30(v28, v29, v38);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((v28 + v12) & v36, (v29 + v12) & v36, v34);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v14 + 16))((((v28 + v12) & v36) + v16) & v37, (((v29 + v12) & v36) + v16) & v37, v35);
  }
  return a1;
}

uint64_t sub_1D259FE14(id *a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v3 = (unint64_t)a1 + 15;

  v3 &= 0xFFFFFFFFFFFFF8uLL;
  swift_bridgeObjectRelease();
  v4 = sub_1D26CD488();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = sub_1D26CC00C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v10, v8);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((v10 + *(_QWORD *)(v9 + 64) + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

_QWORD *sub_1D259FED8(_QWORD *a1, void **a2, uint64_t a3)
{
  unint64_t v5;
  void *v6;
  _QWORD *v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = *a2;
  v5 = (unint64_t)a2 + 15;
  *a1 = v6;
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v8 = *(void **)(v5 & 0xFFFFFFFFFFFFF8);
  *v7 = v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((v5 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  v11 = sub_1D26CD488();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v9 + v13 + 16) & ~v13;
  v15 = ((unint64_t)v10 + v13 + 16) & ~v13;
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v17 = v6;
  v18 = v8;
  swift_bridgeObjectRetain();
  v16(v14, v15, v11);
  v19 = *(_QWORD *)(v12 + 64);
  v20 = sub_1D26CC00C();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = v19 + v22;
  v24 = (v19 + v22 + v14) & ~v22;
  v25 = (v23 + v15) & ~v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v24, v25, v20);
  v26 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v26 + 16))((*(_QWORD *)(v21 + 64) + *(unsigned __int8 *)(v26 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80), (*(_QWORD *)(v21 + 64) + *(unsigned __int8 *)(v26 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
  return a1;
}

void **sub_1D25A0004(void **a1, void **a2, uint64_t a3)
{
  void *v5;
  unint64_t v6;
  void *v7;
  unint64_t v8;
  id v9;
  _QWORD *v10;
  void *v11;
  void *v12;
  id v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = (unint64_t)a2 + 15;
  v5 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = (unint64_t)a1 + 15;
  v9 = v5;

  v10 = (_QWORD *)(v8 & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFF8uLL;
  v11 = *(void **)v6;
  v12 = *(void **)(v8 & 0xFFFFFFFFFFFFFFF8);
  *v10 = *(_QWORD *)v6;
  v13 = v11;

  v14 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = sub_1D26CD488();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = ((unint64_t)v14 + v18 + 16) & ~v18;
  v20 = ((unint64_t)v15 + v18 + 16) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(v19, v20, v16);
  v21 = *(_QWORD *)(v17 + 64);
  v22 = sub_1D26CC00C();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(unsigned __int8 *)(v23 + 80);
  v25 = (v21 + v24 + v19) & ~v24;
  v26 = (v21 + v24 + v20) & ~v24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 24))(v25, v26, v22);
  v27 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v27 + 24))((*(_QWORD *)(v23 + 64) + *(unsigned __int8 *)(v27 + 80) + v25) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80), (*(_QWORD *)(v23 + 64) + *(unsigned __int8 *)(v27 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
  return a1;
}

_QWORD *sub_1D25A0138(_QWORD *a1, uint64_t *a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = *a2;
  v5 = (unint64_t)a2 + 15;
  *a1 = v6;
  v7 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  *v7 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFF8);
  v8 = (_OWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v9 = (_OWORD *)(((v5 & 0xFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  *v8 = *v9;
  v10 = sub_1D26CD488();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned __int8 *)(v11 + 80);
  v13 = ((unint64_t)v8 + v12 + 16) & ~v12;
  v14 = ((unint64_t)v9 + v12 + 16) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v13, v14, v10);
  v15 = *(_QWORD *)(v11 + 64);
  v16 = sub_1D26CC00C();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned __int8 *)(v17 + 80);
  v19 = (v15 + v18 + v13) & ~v18;
  v20 = (v15 + v18 + v14) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v19, v20, v16);
  v21 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v21 + 32))((*(_QWORD *)(v17 + 64) + *(unsigned __int8 *)(v21 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80), (*(_QWORD *)(v17 + 64) + *(unsigned __int8 *)(v21 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  return a1;
}

void **sub_1D25A0238(void **a1, void **a2, uint64_t a3)
{
  unint64_t v5;
  void *v6;
  unint64_t v7;
  void *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = (unint64_t)a2 + 15;
  v6 = *a1;
  *a1 = *a2;
  v7 = (unint64_t)a1 + 15;

  v7 &= 0xFFFFFFFFFFFFFFF8;
  v5 &= 0xFFFFFFFFFFFFF8uLL;
  v8 = *(void **)v7;
  *(_QWORD *)v7 = *(_QWORD *)v5;

  v9 = (_QWORD *)((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  v11 = sub_1D26CD488();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned __int8 *)(v12 + 80);
  v14 = ((unint64_t)v9 + v13 + 16) & ~v13;
  v15 = ((unint64_t)v10 + v13 + 16) & ~v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v14, v15, v11);
  v16 = *(_QWORD *)(v12 + 64);
  v17 = sub_1D26CC00C();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned __int8 *)(v18 + 80);
  v20 = (v16 + v19 + v14) & ~v19;
  v21 = (v16 + v19 + v15) & ~v19;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 40))(v20, v21, v17);
  v22 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v22 + 40))((*(_QWORD *)(v18 + 64) + *(unsigned __int8 *)(v22 + 80) + v20) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80), (*(_QWORD *)(v18 + 64) + *(unsigned __int8 *)(v22 + 80) + v21) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  return a1;
}

uint64_t sub_1D25A035C(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int v24;
  unsigned int v26;
  int v27;
  int v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;

  v6 = sub_1D26CD488();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = sub_1D26CC00C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if (v8 <= v11)
    v12 = *(_DWORD *)(v10 + 84);
  else
    v12 = v8;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = *(_QWORD *)(v13 - 8);
  if (v12 <= *(_DWORD *)(v14 + 84))
    v15 = *(_DWORD *)(v14 + 84);
  else
    v15 = v12;
  if (v15 <= 0x7FFFFFFF)
    v16 = 0x7FFFFFFF;
  else
    v16 = v15;
  if (!a2)
    return 0;
  v17 = *(unsigned __int8 *)(v7 + 80);
  v18 = *(_QWORD *)(v7 + 64);
  v19 = *(unsigned __int8 *)(v10 + 80);
  v20 = *(unsigned __int8 *)(v14 + 80);
  v21 = *(_QWORD *)(v10 + 64) + v20;
  if (a2 <= v16)
    goto LABEL_30;
  v22 = ((v21 + ((v18 + v19 + ((v17 + 32) & ~v17)) & ~v19)) & ~v20) + *(_QWORD *)(v14 + 64);
  v23 = 8 * v22;
  if (v22 <= 3)
  {
    v26 = ((a2 - v16 + ~(-1 << v23)) >> v23) + 1;
    if (HIWORD(v26))
    {
      v24 = *(_DWORD *)((char *)a1 + v22);
      if (!v24)
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v26 > 0xFF)
    {
      v24 = *(unsigned __int16 *)((char *)a1 + v22);
      if (!*(_WORD *)((char *)a1 + v22))
        goto LABEL_30;
      goto LABEL_21;
    }
    if (v26 < 2)
    {
LABEL_30:
      if ((v15 & 0x80000000) != 0)
      {
        v30 = ((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v17 + 16) & ~v17;
        if ((_DWORD)v8 == v16)
        {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v30, v8, v6);
        }
        else
        {
          v31 = (v30 + v18 + v19) & ~v19;
          if ((_DWORD)v11 == v16)
            return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(v31, v11, v9);
          else
            return (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v14 + 48))((v21 + v31) & ~v20, *(unsigned int *)(v14 + 84), v13);
        }
      }
      else
      {
        v29 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v29) = -1;
        return (v29 + 1);
      }
    }
  }
  v24 = *((unsigned __int8 *)a1 + v22);
  if (!*((_BYTE *)a1 + v22))
    goto LABEL_30;
LABEL_21:
  v27 = (v24 - 1) << v23;
  if (v22 > 3)
    v27 = 0;
  if ((_DWORD)v22)
  {
    if (v22 <= 3)
      v28 = ((v21 + ((v18 + v19 + ((v17 + 32) & ~(_DWORD)v17)) & ~(_DWORD)v19)) & ~(_DWORD)v20) + *(_DWORD *)(v14 + 64);
    else
      v28 = 4;
    __asm { BR              X12 }
  }
  return v16 + v27 + 1;
}

void sub_1D25A05A0(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  size_t v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  int v19;

  v8 = *(_QWORD *)(sub_1D26CD488() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = *(_QWORD *)(sub_1D26CC00C() - 8);
  if (v9 <= *(_DWORD *)(v10 + 84))
    v11 = *(_DWORD *)(v10 + 84);
  else
    v11 = v9;
  v12 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (v11 <= *(_DWORD *)(v12 + 84))
    v13 = *(_DWORD *)(v12 + 84);
  else
    v13 = v11;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v15 = ((*(_QWORD *)(v10 + 64)
        + *(unsigned __int8 *)(v12 + 80)
        + ((*(_QWORD *)(v8 + 64)
          + *(unsigned __int8 *)(v10 + 80)
          + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + *(_QWORD *)(v12 + 64);
  if (a3 <= v14)
  {
    v16 = 0u;
  }
  else if (v15 <= 3)
  {
    v18 = ((a3 - v14 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v18))
    {
      v16 = 4u;
    }
    else if (v18 >= 0x100)
    {
      v16 = 2;
    }
    else
    {
      v16 = v18 > 1;
    }
  }
  else
  {
    v16 = 1u;
  }
  if (v14 < a2)
  {
    v17 = ~v14 + a2;
    if (v15 < 4)
    {
      if ((_DWORD)v15)
      {
        v19 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if ((_DWORD)v15 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if ((_DWORD)v15 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X7 }
}

unint64_t sub_1D25A0874()
{
  unint64_t result;
  unint64_t v1;

  result = qword_1EFC82B38;
  if (!qword_1EFC82B38)
  {
    v1 = sub_1D25A08BC();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC82B38);
  }
  return result;
}

unint64_t sub_1D25A08BC()
{
  unint64_t result;

  result = qword_1ED96BFB8;
  if (!qword_1ED96BFB8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96BFB8);
  }
  return result;
}

id WidgetEntryKey.extensionIdentity.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_extensionIdentity);
}

uint64_t WidgetEntryKey.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(*(id *)v0, sel__loggingIdentifierWithMetrics_, *(_QWORD *)(v0 + 8));
  v5 = sub_1D26CD938();
  v7 = v6;

  v12 = 544108320;
  v13 = 0xE400000000000000;
  v8 = type metadata accessor for WidgetEntryKey();
  sub_1D25A0AA4(v0 + *(int *)(v8 + 24), (uint64_t)v3);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v3, 1, v9) == 1)
  {
    sub_1D253703C((uint64_t)v3, &qword_1ED96FD58);
  }
  else
  {
    sub_1D26CBD0C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v3, v9);
  }
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v12 = v5;
  v13 = v7;
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1D25A0AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id WidgetEntryKey.widget.getter()
{
  id *v0;

  return *v0;
}

id WidgetEntryKey.metrics.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

uint64_t WidgetEntryKey.host.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for WidgetEntryKey() + 24);
  return sub_1D25A0AA4(v3, a1);
}

uint64_t WidgetEntryKey.init(widget:metrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  char *v3;
  uint64_t v4;

  *a3 = a1;
  a3[1] = a2;
  v3 = (char *)a3 + *(int *)(type metadata accessor for WidgetEntryKey() + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
}

uint64_t WidgetEntryKey.init(widget:metrics:host:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;

  *a4 = a1;
  a4[1] = a2;
  v5 = (uint64_t)a4 + *(int *)(type metadata accessor for WidgetEntryKey() + 24);
  return sub_1D25A0BB8(a3, v5);
}

uint64_t sub_1D25A0BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t WidgetEntryKey.hash(into:)()
{
  id *v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v0;
  sub_1D26CDED8();

  v10 = v1[1];
  sub_1D26CDED8();

  v11 = type metadata accessor for WidgetEntryKey();
  sub_1D25A0AA4((uint64_t)v1 + *(int *)(v11 + 24), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return sub_1D26CE478();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  sub_1D26CE478();
  sub_1D25A27E4(&qword_1ED963340, MEMORY[0x1E0D0FB50]);
  sub_1D26CD8D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t WidgetEntryKey.hashValue.getter()
{
  sub_1D26CE460();
  WidgetEntryKey.hash(into:)();
  return sub_1D26CE49C();
}

id sub_1D25A0DBC()
{
  id *v0;

  return objc_msgSend(*v0, sel_extensionIdentity);
}

uint64_t sub_1D25A0DE4()
{
  sub_1D26CE460();
  WidgetEntryKey.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D25A0E24()
{
  sub_1D26CE460();
  WidgetEntryKey.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D25A0E60(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D25E81E8(*a1, *a2);
}

uint64_t sub_1D25A0E6C()
{
  sub_1D26CE460();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D25A0F00()
{
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25A0F70()
{
  sub_1D26CE460();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D25A1000@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25A279C();
  *a1 = result;
  return result;
}

void sub_1D25A102C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE600000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x7363697274656DLL;
  if (v2 != 1)
  {
    v5 = 1953722216;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x746567646977;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1D25A1080()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7363697274656DLL;
  if (*v0 != 1)
    v1 = 1953722216;
  if (*v0)
    return v1;
  else
    return 0x746567646977;
}

uint64_t sub_1D25A10D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25A279C();
  *a1 = result;
  return result;
}

void sub_1D25A10F4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1D25A1100()
{
  sub_1D25A1D0C();
  return sub_1D26CE4F0();
}

uint64_t sub_1D25A1128()
{
  sub_1D25A1D0C();
  return sub_1D26CE4FC();
}

void WidgetEntryKey.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  unint64_t v39;
  char v40;

  v35 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B40);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = a1[3];
  v37 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v13);
  sub_1D25A1D0C();
  v14 = v36;
  sub_1D26CE4D8();
  if (v14)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    return;
  }
  v34 = v10;
  v15 = v7;
  v36 = v5;
  v40 = 0;
  sub_1D25A1D50();
  sub_1D26CE2C8();
  v16 = v6;
  v17 = v9;
  v19 = v38;
  v18 = v39;
  v20 = sub_1D2539514(0, &qword_1ED9620C8);
  sub_1D2539514(0, &qword_1ED96EA38);
  v21 = sub_1D26CDD28();
  v31 = v20;
  v33 = v19;
  if (v21)
  {
    v32 = v12;
    *v12 = v21;
    v40 = 1;
    v22 = v17;
    sub_1D26CE2C8();
    v24 = v38;
    v23 = v39;
    sub_1D2539514(0, &qword_1ED96B160);
    v25 = sub_1D26CDD28();
    v26 = v18;
    v31 = v23;
    v27 = (uint64_t)v32;
    if (v25)
    {
      v32[1] = v25;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      LOBYTE(v38) = 2;
      sub_1D25A27E4(&qword_1EFC82B50, MEMORY[0x1E0D0FB68]);
      v28 = (uint64_t)v36;
      sub_1D26CE280();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v16);
      sub_1D253EE04(v24, v31);
      sub_1D253EE04(v33, v26);
      v29 = v35;
      sub_1D25A0BB8(v28, v27 + *(int *)(v34 + 24));
      sub_1D257F290(v27, v29);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      sub_1D25A1D94(v27);
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t WidgetEntryKey.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  void *v17;
  unint64_t v18;
  unint64_t v19;
  void *v21;
  uint64_t v22;
  id v23;
  id v24;
  void *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char v45;
  id v46;
  unint64_t v47;
  uint64_t v48;

  v3 = v1;
  v48 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  MEMORY[0x1E0C80A78](v5);
  v41 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v42 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B58);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D25A1D0C();
  sub_1D26CE4E4();
  v13 = (void *)objc_opt_self();
  v44 = v3;
  v14 = *v3;
  v46 = 0;
  v15 = objc_msgSend(v13, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v14, 1, &v46);
  v16 = v46;
  if (!v15)
  {
    v21 = v16;
    sub_1D26CB76C();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  v43 = v10;
  v39 = v7;
  v17 = (void *)sub_1D26CB8E0();
  v19 = v18;

  v46 = v17;
  v47 = v19;
  v45 = 0;
  sub_1D25A1DD0();
  sub_1D26CE358();
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v9);
    return sub_1D253EE04((uint64_t)v17, v19);
  }
  v37 = (uint64_t)v17;
  v38 = v19;
  v22 = v44[1];
  v46 = 0;
  v23 = objc_msgSend(v13, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v22, 1, &v46);
  v24 = v46;
  if (!v23)
  {
    v29 = v24;
    sub_1D26CB76C();

    swift_willThrow();
    sub_1D253EE04(v37, v38);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v12, v9);
  }
  v25 = (void *)sub_1D26CB8E0();
  v27 = v26;

  v46 = v25;
  v47 = v27;
  v45 = 1;
  sub_1D26CE358();
  v28 = v37;
  v10 = v43;
  v35 = (uint64_t)v25;
  v36 = v27;
  v30 = type metadata accessor for WidgetEntryKey();
  v31 = v41;
  sub_1D25A0AA4((uint64_t)v44 + *(int *)(v30 + 24), v41);
  v32 = v42;
  v33 = v39;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v31, 1, v39) != 1)
  {
    v34 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 32))(v40, v31, v33);
    LOBYTE(v46) = 2;
    sub_1D25A27E4(&qword_1EFC82B60, MEMORY[0x1E0D0FB48]);
    sub_1D26CE358();
    sub_1D253EE04(v35, v36);
    sub_1D253EE04(v28, v38);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v33);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1D253EE04(v35, v36);
  sub_1D253EE04(v28, v38);
  return sub_1D253703C(v31, &qword_1ED96FD58);
}

void sub_1D25A1988(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  WidgetEntryKey.init(from:)(a1, a2);
}

uint64_t sub_1D25A199C(_QWORD *a1)
{
  return WidgetEntryKey.encode(to:)(a1);
}

BOOL _s9ChronoKit14WidgetEntryKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char v35;
  void (*v36)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v42 = *(_QWORD *)(v4 - 8);
  v43 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE80);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v38 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v38 - v17;
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
  v19 = a1;
  v20 = a2;
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  v40 = v16;
  v41 = v18;
  v38 = v6;
  v39 = v13;
  v22 = v42;
  v21 = v43;
  v23 = v20;
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  v24 = type metadata accessor for WidgetEntryKey();
  v25 = (uint64_t)v41;
  sub_1D25A0AA4(v19 + *(int *)(v24 + 24), (uint64_t)v41);
  v26 = (uint64_t)v40;
  sub_1D25A0AA4(v23 + *(int *)(v24 + 24), (uint64_t)v40);
  v27 = (uint64_t)v9;
  v28 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1D25A0AA4(v25, (uint64_t)v9);
  sub_1D25A0AA4(v26, v28);
  v29 = v22;
  v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  v31 = v21;
  if (v30((uint64_t)v9, 1, v21) == 1)
  {
    sub_1D253703C(v26, &qword_1ED96FD58);
    sub_1D253703C(v25, &qword_1ED96FD58);
    if (v30(v28, 1, v21) == 1)
    {
      sub_1D253703C((uint64_t)v9, &qword_1ED96FD58);
      return 1;
    }
    goto LABEL_8;
  }
  v32 = (uint64_t)v39;
  sub_1D25A0AA4((uint64_t)v9, (uint64_t)v39);
  if (v30(v28, 1, v31) == 1)
  {
    sub_1D253703C(v26, &qword_1ED96FD58);
    sub_1D253703C(v25, &qword_1ED96FD58);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v32, v31);
LABEL_8:
    sub_1D253703C((uint64_t)v9, &qword_1ED96FE80);
    return 0;
  }
  v33 = v25;
  v34 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 32))(v38, v28, v31);
  sub_1D25A27E4(&qword_1ED963348, MEMORY[0x1E0D0FB58]);
  v35 = sub_1D26CD908();
  v36 = *(void (**)(char *, uint64_t))(v29 + 8);
  v36(v34, v31);
  sub_1D253703C(v26, &qword_1ED96FD58);
  sub_1D253703C(v33, &qword_1ED96FD58);
  v36((char *)v32, v31);
  sub_1D253703C(v27, &qword_1ED96FD58);
  return (v35 & 1) != 0;
}

unint64_t sub_1D25A1D0C()
{
  unint64_t result;

  result = qword_1EFC82B48;
  if (!qword_1EFC82B48)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D3C90, &type metadata for WidgetEntryKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82B48);
  }
  return result;
}

unint64_t sub_1D25A1D50()
{
  unint64_t result;

  result = qword_1ED963278;
  if (!qword_1ED963278)
  {
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED963278);
  }
  return result;
}

uint64_t sub_1D25A1D94(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for WidgetEntryKey();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D25A1DD0()
{
  unint64_t result;

  result = qword_1ED96FE68;
  if (!qword_1ED96FE68)
  {
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED96FE68);
  }
  return result;
}

uint64_t sub_1D25A1E14(uint64_t a1)
{
  uint64_t result;

  result = sub_1D25A1E6C(&qword_1ED96C890, (uint64_t)&protocol conformance descriptor for WidgetEntryKey);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D25A1E48()
{
  return sub_1D25A1E6C(&qword_1ED96B518, (uint64_t)&protocol conformance descriptor for WidgetEntryKey);
}

uint64_t sub_1D25A1E6C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for WidgetEntryKey();
    result = MEMORY[0x1D823A4E4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of CacheManagerEntryKey.extensionIdentity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

char *initializeBufferWithCopyOfBuffer for WidgetEntryKey(char *a1, char **a2, uint64_t a3)
{
  int v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = &v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *((_QWORD *)a1 + 1) = v6;
    v7 = *(int *)(a3 + 24);
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = v5;
    v11 = v6;
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v9, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v8, v9, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t destroy for WidgetEntryKey(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

_QWORD *initializeWithCopy for WidgetEntryKey(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  uint64_t v6;
  char *v7;
  const void *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *(void **)a2;
  v5 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (const void *)(a2 + v6);
  v9 = v4;
  v10 = v5;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v12 + 16))(v7, v8, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
  }
  return a1;
}

uint64_t assignWithCopy for WidgetEntryKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  v9 = *(void **)(a2 + 8);
  v10 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v9;
  v11 = v9;

  v12 = *(int *)(a3 + 24);
  v13 = (void *)(a1 + v12);
  v14 = (void *)(a2 + v12);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 24))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 16))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  return a1;
}

_OWORD *initializeWithTake for WidgetEntryKey(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

uint64_t assignWithTake for WidgetEntryKey(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void *, uint64_t, uint64_t);
  int v14;
  int v15;
  uint64_t v16;

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = a2[1];

  v8 = *(int *)(a3 + 24);
  v9 = (void *)(a1 + v8);
  v10 = (char *)a2 + v8;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (!v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v15)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetEntryKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25A2424(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetEntryKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D25A24B0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

void sub_1D25A2528()
{
  unint64_t v0;

  sub_1D25A25A0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D25A25A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED96FE78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96FD28);
    v0 = sub_1D26CDF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED96FE78);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetEntryKey.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D25A2644 + 4 * byte_1D26D3A45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D25A2678 + 4 * byte_1D26D3A40[v4]))();
}

uint64_t sub_1D25A2678(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25A2680(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D25A2688);
  return result;
}

uint64_t sub_1D25A2694(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D25A269CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D25A26A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25A26A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetEntryKey.CodingKeys()
{
  return &type metadata for WidgetEntryKey.CodingKeys;
}

unint64_t sub_1D25A26C8()
{
  unint64_t result;

  result = qword_1EFC82B68;
  if (!qword_1EFC82B68)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D3C68, &type metadata for WidgetEntryKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82B68);
  }
  return result;
}

unint64_t sub_1D25A2710()
{
  unint64_t result;

  result = qword_1EFC82B70;
  if (!qword_1EFC82B70)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D3BA0, &type metadata for WidgetEntryKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82B70);
  }
  return result;
}

unint64_t sub_1D25A2758()
{
  unint64_t result;

  result = qword_1EFC82B78;
  if (!qword_1EFC82B78)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D3BC8, &type metadata for WidgetEntryKey.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82B78);
  }
  return result;
}

uint64_t sub_1D25A279C()
{
  unint64_t v0;

  v0 = sub_1D26CE250();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1D25A27E4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96FD28);
    result = MEMORY[0x1D823A4E4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D25A2828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  uint8_t *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  os_log_type_t v65;
  uint8_t *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;

  v6 = v5;
  v83 = a5;
  v73 = a4;
  v10 = sub_1D26CBB80();
  v70 = *(_QWORD *)(v10 - 8);
  v71 = v10;
  MEMORY[0x1E0C80A78](v10);
  v77 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D26CBAD8();
  v80 = *(_QWORD *)(v12 - 8);
  v81 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963020);
  v75 = *(_QWORD *)(v15 - 8);
  v76 = v15;
  MEMORY[0x1E0C80A78](v15);
  v74 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FD0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v6
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload;
  v21 = sub_1D26CBAB4();
  v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  v23 = OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription__payloadPublisher;
  v72 = v21;
  v22((uint64_t)v19, 1, 1, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963050);
  swift_allocObject();
  *(_QWORD *)(v6 + v23) = sub_1D26CC174();
  *(_QWORD *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription) = 0;
  *(_QWORD *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription) = 0;
  v24 = OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock;
  type metadata accessor for UnfairLock();
  v25 = swift_allocObject();
  v26 = (_DWORD *)swift_slowAlloc();
  *v26 = 0;
  *(_QWORD *)(v25 + 16) = v26;
  *(_QWORD *)(v6 + v24) = v25;
  *(_QWORD *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription__lock_contentAssertions) = MEMORY[0x1E0DEE9E0];
  v27 = v6
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_state;
  v28 = *MEMORY[0x1E0C8FCA8];
  v29 = sub_1D26CBB2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v27, v28, v29);
  v86 = *(_QWORD *)(v6 + v23);
  sub_1D2536488(&qword_1ED963048, &qword_1ED963050, MEMORY[0x1E0C95FB8]);
  *(_QWORD *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadPublisher) = sub_1D26CC204();
  v30 = (_QWORD *)(v6
                 + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
  v82 = a1;
  *v30 = a1;
  v30[1] = a2;
  v31 = &unk_1ED963000;
  v79 = a3;
  sub_1D2538510(a3, v6+ OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityCenter);
  v32 = qword_1ED9633F0;
  v84 = a2;
  swift_bridgeObjectRetain();
  if (v32 != -1)
    swift_once();
  v33 = sub_1D26CC09C();
  v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED977DE8);
  swift_retain();
  v35 = sub_1D26CC084();
  v36 = sub_1D26CDD04();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = swift_slowAlloc();
    *(_DWORD *)v37 = 136315138;
    v86 = v38;
    v78 = v34;
    v39 = v14;
    v40 = *(_QWORD *)(v6
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
    v41 = *(_QWORD *)(v6
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                    + 8);
    swift_bridgeObjectRetain();
    v85 = sub_1D2537880(v40, v41, &v86);
    sub_1D26CDF50();
    swift_release();
    v14 = v39;
    v34 = v78;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v35, v36, "Registering for payload...: %s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v38, -1, -1);
    v42 = v37;
    v31 = (_QWORD *)&unk_1ED963000;
    MEMORY[0x1D823A5E0](v42, -1, -1);

  }
  else
  {

    swift_release();
  }
  v43 = v80;
  v44 = v81;
  v45 = (_QWORD *)(v6 + v31[37]);
  v46 = v45[3];
  v47 = v45[4];
  __swift_project_boxed_opaque_existential_0(v45, v46);
  (*(void (**)(char *, _QWORD, uint64_t))(v43 + 104))(v14, *MEMORY[0x1E0C8F698], v44);
  v48 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v47 + 40))(v82, v84, v14, v46, v47);
  v78 = v34;
  (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v44);
  v86 = v48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963030);
  sub_1D2536488(&qword_1ED963028, &qword_1ED963030, MEMORY[0x1E0C95D90]);
  v49 = v74;
  sub_1D26CC210();
  swift_release();
  v50 = swift_allocObject();
  swift_weakInit();
  v51 = (_QWORD *)swift_allocObject();
  v52 = v73;
  v51[2] = v50;
  v51[3] = v52;
  v51[4] = v83;
  swift_allocObject();
  swift_weakInit();
  sub_1D2536488(&qword_1ED963018, &qword_1ED963020, MEMORY[0x1E0C95708]);
  swift_retain();
  v53 = v76;
  v54 = sub_1D26CC234();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v49, v53);
  *(_QWORD *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription) = v54;
  swift_release();
  v55 = v45[3];
  v56 = v45[4];
  __swift_project_boxed_opaque_existential_0(v45, v55);
  v57 = v77;
  sub_1D26CBB74();
  v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 32))(v57, v55, v56);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v71);
  v86 = v59;
  v60 = swift_allocObject();
  swift_weakInit();
  v61 = (_QWORD *)swift_allocObject();
  v62 = v82;
  v61[2] = v60;
  v61[3] = v62;
  v61[4] = v84;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963430);
  sub_1D2536488(&qword_1ED963428, &qword_1ED963430, MEMORY[0x1E0C95D90]);
  v63 = sub_1D26CC234();
  swift_release();
  swift_release();
  *(_QWORD *)(v6
            + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription) = v63;
  swift_release();
  swift_retain_n();
  v64 = sub_1D26CC084();
  v65 = sub_1D26CDD04();
  if (os_log_type_enabled(v64, v65))
  {
    v66 = (uint8_t *)swift_slowAlloc();
    v67 = swift_slowAlloc();
    *(_DWORD *)v66 = 136446210;
    v86 = v67;
    v68 = *(_QWORD *)(v6
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
    v69 = *(_QWORD *)(v6
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                    + 8);
    swift_bridgeObjectRetain();
    v85 = sub_1D2537880(v68, v69, &v86);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v64, v65, "Subscribed to activity payloads for: %{public}s", v66, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v67, -1, -1);
    MEMORY[0x1D823A5E0](v66, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v79);
  return v6;
}

uint64_t sub_1D25A3244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v14[5];
  uint64_t v15;
  _BYTE v16[40];

  if (qword_1ED9633F0 != -1)
    swift_once();
  v4 = sub_1D26CC09C();
  __swift_project_value_buffer(v4, (uint64_t)qword_1ED977DE8);
  sub_1D2538510(a1, (uint64_t)v16);
  v5 = sub_1D26CC084();
  v6 = sub_1D26CDD04();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    v8 = swift_slowAlloc();
    v15 = v8;
    *(_DWORD *)v7 = 136315138;
    sub_1D2538510((uint64_t)v16, (uint64_t)v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FC8);
    v9 = sub_1D26CD98C();
    v14[0] = sub_1D2537880(v9, v10, &v15);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    _os_log_impl(&dword_1D2531000, v5, v6, "Received payload: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v8, -1, -1);
    MEMORY[0x1D823A5E0](v7, -1, -1);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
  }

  sub_1D2538510(a1, (uint64_t)v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FC8);
  v11 = sub_1D26CBAB4();
  v12 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, v12 ^ 1u, 1, v11);
}

uint64_t sub_1D25A3458(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  void (*v9)(_QWORD);
  uint8_t *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = result;
    if (qword_1ED9633F0 != -1)
      swift_once();
    v6 = sub_1D26CC09C();
    __swift_project_value_buffer(v6, (uint64_t)qword_1ED977DE8);
    swift_retain();
    v7 = sub_1D26CC084();
    v8 = sub_1D26CDD04();
    if (os_log_type_enabled(v7, v8))
    {
      v9 = a3;
      v10 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      v15 = v11;
      *(_DWORD *)v10 = 136315138;
      v13 = *(_QWORD *)(v5
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
      v12 = *(_QWORD *)(v5
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                      + 8);
      swift_bridgeObjectRetain();
      sub_1D2537880(v13, v12, &v15);
      sub_1D26CDF50();
      swift_release();
      a3 = v9;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v7, v8, "Activity ended: %s", v10, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v11, -1, -1);
      MEMORY[0x1D823A5E0](v10, -1, -1);

    }
    else
    {

      swift_release();
    }
    v14 = sub_1D25A47D0();
    a3(v14);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D25A3658(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  os_unfair_lock_s *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  void (*v22)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28[3];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FD0);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v24 - v6;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    if (qword_1ED9633F0 != -1)
      swift_once();
    v10 = sub_1D26CC09C();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED977DE8);
    swift_retain();
    v11 = sub_1D26CC084();
    v12 = sub_1D26CDD04();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v28[0] = v14;
      v25 = v5;
      v26 = a1;
      *(_DWORD *)v13 = 136446210;
      v15 = *(_QWORD *)(v9
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
      v16 = *(_QWORD *)(v9
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                      + 8);
      swift_bridgeObjectRetain();
      v27 = sub_1D2537880(v15, v16, v28);
      v5 = v25;
      a1 = v26;
      sub_1D26CDF50();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v11, v12, "Activity payload updated: %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v14, -1, -1);
      MEMORY[0x1D823A5E0](v13, -1, -1);

    }
    else
    {

      swift_release();
    }
    v17 = *(_QWORD *)(v9
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock);
    v18 = *(os_unfair_lock_s **)(v17 + 16);
    swift_retain();
    os_unfair_lock_lock(v18);
    v19 = sub_1D26CBAB4();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    v21(v7, a1, v19);
    v22 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56);
    v22(v7, 0, 1, v19);
    sub_1D25384CC((uint64_t)v7, (uint64_t)v5, &qword_1ED962FD0);
    v23 = v9
        + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload;
    swift_beginAccess();
    sub_1D25A79E4((uint64_t)v5, v23);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v17 + 16));
    swift_release();
    v21(v7, a1, v19);
    v22(v7, 0, 1, v19);
    swift_retain();
    sub_1D26CC168();
    swift_release();
    swift_release();
    return sub_1D253703C((uint64_t)v7, &qword_1ED962FD0);
  }
  return result;
}

uint64_t sub_1D25A39A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  void (*v47)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  os_unfair_lock_s *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  char v71;

  v68 = a4;
  v6 = sub_1D26CBAB4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v61 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FD0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v62 = (uint64_t)&v55 - v14;
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v55 - v15;
  v17 = sub_1D26CBACC();
  v67 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = sub_1D26CBB14();
  v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 - 8);
  v70 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v66 = (char *)&v55 - v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FF0);
  v26 = MEMORY[0x1E0C80A78](v25);
  v64 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v65 = (char *)&v55 - v28;
  v29 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v56 = v12;
    v31 = *(_QWORD *)(v29 + 16);
    v63 = result;
    if (v31)
    {
      v58 = v7;
      v59 = v6;
      v60 = v16;
      v32 = v29 + ((*((unsigned __int8 *)v69 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v69 + 80));
      v33 = *((_QWORD *)v69 + 9);
      v34 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v69 + 2);
      v57 = v29;
      swift_bridgeObjectRetain();
      v35 = v70;
      while (1)
      {
        v34(v23, v32, v35);
        sub_1D26CBAFC();
        v36 = sub_1D26CBAC0();
        v38 = v37;
        (*(void (**)(char *, uint64_t))(v67 + 8))(v19, v17);
        if (v36 == a3 && v38 == v68)
          break;
        v39 = sub_1D26CE3D0();
        swift_bridgeObjectRelease();
        if ((v39 & 1) != 0)
          goto LABEL_12;
        v35 = v70;
        (*((void (**)(char *, uint64_t))v69 + 1))(v23, v70);
        v32 += v33;
        if (!--v31)
        {
          swift_bridgeObjectRelease();
          v40 = 1;
          v6 = v59;
          v16 = v60;
          v7 = v58;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
LABEL_12:
      v6 = v59;
      v16 = v60;
      v7 = v58;
      v41 = v69;
      v35 = v70;
      v43 = (uint64_t)v65;
      v42 = (uint64_t)v66;
      v44 = (uint64_t)v64;
      swift_bridgeObjectRelease();
      (*((void (**)(uint64_t, char *, uint64_t))v41 + 4))(v43, v23, v35);
      v40 = 0;
    }
    else
    {
      v40 = 1;
      v35 = v70;
LABEL_10:
      v41 = v69;
      v43 = (uint64_t)v65;
      v42 = (uint64_t)v66;
      v44 = (uint64_t)v64;
    }
    (*((void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v41 + 7))(v43, v40, 1, v35);
    sub_1D2537078(v43, v44, &qword_1ED962FF0);
    if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v41 + 6))(v44, 1, v35) == 1)
    {
      sub_1D253703C(v43, &qword_1ED962FF0);
      swift_release();
      v45 = v44;
      v46 = &qword_1ED962FF0;
    }
    else
    {
      (*((void (**)(uint64_t, uint64_t, uint64_t))v41 + 4))(v42, v44, v35);
      v71 = 0;
      v47 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
      v47(v16, 1, 1, v6);
      v48 = v63;
      v49 = *(_QWORD *)(v63
                      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock);
      v50 = *(os_unfair_lock_s **)(v49 + 16);
      swift_retain();
      os_unfair_lock_lock(v50);
      sub_1D25A3F6C(v48, v42, (uint64_t)v16, &v71);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v49 + 16));
      swift_release();
      if (v71 == 1)
      {
        v69 = v47;
        v51 = v62;
        sub_1D2537078((uint64_t)v16, v62, &qword_1ED962FD0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v51, 1, v6) == 1)
        {
          sub_1D253703C(v43, &qword_1ED962FF0);
          swift_release();
          (*((void (**)(uint64_t, uint64_t))v41 + 1))(v42, v70);
          sub_1D253703C(v51, &qword_1ED962FD0);
        }
        else
        {
          v52 = v61;
          (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v61, v51, v6);
          v53 = v42;
          v54 = (uint64_t)v56;
          (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v56, v52, v6);
          v69((char *)v54, 0, 1, v6);
          swift_retain();
          sub_1D26CC168();
          swift_release();
          swift_release();
          sub_1D253703C(v54, &qword_1ED962FD0);
          (*(void (**)(char *, uint64_t))(v7 + 8))(v52, v6);
          sub_1D253703C(v43, &qword_1ED962FF0);
          (*((void (**)(uint64_t, uint64_t))v41 + 1))(v53, v70);
        }
      }
      else
      {
        sub_1D253703C(v43, &qword_1ED962FF0);
        swift_release();
        (*((void (**)(uint64_t, uint64_t))v41 + 1))(v42, v70);
      }
      v46 = &qword_1ED962FD0;
      v45 = (uint64_t)v16;
    }
    return sub_1D253703C(v45, v46);
  }
  return result;
}

uint64_t sub_1D25A3F6C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  void (*v20)(char *, _QWORD, uint64_t);
  char v21;
  void (*v22)(char *, uint64_t);
  char v23;
  uint64_t v24;
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v40[2];
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48[3];
  uint64_t v49;

  v46 = a4;
  v45 = a3;
  v49 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FD0);
  MEMORY[0x1E0C80A78](v5);
  v42 = (uint64_t)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CBB14();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CBB2C();
  v12 = *(_QWORD **)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v40 - v16;
  v41 = a1;
  v18 = a1
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_state;
  swift_beginAccess();
  v19 = (void (*)(char *, uint64_t, uint64_t))v12[2];
  v43 = v18;
  v19(v17, v18, v11);
  v20 = (void (*)(char *, _QWORD, uint64_t))v12[13];
  v20(v15, *MEMORY[0x1E0C8FCA8], v11);
  v21 = sub_1D26CBB20();
  v44 = v12;
  v22 = (void (*)(char *, uint64_t))v12[1];
  v22(v15, v11);
  v22(v17, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v49, v7);
  if ((v21 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_8;
  }
  sub_1D26CBB08();
  v20(v15, *MEMORY[0x1E0C8FCA0], v11);
  v23 = sub_1D26CBB20();
  v22(v15, v11);
  v22(v17, v11);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((v23 & 1) == 0)
  {
LABEL_8:
    v32 = v45;
    sub_1D253703C(v45, &qword_1ED962FD0);
    v33 = sub_1D26CBAB4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
    v34 = 0;
    goto LABEL_11;
  }
  if (qword_1ED9633F0 != -1)
    swift_once();
  v24 = sub_1D26CC09C();
  __swift_project_value_buffer(v24, (uint64_t)qword_1ED977DE8);
  v25 = v41;
  swift_retain();
  v26 = sub_1D26CC084();
  v27 = sub_1D26CDD04();
  if (os_log_type_enabled(v26, v27))
  {
    v28 = (uint8_t *)swift_slowAlloc();
    v29 = swift_slowAlloc();
    v48[0] = v29;
    *(_DWORD *)v28 = 136446210;
    v40[1] = v28 + 4;
    v30 = *(_QWORD *)(v25
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier);
    v31 = *(_QWORD *)(v25
                    + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                    + 8);
    swift_bridgeObjectRetain();
    v47 = sub_1D2537880(v30, v31, v48);
    sub_1D26CDF50();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v26, v27, "Activity became stale changed: %{public}s", v28, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v29, -1, -1);
    MEMORY[0x1D823A5E0](v28, -1, -1);

  }
  else
  {

    swift_release();
  }
  v35 = v25
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload;
  swift_beginAccess();
  v36 = v35;
  v37 = v42;
  sub_1D2537078(v36, v42, &qword_1ED962FD0);
  sub_1D25A79E4(v37, v45);
  v34 = 1;
LABEL_11:
  *v46 = v34;
  sub_1D26CBB08();
  v38 = v43;
  swift_beginAccess();
  ((void (*)(uint64_t, char *, uint64_t))v44[5])(v38, v17, v11);
  return swift_endAccess();
}

uint64_t sub_1D25A43D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  _QWORD v25[3];
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[3];
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  v7 = MEMORY[0x1E0C80A78](v34);
  v9 = (id *)((char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v25 - v10;
  if (qword_1ED9633F0 != -1)
    swift_once();
  v12 = sub_1D26CC09C();
  __swift_project_value_buffer(v12, (uint64_t)qword_1ED977DE8);
  sub_1D2537078(a1, (uint64_t)v11, &qword_1ED963110);
  v13 = sub_1D26CC084();
  v14 = sub_1D26CDD04();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = swift_slowAlloc();
    v30 = v3;
    v16 = (uint8_t *)v15;
    v27 = swift_slowAlloc();
    v31[0] = v27;
    *(_DWORD *)v16 = 136315138;
    v25[2] = v16 + 12;
    v26 = v16;
    v25[1] = v16 + 4;
    sub_1D2537078((uint64_t)v11, (uint64_t)v9, &qword_1ED963110);
    v32 = 91;
    v33 = 0xE100000000000000;
    v17 = *v9;
    v29 = a2;
    v18 = v17;
    v19 = objc_msgSend(v17, sel_description);
    sub_1D26CD938();
    v28 = a3;

    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    type metadata accessor for ActivityKey(0);
    sub_1D26CBAF0();
    sub_1D25369B0(&qword_1ED962FE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F850]);
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CDA04();
    ActivityVariantKey.description.getter();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v20 = v32;
    v21 = v33;
    sub_1D253703C((uint64_t)v9, &qword_1ED963110);
    v32 = sub_1D2537880(v20, v21, v31);
    a3 = v28;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D253703C((uint64_t)v11, &qword_1ED963110);
    v22 = v26;
    _os_log_impl(&dword_1D2531000, v13, v14, "Adding assertion for variant: %s", v26, 0xCu);
    v23 = v27;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v23, -1, -1);
    MEMORY[0x1D823A5E0](v22, -1, -1);
  }
  else
  {
    sub_1D253703C((uint64_t)v11, &qword_1ED963110);
  }

  sub_1D2537078(a1, (uint64_t)v9, &qword_1ED963110);
  sub_1D2538510(a3, (uint64_t)&v32);
  swift_beginAccess();
  sub_1D25E59F4((uint64_t)&v32, v9);
  return swift_endAccess();
}

uint64_t sub_1D25A47D0()
{
  char *v0;
  char *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;

  v1 = v0;
  if (*(_QWORD *)&v0[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription])
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  if (*(_QWORD *)&v0[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription])
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock];
  v3 = *(os_unfair_lock_s **)(v2 + 16);
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1D25A487C(v1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v2 + 16));
  return swift_release();
}

uint64_t sub_1D25A487C(char *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38[5];

  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963108);
  v2 = MEMORY[0x1E0C80A78](v37);
  v4 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v34 - v5;
  if (qword_1ED9633F0 != -1)
LABEL_31:
    swift_once();
  v7 = sub_1D26CC09C();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED977DE8);
  swift_retain();
  v8 = sub_1D26CC084();
  v9 = sub_1D26CDD04();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = swift_slowAlloc();
    v38[0] = v11;
    *(_DWORD *)v10 = 136315138;
    v36 = (int64_t)(v10 + 4);
    v12 = *(_QWORD *)&a1[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier];
    v13 = *(_QWORD *)&a1[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                       + 8];
    swift_bridgeObjectRetain();
    v38[4] = sub_1D2537880(v12, v13, v38);
    sub_1D26CDF50();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v8, v9, "Invalidating activity subscription: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v11, -1, -1);
    MEMORY[0x1D823A5E0](v10, -1, -1);

  }
  else
  {

    swift_release();
  }
  v14 = &a1[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription__lock_contentAssertions];
  swift_beginAccess();
  v15 = *(_QWORD *)v14;
  v16 = *(_QWORD *)(*(_QWORD *)v14 + 64);
  v35 = *(_QWORD *)v14 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v36 = (unint64_t)(v17 + 63) >> 6;
  result = swift_bridgeObjectRetain_n();
  v21 = 0;
  a1 = (char *)&qword_1ED963108;
  while (1)
  {
    if (v19)
    {
      v22 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v23 = v22 | (v21 << 6);
      goto LABEL_9;
    }
    v31 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v31 >= v36)
      goto LABEL_29;
    v32 = *(_QWORD *)(v35 + 8 * v31);
    ++v21;
    if (!v32)
    {
      v21 = v31 + 1;
      if (v31 + 1 >= v36)
        goto LABEL_29;
      v32 = *(_QWORD *)(v35 + 8 * v21);
      if (!v32)
      {
        v21 = v31 + 2;
        if (v31 + 2 >= v36)
          goto LABEL_29;
        v32 = *(_QWORD *)(v35 + 8 * v21);
        if (!v32)
        {
          v21 = v31 + 3;
          if (v31 + 3 >= v36)
            goto LABEL_29;
          v32 = *(_QWORD *)(v35 + 8 * v21);
          if (!v32)
          {
            v21 = v31 + 4;
            if (v31 + 4 >= v36)
              goto LABEL_29;
            v32 = *(_QWORD *)(v35 + 8 * v21);
            if (!v32)
              break;
          }
        }
      }
    }
LABEL_28:
    v19 = (v32 - 1) & v32;
    v23 = __clz(__rbit64(v32)) + (v21 << 6);
LABEL_9:
    v24 = *(_QWORD *)(v15 + 48);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
    sub_1D2537078(v24 + *(_QWORD *)(*(_QWORD *)(v25 - 8) + 72) * v23, (uint64_t)v6, &qword_1ED963110);
    v26 = *(_QWORD *)(v15 + 56) + 40 * v23;
    v27 = v37;
    sub_1D2538510(v26, (uint64_t)&v6[*(int *)(v37 + 48)]);
    sub_1D25384CC((uint64_t)v6, (uint64_t)v4, &qword_1ED963108);
    v28 = &v4[*(int *)(v27 + 48)];
    v29 = *((_QWORD *)v28 + 3);
    v30 = *((_QWORD *)v28 + 4);
    __swift_project_boxed_opaque_existential_0(v28, v29);
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
    result = sub_1D253703C((uint64_t)v4, &qword_1ED963108);
  }
  v33 = v31 + 5;
  if (v33 >= v36)
  {
LABEL_29:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  v32 = *(_QWORD *)(v35 + 8 * v33);
  if (v32)
  {
    v21 = v33;
    goto LABEL_28;
  }
  while (1)
  {
    v21 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v21 >= v36)
      goto LABEL_29;
    v32 = *(_QWORD *)(v35 + 8 * v21);
    ++v33;
    if (v32)
      goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D25A4CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D25A47D0();
  sub_1D253703C(v0+ OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload, &qword_1ED962FD0);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0+ OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityCenter);
  swift_release();
  swift_bridgeObjectRelease();
  v1 = v0
     + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_state;
  v2 = sub_1D26CBB2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1D25A4D98()
{
  sub_1D25A4CB4();
  return swift_deallocClassInstance();
}

uint64_t ActivitySubscriber.__allocating_init(logger:activityCenter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  ActivitySubscriber.init(logger:activityCenter:)(a1, a2);
  return v4;
}

uint64_t ActivitySubscriber.init(logger:activityCenter:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  char *v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD aBlock[5];
  uint64_t v38;

  v26 = a2;
  v29 = a1;
  v5 = sub_1D26CD074();
  v6 = *(_QWORD *)(v5 - 8);
  v34 = v5;
  v35 = v6;
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CDD88();
  v27 = *(_QWORD *)(v8 - 8);
  v28 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CDD40();
  MEMORY[0x1E0C80A78](v11);
  v33 = sub_1D26CD0C8();
  v31 = *(_QWORD *)(v33 - 8);
  MEMORY[0x1E0C80A78](v33);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions) = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_descriptors) = v14;
  v15 = OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock;
  type metadata accessor for UnfairLock();
  v16 = swift_allocObject();
  v17 = (_DWORD *)swift_slowAlloc();
  *v17 = 0;
  *(_QWORD *)(v16 + 16) = v17;
  *(_QWORD *)(v2 + v15) = v16;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_announcementSubscription) = 0;
  v18 = v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_logger;
  v19 = sub_1D26CC09C();
  v30 = *(_QWORD *)(v19 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v18, a1, v19);
  sub_1D2538510(a2, v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter);
  sub_1D2544658();
  sub_1D26CD098();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810], MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D2536488((unint64_t *)&qword_1ED96EE28, &qword_1ED96EE20, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v10, *MEMORY[0x1E0DEF8D8], v28);
  v20 = (void *)sub_1D26CDDB8();
  aBlock[4] = sub_1D25A55CC;
  v38 = v2;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D25351AC;
  aBlock[3] = &block_descriptor_5;
  v21 = _Block_copy(aBlock);
  swift_retain();
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  v36 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
  v22 = v32;
  v23 = v34;
  sub_1D26CDFE0();
  MEMORY[0x1D823956C](0, v13, v22, v21);
  _Block_release(v21);

  __swift_destroy_boxed_opaque_existential_1(v26);
  (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v19);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v22, v23);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v33);
  swift_release();
  return v2;
}

void sub_1D25A5208(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  _QWORD v14[4];

  v2 = sub_1D26CBB80();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter + 24);
  v7 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter), v6);
  sub_1D26CBB74();
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, v6, v7);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v14[2] = v8;
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963430);
  sub_1D2536488(&qword_1ED963428, &qword_1ED963430, MEMORY[0x1E0C95D90]);
  v9 = sub_1D26CC234();
  swift_release();
  swift_release();
  *(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_announcementSubscription) = v9;
  swift_release();
  if (qword_1ED9633F0 != -1)
    swift_once();
  v10 = sub_1D26CC09C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED977DE8);
  v11 = sub_1D26CC084();
  v12 = sub_1D26CDD04();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1D2531000, v11, v12, "Subscribed to announcement feed", v13, 2u);
    MEMORY[0x1D823A5E0](v13, -1, -1);
  }

}

void sub_1D25A55CC()
{
  uint64_t v0;

  sub_1D25A5208(v0);
}

uint64_t sub_1D25A55D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
    v5 = *(os_unfair_lock_s **)(v4 + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    sub_1D25A5670(v1, v3);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1D25A5670(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint8_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(_QWORD, _QWORD, _QWORD);
  __int128 v44;
  char *v45;
  int v46;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  NSObject *v83;
  os_log_type_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  void (*v90)(uint64_t, uint64_t);
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  int v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  char *v100;
  NSObject *v101;
  os_log_type_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  void (*v108)(char *, uint64_t);
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  uint64_t *v122;
  uint64_t v123;
  char *v124;
  char isUniquelyReferenced_nonNull_native;
  void (*v126)(uint64_t, uint64_t);
  uint64_t v127;
  os_unfair_lock_s *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD v132[2];
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int v138;
  char *v139;
  uint64_t v140;
  __int128 v141;
  uint64_t *v142;
  uint64_t *v143;
  char *v144;
  int v145;
  int v146;
  uint64_t v147;
  char *v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  void (*v153)(_QWORD, _QWORD, _QWORD);
  uint64_t v154;
  int v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  void (*v161)(char *, uint64_t);
  uint64_t *v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint8_t *v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963288);
  MEMORY[0x1E0C80A78](v6);
  v164 = (char *)v132 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CBACC();
  v169 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v139 = (char *)v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v151 = (char *)v132 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v150 = (char *)v132 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v167 = (char *)v132 - v16;
  MEMORY[0x1E0C80A78](v15);
  v149 = (char *)v132 - v17;
  v18 = sub_1D26CBB2C();
  v160 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v144 = (char *)v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v159 = (char *)v132 - v21;
  v22 = sub_1D26CBB14();
  v23 = MEMORY[0x1E0C80A78](v22);
  v24 = MEMORY[0x1E0C80A78](v23);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v132 - v26;
  v28 = MEMORY[0x1E0C80A78](v25);
  v30 = (char *)v132 - v29;
  MEMORY[0x1E0C80A78](v28);
  v35 = (char *)v132 - v34;
  v36 = *(uint8_t **)(a1 + 16);
  if (v36)
  {
    v148 = v30;
    v135 = v33;
    v136 = v32;
    v137 = v3;
    v37 = (uint64_t *)(a2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
    v38 = (uint64_t *)(a2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_descriptors);
    v39 = a1;
    v40 = a1 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
    v132[1] = v39;
    v41 = v31;
    swift_bridgeObjectRetain();
    v162 = v38;
    swift_beginAccess();
    v142 = v37;
    swift_beginAccess();
    v143 = &v173;
    v156 = *MEMORY[0x1E0C8FCA8];
    v155 = *MEMORY[0x1E0C8FC98];
    v145 = *MEMORY[0x1E0C8FCB0];
    v138 = *MEMORY[0x1E0C8FCA0];
    v154 = *(_QWORD *)(v41 + 72);
    v157 = v41;
    v42 = v8;
    v43 = *(void (**)(_QWORD, _QWORD, _QWORD))(v41 + 16);
    *(_QWORD *)&v44 = 136446722;
    v141 = v44;
    v140 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v44 = 136446210;
    v133 = v44;
    *(_QWORD *)&v44 = 136446466;
    v134 = v44;
    v168 = v42;
    v158 = v18;
    v170 = v22;
    v163 = v27;
    v152 = v35;
    v153 = v43;
    v43(v35, v40, v22);
    while (1)
    {
      v45 = v159;
      sub_1D26CBB08();
      v46 = (*(uint64_t (**)(char *, uint64_t))(v160 + 88))(v45, v18);
      if (v46 == v156 || v46 == v155)
        goto LABEL_11;
      if (v46 != v145)
        break;
      v62 = v18;
      v63 = v139;
      sub_1D26CBAFC();
      v64 = sub_1D26CBAC0();
      v66 = v65;
      (*(void (**)(char *, uint64_t))(v169 + 8))(v63, v168);
      v67 = *v142;
      if (!*(_QWORD *)(*v142 + 16))
        goto LABEL_3;
      swift_bridgeObjectRetain();
      v68 = sub_1D25891F4(v64, v66);
      if ((v69 & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_3:
        swift_bridgeObjectRelease();
        v18 = v62;
        v22 = v170;
        (*(void (**)(char *, uint64_t))(v157 + 8))(v35, v170);
        goto LABEL_4;
      }
      v70 = *(char **)(*(_QWORD *)(v67 + 56) + 8 * v68);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v62;
      if (qword_1ED9633F0 != -1)
        swift_once();
      v71 = sub_1D26CC09C();
      __swift_project_value_buffer(v71, (uint64_t)qword_1ED977DE8);
      swift_retain();
      v72 = sub_1D26CC084();
      v73 = sub_1D26CDD04();
      if (os_log_type_enabled(v72, v73))
      {
        v74 = (uint8_t *)swift_slowAlloc();
        v75 = swift_slowAlloc();
        *(_DWORD *)v74 = v133;
        v171 = v75;
        v166 = v74 + 4;
        v76 = *(_QWORD *)&v70[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier];
        v77 = *(_QWORD *)&v70[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                            + 8];
        swift_bridgeObjectRetain();
        v172 = sub_1D2537880(v76, v77, &v171);
        sub_1D26CDF50();
        swift_release();
        v35 = v152;
        v18 = v158;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v72, v73, "Dropping subscription for dismissed activity: %{public}s", v74, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v75, -1, -1);
        MEMORY[0x1D823A5E0](v74, -1, -1);

      }
      else
      {

        swift_release();
      }
      if (*(_QWORD *)&v70[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription])
      {
        swift_retain();
        sub_1D26CC108();
        swift_release();
      }
      if (*(_QWORD *)&v70[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription])
      {
        swift_retain();
        sub_1D26CC108();
        swift_release();
      }
      v127 = *(_QWORD *)&v70[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock];
      v128 = *(os_unfair_lock_s **)(v127 + 16);
      swift_retain();
      os_unfair_lock_lock(v128);
      v129 = v137;
      sub_1D25A487C(v70);
      v137 = v129;
      if (v129)
      {
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v127 + 16));
        __break(1u);
        return;
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v127 + 16));
      swift_release();
      v130 = *(_QWORD *)&v70[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier];
      v131 = *(_QWORD *)&v70[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_activityIdentifier
                           + 8];
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1D266B248(v130, v131);
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      v22 = v170;
      (*(void (**)(char *, uint64_t))(v157 + 8))(v35, v170);
LABEL_42:
      v43 = v153;
LABEL_4:
      v40 += v154;
      if (!--v36)
      {
        swift_bridgeObjectRelease();
        return;
      }
      v43(v35, v40, v22);
    }
    if (v46 == v138)
    {
LABEL_11:
      v48 = v149;
      sub_1D26CBAFC();
      v49 = sub_1D26CBAC0();
      v51 = v50;
      v52 = v169;
      v53 = v48;
      v54 = v168;
      v161 = *(void (**)(char *, uint64_t))(v169 + 8);
      v161(v53, v168);
      v55 = *v162;
      v56 = *(_QWORD *)(*v162 + 16);
      v165 = v40;
      if (v56)
      {
        swift_bridgeObjectRetain();
        v57 = sub_1D25891F4(v49, v51);
        if ((v58 & 1) != 0)
        {
          v59 = v169;
          v60 = v164;
          (*(void (**)(char *, unint64_t, uint64_t))(v169 + 16))(v164, *(_QWORD *)(v55 + 56) + *(_QWORD *)(v169 + 72) * v57, v54);
          v61 = v60;
          v52 = v59;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v61, 0, 1, v54);
        }
        else
        {
          v52 = v169;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v169 + 56))(v164, 1, 1, v54);
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v164, 1, 1, v54);
      }
      swift_bridgeObjectRelease();
      v93 = v170;
      v95 = v163;
      v94 = (uint64_t)v164;
      v166 = v36;
      v96 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 48))(v164, 1, v54);
      sub_1D253703C(v94, &qword_1ED963288);
      if (v96 == 1)
        v97 = 0x676E69646441;
      else
        v97 = 0x676E697461647055;
      if (v96 == 1)
        v98 = 0xE600000000000000;
      else
        v98 = 0xE800000000000000;
      if (qword_1ED9633F0 != -1)
        swift_once();
      v99 = sub_1D26CC09C();
      __swift_project_value_buffer(v99, (uint64_t)qword_1ED977DE8);
      v100 = v148;
      v43(v148, v35, v93);
      v43(v95, v35, v93);
      swift_bridgeObjectRetain();
      v101 = sub_1D26CC084();
      v102 = sub_1D26CDD04();
      v103 = v102;
      if (os_log_type_enabled(v101, v102))
      {
        v104 = swift_slowAlloc();
        v147 = swift_slowAlloc();
        v171 = v147;
        *(_DWORD *)v104 = v141;
        v146 = v103;
        swift_bridgeObjectRetain();
        v172 = sub_1D2537880(v97, v98, &v171);
        sub_1D26CDF50();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v104 + 12) = 2082;
        sub_1D26CBAFC();
        v105 = sub_1D26CBAC0();
        v107 = v106;
        v108 = v161;
        v161(v167, v168);
        v172 = sub_1D2537880(v105, v107, &v171);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        v109 = *(void (**)(char *, uint64_t))(v157 + 8);
        v110 = v170;
        v109(v100, v170);
        *(_WORD *)(v104 + 22) = 2082;
        sub_1D26CBB08();
        v111 = sub_1D26CD98C();
        v172 = sub_1D2537880(v111, v112, &v171);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        v109(v163, v110);
        _os_log_impl(&dword_1D2531000, v101, (os_log_type_t)v146, "%{public}s descriptor for changed activity: %{public}s; state: %{public}s",
          (uint8_t *)v104,
          0x20u);
        v113 = v147;
        swift_arrayDestroy();
        v114 = v168;
        MEMORY[0x1D823A5E0](v113, -1, -1);
        MEMORY[0x1D823A5E0](v104, -1, -1);

      }
      else
      {
        swift_bridgeObjectRelease_n();
        v109 = *(void (**)(char *, uint64_t))(v157 + 8);
        v115 = v170;
        v109(v100, v170);
        v109(v95, v115);

        v114 = v168;
        v108 = v161;
      }
      v116 = v167;
      v117 = v152;
      sub_1D26CBAFC();
      v118 = sub_1D26CBAC0();
      v120 = v119;
      v108(v116, v114);
      v121 = v150;
      sub_1D26CBAFC();
      v122 = v162;
      swift_beginAccess();
      v123 = (uint64_t)v151;
      v124 = v121;
      v35 = v117;
      (*(void (**)(char *, char *, uint64_t))(v169 + 32))(v151, v124, v114);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v172 = *v122;
      *v122 = 0x8000000000000000;
      sub_1D266E8B8(v123, v118, v120, isUniquelyReferenced_nonNull_native);
      *v122 = v172;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      v22 = v170;
      v109(v117, v170);
      v18 = v158;
    }
    else
    {
      v165 = v40;
      v166 = v36;
      if (qword_1ED9633F0 != -1)
        swift_once();
      v78 = sub_1D26CC09C();
      __swift_project_value_buffer(v78, (uint64_t)qword_1ED977DE8);
      v79 = v135;
      v43(v135, v35, v22);
      v80 = v35;
      v81 = v136;
      v43(v136, v80, v22);
      v82 = v22;
      v83 = sub_1D26CC084();
      v84 = sub_1D26CDCF8();
      if (os_log_type_enabled(v83, v84))
      {
        v85 = swift_slowAlloc();
        v86 = swift_slowAlloc();
        v171 = v86;
        *(_DWORD *)v85 = v134;
        sub_1D26CBAFC();
        v87 = sub_1D26CBAC0();
        v89 = v88;
        (*(void (**)(char *, uint64_t))(v169 + 8))(v167, v168);
        *(_QWORD *)(v85 + 4) = sub_1D2537880(v87, v89, &v171);
        swift_bridgeObjectRelease();
        v90 = *(void (**)(uint64_t, uint64_t))(v157 + 8);
        v90(v79, v82);
        *(_WORD *)(v85 + 12) = 2082;
        sub_1D26CBB08();
        v91 = sub_1D26CD98C();
        *(_QWORD *)(v85 + 14) = sub_1D2537880(v91, v92, &v171);
        swift_bridgeObjectRelease();
        v90(v81, v82);
        _os_log_impl(&dword_1D2531000, v83, v84, "Ignoring activity descriptor change: %{public}s; unknown state: %{public}s",
          (uint8_t *)v85,
          0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v86, -1, -1);
        MEMORY[0x1D823A5E0](v85, -1, -1);

        v35 = v152;
        v90((uint64_t)v152, v82);
        v18 = v158;
        v22 = v82;
      }
      else
      {

        v126 = *(void (**)(uint64_t, uint64_t))(v157 + 8);
        v126(v81, v82);
        v126(v79, v82);
        v126((uint64_t)v80, v82);
        v22 = v82;
        v35 = v80;
      }
      (*(void (**)(char *, uint64_t))(v160 + 8))(v159, v18);
    }
    v40 = v165;
    v36 = v166;
    goto LABEL_42;
  }
}

uint64_t ActivitySubscriber.deinit()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  uint64_t result;
  int64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v15;
  int64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_announcementSubscription))
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  v20 = v0;
  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
  swift_beginAccess();
  v2 = *v1;
  v3 = *v1 + 64;
  v4 = 1 << *(_BYTE *)(*v1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(*v1 + 64);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v6)
    {
      v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v13 = v12 | (v9 << 6);
      goto LABEL_20;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v9 >= v7)
      goto LABEL_29;
    v15 = *(_QWORD *)(v3 + 8 * v9);
    if (!v15)
      break;
LABEL_19:
    v6 = (v15 - 1) & v15;
    v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_20:
    v17 = *(char **)(*(_QWORD *)(v2 + 56) + 8 * v13);
    if (*(_QWORD *)&v17[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadSubscription])
    {
      swift_retain();
      swift_retain();
      sub_1D26CC108();
      swift_release();
    }
    else
    {
      swift_retain();
    }
    if (*(_QWORD *)&v17[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_descriptorSubscription])
    {
      swift_retain();
      sub_1D26CC108();
      swift_release();
    }
    v10 = *(_QWORD *)&v17[OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock];
    v11 = *(os_unfair_lock_s **)(v10 + 16);
    swift_retain();
    os_unfair_lock_lock(v11);
    sub_1D25A487C(v17);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
    swift_release();
    result = swift_release();
  }
  v16 = v9 + 1;
  if (v9 + 1 >= v7)
    goto LABEL_29;
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
    goto LABEL_18;
  v16 = v9 + 2;
  if (v9 + 2 >= v7)
    goto LABEL_29;
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
    goto LABEL_18;
  v16 = v9 + 3;
  if (v9 + 3 >= v7)
  {
LABEL_29:
    swift_release();
    v18 = v20 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_logger;
    v19 = sub_1D26CC09C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
    __swift_destroy_boxed_opaque_existential_1(v20 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return v20;
  }
  v15 = *(_QWORD *)(v3 + 8 * v16);
  if (v15)
  {
LABEL_18:
    v9 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v9 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v9 >= v7)
      goto LABEL_29;
    v15 = *(_QWORD *)(v3 + 8 * v9);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t ActivitySubscriber.__deallocating_deinit()
{
  ActivitySubscriber.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D25A6878(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1D25A68F0(a1, v2, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

void sub_1D25A68F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v38;
  os_unfair_lock_s *v39;
  _QWORD v40[3];
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48[3];
  uint64_t v49;

  v4 = v3;
  v45 = a3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (id *)((char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v40 - v11;
  if (qword_1ED9633F0 != -1)
    swift_once();
  v13 = sub_1D26CC09C();
  __swift_project_value_buffer(v13, (uint64_t)qword_1ED977DE8);
  v44 = a1;
  sub_1D2537078(a1, (uint64_t)v12, &qword_1ED963110);
  v14 = sub_1D26CC084();
  v15 = sub_1D26CDD04();
  if (os_log_type_enabled(v14, v15))
  {
    v16 = (uint8_t *)swift_slowAlloc();
    v42 = swift_slowAlloc();
    v48[0] = v42;
    *(_DWORD *)v16 = 136315138;
    v40[2] = v16 + 12;
    v41 = v16;
    v40[1] = v16 + 4;
    sub_1D2537078((uint64_t)v12, (uint64_t)v10, &qword_1ED963110);
    v46 = 91;
    v47 = 0xE100000000000000;
    v17 = *v10;
    v40[0] = v7;
    v18 = v17;
    v19 = objc_msgSend(v17, sel_description, v40[0]);
    sub_1D26CD938();
    v43 = a2;

    v4 = v3;
    sub_1D26CDA04();

    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    type metadata accessor for ActivityKey(0);
    sub_1D26CBAF0();
    sub_1D25369B0(&qword_1ED962FE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F850]);
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    sub_1D26CDA04();
    ActivityVariantKey.description.getter();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v20 = v46;
    v21 = v47;
    sub_1D253703C((uint64_t)v10, &qword_1ED963110);
    v46 = sub_1D2537880(v20, v21, v48);
    a2 = v43;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D253703C((uint64_t)v12, &qword_1ED963110);
    v22 = v41;
    _os_log_impl(&dword_1D2531000, v14, v15, "Subscribing to activity: %s", v41, 0xCu);
    v23 = v42;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v23, -1, -1);
    MEMORY[0x1D823A5E0](v22, -1, -1);
  }
  else
  {
    sub_1D253703C((uint64_t)v12, &qword_1ED963110);
  }

  v24 = type metadata accessor for ActivityKey(0);
  v25 = v44;
  v26 = (uint64_t *)(v44 + *(int *)(v24 + 24));
  v28 = *v26;
  v27 = v26[1];
  v29 = (uint64_t *)(a2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
  swift_beginAccess();
  v30 = *v29;
  v31 = *(_QWORD *)(*v29 + 16);
  swift_bridgeObjectRetain();
  if (v31)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v32 = sub_1D25891F4(v28, v27);
    if ((v33 & 1) != 0)
    {
      v34 = *(_QWORD *)(*(_QWORD *)(v30 + 56) + 8 * v32);
      swift_retain();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1D2538510(a2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter, (uint64_t)&v46);
  v35 = swift_allocObject();
  swift_weakInit();
  v36 = (_QWORD *)swift_allocObject();
  v36[2] = v35;
  v36[3] = v28;
  v36[4] = v27;
  type metadata accessor for ActivitySubscriber.ActivitySubscription(0);
  swift_allocObject();
  swift_bridgeObjectRetain_n();
  v34 = sub_1D25A2828(v28, v27, (uint64_t)&v46, (uint64_t)sub_1D25A7968, (uint64_t)v36);
  swift_beginAccess();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v49 = *v29;
  *v29 = 0x8000000000000000;
  sub_1D266E78C(v34, v28, v27, isUniquelyReferenced_nonNull_native);
  *v29 = v49;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
LABEL_11:
  v38 = *(_QWORD *)(v34
                  + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_lock);
  v39 = *(os_unfair_lock_s **)(v38 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v39);
  sub_1D25A43D8(v25, v34, v45);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v38 + 16));
  if (v4)
  {
    __break(1u);
  }
  else
  {
    swift_release_n();
    swift_release();
  }
}

uint64_t sub_1D25A6EA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  os_unfair_lock_s *v7;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v6 = *(_QWORD *)(result + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
    v7 = *(os_unfair_lock_s **)(v6 + 16);
    swift_retain();
    os_unfair_lock_lock(v7);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1D266B248(a2, a3);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D25A6F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t (*v34)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v35;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  uint64_t v42;
  char v43;
  void (*v44)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v4 = v3;
  v51 = a3;
  v7 = sub_1D26CBB80();
  v49 = *(_QWORD *)(v7 - 8);
  v50 = v7;
  MEMORY[0x1E0C80A78](v7);
  v48 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CBACC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v46 = (char *)&v46 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963288);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v46 - v19;
  v21 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
  v22 = *(os_unfair_lock_s **)(v21 + 16);
  swift_retain();
  os_unfair_lock_lock(v22);
  v47 = v4;
  v23 = (uint64_t *)(v4 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_descriptors);
  swift_beginAccess();
  v24 = *v23;
  v25 = *(_QWORD *)(v24 + 16);
  v52 = a1;
  v53 = a2;
  if (v25)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26 = sub_1D25891F4(a1, a2);
    if ((v27 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v20, *(_QWORD *)(v24 + 56) + *(_QWORD *)(v10 + 72) * v26, v9);
      v28 = *(char **)(v10 + 56);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v28)(v20, 0, 1, v9);
    }
    else
    {
      v28 = *(char **)(v10 + 56);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v20, 1, 1, v9);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = *(char **)(v10 + 56);
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v28)(v20, 1, 1, v9);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 16));
  swift_release();
  sub_1D2537078((uint64_t)v20, (uint64_t)v18, &qword_1ED963288);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9) == 1)
  {
    v46 = v28;
    sub_1D253703C((uint64_t)v18, &qword_1ED963288);
    v29 = *(_QWORD *)(v47 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter + 24);
    v30 = *(_QWORD *)(v47 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter + 32);
    __swift_project_boxed_opaque_existential_0((_QWORD *)(v47 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_activityCenter), v29);
    v31 = v48;
    sub_1D26CBB74();
    v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 16))(v31, v29, v30);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v50);
    v38 = *(_QWORD *)(v37 + 16);
    if (v38)
    {
      v39 = v37 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      v40 = *(_QWORD *)(v10 + 72);
      v41 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      v50 = v37;
      swift_bridgeObjectRetain();
      while (1)
      {
        v41(v13, v39, v9);
        if (sub_1D26CBAC0() == v52 && v42 == v53)
          break;
        v43 = sub_1D26CE3D0();
        swift_bridgeObjectRelease();
        if ((v43 & 1) != 0)
          goto LABEL_19;
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
        v39 += v40;
        if (!--v38)
        {
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
LABEL_19:
      v44 = (void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v46;
      swift_bridgeObjectRelease();
      v45 = v51;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v51, v13, v9);
      v44((uint64_t)v45, 0, 1, v9);
    }
    else
    {
LABEL_17:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v46)(v51, 1, 1, v9);
    }
    swift_bridgeObjectRelease();
    return sub_1D253703C((uint64_t)v20, &qword_1ED963288);
  }
  else
  {
    sub_1D253703C((uint64_t)v20, &qword_1ED963288);
    v32 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    v33 = v46;
    v32(v46, v18, v9);
    v34 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v28;
    v35 = v51;
    v32(v51, v33, v9);
    return v34((uint64_t)v35, 0, 1, v9);
  }
}

uint64_t sub_1D25A7414()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_descriptors);
  swift_beginAccess();
  v4 = *v3;
  v5 = *(os_unfair_lock_s **)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v5);
  swift_release();
  return v4;
}

uint64_t sub_1D25A74A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
  v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  v9 = (uint64_t *)(v3 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
  swift_beginAccess();
  v10 = *v9;
  if (!*(_QWORD *)(v10 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1D25891F4(a1, a2);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v15 = sub_1D26CBAB4();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
    goto LABEL_6;
  }
  v13 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * v11);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v14 = v13
      + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payload;
  swift_beginAccess();
  sub_1D2537078(v14, a3, &qword_1ED962FD0);
  swift_release();
LABEL_6:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  return swift_release();
}

uint64_t sub_1D25A75EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber_lock);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC9ChronoKit18ActivitySubscriber__locked_subscriptions);
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(v8 + 16))
    goto LABEL_5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1D25891F4(a1, a2);
  if ((v10 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v12 = 0;
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11
                  + OBJC_IVAR____TtCC9ChronoKit18ActivitySubscriberP33_8C3AD9B104C09CAB6FDDA07A581A3E2420ActivitySubscription_payloadPublisher);
  swift_retain();
  swift_release();
LABEL_6:
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  swift_release();
  return v12;
}

uint64_t sub_1D25A76F8()
{
  return type metadata accessor for ActivitySubscriber(0);
}

uint64_t type metadata accessor for ActivitySubscriber(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED9635E0);
}

uint64_t sub_1D25A7714()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CC09C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ActivitySubscriber()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivitySubscriber.__allocating_init(logger:activityCenter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of ActivitySubscriber.subscribe(to:contentAssertion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ActivitySubscriber.descriptor(id:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ActivitySubscriber.descriptors.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ActivitySubscriber.payload(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ActivitySubscriber.subscribeToPayloads(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t sub_1D25A7800()
{
  return type metadata accessor for ActivitySubscriber.ActivitySubscription(0);
}

uint64_t type metadata accessor for ActivitySubscriber.ActivitySubscription(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED963168);
}

void sub_1D25A781C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D25A78E4();
  if (v0 <= 0x3F)
  {
    sub_1D26CBB2C();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

void sub_1D25A78E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED962FD8)
  {
    sub_1D26CBAB4();
    v0 = sub_1D26CDF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED962FD8);
  }
}

uint64_t sub_1D25A7938()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D25A795C()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1D25A7968()
{
  uint64_t *v0;

  return sub_1D25A6EA8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D25A7974()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1D25A7980(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25A3458(a1, *(_QWORD *)(v1 + 16), *(void (**)(_QWORD))(v1 + 24));
}

uint64_t sub_1D25A798C(uint64_t a1)
{
  return sub_1D25A3658(a1);
}

uint64_t sub_1D25A7994()
{
  return objectdestroy_2Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t objectdestroy_2Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

uint64_t sub_1D25A79D8(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1D25A39A4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1D25A79E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25A7A2C(uint64_t *a1)
{
  return sub_1D25A55D4(a1);
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.retrieveAllBudgets()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.retrieveBudget(budgetID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.update(budget:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.remove(budget:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStoring.remove(budgetID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 56))();
}

uint64_t sub_1D25A7A60()
{
  return sub_1D26CBB38();
}

uint64_t sub_1D25A7A80()
{
  return sub_1D26CBB44();
}

uint64_t sub_1D25A7AA0()
{
  return sub_1D26CBB5C();
}

uint64_t sub_1D25A7AC0()
{
  return sub_1D26CBB68();
}

uint64_t sub_1D25A7AE0()
{
  return sub_1D26CBB50();
}

uint64_t dispatch thunk of ActivityCenterInterface.descriptor(id:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ActivityCenterInterface.descriptors(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityCenterInterface.observeDescriptors(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ActivityCenterInterface.observeDescriptorStates(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ActivityCenterInterface.observePayloads(id:feed:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

id sub_1D25A7B78(void *a1)
{
  void *v1;
  uint64_t inited;
  void *v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  void *v9;
  unsigned int v10;
  id v12;
  id v13[11];

  v13[10] = *(id *)MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0F8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D26D1280;
  v4 = (void *)*MEMORY[0x1E0CB2AD8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CB2AD8];
  type metadata accessor for FileProtectionType(0);
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 40) = a1;
  v6 = v4;
  v7 = a1;
  sub_1D253DD6C(inited);
  type metadata accessor for FileAttributeKey(0);
  sub_1D25369B0(&qword_1ED96BFD8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1D26D00B4);
  v8 = (void *)sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  sub_1D26CB868();
  v9 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v13[0] = 0;
  v10 = objc_msgSend(v1, sel_setAttributes_ofItemAtPath_error_, v8, v9, v13);

  if (v10)
    return v13[0];
  v12 = v13[0];
  sub_1D26CB76C();

  swift_willThrow();
  return (id)swift_willThrow();
}

void sub_1D25A7D0C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v5;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1D26CB7D8();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v1, 0, v6);

  v3 = v6[0];
  if (v2)
  {
    sub_1D26CB850();
    v4 = v3;

  }
  else
  {
    v5 = v6[0];
    sub_1D26CB76C();

    swift_willThrow();
  }
}

id sub_1D25A7DFC(uint64_t a1, SEL *a2)
{
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  id v9;
  id v10;
  uint64_t v11;
  id v13[2];

  v13[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = (void *)sub_1D26CB7D8();
  v13[0] = 0;
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), *a2, v4, v13);

  v6 = v13[0];
  if (v5)
  {
    v7 = sub_1D26CB880();
    v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
    v9 = v6;
    v8(a1, v7);
  }
  else
  {
    v10 = v13[0];
    sub_1D26CB76C();

    swift_willThrow();
    v11 = sub_1D26CB880();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  }
  return v5;
}

id sub_1D25A7F10(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  unsigned int v9;
  void *v10;
  unsigned __int8 v11;
  id result;
  void *v13;
  unsigned int v14;
  id v15;
  id v16[2];

  v2 = v1;
  v16[1] = *(id *)MEMORY[0x1E0C80C00];
  v4 = sub_1D26CB880();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CB868();
  v8 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v1, sel_fileExistsAtPath_, v8);

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  if (!v9)
    return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1D26CB868();
  v10 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v2, sel_isDeletableFileAtPath_, v10);

  result = (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((v11 & 1) != 0)
  {
    v13 = (void *)sub_1D26CB7D8();
    v16[0] = 0;
    v14 = objc_msgSend(v2, sel_removeItemAtURL_error_, v13, v16);

    if (v14)
    {
      return v16[0];
    }
    else
    {
      v15 = v16[0];
      sub_1D26CB76C();

      return (id)swift_willThrow();
    }
  }
  return result;
}

void sub_1D25A80CC(uint64_t a1, void *a2)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  unsigned __int8 v10;
  uint64_t v11;
  int v12;
  _DWORD v13[4];

  v3 = v2;
  v5 = sub_1D26CB598();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CB868();
  v9 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  if (a2)
  {
    type metadata accessor for FileAttributeKey(0);
    sub_1D25369B0(&qword_1ED96BFD8, (uint64_t (*)(uint64_t))type metadata accessor for FileAttributeKey, (uint64_t)&unk_1D26D00B4);
    a2 = (void *)sub_1D26CD7DC();
  }
  v10 = objc_msgSend(v3, sel_createFileAtPath_contents_attributes_, v9, 0, a2);

  if ((v10 & 1) == 0)
  {
    MEMORY[0x1D823788C]();
    v11 = sub_1D26CC0B4();
    if ((v11 & 0x100000000) != 0)
      v12 = 45;
    else
      v12 = v11;
    v13[3] = v12;
    sub_1D2567BEC(MEMORY[0x1E0DEE9D8]);
    sub_1D25369B0((unint64_t *)&unk_1ED962300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90], MEMORY[0x1E0CADE88]);
    sub_1D26CB754();
    sub_1D26CB58C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_willThrow();
  }
}

void sub_1D25A8264()
{
  sub_1D25A7D0C();
}

id sub_1D25A8284(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25A82BC(a1, a2, a3, (SEL *)&selRef_fileHandleForReadingFromURL_error_);
}

id sub_1D25A82A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25A82BC(a1, a2, a3, (SEL *)&selRef_fileHandleForWritingToURL_error_);
}

id sub_1D25A82BC(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D25A88EC();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  return sub_1D25A7DFC((uint64_t)v9, a4);
}

id sub_1D25A8368(void *a1)
{
  return sub_1D25A8608(a1);
}

id sub_1D25A837C(uint64_t a1)
{
  return sub_1D25A7F10(a1);
}

uint64_t sub_1D25A839C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1D25A86A8(a1, a2, a3, a4, a5, a6, a7);
}

id sub_1D25A83B0(void *a1)
{
  return sub_1D25A7B78(a1);
}

void sub_1D25A83D0(uint64_t a1, void *a2)
{
  sub_1D25A80CC(a1, a2);
}

id sub_1D25A83F0()
{
  return sub_1D25A8528();
}

uint64_t sub_1D25A8410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D25A8428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1D25A8440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1D25A8458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t sub_1D25A8470(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t sub_1D25A8488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t))(a9 + 48))(a1);
}

uint64_t sub_1D25A84B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 56))();
}

uint64_t sub_1D25A84C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t sub_1D25A84E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1D25A84F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t sub_1D25A8510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

id sub_1D25A8528()
{
  void *v0;
  void *v1;
  void *v2;
  void *v3;
  id v5;
  id v6[2];

  v1 = v0;
  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1D26CB7D8();
  v3 = (void *)sub_1D26CB7D8();
  v6[0] = 0;
  LODWORD(v1) = objc_msgSend(v1, sel_moveItemAtURL_toURL_error_, v2, v3, v6);

  if ((_DWORD)v1)
    return v6[0];
  v5 = v6[0];
  sub_1D26CB76C();

  return (id)swift_willThrow();
}

id sub_1D25A8608(void *a1)
{
  id v2;
  id v3[2];

  v3[1] = *(id *)MEMORY[0x1E0C80C00];
  v3[0] = 0;
  if (objc_msgSend(a1, sel_closeAndReturnError_, v3))
    return v3[0];
  v2 = v3[0];
  sub_1D26CB76C();

  return (id)swift_willThrow();
}

uint64_t sub_1D25A86A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v27 = a4;
  v28 = a2;
  v29 = a3;
  v30 = a1;
  v25[1] = a6;
  v25[2] = a7;
  v8 = sub_1D26CBC10();
  v26 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - v9;
  v11 = sub_1D26CDF38();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v25 - v14;
  v16 = *(_QWORD *)(a5 - 8);
  v17 = MEMORY[0x1E0C80A78](v13);
  v19 = (char *)v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v25 - v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, v27, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, a5) == 1)
  {
    v22 = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    MEMORY[0x1E0C80A78](v22);
    v23 = v29;
    v25[-2] = v28;
    v25[-1] = v23;
    return sub_1D26CB844();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v15, a5);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, a5);
    sub_1D26CBBF8();
    MEMORY[0x1D823A4E4](MEMORY[0x1E0D0F6A0], v8);
    sub_1D26C3D10(v28, v29);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v21, a5);
  }
}

unint64_t sub_1D25A88EC()
{
  unint64_t result;

  result = qword_1ED9620B8;
  if (!qword_1ED9620B8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED9620B8);
  }
  return result;
}

uint64_t ActivityVariantKey.filePathComponent.getter()
{
  uint64_t v1;

  v1 = sub_1D26CD650();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  type metadata accessor for ActivityVariantKey(0);
  sub_1D26CD3EC();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t type metadata accessor for ActivityVariantKey(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED963608);
}

id ActivityKey.extensionIdentity.getter()
{
  id *v0;

  return *v0;
}

void ActivityKey.extensionIdentity.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ActivityKey.extensionIdentity.modify())()
{
  return CGSizeMake;
}

uint64_t ActivityKey.activityAttributesType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25A9158(type metadata accessor for ActivityKey, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F830], a1);
}

uint64_t ActivityKey.activityAttributesType.setter(uint64_t a1)
{
  return sub_1D25A91C4(a1, type metadata accessor for ActivityKey, (uint64_t (*)(_QWORD))MEMORY[0x1E0C8F830]);
}

uint64_t (*ActivityKey.activityAttributesType.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ActivityKey(0);
  return CGSizeMake;
}

uint64_t ActivityKey.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ActivityKey(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ActivityKey.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ActivityKey(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ActivityKey.identifier.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ActivityKey(0);
  return CGSizeMake;
}

uint64_t ActivityKey.init(extensionIdentity:activityAttributesType:identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t result;
  _QWORD *v13;

  *a5 = a1;
  v9 = type metadata accessor for ActivityKey(0);
  v10 = (char *)a5 + *(int *)(v9 + 20);
  v11 = sub_1D26CBAF0();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  v13 = (_QWORD *)((char *)a5 + *(int *)(v9 + 24));
  *v13 = a3;
  v13[1] = a4;
  return result;
}

uint64_t ActivityKey.description.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = objc_msgSend(v1, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  type metadata accessor for ActivityKey(0);
  sub_1D26CBAF0();
  sub_1D25369B0(&qword_1ED962FE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F850]);
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 91;
}

uint64_t ActivityKey.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D26CDED8();

  type metadata accessor for ActivityKey(0);
  sub_1D26CBAF0();
  sub_1D25369B0(&qword_1ED962FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F840]);
  sub_1D26CD8D8();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t ActivityKey.hashValue.getter()
{
  id *v0;
  id v1;

  sub_1D26CE460();
  v1 = *v0;
  sub_1D26CDED8();

  type metadata accessor for ActivityKey(0);
  sub_1D26CBAF0();
  sub_1D25369B0(&qword_1ED962FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F840]);
  sub_1D26CD8D8();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D25A8E7C()
{
  id *v0;
  id v1;

  sub_1D26CE460();
  v1 = *v0;
  sub_1D26CDED8();

  sub_1D26CBAF0();
  sub_1D25369B0(&qword_1ED962FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F840]);
  sub_1D26CD8D8();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D25A8F44()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D26CDED8();

  sub_1D26CBAF0();
  sub_1D25369B0(&qword_1ED962FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F840]);
  sub_1D26CD8D8();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25A8FF8()
{
  id *v0;
  id v1;

  sub_1D26CE460();
  v1 = *v0;
  sub_1D26CDED8();

  sub_1D26CBAF0();
  sub_1D25369B0(&qword_1ED962FE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F840]);
  sub_1D26CD8D8();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t ActivityVariantKey.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D26CD65C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ActivityVariantKey.metrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D26CD65C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ActivityVariantKey.metrics.modify())()
{
  return CGSizeMake;
}

uint64_t ActivityVariantKey.family.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25A9158(type metadata accessor for ActivityVariantKey, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF01E0], a1);
}

uint64_t sub_1D25A9158@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a1(0) + 20);
  v7 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v6, v7);
}

uint64_t ActivityVariantKey.family.setter(uint64_t a1)
{
  return sub_1D25A91C4(a1, type metadata accessor for ActivityVariantKey, (uint64_t (*)(_QWORD))MEMORY[0x1E0CF01E0]);
}

uint64_t sub_1D25A91C4(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  v6 = v3 + *(int *)(a2(0) + 20);
  v7 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, a1, v7);
}

uint64_t (*ActivityVariantKey.family.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ActivityVariantKey(0);
  return CGSizeMake;
}

uint64_t ActivityVariantKey.hostIdentity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ActivityVariantKey(0) + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t ActivityVariantKey.hostIdentity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for ActivityVariantKey(0) + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*ActivityVariantKey.hostIdentity.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ActivityVariantKey(0);
  return CGSizeMake;
}

uint64_t ActivityVariantKey.init(metrics:family:hostIdentity:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v8 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = type metadata accessor for ActivityVariantKey(0);
  v10 = a4 + *(int *)(v9 + 20);
  v11 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10, a2, v11);
  v12 = a4 + *(int *)(v9 + 24);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v12, a3, v13);
}

uint64_t ActivityVariantKey.description.getter()
{
  sub_1D26CD650();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  type metadata accessor for ActivityVariantKey(0);
  sub_1D26CD3EC();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 91;
}

uint64_t ActivityVariantKey.hash(into:)()
{
  sub_1D26CD65C();
  sub_1D25369B0(&qword_1ED963218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0938]);
  sub_1D26CD8D8();
  type metadata accessor for ActivityVariantKey(0);
  sub_1D26CD3F8();
  sub_1D25369B0(&qword_1ED962928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF01F8]);
  sub_1D26CD8D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
  return sub_1D26CD8D8();
}

uint64_t ActivityVariantKey.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CD65C();
  sub_1D25369B0(&qword_1ED963218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0938]);
  sub_1D26CD8D8();
  type metadata accessor for ActivityVariantKey(0);
  sub_1D26CD3F8();
  sub_1D25369B0(&qword_1ED962928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF01F8]);
  sub_1D26CD8D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
  sub_1D26CD8D8();
  return sub_1D26CE49C();
}

uint64_t sub_1D25A969C()
{
  sub_1D26CE460();
  sub_1D26CD65C();
  sub_1D25369B0(&qword_1ED963218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0938]);
  sub_1D26CD8D8();
  sub_1D26CD3F8();
  sub_1D25369B0(&qword_1ED962928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF01F8]);
  sub_1D26CD8D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
  sub_1D26CD8D8();
  return sub_1D26CE49C();
}

uint64_t sub_1D25A979C()
{
  sub_1D26CD65C();
  sub_1D25369B0(&qword_1ED963218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0938]);
  sub_1D26CD8D8();
  sub_1D26CD3F8();
  sub_1D25369B0(&qword_1ED962928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF01F8]);
  sub_1D26CD8D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
  return sub_1D26CD8D8();
}

uint64_t sub_1D25A988C()
{
  sub_1D26CE460();
  sub_1D26CD65C();
  sub_1D25369B0(&qword_1ED963218, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0938]);
  sub_1D26CD8D8();
  sub_1D26CD3F8();
  sub_1D25369B0(&qword_1ED962928, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF01F8]);
  sub_1D26CD8D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  sub_1D2536488(&qword_1ED963340, &qword_1ED96FD28, MEMORY[0x1E0D0FB50]);
  sub_1D26CD8D8();
  return sub_1D26CE49C();
}

uint64_t sub_1D25A9990()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  if (*(_QWORD *)(v0 + 16))
  {
    v1 = *(_QWORD *)(v0 + 16);
  }
  else
  {
    v2 = v0;
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED963CD0);
    sub_1D2536488((unint64_t *)&unk_1ED96B0C0, qword_1ED963CD0, MEMORY[0x1E0C95F48]);
    v1 = sub_1D26CC204();
    *(_QWORD *)(v2 + 16) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1D25A9A34(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_1D25A9A44(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1D25A9990();
  return sub_1D25A9A78;
}

uint64_t sub_1D25A9A78(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + 16) = *a1;
  return swift_release();
}

uint64_t sub_1D25A9A88(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962B60);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  sub_1D2537078(a1, (uint64_t)&v12 - v8, (uint64_t *)&unk_1ED962B60);
  v10 = *a2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  sub_1D25AB498((uint64_t)v9, v10);
  swift_endAccess();
  sub_1D2537078(v10, (uint64_t)v7, (uint64_t *)&unk_1ED962B60);
  sub_1D26CC138();
  sub_1D253703C((uint64_t)v7, (uint64_t *)&unk_1ED962B60);
  return sub_1D253703C((uint64_t)v9, (uint64_t *)&unk_1ED962B60);
}

uint64_t sub_1D25A9B94@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25A9D94(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content, (uint64_t *)&unk_1ED962B60, a1);
}

uint64_t sub_1D25A9BA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962B60);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  sub_1D25AB498(a1, v6);
  swift_endAccess();
  sub_1D2537078(v6, (uint64_t)v5, (uint64_t *)&unk_1ED962B60);
  sub_1D26CC138();
  sub_1D253703C((uint64_t)v5, (uint64_t *)&unk_1ED962B60);
  return sub_1D253703C(a1, (uint64_t *)&unk_1ED962B60);
}

void (*sub_1D25A9C80(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962B60);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  v3[4] = v5;
  v3[5] = v6;
  swift_beginAccess();
  return sub_1D25A9D00;
}

void sub_1D25A9D00(_QWORD **a1, char a2)
{
  _QWORD *v3;
  void *v4;

  v3 = *a1;
  swift_endAccess();
  v4 = (void *)v3[4];
  if ((a2 & 1) == 0)
  {
    sub_1D2537078(v3[3] + v3[5], v3[4], (uint64_t *)&unk_1ED962B60);
    sub_1D26CC138();
    sub_1D253703C((uint64_t)v4, (uint64_t *)&unk_1ED962B60);
  }
  free(v4);
  free(v3);
}

uint64_t sub_1D25A9D80@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25A9D94(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1ED963110, a1);
}

uint64_t sub_1D25A9D94@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = v3 + *a1;
  swift_beginAccess();
  return sub_1D2537078(v6, a3, a2);
}

uint64_t sub_1D25A9DF0(uint64_t a1)
{
  return sub_1D25AA088(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1ED963110);
}

uint64_t (*sub_1D25A9E04())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25A9E48(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25A9EB0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D25A9F04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D25A9F60())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25A9FA4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2537078(a1, (uint64_t)v12, a5);
  v13 = *a2 + *a6;
  swift_beginAccess();
  sub_1D25AB51C((uint64_t)v12, v13, a5);
  return swift_endAccess();
}

uint64_t sub_1D25AA060@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25A9D94(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1ED96B1E0, a1);
}

uint64_t sub_1D25AA074(uint64_t a1)
{
  return sub_1D25AA088(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1ED96B1E0);
}

uint64_t sub_1D25AA088(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = v3 + *a2;
  swift_beginAccess();
  sub_1D25AB51C(a1, v6, a3);
  return swift_endAccess();
}

uint64_t (*sub_1D25AA0EC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ActivityEntry.targetEnvironmentProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider, a1);
}

uint64_t sub_1D25AA144@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1D25AA1AC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1D26CD488();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1D25AA270@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D25AA2D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1D25AA340())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1D25AA384@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _BYTE v28[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E8);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = (_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_cacheManager);
  v14 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id;
  swift_beginAccess();
  sub_1D2537078(v14, (uint64_t)v12, &qword_1ED963110);
  v15 = v13[4];
  v16 = v13[5];
  __swift_project_boxed_opaque_existential_0(v13 + 1, v15);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v16 + 24))(v12, v15, v16);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D253703C((uint64_t)v5, &qword_1ED9630E8);
    type metadata accessor for ActivityCacheManager.CacheManagementError();
    sub_1D25369B0(&qword_1EFC82B80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError, (uint64_t)&unk_1D26D5360);
    v17 = (void *)swift_allocError();
    v19 = v18;
    v20 = *v12 + *MEMORY[0x1E0D0FE30];
    swift_beginAccess();
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v19, 0, 1, v22);
    swift_willThrow();

    sub_1D253703C((uint64_t)v12, &qword_1ED963110);
    v23 = sub_1D26CB880();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(a1, 1, 1, v23);
  }
  else
  {
    sub_1D25384CC((uint64_t)v5, (uint64_t)v9, &qword_1ED9630E0);
    v25 = v13[9];
    v26 = v13[10];
    __swift_project_boxed_opaque_existential_0(v13 + 6, v25);
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v26 + 24))(v9, v25, v26);
    sub_1D253703C((uint64_t)v9, &qword_1ED9630E0);
    sub_1D253703C((uint64_t)v12, &qword_1ED963110);
    v27 = sub_1D26CB880();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 0, 1, v27);
  }
}

uint64_t ActivityEntry.cacheManager.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D25AB4E0(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_cacheManager, a1);
}

uint64_t ActivityEntry.__allocating_init(id:content:protectionType:targetEnvironmentProvider:cacheManager:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _OWORD *a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  ActivityEntry.init(id:content:protectionType:targetEnvironmentProvider:cacheManager:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t ActivityEntry.init(id:content:protectionType:targetEnvironmentProvider:cacheManager:)(uint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _OWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;

  v6 = v5;
  *(_QWORD *)(v5 + 16) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED963CD0);
  swift_allocObject();
  *(_QWORD *)(v5 + 24) = sub_1D26CC150();
  v12 = v5 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  v13 = sub_1D26CD734();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v14 = (_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  *v14 = 0;
  v14[1] = 0;
  v15 = v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate;
  v16 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
  sub_1D25384CC(a1, v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1ED963110);
  swift_beginAccess();
  sub_1D25AB51C(a2, v12, (uint64_t *)&unk_1ED962B60);
  swift_endAccess();
  v17 = v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  v18 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17, a3, v18);
  sub_1D2538F38(a4, v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider);
  v19 = (_OWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_cacheManager);
  v20 = a5[5];
  v19[4] = a5[4];
  v19[5] = v20;
  v21 = a5[7];
  v19[6] = a5[6];
  v19[7] = v21;
  v22 = a5[1];
  *v19 = *a5;
  v19[1] = v22;
  v23 = a5[3];
  v19[2] = a5[2];
  v19[3] = v23;
  return v6;
}

uint64_t sub_1D25AA8AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v1 = v0;
  v2 = sub_1D26CD1DC();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = sub_1D26CC7A4();
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962B60);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CD734();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  sub_1D2537078(v15, (uint64_t)v10, (uint64_t *)&unk_1ED962B60);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D253703C((uint64_t)v10, (uint64_t *)&unk_1ED962B60);
    v16 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    v25 = MEMORY[0x1E0DEE9D8];
    swift_getKeyPath();
    MEMORY[0x1D8239290]();
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D26CDB30();
    sub_1D26CDB54();
    sub_1D26CDB0C();
    swift_getKeyPath();
    MEMORY[0x1D8239290]();
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D26CDB30();
    sub_1D26CDB54();
    sub_1D26CDB0C();
    swift_getKeyPath();
    MEMORY[0x1D8239290]();
    if (*(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D26CDB30();
    sub_1D26CDB54();
    sub_1D26CDB0C();
    v17 = (_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider);
    v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider + 24);
    v19 = v17[4];
    __swift_project_boxed_opaque_existential_0(v17, v18);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
    sub_1D26CD704();
    if (v25 >> 62)
    {
      sub_1D26CDFB0();
      swift_bridgeObjectRetain();
      sub_1D26CE1E4();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_1D26CE3E8();
      sub_1D26CDFB0();
    }
    swift_bridgeObjectRelease();
    v16 = sub_1D26CD1D0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v22);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v16 & 1;
}

uint64_t sub_1D25AAC44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1D26CD3F8();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1D26CC66C();
}

uint64_t ActivityEntry.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content, (uint64_t *)&unk_1ED962B60);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1ED963110);
  swift_bridgeObjectRelease();
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1ED96B1E0);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_targetEnvironmentProvider);
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D25AB5F4((id *)(v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_cacheManager));
  return v0;
}

uint64_t ActivityEntry.__deallocating_deinit()
{
  ActivityEntry.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D25AADB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25AAFBC(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content, (uint64_t *)&unk_1ED962B60, a1);
}

uint64_t sub_1D25AADC8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962B60);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  sub_1D25AB498(a1, v6);
  swift_endAccess();
  sub_1D2537078(v6, (uint64_t)v5, (uint64_t *)&unk_1ED962B60);
  sub_1D26CC138();
  sub_1D253703C((uint64_t)v5, (uint64_t *)&unk_1ED962B60);
  return sub_1D253703C(a1, (uint64_t *)&unk_1ED962B60);
}

void (*sub_1D25AAEA4(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962B60);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v6 = *v1;
  v3[3] = v5;
  v3[4] = v6;
  v3[5] = OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content;
  swift_beginAccess();
  return sub_1D25AAF28;
}

void sub_1D25AAF28(uint64_t **a1, char a2)
{
  uint64_t *v3;
  void *v4;

  v3 = *a1;
  swift_endAccess();
  v4 = (void *)v3[3];
  if ((a2 & 1) == 0)
  {
    sub_1D2537078(v3[4] + v3[5], v3[3], (uint64_t *)&unk_1ED962B60);
    sub_1D26CC138();
    sub_1D253703C((uint64_t)v4, (uint64_t *)&unk_1ED962B60);
  }
  free(v4);
  free(v3);
}

uint64_t sub_1D25AAFA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25AAFBC(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1ED96B1E0, a1);
}

uint64_t sub_1D25AAFBC@<X0>(_QWORD *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v6;

  v6 = *v3 + *a1;
  swift_beginAccess();
  return sub_1D2537078(v6, a3, a2);
}

uint64_t sub_1D25AB01C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate;
  swift_beginAccess();
  sub_1D25AB51C(a1, v3, &qword_1ED96B1E0);
  return swift_endAccess();
}

uint64_t (*sub_1D25AB080())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25AB0C8()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(*v0 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1D25AB120(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v5;

  v5 = (_QWORD *)(*v2 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D25AB180())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25AB1C8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D25AB230@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25AAFBC(&OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1ED963110, a1);
}

uint64_t sub_1D25AB244@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for ActivityEntry(0);
  result = sub_1D26CC12C();
  *a1 = result;
  return result;
}

uint64_t _s9ChronoKit11ActivityKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  sub_1D257C290();
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  v4 = type metadata accessor for ActivityKey(0);
  if ((sub_1D26CBAE4() & 1) == 0)
    return 0;
  v5 = *(int *)(v4 + 24);
  v6 = *(_QWORD *)(a1 + v5);
  v7 = *(_QWORD *)(a1 + v5 + 8);
  v8 = (_QWORD *)(a2 + v5);
  if (v6 == *v8 && v7 == v8[1])
    return 1;
  else
    return sub_1D26CE3D0();
}

uint64_t _s9ChronoKit18ActivityVariantKeyV2eeoiySbAC_ACtFZ_0()
{
  char v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if ((MEMORY[0x1D8238E04]() & 1) != 0
    && (type metadata accessor for ActivityVariantKey(0),
        sub_1D26CD3F8(),
        sub_1D25369B0(&qword_1ED963210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF0208]),
        sub_1D26CDAC4(),
        sub_1D26CDAC4(),
        v4 == v2))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    sub_1D2536488(&qword_1ED962FF8, &qword_1ED96FD28, MEMORY[0x1E0D0FB60]);
    sub_1D26CDAC4();
    sub_1D26CDAC4();
    if (v5 == v3)
      v0 = 1;
    else
      v0 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_1D25AB498(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962B60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25AB4E0(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ActivityCacheManager(a2, a1);
  return a2;
}

uint64_t sub_1D25AB51C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1D25AB560()
{
  return sub_1D26CC624();
}

uint64_t sub_1D25AB580@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC648();
  *a1 = result;
  return result;
}

uint64_t sub_1D25AB5A8(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_1D26CC654();
}

uint64_t sub_1D25AB5D0()
{
  return sub_1D26CC660();
}

id *sub_1D25AB5F4(id *a1)
{
  destroy for ActivityCacheManager(a1);
  return a1;
}

uint64_t sub_1D25AB628()
{
  return sub_1D25369B0(&qword_1ED963490, type metadata accessor for ActivityKey, (uint64_t)&protocol conformance descriptor for ActivityKey);
}

uint64_t sub_1D25AB654()
{
  return sub_1D25369B0(&qword_1ED9635F8, type metadata accessor for ActivityVariantKey, (uint64_t)&protocol conformance descriptor for ActivityVariantKey);
}

uint64_t sub_1D25AB680()
{
  return sub_1D2536488(&qword_1EFC82B90, &qword_1ED963110, (uint64_t)&protocol conformance descriptor for VariantIdentifier<A, B>);
}

uint64_t sub_1D25AB6AC()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1D25AB6B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25A9990();
  *a1 = result;
  return result;
}

uint64_t sub_1D25AB6E0(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_1D25AB710@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_content, (uint64_t *)&unk_1ED962B60, a2);
}

uint64_t sub_1D25AB728@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id, &qword_1ED963110, a2);
}

uint64_t keypath_get_10Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;

  v6 = *a1 + *a2;
  swift_beginAccess();
  return sub_1D2537078(v6, a4, a3);
}

uint64_t sub_1D25AB79C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25A9FA4(a1, a2, a3, a4, &qword_1ED963110, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_id);
}

uint64_t sub_1D25AB7C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadError);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D25AB818@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate, &qword_1ED96B1E0, a2);
}

uint64_t sub_1D25AB82C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25A9FA4(a1, a2, a3, a4, &qword_1ED96B1E0, &OBJC_IVAR____TtC9ChronoKit13ActivityEntry_contentLoadErrorDate);
}

void **initializeBufferWithCopyOfBuffer for ActivityKey(void **a1, void **a2, uint64_t a3)
{
  int v3;
  char *v4;
  void **v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D26CBAF0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v13 = v4;
    v12(v9, v10, v11);
    v14 = *(int *)(a3 + 24);
    v15 = (void **)((char *)v7 + v14);
    v16 = (void **)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for ActivityKey(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_1D26CBAF0();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_bridgeObjectRelease();
}

void **initializeWithCopy for ActivityKey(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  id v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;

  v6 = *a2;
  *a1 = *a2;
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D26CBAF0();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12 = v6;
  v11(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (void **)((char *)a1 + v13);
  v15 = (void **)((char *)a2 + v13);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

void **assignWithCopy for ActivityKey(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D26CBAF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = *(int *)(a3 + 24);
  v14 = (void **)((char *)a1 + v13);
  v15 = (void **)((char *)a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *initializeWithTake for ActivityKey(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1D26CBAF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void **assignWithTake for ActivityKey(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1D26CBAF0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = (void **)((char *)a1 + v11);
  v13 = (uint64_t *)((char *)a2 + v11);
  v15 = *v13;
  v14 = v13[1];
  *v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25ABBC0(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D26CBAF0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ActivityKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D25ABC48(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1D26CBAF0();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D25ABCBC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CBAF0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ActivityVariantKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CD65C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D26CD3F8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = *(int *)(a3 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t destroy for ActivityVariantKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  v7 = a1 + *(int *)(a2 + 24);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t assignWithCopy for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t initializeWithTake for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for ActivityVariantKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = *(int *)(a3 + 24);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityVariantKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25AC184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_1D26CD65C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v11 = sub_1D26CD3F8();
    v12 = *(_QWORD *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
    {
      v8 = v11;
      v13 = *(int *)(a3 + 20);
    }
    else
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v12 = *(_QWORD *)(v8 - 8);
      v13 = *(int *)(a3 + 24);
    }
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ActivityVariantKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25AC22C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = sub_1D26CD65C();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = sub_1D26CD3F8();
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v14 = *(_QWORD *)(v10 - 8);
      v15 = *(int *)(a4 + 24);
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D25AC2D0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D26CD65C();
  if (v0 <= 0x3F)
  {
    sub_1D26CD3F8();
    if (v1 <= 0x3F)
    {
      sub_1D2540B68();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t sub_1D25AC370()
{
  return type metadata accessor for ActivityEntry(0);
}

uint64_t type metadata accessor for ActivityEntry(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED9634B0);
}

void sub_1D25AC38C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D2568174(319, &qword_1ED96B148, (void (*)(uint64_t))MEMORY[0x1E0CF0AA8]);
  if (v0 <= 0x3F)
  {
    sub_1D25AC59C();
    if (v1 <= 0x3F)
    {
      sub_1D2568174(319, (unint64_t *)&qword_1ED96F0B0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
      if (v2 <= 0x3F)
      {
        sub_1D26CD488();
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for ActivityEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityEntry.contentDidChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ActivityEntry.contentDidChangePublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ActivityEntry.contentDidChangePublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ActivityEntry.content.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ActivityEntry.content.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of ActivityEntry.content.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of ActivityEntry.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of ActivityEntry.id.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of ActivityEntry.id.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadError.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadError.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadError.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadErrorDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadErrorDate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ActivityEntry.contentLoadErrorDate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ActivityEntry.protectionType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ActivityEntry.protectionType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ActivityEntry.protectionType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ActivityEntry.contentURL.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ActivityEntry.__allocating_init(id:content:protectionType:targetEnvironmentProvider:cacheManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of ActivityEntry.doesTargetEnvironmentMatchContent()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t sub_1D25AC59C()
{
  uint64_t result;

  result = qword_1ED9635A8;
  if (!qword_1ED9635A8)
  {
    type metadata accessor for ActivityKey(255);
    type metadata accessor for ActivityVariantKey(255);
    sub_1D25369B0(&qword_1ED963498, type metadata accessor for ActivityKey, (uint64_t)&protocol conformance descriptor for ActivityKey);
    sub_1D25369B0(&qword_1ED963488, type metadata accessor for ActivityKey, (uint64_t)&protocol conformance descriptor for ActivityKey);
    sub_1D25369B0(&qword_1ED963600, type metadata accessor for ActivityVariantKey, (uint64_t)&protocol conformance descriptor for ActivityVariantKey);
    sub_1D25369B0(&qword_1ED9635F0, type metadata accessor for ActivityVariantKey, (uint64_t)&protocol conformance descriptor for ActivityVariantKey);
    type metadata accessor for VariantIdentifier();
  }
  return result;
}

uint64_t static ControlCacheKey.allControls(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t result;

  v4 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  result = type metadata accessor for ControlCacheKey();
  *(_QWORD *)(a2 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t ControlCacheKey.init(baseURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *(int *)(type metadata accessor for ControlCacheKey() + 20);
  v5 = sub_1D26CB880();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  *(_QWORD *)(a2 + v4) = 0;
  return result;
}

uint64_t type metadata accessor for ControlCacheKey()
{
  uint64_t result;

  result = qword_1ED96FA50;
  if (!qword_1ED96FA50)
    return swift_getSingletonMetadata();
  return result;
}

void *ControlCacheKey.control.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  v2 = v1;
  return v1;
}

void ControlCacheKey.init(baseURL:entryKey:)(uint64_t a1@<X0>, id *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  id v8;

  v6 = *(int *)(type metadata accessor for ControlCacheKey() + 20);
  *(_QWORD *)(a3 + v6) = 0;
  v7 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  v8 = *a2;
  sub_1D25AC838((uint64_t)a2);

  *(_QWORD *)(a3 + v6) = v8;
}

uint64_t sub_1D25AC838(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ControlEntryKey();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ControlCacheKey.init(baseURL:control:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v6 = *(int *)(type metadata accessor for ControlCacheKey() + 20);
  v7 = sub_1D26CB880();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a3, a1, v7);
  *(_QWORD *)(a3 + v6) = a2;
  return result;
}

uint64_t ControlCacheKey.description.getter()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  if (!v1)
    return sub_1D26CB7A8();
  v2 = v1;
  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  sub_1D26CB880();
  sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v3 = objc_msgSend(v2, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return 0x3A4C525565736162;
}

void ControlCacheKey.hash(into:)()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_1D26CB880();
  sub_1D25369B0(&qword_1ED961AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1D26CD8D8();
  v1 = *(void **)(v0 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  sub_1D26CE478();
  if (v1)
  {
    v2 = v1;
    sub_1D26CDED8();

  }
}

uint64_t ControlCacheKey.hashValue.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  sub_1D26CE460();
  sub_1D26CB880();
  sub_1D25369B0(&qword_1ED961AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1D26CD8D8();
  v1 = *(void **)(v0 + *(int *)(type metadata accessor for ControlCacheKey() + 20));
  sub_1D26CE478();
  if (v1)
  {
    v2 = v1;
    sub_1D26CDED8();

  }
  return sub_1D26CE49C();
}

uint64_t sub_1D25ACB88(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  id v4;

  sub_1D26CE460();
  sub_1D26CB880();
  sub_1D25369B0(&qword_1ED961AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1D26CD8D8();
  v3 = *(void **)(v1 + *(int *)(a1 + 20));
  sub_1D26CE478();
  if (v3)
  {
    v4 = v3;
    sub_1D26CDED8();

  }
  return sub_1D26CE49C();
}

void sub_1D25ACC3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  sub_1D26CB880();
  sub_1D25369B0(&qword_1ED961AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1D26CD8D8();
  v4 = *(void **)(v2 + *(int *)(a2 + 20));
  sub_1D26CE478();
  if (v4)
  {
    v5 = v4;
    sub_1D26CDED8();

  }
}

uint64_t sub_1D25ACCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void *v4;
  id v5;

  sub_1D26CE460();
  sub_1D26CB880();
  sub_1D25369B0(&qword_1ED961AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  sub_1D26CD8D8();
  v4 = *(void **)(v2 + *(int *)(a2 + 20));
  sub_1D26CE478();
  if (v4)
  {
    v5 = v4;
    sub_1D26CDED8();

  }
  return sub_1D26CE49C();
}

void sub_1D25ACDAC(uint64_t a1@<X0>, id *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  id v9;

  v7 = *(int *)(a3 + 20);
  *(_QWORD *)(a4 + v7) = 0;
  v8 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, a1, v8);
  v9 = *a2;
  sub_1D25AC838((uint64_t)a2);

  *(_QWORD *)(a4 + v7) = v9;
}

uint64_t _s9ChronoKit15ControlCacheKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  char v9;

  if ((MEMORY[0x1D8236FF8]() & 1) != 0)
  {
    v4 = *(int *)(type metadata accessor for ControlCacheKey() + 20);
    v5 = *(void **)(a1 + v4);
    v6 = *(void **)(a2 + v4);
    if (v5)
    {
      if (v6)
      {
        sub_1D25AD2C0();
        v7 = v6;
        v8 = v5;
        v9 = sub_1D26CDECC();

        if ((v9 & 1) != 0)
          return 1;
      }
    }
    else if (!v6)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1D25ACEB4()
{
  return sub_1D25369B0(&qword_1ED96B0F8, (uint64_t (*)(uint64_t))type metadata accessor for ControlCacheKey, (uint64_t)&protocol conformance descriptor for ControlCacheKey);
}

uint64_t *initializeBufferWithCopyOfBuffer for ControlCacheKey(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CB880();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v9;
    v10 = v9;
  }
  return a1;
}

void destroy for ControlCacheKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);

}

uint64_t initializeWithCopy for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;

  v6 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v8;
  v9 = v8;
  return a1;
}

uint64_t assignWithCopy for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v6 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  v9 = *(void **)(a2 + v7);
  *(_QWORD *)(a1 + v7) = v9;
  v10 = v9;

  return a1;
}

uint64_t initializeWithTake for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ControlCacheKey(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;

  v6 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(void **)(a1 + v7);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);

  return a1;
}

uint64_t getEnumTagSinglePayload for ControlCacheKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25AD144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlCacheKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25AD1D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D26CB880();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

uint64_t sub_1D25AD250()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB880();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1D25AD2C0()
{
  unint64_t result;

  result = qword_1EFC82B98;
  if (!qword_1EFC82B98)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EFC82B98);
  }
  return result;
}

BOOL static ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy.hash(into:)()
{
  return sub_1D26CE46C();
}

uint64_t ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

BOOL sub_1D25AD380(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy.== infix(_:_:)(a1, a2);
}

uint64_t sub_1D25AD3A8()
{
  sub_1D26CE460();
  ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D25AD3E0()
{
  uint64_t v0;

  v0 = sub_1D25B0A7C();
  sub_1D2549DF0(v0);
  return v0;
}

uint64_t sub_1D25AD410(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;

  v5 = (uint64_t *)(v2 + qword_1ED977EB0);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a1;
  v5[1] = a2;
  return sub_1D25495F4(v6);
}

uint64_t (*sub_1D25AD46C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

double ExpiringStatefulStore.expirationDuration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + qword_1ED977D48);
}

uint64_t sub_1D25AD4C0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_1ED962538) = a1;
  return swift_release();
}

void ExpiringStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)()
{
  swift_allocObject();
  sub_1D25B07B4();
}

uint64_t sub_1D25AD564(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

void ExpiringStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)()
{
  sub_1D25B07B4();
}

uint64_t sub_1D25AD5F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

void ExpiringStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)()
{
  swift_allocObject();
  sub_1D25B0554();
}

uint64_t sub_1D25AD6B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

void ExpiringStatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)()
{
  sub_1D25B0554();
}

uint64_t sub_1D25AD740(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

uint64_t sub_1D25AD788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D25495F4(*(_QWORD *)(v0 + qword_1ED977EB0));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v1 = v0 + qword_1ED961E88;
  v2 = sub_1D26CC09C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t ExpiringStatefulStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = qword_1ED962538;
  v2 = *(_QWORD *)(v0 + qword_1ED962538);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 24);
    v4 = *(os_unfair_lock_s **)(v3 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v4);
    if ((*(_BYTE *)(v2 + 32) & 1) == 0)
    {
      *(_BYTE *)(v2 + 32) = 1;
      objc_msgSend(*(id *)(v2 + 16), sel_invalidate);
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    swift_release();
  }
  *(_QWORD *)(v0 + v1) = 0;
  swift_release();
  v5 = AssertedStatefulStore.deinit();
  sub_1D25495F4(*(_QWORD *)(v5 + qword_1ED977EB0));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v6 = v5 + qword_1ED961E88;
  v7 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return v5;
}

uint64_t ExpiringStatefulStore.__deallocating_deinit()
{
  ExpiringStatefulStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D25AD940(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  unint64_t v48;
  int64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;

  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 1672);
  v57 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v51 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v3[210];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = sub_1D26CDF38();
  v55 = *(_QWORD *)(v8 - 8);
  v56 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v45 - v12;
  v53 = v1;
  v14 = sub_1D262AF38();
  v15 = v3[208];
  v58 = v6;
  v59 = v4;
  v16 = sub_1D26CD89C();
  v17 = v3[212];
  swift_bridgeObjectRetain();
  v52 = a1;
  MEMORY[0x1D8239074](&v60, a1, v14, v15, v16, v17);
  result = swift_bridgeObjectRelease();
  v19 = v60;
  if (v60)
  {
    v54 = v13;
    if ((v60 & 0xC000000000000001) != 0)
    {
      result = sub_1D26CE1A8();
      v48 = 0;
      v20 = 0;
      v21 = 0;
      v19 = result | 0x8000000000000000;
    }
    else
    {
      v22 = -1 << *(_BYTE *)(v60 + 32);
      v23 = *(_QWORD *)(v60 + 64);
      v48 = v60 + 64;
      v20 = ~v22;
      v24 = -v22;
      if (v24 < 64)
        v25 = ~(-1 << v24);
      else
        v25 = -1;
      v21 = v25 & v23;
    }
    v26 = 0;
    v49 = (unint64_t)(v20 + 64) >> 6;
    v50 = v19 & 0x7FFFFFFFFFFFFFFFLL;
    v46 = v49 - 1;
    v47 = v20;
    if ((v19 & 0x8000000000000000) != 0)
      goto LABEL_12;
LABEL_9:
    v27 = v54;
    if (v21)
    {
      v28 = (v21 - 1) & v21;
      v29 = __clz(__rbit64(v21)) | (v26 << 6);
      v30 = v26;
LABEL_11:
      (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(v11, *(_QWORD *)(v19 + 48) + *(_QWORD *)(v57 + 72) * v29, v59);
      (*(void (**)(char *, unint64_t))(*(_QWORD *)(v58 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)(v19 + 56) + *(_QWORD *)(*(_QWORD *)(v58 - 8) + 72) * v29);
      v31 = 0;
      goto LABEL_21;
    }
    v30 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
      __break(1u);
    }
    else
    {
      if (v30 >= v49)
      {
        v28 = 0;
        v31 = 1;
        v30 = v26;
        goto LABEL_21;
      }
      v33 = *(_QWORD *)(v48 + 8 * v30);
      if (v33)
        goto LABEL_17;
      if (v26 + 2 >= v49)
      {
        v28 = 0;
        v31 = 1;
        goto LABEL_21;
      }
      v33 = *(_QWORD *)(v48 + 8 * (v26 + 2));
      if (v33)
      {
        v30 = v26 + 2;
LABEL_17:
        v28 = (v33 - 1) & v33;
        v29 = __clz(__rbit64(v33)) + (v30 << 6);
        goto LABEL_11;
      }
      v44 = v26 + 3;
      if (v26 + 3 >= v49)
      {
        v28 = 0;
        v31 = 1;
        v30 = v26 + 2;
        goto LABEL_21;
      }
      v33 = *(_QWORD *)(v48 + 8 * v44);
      if (v33)
      {
        v30 = v26 + 3;
        goto LABEL_17;
      }
      while (1)
      {
        v30 = v44 + 1;
        if (__OFADD__(v44, 1))
          break;
        if (v30 >= v49)
        {
          v28 = 0;
          v31 = 1;
          v30 = v46;
LABEL_21:
          while (1)
          {
            v34 = *(_QWORD *)(TupleTypeMetadata2 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v34 + 56))(v11, v31, 1, TupleTypeMetadata2);
            (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v27, v11, v56);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v27, 1, TupleTypeMetadata2) == 1)
              return sub_1D2592A28();
            v35 = &v27[*(int *)(TupleTypeMetadata2 + 48)];
            v36 = v57;
            v37 = v19;
            v38 = (uint64_t)v51;
            v39 = v27;
            v40 = v11;
            v41 = v59;
            (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v51, v39, v59);
            sub_1D25ADDB4(v52, v38);
            v42 = v38;
            v19 = v37;
            v43 = v41;
            v11 = v40;
            (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v42, v43);
            result = (*(uint64_t (**)(char *))(*(_QWORD *)(v58 - 8) + 8))(v35);
            v26 = v30;
            v21 = v28;
            if ((v37 & 0x8000000000000000) == 0)
              goto LABEL_9;
LABEL_12:
            v32 = sub_1D26CE1B4();
            v27 = v54;
            if (v32)
            {
              sub_1D26CE3AC();
              swift_unknownObjectRelease();
              sub_1D26CE3AC();
              swift_unknownObjectRelease();
              v31 = 0;
            }
            else
            {
              v31 = 1;
            }
            v30 = v26;
            v28 = v21;
          }
        }
        v33 = *(_QWORD *)(v48 + 8 * v30);
        ++v44;
        if (v33)
          goto LABEL_17;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1D25ADDB4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  void (*v18)(_QWORD *__return_ptr, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v20[4];
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  _QWORD v28[2];
  __int128 v29;
  __int128 v30;
  __int128 v31;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 1672);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v20[3] = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v11 = *(_QWORD *)(v5 + 1664);
  v24 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v20[2] = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v25 = (char *)v20 - v15;
  MEMORY[0x1E0C80A78](v14);
  v26 = (char *)v20 - v16;
  v17 = (uint64_t *)((char *)v2 + qword_1ED977EB0);
  swift_beginAccess();
  v18 = (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t))*v17;
  if (!*v17 || (sub_1D2549DF0((uint64_t)v18), v18(v28, a1, a2), result = sub_1D25495F4((uint64_t)v18), (v28[0] & 1) == 0))
  {
    v23 = v7;
    v27 = a2;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    v28[0] = v11;
    v28[1] = v6;
    v29 = *(_OWORD *)(v5 + 1680);
    v22 = *(_OWORD *)(v5 + 1696);
    v21 = *(_OWORD *)(v5 + 1712);
    v30 = v22;
    v31 = v21;
    type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
  }
  return result;
}

void sub_1D25AE404()
{
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
}

uint64_t sub_1D25AE444()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = sub_1D26CDB3C();
  v4 = v1;
  v5 = v0;
  sub_1D2615628((uint64_t)sub_1D25B1080, (uint64_t)&v3, MEMORY[0x1E0DEE9C0] + 8);
  return swift_bridgeObjectRelease();
}

void sub_1D25AE494(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[54];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;

  v17[25] = a2;
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 1672);
  v3 = MEMORY[0x1E0C80A78](a1);
  v4 = MEMORY[0x1E0C80A78](v3);
  v17[51] = (char *)v17 - v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v17[40] = (char *)v17 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v17[47] = (char *)v17 - v9;
  v17[2] = v10;
  MEMORY[0x1E0C80A78](v8);
  v17[52] = (char *)v17 - v11;
  v13 = *(_QWORD *)(v12 + 1680);
  v14 = *(_QWORD *)(v12 + 1688);
  v15 = *(_QWORD *)(v12 + 1696);
  v16 = *(_QWORD *)(v12 + 1704);
  v19 = *(_QWORD *)(v12 + 1664);
  v20 = v2;
  v21 = v13;
  v22 = v14;
  v17[23] = v14;
  v17[38] = v15;
  v23 = v15;
  v24 = v16;
  v17[22] = v16;
  v18 = *(_OWORD *)(v12 + 1712);
  v25 = v18;
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
}

void sub_1D25AF9C8()
{
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
}

void sub_1D25B0254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v1 = qword_1ED962538;
  v2 = *(_QWORD *)(v0 + qword_1ED962538);
  if (v2)
  {
    v3 = *(_QWORD *)(v2 + 24);
    v4 = *(os_unfair_lock_s **)(v3 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v4);
    if ((*(_BYTE *)(v2 + 32) & 1) == 0)
    {
      *(_BYTE *)(v2 + 32) = 1;
      objc_msgSend(*(id *)(v2 + 16), sel_invalidate);
    }
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    swift_release();
    v1 = qword_1ED962538;
  }
  *(_QWORD *)(v0 + v1) = 0;
  swift_release();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
}

uint64_t sub_1D25B0368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t result;

  v3 = sub_1D26CD89C();
  v4 = MEMORY[0x1D8239020](v2, v0, v3, v1);
  result = swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
    sub_1D25AF9C8();
  return result;
}

uint64_t sub_1D25B0500()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
    sub_1D25AE404();
  return result;
}

void sub_1D25B0554()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_1D26CC09C();
  MEMORY[0x1E0C80A78](v1);
  v2 = (_QWORD *)(v0 + qword_1ED977EB0);
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)(v0 + qword_1ED962540) = 2000000000;
  swift_retain();
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
}

void sub_1D25B0650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  sub_1D26CD89C();
  swift_getTupleTypeMetadata2();
  sub_1D26CDB3C();
  *(_QWORD *)(v1 + v5) = sub_1D26CD824();
  v7 = qword_1ED962538;
  *(_QWORD *)(v1 + qword_1ED962538) = 0;
  *(_QWORD *)(v1 + qword_1ED961E80) = 0;
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8(v1 + qword_1ED961E88, v0, v3);
  *(_QWORD *)(v1 + v7) = 0;
  swift_release();
  *(_QWORD *)(v1 + qword_1ED977D48) = 0x405E000000000000;
  *(_QWORD *)(v1 + qword_1ED962548) = 120000000000;
  swift_release();
  v8(v2, v0, v3);
  sub_1D2538510(*(_QWORD *)(v6 - 216), v6 - 152);
  sub_1D2556CE8(*(_QWORD *)(v6 - 192), *(_QWORD *)(v6 - 184), *(_QWORD *)(v6 - 176), v2, v6 - 152, *(_DWORD *)(v6 - 168), *(_DWORD *)(v6 - 164), *(_QWORD *)(v6 - 160), *(_OWORD *)(v6 - 208), *(_QWORD *)(v6 - 224));
}

uint64_t sub_1D25B0770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_destroy_boxed_opaque_existential_1(v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  return a1;
}

void sub_1D25B07B4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = sub_1D26CC09C();
  MEMORY[0x1E0C80A78](v1);
  v2 = (_QWORD *)(v0 + qword_1ED977EB0);
  *v2 = 0;
  v2[1] = 0;
  *(_QWORD *)(v0 + qword_1ED962540) = 2000000000;
  swift_retain();
  type metadata accessor for ExpiringStatefulStore.TimestampedAssertion();
}

void sub_1D25B08B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  double v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  sub_1D26CD89C();
  swift_getTupleTypeMetadata2();
  sub_1D26CDB3C();
  *(_QWORD *)(v1 + v5) = sub_1D26CD824();
  v8 = qword_1ED962538;
  *(_QWORD *)(v1 + qword_1ED962538) = 0;
  *(_QWORD *)(v1 + qword_1ED961E80) = 0;
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v9(v1 + qword_1ED961E88, v0, v3);
  *(_QWORD *)(v1 + v8) = 0;
  swift_release();
  *(double *)(v1 + qword_1ED977D48) = v7;
  if ((~*(_QWORD *)&v7 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v7 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v7 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (is_mul_ok((unint64_t)v7, 0x3B9ACA00uLL))
  {
    v11 = v6[3];
    v10 = v6[4];
    v12 = v6[2];
    *(_QWORD *)(v1 + qword_1ED962548) = 1000000000 * (unint64_t)v7;
    swift_release();
    v9(v2, v0, v3);
    sub_1D2538510(*(v6 - 29), (uint64_t)(v6 - 21));
    *(_QWORD *)&v13 = v12;
    *((_QWORD *)&v13 + 1) = v11;
    sub_1D2556CE8(*(v6 - 33), *(v6 - 32), *(v6 - 31), v2, (uint64_t)(v6 - 21), *(_DWORD *)(v6 - 34) & 1, *((_DWORD *)v6 - 67) & 1, *(v6 - 30), v13, v10);
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_1D25B0A7C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1ED977EB0;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

void sub_1D25B0AC0()
{
  JUMPOUT(0x1D823A4E4);
}

uint64_t sub_1D25B0AD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = sub_1D25B0A7C();
  if (v2)
    v4 = v3;
  else
    v4 = 0;
  *a1 = v2;
  a1[1] = v4;
  return sub_1D2549DF0(v2);
}

uint64_t sub_1D25B0B00(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  if (*a1)
    v2 = a1[1];
  else
    v2 = 0;
  sub_1D2549DF0(*a1);
  return sub_1D25AD410(v1, v2);
}

uint64_t sub_1D25B0B48()
{
  return 64;
}

__n128 sub_1D25B0B54(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D25B0B68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CC09C();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for ExpiringStatefulStore()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for ExpiringStatefulStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExpiringStatefulStore.expiringAssertionAcquisitionPolicy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1792))();
}

uint64_t dispatch thunk of ExpiringStatefulStore.expiringAssertionAcquisitionPolicy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1800))();
}

uint64_t dispatch thunk of ExpiringStatefulStore.expiringAssertionAcquisitionPolicy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1808))();
}

uint64_t dispatch thunk of ExpiringStatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:expirationDuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1888))();
}

uint64_t sub_1D25B0C60()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D25B0C68(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D25B0CB4 + 4 * byte_1D26D4295[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D25B0CE8 + 4 * byte_1D26D4290[v4]))();
}

uint64_t sub_1D25B0CE8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25B0CF0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D25B0CF8);
  return result;
}

uint64_t sub_1D25B0D04(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D25B0D0CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D25B0D10(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25B0D18(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ExpiringStatefulStore.ExpiringAssertionAcquisitionPolicy()
{
  JUMPOUT(0x1D823A430);
}

uint64_t sub_1D25B0D30()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1D25B0D3C(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t *sub_1D25B0D80(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1D25B0F2C(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  return a1;
}

uint64_t sub_1D25B0F64(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t sub_1D25B0FAC(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ExpiringStatefulStore.TimestampedAssertion()
{
  JUMPOUT(0x1D823A430);
}

uint64_t sub_1D25B1004()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D25B1028()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25B104C()
{
  return sub_1D25B0500();
}

void sub_1D25B1080()
{
  uint64_t v0;

  sub_1D25AE494(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

ValueMetadata *type metadata accessor for AccessibilityOptionalIdentifier()
{
  return &type metadata for AccessibilityOptionalIdentifier;
}

ValueMetadata *type metadata accessor for AccessibilityOptionalValue()
{
  return &type metadata for AccessibilityOptionalValue;
}

uint64_t _s9ChronoKit31AccessibilityOptionalIdentifierVwet_0(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t _s9ChronoKit31AccessibilityOptionalIdentifierVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessibilityOptionalLabel()
{
  return &type metadata for AccessibilityOptionalLabel;
}

uint64_t sub_1D25B1180()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D25B1190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD v19[4];

  v19[1] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC38);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CAF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C9E0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v19[2] = a2;
    v19[3] = a3;
    sub_1D25B198C(&qword_1ED96CC30, &qword_1ED96CC38);
    sub_1D257293C();
    sub_1D26CCDD4();
    sub_1D2537078((uint64_t)v16, (uint64_t)v13, &qword_1ED96C9E0);
    swift_storeEnumTagMultiPayload();
    sub_1D25B1914(&qword_1ED96C9D8, &qword_1ED96C9E0, &qword_1ED96CC30, &qword_1ED96CC38);
    sub_1D26CC90C();
    return sub_1D253703C((uint64_t)v16, &qword_1ED96C9E0);
  }
  else
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v18(v10, a1, v7);
    v18(v13, (uint64_t)v10, v7);
    swift_storeEnumTagMultiPayload();
    sub_1D25B1914(&qword_1ED96C9D8, &qword_1ED96C9E0, &qword_1ED96CC30, &qword_1ED96CC38);
    sub_1D25B198C(&qword_1ED96CC30, &qword_1ED96CC38);
    sub_1D26CC90C();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1D25B13EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1D25B1190(a1, *v2, v2[1], a2);
}

uint64_t sub_1D25B13F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D25B1404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v18)(char *, uint64_t, uint64_t);
  _QWORD v19[4];

  v19[1] = a4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC48);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CAF8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C9F0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    v19[2] = a2;
    v19[3] = a3;
    sub_1D25B198C(&qword_1ED96CC40, &qword_1ED96CC48);
    sub_1D257293C();
    sub_1D26CCDE0();
    sub_1D2537078((uint64_t)v16, (uint64_t)v13, &qword_1ED96C9F0);
    swift_storeEnumTagMultiPayload();
    sub_1D25B1914(&qword_1ED96C9E8, &qword_1ED96C9F0, &qword_1ED96CC40, &qword_1ED96CC48);
    sub_1D26CC90C();
    return sub_1D253703C((uint64_t)v16, &qword_1ED96C9F0);
  }
  else
  {
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v18(v10, a1, v7);
    v18(v13, (uint64_t)v10, v7);
    swift_storeEnumTagMultiPayload();
    sub_1D25B1914(&qword_1ED96C9E8, &qword_1ED96C9F0, &qword_1ED96CC40, &qword_1ED96CC48);
    sub_1D25B198C(&qword_1ED96CC40, &qword_1ED96CC48);
    sub_1D26CC90C();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t sub_1D25B1660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1D25B1404(a1, *v2, v2[1], a2);
}

uint64_t sub_1D25B1668()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D25B1678@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v16)(char *, uint64_t, uint64_t);
  _QWORD v17[2];

  v17[1] = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC58);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CB00);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA00);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_1D25B198C(&qword_1ED96CC50, &qword_1ED96CC58);
    sub_1D26CCE10();
    sub_1D2537078((uint64_t)v14, (uint64_t)v11, &qword_1ED96CA00);
    swift_storeEnumTagMultiPayload();
    sub_1D25B1914(&qword_1ED96C9F8, &qword_1ED96CA00, &qword_1ED96CC50, &qword_1ED96CC58);
    sub_1D26CC90C();
    return sub_1D253703C((uint64_t)v14, &qword_1ED96CA00);
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v16(v8, a1, v5);
    v16(v11, (uint64_t)v8, v5);
    swift_storeEnumTagMultiPayload();
    sub_1D25B1914(&qword_1ED96C9F8, &qword_1ED96CA00, &qword_1ED96CC50, &qword_1ED96CC58);
    sub_1D25B198C(&qword_1ED96CC50, &qword_1ED96CC58);
    sub_1D26CC90C();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t sub_1D25B18C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D25B1678(a1, *(_QWORD *)(v2 + 8), a2);
}

unint64_t sub_1D25B18CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED962D70;
  if (!qword_1ED962D70)
  {
    v1 = sub_1D26CCB28();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDCFB8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED962D70);
  }
  return result;
}

uint64_t sub_1D25B1914(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result;
  uint64_t v8;
  _QWORD v9[2];

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9[0] = sub_1D25B198C(a3, a4);
    v9[1] = sub_1D25B18CC();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v8, v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D25B198C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDBF10], v4);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D25B19D0()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CB88;
  if (!qword_1ED96CB88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CB90);
    v2[0] = sub_1D25B1914(&qword_1ED96C9F8, &qword_1ED96CA00, &qword_1ED96CC50, &qword_1ED96CC58);
    v2[1] = sub_1D25B198C(&qword_1ED96CC50, &qword_1ED96CC58);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CB88);
  }
  return result;
}

unint64_t sub_1D25B1A78()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CB78;
  if (!qword_1ED96CB78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CB80);
    v2[0] = sub_1D25B1914(&qword_1ED96C9E8, &qword_1ED96C9F0, &qword_1ED96CC40, &qword_1ED96CC48);
    v2[1] = sub_1D25B198C(&qword_1ED96CC40, &qword_1ED96CC48);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CB78);
  }
  return result;
}

unint64_t sub_1D25B1B20()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CB68;
  if (!qword_1ED96CB68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CB70);
    v2[0] = sub_1D25B1914(&qword_1ED96C9D8, &qword_1ED96C9E0, &qword_1ED96CC30, &qword_1ED96CC38);
    v2[1] = sub_1D25B198C(&qword_1ED96CC30, &qword_1ED96CC38);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CB68);
  }
  return result;
}

uint64_t sub_1D25B1BCC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](28);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    v2 = sub_1D2557230(v1);
    if (v0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      v4 = v2;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = sub_1D25B2588(v4);
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

uint64_t ChronoMetadataStore.PublicTokenStore.deinit()
{
  uint64_t v0;

  swift_weakDestroy();
  return v0;
}

uint64_t sub_1D25B1E08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t Strong;
  uint64_t v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  char v21;
  uint64_t result;
  uint64_t v23;

  v2 = v1;
  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v8 = Strong;
  v9 = *(_QWORD *)(Strong + 24);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  v11 = *(_QWORD *)(v8 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  swift_release();
  if (!v11)
  {
    __break(1u);
    goto LABEL_8;
  }
  v12 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](51);
  v23 = v12;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v13 = sub_1D253FC20(v4, v3);
  v15 = v14;
  v17 = v16;
  sub_1D2641480(v13, v14, v16);
  sub_1D253FBE8(v13, v15, v17);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D253FE08(v5, v6);
  sub_1D253FE08(v5, v6);
  v18 = sub_1D253FC0C(v5, v6);
  v20 = v19;
  LOBYTE(v15) = v21;
  sub_1D2641480(v18, v19, v21);
  sub_1D253FBE8(v18, v20, v15);
  sub_1D253EE04(v5, v6);
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v2)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D25B2138(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  char v16;
  uint64_t result;
  uint64_t v18;

  v3 = v2;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v7 = Strong;
  v8 = *(_QWORD *)(Strong + 24);
  v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  v10 = *(_QWORD *)(v7 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
  swift_release();
  swift_release();
  if (!v10)
  {
    __break(1u);
    goto LABEL_8;
  }
  v11 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](24);
  v18 = v11;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v12 = sub_1D253FC20(a1, a2);
  v14 = v13;
  v16 = v15;
  sub_1D2641480(v12, v13, v15);
  sub_1D253FBE8(v12, v14, v16);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v3)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D25B23A0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](77);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D25B2588(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = *(_QWORD *)(a1 + 16);
  if (!v16)
    return MEMORY[0x1E0DEE9D8];
  v15 = a1 + 32;
  swift_bridgeObjectRetain();
  v1 = 0;
  v14 = MEMORY[0x1E0DEE9D8];
  do
  {
    v2 = *(_QWORD *)(v15 + 8 * v1);
    swift_bridgeObjectRetain();
    v3 = sub_1D26CE0B8();
    v5 = v4;
    if (*(_QWORD *)(v2 + 16))
    {
      v6 = v3;
      v7 = (unsigned __int8 *)(v2 + 64);
      v8 = *(_QWORD *)(v2 + 16);
      do
      {
        v9 = *((_QWORD *)v7 - 2);
        v10 = *((_QWORD *)v7 - 1);
        v11 = *v7;
        v12 = *((_QWORD *)v7 - 4) == v6 && *((_QWORD *)v7 - 3) == v5;
        if (v12 || (sub_1D26CE3D0() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          sub_1D2541E98(v9, v10, v11);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __asm { BR              X8 }
        }
        v7 += 40;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ++v1;
  }
  while (v1 != v16);
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t type metadata accessor for ChronoMetadataStore.PublicTokenStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.PublicTokenStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.PublicTokenStore.publicTokens()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t type metadata accessor for ChronoMetadataStore.MutablePublicTokenStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChronoMetadataStore.MutablePublicTokenStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePublicTokenStore.update(token:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ChronoMetadataStore.MutablePublicTokenStore.remove(environmentName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

unint64_t sub_1D25B2BA8()
{
  unint64_t result;

  result = qword_1ED962108;
  if (!qword_1ED962108)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED962108);
  }
  return result;
}

uint64_t ColorScheme.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int *v3;
  uint64_t v4;
  uint64_t v5;

  if (a1 == 2)
    v3 = (unsigned int *)MEMORY[0x1E0CD86D0];
  else
    v3 = (unsigned int *)MEMORY[0x1E0CD86E0];
  v4 = *v3;
  v5 = sub_1D26CC2C4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 104))(a2, v4, v5);
}

id RemoteWidgetExtensionSession.extensionIdentity.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t RemoteWidgetExtensionSession.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier;
  v4 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RemoteWidgetExtensionSession.dataProtectionLevel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D25B2CA8(v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel, a1);
}

uint64_t sub_1D25B2CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25B2CF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CBA24();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession____lazy_storage___loggingIdentifier);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession____lazy_storage___loggingIdentifier + 8))
  {
    v10 = *v9;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier, v5);
    v11 = *(_QWORD *)(v0 + 16) + *MEMORY[0x1E0D0FE30];
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v11, v1);
    swift_beginAccess();
    v16 = v1;
    swift_bridgeObjectRetain();
    v10 = sub_1D26CD2B4();
    v13 = v12;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *v9 = v10;
    v9[1] = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v10;
}

uint64_t RemoteWidgetExtensionSession.__allocating_init(identifier:extensionIdentity:dataProtectionLevel:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  RemoteWidgetExtensionSession.init(identifier:extensionIdentity:dataProtectionLevel:)(a1, a2, a3);
  return v6;
}

uint64_t RemoteWidgetExtensionSession.init(identifier:extensionIdentity:dataProtectionLevel:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  void *v25;
  uint64_t v26;

  v7 = v3;
  v11 = OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82BA8);
  v12 = swift_allocObject();
  *(_DWORD *)(v12 + 24) = 0;
  *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v7 + v11) = v12;
  v13 = (_QWORD *)(v7 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession____lazy_storage___loggingIdentifier);
  *v13 = 0;
  v13[1] = 0;
  if (objc_msgSend(a2, sel_isRemote))
  {
    v14 = v7 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier;
    v5 = sub_1D26CBA24();
    v4 = *(_QWORD *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v14, a1, v5);
    *(_QWORD *)(v7 + 16) = a2;
    sub_1D25B2CA8(a3, v7 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel);
    v15 = qword_1EFC821C8;
    v6 = a2;
    if (v15 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v16 = sub_1D26CC09C();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EFC8AAC8);
  swift_retain_n();
  v17 = sub_1D26CC084();
  v18 = sub_1D26CDD04();
  if (os_log_type_enabled(v17, v18))
  {
    v25 = v6;
    v19 = (uint8_t *)swift_slowAlloc();
    v24 = a3;
    v20 = swift_slowAlloc();
    v26 = v20;
    *(_DWORD *)v19 = 136446210;
    v21 = sub_1D25B2CF0();
    sub_1D2537880(v21, v22, &v26);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v17, v18, "%{public}s Session initialized", v19, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v20, -1, -1);
    MEMORY[0x1D823A5E0](v19, -1, -1);

    sub_1D253703C(v24, &qword_1ED96FC90);
  }
  else
  {
    swift_release_n();

    sub_1D253703C(a3, &qword_1ED96FC90);
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v5);
  return v7;
}

Swift::Void __swiftcall RemoteWidgetExtensionSession.setDescriptors(_:)(Swift::OpaquePointer a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1D25B3244((unint64_t *)(v3 + 16), v1, (unint64_t)a1._rawValue);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  swift_release();
}

uint64_t sub_1D25B3244(unint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  id v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  NSObject *v29;
  unint64_t *v30;
  uint64_t v31;
  os_log_type_t v32;
  uint8_t *v33;
  uint64_t v34;
  uint64_t v35;

  swift_bridgeObjectRelease();
  if (qword_1EFC821C8 != -1)
    swift_once();
  v5 = sub_1D26CC09C();
  __swift_project_value_buffer(v5, (uint64_t)qword_1EFC8AAC8);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  v6 = sub_1D26CC084();
  v7 = sub_1D26CDD04();
  if (!os_log_type_enabled(v6, v7))
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
LABEL_18:
    *a1 = a3;
    return swift_bridgeObjectRetain();
  }
  v32 = v7;
  v8 = swift_slowAlloc();
  v31 = swift_slowAlloc();
  v35 = v31;
  *(_DWORD *)v8 = 136446722;
  v9 = sub_1D25B2CF0();
  sub_1D2537880(v9, v10, &v35);
  sub_1D26CDF50();
  swift_release_n();
  swift_bridgeObjectRelease();
  v33 = (uint8_t *)v8;
  *(_WORD *)(v8 + 12) = 2050;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  sub_1D26CDF50();
  swift_bridgeObjectRelease();
  *(_WORD *)(v8 + 22) = 2082;
  v12 = MEMORY[0x1E0DEE9D8];
  if (!v11)
  {
LABEL_17:
    v26 = MEMORY[0x1D82392C0](v12, MEMORY[0x1E0DEA968]);
    v28 = v27;
    swift_bridgeObjectRelease();
    sub_1D2537880(v26, v28, &v35);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v6, v32, "%{public}s Updating descriptors: %{public}ld - %{public}s", v33, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v31, -1, -1);
    MEMORY[0x1D823A5E0](v33, -1, -1);

    goto LABEL_18;
  }
  v34 = MEMORY[0x1E0DEE9D8];
  result = sub_1D258430C(0, v11 & ~(v11 >> 63), 0);
  if ((v11 & 0x8000000000000000) == 0)
  {
    v29 = v6;
    v30 = a1;
    v14 = 0;
    v12 = v34;
    v15 = a3 & 0xC000000000000001;
    v16 = a3;
    do
    {
      if (v15)
        v17 = (id)MEMORY[0x1D8239890](v14, a3);
      else
        v17 = *(id *)(a3 + 8 * v14 + 32);
      v18 = v17;
      v19 = objc_msgSend(v18, sel_kind);
      v20 = sub_1D26CD938();
      v22 = v21;

      v24 = *(_QWORD *)(v34 + 16);
      v23 = *(_QWORD *)(v34 + 24);
      if (v24 >= v23 >> 1)
        sub_1D258430C(v23 > 1, v24 + 1, 1);
      ++v14;
      *(_QWORD *)(v34 + 16) = v24 + 1;
      v25 = v34 + 16 * v24;
      *(_QWORD *)(v25 + 32) = v20;
      *(_QWORD *)(v25 + 40) = v22;
      a3 = v16;
    }
    while (v11 != v14);
    a1 = v30;
    v6 = v29;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t RemoteWidgetExtensionSession.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier;
  v2 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel, &qword_1ED96FC90);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t RemoteWidgetExtensionSession.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_identifier;
  v2 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel, &qword_1ED96FC90);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t RemoteWidgetExtensionSession.getAppIntentsXPCListenerEndpoint(completion:)(uint64_t (*a1)(_QWORD, _QWORD, unint64_t, _QWORD))
{
  return a1(0, 0, 0xF000000000000000, 0);
}

uint64_t RemoteWidgetExtensionSession.getCurrentDescriptors(completion:)(void (*a1)(uint64_t, _QWORD))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1D25B3FD0((uint64_t *)(v3 + 16), v1, &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  v4 = v6;
  swift_release();
  a1(v4, 0);
  return swift_bridgeObjectRelease();
}

void RemoteWidgetExtensionSession.getAllCurrentDescriptors(completion:)(void (*a1)(id, _QWORD))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  id v5;
  uint64_t v6;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1D25B3FD0((uint64_t *)(v4 + 16), v2, &v6);
  sub_1D26CD518();
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  v5 = (id)sub_1D26CD4E8();
  a1(v5, 0);

}

uint64_t sub_1D25B3934(int a1, int a2, void *aBlock, void (*a4)(uint64_t, void *))
{
  void *v5;
  uint64_t v6;

  v5 = _Block_copy(aBlock);
  _Block_copy(v5);
  v6 = swift_retain();
  a4(v6, v5);
  _Block_release(v5);
  _Block_release(v5);
  return swift_release();
}

uint64_t RemoteWidgetExtensionSession.handleURLSessionEvents(for:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t RemoteWidgetExtensionSession.attachPreviewAgent(frameworkPath:endpoint:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD))
{
  return a4(0, 0);
}

uint64_t RemoteWidgetExtensionSession.getTimelines(requests:isPreview:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

Swift::Void __swiftcall RemoteWidgetExtensionSession.invalidate()()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (qword_1EFC821C8 != -1)
    swift_once();
  v0 = sub_1D26CC09C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1EFC8AAC8);
  swift_retain_n();
  v1 = sub_1D26CC084();
  v2 = sub_1D26CDD04();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v7 = v4;
    *(_DWORD *)v3 = 136446210;
    v5 = sub_1D25B2CF0();
    sub_1D2537880(v5, v6, &v7);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v1, v2, "%{public}s Session invalidated", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v4, -1, -1);
    MEMORY[0x1D823A5E0](v3, -1, -1);

  }
  else
  {

    swift_release_n();
  }
}

uint64_t RemoteWidgetExtensionSession.getDescriptors(completion:)(uint64_t (*a1)(_QWORD, _QWORD))
{
  return a1(MEMORY[0x1E0DEE9D8], 0);
}

uint64_t RemoteWidgetExtensionSession.getPlaceholders(environment:for:completion:)(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t RemoteWidgetExtensionSession.getTimeline(for:into:environment:isPreview:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(0);
}

uint64_t RemoteWidgetExtensionSession.getWidgetRelevances(request:completion:)(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

void sub_1D25B3FD0(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  char v34;
  void (*v35)(char *, uint64_t);
  char *v36;
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  uint64_t v40;
  uint64_t v41;
  NSObject *v42;
  os_log_type_t v43;
  uint8_t *v44;
  _QWORD *v45;
  void *v46;
  id v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  void (*v55)(char *, _QWORD, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t *v59;
  void *v60;

  v59 = a3;
  v51 = a1;
  v4 = sub_1D26CD488();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v52 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962060);
  v8 = MEMORY[0x1E0C80A78](v7);
  v58 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v49 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  v13 = MEMORY[0x1E0C80A78](v12);
  v50 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v56 = (char *)&v49 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v49 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v49 - v20;
  v53 = a2;
  v22 = a2 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_dataProtectionLevel;
  v23 = v7;
  v24 = *MEMORY[0x1E0CF0408];
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v54((char *)&v49 - v20, v24, v4);
  v55 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56);
  v55(v21, 0, 1, v4);
  v25 = (uint64_t)&v11[*(int *)(v7 + 48)];
  v57 = v22;
  sub_1D25B2CA8(v22, (uint64_t)v11);
  sub_1D25B2CA8((uint64_t)v21, v25);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v26((uint64_t)v11, 1, v4) == 1)
  {
    sub_1D253703C((uint64_t)v21, &qword_1ED96FC90);
    if (v26(v25, 1, v4) == 1)
      goto LABEL_9;
    goto LABEL_6;
  }
  sub_1D25B2CA8((uint64_t)v11, (uint64_t)v19);
  if (v26(v25, 1, v4) == 1)
  {
    sub_1D253703C((uint64_t)v21, &qword_1ED96FC90);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v4);
LABEL_6:
    sub_1D253703C((uint64_t)v11, &qword_1ED962060);
    goto LABEL_7;
  }
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  v49 = v23;
  v33 = v52;
  v32(v52, v25, v4);
  sub_1D25946D4();
  v34 = sub_1D26CD908();
  v35 = *(void (**)(char *, uint64_t))(v5 + 8);
  v36 = v33;
  v23 = v49;
  v35(v36, v4);
  sub_1D253703C((uint64_t)v21, &qword_1ED96FC90);
  v35(v19, v4);
  sub_1D253703C((uint64_t)v11, &qword_1ED96FC90);
  if ((v34 & 1) != 0)
    goto LABEL_19;
LABEL_7:
  v27 = (uint64_t)v56;
  v54(v56, *MEMORY[0x1E0CF0410], v4);
  v55((char *)v27, 0, 1, v4);
  v11 = v58;
  v28 = (uint64_t)&v58[*(int *)(v23 + 48)];
  sub_1D25B2CA8(v57, (uint64_t)v58);
  sub_1D25B2CA8(v27, v28);
  if (v26((uint64_t)v11, 1, v4) != 1)
  {
    v29 = v50;
    sub_1D25B2CA8((uint64_t)v11, v50);
    if (v26(v28, 1, v4) != 1)
    {
      v37 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v52, v28, v4);
      sub_1D25946D4();
      v38 = sub_1D26CD908();
      v39 = *(void (**)(char *, uint64_t))(v5 + 8);
      v39(v37, v4);
      sub_1D253703C(v27, &qword_1ED96FC90);
      v39((char *)v29, v4);
      sub_1D253703C((uint64_t)v11, &qword_1ED96FC90);
      if ((v38 & 1) != 0)
        goto LABEL_19;
LABEL_13:
      v30 = *v51;
      if (*v51 < 0 || (v30 & 0x4000000000000000) != 0)
      {
        v48 = swift_bridgeObjectRetain();
        v31 = (uint64_t)sub_1D2591220(v48);
        swift_bridgeObjectRelease();
      }
      else
      {
        v31 = v30 & 0xFFFFFFFFFFFFFF8;
        swift_bridgeObjectRetain();
      }
      goto LABEL_25;
    }
    sub_1D253703C(v27, &qword_1ED96FC90);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v29, v4);
LABEL_12:
    sub_1D253703C((uint64_t)v11, &qword_1ED962060);
    goto LABEL_13;
  }
  sub_1D253703C(v27, &qword_1ED96FC90);
  if (v26(v28, 1, v4) != 1)
    goto LABEL_12;
LABEL_9:
  sub_1D253703C((uint64_t)v11, &qword_1ED96FC90);
LABEL_19:
  if (qword_1EFC821C8 != -1)
    swift_once();
  v40 = sub_1D26CC09C();
  __swift_project_value_buffer(v40, (uint64_t)qword_1EFC8AAC8);
  v41 = v53;
  swift_retain_n();
  v42 = sub_1D26CC084();
  v43 = sub_1D26CDCE0();
  if (os_log_type_enabled(v42, v43))
  {
    v44 = (uint8_t *)swift_slowAlloc();
    v45 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v44 = 138412290;
    v46 = *(void **)(v41 + 16);
    v60 = v46;
    v47 = v46;
    sub_1D26CDF50();
    *v45 = v46;
    swift_release_n();
    _os_log_impl(&dword_1D2531000, v42, v43, "Filtering %@: classA/B Widgets not supported", v44, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v45, -1, -1);
    MEMORY[0x1D823A5E0](v44, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  v31 = MEMORY[0x1E0DEE9D8];
LABEL_25:
  *v59 = v31;
}

uint64_t sub_1D25B45F4()
{
  return type metadata accessor for RemoteWidgetExtensionSession();
}

uint64_t type metadata accessor for RemoteWidgetExtensionSession()
{
  uint64_t result;

  result = qword_1EFC82BB8;
  if (!qword_1EFC82BB8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D25B4638()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D26CBA24();
  if (v0 <= 0x3F)
  {
    sub_1D25B46FC();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for RemoteWidgetExtensionSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteWidgetExtensionSession.__allocating_init(identifier:extensionIdentity:dataProtectionLevel:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_1D25B46FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED962058)
  {
    sub_1D26CD488();
    v0 = sub_1D26CDF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED962058);
  }
}

void sub_1D25B4750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1D25B3FD0((uint64_t *)(v4 + 16), a1, &v6);
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  sub_1D2539514(0, (unint64_t *)&unk_1ED96E0F8);
  v5 = (id)sub_1D26CDADC();
  (*(void (**)(uint64_t, id, _QWORD))(a2 + 16))(a2, v5, 0);
  swift_bridgeObjectRelease();

}

void sub_1D25B4834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  id v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC9ChronoKit28RemoteWidgetExtensionSession_protectedDescriptors);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v4 + 24));
  sub_1D25B3FD0((uint64_t *)(v4 + 16), a1, &v6);
  sub_1D26CD518();
  os_unfair_lock_unlock((os_unfair_lock_t)(v4 + 24));
  swift_release();
  v5 = (id)sub_1D26CD4E8();
  (*(void (**)(uint64_t, id, _QWORD))(a2 + 16))(a2, v5, 0);

}

BOOL static ReloadState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ReloadState.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D25B4964 + 4 * byte_1D26D4638[*v0]))(0x64616F6C6572, 0xE600000000000000);
}

uint64_t sub_1D25B4964()
{
  return 0x6E61656C63;
}

uint64_t sub_1D25B4978()
{
  return 0x64656C696166;
}

uint64_t sub_1D25B4988()
{
  return 0x64656B636F6C62;
}

uint64_t sub_1D25B49A0()
{
  return 0x646573756170;
}

BOOL ReloadState.isBlocked.getter()
{
  unsigned __int8 *v0;

  return *v0 == 3;
}

uint64_t ReloadState.hash(into:)()
{
  return sub_1D26CE46C();
}

uint64_t ReloadState.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

unint64_t sub_1D25B4A30()
{
  unint64_t result;

  result = qword_1EFC82BC8;
  if (!qword_1EFC82BC8)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for ReloadState, &type metadata for ReloadState);
    atomic_store(result, (unint64_t *)&qword_1EFC82BC8);
  }
  return result;
}

uint64_t sub_1D25B4A74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D25B4AA0 + 4 * byte_1D26D463D[*v0]))(0x64616F6C6572, 0xE600000000000000);
}

uint64_t sub_1D25B4AA0()
{
  return 0x6E61656C63;
}

uint64_t sub_1D25B4AB4()
{
  return 0x64656C696166;
}

uint64_t sub_1D25B4AC4()
{
  return 0x64656B636F6C62;
}

uint64_t sub_1D25B4ADC()
{
  return 0x646573756170;
}

uint64_t storeEnumTagSinglePayload for ReloadState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1D25B4B38 + 4 * byte_1D26D4647[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1D25B4B6C + 4 * byte_1D26D4642[v4]))();
}

uint64_t sub_1D25B4B6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25B4B74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D25B4B7CLL);
  return result;
}

uint64_t sub_1D25B4B88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D25B4B90);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1D25B4B94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25B4B9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ReloadState()
{
  return &type metadata for ReloadState;
}

uint64_t ExtensionManaging.extensions(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v4 = sub_1D26CBC88();
  v5 = (*(uint64_t (**)(uint64_t))(a3 + 48))(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t dispatch thunk of ExtensionManaging.extensionsPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ExtensionManaging.extensions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ExtensionManaging.extension(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ExtensionManaging.extension(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ExtensionManaging.extensions(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of ExtensionManaging.addedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ExtensionManaging.updatedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ExtensionManaging.removedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t sub_1D25B4D50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = v3 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  v7 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v6, v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1D25B4DE8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2536488((unint64_t *)&unk_1ED96FC70, &qword_1ED96FC80, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t PlaceholderEnvironmentProviderAdapter.__allocating_init(sourceEnvironmentProvider:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE v5[40];

  v2 = swift_allocObject();
  sub_1D2538510(a1, (uint64_t)v5);
  type metadata accessor for _PlaceholderEnvironmentProviderAdapter();
  v3 = swift_allocObject();
  sub_1D25B504C((uint64_t)v5);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(_QWORD *)(v2 + 16) = v3;
  return v2;
}

uint64_t PlaceholderEnvironmentProviderAdapter.init(sourceEnvironmentProvider:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[40];

  v2 = v1;
  sub_1D2538510(a1, (uint64_t)v6);
  type metadata accessor for _PlaceholderEnvironmentProviderAdapter();
  v4 = swift_allocObject();
  sub_1D25B504C((uint64_t)v6);
  __swift_destroy_boxed_opaque_existential_1(a1);
  *(_QWORD *)(v2 + 16) = v4;
  return v2;
}

uint64_t type metadata accessor for _PlaceholderEnvironmentProviderAdapter()
{
  uint64_t result;

  result = qword_1ED962830;
  if (!qword_1ED962830)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t PlaceholderEnvironmentProviderAdapter.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t PlaceholderEnvironmentProviderAdapter.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D25B4FB8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25B4D50(a1);
}

uint64_t sub_1D25B4FD8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2536488((unint64_t *)&unk_1ED96FC70, &qword_1ED96FC80, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t sub_1D25B504C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__cancellable) = 0;
  sub_1D2538510(a1, v1 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_1D26CC150();
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *v5 = 0;
  *(_QWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v2 + 24) = v4;
  sub_1D26CC798();
  v6 = swift_retain();
  sub_1D26A59AC(v6, v2);
  v7 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider
                 + 24);
  v8 = *(_QWORD *)(v2
                 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider
                 + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider), v7);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v7, v8);
  v9 = swift_allocObject();
  swift_weakInit();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = sub_1D25B5828;
  *(_QWORD *)(v10 + 24) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B230);
  sub_1D2536488((unint64_t *)&qword_1ED96B228, &qword_1ED96B230, MEMORY[0x1E0C95D90]);
  v11 = sub_1D26CC288();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__cancellable) = v11;
  swift_release();
  return v2;
}

uint64_t type metadata accessor for PlaceholderEnvironmentProviderAdapter()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlaceholderEnvironmentProviderAdapter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlaceholderEnvironmentProviderAdapter.environmentValues.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of PlaceholderEnvironmentProviderAdapter.environmentDidChange.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of PlaceholderEnvironmentProviderAdapter.__allocating_init(sourceEnvironmentProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1D25B5254()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t result;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  char v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v0 = sub_1D26CD1DC();
  v44 = *(_QWORD *)(v0 - 8);
  v1 = MEMORY[0x1E0C80A78](v0);
  v43 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v42 = (char *)&v40 - v3;
  v4 = sub_1D26CC438();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v40 - v9;
  v11 = sub_1D26CC7A4();
  v45 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v40 - v15;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v18 = result;
    v40 = v0;
    v41 = v11;
    v19 = (_QWORD *)(result
                   + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider);
    v21 = v19[3];
    v20 = v19[4];
    __swift_project_boxed_opaque_existential_0(v19, v21);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v21, v20);
    sub_1D26CC4F8();
    v22 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008];
    sub_1D25369B0((unint64_t *)&qword_1ED96C308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA028]);
    sub_1D26CDFD4();
    sub_1D25369B0(&qword_1ED9627F0, v22, MEMORY[0x1E0CDA020]);
    v23 = sub_1D26CD908();
    v24 = *(void (**)(char *, uint64_t))(v5 + 8);
    v24(v8, v4);
    v24(v10, v4);
    if ((v23 & 1) == 0)
    {
      v46 = MEMORY[0x1E0DEE9D8];
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
      sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
      sub_1D26CDFE0();
      sub_1D26CC504();
    }
    v25 = v45;
    v26 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
    v27 = v41;
    v26(v14, v16, v41);
    v28 = v42;
    sub_1D26CD1B8();
    v29 = *(_QWORD *)(v18 + 24);
    v30 = *(os_unfair_lock_s **)(v29 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v30);
    v31 = v18 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
    swift_beginAccess();
    v26(v14, (char *)v31, v27);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
    swift_release();
    swift_release();
    v32 = v43;
    sub_1D26CD1B8();
    sub_1D25369B0(&qword_1ED963830, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFC58], MEMORY[0x1E0CEFC78]);
    v33 = v40;
    LOBYTE(v29) = sub_1D26CD908();
    v34 = *(void (**)(char *, uint64_t))(v44 + 8);
    v34(v32, v33);
    v34(v28, v33);
    if ((v29 & 1) != 0)
    {
      if (qword_1ED9633D0 != -1)
        swift_once();
      v35 = sub_1D26CC09C();
      __swift_project_value_buffer(v35, (uint64_t)qword_1ED977E60);
      v36 = sub_1D26CC084();
      v37 = sub_1D26CDD04();
      if (os_log_type_enabled(v36, v37))
      {
        v38 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v38 = 0;
        _os_log_impl(&dword_1D2531000, v36, v37, "Placeholder environment ignoring redaction reason change.", v38, 2u);
        MEMORY[0x1D823A5E0](v38, -1, -1);
      }
      swift_release();

    }
    else
    {
      v39 = swift_retain();
      sub_1D26A59AC(v39, v18);
      swift_release_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v16, v27);
  }
  return result;
}

uint64_t sub_1D25B56E0()
{
  uint64_t v0;

  swift_release();
  return __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider);
}

uint64_t sub_1D25B570C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__cancellable))
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  swift_release();
  swift_release();
  v2 = v0 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  v3 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v1 + OBJC_IVAR____TtC9ChronoKit38_PlaceholderEnvironmentProviderAdapter__sourceEnvironmentProvider);
  return swift_deallocClassInstance();
}

uint64_t sub_1D25B57B4()
{
  return type metadata accessor for _PlaceholderEnvironmentProviderAdapter();
}

uint64_t sub_1D25B57BC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1D25B5804()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D25B5828()
{
  return sub_1D25B5254();
}

uint64_t sub_1D25B5830()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25B5854(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25FA810(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1D25B585C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x1E0C80A78](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_1D26CDC50();
  if (!v18)
    return sub_1D26CDB3C();
  v19 = v18;
  v25 = v15;
  v39 = sub_1D26CD7D0();
  v32 = sub_1D26CE178();
  sub_1D26CE130();
  v36 = v17;
  result = sub_1D26CDC44();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_1D26CDC98();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_1D26CE160();
      sub_1D26CDC74();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t BaseCacheManager.init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, __int128 *a5, uint64_t a6, char a7)
{
  uint64_t v7;

  *(_BYTE *)(v7 + 160) = a7 ^ 1;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a2;
  sub_1D2538F38(a3, v7 + 40);
  sub_1D2538F38(a4, v7 + 80);
  sub_1D2538F38(a5, v7 + 120);
  *(_QWORD *)(v7 + 16) = a6;
  return v7;
}

uint64_t BaseCacheManager.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  __swift_destroy_boxed_opaque_existential_1(v0 + 80);
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return v0;
}

id sub_1D25B5BD8()
{
  uint64_t v0;

  swift_beginAccess();
  return *(id *)(v0 + 16);
}

void sub_1D25B5C08(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  swift_beginAccess();
  v3 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;

}

uint64_t (*sub_1D25B5C4C())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1D25B5C88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + 40, a1);
}

uint64_t sub_1D25B5CA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + 80, a1);
}

uint64_t sub_1D25B5CC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_1D2538510(v1 + 120, a1);
}

uint64_t sub_1D25B5D08(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 120;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1D2538F38(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1D25B5D60())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25B5D9C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 160);
}

id sub_1D25B5DA4()
{
  uint64_t v0;
  id v1;

  v0 = sub_1D26CDBA8();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF38], v0);
  sub_1D26CDA64();
  sub_1D26CDB3C();
  v1 = sub_1D25B5E5C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v1;
}

id sub_1D25B5E5C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v1 = sub_1D26CDBA8();
  v2 = (char *)sub_1D26CB880();
  v3 = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF50], v1);
  v4 = MEMORY[0x1E0DEDCE8];
  v5 = MEMORY[0x1E0DEDD18];
  v7 = sub_1D25B585C((void (*)(char *, char *))sub_1D25BA848, v0, v1, v2, MEMORY[0x1E0DEDCE8], v3, MEMORY[0x1E0DEDD18], v6);
  v9 = sub_1D25B585C((void (*)(char *, char *))sub_1D25BA848, v0, v1, v2, v4, v3, v5, v8);
  v10 = (void *)(*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
  v11 = objc_allocWithZone((Class)type metadata accessor for WidgetReaper());
  v12 = sub_1D25BB4F0(v7, v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v12;
}

uint64_t sub_1D25B5F9C(uint64_t a1, uint64_t a2)
{
  _BYTE *v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  void *v17;
  void *v18;
  unsigned int v19;
  void *v20;
  id v21;
  uint64_t (*v22)(void);
  void *v23;
  uint64_t v24;
  __int128 v25;
  void *v26;
  void *v27;
  void *v28;
  unsigned __int8 v29;
  void (*v30)(char *, uint64_t);
  id v31;
  id v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t (*v35)(void);
  _OWORD v36[2];
  uint64_t v37;
  uint64_t v38;

  v4 = v2;
  v38 = *MEMORY[0x1E0C80C00];
  v7 = *(_QWORD *)v4;
  v8 = sub_1D26CB880();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v34 - v13;
  if (v4[160] != 1)
  {
    v24 = *(_QWORD *)(v7 + 112);
    v25 = *(_OWORD *)(v7 + 96);
    v36[0] = *(_OWORD *)(v7 + 80);
    v36[1] = v25;
    v37 = v24;
    type metadata accessor for BaseCacheManager.CacheManagementError();
  }
  result = sub_1D25B7A34(a2, (uint64_t)&v34 - v13);
  if (!v3)
  {
    v34 = a1;
    v16 = sub_1D26CB82C();
    v35 = *(uint64_t (**)(void))(*(_QWORD *)v4 + 168);
    v17 = (void *)((uint64_t (*)(uint64_t))v35)(v16);
    v18 = (void *)sub_1D26CB7D8();
    *(_QWORD *)&v36[0] = 0;
    v19 = objc_msgSend(v17, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v18, 1, 0, v36);

    v20 = *(void **)&v36[0];
    if (!v19)
      goto LABEL_8;
    v21 = *(id *)&v36[0];
    v22 = v35;
    v23 = (void *)((uint64_t (*)(id))v35)(v21);
    sub_1D25A7F10((uint64_t)v14);

    v26 = (void *)v22();
    v27 = (void *)sub_1D26CB7D8();
    v28 = (void *)sub_1D26CB7D8();
    *(_QWORD *)&v36[0] = 0;
    v29 = objc_msgSend(v26, sel_moveItemAtURL_toURL_error_, v27, v28, v36);

    v20 = *(void **)&v36[0];
    if ((v29 & 1) != 0)
    {
      v30 = *(void (**)(char *, uint64_t))(v9 + 8);
      v31 = *(id *)&v36[0];
      v30(v12, v8);
      return ((uint64_t (*)(char *, uint64_t))v30)(v14, v8);
    }
    else
    {
LABEL_8:
      v32 = v20;
      sub_1D26CB76C();

      swift_willThrow();
      v33 = *(void (**)(char *, uint64_t))(v9 + 8);
      v33(v12, v8);
      return ((uint64_t (*)(char *, uint64_t))v33)(v14, v8);
    }
  }
  return result;
}

uint64_t sub_1D25B6250(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  NSObject *v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t);
  int v53;
  void (*v54)(char *, uint64_t, uint64_t);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  v65 = a2;
  v5 = *v2;
  v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82BD0);
  v59 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v62 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = sub_1D26CBA24();
  v64 = *(_QWORD *)(v61 - 8);
  v7 = MEMORY[0x1E0C80A78](v61);
  v60 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v50 - v10;
  v12 = *(_QWORD *)(v5 + 80);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v9);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v50 - v17;
  v19 = sub_1D26CB880();
  v20 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((_BYTE *)v2 + 160) != 1)
  {
    v66 = v12;
    v67 = *(_OWORD *)(v5 + 88);
    v68 = *(_OWORD *)(v5 + 104);
    type metadata accessor for BaseCacheManager.CacheManagementError();
  }
  v57 = v21;
  v58 = v20;
  v24 = v23;
  result = sub_1D25B7A34(a1, (uint64_t)v23);
  if (!v3)
  {
    v55 = 0;
    v56 = v24;
    if (qword_1ED96C1C8 != -1)
      swift_once();
    v26 = sub_1D26CC09C();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED977F80);
    v52 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
    v52(v18, a1, v12);
    v27 = v64;
    v28 = v61;
    v54 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
    v54(v11, v65, v61);
    v29 = sub_1D26CC084();
    v30 = sub_1D26CDD04();
    v53 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      v31 = swift_slowAlloc();
      v51 = swift_slowAlloc();
      v66 = v51;
      *(_DWORD *)v31 = 136446466;
      v50 = v31 + 4;
      v52(v16, (uint64_t)v18, v12);
      v32 = *(void (**)(char *, uint64_t))(v13 + 8);
      v32(v18, v12);
      v33 = v29;
      v34 = sub_1D26CE370();
      v36 = v35;
      v32(v16, v12);
      v69 = sub_1D2537880(v34, v36, &v66);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v37 = sub_1D26CE370();
      v69 = sub_1D2537880(v37, v38, &v66);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v11, v28);
      _os_log_impl(&dword_1D2531000, v33, (os_log_type_t)v53, "%{public}s marked with version %{public}s", (uint8_t *)v31, 0x16u);
      v39 = v51;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v39, -1, -1);
      MEMORY[0x1D823A5E0](v31, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v28);

    }
    v54(v60, v65, v28);
    v40 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1D25369B0(&qword_1EFC82600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1D25369B0(&qword_1ED963280, v40, MEMORY[0x1E0CB09B8]);
    v41 = v62;
    sub_1D26CBBF8();
    sub_1D26CB724();
    swift_allocObject();
    sub_1D26CB718();
    sub_1D26CB700();
    sub_1D2536488(&qword_1EFC82BD8, &qword_1EFC82BD0, MEMORY[0x1E0D0F6A0]);
    v42 = v63;
    v43 = v55;
    v44 = sub_1D26CB70C();
    if (v43)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v42);
      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v56, v58);
    }
    else
    {
      v46 = v44;
      v47 = v45;
      v48 = swift_release();
      MEMORY[0x1E0C80A78](v48);
      *(&v50 - 4) = v46;
      *(&v50 - 3) = v47;
      *(&v50 - 2) = 0xD00000000000001ALL;
      *(&v50 - 1) = 0x80000001D26E10F0;
      v49 = v56;
      sub_1D26CB844();
      sub_1D253EE04(v46, v47);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v42);
      return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v49, v58);
    }
  }
  return result;
}

uint64_t sub_1D25B6860(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  char *v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint8_t *v28;
  char *v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint8_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint8_t *v46;
  uint8_t *v47;
  int v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v3 = *v1;
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB70);
  v55 = *(_QWORD *)(v58 - 8);
  v4 = MEMORY[0x1E0C80A78](v58);
  v59 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *(_QWORD *)(v3 + 80);
  v57 = v3;
  v6 = *(_QWORD *)(v56 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v46 - v10;
  v12 = sub_1D26CB880();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v60;
  result = sub_1D25B7A34(a1, (uint64_t)v15);
  if (!v16)
  {
    v53 = (char *)a1;
    v54 = v11;
    v50 = v9;
    v51 = v13;
    v18 = v56;
    v60 = 0;
    v52 = v12;
    if (qword_1ED96C1C8 != -1)
      swift_once();
    v19 = sub_1D26CC09C();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED977F80);
    v20 = v6;
    v21 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
    v22 = v54;
    v23 = v18;
    v21(v54, v53, v18);
    v24 = sub_1D26CC084();
    v25 = sub_1D26CDD04();
    v26 = v25;
    if (os_log_type_enabled(v24, v25))
    {
      v27 = swift_slowAlloc();
      v48 = v26;
      v28 = (uint8_t *)v27;
      v49 = swift_slowAlloc();
      v62 = v49;
      v53 = v15;
      *(_DWORD *)v28 = 136446210;
      v46 = v28 + 4;
      v47 = v28;
      v29 = v50;
      v21(v50, v22, v23);
      v30 = *(void (**)(char *, uint64_t))(v20 + 8);
      v30(v22, v23);
      v31 = sub_1D26CE370();
      v33 = v32;
      v30(v29, v23);
      v61 = sub_1D2537880(v31, v33, &v62);
      v15 = v53;
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v34 = v47;
      _os_log_impl(&dword_1D2531000, v24, (os_log_type_t)v48, "%{public}s marked with having developer error", v47, 0xCu);
      v35 = v49;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v35, -1, -1);
      MEMORY[0x1D823A5E0](v34, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v23);
    }

    LOBYTE(v62) = 1;
    v36 = v59;
    sub_1D26CBBF8();
    sub_1D26CB724();
    swift_allocObject();
    sub_1D26CB718();
    sub_1D26CB700();
    sub_1D2536488(&qword_1ED96B0A0, &qword_1ED96FB70, MEMORY[0x1E0D0F6A0]);
    v37 = v58;
    v38 = v60;
    v39 = sub_1D26CB70C();
    if (v38)
    {
      swift_release();
      v45 = v51;
      v44 = v52;
      (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v15, v44);
    }
    else
    {
      v41 = v39;
      v42 = v40;
      v43 = swift_release();
      MEMORY[0x1E0C80A78](v43);
      *(&v46 - 4) = (uint8_t *)v41;
      *(&v46 - 3) = (uint8_t *)v42;
      *(&v46 - 2) = (uint8_t *)0xD000000000000021;
      *(&v46 - 1) = (uint8_t *)0x80000001D26E1110;
      sub_1D26CB844();
      sub_1D253EE04(v41, v42);
      (*(void (**)(char *, uint64_t))(v55 + 8))(v36, v37);
      return (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v15, v52);
    }
  }
  return result;
}

uint64_t sub_1D25B6CFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB70);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CB880();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D25B7A34(a1, (uint64_t)v10);
  if (!v1)
  {
    MEMORY[0x1E0C80A78](v11);
    *(&v15 - 2) = 0xD000000000000021;
    *(&v15 - 1) = 0x80000001D26E1110;
    sub_1D26CB844();
    v13 = v18;
    v19 = v17;
    sub_1D26CB6F4();
    swift_allocObject();
    sub_1D26CB6E8();
    sub_1D2536488((unint64_t *)&qword_1ED96E7E8, &qword_1ED96FB70, MEMORY[0x1E0D0F6A8]);
    v16 = v13;
    sub_1D26CB6DC();
    swift_release();
    sub_1D253EE04(v19, v16);
    sub_1D26CBC04();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v12 = v17;
  }
  return v12 & 1;
}

uint64_t sub_1D25B6F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t result;
  unint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;

  v25 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82BD0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CB880();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1D25B7A34(a1, (uint64_t)v11);
  if (!v2)
  {
    v21 = v7;
    v22 = v9;
    v20 = v5;
    MEMORY[0x1E0C80A78](result);
    *(&v19 - 2) = 0xD00000000000001ALL;
    *(&v19 - 1) = 0x80000001D26E10F0;
    sub_1D26CB844();
    v14 = v23;
    v13 = v24;
    sub_1D26CB6F4();
    swift_allocObject();
    sub_1D26CB6E8();
    sub_1D2536488(&qword_1EFC82BE0, &qword_1EFC82BD0, MEMORY[0x1E0D0F6A8]);
    v15 = v21;
    v16 = v4;
    sub_1D26CB6DC();
    swift_release();
    sub_1D253EE04(v14, v13);
    v17 = v25;
    sub_1D26CBC04();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v16);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v11, v8);
    v18 = sub_1D26CBA24();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  return result;
}

uint64_t sub_1D25B7178(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  int v26;
  uint64_t v27;
  uint8_t *v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  os_log_t v33;
  uint8_t *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint8_t *v42;
  int v43;
  uint64_t v44;
  os_log_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v3 = *v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FB70);
  v48 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v50 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v3 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v5);
  v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v41 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CB880();
  v18 = *(_QWORD *)(v17 - 8);
  result = MEMORY[0x1E0C80A78](v17);
  if (*((_BYTE *)v1 + 160) == 1)
  {
    v46 = v4;
    v47 = (char *)v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    v49 = result;
    sub_1D25B7A34(a1, (uint64_t)v16);
    v21 = v49;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v16, 0, 1, v49);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v21) == 1)
    {
      return sub_1D253703C((uint64_t)v16, (uint64_t *)&unk_1ED96FC50);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v47, v16, v21);
      if (qword_1ED96C1C8 != -1)
        swift_once();
      v22 = sub_1D26CC09C();
      __swift_project_value_buffer(v22, (uint64_t)qword_1ED977F80);
      v23 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
      v23(v13, a1, v7);
      v24 = sub_1D26CC084();
      v25 = sub_1D26CDD04();
      v26 = v25;
      if (os_log_type_enabled(v24, v25))
      {
        v45 = v24;
        v27 = swift_slowAlloc();
        v43 = v26;
        v28 = (uint8_t *)v27;
        v44 = swift_slowAlloc();
        v52 = v44;
        v42 = v28;
        *(_DWORD *)v28 = 136446210;
        v41[1] = v28 + 4;
        v23(v11, (uint64_t)v13, v7);
        v29 = *(void (**)(char *, uint64_t))(v8 + 8);
        v29(v13, v7);
        v30 = sub_1D26CE370();
        v32 = v31;
        v29(v11, v7);
        v51 = sub_1D2537880(v30, v32, &v52);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        v33 = v45;
        v34 = v42;
        _os_log_impl(&dword_1D2531000, v45, (os_log_type_t)v43, "%{public}s marked as requiring reload", v42, 0xCu);
        v35 = v44;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v35, -1, -1);
        MEMORY[0x1D823A5E0](v34, -1, -1);

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);

      }
      LOBYTE(v52) = 1;
      v36 = v50;
      sub_1D26CBBF8();
      sub_1D26CB724();
      swift_allocObject();
      sub_1D26CB718();
      sub_1D26CB700();
      sub_1D2536488(&qword_1ED96B0A0, &qword_1ED96FB70, MEMORY[0x1E0D0F6A0]);
      v37 = sub_1D26CB70C();
      v39 = v38;
      v40 = swift_release();
      MEMORY[0x1E0C80A78](v40);
      v41[-4] = v37;
      v41[-3] = v39;
      v41[-2] = 0xD000000000000021;
      v41[-1] = 0x80000001D26DF380;
      sub_1D26CB844();
      sub_1D253EE04(v37, v39);
      (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v46);
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v47, v49);
    }
  }
  return result;
}

id sub_1D25B7678(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v13[5];

  v13[4] = *(_QWORD *)v1;
  v3 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v3);
  v4 = sub_1D26CB880();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D25B7A34(a1, (uint64_t)v7);
  v9 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v1 + 168))(v8);
  sub_1D26CB85C();
  v10 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

uint64_t sub_1D25B7A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[3];
  uint64_t v29;
  uint64_t v30;

  v27 = a2;
  v4 = *(_QWORD **)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v6 = sub_1D26CDF38();
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - v8;
  v10 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2538510(v2 + 40, (uint64_t)v28);
  v14 = v29;
  v13 = v30;
  __swift_project_boxed_opaque_existential_0(v28, v29);
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 56);
  v26 = a1;
  v15(a1, v14, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
    v16 = v4[13];
    v17 = v4[10];
    (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v17, v16);
    v18 = v4[12];
    v19 = v4[14];
    v28[0] = v17;
    v28[1] = v5;
    v28[2] = v18;
    v29 = v16;
    v30 = v19;
    type metadata accessor for BaseCacheManager.CacheManagementError();
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  sub_1D2538510(v25 + 80, (uint64_t)v28);
  v20 = v29;
  v21 = v30;
  __swift_project_boxed_opaque_existential_0(v28, v29);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 24))(v12, v20, v21);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v5);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
}

char *sub_1D25B7C54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82898);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC828A0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v25 - v10;
  v12 = sub_1D26CB880();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = v33;
  v17 = sub_1D25B7A34(a1, (uint64_t)v15);
  if (!v16)
  {
    v25 = v11;
    v29 = v12;
    v30 = v4;
    v27 = v9;
    v28 = v13;
    v33 = v6;
    MEMORY[0x1E0C80A78](v17);
    *(&v25 - 2) = v18;
    *(&v25 - 1) = (char *)0x80000001D26E1140;
    sub_1D26CB844();
    v26 = v15;
    v19 = v31;
    v20 = v32;
    sub_1D26CB6F4();
    swift_allocObject();
    sub_1D26CB6E8();
    sub_1D2536488(&qword_1EFC828A8, &qword_1EFC828A0, MEMORY[0x1E0D0F6A8]);
    v21 = v30;
    sub_1D26CB6DC();
    v22 = v33;
    swift_release();
    sub_1D253EE04(v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v21, 0, 1, v5);
    v23 = v25;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v25, v21, v5);
    sub_1D26CBC04();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v23, v5);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v29);
    return (char *)v31;
  }
  return v15;
}

uint64_t sub_1D25B8128(id *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  void (**v29)(void);
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  unsigned __int8 v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char *v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  _QWORD *v80;
  _BYTE *v81;
  id v82;
  void *v83;
  char v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  _BYTE *v101;
  uint64_t v102;
  char v103;
  id v104[7];

  v104[5] = *(id *)MEMORY[0x1E0C80C00];
  v4 = type metadata accessor for WidgetEntryKey();
  v5 = MEMORY[0x1E0C80A78](v4);
  v88 = (uint64_t)&v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v98 = (char *)&v86 - v8;
  MEMORY[0x1E0C80A78](v7);
  v89 = (uint64_t)&v86 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED96FBD0);
  MEMORY[0x1E0C80A78](v10);
  v96 = (char *)&v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v94 = sub_1D26CB574();
  v99 = *(_QWORD *)(v94 - 8);
  MEMORY[0x1E0C80A78](v94);
  v100 = (uint64_t *)((char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v90 = sub_1D26CD488();
  v13 = *(_QWORD *)(v90 - 8);
  MEMORY[0x1E0C80A78](v90);
  v93 = (char *)&v86 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D26CB880();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v91 = (char *)&v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v86 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v22 = MEMORY[0x1E0C80A78](v21);
  v92 = (uint64_t)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v86 - v24;
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v26((char *)&v86 - v24, 1, 1, v15);
  v27 = v97;
  sub_1D257E504(a1, (uint64_t)v20);
  v101 = a2;
  v95 = v16;
  if (v27)
  {
    v32 = (uint64_t)v98;
    v33 = v99;
    v34 = v100;
    v35 = (uint64_t)v96;
    if (v101[160] == 1)
    {
      v104[0] = v27;
      v36 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
      v37 = v94;
      v38 = swift_dynamicCast();
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
      if (v38)
      {
        v39(v35, 0, 1, v37);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v33 + 32))(v34, v35, v37);
        v40 = sub_1D25BA0DC();
        v41 = v95;
        if (v40)
        {
          if (qword_1EFC821F0 != -1)
            swift_once();
          v42 = sub_1D26CC09C();
          __swift_project_value_buffer(v42, (uint64_t)qword_1EFC8AB10);
          v43 = v89;
          sub_1D2534120((uint64_t)a1, v89, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
          v44 = sub_1D26CC084();
          v45 = sub_1D26CDD04();
          if (os_log_type_enabled(v44, v45))
          {
            v46 = (uint8_t *)swift_slowAlloc();
            v47 = (void *)swift_slowAlloc();
            v104[0] = v47;
            v97 = v25;
            v98 = v27;
            *(_DWORD *)v46 = 136446210;
            v101 = v46 + 4;
            sub_1D2534120(v43, v32, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            sub_1D25340E4(v43, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            v48 = WidgetEntryKey.description.getter();
            v50 = v49;
            sub_1D25340E4(v32, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            v102 = sub_1D2537880(v48, v50, (uint64_t *)v104);
            v25 = v97;
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D2531000, v44, v45, "Not removing item for key %{public}s because of keybag", v46, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v47, -1, -1);
            MEMORY[0x1D823A5E0](v46, -1, -1);

            (*(void (**)(_QWORD *, uint64_t))(v99 + 8))(v100, v94);
          }
          else
          {
            sub_1D25340E4(v43, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

            (*(void (**)(_QWORD *, uint64_t))(v33 + 8))(v100, v37);
          }
          goto LABEL_26;
        }
        (*(void (**)(_QWORD *, uint64_t))(v33 + 8))(v34, v37);
      }
      else
      {
        v39(v35, 1, 1, v37);
        sub_1D253703C(v35, qword_1ED96FBD0);
        v41 = v95;
      }
      v56 = v92;
      sub_1D2537078((uint64_t)v25, v92, (uint64_t *)&unk_1ED96FC50);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v56, 1, v15) == 1)
      {
        sub_1D253703C(v56, (uint64_t *)&unk_1ED96FC50);
      }
      else
      {
        v57 = (uint64_t)a1;
        v98 = v27;
        v58 = v91;
        v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 32))(v91, v56, v15);
        v60 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v101 + 168))(v59);
        v61 = (void *)sub_1D26CB7D8();
        v104[0] = 0;
        v62 = objc_msgSend(v60, sel_removeItemAtURL_error_, v61, v104);

        if ((v62 & 1) != 0)
        {
          v97 = v25;
          v63 = qword_1ED96C1C8;
          v64 = v104[0];
          if (v63 != -1)
            swift_once();
          v65 = sub_1D26CC09C();
          __swift_project_value_buffer(v65, (uint64_t)qword_1ED977F80);
          v66 = v88;
          sub_1D2534120(v57, v88, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
          v67 = v98;
          v68 = v98;
          v69 = v67;
          v70 = sub_1D26CC084();
          v71 = sub_1D26CDD04();
          if (os_log_type_enabled(v70, v71))
          {
            v72 = swift_slowAlloc();
            v87 = v15;
            v73 = v72;
            v100 = (_QWORD *)swift_slowAlloc();
            v101 = (_BYTE *)swift_slowAlloc();
            v104[0] = v101;
            *(_DWORD *)v73 = 136446466;
            sub_1D2534120(v66, v32, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            sub_1D25340E4(v66, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            v74 = WidgetEntryKey.description.getter();
            v76 = v75;
            sub_1D25340E4(v32, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
            v102 = sub_1D2537880(v74, v76, (uint64_t *)v104);
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            *(_WORD *)(v73 + 12) = 2112;
            v77 = v98;
            v78 = _swift_stdlib_bridgeErrorToNSError();
            v102 = v78;
            v79 = v98;
            sub_1D26CDF50();
            v80 = v100;
            *v100 = v78;

            _os_log_impl(&dword_1D2531000, v70, v71, "Removing item for key %{public}s because  %@", (uint8_t *)v73, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v80, -1, -1);
            v81 = v101;
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v81, -1, -1);
            MEMORY[0x1D823A5E0](v73, -1, -1);

            (*(void (**)(char *, uint64_t))(v95 + 8))(v91, v87);
          }
          else
          {
            sub_1D25340E4(v66, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

            (*(void (**)(char *, uint64_t))(v41 + 8))(v91, v15);
          }
          v25 = v97;
        }
        else
        {
          v82 = v104[0];
          v83 = (void *)sub_1D26CB76C();

          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v58, v15);
        }
      }
    }
LABEL_26:
    swift_willThrow();
    sub_1D253703C((uint64_t)v25, (uint64_t *)&unk_1ED96FC50);
    return v84 & 1;
  }
  v86 = v13;
  sub_1D253703C((uint64_t)v25, (uint64_t *)&unk_1ED96FC50);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v20, v15);
  v97 = v25;
  v26(v25, 0, 1, v15);
  v28 = (uint64_t)(v101 + 120);
  swift_beginAccess();
  sub_1D2538510(v28, (uint64_t)v104);
  v87 = v15;
  v29 = (void (**)(void))v104[4];
  __swift_project_boxed_opaque_existential_0(v104, (uint64_t)v104[3]);
  v30 = objc_msgSend(*a1, sel_extensionIdentity);
  v31 = v93;
  v29[2]();
  v51 = v87;

  v52 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v104);
  if ((v101[160] & 1) != 0)
  {
    v53 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v101 + 168))(v52);
    sub_1D25BA864((uint64_t)v20, v53);

  }
  sub_1D257C9C8(&v103);
  v54 = (uint64_t)v97;
  v55 = v95;
  (*(void (**)(char *, uint64_t))(v86 + 8))(v31, v90);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v51);
  sub_1D253703C(v54, (uint64_t *)&unk_1ED96FC50);
  v84 = v103;
  return v84 & 1;
}

uint64_t sub_1D25B8BE0(id *a1, _BYTE *a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  _BYTE *v29;
  uint8_t *v30;
  void (**v31)(void);
  id v32;
  char *v33;
  _QWORD *v34;
  char *v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint8_t *v45;
  void *v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint8_t *v50;
  void *v51;
  uint64_t v52;
  uint8_t *v53;
  void *v54;
  uint64_t v55;
  void *v56;
  _BYTE *v57;
  char *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  void *v62;
  unsigned __int8 v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  id v77;
  uint64_t v78;
  uint8_t *v79;
  void *v80;
  id v81;
  void *v82;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint8_t *v93;
  void *v94;
  _QWORD *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  id v100[7];

  v100[5] = *(id *)MEMORY[0x1E0C80C00];
  v5 = type metadata accessor for ControlEntryKey();
  v6 = MEMORY[0x1E0C80A78](v5);
  v85 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v96 = (uint64_t)&v84 - v9;
  MEMORY[0x1E0C80A78](v8);
  v86 = (uint64_t)&v84 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED96FBD0);
  MEMORY[0x1E0C80A78](v11);
  v91 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = sub_1D26CB574();
  v95 = *(_QWORD **)(v92 - 8);
  MEMORY[0x1E0C80A78](v92);
  v97 = (char *)&v84 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v87 = sub_1D26CD488();
  v14 = *(_QWORD *)(v87 - 8);
  MEMORY[0x1E0C80A78](v87);
  v90 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D26CB880();
  v17 = *(char **)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v88 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (uint8_t *)&v84 - v20;
  v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v23 = MEMORY[0x1E0C80A78](v22);
  v89 = (uint64_t)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v26 = (char *)&v84 - v25;
  v27 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v17 + 7);
  v27((char *)&v84 - v25, 1, 1, v16);
  v93 = v21;
  sub_1D257E538(a1, (uint64_t)v21);
  v98 = v26;
  v94 = (void *)v16;
  if (v2)
  {
    v28 = v96;
    v29 = a2;
    v30 = (uint8_t *)a1;
    v34 = v95;
    v35 = v97;
    if (v29[160] == 1)
    {
      v93 = v30;
      v100[0] = v2;
      v36 = v2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
      v38 = (uint64_t)v91;
      v37 = v92;
      v39 = swift_dynamicCast();
      v40 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v34[7];
      if (v39)
      {
        v40(v38, 0, 1, v37);
        ((void (*)(char *, uint64_t, uint64_t))v34[4])(v35, v38, v37);
        if (sub_1D25BA0DC())
        {
          if (qword_1EFC821F0 != -1)
            swift_once();
          v41 = sub_1D26CC09C();
          __swift_project_value_buffer(v41, (uint64_t)qword_1EFC8AB10);
          v42 = v86;
          sub_1D2534120((uint64_t)v93, v86, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
          v43 = sub_1D26CC084();
          v44 = sub_1D26CDD04();
          if (os_log_type_enabled(v43, v44))
          {
            v45 = (uint8_t *)swift_slowAlloc();
            v46 = (void *)swift_slowAlloc();
            v100[0] = v46;
            v93 = v45;
            v94 = v2;
            *(_DWORD *)v45 = 136446210;
            v91 = (char *)(v45 + 4);
            sub_1D2534120(v42, v28, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            sub_1D25340E4(v42, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            v47 = ControlEntryKey.description.getter();
            v49 = v48;
            sub_1D25340E4(v28, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            v99 = sub_1D2537880(v47, v49, (uint64_t *)v100);
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            v50 = v93;
            _os_log_impl(&dword_1D2531000, v43, v44, "Not removing item for key %{public}s because of keybag", v93, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v46, -1, -1);
            MEMORY[0x1D823A5E0](v50, -1, -1);
          }
          else
          {
            sub_1D25340E4(v42, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
          }

          ((void (*)(char *, uint64_t))v34[1])(v97, v92);
          goto LABEL_28;
        }
        ((void (*)(char *, uint64_t))v34[1])(v35, v37);
      }
      else
      {
        v40(v38, 1, 1, v37);
        sub_1D253703C(v38, qword_1ED96FBD0);
      }
      v55 = v89;
      sub_1D2537078((uint64_t)v98, v89, (uint64_t *)&unk_1ED96FC50);
      v56 = v94;
      if ((*((unsigned int (**)(uint64_t, uint64_t, void *))v17 + 6))(v55, 1, v94) == 1)
      {
        sub_1D253703C(v55, (uint64_t *)&unk_1ED96FC50);
      }
      else
      {
        v57 = v29;
        v58 = v88;
        v59 = (*((uint64_t (**)(char *, uint64_t, void *))v17 + 4))(v88, v55, v56);
        v60 = v56;
        v61 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v57 + 168))(v59);
        v62 = (void *)sub_1D26CB7D8();
        v100[0] = 0;
        v63 = objc_msgSend(v61, sel_removeItemAtURL_error_, v62, v100);

        if ((v63 & 1) != 0)
        {
          v97 = v17;
          v64 = qword_1ED96C1C8;
          v65 = v100[0];
          if (v64 != -1)
            swift_once();
          v66 = sub_1D26CC09C();
          __swift_project_value_buffer(v66, (uint64_t)qword_1ED977F80);
          v67 = v85;
          sub_1D2534120((uint64_t)v93, v85, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
          v68 = v2;
          v69 = v2;
          v70 = sub_1D26CC084();
          v71 = sub_1D26CDD04();
          if (os_log_type_enabled(v70, v71))
          {
            v72 = swift_slowAlloc();
            v93 = (uint8_t *)swift_slowAlloc();
            v95 = (_QWORD *)swift_slowAlloc();
            v100[0] = v95;
            *(_DWORD *)v72 = 136446466;
            v73 = v96;
            sub_1D2534120(v67, v96, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            sub_1D25340E4(v67, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            v74 = ControlEntryKey.description.getter();
            v76 = v75;
            sub_1D25340E4(v73, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            v99 = sub_1D2537880(v74, v76, (uint64_t *)v100);
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            *(_WORD *)(v72 + 12) = 2112;
            v77 = v2;
            v78 = _swift_stdlib_bridgeErrorToNSError();
            v99 = v78;
            sub_1D26CDF50();
            v79 = v93;
            *(_QWORD *)v93 = v78;

            _os_log_impl(&dword_1D2531000, v70, v71, "Removing item for key %{public}s because  %@", (uint8_t *)v72, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v79, -1, -1);
            v80 = v95;
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v80, -1, -1);
            MEMORY[0x1D823A5E0](v72, -1, -1);

          }
          else
          {
            sub_1D25340E4(v67, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);

          }
          (*((void (**)(char *, void *))v97 + 1))(v88, v94);
        }
        else
        {
          v81 = v100[0];
          v82 = (void *)sub_1D26CB76C();

          swift_willThrow();
          (*((void (**)(char *, void *))v17 + 1))(v58, v60);
        }
      }
    }
LABEL_28:
    swift_willThrow();
    sub_1D253703C((uint64_t)v98, (uint64_t *)&unk_1ED96FC50);
    return 1;
  }
  v84 = v14;
  sub_1D253703C((uint64_t)v26, (uint64_t *)&unk_1ED96FC50);
  (*((void (**)(char *, uint8_t *, uint64_t))v17 + 2))(v26, v93, v16);
  v27(v26, 0, 1, v16);
  swift_beginAccess();
  sub_1D2538510((uint64_t)(a2 + 120), (uint64_t)v100);
  v31 = (void (**)(void))v100[4];
  __swift_project_boxed_opaque_existential_0(v100, (uint64_t)v100[3]);
  v32 = objc_msgSend(*a1, sel_extensionIdentity);
  v33 = v90;
  v31[2]();
  v51 = v94;

  v52 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v100);
  v53 = v93;
  if ((a2[160] & 1) != 0)
  {
    v54 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a2 + 168))(v52);
    sub_1D25BA864((uint64_t)v53, v54);

  }
  (*(void (**)(char *, uint64_t))(v84 + 8))(v33, v87);
  (*((void (**)(uint8_t *, void *))v17 + 1))(v53, v51);
  sub_1D253703C((uint64_t)v98, (uint64_t *)&unk_1ED96FC50);
  return 1;
}

uint64_t sub_1D25B9628(id *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  void (**v29)(void);
  id v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  NSObject *v44;
  os_log_type_t v45;
  uint8_t *v46;
  void *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  unsigned __int8 v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  char *v68;
  id v69;
  NSObject *v70;
  os_log_type_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  id v79;
  _QWORD *v80;
  _BYTE *v81;
  id v82;
  void *v83;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  _QWORD *v99;
  _BYTE *v100;
  uint64_t v101;
  uint64_t v102;
  id v103[7];

  v103[5] = *(id *)MEMORY[0x1E0C80C00];
  v4 = type metadata accessor for ControlEntryKey();
  v5 = MEMORY[0x1E0C80A78](v4);
  v87 = (uint64_t)&v85 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v97 = (char *)&v85 - v8;
  MEMORY[0x1E0C80A78](v7);
  v88 = (uint64_t)&v85 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED96FBD0);
  MEMORY[0x1E0C80A78](v10);
  v95 = (char *)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = sub_1D26CB574();
  v98 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v93);
  v99 = (uint64_t *)((char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v89 = sub_1D26CD488();
  v13 = *(_QWORD *)(v89 - 8);
  MEMORY[0x1E0C80A78](v89);
  v92 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D26CB880();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v90 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v85 - v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v22 = MEMORY[0x1E0C80A78](v21);
  v91 = (uint64_t)&v85 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v85 - v24;
  v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v26((char *)&v85 - v24, 1, 1, v15);
  v27 = v96;
  sub_1D257E538(a1, (uint64_t)v20);
  v100 = a2;
  v94 = v16;
  if (v27)
  {
    v32 = (uint64_t)v97;
    v33 = v98;
    v34 = v99;
    v35 = (uint64_t)v95;
    if (v100[160] == 1)
    {
      v103[0] = v27;
      v36 = v27;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
      v37 = v93;
      v38 = swift_dynamicCast();
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
      if (v38)
      {
        v39(v35, 0, 1, v37);
        (*(void (**)(_QWORD *, uint64_t, uint64_t))(v33 + 32))(v34, v35, v37);
        v40 = sub_1D25BA0DC();
        v41 = v94;
        if (v40)
        {
          if (qword_1EFC821F0 != -1)
            swift_once();
          v42 = sub_1D26CC09C();
          __swift_project_value_buffer(v42, (uint64_t)qword_1EFC8AB10);
          v43 = v88;
          sub_1D2534120((uint64_t)a1, v88, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
          v44 = sub_1D26CC084();
          v45 = sub_1D26CDD04();
          if (os_log_type_enabled(v44, v45))
          {
            v46 = (uint8_t *)swift_slowAlloc();
            v47 = (void *)swift_slowAlloc();
            v103[0] = v47;
            v96 = v25;
            v97 = v27;
            *(_DWORD *)v46 = 136446210;
            v100 = v46 + 4;
            sub_1D2534120(v43, v32, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            sub_1D25340E4(v43, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            v48 = ControlEntryKey.description.getter();
            v50 = v49;
            sub_1D25340E4(v32, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            v101 = sub_1D2537880(v48, v50, (uint64_t *)v103);
            v25 = v96;
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1D2531000, v44, v45, "Not removing item for key %{public}s because of keybag", v46, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v47, -1, -1);
            MEMORY[0x1D823A5E0](v46, -1, -1);

            (*(void (**)(_QWORD *, uint64_t))(v98 + 8))(v99, v93);
          }
          else
          {
            sub_1D25340E4(v43, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);

            (*(void (**)(_QWORD *, uint64_t))(v33 + 8))(v99, v37);
          }
          goto LABEL_26;
        }
        (*(void (**)(_QWORD *, uint64_t))(v33 + 8))(v34, v37);
      }
      else
      {
        v39(v35, 1, 1, v37);
        sub_1D253703C(v35, qword_1ED96FBD0);
        v41 = v94;
      }
      v56 = v91;
      sub_1D2537078((uint64_t)v25, v91, (uint64_t *)&unk_1ED96FC50);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v56, 1, v15) == 1)
      {
        sub_1D253703C(v56, (uint64_t *)&unk_1ED96FC50);
      }
      else
      {
        v57 = (uint64_t)a1;
        v97 = v27;
        v58 = v90;
        v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 32))(v90, v56, v15);
        v60 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v100 + 168))(v59);
        v61 = (void *)sub_1D26CB7D8();
        v103[0] = 0;
        v62 = objc_msgSend(v60, sel_removeItemAtURL_error_, v61, v103);

        if ((v62 & 1) != 0)
        {
          v96 = v25;
          v63 = qword_1ED96C1C8;
          v64 = v103[0];
          if (v63 != -1)
            swift_once();
          v65 = sub_1D26CC09C();
          __swift_project_value_buffer(v65, (uint64_t)qword_1ED977F80);
          v66 = v87;
          sub_1D2534120(v57, v87, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
          v67 = v97;
          v68 = v97;
          v69 = v67;
          v70 = sub_1D26CC084();
          v71 = sub_1D26CDD04();
          if (os_log_type_enabled(v70, v71))
          {
            v72 = swift_slowAlloc();
            v86 = v15;
            v73 = v72;
            v99 = (_QWORD *)swift_slowAlloc();
            v100 = (_BYTE *)swift_slowAlloc();
            v103[0] = v100;
            *(_DWORD *)v73 = 136446466;
            sub_1D2534120(v66, v32, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            sub_1D25340E4(v66, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            v74 = ControlEntryKey.description.getter();
            v76 = v75;
            sub_1D25340E4(v32, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);
            v101 = sub_1D2537880(v74, v76, (uint64_t *)v103);
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            *(_WORD *)(v73 + 12) = 2112;
            v77 = v97;
            v78 = _swift_stdlib_bridgeErrorToNSError();
            v101 = v78;
            v79 = v97;
            sub_1D26CDF50();
            v80 = v99;
            *v99 = v78;

            _os_log_impl(&dword_1D2531000, v70, v71, "Removing item for key %{public}s because  %@", (uint8_t *)v73, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v80, -1, -1);
            v81 = v100;
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v81, -1, -1);
            MEMORY[0x1D823A5E0](v73, -1, -1);

            (*(void (**)(char *, uint64_t))(v94 + 8))(v90, v86);
          }
          else
          {
            sub_1D25340E4(v66, (uint64_t (*)(_QWORD))type metadata accessor for ControlEntryKey);

            (*(void (**)(char *, uint64_t))(v41 + 8))(v90, v15);
          }
          v25 = v96;
        }
        else
        {
          v82 = v103[0];
          v83 = (void *)sub_1D26CB76C();

          swift_willThrow();
          (*(void (**)(char *, uint64_t))(v41 + 8))(v58, v15);
        }
      }
    }
LABEL_26:
    swift_willThrow();
    return sub_1D253703C((uint64_t)v25, (uint64_t *)&unk_1ED96FC50);
  }
  v85 = v13;
  sub_1D253703C((uint64_t)v25, (uint64_t *)&unk_1ED96FC50);
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v25, v20, v15);
  v96 = v25;
  v26(v25, 0, 1, v15);
  v28 = (uint64_t)(v100 + 120);
  swift_beginAccess();
  sub_1D2538510(v28, (uint64_t)v103);
  v86 = v15;
  v29 = (void (**)(void))v103[4];
  __swift_project_boxed_opaque_existential_0(v103, (uint64_t)v103[3]);
  v30 = objc_msgSend(*a1, sel_extensionIdentity);
  v31 = v92;
  v29[2]();
  v51 = v86;

  v52 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
  if ((v100[160] & 1) != 0)
  {
    v53 = (void *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)v100 + 168))(v52);
    sub_1D25BA864((uint64_t)v20, v53);

  }
  sub_1D26C1378(&v102);
  v54 = (uint64_t)v96;
  v55 = v94;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v31, v89);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v20, v51);
  sub_1D253703C(v54, (uint64_t *)&unk_1ED96FC50);
  return v102;
}

BOOL sub_1D25BA0DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  void (*v17)(char *, uint64_t, uint64_t);
  char *v18;
  _BOOL8 v19;
  _QWORD v21[2];
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v1 = sub_1D26CB574();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE48];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v22 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CB55C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE20];
  v7 = *(_QWORD *)(v5 - 8);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v21 - v11;
  v21[1] = sub_1D25369B0(&qword_1ED96B1A0, v2, MEMORY[0x1E0CADE40]);
  v13 = v0;
  sub_1D26CB73C();
  sub_1D26CB508();
  sub_1D25369B0(&qword_1ED96B198, v6, MEMORY[0x1E0CADE30]);
  sub_1D26CDAC4();
  sub_1D26CDAC4();
  v15 = v24;
  v14 = v25;
  v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v10, v5);
  v16(v12, v5);
  v23 = v3;
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v18 = v22;
  v17(v22, v13, v1);
  if (v14 == v15)
  {
    v19 = 1;
  }
  else
  {
    sub_1D26CB73C();
    sub_1D26CB514();
    sub_1D26CDAC4();
    sub_1D26CDAC4();
    v19 = v25 == v24;
    v16(v10, v5);
    v16(v12, v5);
  }
  (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v1);
  return v19;
}

unint64_t static FileAttributeNames.requiresReloadExtendedAttributeName.getter()
{
  return 0xD000000000000021;
}

unint64_t static FileAttributeNames.version.getter()
{
  return 0xD00000000000001ALL;
}

unint64_t static FileAttributeNames.developerError.getter()
{
  return 0xD000000000000021;
}

unint64_t static FileAttributeNames.sha256Hash.getter()
{
  return 0xD00000000000001DLL;
}

unint64_t static FileAttributeNames.buildVersion.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t FileAttributeNames.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FileAttributeNames.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t BaseCacheManager.__allocating_init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4, __int128 *a5, uint64_t a6, char a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  BaseCacheManager.init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)(a1, a2, a3, a4, a5, a6, a7);
  return v14;
}

uint64_t sub_1D25BA42C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_1D2538510(a2 + 40, (uint64_t)v6);
  v3 = v7;
  v4 = v8;
  __swift_project_boxed_opaque_existential_0(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1D25BA4B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25BA42C(a1, v1);
}

uint64_t sub_1D25BA4C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[3];
  uint64_t v7;
  uint64_t v8;

  sub_1D2538510(a2 + 80, (uint64_t)v6);
  v3 = v7;
  v4 = v8;
  __swift_project_boxed_opaque_existential_0(v6, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(a1, v3, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

void sub_1D25BA54C()
{
  sub_1D26CE1D8();
  __break(1u);
}

void sub_1D25BA594()
{
  sub_1D26CE1D8();
  __break(1u);
}

void sub_1D25BA5DC()
{
  sub_1D26CE1D8();
  __break(1u);
}

uint64_t BaseCacheManager.__deallocating_deinit()
{
  BaseCacheManager.deinit();
  return swift_deallocClassInstance();
}

id sub_1D25BA644()
{
  return sub_1D25B5DA4();
}

id sub_1D25BA664()
{
  return sub_1D25B5E5C();
}

uint64_t sub_1D25BA684@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25B5CC0(a1);
}

uint64_t sub_1D25BA6A4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 392))() & 1;
}

unint64_t sub_1D25BA6D0(uint64_t a1)
{
  return (unint64_t)sub_1D25B7678(a1) & 1;
}

uint64_t sub_1D25BA6F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 400))();
}

uint64_t sub_1D25BA71C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D25B7A34(a1, a2);
}

uint64_t sub_1D25BA73C(uint64_t a1)
{
  return sub_1D25B6CFC(a1) & 1;
}

uint64_t sub_1D25BA760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D25B6F1C(a1, a2);
}

char *sub_1D25BA780(uint64_t a1)
{
  return sub_1D25B7C54(a1);
}

uint64_t sub_1D25BA7A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 312))();
}

uint64_t sub_1D25BA7C8(uint64_t a1, uint64_t a2)
{
  return sub_1D25B6250(a1, a2);
}

uint64_t sub_1D25BA7E8(uint64_t a1)
{
  return sub_1D25B7178(a1);
}

uint64_t sub_1D25BA808(uint64_t a1)
{
  return sub_1D25B6860(a1);
}

uint64_t sub_1D25BA828(uint64_t a1, uint64_t a2)
{
  return sub_1D25B5F9C(a1, a2);
}

uint64_t sub_1D25BA848(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25BA4C8(a1, v1);
}

void sub_1D25BA864(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  void *v23;
  char *v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B098);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v28 - v11;
  v13 = sub_1D26CD488();
  v34 = *(_QWORD *)(v13 - 8);
  v35 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = 0xD00000000000002DLL;
  v37 = 0x80000001D26DF1A0;
  v16 = a2;
  sub_1D26CB844();
  v28 = (unint64_t)"se Closed <becauseError>=%@";
  v29 = v10;
  v30 = v15;
  v31 = a1;
  v32 = v16;
  v17 = v38;
  v18 = v39;
  sub_1D26CB6F4();
  swift_allocObject();
  sub_1D26CB6E8();
  sub_1D2536488(&qword_1EFC82C70, &qword_1ED96B098, MEMORY[0x1E0D0F6A8]);
  v19 = v33;
  sub_1D26CB6DC();
  swift_release();
  sub_1D253EE04(v17, v18);
  sub_1D26CBC04();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v4);
  v21 = v34;
  v20 = v35;
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v12, 1, v35);
  v23 = v32;
  if (v22 == 1)
  {
    sub_1D253703C((uint64_t)v12, &qword_1ED96FC90);
  }
  else
  {
    v24 = v30;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v30, v12, v20);
    v25 = (void *)sub_1D26CD464();
    v26 = v31;
    sub_1D25A7B78(v25);

    v27 = (uint64_t)v29;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v29, 1, 1, v20);
    sub_1D25BAD14(v26, 0xD00000000000002DLL, v28 | 0x8000000000000000, v27);
    sub_1D253703C(v27, &qword_1ED96FC90);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }

}

uint64_t sub_1D25BAB90(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 56);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3)
    v7 = 3;
  v8 = v7 - 3;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 128;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

int64_t sub_1D25BAC30(int64_t result, int a2, char a3, uint64_t a4)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  if ((a3 & 1) != 0)
    goto LABEL_20;
  v4 = result;
  if (result < 0 || (result = 1 << *(_BYTE *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  v5 = v4 >> 6;
  v6 = a4 + 56;
  v7 = *(_QWORD *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8)
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  v9 = v5 + 1;
  v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    v11 = *(_QWORD *)(v6 + 8 * v9);
    if (v11)
      return __clz(__rbit64(v11)) + (v9 << 6);
    v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      v11 = *(_QWORD *)(v6 + 8 * v9);
      if (v11)
        return __clz(__rbit64(v11)) + (v9 << 6);
      while (v10 - 3 != v5)
      {
        v11 = *(_QWORD *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1D25BAD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a3;
  v37 = a1;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82C78);
  v6 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1D26CD488();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v32 - v16;
  v19 = v18;
  sub_1D2537078(a4, (uint64_t)v11, &qword_1ED96FC90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 1, v12) == 1)
  {
    v20 = sub_1D253703C((uint64_t)v11, &qword_1ED96FC90);
    MEMORY[0x1E0C80A78](v20);
    v21 = v36;
    *(&v32 - 2) = a2;
    *(&v32 - 1) = v21;
    return sub_1D26CB844();
  }
  else
  {
    v33 = a2;
    v34 = v6;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v17, v11, v12);
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v15, v17, v12);
    v23 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430];
    sub_1D25369B0(&qword_1EFC82C80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0460]);
    sub_1D25369B0(&qword_1ED963848, v23, MEMORY[0x1E0CF0440]);
    sub_1D26CBBF8();
    sub_1D26CB724();
    swift_allocObject();
    sub_1D26CB718();
    sub_1D26CB700();
    sub_1D2536488(&qword_1EFC82C88, &qword_1EFC82C78, MEMORY[0x1E0D0F6A0]);
    v24 = v35;
    v25 = v38;
    v26 = sub_1D26CB70C();
    if (v25)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v17, v12);
    }
    else
    {
      v28 = v26;
      v29 = v27;
      v38 = v19;
      v30 = swift_release();
      MEMORY[0x1E0C80A78](v30);
      *(&v32 - 4) = v28;
      *(&v32 - 3) = v29;
      v31 = v36;
      *(&v32 - 2) = v33;
      *(&v32 - 1) = v31;
      sub_1D26CB844();
      sub_1D253EE04(v28, v29);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v17, v12);
    }
  }
}

uint64_t sub_1D25BB080(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  unsigned int (*v48)(char *, uint64_t, uint64_t);
  void (*v49)(char *, unint64_t, uint64_t);
  void (*v50)(char *, uint64_t, uint64_t, uint64_t);
  char *v51;
  uint64_t v52;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v34 - v8;
  v41 = sub_1D26CB880();
  v10 = *(_QWORD *)(v41 - 8);
  v11 = MEMORY[0x1E0C80A78](v41);
  v35 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v36 = (char *)&v34 - v14;
  result = MEMORY[0x1E0C80A78](v13);
  v51 = (char *)&v34 - v16;
  v52 = MEMORY[0x1E0DEE9D8];
  v39 = *(_QWORD *)(a1 + 16);
  if (v39)
  {
    v17 = 0;
    v40 = a2;
    v37 = v9;
    v38 = a1;
    v44 = v7;
    v18 = v41;
    v19 = v36;
    while (v17 < *(_QWORD *)(a1 + 16))
    {
      v42 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      v43 = v17;
      v46 = *(_QWORD *)(v10 + 72);
      v49 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      v49(v9, a1 + v42 + v46 * v17, v18);
      v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v50(v9, 0, 1, v18);
      v48 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
      if (v48(v9, 1, v18) == 1)
        goto LABEL_24;
      v47 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v47(v51, v9, v18);
      v20 = *(_QWORD *)(a2 + 16);
      if (v20)
      {
        v21 = a2 + v42;
        swift_bridgeObjectRetain();
        while (1)
        {
          v49(v7, v21, v18);
          v50(v7, 0, 1, v18);
          if (v48(v7, 1, v18) == 1)
            break;
          v22 = ((uint64_t (*)(char *, char *, uint64_t))v47)(v19, v7, v18);
          v23 = (void *)MEMORY[0x1D8239E84](v22);
          v24 = sub_1D26CB7B4();
          v25 = (_QWORD *)sub_1D25D402C(v24);
          swift_bridgeObjectRelease();
          v26 = sub_1D26CB7B4();
          v27 = sub_1D25D402C(v26);
          swift_bridgeObjectRelease();
          if (v25[2] < *(_QWORD *)(v27 + 16))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            objc_autoreleasePoolPop(v23);
            (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v18);
          }
          else
          {
            v28 = v45;
            v29 = sub_1D25D18C8(v25, v27);
            v45 = v28;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            objc_autoreleasePoolPop(v23);
            (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v18);
            if ((v29 & 1) == 0)
            {
              swift_bridgeObjectRelease();
              v47(v35, v51, v18);
              v30 = v52;
              isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v7 = v44;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                sub_1D258439C(0, *(_QWORD *)(v30 + 16) + 1, 1);
                v30 = v52;
              }
              v33 = *(_QWORD *)(v30 + 16);
              v32 = *(_QWORD *)(v30 + 24);
              if (v33 >= v32 >> 1)
              {
                sub_1D258439C(v32 > 1, v33 + 1, 1);
                v30 = v52;
              }
              *(_QWORD *)(v30 + 16) = v33 + 1;
              result = ((uint64_t (*)(unint64_t, char *, uint64_t))v47)(v30 + v42 + v33 * v46, v35, v41);
              v52 = v30;
              v9 = v37;
              a1 = v38;
              a2 = v40;
              goto LABEL_20;
            }
          }
          v7 = v44;
          v21 += v46;
          if (!--v20)
            goto LABEL_18;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
LABEL_18:
        v50(v7, 1, 1, v18);
      }
      a2 = v40;
      swift_bridgeObjectRelease();
      result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v51, v18);
      v9 = v37;
      a1 = v38;
LABEL_20:
      v17 = v43 + 1;
      if (v43 + 1 == v39)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
    v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
LABEL_23:
    v50(v9, 1, 1, v41);
LABEL_24:
    swift_bridgeObjectRelease();
    sub_1D253703C((uint64_t)v9, (uint64_t *)&unk_1ED96FC50);
    return v52;
  }
  return result;
}

id sub_1D25BB4F0(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  id result;
  int64_t v24;
  int v25;
  int v26;
  char v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  int64_t v45;
  int v46;
  int v47;
  char v48;
  char v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  id v68;
  uint64_t v69;
  uint64_t v70;
  objc_class *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  objc_super v82;
  uint64_t v83;

  v7 = sub_1D26CB880();
  v81 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v80 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v78 = (char *)&v72 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v77 = (char *)&v72 - v13;
  MEMORY[0x1E0C80A78](v12);
  v75 = (char *)&v72 - v14;
  v15 = OBJC_IVAR____TtC9ChronoKit12WidgetReaper_objectWillChange;
  sub_1D26CC198();
  swift_allocObject();
  v16 = v3;
  *(_QWORD *)&v3[v15] = sub_1D26CC18C();
  v17 = &v16[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate];
  v18 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v73 = v16;
  *(_QWORD *)&v16[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_fileManager] = a3;
  swift_bridgeObjectRetain();
  v19 = a3;
  v20 = sub_1D25F4A5C(a1);
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 16);
  v22 = MEMORY[0x1E0DEE9D8];
  v79 = v7;
  if (v21)
  {
    v72 = a2;
    v83 = MEMORY[0x1E0DEE9D8];
    sub_1D258439C(0, v21, 0);
    result = (id)sub_1D25BAB90(v20);
    v24 = (int64_t)result;
    v26 = v25;
    v28 = v27 & 1;
    v74 = v20 + 56;
    while ((v24 & 0x8000000000000000) == 0 && v24 < 1 << *(_BYTE *)(v20 + 32))
    {
      if (((*(_QWORD *)(v74 + (((unint64_t)v24 >> 3) & 0xFFFFFFFFFFFFF8)) >> v24) & 1) == 0)
        goto LABEL_29;
      if (*(_DWORD *)(v20 + 36) != v26)
        goto LABEL_30;
      LODWORD(v76) = v28;
      v29 = v20;
      v30 = *(_QWORD *)(v20 + 48);
      v31 = v81;
      v32 = *(_QWORD *)(v81 + 72);
      v33 = v77;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v77, v30 + v32 * v24, v7);
      v34 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      v35 = v78;
      v34(v78, v33, v7);
      sub_1D26CB784();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v35, v7);
      v36 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258439C(0, *(_QWORD *)(v36 + 16) + 1, 1);
        v36 = v83;
      }
      v20 = v29;
      v37 = v76;
      v39 = *(_QWORD *)(v36 + 16);
      v38 = *(_QWORD *)(v36 + 24);
      if (v39 >= v38 >> 1)
      {
        sub_1D258439C(v38 > 1, v39 + 1, 1);
        v36 = v83;
      }
      *(_QWORD *)(v36 + 16) = v39 + 1;
      v7 = v79;
      v34((char *)(v36+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ v39 * v32), v80, v79);
      v83 = v36;
      result = (id)sub_1D25BAC30(v24, v26, v37 & 1, v20);
      v24 = (int64_t)result;
      v26 = v40;
      v28 = v41 & 1;
      if (!--v21)
      {
        sub_1D25BC734((uint64_t)result, v40, v28);
        swift_bridgeObjectRelease();
        v22 = MEMORY[0x1E0DEE9D8];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  v36 = MEMORY[0x1E0DEE9D8];
LABEL_14:
  v74 = v36;
  v42 = swift_bridgeObjectRetain();
  v43 = sub_1D25F4A5C(v42);
  swift_bridgeObjectRelease();
  v44 = *(_QWORD *)(v43 + 16);
  if (v44)
  {
    v83 = v22;
    sub_1D258439C(0, v44, 0);
    result = (id)sub_1D25BAB90(v43);
    v45 = (int64_t)result;
    v47 = v46;
    v49 = v48 & 1;
    v80 = (char *)(v43 + 56);
    v76 = v43;
    v50 = v77;
    while ((v45 & 0x8000000000000000) == 0 && v45 < 1 << *(_BYTE *)(v43 + 32))
    {
      if (((*(_QWORD *)&v80[((unint64_t)v45 >> 3) & 0xFFFFFFFFFFFFF8] >> v45) & 1) == 0)
        goto LABEL_32;
      if (*(_DWORD *)(v43 + 36) != v47)
        goto LABEL_33;
      v51 = *(_QWORD *)(v43 + 48);
      v52 = v81;
      v53 = *(_QWORD *)(v81 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 16))(v50, v51 + v53 * v45, v7);
      v54 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
      v55 = v78;
      v54(v78, v50, v7);
      sub_1D26CB784();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v7);
      v56 = v83;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258439C(0, *(_QWORD *)(v56 + 16) + 1, 1);
        v56 = v83;
      }
      v58 = *(_QWORD *)(v56 + 16);
      v57 = *(_QWORD *)(v56 + 24);
      if (v58 >= v57 >> 1)
      {
        sub_1D258439C(v57 > 1, v58 + 1, 1);
        v56 = v83;
      }
      *(_QWORD *)(v56 + 16) = v58 + 1;
      v7 = v79;
      v54((char *)(v56+ ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80))+ v58 * v53), v75, v79);
      v83 = v56;
      v43 = v76;
      result = (id)sub_1D25BAC30(v45, v47, v49 & 1, v76);
      v45 = (int64_t)result;
      v47 = v59;
      v49 = v60 & 1;
      if (!--v44)
      {
        sub_1D25BC734((uint64_t)result, v59, v60 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  v56 = MEMORY[0x1E0DEE9D8];
LABEL_27:
  v61 = v74;
  v62 = swift_bridgeObjectRetain();
  v63 = sub_1D25F4A5C(v62);
  swift_bridgeObjectRelease();
  v64 = v73;
  v65 = &v73[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove];
  *(_QWORD *)&v73[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove] = v63;
  v66 = swift_bridgeObjectRetain();
  v67 = sub_1D25F4A5C(v66);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v64[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_urlsToProtect] = v67;
  swift_beginAccess();
  v68 = objc_msgSend((id)objc_opt_self(), sel_progressWithTotalUnitCount_, *(_QWORD *)(*(_QWORD *)v65 + 16));
  *(_QWORD *)&v64[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress] = v68;
  v69 = sub_1D25BB080(v61, v56);
  swift_bridgeObjectRelease();
  v70 = sub_1D25F4A5C(v69);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v64[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemoveWithChildrenToKeep] = v70;

  v71 = (objc_class *)type metadata accessor for WidgetReaper();
  v82.receiver = v64;
  v82.super_class = v71;
  return objc_msgSendSuper2(&v82, sel_init);
}

void type metadata accessor for BaseCacheManager.CacheManagementError()
{
  JUMPOUT(0x1D823A430);
}

uint64_t sub_1D25BBB50(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = MEMORY[0x1D823A4E4](&protocol conformance descriptor for BaseCacheManager<A, B, C>);
  result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for BaseCacheManager<A, B, C>, a2);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1D25BBB94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = (*(uint64_t (**)(void))(**(_QWORD **)a1 + 168))();
  *a2 = result;
  return result;
}

uint64_t sub_1D25BBBC4(id *a1, uint64_t a2)
{
  return (*(uint64_t (**)(id))(**(_QWORD **)a2 + 176))(*a1);
}

uint64_t sub_1D25BBBF4()
{
  return 40;
}

__n128 sub_1D25BBC00(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D25BBC14@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25B5CC0(a1);
}

uint64_t sub_1D25BBC34(uint64_t a1)
{
  __int128 v2[2];

  sub_1D2538510(a1, (uint64_t)v2);
  return sub_1D25B5D08(v2);
}

uint64_t sub_1D25BBC6C()
{
  return 40;
}

__n128 sub_1D25BBC78(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t dispatch thunk of TimelineCacheManaged.cacheManager.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FileCacheReading.protectionLevelProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FileCacheReading.isDataPresent(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FileCacheReading.hasArchive(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FileCacheReading.content(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FileCacheReading.url(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of FileCacheReading.hasDeveloperError(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))() & 1;
}

uint64_t dispatch thunk of FileCacheReading.version(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FileCacheReading.sha256(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of FileCacheWriting.archiveFilePromise(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FileCacheWriting.markDataWithVersion(for:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FileCacheWriting.markDataAsRequiringReload(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FileCacheWriting.markDataAsHavingDeveloperError(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of FileCacheWriting.ingestArchive(url:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of FileCacheManaging.reaper(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FileCacheManaging.reaper(for:protecting:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t type metadata accessor for FileAttributeNames()
{
  return objc_opt_self();
}

uint64_t method lookup function for FileAttributeNames()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CacheManagerKey.init(baseURL:entryKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t sub_1D25BBDD4()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for BaseCacheManager()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for BaseCacheManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BaseCacheManager.fileManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of BaseCacheManager.fileManager.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of BaseCacheManager.fileManager.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of BaseCacheManager.protectionLevelProvider.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of BaseCacheManager.protectionLevelProvider.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of BaseCacheManager.protectionLevelProvider.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of BaseCacheManager.__allocating_init(identifier:cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:forReading:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of BaseCacheManager.reaper(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of BaseCacheManager.reaper(for:protecting:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of BaseCacheManager.archiveFilePromise(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of BaseCacheManager.ingestArchive(url:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of BaseCacheManager.markDataWithVersion(for:version:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of BaseCacheManager.markDataAsHavingDeveloperError(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of BaseCacheManager.hasDeveloperError(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))() & 1;
}

uint64_t dispatch thunk of BaseCacheManager.version(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of BaseCacheManager.markDataAsRequiringReload(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of BaseCacheManager.hasArchive(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of BaseCacheManager.url(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of BaseCacheManager.sha256(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of BaseCacheManager.isDataPresent(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of BaseCacheManager.content(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t sub_1D25BBFDC()
{
  return swift_allocateGenericValueMetadata();
}

void **sub_1D25BBFE4(void **a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  v4 = *a1;
  *a1 = *a2;
  v5 = v3;

  return a1;
}

void **sub_1D25BC018(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t sub_1D25BC048(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) >= 2)
    return v3;
  else
    return 0;
}

uint64_t sub_1D25BC098(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

uint64_t sub_1D25BC0EC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1D25BC104(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

void sub_1D25BC124()
{
  JUMPOUT(0x1D823A4E4);
}

id sub_1D25BC134(uint64_t a1, uint64_t a2, void *a3)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int64_t v18;
  id v19;
  id result;
  int64_t v21;
  int v22;
  int v23;
  char v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  uint64_t v34;
  char v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char v39;
  id v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  int64_t v44;
  int v45;
  int v46;
  char v47;
  char v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, char *, uint64_t);
  char *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t v69;
  objc_class *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  objc_super v81;
  uint64_t v82;

  v73 = a2;
  v6 = sub_1D26CB880();
  v79 = *(_QWORD *)(v6 - 8);
  v80 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v78 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v77 = (char *)&v71 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v76 = (char *)&v71 - v12;
  MEMORY[0x1E0C80A78](v11);
  v74 = (char *)&v71 - v13;
  v14 = OBJC_IVAR____TtC9ChronoKit12WidgetReaper_objectWillChange;
  sub_1D26CC198();
  swift_allocObject();
  v15 = v3;
  *(_QWORD *)&v3[v14] = sub_1D26CC18C();
  v16 = &v15[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate];
  v17 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *(_QWORD *)&v15[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_fileManager] = a3;
  v18 = *(_QWORD *)(a1 + 16);
  v71 = v15;
  if (v18)
  {
    v82 = MEMORY[0x1E0DEE9D8];
    v19 = a3;
    swift_bridgeObjectRetain();
    sub_1D258439C(0, v18, 0);
    result = (id)sub_1D25BAB90(a1);
    v21 = (int64_t)result;
    v23 = v22;
    v25 = v24 & 1;
    v72 = a1 + 56;
    while ((v21 & 0x8000000000000000) == 0 && v21 < 1 << *(_BYTE *)(a1 + 32))
    {
      if (((*(_QWORD *)(v72 + (((unint64_t)v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
        goto LABEL_28;
      if (*(_DWORD *)(a1 + 36) != v23)
        goto LABEL_29;
      LODWORD(v75) = v25;
      v26 = a1;
      v28 = v79;
      v27 = v80;
      v29 = *(_QWORD *)(v79 + 72);
      v30 = *(_QWORD *)(a1 + 48) + v29 * v21;
      v31 = v76;
      (*(void (**)(char *, int64_t, uint64_t))(v79 + 16))(v76, v30, v80);
      v32 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
      v33 = v77;
      v32(v77, v31, v27);
      sub_1D26CB784();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v33, v27);
      v34 = v82;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258439C(0, *(_QWORD *)(v34 + 16) + 1, 1);
        v34 = v82;
      }
      a1 = v26;
      v35 = v75;
      v37 = *(_QWORD *)(v34 + 16);
      v36 = *(_QWORD *)(v34 + 24);
      if (v37 >= v36 >> 1)
      {
        sub_1D258439C(v36 > 1, v37 + 1, 1);
        v34 = v82;
      }
      *(_QWORD *)(v34 + 16) = v37 + 1;
      v32((char *)(v34+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ v37 * v29), v78, v80);
      v82 = v34;
      result = (id)sub_1D25BAC30(v21, v23, v35 & 1, a1);
      v21 = (int64_t)result;
      v23 = v38;
      v25 = v39 & 1;
      if (!--v18)
      {
        v75 = v34;
        sub_1D25BC734((uint64_t)result, v38, v25);
        swift_bridgeObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
  }
  else
  {
    v40 = a3;
    v75 = MEMORY[0x1E0DEE9D8];
LABEL_14:
    v41 = v73;
    v42 = *(_QWORD *)(v73 + 16);
    v43 = MEMORY[0x1E0DEE9D8];
    if (!v42)
    {
LABEL_26:
      v60 = v75;
      v61 = swift_bridgeObjectRetain();
      v62 = sub_1D25F4A5C(v61);
      swift_bridgeObjectRelease();
      v63 = v71;
      v64 = &v71[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove];
      *(_QWORD *)&v71[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove] = v62;
      v65 = swift_bridgeObjectRetain();
      v66 = sub_1D25F4A5C(v65);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v63[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_urlsToProtect] = v66;
      swift_beginAccess();
      v67 = objc_msgSend((id)objc_opt_self(), sel_progressWithTotalUnitCount_, *(_QWORD *)(*(_QWORD *)v64 + 16));
      *(_QWORD *)&v63[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress] = v67;
      v68 = sub_1D25BB080(v60, v43);
      swift_bridgeObjectRelease();
      v69 = sub_1D25F4A5C(v68);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v63[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemoveWithChildrenToKeep] = v69;

      v70 = (objc_class *)type metadata accessor for WidgetReaper();
      v81.receiver = v63;
      v81.super_class = v70;
      return objc_msgSendSuper2(&v81, sel_init);
    }
    v82 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1D258439C(0, v42, 0);
    result = (id)sub_1D25BAB90(v41);
    v44 = (int64_t)result;
    v46 = v45;
    v48 = v47 & 1;
    v78 = (char *)(v41 + 56);
    v49 = v76;
    while ((v44 & 0x8000000000000000) == 0 && v44 < 1 << *(_BYTE *)(v41 + 32))
    {
      if (((*(_QWORD *)&v78[((unint64_t)v44 >> 3) & 0xFFFFFFFFFFFFF8] >> v44) & 1) == 0)
        goto LABEL_31;
      if (*(_DWORD *)(v41 + 36) != v46)
        goto LABEL_32;
      v50 = *(_QWORD *)(v41 + 48);
      v52 = v79;
      v51 = v80;
      v53 = *(_QWORD *)(v79 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))(v49, v50 + v53 * v44, v80);
      v54 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
      v55 = v77;
      v54(v77, v49, v51);
      sub_1D26CB784();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v55, v51);
      v43 = v82;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258439C(0, *(_QWORD *)(v43 + 16) + 1, 1);
        v43 = v82;
      }
      v57 = *(_QWORD *)(v43 + 16);
      v56 = *(_QWORD *)(v43 + 24);
      if (v57 >= v56 >> 1)
      {
        sub_1D258439C(v56 > 1, v57 + 1, 1);
        v43 = v82;
      }
      *(_QWORD *)(v43 + 16) = v57 + 1;
      v54((char *)(v43+ ((*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80))+ v57 * v53), v74, v80);
      v82 = v43;
      v41 = v73;
      result = (id)sub_1D25BAC30(v44, v46, v48 & 1, v73);
      v44 = (int64_t)result;
      v46 = v58;
      v48 = v59 & 1;
      if (!--v42)
      {
        sub_1D25BC734((uint64_t)result, v58, v59 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D25BC734(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

id WidgetExtensionInfo.id.getter()
{
  id *v0;

  return *v0;
}

void WidgetExtensionInfo.id.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*WidgetExtensionInfo.id.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.version.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.localizedDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.localizedDisplayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.localizedDisplayName.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.pluginUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  v4 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.pluginUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 28);
  v4 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.pluginUUID.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.lastModifiedDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  v4 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.lastModifiedDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 32);
  v4 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.lastModifiedDate.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.isInternal.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 36));
}

uint64_t WidgetExtensionInfo.isInternal.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetExtensionInfo();
  *(_BYTE *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.isInternal.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.bundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.bundleURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.bundleURL.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.dataContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.dataContainerURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 44);
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.dataContainerURL.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.systemDataContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.systemDataContainerURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 48);
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.systemDataContainerURL.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.requestedDataProtection.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 52);
  return sub_1D25B2CA8(v3, a1);
}

uint64_t WidgetExtensionInfo.requestedDataProtection.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 52);
  return sub_1D25BCCD0(a1, v3);
}

uint64_t sub_1D25BCCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*WidgetExtensionInfo.requestedDataProtection.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.wantsLocation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 56));
}

uint64_t WidgetExtensionInfo.wantsLocation.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetExtensionInfo();
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.wantsLocation.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.containerBundleURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t WidgetExtensionInfo.containerBundleURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 60);
  v4 = sub_1D26CB880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*WidgetExtensionInfo.containerBundleURL.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.effectiveContainerBundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.effectiveContainerBundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 64));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.effectiveContainerBundleIdentifier.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.localizedContainerDisplayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.localizedContainerDisplayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 68));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.localizedContainerDisplayName.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.containerBundleVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.containerBundleVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 72));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.containerBundleVersion.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.sdkVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.sdkVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 76));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.sdkVersion.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.platform.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 80));
}

uint64_t WidgetExtensionInfo.platform.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetExtensionInfo();
  *(_QWORD *)(v1 + *(int *)(result + 80)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.platform.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.watchKitExtensionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.watchKitExtensionIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 84));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.watchKitExtensionIdentifier.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.pushEnvironment.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetExtensionInfo.pushEnvironment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 88));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*WidgetExtensionInfo.pushEnvironment.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.isDevelopmentExtension.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 92));
}

uint64_t WidgetExtensionInfo.isDevelopmentExtension.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetExtensionInfo();
  *(_BYTE *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.isDevelopmentExtension.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.availableLocalizations.getter()
{
  type metadata accessor for WidgetExtensionInfo();
  return swift_bridgeObjectRetain();
}

uint64_t WidgetExtensionInfo.availableLocalizations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for WidgetExtensionInfo() + 96);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.availableLocalizations.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.allowsMixedLocalizations.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 100));
}

uint64_t WidgetExtensionInfo.allowsMixedLocalizations.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for WidgetExtensionInfo();
  *(_BYTE *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.allowsMixedLocalizations.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.nominatedContainingBundleIdentifiers.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for WidgetExtensionInfo() + 104);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*WidgetExtensionInfo.nominatedContainingBundleIdentifiers.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

void *WidgetExtensionInfo.entitlements.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 108));
  v2 = v1;
  return v1;
}

void WidgetExtensionInfo.entitlements.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(type metadata accessor for WidgetExtensionInfo() + 108);

  *(_QWORD *)(v1 + v3) = a1;
}

uint64_t (*WidgetExtensionInfo.entitlements.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for WidgetExtensionInfo();
  return CGSizeMake;
}

uint64_t WidgetExtensionInfo.bundleStub.getter()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  void *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v10;

  v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = (char *)v0 + *(int *)(type metadata accessor for WidgetExtensionInfo() + 40);
  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v3, v5, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
  v8 = v4;
  swift_bridgeObjectRetain();
  return sub_1D26CD380();
}

void WidgetExtensionInfo.init(id:version:localizedDisplayName:pluginUUID:lastModifiedDate:isInternal:bundleURL:dataContainerURL:systemDataContainerURL:requestedDataProtection:wantsLocation:containerBundleURL:effectiveContainerBundleIdentifier:localizedContainerDisplayName:containerBundleVersion:sdkVersion:platform:watchKitExtensionIdentifier:pushEnvironment:isDevelopmentExtension:availableLocalizations:allowsMixedLocalizations:nominatedContainingBundleIdentifiers:entitlements:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, _QWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33)
{
  int *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t, uint64_t);
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;

  v37 = (int *)type metadata accessor for WidgetExtensionInfo();
  v38 = (uint64_t)a9 + v37[13];
  v39 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v38, 1, 1, v39);
  v40 = (_QWORD *)((char *)a9 + v37[17]);
  *v40 = 0;
  v40[1] = 0;
  v41 = (_QWORD *)((char *)a9 + v37[21]);
  *v41 = 0;
  v41[1] = 0;
  v42 = (_QWORD *)((char *)a9 + v37[22]);
  *v42 = 0;
  v42[1] = 0;
  v43 = v37[27];
  *(_QWORD *)((char *)a9 + v43) = 0;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  v44 = (char *)a9 + v37[7];
  v45 = sub_1D26CBA24();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 32))(v44, a6, v45);
  v46 = (char *)a9 + v37[8];
  v47 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v46, a7, v47);
  *((_BYTE *)a9 + v37[9]) = a8;
  v48 = (char *)a9 + v37[10];
  v49 = sub_1D26CB880();
  v50 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 32);
  v50(v48, a10, v49);
  v50((char *)a9 + v37[11], a11, v49);
  v50((char *)a9 + v37[12], a12, v49);
  sub_1D25BCCD0(a13, v38);
  *((_BYTE *)a9 + v37[14]) = a14;
  v50((char *)a9 + v37[15], a15, v49);
  v51 = (_QWORD *)((char *)a9 + v37[16]);
  *v51 = a16;
  v51[1] = a17;
  swift_bridgeObjectRelease();
  *v40 = a18;
  v40[1] = a19;
  v52 = (_QWORD *)((char *)a9 + v37[18]);
  *v52 = a20;
  v52[1] = a21;
  v53 = (_QWORD *)((char *)a9 + v37[19]);
  *v53 = a22;
  v53[1] = a23;
  *(_QWORD *)((char *)a9 + v37[20]) = a24;
  swift_bridgeObjectRelease();
  *v41 = a25;
  v41[1] = a26;
  swift_bridgeObjectRelease();
  *v42 = a27;
  v42[1] = a28;
  *((_BYTE *)a9 + v37[23]) = a29;
  *(_QWORD *)((char *)a9 + v37[24]) = a30;
  *((_BYTE *)a9 + v37[25]) = a31;
  *(_QWORD *)((char *)a9 + v37[26]) = a32;

  *(_QWORD *)((char *)a9 + v43) = a33;
}

uint64_t WidgetExtensionInfo.matches(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char v16;
  char v18;
  char v19;
  uint64_t v21;

  v2 = v1;
  v4 = type metadata accessor for WidgetExtensionInfo();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v21 - v9;
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v21 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - v14;
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
  v16 = sub_1D26CDECC();
  sub_1D2538E94(v2, (uint64_t)v15);
  sub_1D2538E94(a1, (uint64_t)v13);
  if ((v16 & 1) != 0)
  {
    if (*((_QWORD *)v15 + 1) == *((_QWORD *)v13 + 1) && *((_QWORD *)v15 + 2) == *((_QWORD *)v13 + 2))
    {
      sub_1D2538928((uint64_t)v15);
      sub_1D2538928((uint64_t)v13);
      sub_1D2538E94(v2, (uint64_t)v10);
      sub_1D2538E94(a1, (uint64_t)v7);
    }
    else
    {
      v18 = sub_1D26CE3D0();
      sub_1D2538928((uint64_t)v15);
      sub_1D2538928((uint64_t)v13);
      sub_1D2538E94(v2, (uint64_t)v10);
      sub_1D2538E94(a1, (uint64_t)v7);
      v19 = 0;
      if ((v18 & 1) == 0)
        goto LABEL_11;
    }
    v19 = sub_1D26CB9A0();
  }
  else
  {
    sub_1D2538928((uint64_t)v15);
    sub_1D2538928((uint64_t)v13);
    sub_1D2538E94(v2, (uint64_t)v10);
    sub_1D2538E94(a1, (uint64_t)v7);
    v19 = 0;
  }
LABEL_11:
  sub_1D2538928((uint64_t)v7);
  sub_1D2538928((uint64_t)v10);
  return v19 & 1;
}

uint64_t WidgetExtensionInfo.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  type metadata accessor for WidgetExtensionInfo();
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  return sub_1D26CD8D8();
}

void WidgetExtensionInfo.hashRecordVersion(into:)()
{
  void **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void **v16;
  void **v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void **v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  char *v36;
  id v37;
  char *v38;
  void *v39;
  void (*v40)(char *, uint64_t);
  void *v41;
  char *v42;
  id v43;
  char *v44;
  uint64_t v45;
  void (*v46)(char *, _QWORD, uint64_t, uint64_t);
  void (*v47)(char *, uint64_t, uint64_t);
  id v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  void **v57;
  __int128 v58;
  uint64_t v59;

  v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v1 = MEMORY[0x1E0C80A78](v55);
  v56 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v46 - v3;
  v5 = sub_1D26CD3B0();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v46 - v10;
  v12 = *v0;
  v57 = v0;
  *(_QWORD *)&v58 = v12;
  v13 = sub_1D26CDE54();
  v14 = sub_1D25369B0(&qword_1ED9638C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FE48], MEMORY[0x1E0D0FE58]);
  v15 = v59;
  sub_1D26CBF94();
  if (!v15)
  {
    v48 = v12;
    v49 = v14;
    v50 = v13;
    v51 = v11;
    v52 = v6;
    v53 = v9;
    v54 = v4;
    v59 = v5;
    v16 = v57;
    v58 = *(_OWORD *)(v57 + 3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962848);
    sub_1D25C11E8(&qword_1ED963220, &qword_1ED962848, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
    sub_1D26CBF94();
    v17 = v16;
    v18 = (int *)type metadata accessor for WidgetExtensionInfo();
    LOBYTE(v58) = *((_BYTE *)v16 + v18[9]);
    sub_1D26CBF94();
    v19 = (uint64_t)v16 + v18[10];
    v20 = sub_1D26CB880();
    v21 = sub_1D25369B0(&qword_1ED963270, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    sub_1D26CBF94();
    sub_1D26CBF94();
    sub_1D26CBF94();
    v22 = (void **)((char *)v17 + v18[13]);
    v46 = (void (*)(char *, _QWORD, uint64_t, uint64_t))v21;
    v47 = (void (*)(char *, uint64_t, uint64_t))v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
    sub_1D25BE364();
    sub_1D26CBF94();
    LOBYTE(v58) = *((_BYTE *)v17 + v18[14]);
    sub_1D26CBF94();
    sub_1D26CBF94();
    v23 = (uint64_t *)((char *)v17 + v18[16]);
    v25 = *v23;
    v24 = v23[1];
    *(_QWORD *)&v58 = v25;
    *((_QWORD *)&v58 + 1) = v24;
    sub_1D26CBF94();
    v26 = v17;
    v58 = *(_OWORD *)((char *)v17 + v18[17]);
    sub_1D26CBF94();
    v27 = (uint64_t *)((char *)v17 + v18[18]);
    v29 = *v27;
    v28 = v27[1];
    *(_QWORD *)&v58 = v29;
    *((_QWORD *)&v58 + 1) = v28;
    sub_1D26CBF94();
    v30 = (uint64_t *)((char *)v17 + v18[19]);
    v32 = *v30;
    v31 = v30[1];
    *(_QWORD *)&v58 = v32;
    *((_QWORD *)&v58 + 1) = v31;
    sub_1D26CBF94();
    if (HIDWORD(*(unint64_t *)((char *)v17 + v18[20])))
    {
      sub_1D26CE1CC();
      __break(1u);
    }
    else
    {
      LODWORD(v58) = *(void **)((char *)v17 + v18[20]);
      sub_1D26CBF94();
      v58 = *(_OWORD *)((char *)v17 + v18[21]);
      sub_1D26CBF94();
      v58 = *(_OWORD *)((char *)v17 + v18[22]);
      sub_1D26CBF94();
      LOBYTE(v58) = *((_BYTE *)v17 + v18[23]);
      sub_1D26CBF94();
      *(_QWORD *)&v58 = *(void **)((char *)v17 + v18[24]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
      sub_1D25C11E8(&qword_1ED963868, &qword_1ED96BF70, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
      sub_1D26CBF94();
      LOBYTE(v58) = *((_BYTE *)v17 + v18[25]);
      sub_1D26CBF94();
      *(_QWORD *)&v58 = *(void **)((char *)v17 + v18[26]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963858);
      sub_1D25BE3E0(&qword_1ED963860, &qword_1ED9632E0, MEMORY[0x1E0D0F970], MEMORY[0x1E0DEAF10]);
      sub_1D26CBF94();
      v33 = *(void **)((char *)v17 + v18[27]);
      if (v33)
      {
        sub_1D2539514(0, &qword_1ED9638D8);
        v34 = v33;
        sub_1D26CBFA0();

      }
      v35 = *(_QWORD *)(v20 - 8);
      v36 = v54;
      v47 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
      v47(v54, v19, v20);
      v46 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56);
      v46(v36, 0, 1, v20);
      v37 = v48;
      swift_bridgeObjectRetain();
      v38 = v51;
      sub_1D26CD380();
      v39 = (void *)sub_1D26CD38C();
      v40 = *(void (**)(char *, uint64_t))(v52 + 8);
      v40(v38, v59);
      *(_QWORD *)&v58 = v39;
      sub_1D26CBF94();

      v41 = *v26;
      v42 = v54;
      v47(v54, v19, v20);
      v46(v42, 0, 1, v20);
      v43 = v41;
      swift_bridgeObjectRetain();
      v44 = v53;
      sub_1D26CD380();
      v45 = (uint64_t)v56;
      sub_1D26CD398();
      v40(v44, v59);
      sub_1D25BE45C();
      sub_1D26CBF94();
      sub_1D253703C(v45, (uint64_t *)&unk_1ED96FC50);
    }
  }
}

unint64_t sub_1D25BE364()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED96B140;
  if (!qword_1ED96B140)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96FC90);
    v2 = sub_1D25369B0(&qword_1ED963848, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0440]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED96B140);
  }
  return result;
}

uint64_t sub_1D25BE3E0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED963858);
    v10 = sub_1D25C1244(a2, a3);
    result = MEMORY[0x1D823A4E4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D25BE45C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_1ED96B090;
  if (!qword_1ED96B090)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED96FC50);
    v2 = sub_1D25369B0(&qword_1ED963270, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEE988], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_1ED96B090);
  }
  return result;
}

uint64_t WidgetExtensionInfo.hashValue.getter()
{
  id *v0;
  id v1;

  sub_1D26CE460();
  v1 = *v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  type metadata accessor for WidgetExtensionInfo();
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  return sub_1D26CE49C();
}

uint64_t sub_1D25BE5A0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D25BE5C8 + 4 * byte_1D26D4B40[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1D25BE5C8()
{
  return 0x6E6F6973726576;
}

unint64_t sub_1D25BE5E0()
{
  return 0xD000000000000014;
}

uint64_t sub_1D25BE7F0()
{
  return 0x6D656C7469746E65;
}

uint64_t sub_1D25BE810()
{
  id *v0;
  id v1;

  sub_1D26CE460();
  v1 = *v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  return sub_1D26CE49C();
}

uint64_t sub_1D25BE8D0()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  return sub_1D26CD8D8();
}

uint64_t sub_1D25BE980()
{
  id *v0;
  id v1;

  sub_1D26CE460();
  v1 = *v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  return sub_1D26CE49C();
}

id sub_1D25BEA3C@<X0>(void **a1@<X8>)
{
  void **v1;
  void *v2;

  v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_1D25BEA4C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1D25BE5A0(*a1);
  v5 = v4;
  if (v3 == sub_1D25BE5A0(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D25BEAD4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D26CE460();
  sub_1D25BE5A0(v1);
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D25BEB34()
{
  unsigned __int8 *v0;

  sub_1D25BE5A0(*v0);
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25BEB74()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1D26CE460();
  sub_1D25BE5A0(v1);
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D25BEBD0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25C2434();
  *a1 = result;
  return result;
}

uint64_t sub_1D25BEBFC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D25BE5A0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D25BEC24()
{
  unsigned __int8 *v0;

  return sub_1D25BE5A0(*v0);
}

uint64_t sub_1D25BEC2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25C2434();
  *a1 = result;
  return result;
}

void sub_1D25BEC50(_BYTE *a1@<X8>)
{
  *a1 = 24;
}

uint64_t sub_1D25BEC5C()
{
  sub_1D25C11A4();
  return sub_1D26CE4F0();
}

uint64_t sub_1D25BEC84()
{
  sub_1D25C11A4();
  return sub_1D26CE4FC();
}

void WidgetExtensionInfo.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  int *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  int *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  int v55;
  void (*v56)(char *, uint64_t);
  int v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  char *v62;
  char *v63;
  int v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char v69;
  char *v70;
  char *v71;
  uint64_t v72;
  unint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  id v79;
  unint64_t v80;
  uint64_t *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t *v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  _QWORD v109[2];
  uint64_t v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  int *v130;
  uint64_t *v131;
  uint64_t v132;
  unint64_t v133;
  char v134;

  v110 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v3);
  v112 = (uint64_t)v109 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CB880();
  v120 = *(_QWORD *)(v5 - 8);
  v121 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v111 = (char *)v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v113 = (char *)v109 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v114 = (char *)v109 - v11;
  MEMORY[0x1E0C80A78](v10);
  v115 = (char *)v109 - v12;
  v118 = sub_1D26CB9DC();
  v122 = *(_QWORD *)(v118 - 8);
  MEMORY[0x1E0C80A78](v118);
  v116 = (char *)v109 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = sub_1D26CBA24();
  v117 = *(_QWORD *)(v119 - 8);
  MEMORY[0x1E0C80A78](v119);
  v15 = (char *)v109 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82C90);
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)v109 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = (int *)type metadata accessor for WidgetExtensionInfo();
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v109 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v23 + 3) = 0;
  *((_QWORD *)v23 + 4) = 0;
  v24 = (uint64_t)&v23[*(int *)(v21 + 52)];
  v25 = sub_1D26CD488();
  v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56);
  v129 = v24;
  v26(v24, 1, 1, v25);
  v27 = &v23[v20[17]];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v128 = v27;
  v28 = &v23[v20[21]];
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  v126 = v28;
  v29 = &v23[v20[22]];
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v124 = a1;
  v125 = v29;
  v130 = v20;
  v131 = (uint64_t *)v23;
  v127 = v20[27];
  *(_QWORD *)&v23[v127] = 0;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D25C11A4();
  v30 = v123;
  sub_1D26CE4D8();
  if (v30)
  {
    v33 = v127;
    v34 = v131;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
    swift_bridgeObjectRelease();
    sub_1D253703C(v129, &qword_1ED96FC90);
LABEL_4:
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
  v31 = v15;
  v109[1] = v25;
  v123 = v17;
  sub_1D26CDE54();
  v134 = 0;
  sub_1D25369B0(&qword_1EFC82C98, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FE48], MEMORY[0x1E0D0FE60]);
  v32 = v19;
  sub_1D26CE2C8();
  v35 = (char *)v131;
  *v131 = v132;
  LOBYTE(v132) = 1;
  *((_QWORD *)v35 + 1) = sub_1D26CE28C();
  *((_QWORD *)v35 + 2) = v36;
  LOBYTE(v132) = 2;
  v37 = sub_1D26CE274();
  v38 = v122;
  v109[0] = 0;
  *((_QWORD *)v35 + 3) = v37;
  *((_QWORD *)v35 + 4) = v39;
  LOBYTE(v132) = 3;
  sub_1D25369B0(&qword_1EFC82600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
  v40 = v31;
  v41 = v119;
  sub_1D26CE2C8();
  v42 = v130;
  (*(void (**)(char *, char *, uint64_t))(v117 + 32))(&v35[v130[7]], v40, v41);
  LOBYTE(v132) = 4;
  sub_1D25369B0(&qword_1ED961B08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
  v43 = v116;
  v44 = v118;
  sub_1D26CE2C8();
  (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v35[v42[8]], v43, v44);
  LOBYTE(v132) = 5;
  v35[v42[9]] = sub_1D26CE298() & 1;
  LOBYTE(v132) = 6;
  sub_1D25369B0(&qword_1EFC82CA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
  v58 = v115;
  v59 = v121;
  sub_1D26CE2C8();
  v60 = *(void (**)(char *, char *, uint64_t))(v120 + 32);
  v60(&v35[v130[10]], v58, v59);
  LOBYTE(v132) = 7;
  v61 = v114;
  sub_1D26CE2C8();
  v116 = 0;
  LODWORD(v115) = 1;
  v60(&v35[v130[11]], v61, v121);
  LOBYTE(v132) = 8;
  v62 = v113;
  v63 = v116;
  sub_1D26CE2C8();
  v116 = v63;
  if (v63)
  {
    (*(void (**)(char *, uint64_t))(v123 + 8))(v32, v16);
    v46 = 0;
    LODWORD(v113) = 0;
LABEL_32:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);

    LODWORD(v123) = 0;
    LODWORD(v114) = 0;
    v64 = 0;
    goto LABEL_11;
  }
  v60(&v35[v130[12]], v62, v121);
  LOBYTE(v132) = 9;
  sub_1D25369B0(&qword_1EFC82C80, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0460]);
  v65 = v16;
  v66 = v32;
  v67 = v116;
  sub_1D26CE280();
  v116 = v67;
  if (v67)
    goto LABEL_36;
  sub_1D25BCCD0(v112, v129);
  LOBYTE(v132) = 10;
  v68 = v116;
  v69 = sub_1D26CE298();
  v116 = v68;
  if (v68
    || (*((_BYTE *)v131 + v130[14]) = v69 & 1, LOBYTE(v132) = 11, v70 = v116, sub_1D26CE2C8(), (v116 = v70) != 0))
  {
LABEL_36:
    (*(void (**)(char *, uint64_t))(v123 + 8))(v32, v65);
    LODWORD(v113) = 0;
    v46 = 1;
    v35 = (char *)v131;
    goto LABEL_32;
  }
  v60((char *)v131 + v130[15], v111, v121);
  LOBYTE(v132) = 12;
  if ((sub_1D26CE2EC() & 1) != 0)
  {
    LOBYTE(v132) = 12;
    v71 = v116;
    v72 = sub_1D26CE28C();
    v116 = v71;
    if (v71)
    {
      (*(void (**)(char *, uint64_t))(v123 + 8))(v32, v65);
      v46 = 1;
      LODWORD(v113) = 1;
      v35 = (char *)v131;
      goto LABEL_32;
    }
    v78 = v72;
    v77 = v73;
  }
  else
  {
    v74 = (void *)*v131;
    v75 = *v131 + *MEMORY[0x1E0D0FE18];
    swift_beginAccess();
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 48))(v75, 1, v76))
    {
      swift_endAccess();
      v77 = 0xE700000000000000;
      v78 = 0x6E776F6E6B6E55;
    }
    else
    {
      v79 = v74;
      v78 = sub_1D26CBC88();
      v77 = v80;
      swift_endAccess();

    }
  }
  v81 = (uint64_t *)((char *)v131 + v130[16]);
  *v81 = v78;
  v81[1] = v77;
  LOBYTE(v132) = 13;
  v82 = v116;
  v83 = sub_1D26CE274();
  if (v82)
  {
    (*(void (**)(char *, uint64_t))(v123 + 8))(v66, v65);
    LODWORD(v114) = 0;
    LODWORD(v123) = 0;
    v64 = 1;
    v35 = (char *)v131;
    v54 = v122;
    v45 = v109[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);

    v116 = v82;
    if (v45)
    {
      swift_bridgeObjectRelease();
      LODWORD(v115) = 1;
      v46 = 1;
      LODWORD(v113) = 1;
      v47 = 1;
      goto LABEL_8;
    }
    LODWORD(v113) = 1;
    v46 = 1;
    LODWORD(v115) = 1;
LABEL_11:
    v47 = v64;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v54 = v122;
LABEL_8:
    v48 = v130;
    (*(void (**)(char *, uint64_t))(v117 + 8))(&v35[v130[7]], v119);
    (*(void (**)(char *, uint64_t))(v54 + 8))(&v35[v48[8]], v118);
    v49 = &v35[v48[10]];
    v50 = v35;
    v51 = v120;
    v52 = v121;
    v53 = *(void (**)(char *, uint64_t))(v120 + 8);
    v53(v49, v121);
    if ((v115 & 1) != 0)
    {
      v53(&v50[v48[11]], v52);
      v55 = v123;
      if ((v46 & 1) == 0)
        goto LABEL_18;
    }
    else
    {
      v55 = v123;
      if (!v46)
      {
LABEL_18:
        sub_1D253703C(v129, &qword_1ED96FC90);
        if ((_DWORD)v113)
        {
          v56 = *(void (**)(char *, uint64_t))(v51 + 8);
          v34 = v131;
          v56((char *)v131 + v48[15], v52);
LABEL_20:
          v33 = v127;
          v57 = (int)v114;
          if ((v47 & 1) != 0)
            goto LABEL_21;
          goto LABEL_27;
        }
        v33 = v127;
        v34 = v131;
        goto LABEL_26;
      }
      v53 = *(void (**)(char *, uint64_t))(v51 + 8);
    }
    v34 = v131;
    v53((char *)v131 + v48[12], v52);
    sub_1D253703C(v129, &qword_1ED96FC90);
    if ((v113 & 1) != 0)
    {
      v53((char *)v34 + v48[15], v52);
      goto LABEL_20;
    }
    v33 = v127;
LABEL_26:
    v57 = (int)v114;
    if (v47)
    {
LABEL_21:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v57 & 1) == 0)
        goto LABEL_22;
LABEL_28:
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0)
        goto LABEL_5;
      goto LABEL_4;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    if (!v57)
    {
LABEL_22:
      if (!v55)
        goto LABEL_5;
      goto LABEL_4;
    }
    goto LABEL_28;
  }
  v85 = v83;
  v86 = v84;
  v87 = v128;
  swift_bridgeObjectRelease();
  *v87 = v85;
  v87[1] = v86;
  LOBYTE(v132) = 14;
  v88 = sub_1D26CE28C();
  v89 = (uint64_t *)((char *)v131 + v130[18]);
  *v89 = v88;
  v89[1] = v90;
  LOBYTE(v132) = 15;
  if ((sub_1D26CE2EC() & 1) != 0)
  {
    LOBYTE(v132) = 15;
    v91 = sub_1D26CE28C();
  }
  else
  {
    v91 = sub_1D26CD938();
  }
  v93 = (uint64_t *)((char *)v131 + v130[19]);
  *v93 = v91;
  v93[1] = v92;
  LOBYTE(v132) = 16;
  if ((sub_1D26CE2EC() & 1) != 0)
  {
    LOBYTE(v132) = 16;
    v94 = sub_1D26CE2D4();
  }
  else
  {
    v94 = 0;
  }
  *(uint64_t *)((char *)v131 + v130[20]) = v94;
  LOBYTE(v132) = 17;
  if ((sub_1D26CE2EC() & 1) != 0)
  {
    LOBYTE(v132) = 17;
    v95 = sub_1D26CE28C();
    v97 = v96;
  }
  else
  {
    v95 = 0;
    v97 = 0;
  }
  v98 = (uint64_t *)v126;
  swift_bridgeObjectRelease();
  *v98 = v95;
  v98[1] = v97;
  LOBYTE(v132) = 18;
  v99 = sub_1D26CE274();
  v101 = v100;
  v102 = (uint64_t *)v125;
  swift_bridgeObjectRelease();
  *v102 = v99;
  v102[1] = v101;
  LOBYTE(v132) = 19;
  *((_BYTE *)v131 + v130[23]) = sub_1D26CE298() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  v134 = 20;
  sub_1D25C11E8(&qword_1ED962798, &qword_1ED96BF70, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEAF40]);
  sub_1D26CE2C8();
  *(uint64_t *)((char *)v131 + v130[24]) = v132;
  LOBYTE(v132) = 21;
  *((_BYTE *)v131 + v130[25]) = sub_1D26CE298() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963858);
  v134 = 22;
  sub_1D25BE3E0(&qword_1EFC82CA8, &qword_1EFC82CB0, MEMORY[0x1E0D0F990], MEMORY[0x1E0DEAF40]);
  sub_1D26CE2C8();
  *(uint64_t *)((char *)v131 + v130[26]) = v132;
  LOBYTE(v132) = 23;
  if ((sub_1D26CE2EC() & 1) != 0)
  {
    v134 = 23;
    sub_1D25A1D50();
    sub_1D26CE2C8();
    v104 = v132;
    v105 = v133;
    sub_1D2539514(0, &qword_1ED9620C8);
    sub_1D2539514(0, &qword_1ED9638D8);
    v106 = sub_1D26CDD28();
    (*(void (**)(char *, uint64_t))(v123 + 8))(v66, v65);
    sub_1D253EE04(v104, v105);
    v107 = v127;
    v108 = v131;

    *(uint64_t *)((char *)v108 + v107) = v106;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v123 + 8))(v66, v65);
  }
  v103 = v131;
  sub_1D2538E94((uint64_t)v131, v110);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v124);
  sub_1D2538928((uint64_t)v103);
}

uint64_t WidgetExtensionInfo.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t result;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void *v19;
  char *v20;
  char v21;
  __int128 v22;
  uint64_t v23;

  v3 = v1;
  v23 = *MEMORY[0x1E0C80C00];
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963990);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D25C11A4();
  sub_1D26CE4E4();
  *(_QWORD *)&v22 = *v3;
  v21 = 0;
  sub_1D26CDE54();
  sub_1D25369B0(&qword_1ED9638C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FE48], MEMORY[0x1E0D0FE58]);
  sub_1D26CE358();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  LOBYTE(v22) = 1;
  sub_1D26CE31C();
  LOBYTE(v22) = 2;
  sub_1D26CE304();
  v9 = (int *)type metadata accessor for WidgetExtensionInfo();
  LOBYTE(v22) = 3;
  sub_1D26CBA24();
  sub_1D25369B0(&qword_1ED963280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1D26CE358();
  LOBYTE(v22) = 4;
  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED961B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
  sub_1D26CE358();
  LOBYTE(v22) = 5;
  sub_1D26CE328();
  LOBYTE(v22) = 6;
  sub_1D26CB880();
  sub_1D25369B0(&qword_1ED963270, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
  sub_1D26CE358();
  LOBYTE(v22) = 7;
  sub_1D26CE358();
  LOBYTE(v22) = 8;
  sub_1D26CE358();
  v20 = (char *)v3 + v9[13];
  LOBYTE(v22) = 9;
  sub_1D26CD488();
  sub_1D25369B0(&qword_1ED963848, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0440]);
  sub_1D26CE310();
  LOBYTE(v22) = 10;
  sub_1D26CE328();
  LOBYTE(v22) = 11;
  sub_1D26CE358();
  LOBYTE(v22) = 12;
  sub_1D26CE31C();
  LOBYTE(v22) = 13;
  sub_1D26CE304();
  LOBYTE(v22) = 14;
  sub_1D26CE31C();
  LOBYTE(v22) = 15;
  sub_1D26CE31C();
  if (!HIDWORD(*(_QWORD *)((char *)v3 + v9[20])))
  {
    LOBYTE(v22) = 16;
    sub_1D26CE364();
    v22 = *(_OWORD *)((char *)v3 + v9[22]);
    v21 = 18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962848);
    sub_1D25C11E8(&qword_1ED963220, &qword_1ED962848, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEE988]);
    sub_1D26CE358();
    LOBYTE(v22) = 19;
    sub_1D26CE328();
    *(_QWORD *)&v22 = *(_QWORD *)((char *)v3 + v9[24]);
    v21 = 20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
    sub_1D25C11E8(&qword_1ED963868, &qword_1ED96BF70, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEAF10]);
    sub_1D26CE358();
    LOBYTE(v22) = 21;
    sub_1D26CE328();
    *(_QWORD *)&v22 = *(_QWORD *)((char *)v3 + v9[26]);
    v21 = 22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963858);
    sub_1D25BE3E0(&qword_1ED963860, &qword_1ED9632E0, MEMORY[0x1E0D0F970], MEMORY[0x1E0DEAF10]);
    sub_1D26CE358();
    v11 = *(void **)((char *)v3 + v9[27]);
    if (v11)
    {
      v12 = (void *)objc_opt_self();
      *(_QWORD *)&v22 = 0;
      v13 = v11;
      v14 = objc_msgSend(v12, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v13, 1, &v22);
      v15 = (id)v22;
      if (v14)
      {
        v16 = sub_1D26CB8E0();
        v18 = v17;

        *(_QWORD *)&v22 = v16;
        *((_QWORD *)&v22 + 1) = v18;
        v21 = 23;
        sub_1D25A1DD0();
        sub_1D26CE358();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

        return sub_1D253EE04(v16, v18);
      }
      v19 = v15;
      sub_1D26CB76C();

      swift_willThrow();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  result = sub_1D26CE1CC();
  __break(1u);
  return result;
}

void sub_1D25C0708(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  WidgetExtensionInfo.init(from:)(a1, a2);
}

uint64_t sub_1D25C071C(_QWORD *a1)
{
  return WidgetExtensionInfo.encode(to:)(a1);
}

uint64_t WidgetExtensionInfo.description.getter()
{
  id *v0;
  id v1;
  id v2;
  id v3;
  void *v4;
  id v5;

  sub_1D26CE0A0();
  sub_1D26CDA04();
  sub_1D26CDA04();
  sub_1D26CDA04();
  v1 = *v0;
  v2 = objc_msgSend(v1, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  type metadata accessor for WidgetExtensionInfo();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  type metadata accessor for CHSPlatform(0);
  sub_1D26CE190();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (qword_1ED96C7C0 != -1)
    swift_once();
  v3 = (id)qword_1ED96C848;
  v4 = (void *)sub_1D26CB940();
  v5 = objc_msgSend(v3, sel_stringFromDate_, v4);

  sub_1D26CD938();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 0;
}

uint64_t _s9ChronoKit19WidgetExtensionInfoV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char v23;
  int *v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_BYTE *, uint64_t);
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  int *v57;
  char v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  int *v64;
  char v65;
  uint64_t v66;
  void *v67;
  void *v68;
  id v69;
  id v70;
  char v71;
  _BYTE v72[12];
  int v73;
  int *v74;
  uint64_t v75;

  v75 = sub_1D26CD488();
  v4 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v6 = &v72[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962060);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = &v72[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = &v72[-v15];
  MEMORY[0x1E0C80A78](v14);
  v18 = &v72[-v17];
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FCC8);
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  if (a1[1] != a2[1] || a1[2] != a2[2])
  {
    v19 = sub_1D26CE3D0();
    result = 0;
    if ((v19 & 1) == 0)
      return result;
  }
  v21 = a1[4];
  v22 = a2[4];
  if (v21)
  {
    if (!v22)
      return 0;
    if (a1[3] != a2[3] || v21 != v22)
    {
      v23 = sub_1D26CE3D0();
      result = 0;
      if ((v23 & 1) == 0)
        return result;
    }
  }
  else if (v22)
  {
    return 0;
  }
  v24 = (int *)type metadata accessor for WidgetExtensionInfo();
  if ((sub_1D26CBA00() & 1) == 0
    || (sub_1D26CB9A0() & 1) == 0
    || *((unsigned __int8 *)a1 + v24[9]) != *((unsigned __int8 *)a2 + v24[9])
    || (MEMORY[0x1D8236FF8]((char *)a1 + v24[10], (char *)a2 + v24[10]) & 1) == 0
    || (MEMORY[0x1D8236FF8]((char *)a1 + v24[11], (char *)a2 + v24[11]) & 1) == 0
    || (MEMORY[0x1D8236FF8]((char *)a1 + v24[12], (char *)a2 + v24[12]) & 1) == 0)
  {
    return 0;
  }
  sub_1D25B2CA8((uint64_t)a1 + v24[13], (uint64_t)v18);
  v74 = v24;
  sub_1D25B2CA8((uint64_t)a2 + v24[13], (uint64_t)v16);
  v25 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1D25B2CA8((uint64_t)v18, (uint64_t)v9);
  sub_1D25B2CA8((uint64_t)v16, v25);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v26((uint64_t)v9, 1, v75) == 1)
  {
    sub_1D253703C((uint64_t)v16, &qword_1ED96FC90);
    sub_1D253703C((uint64_t)v18, &qword_1ED96FC90);
    if (v26(v25, 1, v75) == 1)
    {
      sub_1D253703C((uint64_t)v9, &qword_1ED96FC90);
      goto LABEL_25;
    }
LABEL_23:
    sub_1D253703C((uint64_t)v9, &qword_1ED962060);
    return 0;
  }
  sub_1D25B2CA8((uint64_t)v9, (uint64_t)v13);
  if (v26(v25, 1, v75) == 1)
  {
    sub_1D253703C((uint64_t)v16, &qword_1ED96FC90);
    sub_1D253703C((uint64_t)v18, &qword_1ED96FC90);
    (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v13, v75);
    goto LABEL_23;
  }
  v27 = v25;
  v28 = v75;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 32))(v6, v27, v75);
  sub_1D25369B0((unint64_t *)&qword_1ED96FC88, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0450]);
  v73 = sub_1D26CD908();
  v29 = *(void (**)(_BYTE *, uint64_t))(v4 + 8);
  v29(v6, v28);
  sub_1D253703C((uint64_t)v16, &qword_1ED96FC90);
  sub_1D253703C((uint64_t)v18, &qword_1ED96FC90);
  v29(v13, v28);
  sub_1D253703C((uint64_t)v9, &qword_1ED96FC90);
  if ((v73 & 1) == 0)
    return 0;
LABEL_25:
  v30 = v74;
  if (*((unsigned __int8 *)a1 + v74[14]) != *((unsigned __int8 *)a2 + v74[14])
    || (MEMORY[0x1D8236FF8]((char *)a1 + v74[15], (char *)a2 + v74[15]) & 1) == 0)
  {
    return 0;
  }
  v31 = v30[16];
  v32 = *(_QWORD *)((char *)a1 + v31);
  v33 = *(_QWORD *)((char *)a1 + v31 + 8);
  v34 = (_QWORD *)((char *)a2 + v31);
  if (v32 != *v34 || v33 != v34[1])
  {
    v35 = sub_1D26CE3D0();
    result = 0;
    if ((v35 & 1) == 0)
      return result;
  }
  v36 = v30[17];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = *(_QWORD *)((char *)a1 + v36 + 8);
  v39 = (_QWORD *)((char *)a2 + v36);
  v40 = v39[1];
  if (v38)
  {
    if (!v40)
      return 0;
    if (*v37 != *v39 || v38 != v40)
    {
      v41 = sub_1D26CE3D0();
      result = 0;
      if ((v41 & 1) == 0)
        return result;
    }
  }
  else if (v40)
  {
    return 0;
  }
  v42 = v30[18];
  v43 = *(_QWORD *)((char *)a1 + v42);
  v44 = *(_QWORD *)((char *)a1 + v42 + 8);
  v45 = (_QWORD *)((char *)a2 + v42);
  if (v43 == *v45 && v44 == v45[1] || (v46 = sub_1D26CE3D0(), result = 0, (v46 & 1) != 0))
  {
    if ((v47 = v30[19],
          v48 = *(_QWORD *)((char *)a1 + v47),
          v49 = *(_QWORD *)((char *)a1 + v47 + 8),
          v50 = (_QWORD *)((char *)a2 + v47),
          v48 == *v50)
      && v49 == v50[1]
      || (v51 = sub_1D26CE3D0(), result = 0, (v51 & 1) != 0))
    {
      if (*(_QWORD *)((char *)a1 + v30[20]) == *(_QWORD *)((char *)a2 + v30[20]))
      {
        v52 = v74[21];
        v53 = (_QWORD *)((char *)a1 + v52);
        v54 = *(_QWORD *)((char *)a1 + v52 + 8);
        v55 = (_QWORD *)((char *)a2 + v52);
        v56 = v55[1];
        if (v54)
        {
          if (!v56)
            return 0;
          v57 = v74;
          if (*v53 != *v55 || v54 != v56)
          {
            v58 = sub_1D26CE3D0();
            result = 0;
            if ((v58 & 1) == 0)
              return result;
          }
        }
        else
        {
          v57 = v74;
          if (v56)
            return 0;
        }
        v59 = v57[22];
        v60 = (_QWORD *)((char *)a1 + v59);
        v61 = *(_QWORD *)((char *)a1 + v59 + 8);
        v62 = (_QWORD *)((char *)a2 + v59);
        v63 = v62[1];
        if (v61)
        {
          if (!v63)
            return 0;
          v64 = v74;
          if (*v60 != *v62 || v61 != v63)
          {
            v65 = sub_1D26CE3D0();
            result = 0;
            if ((v65 & 1) == 0)
              return result;
          }
        }
        else
        {
          v64 = v74;
          if (v63)
            return 0;
        }
        if (*((unsigned __int8 *)a1 + v64[23]) == *((unsigned __int8 *)a2 + v64[23])
          && (sub_1D2686C88(*(_QWORD **)((char *)a1 + v74[24]), *(_QWORD **)((char *)a2 + v74[24])) & 1) != 0
          && *((unsigned __int8 *)a1 + v74[25]) == *((unsigned __int8 *)a2 + v74[25])
          && (sub_1D2686D4C(*(_QWORD *)((char *)a1 + v74[26]), *(_QWORD *)((char *)a2 + v74[26])) & 1) != 0)
        {
          v66 = v74[27];
          v67 = *(void **)((char *)a1 + v66);
          v68 = *(void **)((char *)a2 + v66);
          if (v67)
          {
            if (v68)
            {
              sub_1D2539514(0, &qword_1ED9638D8);
              v69 = v68;
              v70 = v67;
              v71 = sub_1D26CDECC();

              if ((v71 & 1) != 0)
                return 1;
            }
          }
          else if (!v68)
          {
            return 1;
          }
        }
      }
      return 0;
    }
  }
  return result;
}

unint64_t sub_1D25C11A4()
{
  unint64_t result;

  result = qword_1ED963618;
  if (!qword_1ED963618)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D4EBC, &type metadata for WidgetExtensionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED963618);
  }
  return result;
}

uint64_t sub_1D25C11E8(unint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3;
    result = MEMORY[0x1D823A4E4](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D25C1244(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED9632F8);
    result = MEMORY[0x1D823A4E4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D25C1288()
{
  return sub_1D25369B0(&qword_1EFC82CB8, (uint64_t (*)(uint64_t))type metadata accessor for WidgetExtensionInfo, (uint64_t)&protocol conformance descriptor for WidgetExtensionInfo);
}

uint64_t sub_1D25C12B4()
{
  return sub_1D25369B0((unint64_t *)&qword_1ED96D528, (uint64_t (*)(uint64_t))MEMORY[0x1E0D0FE48], MEMORY[0x1E0DEFCF8]);
}

char *initializeBufferWithCopyOfBuffer for WidgetExtensionInfo(char *a1, char **a2, int *a3)
{
  int v3;
  char *v4;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  _QWORD *v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void *v59;
  id v60;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    v7 = a1;
    v8 = a2[2];
    *((_QWORD *)a1 + 1) = a2[1];
    *((_QWORD *)a1 + 2) = v8;
    v9 = a2[4];
    *((_QWORD *)a1 + 3) = a2[3];
    *((_QWORD *)a1 + 4) = v9;
    v10 = a3[7];
    v11 = &a1[v10];
    v12 = (uint64_t)a2 + v10;
    v13 = sub_1D26CBA24();
    v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    v15 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    v16 = a3[8];
    v17 = &v7[v16];
    v18 = (uint64_t)a2 + v16;
    v19 = sub_1D26CB9DC();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    v20 = a3[10];
    v7[a3[9]] = *((_BYTE *)a2 + a3[9]);
    v21 = &v7[v20];
    v22 = (uint64_t)a2 + v20;
    v23 = sub_1D26CB880();
    v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
    v24(v21, v22, v23);
    v24(&v7[a3[11]], (uint64_t)a2 + a3[11], v23);
    v24(&v7[a3[12]], (uint64_t)a2 + a3[12], v23);
    v25 = a3[13];
    v26 = &v7[v25];
    v27 = (char *)a2 + v25;
    v28 = sub_1D26CD488();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v26, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    v31 = a3[15];
    v7[a3[14]] = *((_BYTE *)a2 + a3[14]);
    v24(&v7[v31], (uint64_t)a2 + v31, v23);
    v32 = a3[16];
    v33 = a3[17];
    v34 = &v7[v32];
    v35 = (char **)((char *)a2 + v32);
    v36 = v35[1];
    *(_QWORD *)v34 = *v35;
    *((_QWORD *)v34 + 1) = v36;
    v37 = &v7[v33];
    v38 = (char **)((char *)a2 + v33);
    v39 = v38[1];
    *(_QWORD *)v37 = *v38;
    *((_QWORD *)v37 + 1) = v39;
    v40 = a3[18];
    v41 = a3[19];
    v42 = &v7[v40];
    v43 = (char **)((char *)a2 + v40);
    v44 = v43[1];
    *(_QWORD *)v42 = *v43;
    *((_QWORD *)v42 + 1) = v44;
    v45 = &v7[v41];
    v46 = (char **)((char *)a2 + v41);
    v47 = v46[1];
    *(_QWORD *)v45 = *v46;
    *((_QWORD *)v45 + 1) = v47;
    v48 = a3[21];
    *(_QWORD *)&v7[a3[20]] = *(char **)((char *)a2 + a3[20]);
    v49 = &v7[v48];
    v50 = (char **)((char *)a2 + v48);
    v51 = v50[1];
    *(_QWORD *)v49 = *v50;
    *((_QWORD *)v49 + 1) = v51;
    v52 = a3[22];
    v53 = a3[23];
    v54 = &v7[v52];
    v55 = (char **)((char *)a2 + v52);
    v56 = v55[1];
    *(_QWORD *)v54 = *v55;
    *((_QWORD *)v54 + 1) = v56;
    v7[v53] = *((_BYTE *)a2 + v53);
    v57 = a3[25];
    *(_QWORD *)&v7[a3[24]] = *(char **)((char *)a2 + a3[24]);
    v7[v57] = *((_BYTE *)a2 + v57);
    v58 = a3[27];
    *(_QWORD *)&v7[a3[26]] = *(char **)((char *)a2 + a3[26]);
    v59 = *(char **)((char *)a2 + v58);
    *(_QWORD *)&v7[v58] = v59;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = v59;
  }
  return v7;
}

uint64_t assignWithCopy for WidgetExtensionInfo(uint64_t a1, uint64_t a2, int *a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  void (*v54)(uint64_t, uint64_t, uint64_t);

  v6 = *(void **)a2;
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = v6;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v17 = a3[10];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_1D26CB880();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v21(a1 + a3[11], a2 + a3[11], v20);
  v54 = v21;
  v21(a1 + a3[12], a2 + a3[12], v20);
  v22 = a3[13];
  v23 = (void *)(a1 + v22);
  v24 = (void *)(a2 + v22);
  v25 = sub_1D26CD488();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v23, v24, v25);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v54(a1 + a3[15], a2 + a3[15], v20);
  v31 = a3[16];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v34 = a3[17];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  *v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v37 = a3[18];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)(a2 + v37);
  *v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40 = a3[19];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (_QWORD *)(a2 + v40);
  *v41 = *v42;
  v41[1] = v42[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  v43 = a3[21];
  v44 = (_QWORD *)(a1 + v43);
  v45 = (_QWORD *)(a2 + v43);
  *v44 = *v45;
  v44[1] = v45[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v46 = a3[22];
  v47 = (_QWORD *)(a1 + v46);
  v48 = (_QWORD *)(a2 + v46);
  *v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = a3[27];
  v50 = *(void **)(a1 + v49);
  v51 = *(void **)(a2 + v49);
  *(_QWORD *)(a1 + v49) = v51;
  v52 = v51;

  return a1;
}

uint64_t initializeWithTake for WidgetExtensionInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[7];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[8];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  v14 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1D26CB880();
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32);
  v18(v15, v16, v17);
  v18(a1 + a3[11], a2 + a3[11], v17);
  v18(a1 + a3[12], a2 + a3[12], v17);
  v19 = a3[13];
  v20 = (void *)(a1 + v19);
  v21 = (const void *)(a2 + v19);
  v22 = sub_1D26CD488();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  v18(a1 + v25, a2 + v25, v17);
  v26 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  v27 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  v28 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v28) = *(_OWORD *)(a2 + v28);
  v29 = a3[23];
  *(_OWORD *)(a1 + a3[22]) = *(_OWORD *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[25];
  *(_QWORD *)(a1 + a3[24]) = *(_QWORD *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  v31 = a3[27];
  *(_QWORD *)(a1 + a3[26]) = *(_QWORD *)(a2 + a3[26]);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  return a1;
}

uint64_t assignWithTake for WidgetExtensionInfo(uint64_t a1, _QWORD *a2, int *a3)
{
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t, char *, uint64_t);
  uint64_t v22;
  void *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(void *, uint64_t, uint64_t);
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  void (*v67)(uint64_t, char *, uint64_t);

  v6 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v7 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[4];
  *(_QWORD *)(a1 + 24) = a2[3];
  *(_QWORD *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1D26CBA24();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = a3[8];
  v14 = a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(v14, v15, v16);
  v17 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *((_BYTE *)a2 + a3[9]);
  v18 = a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_1D26CB880();
  v21 = *(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40);
  v21(v18, v19, v20);
  v21(a1 + a3[11], (char *)a2 + a3[11], v20);
  v67 = v21;
  v21(a1 + a3[12], (char *)a2 + a3[12], v20);
  v22 = a3[13];
  v23 = (void *)(a1 + v22);
  v24 = (char *)a2 + v22;
  v25 = sub_1D26CD488();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  v28 = v27(v23, 1, v25);
  v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, char *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_7:
  v31 = a3[15];
  *(_BYTE *)(a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
  v67(a1 + v31, (char *)a2 + v31, v20);
  v32 = a3[16];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (_QWORD *)((char *)a2 + v32);
  v36 = *v34;
  v35 = v34[1];
  *v33 = v36;
  v33[1] = v35;
  swift_bridgeObjectRelease();
  v37 = a3[17];
  v38 = (_QWORD *)(a1 + v37);
  v39 = (_QWORD *)((char *)a2 + v37);
  v41 = *v39;
  v40 = v39[1];
  *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  v42 = a3[18];
  v43 = (_QWORD *)(a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  v46 = *v44;
  v45 = v44[1];
  *v43 = v46;
  v43[1] = v45;
  swift_bridgeObjectRelease();
  v47 = a3[19];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)((char *)a2 + v47);
  v51 = *v49;
  v50 = v49[1];
  *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  v52 = a3[21];
  *(_QWORD *)(a1 + a3[20]) = *(_QWORD *)((char *)a2 + a3[20]);
  v53 = (_QWORD *)(a1 + v52);
  v54 = (_QWORD *)((char *)a2 + v52);
  v56 = *v54;
  v55 = v54[1];
  *v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  v57 = a3[22];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (_QWORD *)((char *)a2 + v57);
  v61 = *v59;
  v60 = v59[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  v62 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *((_BYTE *)a2 + a3[23]);
  *(_QWORD *)(a1 + v62) = *(_QWORD *)((char *)a2 + v62);
  swift_bridgeObjectRelease();
  v63 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *((_BYTE *)a2 + a3[25]);
  *(_QWORD *)(a1 + v63) = *(_QWORD *)((char *)a2 + v63);
  swift_bridgeObjectRelease();
  v64 = a3[27];
  v65 = *(void **)(a1 + v64);
  *(_QWORD *)(a1 + v64) = *(_QWORD *)((char *)a2 + v64);

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetExtensionInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

