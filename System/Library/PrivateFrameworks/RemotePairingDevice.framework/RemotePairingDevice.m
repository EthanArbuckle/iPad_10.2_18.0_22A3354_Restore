void destroy for PairingConsentCollectionOutcome(void **a1)
{
  void *v1;

  v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF)

}

uint64_t sub_1CF68BE40(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 3u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 4);
}

ValueMetadata *type metadata accessor for RemotePairingError()
{
  return &type metadata for RemotePairingError;
}

uint64_t sub_1CF68BE70(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1CF68BE78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ControlChannelConnectionError.Code.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t ControlChannelConnectionError.Code.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void type metadata accessor for ControlChannelConnectionError.Code()
{
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1CF68BEB4(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

ValueMetadata *type metadata accessor for ControlChannelTransportEvent()
{
  return &type metadata for ControlChannelTransportEvent;
}

uint64_t type metadata accessor for ControlChannelConnection()
{
  uint64_t result;

  result = qword_1ED8F6930;
  if (!qword_1ED8F6930)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1CF68BF18()
{
  sub_1CF68BF40();
  return sub_1CF73F714();
}

unint64_t sub_1CF68BF40()
{
  unint64_t result;

  result = qword_1ED8F77D0;
  if (!qword_1ED8F77D0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnectionError, &type metadata for ControlChannelConnectionError);
    atomic_store(result, (unint64_t *)&qword_1ED8F77D0);
  }
  return result;
}

void destroy for ControlChannelTransportEvent(uint64_t a1)
{
  sub_1CF68BFCC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_WORD *)(a1 + 144));
}

void sub_1CF68BFCC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int16 a19)
{
  int v19;

  v19 = (a19 >> 11) & 3;
  if (v19 == 1)
  {

  }
  else if (!v19)
  {
    sub_1CF6CA3C4(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C,
      (uint64_t (*)(void))sub_1CF6C8BA8,
      (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  }
}

RemotePairingDevice::RemotePairingError __swiftcall RemotePairingError.init(code:userInfo:)(Swift::Int32 code, Swift::OpaquePointer userInfo)
{
  Swift::OpaquePointer *v2;
  RemotePairingDevice::RemotePairingError result;

  v2->_rawValue = (void *)code;
  v2[1]._rawValue = userInfo._rawValue;
  result.errorUserInfo = userInfo;
  LODWORD(result.errorCode) = code;
  return result;
}

uint64_t destroy for FetchNetworkPairingSessionIDResponse()
{
  return swift_bridgeObjectRelease();
}

void sub_1CF68C0A0(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

id static ControlChannelConnectionWireProtocolVersion.current.getter()
{
  return sub_1CF68C5CC(&qword_1ED8F7F18, (id *)&qword_1ED8F7F10);
}

id static ControlChannelConnectionWireProtocolVersion.minimumSupported.getter()
{
  return sub_1CF68C5CC(&qword_1ED8F7910, (id *)&qword_1ED8F7900);
}

void sub_1CF68C0E0(void *a1, unint64_t a2, char a3)
{
  uint64_t v3;

  sub_1CF692A4C(a1, a2, a3 & 1, *(void (**)(_BYTE *))(v3 + 32));
}

void type metadata accessor for ControlChannelConnectionError()
{
  OUTLINED_FUNCTION_31();
}

void ControlChannelConnectionError.code.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

unint64_t sub_1CF68C110()
{
  static ControlChannelConnectionError.errorDomain.getter();
  return 0xD000000000000032;
}

_BYTE *sub_1CF68C12C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

BOOL static HashableByObjectIdentity.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

unsigned int *sub_1CF68C140(unsigned int *result, char a2)
{
  *result = *result & 0xFFFF0101 | ((a2 & 1) << 15);
  return result;
}

void type metadata accessor for ControlChannelConnection.Options()
{
  OUTLINED_FUNCTION_31();
}

void type metadata accessor for ControlChannelConnection.Options.Device()
{
  OUTLINED_FUNCTION_31();
}

RemotePairingDevice::ControlChannelConnection::Options::Device __swiftcall ControlChannelConnection.Options.Device.init(allowsPairSetup:allowsPinlessPairing:allowsIncomingTunnelConnections:allowsPromptlessAutomationPairingUpgrade:allowsSharingSensitiveInfo:)(Swift::Bool allowsPairSetup, Swift::Bool allowsPinlessPairing, Swift::Bool allowsIncomingTunnelConnections, Swift::Bool allowsPromptlessAutomationPairingUpgrade, Swift::Bool allowsSharingSensitiveInfo)
{
  Swift::Bool *v5;
  RemotePairingDevice::ControlChannelConnection::Options::Device result;

  *v5 = allowsPairSetup;
  v5[1] = allowsPinlessPairing;
  v5[2] = allowsIncomingTunnelConnections;
  v5[3] = allowsPromptlessAutomationPairingUpgrade;
  v5[4] = allowsSharingSensitiveInfo;
  result.allowsPairSetup = allowsPairSetup;
  return result;
}

uint64_t dispatch thunk of ControlChannelConnection.start()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1096))();
}

uint64_t dispatch thunk of ControlChannelConnection._connectionSetupCompleteHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of ControlChannelConnection.tunnelListenerCreator.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationReason.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1064))();
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.InvalidationReason(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFFA && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483643);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 4;
  if (v4 >= 6)
    return v5;
  else
    return 0;
}

void type metadata accessor for ControlChannelConnection.InvalidationReason()
{
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1CF68C228()
{
  return sub_1CF73F2E8();
}

ValueMetadata *type metadata accessor for BonjourAdvertFlags()
{
  return &type metadata for BonjourAdvertFlags;
}

uint64_t BonjourAdvertFlags.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void type metadata accessor for BonjourService()
{
  OUTLINED_FUNCTION_31();
}

uint64_t BonjourService.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1CF68C2A0 + 4 * byte_1CF7426A0[*v0]))(0xD000000000000022, 0x80000001CF74FBC0);
}

unint64_t sub_1CF68C2A0()
{
  return OUTLINED_FUNCTION_0(19);
}

uint64_t sub_1CF68C2B8()
{
  return 0x6E6E75742D70725FLL;
}

uint64_t sub_1CF68C2EC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 14;
}

uint64_t dispatch thunk of AtomicCounter.next()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

unint64_t static RemotePairingError.errorDomain.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t sub_1CF68C32C()
{
  static RemotePairingError.errorDomain.getter();
  return 0xD00000000000001FLL;
}

uint64_t static NetworkPairingKeys.authTag.getter()
{
  return 0x67615468747561;
}

uint64_t static NetworkPairingKeys.flags.getter()
{
  return 0x7367616C66;
}

uint64_t static NetworkPairingKeys.minimumSupportedWireProtocolVersion.getter()
{
  return 0x7265566E696DLL;
}

uint64_t static NetworkPairingKeys.wireProtocolVersion.getter()
{
  return 7497078;
}

uint64_t static NetworkPairingKeys.identifier.getter()
{
  return 0x696669746E656469;
}

uint64_t OUTLINED_FUNCTION_87(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_87_1()
{
  return sub_1CF73F780();
}

uint64_t OUTLINED_FUNCTION_87_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_87_3(uint64_t a1)
{
  uint64_t v1;

  return sub_1CF6D233C(a1, *(_QWORD *)(v1 - 224));
}

uint64_t OUTLINED_FUNCTION_87_4()
{
  return sub_1CF73F060();
}

void OUTLINED_FUNCTION_87_5(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_1CF68C41C(uint64_t a1, unsigned int a2)
{
  __int16 v3;

  if (a2 < 2)
  {
    v3 = *(_WORD *)(a1 + 144) & 0xE7FF | ((a2 & 3) << 11);
    *(_QWORD *)a1 &= 0xFFFFFFFFFFFFFF9uLL;
    *(_WORD *)(a1 + 144) = v3;
  }
  else
  {
    *(_QWORD *)a1 = (a2 - 2) & 1 | (8 * ((a2 - 2) >> 1));
    bzero((void *)(a1 + 8), 0x88uLL);
    *(_WORD *)(a1 + 144) = 4096;
  }
}

uint64_t type metadata accessor for ControlChannelConnectionWireProtocolVersion()
{
  return objc_opt_self();
}

BOOL sub_1CF68C4AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v4 = *a2;
  MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnection, a3);
  return static HashableByObjectIdentity.== infix(_:_:)(v3, v4);
}

id sub_1CF68C4F8()
{
  uint64_t v0;
  id result;
  uint64_t v2;

  result = objc_msgSend(*(id *)(v0 + 24), sel_lock);
  v2 = *(_QWORD *)(v0 + 16);
  if (v2 == -1)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v2 + 1;
    objc_msgSend(*(id *)(v0 + 24), sel_unlock);
    return (id)v2;
  }
  return result;
}

void static ControlChannelConnection.defaultMaxReconnectionAttempts.getter()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_26();
}

unint64_t static ControlChannelConnectionError.errorDomain.getter()
{
  sub_1CF73F348();
  swift_bridgeObjectRelease();
  return 0xD000000000000032;
}

id sub_1CF68C5CC(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return *a2;
}

void sub_1CF68C620(void **a1@<X8>)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection_invalidationReason);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  *a1 = *v3;
  sub_1CF68C660(v4);
  OUTLINED_FUNCTION_26();
}

id sub_1CF68C660(id result)
{
  if (result != (id)5)
    return sub_1CF68DA60(result);
  return result;
}

uint64_t ControlChannelConnection.init(transport:queue:options:maxReconnectionAttempts:pairingDataStorageProvider:peerWireProtocolVersion:)(__int128 *a1, uint64_t a2, int *a3, uint64_t a4, __int128 *a5, uint64_t a6)
{
  uint64_t v6;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  v12 = *a3;
  v13 = *((_BYTE *)a3 + 4);
  *(_QWORD *)(v6 + 120) = 0;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_BYTE *)(v6 + 112) = 0;
  *(_OWORD *)(v6 + 248) = 0u;
  *(_QWORD *)(v6 + 176) = 0;
  *(_QWORD *)(v6 + 184) = 0;
  *(_OWORD *)(v6 + 264) = 0u;
  *(_OWORD *)(v6 + 280) = 0u;
  *(_OWORD *)(v6 + 296) = 0u;
  *(_BYTE *)(v6 + 312) = 1;
  *(_OWORD *)(v6 + 368) = 0u;
  *(_OWORD *)(v6 + 384) = 0u;
  *(_OWORD *)(v6 + 336) = 0u;
  *(_OWORD *)(v6 + 352) = 0u;
  *(_OWORD *)(v6 + 320) = 0u;
  *(_BYTE *)(v6 + 520) = 0;
  *(_OWORD *)(v6 + 488) = 0u;
  *(_OWORD *)(v6 + 504) = 0u;
  *(_OWORD *)(v6 + 456) = 0u;
  *(_OWORD *)(v6 + 472) = 0u;
  *(_OWORD *)(v6 + 440) = 0u;
  *(_OWORD *)(v6 + 528) = 0u;
  *(_OWORD *)(v6 + 544) = 0u;
  sub_1CF73EDB4();
  v14 = v6 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions;
  *(_BYTE *)(v14 + 4) = 0;
  *(_DWORD *)v14 = 2;
  v15 = OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__replyHandlers;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F6A00);
  *(_QWORD *)(v6 + v15) = sub_1CF73EE44();
  *(_OWORD *)(v6 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData) = xmmword_1CF743C90;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__transaction) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__userHasDeclinedPairing) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__messageSequenceNumber) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__invalidateCalled) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection_invalidationReason) = 5;
  sub_1CF68C850(a1, v6 + 192);
  *(_QWORD *)(v6 + 232) = a2;
  *(_BYTE *)(v6 + 244) = v13;
  *(_DWORD *)(v6 + 240) = v12;
  *(_QWORD *)(v6 + 560) = a4;
  OUTLINED_FUNCTION_10();
  v16 = *(void **)(v6 + 528);
  *(_QWORD *)(v6 + 528) = a6;

  sub_1CF68C850(a5, v6 + 400);
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_QWORD *)(v6 + 160) = 0;
  *(_BYTE *)(v6 + 168) = 4;
  return v6;
}

uint64_t sub_1CF68C850(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t OUTLINED_FUNCTION_65(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void OUTLINED_FUNCTION_65_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

void OUTLINED_FUNCTION_59(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 - 104));
}

uint64_t OUTLINED_FUNCTION_65_1()
{
  return sub_1CF73F528();
}

uint64_t OUTLINED_FUNCTION_65_2(uint64_t a1)
{
  unint64_t v1;

  return sub_1CF6934BC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_38()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_65_3()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6933C0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_65_4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_65_5()
{
  return sub_1CF73F4A4();
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  return type metadata accessor for PairedHostInfo(0);
}

uint64_t OUTLINED_FUNCTION_118()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_118_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 640) = a1;
  return sub_1CF73F2A0();
}

void OUTLINED_FUNCTION_118_1(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
}

uint64_t remotePairingIsEnabled()
{
  if (os_variant_has_internal_content())
    os_variant_allows_internal_security_policies();
  return 1;
}

uint64_t sub_1CF68C960(uint64_t a1, uint64_t a2)
{
  sub_1CF73F7EC();
  MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnection, a2);
  HashableByObjectIdentity.hash(into:)();
  return sub_1CF73F810();
}

uint64_t HashableByObjectIdentity.hash(into:)()
{
  return sub_1CF73F7F8();
}

uint64_t initializeWithCopy for ControlChannelConnectionError(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(void **)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = v6;
  *(_QWORD *)(a1 + 56) = v6;
  return a1;
}

uint64_t JSONDataBasedControlChannelTransport.startReceivingMessages(usingEventHandler:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  OUTLINED_FUNCTION_12_11();
  v4 = OUTLINED_FUNCTION_16();
  swift_unknownObjectWeakInit();
  v5 = (_QWORD *)OUTLINED_FUNCTION_16();
  v5[2] = v1;
  v5[3] = v0;
  v5[4] = v4;
  v5[5] = v3;
  v5[6] = v2;
  swift_retain();
  swift_retain();
  sub_1CF68CAE4();
  swift_release();
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_1CF68CAE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void (*v7)(uint64_t, uint64_t, void (*)(void *, unint64_t, char), _QWORD *, uint64_t, uint64_t);

  OUTLINED_FUNCTION_12_11();
  if (qword_1ED8F7930 != -1)
    swift_once();
  v5 = qword_1ED8FF0F0;
  v6 = (_QWORD *)OUTLINED_FUNCTION_16();
  v6[2] = v2;
  v6[3] = v0;
  v6[4] = v4;
  v6[5] = v3;
  v6[6] = v1;
  v7 = *(void (**)(uint64_t, uint64_t, void (*)(void *, unint64_t, char), _QWORD *, uint64_t, uint64_t))(v0 + 16);
  swift_retain();
  swift_unknownObjectRetain();
  v7(v5, v5, sub_1CF68C0E0, v6, v2, v0);
  return OUTLINED_FUNCTION_7();
}

uint64_t sub_1CF68CBE4()
{
  sub_1CF68CC2C();
  return sub_1CF73F2D0();
}

unint64_t sub_1CF68CC2C()
{
  unint64_t result;

  result = qword_1ED8F79C8;
  if (!qword_1ED8F79C8)
  {
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEB460], MEMORY[0x1E0DEB418]);
    atomic_store(result, (unint64_t *)&qword_1ED8F79C8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PairingConsentCollectionOutcome(_QWORD *a1, void **a2)
{
  void *v3;
  id v4;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v4 = v3;
  *a1 = v3;
  return a1;
}

void destroy for ControlChannelConnectionError(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_1CF68CCDC()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t (*)(const void *), uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  unint64_t v22;

  v1 = v0;
  v2 = v0[29];
  OS_dispatch_queue.assertOnQueueHierarchy()();
  v17 = 0;
  *(_QWORD *)&v18 = 0xE000000000000000;
  sub_1CF73F348();
  v21 = 0;
  v22 = 0xE000000000000000;
  sub_1CF73EF58();
  sub_1CF68CE44((uint64_t)(v0 + 24), (uint64_t)&v17);
  __swift_project_boxed_opaque_existential_0Tm(&v17, v19);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v17);
  OUTLINED_FUNCTION_351();
  sub_1CF73EF58();
  OUTLINED_FUNCTION_40_0();
  sub_1CF73EF1C();
  OUTLINED_FUNCTION_11_3();
  v3 = os_transaction_create();
  OUTLINED_FUNCTION_260();
  v4 = sub_1CF691920(v3);
  OUTLINED_FUNCTION_141(v4, v5, v6, v7, v8, v9, v10, v11, 1, v18, v19, v20);
  v12 = v1[27];
  v13 = v1[28];
  __swift_project_boxed_opaque_existential_0Tm(v1 + 24, v12);
  v14 = OUTLINED_FUNCTION_16();
  swift_weakInit();
  v15 = *(void (**)(uint64_t, uint64_t (*)(const void *), uint64_t, uint64_t, uint64_t))(v13 + 32);
  OUTLINED_FUNCTION_232();
  v15(v2, sub_1CF693B58, v14, v12, v13);
  return OUTLINED_FUNCTION_13_0();
}

void sub_1CF68CE44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  OUTLINED_FUNCTION_1();
}

void *OUTLINED_FUNCTION_95_0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char aBlock,uint64_t a63)
{
  uint64_t a64;
  uint64_t a65;
  uint64_t v65;
  unint64_t v66;

  a64 = a1;
  a65 = v65;
  STACK[0x200] = v66;
  return _Block_copy(&aBlock);
}

void OUTLINED_FUNCTION_95_1()
{
  uint64_t v0;

  sub_1CF68F110(*(_QWORD *)(v0 + 552), *(_QWORD *)(v0 + 560), (uint64_t *)(v0 + 512));
}

uint64_t OUTLINED_FUNCTION_95_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_95_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_50_0()
{
  return sub_1CF6B0D94();
}

void OUTLINED_FUNCTION_50_1()
{
  uint64_t (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1CF6CA630((__n128 *)&STACK[0x2C8], v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_50_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_50_4()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0 - 240);
}

uint64_t OUTLINED_FUNCTION_50_5()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6934BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_50_7()
{
  return sub_1CF73EF58();
}

uint64_t initializeBufferWithCopyOfBuffer for PinNotificationEvent(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t OPACKDecode(data:)()
{
  void *v0;
  id NSDataTm;
  id v3;
  int v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  v4 = 0;
  v0 = (void *)sub_1CF73E58C();
  NSDataTm = OPACKEncoderCreateNSDataTm(v0, (uint64_t)&v4, MEMORY[0x1E0D1B4C0]);

  if (NSDataTm)
  {
    sub_1CF73F2DC();
    return swift_unknownObjectRelease();
  }
  else
  {
    sub_1CF73EED4();
    v3 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    OUTLINED_FUNCTION_0_12();
    return OUTLINED_FUNCTION_7_4();
  }
}

id OPACKEncoderCreateNSDataTm(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v4;
  id v5;

  v4 = a1;
  v5 = (id)a3();

  return v5;
}

void sub_1CF68D0CC()
{
  _QWORD *v0;
  uint64_t **v1;
  unint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  os_log_type_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  void (*v16)(uint64_t *, double);
  __int128 v17;
  __int128 v18;
  char v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(void);
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(void);
  uint64_t (*v40)(uint64_t, uint64_t);
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  int64_t v50;
  unint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t **v59;
  uint64_t *v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t);
  uint64_t v65;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  int64_t v69;
  _QWORD v70[4];
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t *v79;
  _OWORD v80[2];
  char v81;

  OUTLINED_FUNCTION_167();
  v2 = OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__invalidateCalled;
  if ((*((_BYTE *)v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__invalidateCalled) & 1) == 0)
  {
    v3 = *v1;
    sub_1CF691920(0);
    v4 = 0;
    if ((unint64_t)v3 >= 5)
    {
      v5 = v3;
      v4 = v3;
    }
    v66 = v0;
    v6 = sub_1CF73F0E4();
    if (qword_1ED8F78F8 == -1)
      goto LABEL_5;
LABEL_52:
    swift_once();
LABEL_5:
    v7 = qword_1ED8F78F0;
    if (OUTLINED_FUNCTION_81_0())
    {
      OUTLINED_FUNCTION_233();
      OUTLINED_FUNCTION_121();
      OUTLINED_FUNCTION_233();
      OUTLINED_FUNCTION_121();
      v8 = OUTLINED_FUNCTION_4_7();
      v75 = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v8 = 136446466;
      v9 = OUTLINED_FUNCTION_69_1();
      sub_1CF68F110(v9, v10, &v75);
      v72 = v11;
      OUTLINED_FUNCTION_160();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_11_3();
      *(_WORD *)(v8 + 12) = 2080;
      v72 = (unint64_t)v3;
      OUTLINED_FUNCTION_233();
      v12 = sub_1CF73EF10();
      sub_1CF68F110(v12, v13, &v75);
      v72 = v14;
      OUTLINED_FUNCTION_243();
      OUTLINED_FUNCTION_178();
      sub_1CF68DC48(v3);
      sub_1CF68DC48(v3);
      OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v7, v6, "%{public}s: Invalidating control channel connection due to reason: %s", (uint8_t *)v8);
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_0_1();
    }
    v75 = (uint64_t)v3;
    OUTLINED_FUNCTION_233();
    v15 = v66;
    v6 = v66;
    sub_1CF69254C((void **)&v75);
    *((_BYTE *)v66 + v2) = 1;
    sub_1CF6918B8((uint64_t)&v75);
    v16 = (void (*)(uint64_t *, double))v75;
    v17 = v76;
    v18 = v77;
    v19 = v78;
    if (v78 - 1 >= 2)
    {
      if (v78 == 3)
      {
        v6 = (_BYTE)v66 + 64;
        v25 = OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_378(v25, (uint64_t)&v72, (uint64_t *)&unk_1ED8F7120);
        if (v74)
        {
          sub_1CF68CE44((uint64_t)&v72, (uint64_t)v70);
          sub_1CF6A4E24((uint64_t)&v72, (uint64_t *)&unk_1ED8F7120);
          v26 = v71;
          OUTLINED_FUNCTION_332(v70);
          OUTLINED_FUNCTION_250(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 32));
          sub_1CF68EA18((uint64_t)v16, v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), 3, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v70);
        }
        else
        {
          v34 = OUTLINED_FUNCTION_248();
          sub_1CF68EA18(v34, v35, v36, v37, v38, 3, v39, v40, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
          sub_1CF6A4E24((uint64_t)&v72, (uint64_t *)&unk_1ED8F7120);
        }
      }
      else
      {
        v27 = OUTLINED_FUNCTION_248();
        sub_1CF68EA18(v27, v28, v29, v30, v31, v19, v32, v33, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
      }
    }
    else if (v75)
    {
      *(_QWORD *)&v77 = MEMORY[0x1E0DEA968];
      OUTLINED_FUNCTION_354();
      v75 = 0xD00000000000001ALL;
      *(_QWORD *)&v76 = v20;
      BYTE8(v77) = 1;
      sub_1CF692E68();
      v21 = (void *)OUTLINED_FUNCTION_105();
      v23 = v22;
      LOBYTE(v72) = 1;
      OUTLINED_FUNCTION_41();
      ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v72);
      sub_1CF692EA4((uint64_t)&v75);
      v24 = OUTLINED_FUNCTION_261();
      *(_QWORD *)(v23 + 56) = v4;
      v75 = (uint64_t)v21;
      *(_QWORD *)&v76 = 0;
      BYTE8(v76) = 0;
      v6 = v17;
      v16(&v75, v24);
      sub_1CF68EA18((uint64_t)v16, v17, *((uint64_t *)&v17 + 1), v18, *((uint64_t *)&v18 + 1), v19, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
      v15 = v66;

    }
    v75 = 6;
    v76 = 0u;
    v77 = 0u;
    LOBYTE(v78) = 4;
    v3 = &v75;
    OUTLINED_FUNCTION_98_0(&v75);
    v41 = (char *)v15 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__replyHandlers;
    OUTLINED_FUNCTION_2_0();
    v42 = *(_QWORD *)v41;
    v68 = *(_QWORD *)v41 + 64;
    v43 = 1 << *(_BYTE *)(*(_QWORD *)v41 + 32);
    v44 = -1;
    if (v43 < 64)
      v44 = ~(-1 << v43);
    v45 = v44 & *(_QWORD *)(*(_QWORD *)v41 + 64);
    v69 = (unint64_t)(v43 + 63) >> 6;
    OUTLINED_FUNCTION_54_0();
    v46 = 0;
    v2 = 0x80000001CF751710;
    OUTLINED_FUNCTION_354();
    v67 = v47;
    if (v45)
    {
LABEL_18:
      v48 = __clz(__rbit64(v45));
      v45 &= v45 - 1;
      v49 = v48 | (v46 << 6);
      goto LABEL_39;
    }
    while (1)
    {
      v50 = v46 + 1;
      if (__OFADD__(v46, 1))
      {
        __break(1u);
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      if (v50 >= v69)
        goto LABEL_46;
      v51 = *(_QWORD *)(v68 + 8 * v50);
      ++v46;
      if (!v51)
      {
        v46 = v50 + 1;
        OUTLINED_FUNCTION_366();
        if (v52 == v53)
          goto LABEL_46;
        OUTLINED_FUNCTION_349();
        if (!v51)
        {
          v46 = v54 + 2;
          OUTLINED_FUNCTION_366();
          if (v52 == v53)
            goto LABEL_46;
          OUTLINED_FUNCTION_349();
          if (!v51)
          {
            v46 = v55 + 3;
            OUTLINED_FUNCTION_366();
            if (v52 == v53)
              goto LABEL_46;
            OUTLINED_FUNCTION_349();
            if (!v51)
            {
              v57 = v56 + 4;
              if (v57 >= v69)
              {
LABEL_46:
                OUTLINED_FUNCTION_260();
                OUTLINED_FUNCTION_10();
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F69A8);
                sub_1CF73EE50();
                swift_endAccess();
                v63 = v66[28];
                OUTLINED_FUNCTION_332(v66 + 24);
                OUTLINED_FUNCTION_250(*(uint64_t (**)(uint64_t, uint64_t))(v63 + 48));
                sub_1CF6925A4(0);
                sub_1CF692608(0);
                OUTLINED_FUNCTION_2_0();
                v64 = (void (*)(uint64_t))v66[33];
                if (v64)
                {
                  v65 = OUTLINED_FUNCTION_2_4();
                  v64(v65);
                  OUTLINED_FUNCTION_44_0();
                  sub_1CF693EC8((uint64_t)v64);
                }
                else
                {
                  OUTLINED_FUNCTION_44_0();
                }
                break;
              }
              v51 = *(_QWORD *)(v68 + 8 * v57);
              if (!v51)
              {
                while (1)
                {
                  v46 = v57 + 1;
                  if (__OFADD__(v57, 1))
                    goto LABEL_51;
                  OUTLINED_FUNCTION_366();
                  if (v52 == v53)
                    goto LABEL_46;
                  OUTLINED_FUNCTION_349();
                  v57 = v58 + 1;
                  if (v51)
                    goto LABEL_38;
                }
              }
              v46 = v57;
            }
          }
        }
      }
LABEL_38:
      v45 = (v51 - 1) & v51;
      v49 = __clz(__rbit64(v51)) + (v46 << 6);
LABEL_39:
      v59 = (uint64_t **)(*(_QWORD *)(v42 + 56) + 16 * v49);
      v3 = *v59;
      v60 = v59[1];
      v70[3] = MEMORY[0x1E0DEA968];
      v70[0] = 0xD00000000000001ALL;
      v70[1] = 0x80000001CF751710;
      LOBYTE(v71) = 1;
      sub_1CF69317C((uint64_t)v70, (uint64_t)v80);
      if (v81)
      {
        if (v81 == 1)
        {
          sub_1CF68E2E4(v80, &v75);
          sub_1CF68F1EC((uint64_t)&v75, (uint64_t)&v72);
          OUTLINED_FUNCTION_41();
          OUTLINED_FUNCTION_83();
          sub_1CF73EF10();
          v72 = 0xD000000000000016;
          v73 = v67;
          sub_1CF73EF58();
          OUTLINED_FUNCTION_57();
          v61 = v72;
          v62 = v73;
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v75);
        }
        else
        {
          OUTLINED_FUNCTION_41();
          OUTLINED_FUNCTION_83();
          v61 = 0xD000000000000014;
          v62 = 0x80000001CF751750;
        }
      }
      else
      {
        v62 = *((_QWORD *)&v80[0] + 1);
        v61 = *(_QWORD *)&v80[0];
        OUTLINED_FUNCTION_41();
        OUTLINED_FUNCTION_83();
      }
      sub_1CF692EA4((uint64_t)v70);
      LOBYTE(v75) = 1;
      *(_QWORD *)&v76 = v61;
      *((_QWORD *)&v76 + 1) = v62;
      v77 = 0u;
      v78 = 0u;
      v79 = v4;
      sub_1CF6C8CA0((uint64_t)&v75);
      sub_1CF6C8CAC(&v75, &v72);
      v6 = v60;
      ((void (*)(unint64_t *))v3)(&v72);
      OUTLINED_FUNCTION_269();
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_357();
      OUTLINED_FUNCTION_44_0();
      if (v45)
        goto LABEL_18;
    }
  }
  OUTLINED_FUNCTION_17();
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  return sub_1CF73F408();
}

uint64_t OUTLINED_FUNCTION_16()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_105()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_121()
{
  return swift_retain();
}

unint64_t OUTLINED_FUNCTION_0(uint64_t a1)
{
  return a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
}

uint64_t OUTLINED_FUNCTION_4_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t (*v9)(void);
  uint64_t (*v10)(uint64_t, uint64_t);

  return sub_1CF68E984(a1, a2, a3, a4, a5, 4, v9, v10, a9);
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  return sub_1CF73F264();
}

uint64_t OUTLINED_FUNCTION_10()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return 0x726F727265;
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_4_6(uint64_t a1, uint64_t a2)
{
  return sub_1CF6AFF74(a1, a2, 0, 0, 0, 0, 1);
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_33(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return sub_1CF73F408();
}

unint64_t OUTLINED_FUNCTION_4_9()
{
  return sub_1CF6ABB3C();
}

uint64_t OUTLINED_FUNCTION_4_10()
{
  return swift_release();
}

void OUTLINED_FUNCTION_4_11()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1CF6DC3F0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_12(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return sub_1CF6934BC(*(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32));
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  return sub_1CF73F4A4();
}

uint64_t OUTLINED_FUNCTION_4_14()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 280) + 8))(v0, *(_QWORD *)(v1 - 352));
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return 1032;
}

uint64_t OUTLINED_FUNCTION_4_17()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  return sub_1CF73F408();
}

uint64_t OUTLINED_FUNCTION_4_19()
{
  return sub_1CF73F4A4();
}

uint64_t OUTLINED_FUNCTION_4_20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,char a48)
{
  return sub_1CF6F5490((uint64_t)&a48, (uint64_t)&a29);
}

uint64_t OUTLINED_FUNCTION_4_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 264))(a1, a2, v2);
}

id sub_1CF68DA60(id result)
{
  if ((unint64_t)result >= 5)
    return result;
  return result;
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_3_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t (*v9)(void);
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  return sub_1CF68E984(a1, 0, 0, 0, v11, 4, v9, v10, a9);
}

uint64_t OUTLINED_FUNCTION_3_5@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void OUTLINED_FUNCTION_3_6()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 16));
}

uint64_t OUTLINED_FUNCTION_3_7()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_0_1()
{
  JUMPOUT(0x1D17D3ED0);
}

void OUTLINED_FUNCTION_271()
{
  const void *v0;

  _Block_release(v0);
}

void OUTLINED_FUNCTION_3_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  a11 = a1;
  a12 = a2;
  sub_1CF6CDEB0((uint64_t)&a11);
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_9()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_3_12@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 120) = a1;
  return sub_1CF73F4BC();
}

uint64_t OUTLINED_FUNCTION_3_13()
{
  return type metadata accessor for PairableHostInfo(0);
}

uint64_t OUTLINED_FUNCTION_3_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1CF6E1C78(v0, v1, v2, 2);
}

uint64_t OUTLINED_FUNCTION_3_16@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

void OUTLINED_FUNCTION_3_18(uint64_t a1, ...)
{
  uint64_t v1;
  uint64_t v2;
  va_list va;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v2 = va_arg(va1, _QWORD);
  v4 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  sub_1CF6AF684((uint64_t)va, v1, (uint64_t)va1);
}

uint64_t OUTLINED_FUNCTION_54()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_3_19()
{
  return sub_1CF6ABB3C();
}

uint64_t OUTLINED_FUNCTION_3_20()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_3_21()
{
  return sub_1CF73F774();
}

uint64_t OUTLINED_FUNCTION_3_22@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_3_23(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
  uint64_t (*v29)(char *);

  return v29(&a29);
}

void sub_1CF68DC48(id a1)
{
  if ((unint64_t)a1 >= 5)

}

void sub_1CF68DC58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[4];

  if ((a3 & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v3 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v3 = &qword_1ED8F6AE0;
  }
  v4 = (id)*v3;
  v5 = (void *)sub_1CF73EEB0();
  v6 = objc_msgSend(v4, sel_valueForKey_, v5);

  if (v6)
  {
    OUTLINED_FUNCTION_61();
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_60();
  }
  v7 = sub_1CF690FD4((uint64_t)v14);
  OUTLINED_FUNCTION_45(v7, &qword_1ED8F7C80, v8, v9, v10, v11, v12, v13, v14[0]);
  OUTLINED_FUNCTION_5();
}

uint64_t CUPairedPeer.initialPairingTime.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int EnumTagSinglePayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF68E328(a1, (uint64_t)v4);
  v5 = sub_1CF73E61C();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5);
  if (EnumTagSinglePayload == 1)
  {
    sub_1CF68DE94((uint64_t)v4, &qword_1ED8F68A0);
    v7 = 0;
  }
  else
  {
    sub_1CF73E610();
    v9 = v8;
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v7 = v9;
  }
  sub_1CF68DEDC(v7, EnumTagSinglePayload == 1, 0xD000000000000020, 0x80000001CF753E80, MEMORY[0x1E0DEB070]);
  return sub_1CF68DE94(a1, &qword_1ED8F68A0);
}

uint64_t sub_1CF68DE94(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

void sub_1CF68DEDC(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  void *v8;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v8 = v5;
  if (!sub_1CF6EFB38(v8, (SEL *)&selRef_info))
    sub_1CF73EE44();
  v11 = OUTLINED_FUNCTION_23_7();
  if ((a2 & 1) != 0)
    OUTLINED_FUNCTION_15_12(v11, v12, v13, v14, v15, v16, v17, v18, 0, 0, 0, 0, v20);
  else
    OUTLINED_FUNCTION_15_12(v11, v12, v13, v14, v15, v16, v17, v18, a1, a4, v19, a5, v20);
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_13_10();
}

uint64_t sub_1CF68DF90()
{
  _OWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_21_2();
  v0 = (_OWORD *)OUTLINED_FUNCTION_12_4();
  sub_1CF68DFBC(v0, v1);
  OUTLINED_FUNCTION_39_1(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_10_6();
}

void sub_1CF68DFBC(_OWORD *a1, uint64_t a2)
{
  _QWORD **v2;
  unint64_t v5;
  char v6;
  char v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _OWORD *v13;
  _OWORD *v14;
  _BYTE v15[40];

  sub_1CF68E0D0(a2);
  OUTLINED_FUNCTION_41_3();
  if (v7)
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v5;
  v9 = v6;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F69E0);
  if ((sub_1CF73F420() & 1) == 0)
    goto LABEL_5;
  v10 = sub_1CF68E0D0(a2);
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_9:
    sub_1CF73F6FC();
    __break(1u);
    return;
  }
  v8 = v10;
LABEL_5:
  v12 = *v2;
  if ((v9 & 1) != 0)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v12[7] + 32 * v8);
    v13 = (_OWORD *)OUTLINED_FUNCTION_69();
    sub_1CF68E2E4(v13, v14);
  }
  else
  {
    sub_1CF68E1C4(a2, (uint64_t)v15);
    sub_1CF68E200(v8, (uint64_t)v15, a1, v12);
  }
}

unint64_t sub_1CF68E0D0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CF73F318();
  return sub_1CF68E100(a1, v2);
}

unint64_t sub_1CF68E100(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_1CF68E1C4(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x1D17D2F34](v9, a1);
      sub_1CF68E2F4((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_1CF68E1C4(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

void sub_1CF68E200(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v5 = a4[6] + 40 * a1;
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v5 + 32) = *(_QWORD *)(a2 + 32);
  sub_1CF68E2E4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v7 = a4[2];
  v8 = __OFADD__(v7, 1);
  v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    a4[2] = v9;
    OUTLINED_FUNCTION_1();
  }
}

void sub_1CF68E274(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1CF68E2E4((_OWORD *)a1, v10);
    sub_1CF68DF90();
    sub_1CF68E2F4(a2);
  }
  else
  {
    OUTLINED_FUNCTION_36_2(a1);
    sub_1CF703C80(a2, v3, v4, v5, v6, v7, v8, v9, *(uint64_t *)&v10[0], *((uint64_t *)&v10[0] + 1));
    sub_1CF68E2F4(a2);
    OUTLINED_FUNCTION_36_2((uint64_t)v10);
  }
  OUTLINED_FUNCTION_5();
}

_OWORD *sub_1CF68E2E4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1CF68E2F4(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 8))();
  return a1;
}

uint64_t sub_1CF68E328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1CF68E370(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  Swift::String v36;
  NSObject *log;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  char v47;

  v2 = v1;
  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_BYTE *)(a1 + 40);
  OS_dispatch_queue.assertOnQueueHierarchy()();
  v9 = sub_1CF73F0E4();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v10 = qword_1ED8F78F0;
  swift_retain_n();
  if (os_log_type_enabled(v10, v9))
  {
    swift_retain();
    sub_1CF68EA18(v3, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
    swift_retain();
    sub_1CF68EA18(v3, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
    log = v10;
    v11 = swift_slowAlloc();
    v38 = swift_slowAlloc();
    *(_QWORD *)&v39 = v38;
    *(_DWORD *)v11 = 136446722;
    v12 = sub_1CF6B5B0C();
    sub_1CF68F110(v12, v13, (uint64_t *)&v39);
    *(_QWORD *)&v44 = v14;
    sub_1CF73F2A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    *(_QWORD *)&v44 = v3;
    *((_QWORD *)&v44 + 1) = v4;
    *(_QWORD *)&v45 = v5;
    *((_QWORD *)&v45 + 1) = v6;
    v46 = v7;
    v47 = v8;
    sub_1CF68EA18(v3, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
    v15 = sub_1CF73EF10();
    sub_1CF68F110(v15, v16, (uint64_t *)&v39);
    *(_QWORD *)&v44 = v17;
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();
    sub_1CF68EA18(v3, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    sub_1CF68EA18(v3, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    *(_WORD *)(v11 + 22) = 2082;
    swift_beginAccess();
    v18 = *(_QWORD *)(v2 + 136);
    v19 = *(_QWORD *)(v2 + 144);
    v20 = *(_QWORD *)(v2 + 152);
    v21 = *(_QWORD *)(v2 + 160);
    v22 = *(_BYTE *)(v2 + 168);
    *(_QWORD *)&v44 = *(_QWORD *)(v2 + 128);
    *((_QWORD *)&v44 + 1) = v18;
    *(_QWORD *)&v45 = v19;
    *((_QWORD *)&v45 + 1) = v20;
    v46 = v21;
    v47 = v22;
    sub_1CF68EA18(v44, v18, v19, v20, v21, v22, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
    v23 = sub_1CF73EF10();
    sub_1CF68F110(v23, v24, (uint64_t *)&v39);
    *(_QWORD *)&v44 = v25;
    sub_1CF73F2A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CF67E000, log, v9, "%{public}s: ControlChannel connection state changing from %{public}s to %{public}s", (uint8_t *)v11, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1D17D3ED0](v38, -1, -1);
    MEMORY[0x1D17D3ED0](v11, -1, -1);
  }
  else
  {
    swift_release_n();
  }
  swift_beginAccess();
  v26 = *(_QWORD *)(v2 + 160);
  v27 = *(_BYTE *)(v2 + 168);
  v28 = *(_OWORD *)(v2 + 144);
  v44 = *(_OWORD *)(v2 + 128);
  v45 = v28;
  v46 = v26;
  v47 = v27;
  *(_QWORD *)&v39 = v3;
  *((_QWORD *)&v39 + 1) = v4;
  v40 = v5;
  v41 = v6;
  v42 = v7;
  v43 = v8;
  sub_1CF68F684();
  if ((v29 & 1) == 0)
  {
    *(_QWORD *)&v44 = 0;
    *((_QWORD *)&v44 + 1) = 0xE000000000000000;
    sub_1CF73F348();
    v39 = v44;
    sub_1CF73EF58();
    v30 = *(_QWORD *)(v2 + 160);
    v31 = *(_BYTE *)(v2 + 168);
    v32 = *(_OWORD *)(v2 + 144);
    v44 = *(_OWORD *)(v2 + 128);
    v45 = v32;
    v46 = v30;
    v47 = v31;
    sub_1CF73F408();
    *((_QWORD *)&v45 + 1) = MEMORY[0x1E0DEA968];
    v44 = v39;
    LOBYTE(v46) = 1;
    sub_1CF692E68();
    v33 = (void *)swift_allocError();
    v35 = v34;
    LOBYTE(v39) = 1;
    v36 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v39);
    sub_1CF692EA4((uint64_t)&v44);
    *(_BYTE *)v35 = 1;
    *(Swift::String *)(v35 + 8) = v36;
    *(_OWORD *)(v35 + 24) = 0u;
    *(_OWORD *)(v35 + 40) = 0u;
    *(_QWORD *)(v35 + 56) = 0;
    sub_1CF6926B8(v33);

  }
}

uint64_t _s5StateOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1CF68E984(*(_QWORD *)a2, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t _s5StateOwxx(uint64_t a1)
{
  return sub_1CF68E984(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40), (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
}

uint64_t sub_1CF68E984(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  switch(a6)
  {
    case 0:
      ((void (*)(uint64_t, uint64_t))a7)(a2, a3);
      result = a8(a4, a5);
      break;
    case 1:
    case 2:
      result = a7();
      break;
    case 3:
      result = a9(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1CF68EA18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  switch(a6)
  {
    case 0:
      ((void (*)(uint64_t, uint64_t))a7)(a2, a3);
      result = a8(a4, a5);
      break;
    case 1:
    case 2:
      result = a7();
      break;
    case 3:
      result = a9(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t OS_dispatch_queue.parentQueue.getter()
{
  void *v0;
  id v1;
  uint64_t v3;
  _OWORD v4[2];
  _BYTE v5[24];
  uint64_t v6;

  OUTLINED_FUNCTION_1_16();
  v1 = objc_getAssociatedObject(v0, &unk_1EFBA2EC0);
  swift_endAccess();
  if (v1)
  {
    sub_1CF73F2DC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v4, 0, sizeof(v4));
  }
  sub_1CF68EB78((uint64_t)v4, (uint64_t)v5);
  if (v6)
  {
    sub_1CF68F3BC();
    if (swift_dynamicCast())
      return v3;
  }
  else
  {
    sub_1CF68F37C((uint64_t)v5);
  }
  return 0;
}

uint64_t sub_1CF68EB78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D17D3DD4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

Swift::Void __swiftcall OS_dispatch_queue.assertOnQueueHierarchy()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  id v7;
  char v8;
  void *v9;

  v1 = sub_1CF73EDF0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_34();
  v5 = (_QWORD *)(v4 - v3);
  v6 = OS_dispatch_queue.parentQueue.getter();
  if (v6)
  {
    v9 = (void *)v6;
    OS_dispatch_queue.assertOnQueueHierarchy()();

  }
  else
  {
    *v5 = v0;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E0DEF740], v1);
    v7 = v0;
    v8 = sub_1CF73EE08();
    (*(void (**)(_QWORD *, uint64_t))(v2 + 8))(v5, v1);
    if ((v8 & 1) == 0)
      __break(1u);
  }
}

void OUTLINED_FUNCTION_0_2(void *a1, int a2, os_log_t log, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_1_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_7()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_0_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  return sub_1CF68E984(v10, v13, v11, v12, a5, v9, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_0_6()
{
  return sub_1CF73F264();
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return sub_1CF73F774();
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6933C0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_0_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  return sub_1CF73F450();
}

uint64_t OUTLINED_FUNCTION_0_11(uint64_t a1, uint64_t a2)
{
  return sub_1CF6AFF74(a1, a2, 0, 0, 0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_146(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

id OUTLINED_FUNCTION_0_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1CF6CD8C4(v0, v1, v2, 0);
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_13()
{
  return sub_1CF73F774();
}

char *OUTLINED_FUNCTION_0_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  return &a17;
}

uint64_t OUTLINED_FUNCTION_0_15()
{
  return sub_1CF73F4A4();
}

uint64_t OUTLINED_FUNCTION_0_16()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6933C0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6933C0(v0, v1);
}

void OUTLINED_FUNCTION_0_20(__n128 *a1@<X8>, __n128 a2@<Q0>)
{
  *a1 = a2;
  a1[1].n128_u8[0] = 0;
}

uint64_t OUTLINED_FUNCTION_0_21()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_22()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_0_23()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_0_24()
{
  return sub_1CF73F774();
}

uint64_t OUTLINED_FUNCTION_0_25()
{
  return type metadata accessor for DiscoveredBonjourAdvert();
}

void OUTLINED_FUNCTION_1_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t OUTLINED_FUNCTION_1_2()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_1_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  char v9;
  uint64_t (*v10)(void);
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  return sub_1CF68E984(v13, v15, a3, v14, v12, v9, v10, v11, a9);
}

uint64_t OUTLINED_FUNCTION_1_4(uint64_t a1, unint64_t *a2)
{
  return sub_1CF6AA174(0, a2);
}

unint64_t OUTLINED_FUNCTION_1_5()
{
  return sub_1CF6AA5E0();
}

uint64_t OUTLINED_FUNCTION_1_6@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_1_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1CF6AFF74(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t OUTLINED_FUNCTION_297()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6933C0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return sub_1CF73F780();
}

void *OUTLINED_FUNCTION_1_9@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  a4 = a1;
  a5 = v5;
  return _Block_copy(&a2);
}

uint64_t OUTLINED_FUNCTION_1_10()
{
  return sub_1CF73F5C4();
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  return sub_1CF73F5F4();
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  return _s5StateVMa();
}

uint64_t OUTLINED_FUNCTION_1_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_1_15()
{
  return sub_1CF6EF0E8();
}

uint64_t OUTLINED_FUNCTION_1_16()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_1_17(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

uint64_t *OUTLINED_FUNCTION_1_18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return &a9;
}

uint64_t OUTLINED_FUNCTION_1_19()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_1_20()
{
  return sub_1CF73F780();
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  return sub_1CF73F774();
}

uint64_t OUTLINED_FUNCTION_1_22()
{
  uint64_t v0;

  return sub_1CF73155C(*(_QWORD *)(v0 - 256), *(_QWORD *)(v0 - 368) + *(int *)(*(_QWORD *)(v0 - 376) + 20));
}

uint64_t OUTLINED_FUNCTION_1_23(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(*(_QWORD *)(v1 - 208), a1);
}

void sub_1CF68F110(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[3];
  uint64_t ObjectType;

  v6 = sub_1CF68F228(v10, 0, 0, 1, a1, a2);
  if (v6)
  {
    v7 = v6;
    ObjectType = swift_getObjectType();
    v10[0] = v7;
    v8 = *a3;
    if (*a3)
    {
      sub_1CF68F1EC((uint64_t)v10, *a3);
      *a3 = v8 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x1E0DEC2B8];
    v10[0] = a1;
    v10[1] = a2;
    v9 = *a3;
    if (*a3)
    {
      sub_1CF68F1EC((uint64_t)v10, *a3);
      *a3 = v9 + 32;
    }
    OUTLINED_FUNCTION_275();
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v10);
  OUTLINED_FUNCTION_186();
}

uint64_t __swift_destroy_boxed_opaque_existential_0Tm(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1CF68F1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1CF68F228(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_1CF6C889C((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_1CF73F2AC();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_1CF68F3F8(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_1CF73F390();
    if (!v8)
    {
      result = sub_1CF73F444();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_1CF68F37C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1CF68F3BC()
{
  unint64_t result;

  result = qword_1ED8F7A30;
  if (!qword_1ED8F7A30)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8F7A30);
  }
  return result;
}

uint64_t sub_1CF68F3F8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1CF68F48C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_1CF6C8960(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_1CF6C8960((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1CF68F48C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_1CF73EF64();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x1E0DEE9D8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x1E0DEE9D8];
LABEL_6:
  sub_1CF68F5FC(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_1CF73F354();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return v4;
  }
  sub_1CF73F480();
  __break(1u);
LABEL_14:
  result = sub_1CF73F444();
  __break(1u);
  return result;
}

void sub_1CF68F5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7C60);
    v4 = (_QWORD *)swift_allocObject();
    v5 = _swift_stdlib_malloc_size(v4);
    v4[2] = a1;
    v4[3] = 2 * v5 - 64;
  }
  OUTLINED_FUNCTION_1();
}

_QWORD *__swift_project_boxed_opaque_existential_0Tm(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

void sub_1CF68F684()
{
  __asm { BR              X10 }
}

BOOL sub_1CF68F6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(void);
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(void);
  uint64_t (*v48)(void);
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;

  if (v5 != 3)
  {
    if (v5 == 4)
    {
      OUTLINED_FUNCTION_41_2();
      if (v17 && !v16)
      {
        v18 = a5;
        if ((v15 & 1) == 0)
        {
          sub_1CF6A3AE0(v9);
          OUTLINED_FUNCTION_45_1();
          OUTLINED_FUNCTION_26_0();
          OUTLINED_FUNCTION_3_4(2, v19, v20, v21, v22, v23, v24, v25, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
          v26 = v7;
          v27 = v9;
          v28 = v6;
          v29 = v14;
          v30 = v8;
LABEL_17:
          sub_1CF68E984(v26, v27, v28, v29, v30, 0, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
          return 1;
        }
        v61 = OUTLINED_FUNCTION_8_0();
        sub_1CF6A3AE0(v9);
        OUTLINED_FUNCTION_45_1();
        OUTLINED_FUNCTION_23_1();
        OUTLINED_FUNCTION_2_6(2, 0, 0, 0, v18, 4, v62, v63, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
        v64 = OUTLINED_FUNCTION_30_1();
        OUTLINED_FUNCTION_2_6(v64, v86, v87, v88, v89, 0, v90, v91, v92);
        return (v61 & 1) != 0;
      }
      if (v10 == (uint64_t (*)(uint64_t, uint64_t))5 && !v16)
      {
        OUTLINED_FUNCTION_18_1();
        v51 = v6;
        OUTLINED_FUNCTION_4_2(5, 0, 0, 0, v9, v52, v53, v54, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
LABEL_16:
        v26 = v8;
        v27 = v11;
        v28 = v51;
        v29 = v14;
        v30 = v12;
        goto LABEL_17;
      }
      if (v10 == (uint64_t (*)(uint64_t, uint64_t))8 && !v16)
      {
        OUTLINED_FUNCTION_18_1();
        v51 = v6;
        OUTLINED_FUNCTION_4_2(8, 0, 0, 0, v9, v65, v66, v67, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
        goto LABEL_16;
      }
    }
    v93 = v13;
    v69 = v13;
    v94 = v12;
    v70 = v12;
    v71 = a5;
    v72 = v5;
    sub_1CF68E984((uint64_t)v10, v69, v11, v70, a5, v5, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
    OUTLINED_FUNCTION_40_2();
    sub_1CF68E984(v73, v74, v75, v76, v77, v78, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
    sub_1CF68E984((uint64_t)v10, v93, v11, v94, v71, v72, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    OUTLINED_FUNCTION_40_2();
    sub_1CF68E984(v79, v80, v81, v82, v83, v84, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    return 0;
  }
  v31 = OUTLINED_FUNCTION_16_2();
  v33 = v32;
  sub_1CF68E984(v31, v34, v35, v36, v32, 3, v37, v38, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
  OUTLINED_FUNCTION_40_2();
  sub_1CF68E984(v39, v40, v41, v42, v43, v44, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
  v45 = OUTLINED_FUNCTION_37_1();
  v46 = v33;
  v48 = v47;
  OUTLINED_FUNCTION_25_1(v45, v49, v11, v12, v46, 3, v47, v50, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  OUTLINED_FUNCTION_40_2();
  sub_1CF68E984(v55, v56, v57, v58, v59, v60, v48, v10, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  return 1;
}

#error "1CF690530: call analysis failed (funcsize=13)"

#error "1CF6905AC: call analysis failed (funcsize=12)"

#error "1CF6906FC: call analysis failed (funcsize=29)"

void sub_1CF69084C()
{
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_28_2();
  JUMPOUT(0x1CF690A98);
}

#error "1CF690B84: call analysis failed (funcsize=25)"

uint64_t OUTLINED_FUNCTION_8_0()
{
  return sub_1CF73F690();
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  return sub_1CF73F78C();
}

uint64_t OUTLINED_FUNCTION_8_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return sub_1CF73F480();
}

uint64_t OUTLINED_FUNCTION_20()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_357()
{
  return swift_release();
}

void OUTLINED_FUNCTION_8_4()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_8_5()
{
  return sub_1CF73EF58();
}

void OUTLINED_FUNCTION_8_6(uint64_t a1)
{
  os_unfair_lock_lock(*(os_unfair_lock_t *)(a1 + 16));
}

uint64_t OUTLINED_FUNCTION_8_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_8_8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_8_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_8_10()
{
  uint64_t v0;

  return sub_1CF6934BC(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
}

uint64_t OUTLINED_FUNCTION_8_11@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_58()
{
  return swift_release();
}

unint64_t OUTLINED_FUNCTION_8_12(uint64_t a1)
{
  char v1;

  return a1 & 0xFFFFFFFFFFFFFFFCLL | v1 & 3;
}

uint64_t OUTLINED_FUNCTION_8_13()
{
  return sub_1CF73F330();
}

unint64_t OUTLINED_FUNCTION_8_14()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 160);
  *(_QWORD *)(v0 - 128) = *(_QWORD *)(v0 - 168);
  *(_QWORD *)(v0 - 120) = v1;
  return sub_1CF6ABB3C();
}

uint64_t OUTLINED_FUNCTION_8_15@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v1, v2);
}

void OUTLINED_FUNCTION_8_16()
{
  unint64_t v0;
  void *v1;

  sub_1CF6CE874(v1, v0, 0);
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_36(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  sub_1CF699F74(a1, a2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a3, a4);
}

uint64_t OUTLINED_FUNCTION_36_0()
{
  return sub_1CF73E748();
}

uint64_t OUTLINED_FUNCTION_36_1()
{
  return 7;
}

void OUTLINED_FUNCTION_36_2(uint64_t a1)
{
  uint64_t *v1;

  sub_1CF693ED8(a1, v1);
}

void OUTLINED_FUNCTION_36_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  sub_1CF68E274((uint64_t)&a51, (uint64_t)&a69);
}

uint64_t OUTLINED_FUNCTION_64()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_305()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_36_4()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6934BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_36_6(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

void OUTLINED_FUNCTION_36_7(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  sub_1CF693ED8((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_36_8()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_32(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_23()
{
  return sub_1CF73F858();
}

uint64_t OUTLINED_FUNCTION_32_0()
{
  return sub_1CF73F57C();
}

uint64_t OUTLINED_FUNCTION_63(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_122@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_32_3()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return sub_1CF73F5F4();
}

uint64_t OUTLINED_FUNCTION_32_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_destroy_boxed_opaque_existential_0Tm(v2 - 128);
  return (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v1 + 16))(v0, *(_QWORD *)(v2 - 216), *(_QWORD *)(v2 - 200));
}

uint64_t OUTLINED_FUNCTION_32_6()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_32_7()
{
  return sub_1CF73EEA4();
}

void OUTLINED_FUNCTION_32_8(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 - 136));
}

uint64_t OUTLINED_FUNCTION_32_9@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_1CF690F68(uint64_t a1, void *a2)
{
  id v3;

  v3 = (id)sub_1CF73EE14();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setInfo_, v3);

}

uint64_t sub_1CF690FD4(uint64_t a1)
{
  _BYTE v2[40];

  sub_1CF691028(a1, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  if (OUTLINED_FUNCTION_53())
    return v2[39];
  else
    return 2;
}

uint64_t sub_1CF691028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static Defaults.deviceAllowTCPControlChannels.getter()
{
  if (qword_1ED8F79A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  return sub_1CF68E984(v21, v24, v22, a20, v23, v20, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_7_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_7_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_7_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

void *OUTLINED_FUNCTION_7_6@<X0>(uint64_t a1@<X8>, uint64_t a2, char aBlock, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  a5 = a1;
  a6 = v6;
  return _Block_copy(&aBlock);
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6933C0(v0, v1);
}

unint64_t OUTLINED_FUNCTION_7_8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 88) = a1;
  *(_BYTE *)(v1 - 65) = 0;
  return sub_1CF6DBF94();
}

uint64_t OUTLINED_FUNCTION_7_9()
{
  return _s5StateVMa();
}

uint64_t OUTLINED_FUNCTION_7_10()
{
  return sub_1CF73F648();
}

uint64_t OUTLINED_FUNCTION_7_11@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_7_12()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_7_14()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_7_16()
{
  return sub_1CF73F768();
}

uint64_t OUTLINED_FUNCTION_7_17(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t OUTLINED_FUNCTION_7_18()
{
  return sub_1CF73ED24();
}

uint64_t OUTLINED_FUNCTION_11()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_27()
{
  return sub_1CF73E664();
}

uint64_t OUTLINED_FUNCTION_58_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_96()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return sub_1CF73F690();
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return 0x656C74746F726874;
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return sub_1CF73F480();
}

uint64_t OUTLINED_FUNCTION_11_5(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_11_6()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1CF6AE9B0(v1, v0);
}

void OUTLINED_FUNCTION_11_7()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1CF6DFC54(v3 + *(int *)(v2 + 20), v1, v0);
}

uint64_t OUTLINED_FUNCTION_21()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_11_8()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_11_9()
{
  return sub_1CF73F648();
}

uint64_t OUTLINED_FUNCTION_11_10()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_11_11()
{
  return sub_1CF73F57C();
}

uint64_t OUTLINED_FUNCTION_9_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_69()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return sub_1CF73E700();
}

void OUTLINED_FUNCTION_44_0()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return sub_1CF73F690();
}

unint64_t OUTLINED_FUNCTION_9_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  uint64_t v23;

  *(_QWORD *)(v23 - 128) = a22;
  *(_QWORD *)(v23 - 120) = a23;
  return sub_1CF6ABB3C();
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_9_4()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  return sub_1CF73F5F4();
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  return sub_1CF73F738();
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_9_9(uint64_t a1, uint64_t a2)
{
  sub_1CF6EF2BC(a1, a2);
}

void OUTLINED_FUNCTION_9_10()
{
  sub_1CF6C6D14();
}

uint64_t OUTLINED_FUNCTION_9_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_9_12()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_9_13@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

unint64_t OUTLINED_FUNCTION_9_14()
{
  return sub_1CF6ABB3C();
}

uint64_t OUTLINED_FUNCTION_9_15()
{
  return sub_1CF73F57C();
}

uint64_t sub_1CF691484(const void *a1)
{
  uint64_t result;
  _BYTE v2[152];
  _BYTE v3[152];

  sub_1CF6CAAD0(a1, v3);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CF6CAAD0(v3, v2);
    sub_1CF6914FC(v2);
    return swift_release();
  }
  return result;
}

void sub_1CF6914FC(const void *a1)
{
  char *v1;
  _BYTE v2[152];
  _BYTE v3[152];

  sub_1CF6CAAD0(a1, v2);
  sub_1CF6CAAD0(v2, v3);
  v1 = (char *)sub_1CF691554 + 4 * byte_1CF743386[sub_1CF6CAB0C((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1CF691554()
{
  uint64_t v0;
  const void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[19];
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v1 = (const void *)sub_1CF6CAB34(v0 - 200);
  v2 = OUTLINED_FUNCTION_168(v22, v1);
  OUTLINED_FUNCTION_345((uint64_t)v2, v3, v4, v5, v6, v7, v8, v9, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22[0],
    v22[1],
    v22[2],
    v22[3],
    v22[4],
    v22[5],
    v22[6],
    v22[7],
    v22[8],
    v22[9],
    v22[10],
    v22[11],
    v22[12],
    v22[13],
    v22[14],
    v22[15],
    v22[16],
    v22[17],
    v22[18],
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42);
  v10 = (__n128 *)sub_1CF6CAB34((uint64_t)&v23);
  sub_1CF6CA630(v10, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  sub_1CF6B70C8();
  return sub_1CF6CAB44((uint64_t)&v42);
}

void sub_1CF691788(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  _QWORD v33[5];
  char v34;

  v2 = *a1;
  v3 = a1[1];
  v32 = *((_OWORD *)a1 + 1);
  v4 = a1[4];
  v5 = *((_BYTE *)a1 + 40);
  OUTLINED_FUNCTION_10();
  v6 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 136);
  v8 = *(_QWORD *)(v1 + 144);
  v9 = *(_QWORD *)(v1 + 152);
  v10 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 128) = v2;
  *(_QWORD *)(v1 + 136) = v3;
  *(_OWORD *)(v1 + 144) = v32;
  *(_QWORD *)(v1 + 160) = v4;
  LOBYTE(v2) = *(_BYTE *)(v1 + 168);
  *(_BYTE *)(v1 + 168) = v5;
  v16 = OUTLINED_FUNCTION_80_0(v6, v11, v12, v13, v14, v15, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
  OUTLINED_FUNCTION_114_0(v16, v17, v18, v19, v20, v21, v22, v23, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  v33[0] = v6;
  v33[1] = v7;
  v33[2] = v8;
  v33[3] = v9;
  v33[4] = v10;
  v34 = v2;
  sub_1CF68E370((uint64_t)v33);
  OUTLINED_FUNCTION_114_0(v24, v25, v26, v27, v28, v29, v30, v31, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  OUTLINED_FUNCTION_134();
}

uint64_t OUTLINED_FUNCTION_49(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_1CF69B3F0((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return sub_1CF73F330();
}

uint64_t OUTLINED_FUNCTION_73()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_17_0(unint64_t *a1)
{
  uint64_t *v1;

  sub_1CF6D23E4(a1, v1);
}

uint64_t OUTLINED_FUNCTION_49_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_52()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_49_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_49_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CF6E1BA4(a1, a2, a3, a4);
}

void sub_1CF6918B8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_QWORD *)(v1 + 128);
  v4 = *(_QWORD *)(v1 + 136);
  v5 = *(_QWORD *)(v1 + 144);
  v6 = *(_QWORD *)(v1 + 152);
  v7 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v8 = *(_BYTE *)(v1 + 168);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1CF68EA18(v3, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1CF691920(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__transaction) = a1;
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_15_0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_15_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  return sub_1CF68E984(v10, v13, v11, v12, a5, v9, a7, a8, a9);
}

void OUTLINED_FUNCTION_15_2()
{
  JUMPOUT(0x1D17D3DECLL);
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  return sub_1CF73F7EC();
}

uint64_t OUTLINED_FUNCTION_19()
{
  return swift_bridgeObjectRelease();
}

char *OUTLINED_FUNCTION_15_4@<X0>(unint64_t a1@<X8>)
{
  int64_t v1;
  uint64_t v2;

  return sub_1CF6C6E60((char *)(a1 > 1), v1, 1, v2);
}

void OUTLINED_FUNCTION_15_5()
{
  uint64_t v0;

  os_unfair_lock_lock(*(os_unfair_lock_t *)(v0 + 16));
}

unint64_t OUTLINED_FUNCTION_15_7()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 105) = 4;
  return sub_1CF6DAA20();
}

uint64_t OUTLINED_FUNCTION_15_8()
{
  return type metadata accessor for TunnelInterfaceParameters();
}

uint64_t OUTLINED_FUNCTION_15_9()
{
  return swift_bridgeObjectRetain();
}

unint64_t OUTLINED_FUNCTION_15_10()
{
  return sub_1CF6ABB3C();
}

uint64_t OUTLINED_FUNCTION_15_11(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 136) = a1;
  return sub_1CF73F2A0();
}

void OUTLINED_FUNCTION_15_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  sub_1CF68E274((uint64_t)&a9, (uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_15_13()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_15_14(float a1)
{
  float *v1;

  *v1 = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_15_15()
{
  uint64_t v0;

  sub_1CF6ABA2C(v0);
}

uint64_t OUTLINED_FUNCTION_15_16()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1CF73155C(v0, *(_QWORD *)(v1 - 296));
}

uint64_t OUTLINED_FUNCTION_15_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_15_18()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6933C0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_107()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_80_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;

  return sub_1CF68EA18(a1, v9, v10, v11, v12, v13, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_83()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_93@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0 - 104);
}

_QWORD *OUTLINED_FUNCTION_42_0()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_0Tm(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_73_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_73_2()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_73_3()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6934BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_73_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 - 144))(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_73_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_73_6()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6933C0(v1, v0);
}

void OUTLINED_FUNCTION_6()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  sub_1CF68DC58(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  return sub_1CF73F450();
}

uint64_t OUTLINED_FUNCTION_6_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(void), uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t (*v9)(uint64_t, uint64_t);

  return sub_1CF68E984(a1, a2, a3, a4, a5, a6, a7, v9, a9);
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return swift_bridgeObjectRetain();
}

void *OUTLINED_FUNCTION_6_4@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_150()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_6_5()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_6_6()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_6_8()
{
  return sub_1CF73F57C();
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_10@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 96) = a1;
  return sub_1CF73F54C();
}

void OUTLINED_FUNCTION_6_11()
{
  sub_1CF6AE568();
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6933C0(v0, v1);
}

void *OUTLINED_FUNCTION_6_13@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = a1;
  *(_QWORD *)(v2 - 112) = v1;
  return _Block_copy((const void *)(v2 - 136));
}

id OUTLINED_FUNCTION_6_14(Class a1)
{
  return objc_allocWithZone(a1);
}

uint64_t OUTLINED_FUNCTION_6_15()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6933C0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_6_16()
{
  return sub_1CF73F4A4();
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  return sub_1CF73F774();
}

uint64_t OUTLINED_FUNCTION_6_18()
{
  return sub_1CF73EA24();
}

uint64_t OUTLINED_FUNCTION_44_1()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6934BC(v0, v1);
}

double OUTLINED_FUNCTION_44_2()
{
  _OWORD *v0;
  double result;

  result = 0.0;
  *v0 = 0u;
  v0[1] = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_44_3(uint64_t a1)
{
  unint64_t v1;

  return sub_1CF6934BC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  uint64_t v0;

  return v0 - 216;
}

uint64_t OUTLINED_FUNCTION_44_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_44_6()
{
  return sub_1CF73E5C8();
}

void OUTLINED_FUNCTION_44_7(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

void OUTLINED_FUNCTION_44_8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1CF6DC3F0(v2, a2);
}

uint64_t OUTLINED_FUNCTION_43(uint64_t (*a1)(uint64_t *, __n128))
{
  return sub_1CF695B4C(a1);
}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return sub_1CF73F4A4();
}

unint64_t OUTLINED_FUNCTION_43_2()
{
  return sub_1CF6B0D94();
}

void OUTLINED_FUNCTION_43_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, __int128 a16, __int128 a17, char a18)
{
  a15 = 4;
  a16 = 0u;
  a17 = 0u;
  a18 = 4;
  sub_1CF691788(&a15);
}

void OUTLINED_FUNCTION_43_4(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  uint8_t *v4;
  os_log_type_t v5;

  _os_log_impl(a1, a2, v5, a4, v4, 0xCu);
}

uint64_t OUTLINED_FUNCTION_47()
{
  return sub_1CF73EF58();
}

void OUTLINED_FUNCTION_43_5(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_43_6()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_43_7()
{
  return sub_1CF73F528();
}

uint64_t OUTLINED_FUNCTION_43_8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_43_9()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t OUTLINED_FUNCTION_43_10()
{
  return sub_1CF73F528();
}

uint64_t OUTLINED_FUNCTION_43_11()
{
  return sub_1CF73EF10();
}

void *OUTLINED_FUNCTION_28_1()
{
  return malloc(0x49uLL);
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_302()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6934BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_350()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_1()
{
  return sub_1CF73F5F4();
}

uint64_t OUTLINED_FUNCTION_28_4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 - 256));
}

uint64_t OUTLINED_FUNCTION_28_5()
{
  uint64_t v0;

  return v0 + 32;
}

BOOL OUTLINED_FUNCTION_28_6()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

uint64_t OUTLINED_FUNCTION_28_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_28_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

__n128 OUTLINED_FUNCTION_23_0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v0;
  v3 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)v1 = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 32) = *(_BYTE *)(v0 + 32);
  return result;
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  return swift_bridgeObjectRelease();
}

double OUTLINED_FUNCTION_23_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t v6;
  va_list va;

  va_start(va, a6);
  return sub_1CF6AF62C(v6, (uint64_t)va);
}

void OUTLINED_FUNCTION_23_3(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_300()
{
  return sub_1CF73F840();
}

uint64_t OUTLINED_FUNCTION_23_4()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_23_5()
{
  return swift_retain();
}

id OUTLINED_FUNCTION_23_6()
{
  void *v0;

  return sub_1CF6DFD8C(v0, 1);
}

uint64_t OUTLINED_FUNCTION_23_7()
{
  return sub_1CF73F330();
}

uint64_t OUTLINED_FUNCTION_23_8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_23_9(uint64_t a1)
{
  unint64_t v1;

  return sub_1CF6933C0(a1, v1);
}

void OUTLINED_FUNCTION_23_10()
{
  unint64_t v0;
  uint64_t v1;

  sub_1CF68F110(*(_QWORD *)(v1 - 208), v0, (uint64_t *)(v1 - 168));
}

uint64_t OUTLINED_FUNCTION_23_11()
{
  return sub_1CF73E5C8();
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_18()
{
  return sub_1CF73F840();
}

uint64_t OUTLINED_FUNCTION_2_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t (*v9)(void);
  uint64_t (*v10)(uint64_t, uint64_t);

  return sub_1CF68E984(a1, a2, a3, a4, a5, a6, v9, v10, a9);
}

void OUTLINED_FUNCTION_234()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return 1005;
}

uint64_t OUTLINED_FUNCTION_2_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, __int128 a16)
{
  return sub_1CF68C850(&a16, a1 + 16);
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_11()
{
  return sub_1CF73F4E0();
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2_12(uint64_t a1)
{
  return sub_1CF6E116C(a1);
}

void OUTLINED_FUNCTION_2_14()
{
  void *v0;

  OS_dispatch_queue.parentQueue.setter(v0);
}

uint64_t OUTLINED_FUNCTION_2_15()
{
  return sub_1CF73F774();
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_2_17()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t OUTLINED_FUNCTION_2_18(uint64_t a1, ...)
{
  uint64_t (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  va_list va;

  va_start(va, a1);
  return sub_1CF737914((uint64_t)va, v1, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_199_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 72) + 8))(v0, v1);
}

double OUTLINED_FUNCTION_194()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  double result;

  *(_BYTE *)v0 = v3;
  *(_QWORD *)(v0 + 8) = v1;
  *(_QWORD *)(v0 + 16) = v2;
  result = 0.0;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_QWORD *)(v0 + 56) = 0;
  return result;
}

id OUTLINED_FUNCTION_5_0()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_169_0()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_16_1()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_1CF695C88(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_252()
{
  return sub_1CF73F5D0();
}

uint64_t OUTLINED_FUNCTION_16_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_5_1()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_16_5()
{
  return sub_1CF73E55C();
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  return swift_unknownObjectRelease();
}

void OUTLINED_FUNCTION_16_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;

  *(_QWORD *)(a1 + 16) = v12;
  a11 = v12;
  a12 = 0;
  a10 = a1 + 32;
  sub_1CF713518((uint64_t)&a10, &a12, 8);
}

uint64_t OUTLINED_FUNCTION_16_9@<X0>(char a1@<W8>)
{
  _BYTE *v1;

  v1[232] = a1;
  sub_1CF6C8CAC(v1 + 488, v1 + 360);
  return nullsub_1(v1 + 360);
}

uint64_t OUTLINED_FUNCTION_16_10(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(a1, v2);
}

uint64_t OUTLINED_FUNCTION_16_11()
{
  uint64_t v0;
  unint64_t v1;

  return ControlChannelConnectionWireProtocolVersion.__allocating_init(_:)(v0, v1);
}

id OUTLINED_FUNCTION_41()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_159_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 120) + 8))(v1, v0);
}

void OUTLINED_FUNCTION_144(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1CF6926F0(v3, v4, a3);
}

BOOL OUTLINED_FUNCTION_144_0(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

unint64_t OUTLINED_FUNCTION_144_1()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 192) = 6;
  return sub_1CF72E7E8();
}

uint64_t OUTLINED_FUNCTION_17_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_13_2()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_129()
{
  return sub_1CF73EE44();
}

uint64_t OUTLINED_FUNCTION_129_0()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_129_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  return 0x696669746E656469;
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return sub_1CF73F348();
}

uint64_t OUTLINED_FUNCTION_10_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  char v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;

  return sub_1CF68E984(v12, v15, a3, v14, v11, v9, v10, v13, a9);
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  return type metadata accessor for RSDDeviceInfo();
}

uint64_t OUTLINED_FUNCTION_10_6()
{
  return swift_bridgeObjectRelease();
}

void *OUTLINED_FUNCTION_168(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x92uLL);
}

uint64_t OUTLINED_FUNCTION_211()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_10_7()
{
  return sub_1CF73F618();
}

void OUTLINED_FUNCTION_10_8()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_1CF6DFC54(v3 + *(int *)(v2 + 20), v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_9()
{
  return sub_1CF73F648();
}

uint64_t OUTLINED_FUNCTION_10_10()
{
  return 0;
}

id OUTLINED_FUNCTION_10_11(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  void *v9;
  uint64_t v10;

  return objc_msgSend(v9, a2, v10, 0, &a9);
}

void OUTLINED_FUNCTION_10_12()
{
  void *v0;
  unint64_t v1;

  sub_1CF6CE874(v0, v1, 0);
}

uint64_t OUTLINED_FUNCTION_10_13()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6933C0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_10_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_10_15@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

void sub_1CF692438()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_144(v0, v1, &qword_1ED8F7118);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void OUTLINED_FUNCTION_14_2(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W8>)
{
  char v3;

  sub_1CF68DC58(a1, a2, v3 | a3);
}

uint64_t OUTLINED_FUNCTION_53()
{
  return swift_dynamicCast();
}

void OUTLINED_FUNCTION_14_5(uint64_t a1)
{
  uint64_t *v1;

  sub_1CF693ED8(a1, v1);
}

void OUTLINED_FUNCTION_14_6(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12)
{
  sub_1CF6C9E3C(a1, 0, 0, 0, 0, 0, 0, 0, a9, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_57()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_304()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_14_8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 5;
  return sub_1CF6DBB30();
}

uint64_t OUTLINED_FUNCTION_14_9(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF6E1C78(a1, a2, a3, 4);
}

uint64_t OUTLINED_FUNCTION_14_10()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, uint64_t))(*(_QWORD *)(v1 - 144) + 8))(*(_QWORD *)(v1 - 96), v0);
}

uint64_t OUTLINED_FUNCTION_14_11(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 - 200))(a1, v1);
}

uint64_t OUTLINED_FUNCTION_14_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_14_13()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  return v1(v0);
}

void sub_1CF69254C(void **a1)
{
  uint64_t v1;
  void *v2;
  void **v3;
  void *v4;

  v2 = *a1;
  v3 = (void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection_invalidationReason);
  OUTLINED_FUNCTION_10();
  v4 = *v3;
  *v3 = v2;
  sub_1CF692594(v4);
  OUTLINED_FUNCTION_5();
}

void sub_1CF692594(id a1)
{
  if (a1 != (id)5)
    sub_1CF68DC48(a1);
}

void sub_1CF6925A4(void *a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream) = a1;
  v3 = a1;
  sub_1CF6925E4(v2);

  OUTLINED_FUNCTION_179(v3);
}

id sub_1CF6925E4(id result)
{
  uint64_t v1;

  if (result)
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession), sel_closeStream_, result);
  return result;
}

void sub_1CF692608(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  SEL v4;
  id v5;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession) = a1;
  v5 = a1;
  v3 = (void *)OUTLINED_FUNCTION_69();
  objc_msgSend(v3, v4);

  OUTLINED_FUNCTION_179(v5);
}

uint64_t OUTLINED_FUNCTION_72()
{
  return sub_1CF73F288();
}

char *OUTLINED_FUNCTION_72_1@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  int64_t v2;

  return sub_1CF6C6E60((char *)(a1 > 1), v2, 1, v1);
}

uint64_t OUTLINED_FUNCTION_72_2()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_12_0()
{
  return sub_1CF73F528();
}

uint64_t OUTLINED_FUNCTION_72_3()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_72_4()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_72_5()
{
  uint64_t v0;

  return v0;
}

void sub_1CF6926B8(void *a1)
{
  id v2;

  v2 = a1;
  sub_1CF68D0CC();

}

void sub_1CF6926F0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_278(a1, a2, a3);
  OUTLINED_FUNCTION_122(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_1();
}

uint64_t OUTLINED_FUNCTION_13_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13, __int128 a14, char a15)
{
  __int128 *v15;
  __int128 v16;

  v16 = v15[1];
  a13 = *v15;
  a14 = v16;
  a15 = *((_BYTE *)v15 + 32);
  return sub_1CF69B424((uint64_t)&a13);
}

uint64_t OUTLINED_FUNCTION_29(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 72) = a2 & 1;
  return result;
}

void OUTLINED_FUNCTION_29_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CF6AF758(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_29_3()
{
  uint64_t v0;

  return sub_1CF6CA6DC(v0 - 224);
}

uint64_t OUTLINED_FUNCTION_346()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_29_4()
{
  return sub_1CF73F528();
}

uint64_t OUTLINED_FUNCTION_29_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 288) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_29_6()
{
  return 0;
}

void OUTLINED_FUNCTION_29_8()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF693FE0(v1, v0);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

void *CUPairingIdentity.authTag(for:type:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  id v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v16[3];

  v16[2] = *(id *)MEMORY[0x1E0C80C00];
  if (MEMORY[0x1E0D83940])
  {
    v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83940]), sel_init);
    v6 = sub_1CF6929EC(v3);
    if (v7 >> 60 == 15)
    {
      v8 = 0;
    }
    else
    {
      v10 = v6;
      v11 = v7;
      v8 = (void *)sub_1CF73E58C();
      sub_1CF693FE0(v10, v11);
    }
    objc_msgSend(v5, sel_setDeviceIRKData_, v8);

    v12 = (void *)sub_1CF73E58C();
    v16[0] = 0;
    v13 = objc_msgSend(v5, sel_authTagForData_type_error_, v12, a3, v16);

    v14 = v16[0];
    if (v13)
    {
      v9 = (void *)sub_1CF73E5A4();

    }
    else
    {
      v9 = v14;
      sub_1CF73E490();

      swift_willThrow();
    }

  }
  else
  {
    v9 = (void *)sub_1CF6AA5E0();
    sub_1CF73F744();
    sub_1CF6ABB3C();
    swift_allocError();
    sub_1CF73F780();
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_1CF6929EC(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_altIRK);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1CF73E5A4();

  return v3;
}

void sub_1CF692A4C(id a1, unint64_t a2, char a3, void (*a4)(_BYTE *))
{
  uint64_t v7;
  unint64_t v8;
  char v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  Swift::String v14;
  id v15;
  _BYTE v16[152];
  _QWORD v17[4];
  char v18;

  if ((a3 & 1) != 0)
  {
    v10 = a1;
    swift_willThrow();
    v11 = a1;
  }
  else
  {
    sub_1CF6934BC((uint64_t)a1, a2);
    if (qword_1ED8F7938 != -1)
      swift_once();
    v7 = qword_1ED8FF0F8;
    v8 = qword_1ED8FF100;
    sub_1CF6934BC(qword_1ED8FF0F8, qword_1ED8FF100);
    v9 = sub_1CF69323C();
    sub_1CF6933C0(v7, v8);
    if ((v9 & 1) != 0)
    {
      sub_1CF73E5C8();
      __asm { BR              X11 }
    }
    v17[3] = MEMORY[0x1E0DEA968];
    v17[0] = 0xD00000000000001ALL;
    v17[1] = 0x80000001CF754110;
    v18 = 1;
    sub_1CF692E68();
    v11 = (id)swift_allocError();
    v13 = v12;
    v16[0] = 2;
    v14 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v16);
    sub_1CF692EA4((uint64_t)v17);
    *(_BYTE *)v13 = 2;
    *(Swift::String *)(v13 + 8) = v14;
    *(_OWORD *)(v13 + 24) = 0u;
    *(_OWORD *)(v13 + 40) = 0u;
    *(_QWORD *)(v13 + 56) = 0;
    swift_willThrow();
    sub_1CF6CE874(a1, a2, 0);
  }
  v17[0] = v11;
  sub_1CF6F5484((uint64_t)v17);
  sub_1CF6F5490((uint64_t)v17, (uint64_t)v16);
  v15 = v11;
  a4(v16);

}

unint64_t sub_1CF692E68()
{
  unint64_t result;

  result = qword_1ED8F77E0;
  if (!qword_1ED8F77E0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnectionError, &type metadata for ControlChannelConnectionError);
    atomic_store(result, (unint64_t *)&qword_1ED8F77E0);
  }
  return result;
}

uint64_t sub_1CF692EA4(uint64_t a1)
{
  destroy for ControlChannelConnectionError.Message(a1);
  return a1;
}

uint64_t destroy for ControlChannelConnectionError.Message(uint64_t result)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(result + 32);
  if (v1 >= 2)
    v1 = *(_DWORD *)result + 2;
  if (v1 == 1)
    return __swift_destroy_boxed_opaque_existential_0Tm(result);
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

Swift::String __swiftcall ControlChannelConnectionError.Message.format(code:)(RemotePairingDevice::ControlChannelConnectionError::Code code)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  Swift::String result;
  __int128 v6;
  _OWORD v7[2];
  char v8;

  v2 = *(unsigned __int8 *)code;
  sub_1CF69317C(v1, (uint64_t)v7);
  if (v8)
  {
    if (v8 == 1)
    {
      sub_1CF68E2E4(v7, &v6);
      __asm { BR              X9 }
    }
    __asm { BR              X9 }
  }
  v3 = OUTLINED_FUNCTION_69();
  result._object = v4;
  result._countAndFlagsBits = v3;
  return result;
}

uint64_t sub_1CF69317C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for ControlChannelConnectionError.Message(a2, a1);
  return a2;
}

uint64_t initializeWithCopy for ControlChannelConnectionError.Message(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;

  v3 = *(unsigned __int8 *)(a2 + 32);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  if (v3 == 1)
  {
    v5 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 24) = v5;
    (**(void (***)(uint64_t))(v5 - 8))(a1);
    v6 = 1;
LABEL_8:
    *(_BYTE *)(a1 + 32) = v6;
    return a1;
  }
  if (v3)
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v6 = *(_BYTE *)(a2 + 32);
    goto LABEL_8;
  }
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 32) = 0;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CF69323C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  void (*v20)(uint64_t, uint64_t);
  _BYTE v21[96];
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_167();
  v22 = v2;
  v23 = v3;
  v5 = v4;
  v7 = v6;
  v8 = sub_1CF73E5E0();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB02C0];
  OUTLINED_FUNCTION_27_1();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_3_10();
  MEMORY[0x1E0C80A78](v11);
  v13 = &v21[-v12];
  v14 = OUTLINED_FUNCTION_72_5();
  sub_1CF6934BC(v14, v15);
  OUTLINED_FUNCTION_72_5();
  sub_1CF73E508();
  v16 = OUTLINED_FUNCTION_72_5();
  sub_1CF6933C0(v16, v17);
  sub_1CF6934BC(v7, v5);
  sub_1CF73E508();
  sub_1CF6933C0(v7, v5);
  sub_1CF6935F8(&qword_1ED8F6A10, v9, MEMORY[0x1E0CB02D0]);
  while (1)
  {
    OUTLINED_FUNCTION_48_7();
    if ((v21[15] & 1) != 0)
    {
      v20 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
      v20(v0, v8);
      OUTLINED_FUNCTION_48_7();
      v20((uint64_t)v13, v8);
      return v21[13];
    }
    v18 = v21[14];
    OUTLINED_FUNCTION_48_7();
    if ((v21[11] & 1) != 0)
      break;
    if (v18 != v21[10])
    {
      OUTLINED_FUNCTION_7_5(v0);
      OUTLINED_FUNCTION_7_5((uint64_t)v13);
      return 0;
    }
  }
  OUTLINED_FUNCTION_7_5(v0);
  OUTLINED_FUNCTION_7_5((uint64_t)v13);
  return 1;
}

uint64_t sub_1CF6933C0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_46()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return sub_1CF73F5F4();
}

void OUTLINED_FUNCTION_46_1(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1CF68F110(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_53_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_1CF69B44C((uint64_t)va);
}

void OUTLINED_FUNCTION_46_3()
{
  unint64_t v0;
  uint64_t v1;

  sub_1CF68F110(*(_QWORD *)(v1 - 160), v0, (uint64_t *)(v1 - 128));
}

uint64_t OUTLINED_FUNCTION_46_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_46_5()
{
  return sub_1CF73F738();
}

void OUTLINED_FUNCTION_46_6(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_46_7()
{
  return 0x6E6E75742D70725FLL;
}

uint64_t sub_1CF6934BC(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_13_5(uint64_t a1, uint64_t a2)
{
  return sub_1CF6B0268(a1, a2, 0, 0, 0, 0, 0);
}

uint64_t OUTLINED_FUNCTION_13_6()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_13_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_13_8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

char *OUTLINED_FUNCTION_13_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  return &a15;
}

uint64_t OUTLINED_FUNCTION_13_11@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_13_14()
{
  return sub_1CF73F4A4();
}

void OUTLINED_FUNCTION_13_15()
{
  JUMPOUT(0x1D17D3ED0);
}

uint64_t OUTLINED_FUNCTION_13_16(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

void OUTLINED_FUNCTION_13_17(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_13_18@<X0>(uint64_t a1@<X3>, unint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1CF6C7250(a2 > 1, v2, 1, a1);
}

void sub_1CF6935F8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x1D17D3DEC](a3, v5), a1);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF693634(uint64_t a1)
{
  uint64_t v1;

  return sub_1CF693644(a1, *(_QWORD *)(v1 + 32), *(void (**)(_QWORD *))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CF693644(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  os_log_type_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  id v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  id v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[19];
  uint64_t __dst[19];
  _BYTE v31[152];
  _BYTE v32[152];
  _BYTE v33[160];

  sub_1CF6F5490(a1, (uint64_t)v33);
  swift_beginAccess();
  result = MEMORY[0x1D17D3F84](a2 + 16);
  if (result)
  {
    v12 = result;
    sub_1CF6F5490((uint64_t)v33, (uint64_t)v32);
    if (sub_1CF6F54E4((uint64_t)v32) == 1)
    {
      v13 = *(_QWORD *)nullsub_1(v32);
      sub_1CF6F5490((uint64_t)v33, (uint64_t)v31);
      v14 = *(void **)nullsub_1(v31);
      v15 = v14;
      v16 = sub_1CF73F0CC();
      if (qword_1ED8F78E8 != -1)
        swift_once();
      v17 = qword_1ED8F78E0;
      if (os_log_type_enabled((os_log_t)qword_1ED8F78E0, v16))
      {
        sub_1CF6F54EC((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1CF693AA8);
        swift_unknownObjectRetain();
        sub_1CF6F54EC((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1CF693AA8);
        swift_unknownObjectRetain();
        v18 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        __dst[0] = v28;
        *(_DWORD *)v18 = 136446466;
        v29[0] = v12;
        v19 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a6 + 8) + 8))(a5);
        sub_1CF68F110(v19, v20, __dst);
        sub_1CF73F2A0();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2080;
        v21 = v14;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
        v22 = sub_1CF73EF10();
        sub_1CF68F110(v22, v23, __dst);
        v29[0] = v24;
        sub_1CF73F2A0();
        swift_bridgeObjectRelease();
        sub_1CF6F54EC((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1CF6939F8);
        sub_1CF6F54EC((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1CF6939F8);
        _os_log_impl(&dword_1CF67E000, v17, v16, "%{public}s: received error reading message: %s", (uint8_t *)v18, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v28, -1, -1);
        MEMORY[0x1D17D3ED0](v18, -1, -1);
      }
      __dst[0] = v13;
      sub_1CF6ECBEC((uint64_t)__dst);
      sub_1CF6CAAD0(__dst, v29);
      v25 = v14;
      a3(v29);
      sub_1CF6F54EC((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1CF6939F8);
      swift_unknownObjectRelease();
    }
    else
    {
      v26 = (const void *)nullsub_1(v32);
      memcpy(__dst, v26, 0x92uLL);
      sub_1CF6F5558((uint64_t)__dst);
      sub_1CF6CAAD0(__dst, v29);
      sub_1CF6F5490((uint64_t)v33, (uint64_t)v31);
      v27 = nullsub_1(v31);
      sub_1CF737914(v27, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
      a3(v29);
      JSONDataBasedControlChannelTransport.startReceivingMessages(usingEventHandler:)(a3, a4, a5, a6);
      swift_unknownObjectRelease();
    }
    return sub_1CF6F54EC((uint64_t)v33, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1CF6939F8);
  }
  return result;
}

void sub_1CF6939F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int16 a19, char a20)
{
  if ((a20 & 1) != 0)

  else
    sub_1CF6CA3C4(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C,
      (uint64_t (*)(void))sub_1CF6C8BA8,
      (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
}

id sub_1CF693AA8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, __int16 a19, char a20)
{
  if ((a20 & 1) != 0)
    return a1;
  else
    return (id)sub_1CF6CA3C4(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0,
                 (uint64_t (*)(void))sub_1CF6CA5A4,
                 (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
}

uint64_t sub_1CF693B58(const void *a1)
{
  return sub_1CF691484(a1);
}

void sub_1CF693B60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_10();
  v3 = *(_QWORD *)(v1 + 248);
  *(_QWORD *)(v1 + 248) = v2;
  *(_QWORD *)(v1 + 256) = v0;
  sub_1CF693EC8(v3);
  OUTLINED_FUNCTION_5();
}

void sub_1CF693B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_10();
  v3 = *(_QWORD *)(v1 + 264);
  *(_QWORD *)(v1 + 264) = v2;
  *(_QWORD *)(v1 + 272) = v0;
  sub_1CF693EC8(v3);
  OUTLINED_FUNCTION_5();
}

uint64_t OUTLINED_FUNCTION_24_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 136) + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_24_3()
{
  return sub_1CF73EF34();
}

uint64_t OUTLINED_FUNCTION_24_4()
{
  return swift_slowAlloc();
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_24_6()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  v6 = (_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 200));
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 208));
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 216)) = 0;
  *(_QWORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 224)) = 0;
  return sub_1CF6ABBB4(v5, v4 + *(_QWORD *)(*(_QWORD *)v4 + 136));
}

uint64_t OUTLINED_FUNCTION_24_8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF6E1C78(a1, a2, a3, 0);
}

uint64_t OUTLINED_FUNCTION_24_9()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_24_10(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_24_11()
{
  return type metadata accessor for DiscoveredBonjourAdvert();
}

unint64_t OUTLINED_FUNCTION_24_12()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 3;
  return sub_1CF735560();
}

uint64_t OUTLINED_FUNCTION_24_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_56()
{
  return sub_1CF73F7EC();
}

void OUTLINED_FUNCTION_108()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1CF6A3724(v1, v0);
}

uint64_t OUTLINED_FUNCTION_108_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 592) = a1;
  return v1 + 592;
}

uint64_t OUTLINED_FUNCTION_108_1()
{
  uint64_t v0;

  return v0;
}

uint64_t ControlChannelConnection.__deallocating_deinit()
{
  ControlChannelConnection.deinit();
  return swift_deallocClassInstance();
}

uint64_t ControlChannelConnection.deinit()
{
  uint64_t v0;
  __n128 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = OUTLINED_FUNCTION_171();
  OUTLINED_FUNCTION_258(v2, v3, v4, v5, v6, v7, v8, v9, v10, v1);

  sub_1CF68EA18(*(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_BYTE *)(v0 + 168), (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 192);

  sub_1CF693EC8(*(_QWORD *)(v0 + 248));
  sub_1CF693EC8(*(_QWORD *)(v0 + 264));
  sub_1CF693EC8(*(_QWORD *)(v0 + 280));
  sub_1CF693EC8(*(_QWORD *)(v0 + 296));
  sub_1CF6A4E24(v0 + 320, (uint64_t *)&unk_1ED8F7120);
  sub_1CF6A4E24(v0 + 360, &qword_1ED8F7118);
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 400);
  sub_1CF6A4E24(v0 + 440, &qword_1ED8F68B0);
  sub_1CF6A4E24(v0 + 480, &qword_1ED8F7CB8);

  sub_1CF693EC8(*(_QWORD *)(v0 + 544));
  v11 = sub_1CF73EDC0();
  OUTLINED_FUNCTION_63(v11);
  swift_bridgeObjectRelease();
  sub_1CF693FE0(*(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData), *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData + 8));
  swift_unknownObjectRelease();

  sub_1CF692594(*(id *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection_invalidationReason));
  return v0;
}

uint64_t sub_1CF693EC8(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

void sub_1CF693ED8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_1();
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1CF6A3AE0(v2);
  return sub_1CF6A7B18(v1, v0);
}

uint64_t OUTLINED_FUNCTION_298()
{
  return swift_release();
}

BOOL OUTLINED_FUNCTION_34_3()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

void OUTLINED_FUNCTION_34_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

uint64_t OUTLINED_FUNCTION_34_6()
{
  return swift_release();
}

_BYTE *OUTLINED_FUNCTION_34_7()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1CF710A88((_BYTE *)(v2 - 65), v1, v0);
}

uint64_t OUTLINED_FUNCTION_34_8()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_34_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  return sub_1CF694020(0, 0, 0, 0, 0, 0, 0, 0, a9, a10, a11, a12);
}

uint64_t OUTLINED_FUNCTION_34_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t sub_1CF693FE0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1CF6933C0(a1, a2);
  return a1;
}

uint64_t OUTLINED_FUNCTION_92()
{
  return sub_1CF73F588();
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return sub_1CF73F528();
}

uint64_t sub_1CF694020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1CF693FE0(a11, a12);
  }
  return result;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t __swift_memcpy5_1(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FetchNetworkPairingSessionIDResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t RemotePairingError.errorCode.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t RemotePairingError.errorUserInfo.getter()
{
  return swift_bridgeObjectRetain();
}

id RemotePairingCopyRemoteUnlockDeviceKeyForTunnel(void *a1, uint64_t a2)
{
  id v3;
  _TtC19RemotePairingDevice42RemotePairingDeviceTunnelServiceConnection *v4;
  id v5;

  v3 = a1;
  v4 = objc_alloc_init(_TtC19RemotePairingDevice42RemotePairingDeviceTunnelServiceConnection);
  v5 = -[RemotePairingDeviceTunnelServiceConnection copyRemoteUnlockDeviceKeyForTunnelWithTunnelName:error:](v4, "copyRemoteUnlockDeviceKeyForTunnelWithTunnelName:error:", v3, a2);

  return v5;
}

uint64_t RemotePairingGetCurrentWireProtocolVersion()
{
  void *v0;
  uint64_t v1;

  +[ControlChannelConnectionWireProtocolVersion current](_TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion, "current");
  v0 = (void *)objc_claimAutoreleasedReturnValue();
  v1 = objc_msgSend(v0, "rawValue");

  return v1;
}

uint64_t _RPIsAppleInternal()
{
  return os_variant_allows_internal_security_policies();
}

uint64_t _RPIsDarwinOS()
{
  return os_variant_is_darwinos();
}

id _RPTextToMACAddress(void *a1)
{
  int v2;
  __int16 v3;

  v3 = 0;
  v2 = 0;
  objc_msgSend(objc_retainAutorelease(a1), "UTF8String");
  if (TextToHardwareAddress())
    return 0;
  objc_msgSend(MEMORY[0x1E0C99D50], "dataWithBytes:length:", &v2, 6);
  return (id)objc_claimAutoreleasedReturnValue();
}

BOOL InterfaceIndexCorrespondsToAppleNCMInterface(uint64_t a1)
{
  NSObject *v2;
  mach_port_t v3;
  const __CFDictionary *v4;
  BOOL v5;
  NSObject *v6;
  _BOOL8 v7;
  io_object_t v9;
  io_registry_entry_t v10;
  const __CFAllocator *v11;
  NSObject *v12;
  kern_return_t ParentEntry;
  const __CFNumber *CFProperty;
  CFTypeID TypeID;
  _BOOL8 v16;
  NSObject *v17;
  NSObject *v18;
  NSObject *v19;
  io_iterator_t existing;
  __int16 valuePtr;
  io_registry_entry_t parent;
  uint8_t buf[4];
  const char *v24;
  __int16 v25;
  uint64_t v26;
  __int16 v27;
  char *v28;
  __int16 v29;
  _BOOL4 v30;
  char bsdName[8];
  uint64_t v32;
  char v33;
  uint8_t v34[4];
  uint64_t v35;
  uint8_t v36[4];
  uint64_t v37;
  uint8_t v38[4];
  _QWORD v39[3];

  *(_QWORD *)((char *)&v39[1] + 4) = *MEMORY[0x1E0C80C00];
  get_log();
  v2 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG))
    InterfaceIndexCorrespondsToAppleNCMInterface_cold_8();

  if (a1 < 0)
  {
    get_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      InterfaceIndexCorrespondsToAppleNCMInterface_cold_1();
    goto LABEL_19;
  }
  *(_QWORD *)bsdName = 0;
  v32 = 0;
  v33 = 0;
  if (!if_indextoname(a1, bsdName))
  {
    get_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      InterfaceIndexCorrespondsToAppleNCMInterface_cold_2();
    goto LABEL_19;
  }
  v3 = *MEMORY[0x1E0CBBAB8];
  v4 = IOBSDNameMatching(*MEMORY[0x1E0CBBAB8], 0, bsdName);
  if (!v4)
  {
    get_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      InterfaceIndexCorrespondsToAppleNCMInterface_cold_3();
    goto LABEL_19;
  }
  existing = 0;
  if (IOServiceGetMatchingServices(v3, v4, &existing))
    v5 = 1;
  else
    v5 = existing == 0;
  if (v5)
  {
    get_log();
    v6 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
      InterfaceIndexCorrespondsToAppleNCMInterface_cold_7();
LABEL_19:
    v7 = 0;
    goto LABEL_20;
  }
  v9 = IOIteratorNext(existing);
  if (v9)
  {
    v10 = v9;
    v11 = (const __CFAllocator *)*MEMORY[0x1E0C9AE00];
    while (1)
    {
      parent = 0;
      get_log();
      v12 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG))
        InterfaceIndexCorrespondsToAppleNCMInterface_cold_6(v38, v39, v12);

      ParentEntry = IORegistryEntryGetParentEntry(v10, "IOService", &parent);
      if (ParentEntry || !parent)
        break;
      if (!IOObjectConformsTo(parent, "AppleUSBNCMData"))
      {
        get_log();
        v17 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v17, OS_LOG_TYPE_DEBUG))
          InterfaceIndexCorrespondsToAppleNCMInterface_cold_4(v36, &v37, v17);
LABEL_39:

        v7 = 0;
        goto LABEL_40;
      }
      CFProperty = (const __CFNumber *)IORegistryEntryCreateCFProperty(parent, CFSTR("idVendor"), v11, 0);
      if (CFProperty && (TypeID = CFNumberGetTypeID(), TypeID == CFGetTypeID(CFProperty)))
      {
        valuePtr = 0;
        CFNumberGetValue(CFProperty, kCFNumberSInt16Type, &valuePtr);
        v16 = valuePtr == 1452;
      }
      else
      {
        get_log();
        v18 = objc_claimAutoreleasedReturnValue();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_DEBUG))
          InterfaceIndexCorrespondsToAppleNCMInterface_cold_5(v34, &v35, v18);

        v16 = 0;
        v7 = 0;
        if (!CFProperty)
          goto LABEL_40;
      }
      CFRelease(CFProperty);
      v7 = v16;
LABEL_40:
      if (parent)
        IOObjectRelease(parent);
      get_log();
      v19 = objc_claimAutoreleasedReturnValue();
      if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG))
      {
        *(_DWORD *)buf = 136315394;
        v24 = "ServiceHasAppleNCMParent";
        v25 = 1024;
        LODWORD(v26) = v7;
        _os_log_debug_impl(&dword_1CF67E000, v19, OS_LOG_TYPE_DEBUG, "%s The end result of checking the parent was: %d", buf, 0x12u);
      }

      IOObjectRelease(v10);
      if (!v7)
      {
        v10 = IOIteratorNext(existing);
        if (v10)
          continue;
      }
      goto LABEL_48;
    }
    get_log();
    v17 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v17, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 136315394;
      v24 = "ServiceHasAppleNCMParent";
      v25 = 1024;
      LODWORD(v26) = ParentEntry;
      _os_log_error_impl(&dword_1CF67E000, v17, OS_LOG_TYPE_ERROR, "%s IORegistryEntryGetParentEntry failed. Result: %d", buf, 0x12u);
    }
    goto LABEL_39;
  }
  v7 = 0;
LABEL_48:
  IOObjectRelease(existing);
  get_log();
  v6 = objc_claimAutoreleasedReturnValue();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG))
  {
    *(_DWORD *)buf = 136315906;
    v24 = "InterfaceIndexCorrespondsToAppleNCMInterface";
    v25 = 2048;
    v26 = a1;
    v27 = 2080;
    v28 = bsdName;
    v29 = 1024;
    v30 = v7;
    _os_log_debug_impl(&dword_1CF67E000, v6, OS_LOG_TYPE_DEBUG, "%s The end result for interface index %ld/name %s was: %d", buf, 0x26u);
  }
LABEL_20:

  return v7;
}

id get_log()
{
  if (get_log_onceToken[0] != -1)
    dispatch_once(get_log_onceToken, &__block_literal_global);
  return (id)get_log_log;
}

void __get_log_block_invoke()
{
  os_log_t v0;
  void *v1;

  v0 = os_log_create("com.apple.dt.remotepairing", "networkinterfaceutils");
  v1 = (void *)get_log_log;
  get_log_log = (uint64_t)v0;

}

BOOL remotepairing_delete_pair_records(_QWORD *a1)
{
  _TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection *v2;
  id v3;
  void *v4;
  id v6;

  v2 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  v6 = 0;
  -[RemotePairingDevicePairingServiceConnection deleteAllPairingRecordsAndReturnError:](v2, "deleteAllPairingRecordsAndReturnError:", &v6);
  v3 = v6;
  v4 = v3;
  if (a1 && v3)
    *a1 = objc_retainAutorelease(v3);

  return v4 == 0;
}

BOOL remotepairing_delete_pair_record(void *a1, _QWORD *a2)
{
  id v3;
  _TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection *v4;
  id v5;
  void *v6;
  id v8;

  v3 = a1;
  v4 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  v8 = 0;
  -[RemotePairingDevicePairingServiceConnection deletePairingRecordForHostWithIdentifier:error:](v4, "deletePairingRecordForHostWithIdentifier:error:", v3, &v8);

  v5 = v8;
  v6 = v5;
  if (a2 && v5)
    *a2 = objc_retainAutorelease(v5);

  return v6 == 0;
}

id RemotePairingGetTrustedHostInfoAndReturnError(uint64_t a1)
{
  _TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection *v2;
  void *v3;

  v2 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  -[RemotePairingDevicePairingServiceConnection trustedHostInfoAndReturnError:](v2, "trustedHostInfoAndReturnError:", a1);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

BOOL remotepairingAllowPromptlessPairing(uint64_t a1, void *a2, _QWORD *a3)
{
  id v5;
  _TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection *v6;
  NSObject *v7;
  NSObject *v8;
  void *v9;
  _QWORD v11[4];
  NSObject *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t, uint64_t);
  void (*v18)(uint64_t);
  id v19;

  v5 = a2;
  v14 = 0;
  v15 = &v14;
  v16 = 0x3032000000;
  v17 = __Block_byref_object_copy_;
  v18 = __Block_byref_object_dispose_;
  v19 = 0;
  v6 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  v7 = dispatch_group_create();
  dispatch_group_enter(v7);
  v11[0] = MEMORY[0x1E0C809B0];
  v11[1] = 3221225472;
  v11[2] = __remotepairingAllowPromptlessPairing_block_invoke;
  v11[3] = &unk_1E8C97ED8;
  v13 = &v14;
  v8 = v7;
  v12 = v8;
  -[RemotePairingDevicePairingServiceConnection allowPromptlessPairingForAutomation:forBUID:withQueue:completion:](v6, "allowPromptlessPairingForAutomation:forBUID:withQueue:completion:", a1, v5, 0, v11);
  dispatch_group_wait(v8, 0xFFFFFFFFFFFFFFFFLL);
  v9 = (void *)v15[5];
  if (a3 && v9)
    *a3 = objc_retainAutorelease(v9);

  _Block_object_dispose(&v14, 8);
  return v9 == 0;
}

void sub_1CF6949B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{

}

void __remotepairingAllowPromptlessPairing_block_invoke(uint64_t a1, void *a2)
{
  id v4;

  objc_storeStrong((id *)(*(_QWORD *)(*(_QWORD *)(a1 + 40) + 8) + 40), a2);
  v4 = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));

}

uint64_t RemotePairingGetUSBConnectedHostTrustState(uint64_t a1)
{
  _TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection *v2;
  uint64_t v3;

  v2 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  v3 = -[RemotePairingDevicePairingServiceConnection getUSBConectedHostTrustStateWithError:](v2, "getUSBConectedHostTrustStateWithError:", a1);

  return v3;
}

void createWirelessPairingSession(void *a1, void *a2)
{
  createWirelessPairingSessionWithPinHandler(a1, a2, 0);
}

void createWirelessPairingSessionWithPinHandler(void *a1, void *a2, void *a3)
{
  id v5;
  id v6;
  id v7;
  _TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection *v8;
  id v9;
  void *v10;
  _QWORD aBlock[4];
  id v12;

  v5 = a2;
  v6 = a3;
  v7 = a1;
  v8 = objc_alloc_init(_TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection);
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 3221225472;
  aBlock[2] = __createWirelessPairingSessionWithPinHandler_block_invoke;
  aBlock[3] = &unk_1E8C97F00;
  v12 = v5;
  v9 = v5;
  v10 = _Block_copy(aBlock);
  -[RemotePairingDevicePairingServiceConnection initiateWirelessPairingSessionWithQueue:completionHandler:customPinHandler:](v8, "initiateWirelessPairingSessionWithQueue:completionHandler:customPinHandler:", v7, v10, v6);

}

void __createWirelessPairingSessionWithPinHandler_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v5;
  uint64_t v6;
  RPWirelessPairingSession *v7;
  void *v8;
  void *v9;
  id v10;

  v10 = a2;
  v5 = a3;
  if (v10)
  {
    v6 = *(_QWORD *)(a1 + 32);
    v7 = -[RPWirelessPairingSession initWithUnderlyingObject:]([RPWirelessPairingSession alloc], "initWithUnderlyingObject:", v10);
    (*(void (**)(uint64_t, RPWirelessPairingSession *, _QWORD))(v6 + 16))(v6, v7, 0);

  }
  else if (v5)
  {
    (*(void (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
  }
  else
  {
    objc_msgSend(MEMORY[0x1E0CB3488], "currentHandler");
    v8 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB3940], "stringWithUTF8String:", "void createWirelessPairingSessionWithPinHandler(__strong dispatch_queue_t _Nonnull, void (^__strong _Nonnull)(RPWirelessPairingSession * _Nullable __strong, NSError * _Nullable __strong), void (^ _Nullable __strong)(NSString * _Nullable __strong, NSString * _Nullable __strong))_block_invoke");
    v9 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v8, "handleFailureInFunction:file:lineNumber:description:", v9, CFSTR("PairingManagement.m"), 114, CFSTR("Bug in remotepairing: Neither error nor session was returned"));

  }
}

uint64_t sub_1CF694D9C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

void _ManagedOpaqueCFTypeWrapper.__allocating_init(retainedValue:)()
{
  uint64_t v0;

  *(_QWORD *)(OUTLINED_FUNCTION_0_3() + 16) = v0;
  OUTLINED_FUNCTION_1();
}

uint64_t _ManagedOpaqueCFTypeWrapper.init(retainedValue:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

void _ManagedOpaqueCFTypeWrapper.__allocating_init(unretainedValue:)()
{
  uint64_t v0;

  *(_QWORD *)(OUTLINED_FUNCTION_0_3() + 16) = v0;
  swift_unknownObjectRetain();
  OUTLINED_FUNCTION_1();
}

uint64_t _ManagedOpaqueCFTypeWrapper.init(unretainedValue:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  swift_unknownObjectRetain();
  return v1;
}

uint64_t _ManagedOpaqueCFTypeWrapper.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t _ManagedOpaqueCFTypeWrapper.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _ManagedOpaqueCFTypeWrapper()
{
  return objc_opt_self();
}

uint64_t method lookup function for _ManagedOpaqueCFTypeWrapper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _ManagedOpaqueCFTypeWrapper.asOpaquePointer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of _ManagedOpaqueCFTypeWrapper.__allocating_init(retainedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of _ManagedOpaqueCFTypeWrapper.__allocating_init(unretainedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1CF694E9C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1CF694EBC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 64) = v3;
  return result;
}

void type metadata accessor for nw_protocol(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0C68);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0C70);
}

void type metadata accessor for CFError(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0C78);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0C80);
}

void type metadata accessor for CFDictionary(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0C88);
}

void type metadata accessor for RPUSBConnectedHostTrustState(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1ED8F7F30);
}

BOOL sub_1CF694F70(uint64_t *a1, uint64_t *a2)
{
  return sub_1CF6B3360(*a1, *a2);
}

void sub_1CF694F7C()
{
  uint64_t *v0;

  sub_1CF69510C(*v0, (void (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1CF694FA0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1CF73EEBC();
  *a2 = 0;
  return result;
}

uint64_t sub_1CF695018(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1CF73EEC8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1CF695094@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6950B8();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6950B8()
{
  uint64_t v0;

  sub_1CF73EED4();
  v0 = sub_1CF73EEB0();
  swift_bridgeObjectRelease();
  return v0;
}

void sub_1CF6950EC()
{
  uint64_t *v0;

  sub_1CF69510C(*v0, MEMORY[0x1E0DEA950]);
}

void sub_1CF69510C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  v3 = sub_1CF73EED4();
  a2(v3);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF695140()
{
  return sub_1CF695148();
}

uint64_t sub_1CF695148()
{
  sub_1CF73EED4();
  sub_1CF73EF34();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF695188()
{
  return sub_1CF6B0D28();
}

void sub_1CF695190(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;

  sub_1CF6951C0();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3 & 1;
}

void sub_1CF6951C8(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = nullsub_1(*v1);
  OUTLINED_FUNCTION_1();
}

void sub_1CF6951EC(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

void sub_1CF6951F8(_DWORD *a1@<X8>)
{
  unsigned int *v1;

  *a1 = nullsub_1(*v1);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF69521C(uint64_t a1)
{
  MEMORY[0x1D17D3DEC](&unk_1CF740998, a1);
  return sub_1CF73E688();
}

uint64_t sub_1CF695258()
{
  MEMORY[0x1D17D3DEC](&unk_1CF740998);
  return sub_1CF73E67C();
}

uint64_t sub_1CF6952A0(uint64_t a1, uint64_t a2)
{
  sub_1CF73F7EC();
  MEMORY[0x1D17D3DEC](&unk_1CF740998, a2);
  sub_1CF73E67C();
  return sub_1CF73F810();
}

void sub_1CF6952F8(uint64_t *a1@<X8>)
{
  *a1 = sub_1CF6D4980();
  OUTLINED_FUNCTION_1();
}

void sub_1CF695318()
{
  sub_1CF6B336C();
}

uint64_t sub_1CF695324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1D17D3DEC](&unk_1CF740998, a3);
  return sub_1CF73E670();
}

void sub_1CF695370()
{
  sub_1CF6935F8(&qword_1EFBA2F00, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1CF7409F0);
}

void sub_1CF69539C()
{
  sub_1CF6935F8(&qword_1EFBA0C90, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1CF74096C);
}

_QWORD *sub_1CF6953C8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1CF6953D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1CF73EEB0();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_1CF695418(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1CF6B0D90();
  a1[1] = v2;
  OUTLINED_FUNCTION_1();
}

void type metadata accessor for CFNumber(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0C98);
}

void type metadata accessor for CFUUID(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0CA0);
}

void type metadata accessor for RPTrustedHostInfoKey(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0CA8);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1CF695484(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1CF6954A4(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for nw_frame_array_s(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0CB0);
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t sub_1CF6954E8(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 272))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1CF69553C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 272) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 272) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

void type metadata accessor for nw_protocol_callbacks(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0CB8);
}

__n128 __swift_memcpy40_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_1CF6955FC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1CF69561C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

void type metadata accessor for nw_protocol_identifier(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0CC0);
}

uint64_t sub_1CF695664()
{
  sub_1CF6935F8(&qword_1EFBA0EC0, (uint64_t (*)(uint64_t))type metadata accessor for RPTrustedHostInfoKey, (uint64_t)&unk_1CF740C34);
  sub_1CF6935F8(&qword_1EFBA0EC8, (uint64_t (*)(uint64_t))type metadata accessor for RPTrustedHostInfoKey, (uint64_t)&unk_1CF740B88);
  return sub_1CF73F48C();
}

void sub_1CF6956E8()
{
  sub_1CF6935F8(&qword_1EFBA0EA8, (uint64_t (*)(uint64_t))type metadata accessor for RPTrustedHostInfoKey, (uint64_t)&unk_1CF740B4C);
}

void sub_1CF695714()
{
  sub_1CF6935F8(&qword_1EFBA0EB0, (uint64_t (*)(uint64_t))type metadata accessor for RPTrustedHostInfoKey, (uint64_t)&unk_1CF740B20);
}

void sub_1CF695740()
{
  sub_1CF6935F8(&qword_1EFBA0EB8, (uint64_t (*)(uint64_t))type metadata accessor for RPTrustedHostInfoKey, (uint64_t)&unk_1CF740BBC);
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_1CF695778(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1CF695798(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for nw_protocol_message_properties(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0ED0);
}

void type metadata accessor for nw_protocol_info_type_t(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0ED8);
}

void type metadata accessor for nw_protocol_notification_type_t(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0EE0);
}

void type metadata accessor for nw_protocol_mapping_t(uint64_t a1)
{
  sub_1CF695824(a1, &qword_1EFBA0EE8);
}

void type metadata accessor for nw_protocol_level_t(uint64_t a1)
{
  sub_1CF695824(a1, (unint64_t *)&unk_1EFBA0EF0);
}

void sub_1CF695824(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

void static Defaults.hasBeenPaired.getter()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  if (qword_1EFBA07F0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  v0 = qword_1EFBA1020;
  v1 = *(_QWORD *)algn_1EFBA1028;
  v2 = word_1EFBA1030 | (HIBYTE(word_1EFBA1030) << 8);
  swift_bridgeObjectRetain();
  sub_1CF6958EC(v0, v1, v2);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

uint64_t sub_1CF6958EC(uint64_t a1, uint64_t a2, __int16 a3)
{
  unsigned __int8 v3;
  uint64_t *v4;
  id v5;
  void *v6;
  id v7;
  unsigned int v8;
  unsigned int v9;
  _OWORD v11[2];

  v3 = HIBYTE(a3);
  if ((a3 & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v4 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v4 = &qword_1ED8F6AE0;
  }
  v5 = (id)*v4;
  v6 = (void *)sub_1CF73EEB0();
  v7 = objc_msgSend(v5, sel_valueForKey_, v6);

  if (v7)
  {
    sub_1CF73F2DC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  v8 = v3;
  v9 = sub_1CF69AA14((uint64_t)v11);
  sub_1CF68DE94((uint64_t)v11, &qword_1ED8F7C80);
  if (v9 == 3)
    return v8;
  else
    return v9;
}

uint64_t sub_1CF695A1C()
{
  return sub_1CF695B4C((uint64_t (*)(uint64_t *, __n128))sub_1CF69AAA4);
}

uint64_t sub_1CF695A28()
{
  uint64_t v0;
  uint64_t *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15[4];

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v1 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v1 = &qword_1ED8F6AE0;
  }
  v2 = (id)*v1;
  v3 = (void *)sub_1CF73EEB0();
  v4 = OUTLINED_FUNCTION_59_0((uint64_t)v3, sel_valueForKey_);

  if (v4)
  {
    OUTLINED_FUNCTION_61();
    swift_unknownObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_60();
  }
  v5 = sub_1CF69AB4C((uint64_t)v15);
  v7 = v6;
  OUTLINED_FUNCTION_45(v5, &qword_1ED8F7C80, v8, v9, v10, v11, v12, v13, v15[0]);
  if (v7 == 1)
  {
    v5 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t sub_1CF695B4C(uint64_t (*a1)(uint64_t *, __n128))
{
  uint64_t v1;
  uint64_t *v3;
  id v4;
  void *v5;
  id v6;
  __n128 v7;
  uint64_t v8;
  __int16 v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18[4];

  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v3 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v3 = &qword_1ED8F6AE0;
  }
  v4 = (id)*v3;
  v5 = (void *)sub_1CF73EEB0();
  v6 = objc_msgSend(v4, sel_valueForKey_, v5);

  if (v6)
  {
    sub_1CF73F2DC();
    swift_unknownObjectRelease();
  }
  else
  {
    v7.n128_f64[0] = OUTLINED_FUNCTION_60();
  }
  v8 = a1(v18, v7);
  v10 = v9;
  OUTLINED_FUNCTION_45(v8, &qword_1ED8F7C80, v11, v12, v13, v14, v15, v16, v18[0]);
  if ((v10 & 0x100) != 0)
    return *(_QWORD *)(v1 + 24);
  return v8;
}

void sub_1CF695C88(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[4];

  if ((a3 & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v3 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v3 = &qword_1ED8F6AE0;
  }
  v4 = (id)*v3;
  v5 = (void *)sub_1CF73EEB0();
  v6 = OUTLINED_FUNCTION_59_0((uint64_t)v5, sel_valueForKey_);

  if (v6)
  {
    sub_1CF73F2DC();
    OUTLINED_FUNCTION_66();
  }
  else
  {
    OUTLINED_FUNCTION_60();
  }
  v14 = sub_1CF737A2C((uint64_t)v21, v7, v8, v9, v10, v11, v12, v13);
  OUTLINED_FUNCTION_45(v14, &qword_1ED8F7C80, v15, v16, v17, v18, v19, v20, v21[0]);
  OUTLINED_FUNCTION_5();
}

uint64_t sub_1CF695D94(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  _OWORD v11[2];

  if ((a3 & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v5 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v5 = &qword_1ED8F6AE0;
  }
  v6 = (id)*v5;
  v7 = (void *)sub_1CF73EEB0();
  v8 = objc_msgSend(v6, sel_valueForKey_, v7);

  if (v8)
  {
    sub_1CF73F2DC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  v9 = sub_1CF69A0B8((uint64_t)v11);
  sub_1CF68DE94((uint64_t)v11, &qword_1ED8F7C80);
  if (v9)
    return v9;
  swift_bridgeObjectRetain();
  return a4;
}

uint64_t sub_1CF695ECC()
{
  uint64_t v0;
  uint64_t *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v16[2];

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v1 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v1 = &qword_1ED8F6AE0;
  }
  v2 = (id)*v1;
  v3 = (void *)sub_1CF73EEB0();
  v4 = objc_msgSend(v2, sel_valueForKey_, v3);

  if (v4)
  {
    sub_1CF73F2DC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v16, 0, sizeof(v16));
  }
  v12 = sub_1CF737A38((uint64_t)v16, v5, v6, v7, v8, v9, v10, v11);
  v14 = v13;
  sub_1CF68DE94((uint64_t)v16, &qword_1ED8F7C80);
  if (!v14)
  {
    v12 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
  }
  return v12;
}

id sub_1CF696004(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  _OWORD v11[2];

  if ((a3 & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v4 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v4 = &qword_1ED8F6AE0;
  }
  v5 = (id)*v4;
  v6 = (void *)sub_1CF73EEB0();
  v7 = objc_msgSend(v5, sel_valueForKey_, v6);

  if (v7)
  {
    sub_1CF73F2DC();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  v8 = sub_1CF69B76C((uint64_t)v11);
  sub_1CF68DE94((uint64_t)v11, &qword_1ED8F7C80);
  if (v8)
    return v8;
  else
    return a4;
}

void DefaultsBackedProperty.wrappedValue.getter(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD v20[2];

  v3 = v2;
  v19 = a2;
  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_34();
  v8 = v7 - v6;
  v10 = *(_QWORD *)(v9 + 16);
  v18 = OUTLINED_FUNCTION_72();
  v11 = *(_QWORD *)(v18 - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v18 - v13;
  v15 = sub_1CF69B27C();
  v16 = (void *)sub_1CF73EEB0();
  v17 = objc_msgSend(v15, sel_valueForKey_, v16);

  if (v17)
  {
    sub_1CF73F2DC();
    OUTLINED_FUNCTION_66();
  }
  else
  {
    memset(v20, 0, sizeof(v20));
  }
  (*(void (**)(_OWORD *, uint64_t))(*(_QWORD *)(a1 + 24) + 16))(v20, v10);
  sub_1CF68DE94((uint64_t)v20, &qword_1ED8F7C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v8, v3, a1);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v10) == 1)
  {
    OUTLINED_FUNCTION_39(v19, v8 + *(int *)(a1 + 40), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16));
    OUTLINED_FUNCTION_46();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v18);
  }
  else
  {
    OUTLINED_FUNCTION_46();
    OUTLINED_FUNCTION_39(v19, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32));
  }
  OUTLINED_FUNCTION_17();
}

void static Defaults.hasBeenPaired.setter(char a1)
{
  if (qword_1EFBA07F0 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_3();
  sub_1CF696334(a1);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF696334(char a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  _UNKNOWN **v14;

  *((_QWORD *)&v13 + 1) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA13D8);
  v14 = &protocol witness table for A?;
  LOBYTE(v12) = a1;
  if (*(_BYTE *)__swift_project_boxed_opaque_existential_0Tm(&v12, *((uint64_t *)&v13 + 1)) == 2)
  {
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      if (qword_1EFBA08D0 != -1)
        swift_once();
      v3 = &qword_1EFBA1300;
    }
    else
    {
      if (qword_1ED8F6AE8 != -1)
        swift_once();
      v3 = &qword_1ED8F6AE0;
    }
    v5 = (id)*v3;
    v6 = (void *)sub_1CF73EEB0();
    objc_msgSend(v5, sel_removeObjectForKey_, v6);

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v12);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v12);
    if ((*(_BYTE *)(v1 + 16) & 1) != 0)
    {
      if (qword_1EFBA08D0 != -1)
        swift_once();
      v4 = &qword_1EFBA1300;
    }
    else
    {
      if (qword_1ED8F6AE8 != -1)
        swift_once();
      v4 = &qword_1ED8F6AE0;
    }
    v7 = (void *)*v4;
    if (a1 == 2)
    {
      v12 = 0u;
      v13 = 0u;
    }
    else
    {
      *((_QWORD *)&v13 + 1) = MEMORY[0x1E0DEAFA0];
      LOBYTE(v12) = a1 & 1;
    }
    sub_1CF691028((uint64_t)&v12, (uint64_t)&v11);
    v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
    v9 = sub_1CF73F6F0();
    sub_1CF68DE94((uint64_t)&v12, &qword_1ED8F7C80);
    v10 = (void *)sub_1CF73EEB0();
    objc_msgSend(v8, sel_setValue_forKey_, v9, v10);

    swift_unknownObjectRelease();
  }
}

void sub_1CF696560(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  __int128 v13[2];
  uint64_t v14;
  char v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1308);
  if (swift_dynamicCast())
  {
    sub_1CF68C850(v13, (uint64_t)v16);
    v3 = v17;
    v4 = v18;
    __swift_project_boxed_opaque_existential_0Tm(v16, v17);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) != 0)
    {
      if ((*(_BYTE *)(v1 + 16) & 1) != 0)
      {
        if (qword_1EFBA08D0 != -1)
          swift_once();
        v5 = &qword_1EFBA1300;
      }
      else
      {
        if (qword_1ED8F6AE8 != -1)
          swift_once();
        v5 = &qword_1ED8F6AE0;
      }
      v11 = (id)*v5;
      v12 = (void *)sub_1CF73EEB0();
      objc_msgSend(v11, sel_removeObjectForKey_, v12);

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  }
  else
  {
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_1CF68DE94((uint64_t)v13, &qword_1EFBA1310);
  }
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v6 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v6 = &qword_1ED8F6AE0;
  }
  v7 = (void *)*v6;
  LOBYTE(v16[0]) = a1 & 1;
  v8 = v7;
  v9 = sub_1CF73F6F0();
  v10 = (void *)sub_1CF73EEB0();
  objc_msgSend(v8, sel_setValue_forKey_, v9, v10);

  swift_unknownObjectRelease();
}

void sub_1CF6967A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  _QWORD v15[3];
  uint64_t v16;
  _UNKNOWN **v17;

  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1940);
  v17 = &protocol witness table for A?;
  v15[0] = a1;
  v15[1] = a2;
  if (__swift_project_boxed_opaque_existential_0Tm(v15, v16)[1])
  {
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
    {
      if (qword_1EFBA08D0 != -1)
        swift_once();
      v5 = &qword_1EFBA1300;
    }
    else
    {
      if (qword_1ED8F6AE8 != -1)
        swift_once();
      v5 = &qword_1ED8F6AE0;
    }
    v8 = (void *)*v5;
    sub_1CF69ADFC(a1, a2, v15);
    __swift_project_boxed_opaque_existential_0Tm(v15, v16);
    v9 = v8;
    v10 = sub_1CF73F684();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
    v11 = (void *)sub_1CF73EEB0();
    objc_msgSend(v9, sel_setValue_forKey_, v10, v11);
    swift_bridgeObjectRelease();

    swift_unknownObjectRelease();
  }
  else
  {
    if ((*(_BYTE *)(v2 + 16) & 1) != 0)
    {
      v6 = qword_1EFBA08D0;
      swift_bridgeObjectRetain();
      if (v6 != -1)
        swift_once();
      v7 = &qword_1EFBA1300;
    }
    else
    {
      v12 = qword_1ED8F6AE8;
      swift_bridgeObjectRetain();
      if (v12 != -1)
        swift_once();
      v7 = &qword_1ED8F6AE0;
    }
    v13 = (id)*v7;
    v14 = (void *)sub_1CF73EEB0();
    objc_msgSend(v13, sel_removeObjectForKey_, v14);
    swift_bridgeObjectRelease();

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  }
}

void sub_1CF6969D4(uint64_t a1, char a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t *v8;
  uint64_t *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  _UNKNOWN **v19;

  *((_QWORD *)&v18 + 1) = __swift_instantiateConcreteTypeFromMangledName(a3);
  v19 = &protocol witness table for A?;
  *(_QWORD *)&v17 = a1;
  BYTE8(v17) = a2 & 1;
  if (*((_BYTE *)__swift_project_boxed_opaque_existential_0Tm(&v17, *((uint64_t *)&v18 + 1)) + 8) == 1)
  {
    if ((*(_BYTE *)(v4 + 16) & 1) != 0)
    {
      if (qword_1EFBA08D0 != -1)
        swift_once();
      v8 = &qword_1EFBA1300;
    }
    else
    {
      if (qword_1ED8F6AE8 != -1)
        swift_once();
      v8 = &qword_1ED8F6AE0;
    }
    v10 = (id)*v8;
    OUTLINED_FUNCTION_69();
    v11 = (void *)sub_1CF73EEB0();
    objc_msgSend(v10, sel_removeObjectForKey_, v11);

    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v17);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v17);
    if ((*(_BYTE *)(v4 + 16) & 1) != 0)
    {
      if (qword_1EFBA08D0 != -1)
        swift_once();
      v9 = &qword_1EFBA1300;
    }
    else
    {
      if (qword_1ED8F6AE8 != -1)
        swift_once();
      v9 = &qword_1ED8F6AE0;
    }
    v12 = (void *)*v9;
    if ((a2 & 1) != 0)
    {
      v17 = 0u;
      v18 = 0u;
    }
    else
    {
      *((_QWORD *)&v18 + 1) = a4;
      *(_QWORD *)&v17 = a1;
    }
    sub_1CF691028((uint64_t)&v17, (uint64_t)&v16);
    v13 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
    v14 = sub_1CF73F6F0();
    sub_1CF68DE94((uint64_t)&v17, &qword_1ED8F7C80);
    v15 = (void *)sub_1CF73EEB0();
    objc_msgSend(v13, sel_setValue_forKey_, v14, v15);

    swift_unknownObjectRelease();
  }
}

void sub_1CF696BFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  id v11;
  void *v12;
  __int128 v13[2];
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[3];
  uint64_t v17;
  uint64_t v18;

  v15 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1308);
  if (swift_dynamicCast())
  {
    sub_1CF68C850(v13, (uint64_t)v16);
    v3 = v17;
    v4 = v18;
    __swift_project_boxed_opaque_existential_0Tm(v16, v17);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) != 0)
    {
      if ((*(_BYTE *)(v1 + 16) & 1) != 0)
      {
        if (qword_1EFBA08D0 != -1)
          swift_once();
        v5 = &qword_1EFBA1300;
      }
      else
      {
        if (qword_1ED8F6AE8 != -1)
          swift_once();
        v5 = &qword_1ED8F6AE0;
      }
      v11 = (id)*v5;
      v12 = (void *)sub_1CF73EEB0();
      objc_msgSend(v11, sel_removeObjectForKey_, v12);

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
  }
  else
  {
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_1CF68DE94((uint64_t)v13, &qword_1EFBA1310);
  }
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v6 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v6 = &qword_1ED8F6AE0;
  }
  v7 = (void *)*v6;
  v16[0] = a1;
  v8 = v7;
  v9 = sub_1CF73F6F0();
  v10 = (void *)sub_1CF73EEB0();
  objc_msgSend(v8, sel_setValue_forKey_, v9, v10);

  swift_unknownObjectRelease();
}

void sub_1CF696E38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  void *v11;
  __int128 v12[2];
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  v14 = a1;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA13C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1308);
  if (swift_dynamicCast())
  {
    sub_1CF68C850(v12, (uint64_t)v15);
    v3 = v16;
    v4 = v17;
    __swift_project_boxed_opaque_existential_0Tm(v15, v16);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4) & 1) != 0)
    {
      if ((*(_BYTE *)(v1 + 16) & 1) != 0)
      {
        if (qword_1EFBA08D0 != -1)
          swift_once();
        v5 = &qword_1EFBA1300;
      }
      else
      {
        if (qword_1ED8F6AE8 != -1)
          swift_once();
        v5 = &qword_1ED8F6AE0;
      }
      v10 = (id)*v5;
      v11 = (void *)sub_1CF73EEB0();
      objc_msgSend(v10, sel_removeObjectForKey_, v11);
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  }
  else
  {
    v13 = 0;
    memset(v12, 0, sizeof(v12));
    sub_1CF68DE94((uint64_t)v12, &qword_1EFBA1310);
  }
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v6 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v6 = &qword_1ED8F6AE0;
  }
  v7 = (id)*v6;
  sub_1CF69A3EC(a1, v15);
  __swift_project_boxed_opaque_existential_0Tm(v15, v16);
  v8 = sub_1CF73F684();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  v9 = (void *)sub_1CF73EEB0();
  objc_msgSend(v7, sel_setValue_forKey_, v8, v9);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
}

void sub_1CF6970AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;
  void *v14;
  __int128 v15[2];
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v17 = a1;
  v18 = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1308);
  if (swift_dynamicCast())
  {
    sub_1CF68C850(v15, (uint64_t)v19);
    v5 = v20;
    v6 = v21;
    __swift_project_boxed_opaque_existential_0Tm(v19, v20);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6) & 1) != 0)
    {
      if ((*(_BYTE *)(v2 + 16) & 1) != 0)
      {
        if (qword_1EFBA08D0 != -1)
          swift_once();
        v7 = &qword_1EFBA1300;
      }
      else
      {
        if (qword_1ED8F6AE8 != -1)
          swift_once();
        v7 = &qword_1ED8F6AE0;
      }
      v13 = (id)*v7;
      v14 = (void *)sub_1CF73EEB0();
      objc_msgSend(v13, sel_removeObjectForKey_, v14);
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
  }
  else
  {
    v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_1CF68DE94((uint64_t)v15, &qword_1EFBA1310);
  }
  if ((*(_BYTE *)(v2 + 16) & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v8 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v8 = &qword_1ED8F6AE0;
  }
  v9 = (void *)*v8;
  v19[0] = a1;
  v19[1] = a2;
  swift_bridgeObjectRetain();
  v10 = v9;
  v11 = sub_1CF73F6F0();
  v12 = (void *)sub_1CF73EEB0();
  objc_msgSend(v10, sel_setValue_forKey_, v11, v12);
  swift_bridgeObjectRelease();

  swift_unknownObjectRelease();
}

void sub_1CF69730C(void *a1)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t *v7;
  void *v8;
  id v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  __int128 v14[2];
  uint64_t v15;
  void *v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v16 = a1;
  type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  v3 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1308);
  if (swift_dynamicCast())
  {
    sub_1CF68C850(v14, (uint64_t)v17);
    v4 = v18;
    v5 = v19;
    __swift_project_boxed_opaque_existential_0Tm(v17, v18);
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5) & 1) != 0)
    {
      if ((*(_BYTE *)(v1 + 16) & 1) != 0)
      {
        if (qword_1EFBA08D0 != -1)
          swift_once();
        v6 = &qword_1EFBA1300;
      }
      else
      {
        if (qword_1ED8F6AE8 != -1)
          swift_once();
        v6 = &qword_1ED8F6AE0;
      }
      v12 = (id)*v6;
      v13 = (void *)sub_1CF73EEB0();
      objc_msgSend(v12, sel_removeObjectForKey_, v13);

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
      return;
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  }
  else
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_1CF68DE94((uint64_t)v14, &qword_1EFBA1310);
  }
  if ((*(_BYTE *)(v1 + 16) & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v7 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v7 = &qword_1ED8F6AE0;
  }
  v8 = (void *)*v7;
  v17[0] = *(_QWORD *)&v3[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue];
  v9 = v8;
  v10 = sub_1CF73F6F0();
  v11 = (void *)sub_1CF73EEB0();
  objc_msgSend(v9, sel_setValue_forKey_, v10, v11);

  swift_unknownObjectRelease();
}

void DefaultsBackedProperty.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  void *v14;
  __int128 v15[2];
  uint64_t v16;
  _QWORD v17[3];
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_34();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7 - v6, a1, v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1308);
  if ((OUTLINED_FUNCTION_53() & 1) == 0)
  {
    v16 = 0;
    memset(v15, 0, sizeof(v15));
    sub_1CF68DE94((uint64_t)v15, &qword_1EFBA1310);
LABEL_6:
    v12 = OUTLINED_FUNCTION_54_1();
    (*(void (**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)(a2 + 24) + 8))(v17, v4);
    __swift_project_boxed_opaque_existential_0Tm(v17, v18);
    v13 = sub_1CF73F684();
    OUTLINED_FUNCTION_73_0();
    v14 = (void *)sub_1CF73EEB0();
    objc_msgSend(v12, sel_setValue_forKey_, v13, v14);

    OUTLINED_FUNCTION_66();
    OUTLINED_FUNCTION_52_0();
    goto LABEL_7;
  }
  sub_1CF68C850(v15, (uint64_t)v17);
  v8 = v18;
  v9 = v19;
  __swift_project_boxed_opaque_existential_0Tm(v17, v18);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9) & 1) == 0)
  {
    OUTLINED_FUNCTION_73_0();
    goto LABEL_6;
  }
  v10 = OUTLINED_FUNCTION_54_1();
  v11 = (void *)sub_1CF73EEB0();
  objc_msgSend(v10, sel_removeObjectForKey_, v11);

  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_73_0();
LABEL_7:
  OUTLINED_FUNCTION_42();
}

void static Defaults.hasBeenPaired.modify(uint64_t a1)
{
  if (qword_1EFBA07F0 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  *(_BYTE *)(a1 + 24) = sub_1CF6958EC(qword_1EFBA1020, *(uint64_t *)algn_1EFBA1028, word_1EFBA1030 | (unsigned __int16)(HIBYTE(word_1EFBA1030) << 8));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF69777C(uint64_t a1)
{
  sub_1CF696334(*(_BYTE *)(a1 + 24));
  return OUTLINED_FUNCTION_18_0();
}

void sub_1CF6977B0()
{
  strcpy((char *)&qword_1EFBA1020, "hasBeenPaired");
  *(_WORD *)&algn_1EFBA1028[6] = -4864;
  word_1EFBA1030 = 513;
}

uint64_t DefaultsBackedProperty<>.init(key:domain:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v11;

  OUTLINED_FUNCTION_62_0();
  v5 = v4;
  MEMORY[0x1E0C80A78]();
  OUTLINED_FUNCTION_34();
  v8 = v7 - v6;
  v11 = *v9;
  sub_1CF73F654();
  return sub_1CF6979A0(v3, v2, &v11, v8, v1, v0, v5);
}

void static Defaults.networkPairingEnabled.getter()
{
  if (qword_1ED8F7988 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.networkPairingEnabled.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1ED8F7988);
}

void static Defaults.networkPairingEnabled.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1ED8F7988 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF697968(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF697974()
{
  qword_1ED8F7968 = 0xD000000000000015;
  unk_1ED8F7970 = 0x80000001CF750190;
  word_1ED8F7978 = 0;
}

uint64_t sub_1CF6979A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v10;
  uint64_t v11;

  v10 = *a3;
  *(_QWORD *)a7 = a1;
  *(_QWORD *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 16) = v10;
  v11 = a7 + *(int *)(type metadata accessor for DefaultsBackedProperty(0, a5, a6, a4) + 40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(v11, a4, a5);
}

void static Defaults.tunnelMaxPendingPackets.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;

  if (qword_1EFBA0800 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_13_3(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = OUTLINED_FUNCTION_43((uint64_t (*)(uint64_t *, __n128))sub_1CF69AAA4);
  OUTLINED_FUNCTION_20_0(v8, v9, v10, v11);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_24();
}

void static Defaults.tunnelMaxPendingPackets.setter()
{
  sub_1CF697BB8();
}

void static Defaults.tunnelMaxPendingPackets.modify()
{
  void *v0;
  uint64_t v1;
  char v2;

  v0 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_32((uint64_t)v0);
  if (qword_1EFBA0800 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_23_0();
  v1 = sub_1CF695B4C((uint64_t (*)(uint64_t *, __n128))sub_1CF69AAA4);
  OUTLINED_FUNCTION_29(v1, v2);
  OUTLINED_FUNCTION_1();
}

void sub_1CF697AF8()
{
  sub_1CF69827C();
}

void sub_1CF697B14()
{
  qword_1EFBA1050 = 0;
  byte_1EFBA1058 = 1;
  OUTLINED_FUNCTION_19_0((uint64_t)&unk_1EFBA1038);
}

void static Defaults.tunnelMTU.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;

  if (qword_1EFBA0808 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_13_3(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = OUTLINED_FUNCTION_43((uint64_t (*)(uint64_t *, __n128))sub_1CF69AAA4);
  OUTLINED_FUNCTION_20_0(v8, v9, v10, v11);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_24();
}

void static Defaults.tunnelMTU.setter()
{
  sub_1CF697BB8();
}

void sub_1CF697BB8()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_47_0();
  if (!v0)
    OUTLINED_FUNCTION_56_0();
  v1 = OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_70(v1, v2, &qword_1EFBA13D0, MEMORY[0x1E0DEB418]);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.tunnelMTU.modify()
{
  void *v0;
  uint64_t v1;
  char v2;

  v0 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_32((uint64_t)v0);
  if (qword_1EFBA0808 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_23_0();
  v1 = sub_1CF695B4C((uint64_t (*)(uint64_t *, __n128))sub_1CF69AAA4);
  OUTLINED_FUNCTION_29(v1, v2);
  OUTLINED_FUNCTION_1();
}

void sub_1CF697C88()
{
  sub_1CF69827C();
}

void sub_1CF697CA4()
{
  qword_1EFBA1078 = 0;
  byte_1EFBA1080 = 1;
  qword_1EFBA1060 = 0x544D6C656E6E7574;
  *(_QWORD *)algn_1EFBA1068 = 0xE900000000000055;
  byte_1EFBA1070 = 0;
}

void static Defaults.enableTunnelPacketTracing.getter()
{
  if (qword_1EFBA0810 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.enableTunnelPacketTracing.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA0810);
}

void static Defaults.enableTunnelPacketTracing.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA0810 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF697DC8(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF697DD4()
{
  OUTLINED_FUNCTION_33_0((uint64_t)&qword_1EFBA1088);
}

void static Defaults.deviceAllowTCPControlChannels.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1ED8F79A8);
}

void static Defaults.deviceAllowTCPControlChannels.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1ED8F79A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF697E70(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF697E7C()
{
  qword_1ED8F7990 = 0xD00000000000001DLL;
  *(_QWORD *)algn_1ED8F7998 = 0x80000001CF750130;
  word_1ED8F79A0 = 256;
}

void static Defaults.deviceFixedNetworkPairingPin.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  if (qword_1EFBA0820 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_30(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = sub_1CF695A28();
  OUTLINED_FUNCTION_49(v8, v9, v10, v11);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_24();
}

void static Defaults.deviceFixedNetworkPairingPin.setter()
{
  sub_1CF699220();
}

void static Defaults.deviceFixedNetworkPairingPin.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_32((uint64_t)v1);
  if (qword_1EFBA0820 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_3();
  *(_QWORD *)(v0 + 64) = OUTLINED_FUNCTION_37();
  *(_QWORD *)(v0 + 72) = v2;
  OUTLINED_FUNCTION_1();
}

void sub_1CF697F9C()
{
  sub_1CF69888C();
}

void sub_1CF697FA8()
{
  qword_1EFBA10B8 = 0;
  qword_1EFBA10C0 = 0;
  OUTLINED_FUNCTION_19_0((uint64_t)&xmmword_1EFBA10A0);
}

void static Defaults.pairingRecordExpiryInterval.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;

  if (qword_1ED8F6968 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_13_3(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = OUTLINED_FUNCTION_43((uint64_t (*)(uint64_t *, __n128))sub_1CF69ABE4);
  OUTLINED_FUNCTION_20_0(v8, v9, v10, v11);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_24();
}

void static Defaults.pairingRecordExpiryInterval.setter()
{
  sub_1CF698044();
}

void sub_1CF698044()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_47_0();
  if (!v0)
    OUTLINED_FUNCTION_56_0();
  v1 = OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_70(v1, v2, &qword_1EFBA13C8, MEMORY[0x1E0DEB070]);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.pairingRecordExpiryInterval.modify()
{
  void *v0;
  uint64_t v1;
  char v2;

  v0 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_32((uint64_t)v0);
  if (qword_1ED8F6968 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_23_0();
  v1 = sub_1CF695B4C((uint64_t (*)(uint64_t *, __n128))sub_1CF69ABE4);
  OUTLINED_FUNCTION_29(v1, v2);
  OUTLINED_FUNCTION_1();
}

void sub_1CF698114()
{
  sub_1CF69827C();
}

void sub_1CF698130()
{
  qword_1ED8F6958 = 0;
  byte_1ED8F6960 = 1;
  qword_1ED8F6940 = 0xD00000000000001BLL;
  *(_QWORD *)algn_1ED8F6948 = 0x80000001CF7500F0;
  byte_1ED8F6950 = 0;
}

void static Defaults.pairingRecordLastUsedUpdateInterval.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;

  if (qword_1ED8F69A0 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_13_3(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = OUTLINED_FUNCTION_43((uint64_t (*)(uint64_t *, __n128))sub_1CF69ABE4);
  OUTLINED_FUNCTION_20_0(v8, v9, v10, v11);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_24();
}

void static Defaults.pairingRecordLastUsedUpdateInterval.setter()
{
  sub_1CF698044();
}

void static Defaults.pairingRecordLastUsedUpdateInterval.modify()
{
  void *v0;
  uint64_t v1;
  char v2;

  v0 = OUTLINED_FUNCTION_28_1();
  OUTLINED_FUNCTION_32((uint64_t)v0);
  if (qword_1ED8F69A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_23_0();
  v1 = sub_1CF695B4C((uint64_t (*)(uint64_t *, __n128))sub_1CF69ABE4);
  OUTLINED_FUNCTION_29(v1, v2);
  OUTLINED_FUNCTION_1();
}

void sub_1CF698260()
{
  sub_1CF69827C();
}

void sub_1CF69827C()
{
  char *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_50();
  sub_1CF6969D4(*(_QWORD *)(v1 + 64), v0[72], v2, v3);
  OUTLINED_FUNCTION_67();
  free(v0);
}

void sub_1CF6982C0()
{
  qword_1ED8F6988 = 0;
  byte_1ED8F6990 = 1;
  qword_1ED8F6970 = 0xD000000000000023;
  *(_QWORD *)algn_1ED8F6978 = 0x80000001CF7500C0;
  byte_1ED8F6980 = 0;
}

void static Defaults.hostAllowBonjourDeviceDiscovery.getter()
{
  if (qword_1EFBA0828 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostAllowBonjourDeviceDiscovery.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA0828);
}

void static Defaults.hostAllowBonjourDeviceDiscovery.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA0828 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6983E4(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF6983F0()
{
  qword_1EFBA10C8 = 0xD00000000000001FLL;
  unk_1EFBA10D0 = 0x80000001CF7500A0;
  word_1EFBA10D8 = 256;
}

void static Defaults.hostAllowRSDDeviceDiscovery.getter()
{
  if (qword_1EFBA0830 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostAllowRSDDeviceDiscovery.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA0830);
}

void static Defaults.hostAllowRSDDeviceDiscovery.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA0830 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF69850C(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF698518()
{
  qword_1EFBA10E0 = 0xD00000000000001BLL;
  *(_QWORD *)algn_1EFBA10E8 = 0x80000001CF750080;
  word_1EFBA10F0 = 256;
}

void static Defaults.deviceTunnelKeepWiFiAlive.getter()
{
  if (qword_1EFBA0838 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.deviceTunnelKeepWiFiAlive.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA0838);
}

void static Defaults.deviceTunnelKeepWiFiAlive.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA0838 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF698634(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF698640()
{
  qword_1EFBA10F8 = 0xD000000000000019;
  unk_1EFBA1100 = 0x80000001CF750060;
  word_1EFBA1108 = 0;
}

void static Defaults.deviceAllowBluetoothDeviceDiscovery.getter()
{
  if (qword_1ED8F7960 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.deviceAllowBluetoothDeviceDiscovery.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1ED8F7960);
}

void static Defaults.deviceAllowBluetoothDeviceDiscovery.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1ED8F7960 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF698758(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF698764()
{
  qword_1ED8F7948 = 0xD000000000000023;
  unk_1ED8F7950 = 0x80000001CF750030;
  word_1ED8F7958 = 0;
}

void static Defaults.hostAllowBluetoothDeviceDiscoveryForTypes.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  if (qword_1EFBA0848 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_30(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = sub_1CF695A28();
  OUTLINED_FUNCTION_49(v8, v9, v10, v11);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_24();
}

void static Defaults.hostAllowBluetoothDeviceDiscoveryForTypes.setter()
{
  sub_1CF699220();
}

void static Defaults.hostAllowBluetoothDeviceDiscoveryForTypes.modify()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;

  v1 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_32((uint64_t)v1);
  if (qword_1EFBA0848 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_3();
  *(_QWORD *)(v0 + 64) = OUTLINED_FUNCTION_37();
  *(_QWORD *)(v0 + 72) = v2;
  OUTLINED_FUNCTION_1();
}

void sub_1CF698880()
{
  sub_1CF69888C();
}

void sub_1CF69888C()
{
  void *v0;
  char v1;

  OUTLINED_FUNCTION_50();
  if ((v1 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_58_1();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_58_1();
  }
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_25(v0);
}

double sub_1CF6988E0()
{
  double result;

  result = 3.97310753e252;
  unk_1EFBA1128 = xmmword_1CF740D20;
  qword_1EFBA1110 = 0xD000000000000029;
  *(_QWORD *)algn_1EFBA1118 = 0x80000001CF750000;
  byte_1EFBA1120 = 0;
  return result;
}

void static Defaults.hostDeviceDiscoveryPrewarmingDelay.getter()
{
  if (qword_1EFBA0850 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostDeviceDiscoveryPrewarmingDelay.setter(uint64_t a1)
{
  sub_1CF699668(a1, &qword_1EFBA0850, (uint64_t)&qword_1EFBA1138, sub_1CF696BFC);
}

void static Defaults.hostDeviceDiscoveryPrewarmingDelay.modify(uint64_t a1)
{
  uint64_t v2;

  if (qword_1EFBA0850 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_22();
  *(_QWORD *)(a1 + 24) = v2;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF698A00(uint64_t a1)
{
  return sub_1CF69972C(a1);
}

void sub_1CF698A0C()
{
  qword_1EFBA1150 = 5;
  qword_1EFBA1138 = 0xD000000000000022;
  unk_1EFBA1140 = 0x80000001CF74FFD0;
  byte_1EFBA1148 = 0;
}

void static Defaults.hostAllowNCMInterfaceForNetworkControlChannels.getter()
{
  if (qword_1EFBA0858 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostAllowNCMInterfaceForNetworkControlChannels.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA0858);
}

void static Defaults.hostAllowNCMInterfaceForNetworkControlChannels.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA0858 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF698B2C(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF698B38()
{
  OUTLINED_FUNCTION_33_0((uint64_t)&qword_1EFBA1158);
}

void static Defaults.hostUseLockdownForPairSetup.getter()
{
  if (qword_1EFBA0860 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostUseLockdownForPairSetup.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA0860);
}

void static Defaults.hostUseLockdownForPairSetup.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA0860 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF698C3C(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF698C48()
{
  qword_1EFBA1170 = 0xD00000000000001BLL;
  *(_QWORD *)algn_1EFBA1178 = 0x80000001CF74FF80;
  word_1EFBA1180 = 256;
}

void static Defaults.hostUseIndirectLockdownConnections.getter()
{
  if (qword_1EFBA0868 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostUseIndirectLockdownConnections.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA0868);
}

void static Defaults.hostUseIndirectLockdownConnections.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA0868 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF698D64(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF698D70()
{
  qword_1EFBA1188 = 0xD000000000000022;
  unk_1EFBA1190 = 0x80000001CF74FF50;
  word_1EFBA1198 = 0;
}

void static Defaults.hostProactivelyUpgradeLockdownPairingRecords.getter()
{
  if (qword_1EFBA0870 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostProactivelyUpgradeLockdownPairingRecords.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA0870);
}

void static Defaults.hostProactivelyUpgradeLockdownPairingRecords.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA0870 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF698E88(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF698E94()
{
  qword_1EFBA11A0 = 0xD00000000000002CLL;
  *(_QWORD *)algn_1EFBA11A8 = 0x80000001CF74FF20;
  word_1EFBA11B0 = 256;
}

void static Defaults.hostCreateWritableDataVaultedLocationOnStartup.getter()
{
  if (qword_1EFBA0878 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostCreateWritableDataVaultedLocationOnStartup.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA0878);
}

void static Defaults.hostCreateWritableDataVaultedLocationOnStartup.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA0878 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF698FB0(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF698FBC()
{
  qword_1EFBA11B8 = 0xD00000000000002ELL;
  unk_1EFBA11C0 = 0x80000001CF74FEF0;
  word_1EFBA11C8 = 0;
}

void static Defaults.hostAdditionalControlChannelSupportedRSDDeviceTypes.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  if (qword_1EFBA0880 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_1();
  swift_bridgeObjectRetain();
  sub_1CF695D94(v0, v1, v2, (uint64_t)&qword_1EFBA11D0);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostAdditionalControlChannelSupportedRSDDeviceTypes.setter(uint64_t a1)
{
  sub_1CF699668(a1, &qword_1EFBA0880, (uint64_t)&qword_1EFBA11D0, sub_1CF696E38);
}

void static Defaults.hostAdditionalControlChannelSupportedRSDDeviceTypes.modify(uint64_t a1)
{
  if (qword_1EFBA0880 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  *(_QWORD *)(a1 + 24) = sub_1CF695D94(qword_1EFBA11D0, *(uint64_t *)algn_1EFBA11D8, byte_1EFBA11E0, qword_1EFBA11E8);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6990FC(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_48(a1);
  if ((v2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    sub_1CF696E38(v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CF696E38(v1);
  }
  return OUTLINED_FUNCTION_41_0();
}

void sub_1CF699144()
{
  qword_1EFBA11E8 = MEMORY[0x1E0DEE9D8];
  qword_1EFBA11D0 = 0xD000000000000033;
  *(_QWORD *)algn_1EFBA11D8 = 0x80000001CF74FEB0;
  byte_1EFBA11E0 = 0;
}

void static Defaults.hostTunnelConnectionProtocol.getter()
{
  _OWORD v0[2];
  uint64_t v1;

  if (qword_1EFBA0888 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  v0[0] = xmmword_1EFBA11F0;
  v0[1] = *(_OWORD *)&byte_1EFBA1200;
  v1 = qword_1EFBA1210;
  sub_1CF69B474((uint64_t)v0);
  sub_1CF695ECC();
  sub_1CF69B4A8((uint64_t)v0);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_24();
}

void static Defaults.hostTunnelConnectionProtocol.setter()
{
  sub_1CF699220();
}

void sub_1CF699220()
{
  void (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_62_0();
  if (*v3 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_3();
  v0(v2, v1);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostTunnelConnectionProtocol.modify()
{
  uint64_t v0;
  void *v1;
  __int128 v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_38_1();
  OUTLINED_FUNCTION_32((uint64_t)v1);
  if (qword_1EFBA0888 != -1)
    swift_once();
  OUTLINED_FUNCTION_2_3();
  v2 = *(_OWORD *)&byte_1EFBA1200;
  *(_OWORD *)v0 = xmmword_1EFBA11F0;
  *(_OWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 32) = qword_1EFBA1210;
  *(_QWORD *)(v0 + 64) = sub_1CF695ECC();
  *(_QWORD *)(v0 + 72) = v3;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6992F4()
{
  void *v0;
  char v1;

  OUTLINED_FUNCTION_50();
  if ((v1 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_55();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_55();
  }
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_25(v0);
}

void sub_1CF699354()
{
  qword_1EFBA1208 = 7365492;
  qword_1EFBA1210 = 0xE300000000000000;
  *(_QWORD *)&xmmword_1EFBA11F0 = 0xD00000000000001CLL;
  *((_QWORD *)&xmmword_1EFBA11F0 + 1) = 0x80000001CF74FE90;
  byte_1EFBA1200 = 0;
}

void static Defaults.hostControlChannelConnectionLifetimeReconnectionThreshold.getter()
{
  if (qword_1EFBA0890 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostControlChannelConnectionLifetimeReconnectionThreshold.setter(uint64_t a1)
{
  sub_1CF699668(a1, &qword_1EFBA0890, (uint64_t)&qword_1EFBA1218, sub_1CF696BFC);
}

void static Defaults.hostControlChannelConnectionLifetimeReconnectionThreshold.modify(uint64_t a1)
{
  uint64_t v2;

  if (qword_1EFBA0890 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_22();
  *(_QWORD *)(a1 + 24) = v2;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF699478(uint64_t a1)
{
  return sub_1CF69972C(a1);
}

void sub_1CF699484()
{
  qword_1EFBA1230 = 5;
  qword_1EFBA1218 = 0xD000000000000039;
  unk_1EFBA1220 = 0x80000001CF74FE50;
  byte_1EFBA1228 = 0;
}

void static Defaults.hostTunnelHeartbeatInterval.getter()
{
  if (qword_1EFBA0898 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostTunnelHeartbeatInterval.setter(uint64_t a1)
{
  sub_1CF699668(a1, &qword_1EFBA0898, (uint64_t)&qword_1EFBA1238, sub_1CF696BFC);
}

void static Defaults.hostTunnelHeartbeatInterval.modify(uint64_t a1)
{
  uint64_t v2;

  if (qword_1EFBA0898 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_22();
  *(_QWORD *)(a1 + 24) = v2;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6995A0(uint64_t a1)
{
  return sub_1CF69972C(a1);
}

void sub_1CF6995AC()
{
  qword_1EFBA1250 = 30;
  qword_1EFBA1238 = 0xD00000000000001BLL;
  unk_1EFBA1240 = 0x80000001CF74FE30;
  byte_1EFBA1248 = 0;
}

void static Defaults.tunnelPacketFlowStatsInterval.getter()
{
  if (qword_1EFBA08A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_5();
}

void static Defaults.tunnelPacketFlowStatsInterval.setter(uint64_t a1)
{
  sub_1CF699668(a1, &qword_1EFBA08A0, (uint64_t)&qword_1EFBA1258, sub_1CF696BFC);
}

void sub_1CF699668(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (*a2 != -1)
    OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_2_3();
  a4(a1);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.tunnelPacketFlowStatsInterval.modify(uint64_t a1)
{
  uint64_t v2;

  if (qword_1EFBA08A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_22();
  *(_QWORD *)(a1 + 24) = v2;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF699720(uint64_t a1)
{
  return sub_1CF69972C(a1);
}

uint64_t sub_1CF69972C(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_48(a1);
  sub_1CF696BFC(v1);
  return OUTLINED_FUNCTION_18_0();
}

void sub_1CF699754()
{
  qword_1EFBA1270 = 30;
  OUTLINED_FUNCTION_19_0((uint64_t)&qword_1EFBA1258);
}

void static Defaults.hostMinumumSupportedWatchWireProtocolVersion.getter()
{
  if (qword_1EFBA08A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_31_1(&qword_1EFBA1278);

  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostMinumumSupportedWatchWireProtocolVersion.setter(void *a1)
{
  sub_1CF699984(a1, &qword_1EFBA08A8);
}

void static Defaults.hostMinumumSupportedWatchWireProtocolVersion.modify(uint64_t a1)
{
  if (qword_1EFBA08A8 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF69985C(uint64_t a1)
{
  return sub_1CF699A44(a1);
}

id sub_1CF699868()
{
  if (qword_1ED8F7910 != -1)
    swift_once();
  swift_beginAccess();
  qword_1EFBA1290 = qword_1ED8F7900;
  qword_1EFBA1278 = 0xD00000000000002CLL;
  unk_1EFBA1280 = 0x80000001CF74FDE0;
  byte_1EFBA1288 = 0;
  return (id)qword_1ED8F7900;
}

void static Defaults.hostMinumumSupportedDeviceWireProtocolVersion.getter()
{
  if (qword_1EFBA08B0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_10_1();
  OUTLINED_FUNCTION_31_1(&qword_1EFBA1298);

  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostMinumumSupportedDeviceWireProtocolVersion.setter(void *a1)
{
  sub_1CF699984(a1, &qword_1EFBA08B0);
}

void sub_1CF699984(void *a1, _QWORD *a2)
{
  id v3;

  if (*a2 != -1)
    OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_2_3();
  v3 = a1;
  sub_1CF69730C(v3);
  OUTLINED_FUNCTION_27_0();

  OUTLINED_FUNCTION_26();
}

void static Defaults.hostMinumumSupportedDeviceWireProtocolVersion.modify(uint64_t a1)
{
  if (qword_1EFBA08B0 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  *(_QWORD *)(a1 + 24) = OUTLINED_FUNCTION_51();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF699A38(uint64_t a1)
{
  return sub_1CF699A44(a1);
}

uint64_t sub_1CF699A44(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  char v3;

  v2 = (void *)OUTLINED_FUNCTION_48(a1);
  if ((v3 & 1) != 0)
  {
    sub_1CF69730C(v2);

  }
  else
  {
    sub_1CF69730C(v2);
  }
  return OUTLINED_FUNCTION_41_0();
}

id sub_1CF699A80()
{
  uint64_t *v0;

  if (_RPIsAppleInternal())
  {
    if (qword_1ED8F7910 != -1)
      swift_once();
    v0 = &qword_1ED8F7900;
    swift_beginAccess();
  }
  else
  {
    if (qword_1EFBA0950 != -1)
      swift_once();
    v0 = &qword_1EFBB2018;
  }
  qword_1EFBA12B0 = *v0;
  qword_1EFBA1298 = 0xD00000000000002DLL;
  unk_1EFBA12A0 = 0x80000001CF74FDB0;
  byte_1EFBA12A8 = 0;
  return (id)qword_1EFBA12B0;
}

void static Defaults.tunnelUseSkywalk.getter()
{
  if (qword_1EFBA08B8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.tunnelUseSkywalk.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA08B8);
}

void static Defaults.tunnelUseSkywalk.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA08B8 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF699C3C(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF699C48()
{
  qword_1EFBA12B8 = 0xD000000000000010;
  unk_1EFBA12C0 = 0x80000001CF74FD90;
  word_1EFBA12C8 = 0;
}

void static Defaults.hostPreferPairingViaLockdown.getter()
{
  if (qword_1EFBA08C0 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostPreferPairingViaLockdown.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA08C0);
}

void static Defaults.hostPreferPairingViaLockdown.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA08C0 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF699D60(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

void sub_1CF699D6C()
{
  qword_1EFBA12D0 = 0xD00000000000001CLL;
  *(_QWORD *)algn_1EFBA12D8 = 0x80000001CF74FD70;
  word_1EFBA12E0 = 0;
}

void static Defaults.hostPreferMigratableTunnels.getter()
{
  if (qword_1EFBA08C8 != -1)
    swift_once();
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_0();
  OUTLINED_FUNCTION_9_0();
  OUTLINED_FUNCTION_6();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_5();
}

void static Defaults.hostPreferMigratableTunnels.setter(char a1)
{
  sub_1CF699E1C(a1, &qword_1EFBA08C8);
}

void sub_1CF699E1C(char a1, _QWORD *a2)
{
  if (*a2 != -1)
    OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_2_3();
  sub_1CF696560(a1 & 1);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void static Defaults.hostPreferMigratableTunnels.modify()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  if (qword_1EFBA08C8 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  v0 = OUTLINED_FUNCTION_3_3();
  OUTLINED_FUNCTION_14_2(v0, v1, v2);
  OUTLINED_FUNCTION_15_0(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF699ED0(uint64_t a1)
{
  return sub_1CF699EDC(a1);
}

uint64_t sub_1CF699EDC(uint64_t a1)
{
  sub_1CF696560(*(_BYTE *)(a1 + 24));
  return OUTLINED_FUNCTION_18_0();
}

void sub_1CF699F08()
{
  qword_1EFBA12E8 = 0xD00000000000001BLL;
  unk_1EFBA12F0 = 0x80000001CF74FD50;
  word_1EFBA12F8 = 0;
}

void sub_1CF699F34(uint64_t a1)
{
  OUTLINED_FUNCTION_36(a1, 20, 0x80000001CF74FD30, &qword_1EFBA1300);
}

void sub_1CF699F54(uint64_t a1)
{
  OUTLINED_FUNCTION_36(a1, 23, 0x80000001CF74FD10, &qword_1ED8F6AE0);
}

void sub_1CF699F74(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  id v7;
  id v8;

  v7 = objc_allocWithZone(MEMORY[0x1E0C99EA0]);
  v8 = sub_1CF69C33C(a2, a3);
  if (v8)
  {
    *a4 = v8;
    OUTLINED_FUNCTION_40();
  }
  else
  {
    __break(1u);
  }
}

RemotePairingDevice::DefaultsDomain_optional __swiftcall DefaultsDomain.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  RemotePairingDevice::DefaultsDomain_optional result;

  v2 = v1;
  v3 = sub_1CF73F498();
  swift_bridgeObjectRelease();
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v3)
    v4 = 0;
  *v2 = v4;
  OUTLINED_FUNCTION_40();
  return result;
}

uint64_t DefaultsDomain.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x6976654465726F63;
  else
    return 0x615065746F6D6572;
}

void sub_1CF69A068(char *a1, char *a2)
{
  sub_1CF6B3560(*a1, *a2);
}

void sub_1CF69A074()
{
  sub_1CF6B3CE4();
}

uint64_t sub_1CF69A07C()
{
  return sub_1CF6B3EF4();
}

void sub_1CF69A084()
{
  sub_1CF6B4388();
}

RemotePairingDevice::DefaultsDomain_optional sub_1CF69A08C(Swift::String *a1)
{
  return DefaultsDomain.init(rawValue:)(*a1);
}

void sub_1CF69A098(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = DefaultsDomain.rawValue.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF69A0B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[6];
  _QWORD v11[4];
  _BYTE v12[24];
  uint64_t v13;

  sub_1CF691028(a1, (uint64_t)v12);
  if (!v13)
  {
    sub_1CF68DE94((uint64_t)v12, &qword_1ED8F7C80);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1318);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v1 = *(_QWORD *)(v11[0] + 16);
  if (v1)
  {
    v2 = v11[0] + 32;
    swift_bridgeObjectRetain();
    v3 = MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1CF68F1EC(v2, (uint64_t)v12);
      sub_1CF68F1EC((uint64_t)v12, (uint64_t)v11);
      sub_1CF691028((uint64_t)v11, (uint64_t)v10);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
      v4 = swift_dynamicCast();
      if (v4)
        v5 = v10[4];
      else
        v5 = 0;
      sub_1CF68DE94((uint64_t)v11, &qword_1ED8F7C80);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v12);
      if (v4)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CF6C6C64();
          v3 = v7;
        }
        v6 = *(_QWORD *)(v3 + 16);
        if (v6 >= *(_QWORD *)(v3 + 24) >> 1)
        {
          sub_1CF6C6C64();
          v3 = v8;
        }
        *(_QWORD *)(v3 + 16) = v6 + 1;
        *(_QWORD *)(v3 + 8 * v6 + 32) = v5;
      }
      v2 += 32;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

uint64_t static Array<A>.transformForDefaultsRead(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD v5[4];

  sub_1CF691028(a1, (uint64_t)v5);
  if (!v5[3])
  {
    sub_1CF68DE94((uint64_t)v5, &qword_1ED8F7C80);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1318);
  v1 = OUTLINED_FUNCTION_53();
  if ((v1 & 1) == 0)
    return 0;
  v5[0] = v4;
  MEMORY[0x1E0C80A78](v1);
  sub_1CF69B4F4();
  v2 = sub_1CF73EFDC();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1CF69A380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BYTE v6[32];

  sub_1CF68F1EC(a1, (uint64_t)v6);
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(a3 + 16))(v6, a2, a3);
  return sub_1CF68DE94((uint64_t)v6, &qword_1ED8F7C80);
}

uint64_t sub_1CF69A3EC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  if (v3)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1CF6A2E74();
    v6 = (uint64_t *)(a1 + 32);
    v4 = v12;
    do
    {
      v7 = *v6++;
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CF6A2E74();
        v4 = v12;
      }
      v9 = *(_QWORD *)(v4 + 16);
      if (v9 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_1CF6A2E74();
        v4 = v12;
      }
      *(_QWORD *)(v4 + 16) = v9 + 1;
      v10 = v4 + 16 * v9;
      *(_QWORD *)(v10 + 32) = sub_1CF69C440;
      *(_QWORD *)(v10 + 40) = v8;
      --v3;
    }
    while (v3);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1330);
  a2[3] = result;
  *a2 = v4;
  return result;
}

void Array<A>.transformForDefaultsWrite()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[6];

  v10[5] = a1;
  v10[2] = a2;
  v10[3] = a3;
  v5 = sub_1CF73F06C();
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1328);
  v7 = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEAF50], v5);
  v9 = sub_1CF69A684((void (*)(char *, char *))sub_1CF69B57C, (uint64_t)v10, v5, v6, MEMORY[0x1E0DEDCE8], v7, MEMORY[0x1E0DEDD18], v8);
  a4[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1330);
  *a4 = v9;
  OUTLINED_FUNCTION_44();
}

void (*sub_1CF69A5B4(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v5 = *(_QWORD *)(a2 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a2;
  *(_QWORD *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_1CF69C3F4;
}

uint64_t sub_1CF69A670@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  a2[3] = MEMORY[0x1E0DEB418];
  *a2 = result;
  return result;
}

uint64_t sub_1CF69A684(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  void (*v25)(char *, _QWORD);
  void (*v26)(char *);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t AssociatedTypeWitness;
  void (*v45)(char *, char *);
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char v50[32];
  uint64_t v51;

  v37 = a5;
  v38 = a8;
  v45 = a1;
  v46 = a2;
  v36 = *(_QWORD *)(a5 - 8);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v47 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v11 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v13 = (char *)&v34 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = swift_getAssociatedTypeWitness();
  v39 = *(_QWORD *)(v16 - 8);
  v40 = v16;
  v17 = MEMORY[0x1E0C80A78](v16);
  v35 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v34 - v19;
  v21 = sub_1CF73F090();
  if (!v21)
    return sub_1CF73F054();
  v22 = v21;
  v51 = sub_1CF73F3F0();
  v41 = sub_1CF73F3FC();
  sub_1CF73F3B4();
  v43 = a6;
  result = sub_1CF73F084();
  if ((v22 & 0x8000000000000000) == 0)
  {
    v24 = v22;
    v42 = v15;
    while (v24)
    {
      v48 = v24;
      v25 = (void (*)(char *, _QWORD))sub_1CF73F0A8();
      v26 = *(void (**)(char *))(v10 + 16);
      v27 = v10;
      v28 = AssociatedTypeWitness;
      v26(v13);
      v25(v50, 0);
      v29 = v20;
      v30 = v49;
      v45(v13, v47);
      if (v30)
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v40);
        swift_release();
        return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v38, v47, v37);
      }
      v49 = 0;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v28);
      sub_1CF73F3E4();
      result = sub_1CF73F09C();
      v24 = v48 - 1;
      v10 = v27;
      if (v48 == 1)
      {
        v32 = v39;
        v31 = v40;
        v33 = v35;
        (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v29, v40);
        sub_1CF73F30C();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
        return v51;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1CF69A9D4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;

  Array<A>.transformForDefaultsWrite()(*v3, *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 - 8), a3);
}

uint64_t sub_1CF69A9E8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = static Array<A>.transformForDefaultsRead(_:)(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1CF69AA14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  _BYTE v5[24];
  uint64_t v6;

  sub_1CF691028(a1, (uint64_t)v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  v1 = MEMORY[0x1E0DEAFA0];
  if (!swift_dynamicCast())
    return 3;
  v6 = v1;
  v5[0] = v4 & 1;
  v2 = sub_1CF690FD4((uint64_t)v5);
  sub_1CF68DE94((uint64_t)v5, &qword_1ED8F7C80);
  return v2;
}

uint64_t sub_1CF69AAA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD v12[4];

  sub_1CF691028(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  v1 = MEMORY[0x1E0DEB418];
  if (!swift_dynamicCast())
    return 0;
  v12[3] = v1;
  v12[0] = v11;
  v9 = sub_1CF737A2C((uint64_t)v12, v2, v3, v4, v5, v6, v7, v8);
  sub_1CF68DE94((uint64_t)v12, &qword_1ED8F7C80);
  return v9;
}

uint64_t sub_1CF69AB4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];

  sub_1CF691028(a1, (uint64_t)v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  v1 = MEMORY[0x1E0DEA968];
  if (!swift_dynamicCast())
    return 0;
  v13[3] = v1;
  v13[0] = v11;
  v13[1] = v12;
  v9 = sub_1CF737A38((uint64_t)v13, v2, v3, v4, v5, v6, v7, v8);
  sub_1CF68DE94((uint64_t)v13, &qword_1ED8F7C80);
  return v9;
}

uint64_t sub_1CF69ABE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD v12[4];

  sub_1CF691028(a1, (uint64_t)v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  v1 = MEMORY[0x1E0DEB070];
  if (!swift_dynamicCast())
    return 0;
  v12[3] = v1;
  v12[0] = v11;
  v9 = sub_1CF737A88((uint64_t)v12, v2, v3, v4, v5, v6, v7, v8);
  sub_1CF68DE94((uint64_t)v12, &qword_1ED8F7C80);
  return v9;
}

void static Optional<A>.transformForDefaultsRead(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v19;
  uint64_t v20[4];

  v8 = sub_1CF73F288();
  v9 = *(_QWORD *)(v8 - 8);
  OUTLINED_FUNCTION_68();
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v20 - v12;
  v14 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_34();
  v17 = v16 - v15;
  sub_1CF691028(a1, (uint64_t)v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  if (OUTLINED_FUNCTION_53())
  {
    OUTLINED_FUNCTION_63_0((uint64_t)v13, 0);
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v17, v13, a2);
    v20[3] = a2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v20);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v14 + 16))(boxed_opaque_existential_0, v17, a2);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(a3 + 16))(v20, a2, a3);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v17, a2);
    sub_1CF68DE94((uint64_t)v20, &qword_1ED8F7C80);
    v19 = 0;
  }
  else
  {
    v19 = 1;
    OUTLINED_FUNCTION_63_0((uint64_t)v13, 1);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  }
  __swift_storeEnumTagSinglePayload(a4, v19, 1, v8);
  OUTLINED_FUNCTION_17();
}

uint64_t sub_1CF69ADFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  v6 = (_QWORD *)swift_allocObject();
  *a3 = v6;
  if (a2)
  {
    v7 = MEMORY[0x1E0DEA968];
    v8 = a2;
  }
  else
  {
    a1 = 0;
    v8 = 0;
    v7 = 0;
    v6[4] = 0;
  }
  v6[2] = a1;
  v6[3] = v8;
  v6[5] = v7;
  return swift_bridgeObjectRetain();
}

void Optional<A>.transformForDefaultsWrite()(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD v6[6];

  v6[2] = *(_QWORD *)(a1 + 16);
  v6[3] = a2;
  a3[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  v4 = swift_allocObject();
  *a3 = v4;
  sub_1CF69AF0C((void (*)(char *, char *))sub_1CF69B5F4, (uint64_t)v6, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEE9B8] + 8, v5, v4 + 16);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_1CF69AF0C@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *);

  v25 = a5;
  v26 = a4;
  v27 = a2;
  v28 = a1;
  v9 = *(_QWORD *)(a3 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(v13 + 16);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v10);
  v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v14) == 1)
    return __swift_storeEnumTagSinglePayload(a6, 1, 1, v26);
  v26 = a3;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  v28(v18, v12);
  result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  if (v6)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v25, v12, v26);
  return result;
}

void sub_1CF69B094(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  Optional<A>.transformForDefaultsWrite()(a1, *(_QWORD *)(a2 - 8), a3);
}

void sub_1CF69B09C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  static Optional<A>.transformForDefaultsRead(_:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a3 - 8), a4);
}

void static PrimitiveDefaultsValueTransformable.transformForDefaultsRead(_:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  uint64_t v4;

  sub_1CF691028(a1, (uint64_t)&v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  v3 = OUTLINED_FUNCTION_53();
  OUTLINED_FUNCTION_64_0(a2, v3 ^ 1u);
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1CF69B0FC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  a3[3] = MEMORY[0x1E0CB0338];
  *a3 = a1;
  a3[1] = a2;
  return sub_1CF6934BC(a1, a2);
}

uint64_t sub_1CF69B110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  a3[3] = MEMORY[0x1E0DEA968];
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CF69B128@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)a2 = result;
  return result;
}

void sub_1CF69B13C(uint64_t a1@<X8>, double a2@<D0>)
{
  *(_QWORD *)(a1 + 24) = MEMORY[0x1E0DEB070];
  *(double *)a1 = a2;
}

uint64_t PrimitiveDefaultsValueTransformable.transformForDefaultsWrite()@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t *boxed_opaque_existential_0;

  a2[3] = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(a2);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(boxed_opaque_existential_0, v2, a1);
}

uint64_t sub_1CF69B188@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1CF69B110(*v1, v1[1], a1);
}

uint64_t sub_1CF69B190@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t result;
  uint64_t v11;

  result = sub_1CF737A38(a1, a2, a3, a4, a5, a6, a7, a8);
  *a9 = result;
  a9[1] = v11;
  return result;
}

uint64_t sub_1CF69B1B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1CF69A670(*v1, a1);
}

uint64_t sub_1CF69B1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t result;
  char v11;

  result = sub_1CF737A2C(a1, a2, a3, a4, a5, a6, a7, a8);
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = v11 & 1;
  return result;
}

void sub_1CF69B1E8(uint64_t a1@<X8>)
{
  double *v1;

  sub_1CF69B13C(a1, *v1);
}

uint64_t sub_1CF69B1F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t result;
  char v11;

  result = sub_1CF737A88(a1, a2, a3, a4, a5, a6, a7, a8);
  *(_QWORD *)a9 = result;
  *(_BYTE *)(a9 + 8) = v11 & 1;
  return result;
}

uint64_t sub_1CF69B21C@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;

  return sub_1CF69B128(*v1, a1);
}

void sub_1CF69B224(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  *a2 = sub_1CF690FD4(a1);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF69B244@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_1CF69B0FC(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), a1);
}

BOOL Optional.isNil.getter(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, *(_QWORD *)(a1 + 16)) == 1;
}

id sub_1CF69B27C()
{
  uint64_t v0;
  uint64_t *v1;

  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    if (qword_1EFBA08D0 != -1)
      swift_once();
    v1 = &qword_1EFBA1300;
  }
  else
  {
    if (qword_1ED8F6AE8 != -1)
      swift_once();
    v1 = &qword_1ED8F6AE0;
  }
  return (id)*v1;
}

void sub_1CF69B2FC(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for DefaultsBackedProperty(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  DefaultsBackedProperty.wrappedValue.getter(v5, a4);
}

void sub_1CF69B334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a4 + a3 - 16);
  v5 = *(_QWORD *)(a4 + a3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v11 - v6;
  (*(void (**)(char *))(v8 + 16))((char *)&v11 - v6);
  v10 = type metadata accessor for DefaultsBackedProperty(0, v4, v5, v9);
  DefaultsBackedProperty.wrappedValue.setter((uint64_t)v7, v10);
}

uint64_t sub_1CF69B3BC(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CF69B3F0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CF69B424(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CF69B44C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CF69B474(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1CF69B4A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CF69B4DC(uint64_t a1)
{
  uint64_t v1;

  return sub_1CF69A380(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1CF69B4F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBA1320;
  if (!qword_1EFBA1320)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBA1318);
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EFBA1320);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1D17D3DE0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void (*sub_1CF69B57C@<X0>(uint64_t a1@<X0>, void (**a2)()@<X8>))()
{
  uint64_t v2;
  void (*result)();
  void (*v5)();

  result = sub_1CF69A5B4(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_1CF69B5F4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 24) + 8))(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1CF69B628()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 40))
    __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

void (*DefaultsBackedProperty.wrappedValue.modify(_QWORD *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  DefaultsBackedProperty.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_1CF69B6D8;
}

void sub_1CF69B6D8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (void *)(*a1)[4];
  v4 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    v5 = v2[2];
    v6 = v2[3];
    v7 = *v2;
    OUTLINED_FUNCTION_39((*a1)[4], (uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    DefaultsBackedProperty.wrappedValue.setter((uint64_t)v3, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    DefaultsBackedProperty.wrappedValue.setter((*a1)[5], *v2);
  }
  free(v4);
  free(v3);
  free(v2);
}

id sub_1CF69B76C(uint64_t a1)
{
  uint64_t v1;
  objc_class *v2;
  char *v3;
  objc_super v5;
  _BYTE v6[32];
  uint64_t v7;

  sub_1CF691028(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C80);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v1 = v7;
  v2 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = v1;
  v5.receiver = v3;
  v5.super_class = v2;
  return objc_msgSendSuper2(&v5, sel_init);
}

void static DefaultsValueTransformable<>.transformForDefaultsRead(_:)(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v20 = a4;
  v19 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = OUTLINED_FUNCTION_72();
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_68();
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - v11;
  v13 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v14 = MEMORY[0x1E0C80A78](v10);
  v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v19 - v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 16))(a1, AssociatedTypeWitness, a3);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v7);
    OUTLINED_FUNCTION_64_0(v20, 1);
  }
  else
  {
    OUTLINED_FUNCTION_39((uint64_t)v18, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
    OUTLINED_FUNCTION_39((uint64_t)v16, (uint64_t)v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
    sub_1CF73EFF4();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, AssociatedTypeWitness);
  }
  OUTLINED_FUNCTION_17();
}

void DefaultsValueTransformable<>.transformForDefaultsWrite()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v10 - v8;
  sub_1CF73EFE8();
  (*(void (**)(uint64_t, uint64_t))(a4 + 8))(AssociatedTypeWitness, a4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, AssociatedTypeWitness);
  OUTLINED_FUNCTION_42();
}

unint64_t sub_1CF69BA2C()
{
  unint64_t result;

  result = qword_1EFBA1338[0];
  if (!qword_1EFBA1338[0])
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for DefaultsDomain, &type metadata for DefaultsDomain);
    atomic_store(result, qword_1EFBA1338);
  }
  return result;
}

uint64_t sub_1CF69BA70()
{
  return 16;
}

__n128 sub_1CF69BA7C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for Defaults()
{
  return &type metadata for Defaults;
}

uint64_t getEnumTagSinglePayload for DefaultsDomain(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for DefaultsDomain(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF69BB6C + 4 * byte_1CF740D35[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF69BBA0 + 4 * byte_1CF740D30[v4]))();
}

uint64_t sub_1CF69BBA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF69BBA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF69BBB0);
  return result;
}

uint64_t sub_1CF69BBBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF69BBC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF69BBC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF69BBD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1CF69BBDC(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DefaultsDomain()
{
  return &type metadata for DefaultsDomain;
}

uint64_t dispatch thunk of DefaultsValueTransformable.transformForDefaultsWrite()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static DefaultsValueTransformable.transformForDefaultsRead(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of AnyOptional.isNil.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_1CF69BC10()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CF69BC18()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CF69BC98(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 17) & (unint64_t)~v6) + *(_QWORD *)(v5 + 64) > 0x18)
  {
    v9 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16));
    swift_retain();
  }
  else
  {
    v10 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v10;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v11 = (a1 + v6 + 17) & ~v6;
    v12 = ((unint64_t)a2 + v6 + 17) & ~v6;
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

uint64_t sub_1CF69BD64(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

uint64_t sub_1CF69BDA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = (v7 + 17 + a1) & ~v7;
  v9 = (v7 + 17 + a2) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  swift_bridgeObjectRetain();
  v10(v8, v9, v5);
  return a1;
}

uint64_t sub_1CF69BE20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))((*(unsigned __int8 *)(v6 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1CF69BEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1CF69BEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 17 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 17 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1CF69BF68(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  int v12;
  unsigned int v14;
  int v15;
  unint64_t v16;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  v9 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_22;
  v10 = ((v8 + 17) & ~v8) + *(_QWORD *)(v5 + 64);
  v11 = 8 * v10;
  if (v10 <= 3)
  {
    v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      v12 = *(_DWORD *)(a1 + v10);
      if (!v12)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      v12 = *(unsigned __int16 *)(a1 + v10);
      if (!*(_WORD *)(a1 + v10))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_22:
      if ((v6 & 0x80000000) != 0)
        return __swift_getEnumTagSinglePayload((a1 + v8 + 17) & ~v8, v6, v4);
      v16 = *(_QWORD *)(a1 + 8);
      if (v16 >= 0xFFFFFFFF)
        LODWORD(v16) = -1;
      return (v16 + 1);
    }
  }
  v12 = *(unsigned __int8 *)(a1 + v10);
  if (!*(_BYTE *)(a1 + v10))
    goto LABEL_22;
LABEL_15:
  v15 = (v12 - 1) << v11;
  if (v10 > 3)
    v15 = 0;
  if (!(_DWORD)v10)
    return v7 + v15 + 1;
  if (v10 > 3)
    LODWORD(v10) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1CF69C03C + 4 * byte_1CF740D3A[(v10 - 1)]))();
}

void sub_1CF69C0A8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  char v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(_QWORD *)(v5 + 64);
  v8 = 8 * v7;
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v11 = ((a3 - v6 + ~(-1 << v8)) >> v8) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v6 < a2)
  {
    v10 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v12 = v10 & ~(-1 << v8);
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t type metadata accessor for DefaultsBackedProperty(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DefaultsBackedProperty);
}

void sub_1CF69C2A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnectionWireProtocolVersion, a1);
  DefaultsValueTransformable<>.transformForDefaultsWrite()(a1, v3, v2, (uint64_t)&protocol witness table for Int);
}

void sub_1CF69C2F0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnectionWireProtocolVersion);
  static DefaultsValueTransformable<>.transformForDefaultsRead(_:)(a1, v4, (uint64_t)&protocol witness table for Int, a2);
  OUTLINED_FUNCTION_40();
}

id sub_1CF69C33C(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  id v4;

  if (a2)
  {
    v3 = (void *)sub_1CF73EEB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v3 = 0;
  }
  v4 = objc_msgSend(v2, sel_initWithSuiteName_, v3);

  return v4;
}

uint64_t sub_1CF69C39C()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
  return swift_deallocObject();
}

void sub_1CF69C3F4()
{
  uint64_t v0;

  (*(void (**)(void))(*(_QWORD *)(v0 + 24) + 8))();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF69C428@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1CF69A670(*a1, a2);
}

uint64_t sub_1CF69C430()
{
  return swift_deallocObject();
}

uint64_t sub_1CF69C440@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1CF69C428((uint64_t *)(v1 + 16), a1);
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1D17D3D68](a1, v6, a5);
}

uint64_t OUTLINED_FUNCTION_18_0()
{
  return swift_endAccess();
}

void OUTLINED_FUNCTION_19_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  *(_QWORD *)(a1 + 8) = (v1 - 32) | 0x8000000000000000;
  *(_BYTE *)(a1 + 16) = 0;
}

uint64_t OUTLINED_FUNCTION_20_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_list va;

  va_start(va, a4);
  return sub_1CF69B44C((uint64_t)va);
}

void OUTLINED_FUNCTION_22()
{
  uint64_t v0;

  sub_1CF695C88(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void OUTLINED_FUNCTION_25(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, __int128 a13, __int128 a14, uint64_t a15)
{
  __int128 *v15;
  __int128 v16;

  v16 = v15[1];
  a13 = *v15;
  a14 = v16;
  a15 = *((_QWORD *)v15 + 4);
  return sub_1CF69B3BC((uint64_t)&a13);
}

id OUTLINED_FUNCTION_31_1(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  return sub_1CF696004(v1, v2, v3, a1);
}

void OUTLINED_FUNCTION_33_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)a1 = v2 & 0xFFFFFFFFFFFFLL | 0xD000000000000000;
  *(_QWORD *)(a1 + 8) = (v1 - 32) | 0x8000000000000000;
  *(_WORD *)(a1 + 16) = 0;
}

uint64_t OUTLINED_FUNCTION_37()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;

  v2 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)v1 = *(_OWORD *)v0;
  *(_OWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(v0 + 32);
  return sub_1CF695A28();
}

void *OUTLINED_FUNCTION_38_1()
{
  return malloc(0x50uLL);
}

uint64_t OUTLINED_FUNCTION_39@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_45(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_1CF68DE94((uint64_t)&a9, a2);
}

uint64_t OUTLINED_FUNCTION_48(uint64_t a1)
{
  return *(_QWORD *)(a1 + 24);
}

id OUTLINED_FUNCTION_51()
{
  uint64_t v0;

  return sub_1CF696004(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

id OUTLINED_FUNCTION_54_1()
{
  return sub_1CF69B27C();
}

void OUTLINED_FUNCTION_55()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CF6970AC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return swift_once();
}

uint64_t OUTLINED_FUNCTION_57_0()
{
  return swift_once();
}

void OUTLINED_FUNCTION_58_1()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CF6967A0(v0, v1);
}

id OUTLINED_FUNCTION_59_0(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

double OUTLINED_FUNCTION_60()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_61()
{
  return sub_1CF73F2DC();
}

uint64_t OUTLINED_FUNCTION_63_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_64_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_66()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_67()
{
  return swift_endAccess();
}

void OUTLINED_FUNCTION_70(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  char v5;

  sub_1CF6969D4(v4, v5, a3, a4);
}

void PairedHostInfo.name.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_1();
}

uint64_t PairedHostInfo.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_27();
  v0 = OUTLINED_FUNCTION_69();
  return OUTLINED_FUNCTION_65(v0, v1, v2, v3);
}

uint64_t type metadata accessor for PairedHostInfo(uint64_t a1)
{
  return sub_1CF6A36B8(a1, (uint64_t *)&unk_1EFBA16B0);
}

uint64_t PairedHostInfo.identitifer.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_27();
  v0 = OUTLINED_FUNCTION_69();
  return OUTLINED_FUNCTION_65(v0, v1, v2, v3);
}

uint64_t PairedHostInfo.lastUsed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_64_2(v1 + *(int *)(v3 + 28), a1);
}

uint64_t PairedHostInfo.initialPairingTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_38_0();
  return OUTLINED_FUNCTION_64_2(v1 + *(int *)(v3 + 32), a1);
}

uint64_t PairedHostInfo.pairedForAutomation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_38_0() + 36));
}

void PairedHostInfo.model.getter()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_1();
}

void PairedHostInfo.serialNumber.getter()
{
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_86();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_1();
}

void PairedHostInfo.init(name:identifier:lastUsed:initialPairingTime:pairedForAutomation:model:serialNumber:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, uint64_t a4@<X7>, _QWORD *a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a5 = a1;
  a5[1] = a2;
  v8 = type metadata accessor for PairedHostInfo(0);
  v9 = (uint64_t)a5 + *(int *)(v8 + 20);
  v10 = *(_QWORD *)(OUTLINED_FUNCTION_27() - 8);
  OUTLINED_FUNCTION_33_1(v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  OUTLINED_FUNCTION_33_1((uint64_t)a5 + *(int *)(v8 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
  OUTLINED_FUNCTION_81();
  v11 = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_22_0(v11, v12, v13, v14, v15, v16, v17, v18, v19, a7, a3, a4);
  OUTLINED_FUNCTION_30_0();
}

uint64_t sub_1CF69C834(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void PairedHostInfo.init(name:identitifer:lastUsed:initialPairingTime:pairedForAutomation:model:serialNumber:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X6>, uint64_t a4@<X7>, _QWORD *a5@<X8>, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *a5 = a1;
  a5[1] = a2;
  v8 = type metadata accessor for PairedHostInfo(0);
  v9 = (uint64_t)a5 + *(int *)(v8 + 20);
  v10 = *(_QWORD *)(OUTLINED_FUNCTION_27() - 8);
  OUTLINED_FUNCTION_33_1(v9, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
  OUTLINED_FUNCTION_33_1((uint64_t)a5 + *(int *)(v8 + 24), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 32));
  OUTLINED_FUNCTION_81();
  v11 = OUTLINED_FUNCTION_78();
  OUTLINED_FUNCTION_22_0(v11, v12, v13, v14, v15, v16, v17, v18, v19, a7, a3, a4);
  OUTLINED_FUNCTION_30_0();
}

BOOL sub_1CF69C914(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_1CF69C924()
{
  return sub_1CF73F7F8();
}

uint64_t sub_1CF69C948(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v6 || (sub_1CF73F690() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x697469746E656469 && a2 == 0xEB00000000726566;
      if (v7 || (sub_1CF73F690() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x646573557473616CLL && a2 == 0xE800000000000000;
        if (v8 || (sub_1CF73F690() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x80000001CF750360 || (sub_1CF73F690() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000013 && a2 == 0x80000001CF750380 || (sub_1CF73F690() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          v9 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
          if (v9 || (sub_1CF73F690() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0x754E6C6169726573 && a2 == 0xEC0000007265626DLL)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v11 = sub_1CF73F690();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_1CF69CC94()
{
  return 8;
}

uint64_t sub_1CF69CC9C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CF69CCC8 + 4 * byte_1CF740FE0[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_1CF69CCC8()
{
  return 0x696669746E656469;
}

uint64_t sub_1CF69CCE4()
{
  return 0x697469746E656469;
}

uint64_t sub_1CF69CD04()
{
  return 0x646573557473616CLL;
}

unint64_t sub_1CF69CD1C()
{
  return 0xD000000000000012;
}

unint64_t sub_1CF69CD38()
{
  return 0xD000000000000013;
}

uint64_t sub_1CF69CD58()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_1CF69CD6C()
{
  return 0x754E6C6169726573;
}

BOOL sub_1CF69CD8C(char *a1, char *a2)
{
  return sub_1CF69C914(*a1, *a2);
}

void sub_1CF69CD98()
{
  sub_1CF69FA04();
}

uint64_t sub_1CF69CDB0()
{
  return sub_1CF69C924();
}

uint64_t sub_1CF69CDBC()
{
  unsigned __int8 *v0;

  return sub_1CF69CC9C(*v0);
}

uint64_t sub_1CF69CDC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69C948(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF69CDE8()
{
  return sub_1CF69E8C4();
}

uint64_t sub_1CF69CE04@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF69CC94();
  *a1 = result;
  return result;
}

uint64_t sub_1CF69CE28()
{
  sub_1CF69D078();
  return sub_1CF73F864();
}

uint64_t sub_1CF69CE50()
{
  sub_1CF69D078();
  return sub_1CF73F870();
}

void PairedHostInfo.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;

  OUTLINED_FUNCTION_2();
  a26 = v29;
  a27 = v30;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA13E8);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_54_2();
  sub_1CF69D078();
  OUTLINED_FUNCTION_23();
  a17 = 0;
  sub_1CF73F5C4();
  if (!v27)
  {
    OUTLINED_FUNCTION_38_0();
    OUTLINED_FUNCTION_90();
    OUTLINED_FUNCTION_27();
    sub_1CF6935F8(&qword_1EFBA13F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    OUTLINED_FUNCTION_46_0();
    a15 = 2;
    OUTLINED_FUNCTION_46_0();
    a14 = 3;
    sub_1CF73E61C();
    sub_1CF6935F8(&qword_1EFBA1400, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    OUTLINED_FUNCTION_45_0();
    a13 = 4;
    OUTLINED_FUNCTION_45_0();
    a12 = 5;
    sub_1CF73F5D0();
    a11 = 6;
    OUTLINED_FUNCTION_92();
    a10 = 7;
    OUTLINED_FUNCTION_92();
  }
  OUTLINED_FUNCTION_37_0((uint64_t)v33, *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8));
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1CF69D078()
{
  unint64_t result;

  result = qword_1EFBA13F0;
  if (!qword_1EFBA13F0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742628, &type metadata for PairedHostInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA13F0);
  }
  return result;
}

void PairedHostInfo.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t (*v43)(_QWORD);
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  OUTLINED_FUNCTION_2();
  v52 = v0;
  v3 = v2;
  v45 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_101();
  v46 = v6 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v44 - v9;
  v53 = OUTLINED_FUNCTION_27();
  v48 = *(_QWORD *)(v53 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_101();
  v14 = (char *)(v12 - v13);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v44 - v16;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1408);
  OUTLINED_FUNCTION_72_0();
  MEMORY[0x1E0C80A78](v18);
  v51 = OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_14();
  v49 = v3;
  v50 = v20;
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1CF69D078();
  v21 = v52;
  sub_1CF73F840();
  if (v21)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v49);
  }
  else
  {
    v22 = v14;
    v44 = v10;
    v52 = v1;
    v23 = sub_1CF73F4F8();
    v24 = v50;
    *v50 = v23;
    v24[1] = v25;
    OUTLINED_FUNCTION_90();
    sub_1CF6935F8(&qword_1EFBA1410, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v26 = v53;
    sub_1CF73F528();
    v27 = (int *)v51;
    v28 = *(void (**)(char *, char *, uint64_t))(v48 + 32);
    v28((char *)v24 + *(int *)(v51 + 20), v17, v26);
    sub_1CF73F528();
    v29 = (uint64_t)v24;
    v28((char *)v24 + v27[6], v22, v26);
    sub_1CF73E61C();
    sub_1CF6935F8(&qword_1EFBA1418, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v30 = (uint64_t)v44;
    OUTLINED_FUNCTION_82();
    sub_1CF69C834(v30, (uint64_t)v24 + v27[7]);
    v31 = v46;
    OUTLINED_FUNCTION_82();
    v32 = (uint64_t)v49;
    sub_1CF69C834(v31, (uint64_t)v24 + v27[8]);
    v33 = sub_1CF73F504();
    v34 = v52;
    *((_BYTE *)v24 + v27[9]) = v33 & 1;
    v35 = OUTLINED_FUNCTION_113();
    v36 = (uint64_t *)((char *)v24 + v27[10]);
    *v36 = v35;
    v36[1] = v37;
    v38 = OUTLINED_FUNCTION_113();
    v40 = v39;
    OUTLINED_FUNCTION_21_0(*(uint64_t (**)(uint64_t, _QWORD))(v34 + 8));
    v41 = (uint64_t *)(v29 + v27[11]);
    *v41 = v38;
    v41[1] = v40;
    sub_1CF69DBD4(v29, v45, type metadata accessor for PairedHostInfo);
    __swift_destroy_boxed_opaque_existential_0Tm(v32);
    v42 = OUTLINED_FUNCTION_69();
    sub_1CF6A3724(v42, v43);
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1CF69D5EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7105633 && a2 == 0xE300000000000000;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F48656C676E6973 && a2 == 0xEA00000000007473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CF69D6D4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F48656C676E6973;
  else
    return 7105633;
}

uint64_t sub_1CF69D708(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1CF69D798()
{
  PairedHostInfo.init(from:)();
}

#error "1CF69D7B4: call analysis failed (funcsize=5)"

uint64_t sub_1CF69D7C4()
{
  sub_1CF69DC34();
  return sub_1CF73F864();
}

uint64_t sub_1CF69D7EC()
{
  sub_1CF69DC34();
  return sub_1CF73F870();
}

uint64_t sub_1CF69D814()
{
  char *v0;

  return sub_1CF69D6D4(*v0);
}

uint64_t sub_1CF69D81C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69D5EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF69D840()
{
  sub_1CF69DB98();
  return sub_1CF73F864();
}

uint64_t sub_1CF69D868()
{
  sub_1CF69DB98();
  return sub_1CF73F870();
}

void sub_1CF69D894()
{
  sub_1CF69EACC();
}

uint64_t sub_1CF69D8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69D708(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CF69D8DC()
{
  sub_1CF69DBF8();
  return sub_1CF73F864();
}

uint64_t sub_1CF69D904()
{
  sub_1CF69DBF8();
  return sub_1CF73F870();
}

void HostDeletionTarget.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_2();
  v27 = v1;
  v5 = v4;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1420);
  v24 = *(_QWORD *)(v26 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_67_0(v7, v19);
  v25 = OUTLINED_FUNCTION_27();
  v22 = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_14();
  v21 = v9;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1428);
  OUTLINED_FUNCTION_72_0();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_29_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1430);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_100();
  __swift_project_boxed_opaque_existential_0Tm(v5, v5[3]);
  sub_1CF69DB98();
  sub_1CF73F858();
  sub_1CF69DBD4(v27, v0, type metadata accessor for HostDeletionTarget);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  if (__swift_getEnumTagSinglePayload(v0, 1, v15) == 1)
  {
    sub_1CF69DC34();
    OUTLINED_FUNCTION_97();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v12, v20);
    OUTLINED_FUNCTION_57_1(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  else
  {
    v27 = v3;
    v17 = v21;
    v16 = v22;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v21, v0, v25);
    sub_1CF69DBF8();
    v18 = v23;
    OUTLINED_FUNCTION_97();
    sub_1CF6935F8(&qword_1EFBA13F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1CF73F5F4();
    OUTLINED_FUNCTION_58_0(v18, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    OUTLINED_FUNCTION_26_1(v17, *(uint64_t (**)(uint64_t, uint64_t))(v16 + 8));
    OUTLINED_FUNCTION_57_1(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  }
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_0_0();
}

uint64_t type metadata accessor for HostDeletionTarget(uint64_t a1)
{
  return sub_1CF6A36B8(a1, (uint64_t *)&unk_1ED8F6DB8);
}

unint64_t sub_1CF69DB98()
{
  unint64_t result;

  result = qword_1EFBA1438;
  if (!qword_1EFBA1438)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7425D8, &type metadata for HostDeletionTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1438);
  }
  return result;
}

void sub_1CF69DBD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t (*v3)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_87(a1, a2, a3);
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_122(v3);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1CF69DBF8()
{
  unint64_t result;

  result = qword_1EFBA1448;
  if (!qword_1EFBA1448)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742588, &type metadata for HostDeletionTarget.SingleHostCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1448);
  }
  return result;
}

unint64_t sub_1CF69DC34()
{
  unint64_t result;

  result = qword_1EFBA1450;
  if (!qword_1EFBA1450)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742538, &type metadata for HostDeletionTarget.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1450);
  }
  return result;
}

void HostDeletionTarget.init(from:)()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;

  OUTLINED_FUNCTION_2();
  v54 = v0;
  v2 = v1;
  v50 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1458);
  v5 = *(_QWORD *)(v4 - 8);
  v48 = v4;
  v49 = v5;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  v53 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1460);
  v46 = *(_QWORD *)(v8 - 8);
  v47 = v8;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_68_0(v10, v43);
  v52 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1468) - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_101();
  v18 = v16 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v43 - v20;
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1CF69DB98();
  v22 = v54;
  sub_1CF73F840();
  if (v22)
    goto LABEL_8;
  v44 = v18;
  v45 = v21;
  v23 = v53;
  v54 = v2;
  v24 = sub_1CF73F564();
  v25 = *(_QWORD *)(v24 + 16);
  if (!v25
    || (v55 = *(_BYTE *)(v24 + 32),
        sub_1CF6A6F90(1, v25, v24, v24 + 32, 0, (2 * v25) | 1),
        v27 = v26,
        v29 = v28,
        OUTLINED_FUNCTION_107(),
        v27 != v29 >> 1))
  {
    v32 = v52;
    v33 = sub_1CF73F384();
    OUTLINED_FUNCTION_105();
    v35 = v34;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1470);
    *v35 = v14;
    sub_1CF73F4B0();
    OUTLINED_FUNCTION_75();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v35, *MEMORY[0x1E0DEC450], v33);
    swift_willThrow();
    OUTLINED_FUNCTION_79();
    OUTLINED_FUNCTION_47_1((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v32 + 8));
    v2 = v54;
LABEL_8:
    v37 = (uint64_t)v2;
    goto LABEL_9;
  }
  if ((v55 & 1) != 0)
  {
    sub_1CF69DBF8();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_27();
    sub_1CF6935F8(&qword_1EFBA1410, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v30 = v44;
    OUTLINED_FUNCTION_120();
    v31 = v52;
    OUTLINED_FUNCTION_58_0(v23, *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8));
    OUTLINED_FUNCTION_79();
    OUTLINED_FUNCTION_47_1((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v31 + 8));
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
    OUTLINED_FUNCTION_70_0(v30, 0, v41, v40);
    v42 = (uint64_t)v45;
    sub_1CF6A348C(v30, (uint64_t)v45, type metadata accessor for HostDeletionTarget);
  }
  else
  {
    sub_1CF69DC34();
    v36 = v51;
    OUTLINED_FUNCTION_51_0();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v36, v47);
    OUTLINED_FUNCTION_79();
    OUTLINED_FUNCTION_47_1((uint64_t)v13, *(uint64_t (**)(uint64_t, uint64_t))(v52 + 8));
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
    v42 = (uint64_t)v45;
    OUTLINED_FUNCTION_70_0((uint64_t)v45, 1, v39, v38);
  }
  sub_1CF6A348C(v42, v50, type metadata accessor for HostDeletionTarget);
  v37 = (uint64_t)v54;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_0Tm(v37);
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF69E060()
{
  HostDeletionTarget.init(from:)();
}

void sub_1CF69E074()
{
  HostDeletionTarget.encode(to:)();
}

unint64_t RPUSBConnectedHostTrustState.description.getter(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;

  v1 = a1 - 1;
  result = 0x64657473757274;
  switch(v1)
  {
    case 0:
      result = 0xD000000000000011;
      break;
    case 1:
      result = 0x7375727420746F6ELL;
      break;
    case 2:
      result = 0xD000000000000015;
      break;
    case 3:
      result = 0xD000000000000013;
      break;
    case 4:
      return result;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

BOOL static RPUSBConnectedHostTrustState.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 < a2;
}

unint64_t sub_1CF69E154()
{
  uint64_t *v0;

  return RPUSBConnectedHostTrustState.description.getter(*v0);
}

BOOL sub_1CF69E15C(uint64_t *a1, uint64_t *a2)
{
  return static RPUSBConnectedHostTrustState.< infix(_:_:)(*a1, *a2);
}

BOOL sub_1CF69E168(uint64_t *a1, uint64_t *a2)
{
  return sub_1CF6F7988(*a1, *a2);
}

BOOL sub_1CF69E174(uint64_t *a1, uint64_t *a2)
{
  return sub_1CF6F7994(*a1, *a2);
}

BOOL sub_1CF69E180(uint64_t *a1, uint64_t *a2)
{
  return sub_1CF6F79A0(*a1, *a2);
}

void DeletePairedHostRecordRequest.target.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1CF69DBD4(v1, a1, type metadata accessor for HostDeletionTarget);
}

uint64_t sub_1CF69E1B0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x746567726174 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1CF69E22C()
{
  return 0x746567726174;
}

uint64_t sub_1CF69E244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69E1B0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CF69E26C()
{
  sub_1CF6A343C();
  return sub_1CF73F864();
}

uint64_t sub_1CF69E294()
{
  sub_1CF6A343C();
  return sub_1CF73F870();
}

void DeletePairedHostRecordRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1478);
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_54_2();
  sub_1CF6A343C();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_48_0();
  sub_1CF6935F8(&qword_1EFBA1488, type metadata accessor for HostDeletionTarget, (uint64_t)&protocol conformance descriptor for HostDeletionTarget);
  sub_1CF73F5F4();
  OUTLINED_FUNCTION_58_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_59_1();
}

void DeletePairedHostRecordRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_2();
  v3 = v2;
  v10 = v4;
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  v12 = v6;
  v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1490) - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v7);
  v8 = OUTLINED_FUNCTION_69_0();
  type metadata accessor for DeletePairedHostRecordRequest(v8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_98();
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1CF6A343C();
  OUTLINED_FUNCTION_111();
  if (!v0)
  {
    sub_1CF6935F8(&qword_1EFBA1498, type metadata accessor for HostDeletionTarget, (uint64_t)&protocol conformance descriptor for HostDeletionTarget);
    sub_1CF73F528();
    OUTLINED_FUNCTION_57_1(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    sub_1CF6A348C(v12, v1, type metadata accessor for HostDeletionTarget);
    sub_1CF6A348C(v1, v10, type metadata accessor for DeletePairedHostRecordRequest);
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v3);
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF69E4DC()
{
  DeletePairedHostRecordRequest.init(from:)();
}

void sub_1CF69E4F0()
{
  DeletePairedHostRecordRequest.encode(to:)();
}

uint64_t sub_1CF69E504()
{
  sub_1CF6A34B8();
  return sub_1CF73F864();
}

uint64_t sub_1CF69E52C()
{
  sub_1CF6A34B8();
  return sub_1CF73F870();
}

void ListPairedHostRecordRequest.encode(to:)()
{
  sub_1CF69EDAC();
}

void ListPairedHostRecordRequest.init(from:)(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_109();
}

void sub_1CF69E5A0(uint64_t a1)
{
  FetchNetworkPairingSessionIDRequest.init(from:)(a1);
}

void sub_1CF69E5B4()
{
  ListPairedHostRecordRequest.encode(to:)();
}

RemotePairingDevice::ListPairedHostRecordResponse __swiftcall ListPairedHostRecordResponse.init(hosts:)(RemotePairingDevice::ListPairedHostRecordResponse hosts)
{
  RemotePairingDevice::ListPairedHostRecordResponse *v1;

  v1->hosts._rawValue = hosts.hosts._rawValue;
  return hosts;
}

uint64_t sub_1CF69E5D0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x7374736F68 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1CF69E64C()
{
  return 0x7374736F68;
}

uint64_t sub_1CF69E664@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69E5D0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CF69E68C()
{
  sub_1CF6A34F4();
  return sub_1CF73F864();
}

uint64_t sub_1CF69E6B4()
{
  sub_1CF6A34F4();
  return sub_1CF73F870();
}

void ListPairedHostRecordResponse.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_2();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA14B0);
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_13();
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1CF6A34F4();
  OUTLINED_FUNCTION_23();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA14C0);
  sub_1CF6A3530(&qword_1EFBA14C8, &qword_1EFBA14D0, (uint64_t)&protocol conformance descriptor for PairedHostInfo, MEMORY[0x1E0DEAF10]);
  sub_1CF73F5F4();
  OUTLINED_FUNCTION_58_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_0_0();
}

void ListPairedHostRecordResponse.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA14D8);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_42_0();
  sub_1CF6A34F4();
  OUTLINED_FUNCTION_18();
  if (!v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA14C0);
    sub_1CF6A3530(&qword_1EFBA14E0, &qword_1EFBA14E8, (uint64_t)&protocol conformance descriptor for PairedHostInfo, MEMORY[0x1E0DEAF40]);
    sub_1CF73F528();
    OUTLINED_FUNCTION_8();
    *v12 = a10;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v10);
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1CF69E8A0()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_1CF69E8BC()
{
  return 1;
}

uint64_t sub_1CF69E8C4()
{
  return 0;
}

uint64_t sub_1CF69E8D0()
{
  return 0;
}

void sub_1CF69E8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  ListPairedHostRecordResponse.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1CF69E8F0()
{
  ListPairedHostRecordResponse.encode(to:)();
}

uint64_t sub_1CF69E904@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF69E8A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1CF69E92C()
{
  return sub_1CF69E8C4();
}

uint64_t sub_1CF69E944@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF69E8BC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1CF69E96C()
{
  sub_1CF6A35B4();
  return sub_1CF73F864();
}

uint64_t sub_1CF69E994()
{
  sub_1CF6A35B4();
  return sub_1CF73F870();
}

void FetchNetworkPairingSessionIDRequest.encode(to:)()
{
  sub_1CF69EDAC();
}

void FetchNetworkPairingSessionIDRequest.init(from:)(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_109();
}

void sub_1CF69EA08()
{
  FetchNetworkPairingSessionIDRequest.encode(to:)();
}

RemotePairingDevice::FetchNetworkPairingSessionIDResponse __swiftcall FetchNetworkPairingSessionIDResponse.init(networkPairingSessionID:)(RemotePairingDevice::FetchNetworkPairingSessionIDResponse networkPairingSessionID)
{
  RemotePairingDevice::FetchNetworkPairingSessionIDResponse *v1;

  *v1 = networkPairingSessionID;
  return networkPairingSessionID;
}

uint64_t sub_1CF69EA24()
{
  return sub_1CF73F7F8();
}

uint64_t sub_1CF69EA48(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000017 && a2 == 0x80000001CF7503A0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

void sub_1CF69EACC()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

unint64_t sub_1CF69EAF0()
{
  return 0xD000000000000017;
}

void sub_1CF69EB0C()
{
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_103();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

uint64_t sub_1CF69EB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69EA48(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CF69EB5C()
{
  sub_1CF6A35F0();
  return sub_1CF73F864();
}

uint64_t sub_1CF69EB84()
{
  sub_1CF6A35F0();
  return sub_1CF73F870();
}

void FetchNetworkPairingSessionIDResponse.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_2();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1500);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1CF6A35F0();
  sub_1CF73F858();
  sub_1CF73F5C4();
  OUTLINED_FUNCTION_26_1(v0, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_0_0();
}

void FetchNetworkPairingSessionIDResponse.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1510);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_42_0();
  sub_1CF6A35F0();
  OUTLINED_FUNCTION_18();
  if (!v1)
  {
    v4 = OUTLINED_FUNCTION_71();
    v6 = v5;
    OUTLINED_FUNCTION_8();
    *v2 = v4;
    v2[1] = v6;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v0);
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF69ED08()
{
  FetchNetworkPairingSessionIDResponse.init(from:)();
}

void sub_1CF69ED1C()
{
  FetchNetworkPairingSessionIDResponse.encode(to:)();
}

uint64_t sub_1CF69ED30()
{
  sub_1CF6A362C();
  return sub_1CF73F864();
}

uint64_t sub_1CF69ED58()
{
  sub_1CF6A362C();
  return sub_1CF73F870();
}

void QueryUSBConnectedHostTrustStateRequest.encode(to:)()
{
  sub_1CF69EDAC();
}

void sub_1CF69EDAC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  void (*v3)(void);
  _QWORD *v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_2();
  v3 = v2;
  v5 = v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(v6);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_28();
  __swift_project_boxed_opaque_existential_0Tm(v5, v5[3]);
  v3();
  sub_1CF73F858();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v7);
  OUTLINED_FUNCTION_0_0();
}

void QueryUSBConnectedHostTrustStateRequest.init(from:)(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_109();
}

void sub_1CF69EE68()
{
  QueryUSBConnectedHostTrustStateRequest.encode(to:)();
}

uint64_t AllowPromptlessPairingWithHostRequest.pairingShouldBeMarkedForAutomation.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t AllowPromptlessPairingWithHostRequest.pairingShouldBeMarkedForAutomation.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*AllowPromptlessPairingWithHostRequest.pairingShouldBeMarkedForAutomation.modify())()
{
  return nullsub_1;
}

void AllowPromptlessPairingWithHostRequest.associatedHostBUID.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_1();
}

void AllowPromptlessPairingWithHostRequest.associatedHostBUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_40();
}

uint64_t (*AllowPromptlessPairingWithHostRequest.associatedHostBUID.modify())()
{
  return nullsub_1;
}

RemotePairingDevice::AllowPromptlessPairingWithHostRequest __swiftcall AllowPromptlessPairingWithHostRequest.init(pairingShouldBeMarkedForAutomation:associatedHostBUID:)(Swift::Bool pairingShouldBeMarkedForAutomation, Swift::String associatedHostBUID)
{
  uint64_t v2;
  RemotePairingDevice::AllowPromptlessPairingWithHostRequest result;

  *(_BYTE *)v2 = pairingShouldBeMarkedForAutomation;
  *(Swift::String *)(v2 + 8) = associatedHostBUID;
  result.associatedHostBUID = associatedHostBUID;
  result.pairingShouldBeMarkedForAutomation = pairingShouldBeMarkedForAutomation;
  return result;
}

uint64_t sub_1CF69EF08(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000022 && a2 == 0x80000001CF7503C0 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001CF7503F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1CF69EFF4(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0xD000000000000022;
}

unint64_t sub_1CF69F030()
{
  char *v0;

  return sub_1CF69EFF4(*v0);
}

uint64_t sub_1CF69F038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69EF08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF69F05C()
{
  sub_1CF6A3668();
  return sub_1CF73F864();
}

uint64_t sub_1CF69F084()
{
  sub_1CF6A3668();
  return sub_1CF73F870();
}

void AllowPromptlessPairingWithHostRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_2();
  v3 = v2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1518);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_99();
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1CF6A3668();
  sub_1CF73F858();
  sub_1CF73F5D0();
  if (!v0)
  {
    OUTLINED_FUNCTION_90();
    sub_1CF73F5C4();
  }
  OUTLINED_FUNCTION_37_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_0_0();
}

void AllowPromptlessPairingWithHostRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1528);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_42_0();
  sub_1CF6A3668();
  OUTLINED_FUNCTION_18();
  if (!v1)
  {
    v4 = sub_1CF73F504();
    v5 = OUTLINED_FUNCTION_71();
    v7 = v6;
    OUTLINED_FUNCTION_8();
    *(_BYTE *)v2 = v4 & 1;
    *(_QWORD *)(v2 + 8) = v5;
    *(_QWORD *)(v2 + 16) = v7;
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v0);
  OUTLINED_FUNCTION_106();
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF69F278()
{
  AllowPromptlessPairingWithHostRequest.init(from:)();
}

void sub_1CF69F28C()
{
  AllowPromptlessPairingWithHostRequest.encode(to:)();
}

uint64_t sub_1CF69F2A4()
{
  swift_unknownObjectRetain();
  return CreateWirelessPairingSessionRequest.endpoint.setter();
}

void (*CreateWirelessPairingSessionRequest.endpoint.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1CF73E7F0();
  return sub_1CF69F314;
}

void sub_1CF69F314(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t CreateWirelessPairingSessionRequest.requestCustomPinHandler.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for CreateWirelessPairingSessionRequest(0) + 20));
}

void CreateWirelessPairingSessionRequest.requestCustomPinHandler.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(type metadata accessor for CreateWirelessPairingSessionRequest(0) + 20)) = a1;
  OUTLINED_FUNCTION_1();
}

uint64_t (*CreateWirelessPairingSessionRequest.requestCustomPinHandler.modify())(_QWORD)
{
  type metadata accessor for CreateWirelessPairingSessionRequest(0);
  return nullsub_1;
}

BOOL sub_1CF69F3B4(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_1CF69F3C4()
{
  return sub_1CF73F7F8();
}

uint64_t sub_1CF69F3E8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001CF750410)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CF69F4D4()
{
  return 2;
}

uint64_t sub_1CF69F4DC(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000017;
  else
    return 0x746E696F70646E65;
}

BOOL sub_1CF69F518(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1CF69F3B4(*a1, *a2);
}

void sub_1CF69F524()
{
  sub_1CF69FB6C();
}

uint64_t sub_1CF69F53C()
{
  return sub_1CF69F3C4();
}

uint64_t sub_1CF69F544()
{
  char *v0;

  return sub_1CF69F4DC(*v0);
}

uint64_t sub_1CF69F54C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69F3E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF69F570@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF69F4D4();
  *a1 = result;
  return result;
}

uint64_t sub_1CF69F594()
{
  sub_1CF6A36E8();
  return sub_1CF73F864();
}

uint64_t sub_1CF69F5BC()
{
  sub_1CF6A36E8();
  return sub_1CF73F870();
}

void CreateWirelessPairingSessionRequest.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE v5[16];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1530);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_54_2();
  sub_1CF6A36E8();
  OUTLINED_FUNCTION_23();
  v5[15] = 0;
  sub_1CF73E814();
  sub_1CF6935F8(&qword_1EFBA1540, (uint64_t (*)(uint64_t))MEMORY[0x1E0D4D2D0], MEMORY[0x1E0D4D2E0]);
  sub_1CF73F5F4();
  if (!v0)
  {
    type metadata accessor for CreateWirelessPairingSessionRequest(0);
    OUTLINED_FUNCTION_90();
    sub_1CF73F5D0();
  }
  OUTLINED_FUNCTION_37_0((uint64_t)v4, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_59_1();
}

void CreateWirelessPairingSessionRequest.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_2();
  v3 = v2;
  v14 = v4;
  v17 = sub_1CF73E814();
  v15 = *(_QWORD *)(v17 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_66_0(v6, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1548);
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v7);
  v8 = OUTLINED_FUNCTION_69_0();
  type metadata accessor for CreateWirelessPairingSessionRequest(v8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_29_0();
  v11 = *(int *)(v10 + 20);
  *(_BYTE *)(v0 + v11) = 0;
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1CF6A36E8();
  OUTLINED_FUNCTION_111();
  if (v1)
  {
    OUTLINED_FUNCTION_116();
  }
  else
  {
    sub_1CF6935F8(&qword_1EFBA1550, (uint64_t (*)(uint64_t))MEMORY[0x1E0D4D2D0], MEMORY[0x1E0D4D2E8]);
    OUTLINED_FUNCTION_120();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v0, v16, v17);
    v12 = sub_1CF73F504();
    OUTLINED_FUNCTION_35();
    *(_BYTE *)(v0 + v11) = v12 & 1;
    sub_1CF69DBD4(v0, v14, type metadata accessor for CreateWirelessPairingSessionRequest);
    OUTLINED_FUNCTION_116();
    sub_1CF6A3724(v0, type metadata accessor for CreateWirelessPairingSessionRequest);
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1CF69F8D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x7974706D65 && a2 == 0xE500000000000000;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 2003789939 && a2 == 0xE400000000000000;
    if (v6 || (sub_1CF73F690() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1701079400 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_1CF73F690();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_1CF69F9FC()
{
  return 3;
}

void sub_1CF69FA04()
{
  OUTLINED_FUNCTION_56();
  sub_1CF73F7F8();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

uint64_t sub_1CF69FA34(char a1)
{
  if (!a1)
    return 0x7974706D65;
  if (a1 == 1)
    return 2003789939;
  return 1701079400;
}

uint64_t sub_1CF69FA78(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 7235952 && a2 == 0xE300000000000000;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x48676E69646E6573 && a2 == 0xEB0000000074736FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

void sub_1CF69FB6C()
{
  OUTLINED_FUNCTION_56();
  sub_1CF73F7F8();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

uint64_t sub_1CF69FB9C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x48676E69646E6573;
  else
    return 7235952;
}

void sub_1CF69FBD4()
{
  CreateWirelessPairingSessionRequest.init(from:)();
}

void sub_1CF69FBE8()
{
  CreateWirelessPairingSessionRequest.encode(to:)();
}

void sub_1CF69FBFC()
{
  OUTLINED_FUNCTION_104();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

uint64_t sub_1CF69FC24()
{
  char *v0;

  return sub_1CF69FA34(*v0);
}

uint64_t sub_1CF69FC2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69F8D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF69FC50@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF69F9FC();
  *a1 = result;
  return result;
}

uint64_t sub_1CF69FC74()
{
  sub_1CF6A374C();
  return sub_1CF73F864();
}

uint64_t sub_1CF69FC9C()
{
  sub_1CF6A374C();
  return sub_1CF73F870();
}

uint64_t sub_1CF69FCC4()
{
  sub_1CF6A3800();
  return sub_1CF73F864();
}

uint64_t sub_1CF69FCEC()
{
  sub_1CF6A3800();
  return sub_1CF73F870();
}

uint64_t sub_1CF69FD14()
{
  sub_1CF6A3788();
  return sub_1CF73F864();
}

uint64_t sub_1CF69FD3C()
{
  sub_1CF6A3788();
  return sub_1CF73F870();
}

uint64_t sub_1CF69FD64()
{
  char *v0;

  return sub_1CF69FB9C(*v0);
}

uint64_t sub_1CF69FD6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF69FA78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF69FD90()
{
  sub_1CF6A37C4();
  return sub_1CF73F864();
}

uint64_t sub_1CF69FDB8()
{
  sub_1CF6A37C4();
  return sub_1CF73F870();
}

void PinNotificationEvent.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_2();
  v6 = v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1558);
  v22 = *(_QWORD *)(v7 - 8);
  v23 = v7;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_67_0(v9, v16);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1560);
  v18 = *(_QWORD *)(v25 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_66_0(v11, v17);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1568);
  v19 = *(_QWORD *)(v12 - 8);
  v20 = v12;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_100();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1570);
  OUTLINED_FUNCTION_72_0();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_13();
  v15 = *(_QWORD *)(v0 + 8);
  __swift_project_boxed_opaque_existential_0Tm(v6, v6[3]);
  sub_1CF6A374C();
  sub_1CF73F858();
  if (!v15)
  {
    sub_1CF6A3800();
    OUTLINED_FUNCTION_32_0();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v4, v20);
    goto LABEL_5;
  }
  if (v15 == 1)
  {
    OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_32_0();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
LABEL_5:
    OUTLINED_FUNCTION_47_1(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    goto LABEL_9;
  }
  sub_1CF6A37C4();
  OUTLINED_FUNCTION_32_0();
  sub_1CF73F5C4();
  if (!v1)
    sub_1CF73F588();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v24, v25);
  OUTLINED_FUNCTION_47_1(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
LABEL_9:
  OUTLINED_FUNCTION_0_0();
}

void PinNotificationEvent.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;

  OUTLINED_FUNCTION_2();
  v4 = v3;
  v32 = v5;
  v31 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1598) - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA15A0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_68_0(v8, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA15A8);
  OUTLINED_FUNCTION_41_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_15();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA15B0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_98();
  v33 = v4;
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  sub_1CF6A374C();
  sub_1CF73F840();
  if (v0)
    goto LABEL_8;
  v30 = v11;
  v34 = v1;
  v12 = sub_1CF73F564();
  v13 = *(_QWORD *)(v12 + 16);
  if (!v13
    || (v14 = *(unsigned __int8 *)(v12 + 32),
        sub_1CF6A6F90(1, v13, v12, v12 + 32, 0, (2 * v13) | 1),
        v16 = v15,
        v18 = v17,
        swift_bridgeObjectRelease(),
        v16 != v18 >> 1))
  {
    v19 = sub_1CF73F384();
    OUTLINED_FUNCTION_105();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1470);
    *v21 = &type metadata for PinNotificationEvent;
    sub_1CF73F4B0();
    OUTLINED_FUNCTION_75();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_47_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
LABEL_8:
    v22 = (uint64_t)v33;
    goto LABEL_9;
  }
  if (v14)
  {
    if (v14 == 1)
    {
      OUTLINED_FUNCTION_90();
      sub_1CF6A37C4();
      sub_1CF73F4A4();
      v23 = sub_1CF73F4F8();
      v25 = v24;
      v26 = sub_1CF73F4BC();
      v28 = v27;
      OUTLINED_FUNCTION_24_1();
      swift_unknownObjectRelease();
      OUTLINED_FUNCTION_37_0(v34, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    }
    else
    {
      OUTLINED_FUNCTION_114();
      OUTLINED_FUNCTION_43_0();
      OUTLINED_FUNCTION_119(v31);
      OUTLINED_FUNCTION_74();
      OUTLINED_FUNCTION_37_0(v16, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
      v23 = 0;
      v26 = 0;
      v28 = 0;
      v25 = 1;
    }
  }
  else
  {
    sub_1CF6A3800();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_119(v2);
    OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_37_0(v16, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    v23 = 0;
    v25 = 0;
    v26 = 0;
    v28 = 0;
  }
  v22 = (uint64_t)v33;
  *v32 = v23;
  v32[1] = v25;
  v32[2] = v26;
  v32[3] = v28;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_0Tm(v22);
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF6A0430()
{
  PinNotificationEvent.init(from:)();
}

void sub_1CF6A0444()
{
  PinNotificationEvent.encode(to:)();
}

id RemotePairingDevicePairingServiceConnection.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t RemotePairingDevicePairingServiceConnection.init()()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;

  v1 = (objc_class *)OUTLINED_FUNCTION_125();
  sub_1CF73E850();
  v2 = v0;
  sub_1CF73E838();

  sub_1CF73E868();
  v3 = OUTLINED_FUNCTION_77();
  v4 = objc_allocWithZone(v1);
  sub_1CF6A0558(v3);
  v6 = v5;
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v6;
}

void sub_1CF6A0558(uint64_t a1)
{
  char *v1;
  objc_class *v3;
  char *v4;
  objc_super v5;

  v3 = (objc_class *)OUTLINED_FUNCTION_125();
  *(_QWORD *)&v1[OBJC_IVAR____TtC19RemotePairingDevice43RemotePairingDevicePairingServiceConnection_connection] = a1;
  v4 = v1;
  OUTLINED_FUNCTION_121();
  sub_1CF73E724();

  v5.receiver = v4;
  v5.super_class = v3;
  objc_msgSendSuper2(&v5, sel_init);
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_84();
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> RemotePairingDevicePairingServiceConnection.deleteAllPairingRecords()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_13();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  OUTLINED_FUNCTION_70_0(v0, 1, v3, v2);
  RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:)();
  OUTLINED_FUNCTION_89();
}

void RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2();
  v2 = v1;
  type metadata accessor for DeletePairedHostRecordRequest(0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_13();
  sub_1CF69DBD4(v2, v0, type metadata accessor for HostDeletionTarget);
  sub_1CF6935F8(&qword_1EFBA15C0, type metadata accessor for DeletePairedHostRecordRequest, (uint64_t)&protocol conformance descriptor for DeletePairedHostRecordRequest);
  sub_1CF6935F8(&qword_1EFBA15C8, type metadata accessor for DeletePairedHostRecordRequest, (uint64_t)&protocol conformance descriptor for DeletePairedHostRecordRequest);
  sub_1CF6A383C();
  sub_1CF6A3878();
  sub_1CF6A38B4();
  OUTLINED_FUNCTION_115();
  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_0_0();
}

void RemotePairingDevicePairingServiceConnection.deletePairingRecord(forHostWithIdentifier:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(char *, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_91();
  v5(v4, a1);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  OUTLINED_FUNCTION_70_0((uint64_t)v4, 0, v7, v6);
  RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:)();
  sub_1CF6A3724((uint64_t)v4, type metadata accessor for HostDeletionTarget);
}

void RemotePairingDevicePairingServiceConnection.deletePairingRecord(uuid:queue:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  v2 = OUTLINED_FUNCTION_73_1();
  type metadata accessor for HostDeletionTarget(v2);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_91();
  v4(v1, v0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v5);
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_42();
}

void RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:invokingCompletionHandlerOn:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_73_1();
  type metadata accessor for DeletePairedHostRecordRequest(v4);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_28();
  sub_1CF69DBD4(v2, v3, type metadata accessor for HostDeletionTarget);
  v6 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v6 + 16) = v1;
  *(_QWORD *)(v6 + 24) = v0;
  OUTLINED_FUNCTION_121();
  sub_1CF6A0CA0();
  swift_release();
  OUTLINED_FUNCTION_108();
  OUTLINED_FUNCTION_42();
}

void RemotePairingDevicePairingServiceConnection.deleteAllPairingRecords(invokingCompletionHandlerOn:completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for HostDeletionTarget(0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_15();
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  __swift_storeEnumTagSinglePayload(v0, 1, 1, v2);
  OUTLINED_FUNCTION_83_0();
  sub_1CF6A3724(v0, type metadata accessor for HostDeletionTarget);
}

uint64_t sub_1CF6A0CA0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[2];

  v0 = type metadata accessor for DeletePairedHostRecordRequest(0);
  MEMORY[0x1E0C80A78](v0);
  v3[1] = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF6935F8(&qword_1EFBA15C0, type metadata accessor for DeletePairedHostRecordRequest, (uint64_t)&protocol conformance descriptor for DeletePairedHostRecordRequest);
  sub_1CF6935F8(&qword_1EFBA15C8, type metadata accessor for DeletePairedHostRecordRequest, (uint64_t)&protocol conformance descriptor for DeletePairedHostRecordRequest);
  sub_1CF6A383C();
  sub_1CF6A3878();
  sub_1CF6A38B4();
  return sub_1CF73E700();
}

uint64_t sub_1CF6A0ED4()
{
  sub_1CF6A3924();
  sub_1CF6A3960();
  sub_1CF6A399C();
  sub_1CF6A39D8();
  sub_1CF6A38B4();
  return sub_1CF73E700();
}

uint64_t sub_1CF6A1070()
{
  sub_1CF6A3C48();
  sub_1CF6A3C84();
  sub_1CF6A3CD4();
  sub_1CF6A3D10();
  sub_1CF6A38B4();
  return sub_1CF73E700();
}

uint64_t sub_1CF6A120C()
{
  sub_1CF6A3DA0();
  sub_1CF6A3DDC();
  sub_1CF6A383C();
  sub_1CF6A3878();
  sub_1CF6A38B4();
  return sub_1CF73E700();
}

uint64_t sub_1CF6A13E4()
{
  uint64_t WirelessPairingSessionRequest;
  uint64_t v1;
  _QWORD v3[2];

  WirelessPairingSessionRequest = type metadata accessor for CreateWirelessPairingSessionRequest(0);
  MEMORY[0x1E0C80A78](WirelessPairingSessionRequest);
  v3[1] = (char *)v3 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF6935F8(&qword_1EFBA1648, type metadata accessor for CreateWirelessPairingSessionRequest, (uint64_t)&protocol conformance descriptor for CreateWirelessPairingSessionRequest);
  sub_1CF6935F8(&qword_1EFBA1650, type metadata accessor for CreateWirelessPairingSessionRequest, (uint64_t)&protocol conformance descriptor for CreateWirelessPairingSessionRequest);
  sub_1CF6A383C();
  sub_1CF6A3878();
  sub_1CF6A38B4();
  return sub_1CF73E700();
}

void sub_1CF6A1618()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_0();
  sub_1CF6A7080();
  sub_1CF6A70BC();
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_9_1();
  if (v0)
  {
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_5_2();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_6_0();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_19_1();
  }
}

uint64_t sub_1CF6A16E8()
{
  OUTLINED_FUNCTION_25_0();
  type metadata accessor for PairableHostInfo(0);
  sub_1CF6A71E8();
  sub_1CF6A7224();
  sub_1CF6935F8(&qword_1EFBA1918, type metadata accessor for PairableHostInfo, (uint64_t)&protocol conformance descriptor for PairableHostInfo);
  sub_1CF6935F8((unint64_t *)&unk_1EFBA1920, type metadata accessor for PairableHostInfo, (uint64_t)&protocol conformance descriptor for PairableHostInfo);
  sub_1CF6A38B4();
  return sub_1CF73E700();
}

uint64_t sub_1CF6A1830()
{
  sub_1CF6A7170();
  sub_1CF6A71AC();
  sub_1CF6A383C();
  sub_1CF6A3878();
  sub_1CF6A38B4();
  return sub_1CF73E700();
}

void sub_1CF6A197C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_0();
  sub_1CF6A70F8();
  sub_1CF6A7134();
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_9_1();
  if (v0)
  {
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_5_2();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_6_0();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_19_1();
  }
}

void sub_1CF6A1A4C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_25_0();
  sub_1CF6A7008();
  sub_1CF6A7044();
  OUTLINED_FUNCTION_112();
  OUTLINED_FUNCTION_117();
  OUTLINED_FUNCTION_110();
  OUTLINED_FUNCTION_9_1();
  if (v0)
  {
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_10_3();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_5_2();
    OUTLINED_FUNCTION_36_0();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_1_2();
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_12_1();
    OUTLINED_FUNCTION_6_0();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_19_1();
  }
}

uint64_t RemotePairingDevicePairingServiceConnection.listHostPairingRecords(invokingCompletionHandlerOn:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF6A1BA4(a1, a2, a3, (uint64_t)&unk_1E8C98E18, (uint64_t)sub_1CF6A3914, (void (*)(uint64_t, uint64_t, uint64_t))sub_1CF6A0ED4);
}

void sub_1CF6A1B38(uint64_t a1, void (*a2)(id, uint64_t))
{
  id v3;
  uint64_t v4;

  v3 = *(id *)a1;
  v4 = *(unsigned __int8 *)(a1 + 8);
  sub_1CF6A7360(*(id *)a1, v4);
  a2(v3, v4);
  sub_1CF6A736C(v3, v4);
}

uint64_t RemotePairingDevicePairingServiceConnection.fetchNetworkPairingSessionID(invokingCompletionHandlerOn:completion:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF6A1BA4(a1, a2, a3, (uint64_t)&unk_1E8C98E40, (uint64_t)sub_1CF6A391C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1CF6A1070);
}

uint64_t sub_1CF6A1BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v11;

  v11 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  swift_retain();
  a6(a1, a5, v11);
  return OUTLINED_FUNCTION_7();
}

void sub_1CF6A1C14(uint64_t a1, void (*a2)(void *, uint64_t, uint64_t))
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void **)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (*(_BYTE *)(a1 + 16))
    v6 = 0;
  else
    v6 = *(_QWORD *)(a1 + 8);
  sub_1CF6A7340(*(void **)a1, v4, v5);
  a2(v3, v6, v5);
  sub_1CF6A7350(v3, v4, v5);
}

uint64_t RemotePairingDevicePairingServiceConnection.listHostPairingRecords()()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  sub_1CF6A3924();
  sub_1CF6A3960();
  sub_1CF6A399C();
  sub_1CF6A39D8();
  sub_1CF6A38B4();
  result = OUTLINED_FUNCTION_115();
  if (!v0)
    return v2;
  return result;
}

void RemotePairingDevicePairingServiceConnection.trustedHostInfo()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_2();
  v2 = OUTLINED_FUNCTION_38_0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_99();
  v4 = RemotePairingDevicePairingServiceConnection.listHostPairingRecords()();
  if (!v0)
  {
    v5 = v4;
    v6 = *(_QWORD *)(v4 + 16);
    if (v6)
    {
      v14 = MEMORY[0x1E0DEE9D8];
      sub_1CF6A2EA8(0, v6, 0);
      v7 = v5 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
      v12 = *(_QWORD *)(v3 + 72);
      do
      {
        sub_1CF69DBD4(v7, (uint64_t)v1, type metadata accessor for PairedHostInfo);
        sub_1CF6A1ED0(v1, &v13);
        sub_1CF6A3724((uint64_t)v1, type metadata accessor for PairedHostInfo);
        v8 = v13;
        v9 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CF6A2EA8(0, *(_QWORD *)(v9 + 16) + 1, 1);
          v9 = v14;
        }
        v11 = *(_QWORD *)(v9 + 16);
        v10 = *(_QWORD *)(v9 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_1CF6A2EA8(v10 > 1, v11 + 1, 1);
          v9 = v14;
        }
        *(_QWORD *)(v9 + 16) = v11 + 1;
        *(_QWORD *)(v9 + 8 * v11 + 32) = v8;
        v7 += v12;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease();
    }
    else
    {
      OUTLINED_FUNCTION_107();
    }
  }
  OUTLINED_FUNCTION_61_0();
}

void sub_1CF6A1ED0(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  int *v6;
  char *v7;
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __CFString *v21;
  __CFString *v22;
  __CFString *v23;
  uint64_t v24;
  __CFString *v25;
  uint64_t v26;
  __CFString *v27;
  uint64_t *v28;
  __CFString *v29;
  _QWORD v30[2];
  __CFString *v31;
  char *v32;
  uint64_t *v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;

  v33 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1938);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CF742680;
  v31 = CFSTR("identifier");
  *(_QWORD *)(inited + 32) = CFSTR("identifier");
  v6 = (int *)type metadata accessor for PairedHostInfo(0);
  v7 = (char *)a1 + v6[5];
  v8 = sub_1CF73E664();
  *(_QWORD *)(inited + 64) = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 40));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(boxed_opaque_existential_0, v7, v8);
  *(_QWORD *)(inited + 72) = CFSTR("name");
  v10 = MEMORY[0x1E0DEA968];
  v11 = a1[1];
  *(_QWORD *)(inited + 80) = *a1;
  *(_QWORD *)(inited + 88) = v11;
  *(_QWORD *)(inited + 104) = v10;
  *(_QWORD *)(inited + 112) = CFSTR("model");
  v12 = (_QWORD *)((char *)a1 + v6[10]);
  v13 = *v12;
  v14 = v12[1];
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1940);
  *(_QWORD *)(inited + 120) = v13;
  *(_QWORD *)(inited + 128) = v14;
  *(_QWORD *)(inited + 144) = v15;
  *(_QWORD *)(inited + 152) = CFSTR("serialNumber");
  v16 = (_QWORD *)((char *)a1 + v6[11]);
  v17 = *v16;
  v18 = v16[1];
  *(_QWORD *)(inited + 184) = v15;
  *(_QWORD *)(inited + 160) = v17;
  *(_QWORD *)(inited + 168) = v18;
  type metadata accessor for RPTrustedHostInfoKey(0);
  v30[1] = v19;
  sub_1CF6935F8(&qword_1EFBA0EC0, (uint64_t (*)(uint64_t))type metadata accessor for RPTrustedHostInfoKey, (uint64_t)&unk_1CF740C34);
  v30[0] = v20;
  v21 = v31;
  v22 = CFSTR("name");
  swift_bridgeObjectRetain();
  v23 = CFSTR("model");
  v24 = (uint64_t)v32;
  swift_bridgeObjectRetain();
  v25 = CFSTR("serialNumber");
  swift_bridgeObjectRetain();
  v36 = sub_1CF73EE44();
  sub_1CF68E328((uint64_t)a1 + v6[7], v24);
  v26 = sub_1CF73E61C();
  if (__swift_getEnumTagSinglePayload(v24, 1, v26) == 1)
  {
    v27 = CFSTR("lastUsed");
    sub_1CF6A4E24(v24, &qword_1ED8F68A0);
    v34 = 0u;
    v35 = 0u;
  }
  else
  {
    *((_QWORD *)&v35 + 1) = v26;
    v28 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v34);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v28, v24, v26);
    v29 = CFSTR("lastUsed");
  }
  sub_1CF6AEA58((uint64_t)&v34, CFSTR("lastUsed"));
  *v33 = v36;
}

uint64_t RemotePairingDevicePairingServiceConnection.getUSBConectedHostTrustState()()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  type metadata accessor for RPUSBConnectedHostTrustState(0);
  sub_1CF6A3A14();
  sub_1CF6A3A50();
  sub_1CF6935F8((unint64_t *)&unk_1ED8F6858, (uint64_t (*)(uint64_t))type metadata accessor for RPUSBConnectedHostTrustState, (uint64_t)&protocol conformance descriptor for RPUSBConnectedHostTrustState);
  sub_1CF6935F8(&qword_1ED8F6850, (uint64_t (*)(uint64_t))type metadata accessor for RPUSBConnectedHostTrustState, (uint64_t)&protocol conformance descriptor for RPUSBConnectedHostTrustState);
  sub_1CF6A38B4();
  result = OUTLINED_FUNCTION_115();
  if (!v0)
    return v2;
  return result;
}

void RemotePairingDevicePairingServiceConnection.getUSBConnectedHostState(with:)()
{
  RemotePairingDevicePairingServiceConnection.getUSBConectedHostTrustState()();
  OUTLINED_FUNCTION_84();
}

uint64_t RemotePairingDevicePairingServiceConnection.allowPromptlessPairingForHost(pairingShouldBeMarkedForAutomation:forBUID:withQueue:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;

  v8 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v8 + 16) = a5;
  *(_QWORD *)(v8 + 24) = a6;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_121();
  sub_1CF6A120C();
  swift_bridgeObjectRelease();
  return OUTLINED_FUNCTION_7();
}

void sub_1CF6A2450(uint64_t a1, void (*a2)(id))
{
  id v3;
  id v4;

  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v3 = *(id *)a1;
    v4 = *(id *)a1;
    a2(v3);
    sub_1CF6A7274(v3, 1);
  }
  else
  {
    a2(0);
    OUTLINED_FUNCTION_40();
  }
}

void RemotePairingDevicePairingServiceConnection.initiateWirelessPairingSession(withQueue:completionHandler:customPinHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)();
  uint64_t WirelessPairingSessionRequest;

  WirelessPairingSessionRequest = type metadata accessor for CreateWirelessPairingSessionRequest(0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_29_0();
  v12 = (_QWORD *)OUTLINED_FUNCTION_16();
  v12[2] = a1;
  v12[3] = a2;
  v12[4] = a3;
  sub_1CF73E880();
  a1;
  swift_retain();
  sub_1CF73E844();
  v13 = OUTLINED_FUNCTION_77();
  type metadata accessor for InProgressWirelessPairingSession();
  OUTLINED_FUNCTION_16();
  swift_retain();
  swift_retain();
  sub_1CF6A3AE0(a4);
  sub_1CF6A800C(v13, (uint64_t)sub_1CF6A3AD0, (uint64_t)v12, a4, a5);
  sub_1CF73E724();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1608);
  sub_1CF73E6F4();
  if (a4)
  {
    v14 = OUTLINED_FUNCTION_16();
    *(_QWORD *)(v14 + 16) = a4;
    *(_QWORD *)(v14 + 24) = a5;
    v15 = sub_1CF6A3AF8;
  }
  else
  {
    v15 = 0;
  }
  sub_1CF6A3AE0(a4);
  sub_1CF693EC8((uint64_t)v15);
  swift_unknownObjectRetain();
  sub_1CF73E7E4();
  *(_BYTE *)(v5 + *(int *)(WirelessPairingSessionRequest + 20)) = a4 != 0;
  swift_retain();
  sub_1CF6A13E4();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release_n();
  sub_1CF6A3724(v5, type metadata accessor for CreateWirelessPairingSessionRequest);
}

uint64_t sub_1CF6A2790(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v22 = a3;
  v9 = sub_1CF73ED54();
  v10 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1CF73ED84();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a4;
  *(_QWORD *)(v17 + 24) = a5;
  *(_QWORD *)(v17 + 32) = a1;
  *(_BYTE *)(v17 + 40) = a2 & 1;
  aBlock[4] = sub_1CF6A72B0;
  aBlock[5] = v17;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CC068;
  aBlock[3] = &block_descriptor;
  v18 = _Block_copy(aBlock);
  swift_retain();
  sub_1CF6A72F0(a1);
  sub_1CF73ED6C();
  v23 = MEMORY[0x1E0DEE9D8];
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, v10, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6A72FC();
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v16, v12, v18);
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  return swift_release();
}

xpc_endpoint_t sub_1CF6A298C@<X0>(_xpc_connection_s *a1@<X0>, xpc_endpoint_t *a2@<X8>)
{
  xpc_endpoint_t result;

  result = xpc_endpoint_create(a1);
  *a2 = result;
  return result;
}

void sub_1CF6A29B8(uint64_t a1)
{
  void *v1;
  id v2;

  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v1 = *(void **)a1;
    MEMORY[0x1E0C80A78](a1);
    v2 = v1;
    sub_1CF6A7F54((uint64_t)sub_1CF6A726C);
    sub_1CF6A7274(v1, 1);
  }
}

uint64_t RemotePairingDevicePairingServiceConnection.initiateWirelessPairingSession(withQueue:completionHandler:customPinHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *(*v12)(uint64_t *);

  v10 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  if (a4)
  {
    v11 = OUTLINED_FUNCTION_16();
    *(_QWORD *)(v11 + 16) = a4;
    *(_QWORD *)(v11 + 24) = a5;
    v12 = sub_1CF6A3B20;
  }
  else
  {
    v12 = 0;
    v11 = 0;
  }
  swift_retain();
  sub_1CF6A3AE0(a4);
  RemotePairingDevicePairingServiceConnection.initiateWirelessPairingSession(withQueue:completionHandler:customPinHandler:)(a1, (uint64_t)sub_1CF6A3B14, v10, (uint64_t)v12, v11);
  sub_1CF693EC8((uint64_t)v12);
  return OUTLINED_FUNCTION_7();
}

void sub_1CF6A2AF8(id a1, char a2, void (*a3)(id, id))
{
  id v5;
  id v6;
  id v7;
  id v8;

  if ((a2 & 1) != 0)
  {
    v5 = a1;
    v6 = 0;
    v7 = a1;
  }
  else
  {
    v8 = a1;
    v6 = a1;
    v7 = 0;
  }
  a3(v6, v7);
  sub_1CF6A7260(a1);
}

uint64_t *sub_1CF6A2B58(uint64_t *result, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = result[1];
  if (v3)
  {
    if (v3 == 1)
    {
      v4 = 0;
      v3 = 0;
      v5 = 0;
      v6 = 0;
    }
    else
    {
      v5 = result[2];
      v6 = result[3];
      v4 = *result;
    }
    return (uint64_t *)a2(v4, v3, v5, v6);
  }
  return result;
}

void sub_1CF6A2C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  id v6;

  if (a2)
    v5 = sub_1CF73E484();
  else
    v5 = 0;
  v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);

}

void sub_1CF6A2CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v7;
  uint64_t v8;
  id v9;

  if (!a2)
  {
    v7 = 0;
    if (a4)
      goto LABEL_3;
LABEL_5:
    v8 = 0;
    goto LABEL_6;
  }
  v7 = (void *)sub_1CF73EEB0();
  if (!a4)
    goto LABEL_5;
LABEL_3:
  v8 = sub_1CF73EEB0();
LABEL_6:
  v9 = (id)v8;
  (*(void (**)(uint64_t, void *))(a5 + 16))(a5, v7);

}

id RemotePairingDevicePairingServiceConnection.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_125();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CF6A2D9C()
{
  sub_1CF6935F8(&qword_1ED8F7F28, (uint64_t (*)(uint64_t))type metadata accessor for RPUSBConnectedHostTrustState, (uint64_t)&unk_1CF740920);
  return sub_1CF73F024();
}

uint64_t sub_1CF6A2E10()
{
  sub_1CF6935F8(&qword_1ED8F7F28, (uint64_t (*)(uint64_t))type metadata accessor for RPUSBConnectedHostTrustState, (uint64_t)&unk_1CF740920);
  return sub_1CF73F00C();
}

void sub_1CF6A2E74()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1CF6A30AC();
  *v0 = v1;
}

uint64_t sub_1CF6A2EA8(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CF6A2FCC(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_1CF6A2EC4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1CF6A30AC();
  *v0 = v1;
}

void sub_1CF6A2EF8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1CF6A30AC();
  *v0 = v1;
}

void sub_1CF6A2F2C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1CF6A30AC();
  *v0 = v1;
}

size_t sub_1CF6A2F60(size_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  size_t result;

  result = sub_1CF6A3150(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_1CF6A2F7C(uint64_t a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_1CF6A3354(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_1CF6A2F98()
{
  _QWORD *v0;
  uint64_t v1;

  sub_1CF6A30AC();
  *v0 = v1;
}

uint64_t sub_1CF6A2FCC(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1930);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  v12 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1CF6C7F14(v12, v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CF6C834C((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

void sub_1CF6A30AC()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  char v3;
  uint64_t v4;
  uint64_t *v5;
  char v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_126();
  if ((v6 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v8 != v9)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  else
  {
    v7 = v4;
  }
  v10 = *(_QWORD *)(v0 + 16);
  if (v7 <= v10)
    v11 = *(_QWORD *)(v0 + 16);
  else
    v11 = v7;
  if (v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(v5);
    v12 = (_QWORD *)OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_85(v12);
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9D8];
  }
  v13 = v11 + 32;
  v14 = v0 + 32;
  if ((v3 & 1) != 0)
  {
    v2(v14, v10, v13);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    v1(v14, v10, v13);
  }
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_34_0();
}

size_t sub_1CF6A3150(size_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_25:
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA18A0);
  v10 = *(_QWORD *)(sub_1CF73EA00() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1)
    goto LABEL_24;
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  v15 = *(unsigned __int8 *)(*(_QWORD *)(sub_1CF73EA00() - 8) + 80);
  v16 = (v15 + 32) & ~v15;
  v17 = (unint64_t)v13 + v16;
  v18 = a4 + v16;
  if ((v5 & 1) != 0)
  {
    sub_1CF6C81C0(v18, v8, v17);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CF6C85B8(v18, v8, v17);
  }
  swift_release();
  return (size_t)v13;
}

void sub_1CF6A3290(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v7 != v8)
    {
      if (v6 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  else
  {
    v6 = a2;
  }
  v9 = *(_QWORD *)(a4 + 16);
  if (v6 <= v9)
    v10 = *(_QWORD *)(a4 + 16);
  else
    v10 = v6;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3280);
    v11 = OUTLINED_FUNCTION_16();
    v12 = _swift_stdlib_malloc_size((const void *)v11);
    *(_QWORD *)(v11 + 16) = v9;
    *(_QWORD *)(v11 + 24) = 2 * ((uint64_t)(v12 - 32) / 48);
  }
  else
  {
    v11 = MEMORY[0x1E0DEE9D8];
  }
  if ((a1 & 1) != 0)
  {
    sub_1CF6C8288((char *)(a4 + 32), v9, (char *)(v11 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CF6C866C();
  }
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1CF6A3354(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;
  char *v12;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1880);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9D8];
  }
  v12 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1CF6C82E8(v12, v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CF6C8704((uint64_t)v12, v8);
  }
  swift_release();
  return v10;
}

unint64_t sub_1CF6A343C()
{
  unint64_t result;

  result = qword_1EFBA1480;
  if (!qword_1EFBA1480)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7424E8, &type metadata for DeletePairedHostRecordRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1480);
  }
  return result;
}

uint64_t type metadata accessor for DeletePairedHostRecordRequest(uint64_t a1)
{
  return sub_1CF6A36B8(a1, qword_1ED8F7860);
}

void sub_1CF6A348C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_87(a1, a2, a3);
  OUTLINED_FUNCTION_122(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1CF6A34B8()
{
  unint64_t result;

  result = qword_1EFBA14A8;
  if (!qword_1EFBA14A8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742498, &type metadata for ListPairedHostRecordRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA14A8);
  }
  return result;
}

unint64_t sub_1CF6A34F4()
{
  unint64_t result;

  result = qword_1EFBA14B8;
  if (!qword_1EFBA14B8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742448, &type metadata for ListPairedHostRecordResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA14B8);
  }
  return result;
}

uint64_t sub_1CF6A3530(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBA14C0);
    sub_1CF6935F8(a2, type metadata accessor for PairedHostInfo, a3);
    v11 = v10;
    result = MEMORY[0x1D17D3DEC](a4, v9, &v11);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CF6A35B4()
{
  unint64_t result;

  result = qword_1EFBA14F8;
  if (!qword_1EFBA14F8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7423F8, &type metadata for FetchNetworkPairingSessionIDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA14F8);
  }
  return result;
}

unint64_t sub_1CF6A35F0()
{
  unint64_t result;

  result = qword_1EFBA1508;
  if (!qword_1EFBA1508)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7423A8, &type metadata for FetchNetworkPairingSessionIDResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1508);
  }
  return result;
}

unint64_t sub_1CF6A362C()
{
  unint64_t result;

  result = qword_1ED8F6820;
  if (!qword_1ED8F6820)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742358, &type metadata for QueryUSBConnectedHostTrustStateRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F6820);
  }
  return result;
}

unint64_t sub_1CF6A3668()
{
  unint64_t result;

  result = qword_1EFBA1520;
  if (!qword_1EFBA1520)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742308, &type metadata for AllowPromptlessPairingWithHostRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1520);
  }
  return result;
}

uint64_t type metadata accessor for CreateWirelessPairingSessionRequest(uint64_t a1)
{
  return sub_1CF6A36B8(a1, qword_1ED8F6A30);
}

uint64_t sub_1CF6A36B8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1CF6A36E8()
{
  unint64_t result;

  result = qword_1EFBA1538;
  if (!qword_1EFBA1538)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7422B8, &type metadata for CreateWirelessPairingSessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1538);
  }
  return result;
}

void sub_1CF6A3724(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_63(v2);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1CF6A374C()
{
  unint64_t result;

  result = qword_1EFBA1578;
  if (!qword_1EFBA1578)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742268, &type metadata for PinNotificationEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1578);
  }
  return result;
}

unint64_t sub_1CF6A3788()
{
  unint64_t result;

  result = qword_1EFBA1580;
  if (!qword_1EFBA1580)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742218, &type metadata for PinNotificationEvent.HideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1580);
  }
  return result;
}

unint64_t sub_1CF6A37C4()
{
  unint64_t result;

  result = qword_1EFBA1588;
  if (!qword_1EFBA1588)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7421C8, &type metadata for PinNotificationEvent.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1588);
  }
  return result;
}

unint64_t sub_1CF6A3800()
{
  unint64_t result;

  result = qword_1EFBA1590;
  if (!qword_1EFBA1590)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742178, &type metadata for PinNotificationEvent.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1590);
  }
  return result;
}

unint64_t sub_1CF6A383C()
{
  unint64_t result;

  result = qword_1EFBA15D0;
  if (!qword_1EFBA15D0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for EmptyResponse, &type metadata for EmptyResponse);
    atomic_store(result, (unint64_t *)&qword_1EFBA15D0);
  }
  return result;
}

unint64_t sub_1CF6A3878()
{
  unint64_t result;

  result = qword_1EFBA15D8;
  if (!qword_1EFBA15D8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for EmptyResponse, &type metadata for EmptyResponse);
    atomic_store(result, (unint64_t *)&qword_1EFBA15D8);
  }
  return result;
}

unint64_t sub_1CF6A38B4()
{
  unint64_t result;

  result = qword_1ED8F6810;
  if (!qword_1ED8F6810)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for RemotePairingErrorCodingWrapper, &type metadata for RemotePairingErrorCodingWrapper);
    atomic_store(result, (unint64_t *)&qword_1ED8F6810);
  }
  return result;
}

uint64_t sub_1CF6A38F0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CF6A3914(uint64_t a1)
{
  uint64_t v1;

  sub_1CF6A1B38(a1, *(void (**)(id, uint64_t))(v1 + 16));
}

void sub_1CF6A391C(uint64_t a1)
{
  uint64_t v1;

  sub_1CF6A1C14(a1, *(void (**)(void *, uint64_t, uint64_t))(v1 + 16));
}

unint64_t sub_1CF6A3924()
{
  unint64_t result;

  result = qword_1EFBA15E8;
  if (!qword_1EFBA15E8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ListPairedHostRecordRequest, &type metadata for ListPairedHostRecordRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA15E8);
  }
  return result;
}

unint64_t sub_1CF6A3960()
{
  unint64_t result;

  result = qword_1EFBA15F0;
  if (!qword_1EFBA15F0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ListPairedHostRecordRequest, &type metadata for ListPairedHostRecordRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA15F0);
  }
  return result;
}

unint64_t sub_1CF6A399C()
{
  unint64_t result;

  result = qword_1EFBA15F8;
  if (!qword_1EFBA15F8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ListPairedHostRecordResponse, &type metadata for ListPairedHostRecordResponse);
    atomic_store(result, (unint64_t *)&qword_1EFBA15F8);
  }
  return result;
}

unint64_t sub_1CF6A39D8()
{
  unint64_t result;

  result = qword_1EFBA1600;
  if (!qword_1EFBA1600)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ListPairedHostRecordResponse, &type metadata for ListPairedHostRecordResponse);
    atomic_store(result, (unint64_t *)&qword_1EFBA1600);
  }
  return result;
}

unint64_t sub_1CF6A3A14()
{
  unint64_t result;

  result = qword_1ED8F6848;
  if (!qword_1ED8F6848)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for QueryUSBConnectedHostTrustStateRequest, &type metadata for QueryUSBConnectedHostTrustStateRequest);
    atomic_store(result, (unint64_t *)&qword_1ED8F6848);
  }
  return result;
}

unint64_t sub_1CF6A3A50()
{
  unint64_t result;

  result = qword_1ED8F6840;
  if (!qword_1ED8F6840)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for QueryUSBConnectedHostTrustStateRequest, &type metadata for QueryUSBConnectedHostTrustStateRequest);
    atomic_store(result, (unint64_t *)&qword_1ED8F6840);
  }
  return result;
}

void sub_1CF6A3A8C(uint64_t a1)
{
  uint64_t v1;

  sub_1CF6A2450(a1, *(void (**)(id))(v1 + 16));
}

uint64_t sub_1CF6A3AA4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6A3AD0(void *a1, char a2)
{
  uint64_t *v2;

  return sub_1CF6A2790(a1, a2 & 1, v2[2], v2[3], v2[4]);
}

uint64_t sub_1CF6A3AE0(uint64_t result)
{
  if (result)
    return swift_retain();
  return result;
}

void sub_1CF6A3AF0(uint64_t a1)
{
  sub_1CF6A29B8(a1);
}

void sub_1CF6A3AF8()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6A3B14(void *a1, char a2)
{
  uint64_t v2;

  sub_1CF6A2AF8(a1, a2 & 1, *(void (**)(id, id))(v2 + 16));
}

uint64_t *sub_1CF6A3B20(uint64_t *a1)
{
  uint64_t v1;

  return sub_1CF6A2B58(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 16));
}

void sub_1CF6A3B28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1CF6935F8(&qword_1EFBA14E8, type metadata accessor for PairedHostInfo, (uint64_t)&protocol conformance descriptor for PairedHostInfo);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1CF6935F8(&qword_1EFBA14D0, type metadata accessor for PairedHostInfo, (uint64_t)&protocol conformance descriptor for PairedHostInfo);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1CF6A3B84()
{
  sub_1CF6935F8(&qword_1EFBA1610, (uint64_t (*)(uint64_t))type metadata accessor for RPUSBConnectedHostTrustState, (uint64_t)&unk_1CF7409C4);
}

void sub_1CF6A3BB0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1CF6935F8(&qword_1EFBA15C0, type metadata accessor for DeletePairedHostRecordRequest, (uint64_t)&protocol conformance descriptor for DeletePairedHostRecordRequest);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1CF6935F8(&qword_1EFBA15C8, type metadata accessor for DeletePairedHostRecordRequest, (uint64_t)&protocol conformance descriptor for DeletePairedHostRecordRequest);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1CF6A3C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6A3D74(a1, a2, a3, (uint64_t (*)(void))sub_1CF6A3924, (uint64_t (*)(void))sub_1CF6A3960);
}

void sub_1CF6A3C20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6A3D74(a1, a2, a3, (uint64_t (*)(void))sub_1CF6A399C, (uint64_t (*)(void))sub_1CF6A39D8);
}

void sub_1CF6A3C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6A3D74(a1, a2, a3, (uint64_t (*)(void))sub_1CF6A3C48, (uint64_t (*)(void))sub_1CF6A3C84);
}

unint64_t sub_1CF6A3C48()
{
  unint64_t result;

  result = qword_1EFBA1618;
  if (!qword_1EFBA1618)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for FetchNetworkPairingSessionIDRequest, &type metadata for FetchNetworkPairingSessionIDRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA1618);
  }
  return result;
}

unint64_t sub_1CF6A3C84()
{
  unint64_t result;

  result = qword_1EFBA1620;
  if (!qword_1EFBA1620)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for FetchNetworkPairingSessionIDRequest, &type metadata for FetchNetworkPairingSessionIDRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA1620);
  }
  return result;
}

void sub_1CF6A3CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6A3D74(a1, a2, a3, (uint64_t (*)(void))sub_1CF6A3CD4, (uint64_t (*)(void))sub_1CF6A3D10);
}

unint64_t sub_1CF6A3CD4()
{
  unint64_t result;

  result = qword_1EFBA1628;
  if (!qword_1EFBA1628)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for FetchNetworkPairingSessionIDResponse, &type metadata for FetchNetworkPairingSessionIDResponse);
    atomic_store(result, (unint64_t *)&qword_1EFBA1628);
  }
  return result;
}

unint64_t sub_1CF6A3D10()
{
  unint64_t result;

  result = qword_1EFBA1630;
  if (!qword_1EFBA1630)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for FetchNetworkPairingSessionIDResponse, &type metadata for FetchNetworkPairingSessionIDResponse);
    atomic_store(result, (unint64_t *)&qword_1EFBA1630);
  }
  return result;
}

void sub_1CF6A3D4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6A3D74(a1, a2, a3, (uint64_t (*)(void))sub_1CF6A3A14, (uint64_t (*)(void))sub_1CF6A3A50);
}

void sub_1CF6A3D60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6A3D74(a1, a2, a3, (uint64_t (*)(void))sub_1CF6A3DA0, (uint64_t (*)(void))sub_1CF6A3DDC);
}

void sub_1CF6A3D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(_QWORD *)(a1 + 8) = a4();
  *(_QWORD *)(a1 + 16) = a5();
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1CF6A3DA0()
{
  unint64_t result;

  result = qword_1EFBA1638;
  if (!qword_1EFBA1638)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for AllowPromptlessPairingWithHostRequest, &type metadata for AllowPromptlessPairingWithHostRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA1638);
  }
  return result;
}

unint64_t sub_1CF6A3DDC()
{
  unint64_t result;

  result = qword_1EFBA1640;
  if (!qword_1EFBA1640)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for AllowPromptlessPairingWithHostRequest, &type metadata for AllowPromptlessPairingWithHostRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA1640);
  }
  return result;
}

void sub_1CF6A3E18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1CF6935F8(&qword_1EFBA1648, type metadata accessor for CreateWirelessPairingSessionRequest, (uint64_t)&protocol conformance descriptor for CreateWirelessPairingSessionRequest);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1CF6935F8(&qword_1EFBA1650, type metadata accessor for CreateWirelessPairingSessionRequest, (uint64_t)&protocol conformance descriptor for CreateWirelessPairingSessionRequest);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1CF6A3E74(uint64_t *a1@<X8>)
{
  *a1 = CreateWirelessPairingSessionRequest.endpoint.getter();
  OUTLINED_FUNCTION_1();
}

char *initializeBufferWithCopyOfBuffer for PairedHostInfo(char *a1, char *a2, int *a3)
{
  char *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v7;
    v8 = a3[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1CF73E664();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v13 = a3[7];
    v14 = &v4[v13];
    v15 = &a2[v13];
    v16 = sub_1CF73E61C();
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    v19 = a3[8];
    v20 = &v4[v19];
    v21 = &a2[v19];
    if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v19], 1, v16))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v20, v21, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v16);
    }
    v23 = a3[10];
    v4[a3[9]] = a2[a3[9]];
    v24 = &v4[v23];
    v25 = &a2[v23];
    v26 = *((_QWORD *)v25 + 1);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    *((_QWORD *)v24 + 1) = v26;
    v27 = a3[11];
    v28 = &v4[v27];
    v29 = &a2[v27];
    v30 = *((_QWORD *)v29 + 1);
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *((_QWORD *)v28 + 1) = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for PairedHostInfo(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1CF73E664();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + a2[6], v5);
  v7 = a1 + a2[7];
  v8 = sub_1CF73E61C();
  if (!__swift_getEnumTagSinglePayload(v7, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[8];
  if (!__swift_getEnumTagSinglePayload(v9, 1, v8))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v9, v8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for PairedHostInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1CF73E664();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1CF73E61C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v17], 1, v15))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v18, v19, v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v15);
  }
  v21 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *((_QWORD *)v23 + 1);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *((_QWORD *)v22 + 1) = v24;
  v25 = a3[11];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = *((_QWORD *)v27 + 1);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for PairedHostInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char *v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1CF73E664();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1CF73E61C();
  LODWORD(v10) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if ((_DWORD)v10)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v16 = *(_QWORD *)(v14 - 8);
  if (EnumTagSinglePayload)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v14);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v14);
LABEL_7:
  v18 = a3[8];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v18], 1, v14);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v14);
  if (!v21)
  {
    v23 = *(_QWORD *)(v14 - 8);
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v19, v20, v14);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v14);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v19, v20, v14);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v14);
LABEL_13:
  a1[a3[9]] = a2[a3[9]];
  v25 = a3[10];
  v26 = &a1[v25];
  v27 = &a2[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28 = a3[11];
  v29 = &a1[v28];
  v30 = &a2[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for PairedHostInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1CF73E664();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v11 = a3[7];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1CF73E61C();
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  v16 = a3[8];
  v17 = &a1[v16];
  v18 = &a2[v16];
  if (__swift_getEnumTagSinglePayload((uint64_t)&a2[v16], 1, v14))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v17, v18, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v14);
  }
  v20 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  *(_OWORD *)&a1[v20] = *(_OWORD *)&a2[v20];
  *(_OWORD *)&a1[a3[11]] = *(_OWORD *)&a2[a3[11]];
  return a1;
}

char *assignWithTake for PairedHostInfo(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;

  v6 = *((_QWORD *)a2 + 1);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_1CF73E664();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v12 = a3[7];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = sub_1CF73E61C();
  LODWORD(v11) = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if ((_DWORD)v11)
  {
    if (!EnumTagSinglePayload)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v17 = *(_QWORD *)(v15 - 8);
  if (EnumTagSinglePayload)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v13, v15);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v13, v14, v15);
LABEL_7:
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = &a2[v19];
  v22 = __swift_getEnumTagSinglePayload((uint64_t)&a1[v19], 1, v15);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v15);
  if (!v22)
  {
    v24 = *(_QWORD *)(v15 - 8);
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 40))(v20, v21, v15);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v20, v15);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v20, v21, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v15);
LABEL_13:
  v26 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  v27 = &a1[v26];
  v28 = (uint64_t *)&a2[v26];
  v30 = *v28;
  v29 = v28[1];
  *(_QWORD *)v27 = v30;
  *((_QWORD *)v27 + 1) = v29;
  swift_bridgeObjectRelease();
  v31 = a3[11];
  v32 = &a1[v31];
  v33 = (uint64_t *)&a2[v31];
  v35 = *v33;
  v34 = v33[1];
  *(_QWORD *)v32 = v35;
  *((_QWORD *)v32 + 1) = v34;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PairedHostInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1CF6A49B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_40();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_27();
    if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    {
      v7 = v6;
      v8 = *(int *)(a3 + 20);
    }
    else
    {
      v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
      v8 = *(int *)(a3 + 28);
    }
    OUTLINED_FUNCTION_53_1(a1 + v8, a2, v7);
  }
}

uint64_t storeEnumTagSinglePayload for PairedHostInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1CF6A4A44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_40();
  }
  else
  {
    v8 = OUTLINED_FUNCTION_27();
    if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
    {
      v9 = v8;
      v10 = *(int *)(a4 + 20);
    }
    else
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
      v10 = *(int *)(a4 + 28);
    }
    OUTLINED_FUNCTION_20_1(a1 + v10, a2, a2, v9);
  }
}

void sub_1CF6A4AC8()
{
  unint64_t v0;
  unint64_t v1;

  sub_1CF73E664();
  if (v0 <= 0x3F)
  {
    sub_1CF6A4B70();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1CF6A4B70()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFBA16C0)
  {
    sub_1CF73E61C();
    v0 = sub_1CF73F288();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFBA16C0);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for HostDeletionTarget(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v9 = sub_1CF73E664();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

void *initializeWithCopy for HostDeletionTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1CF73E664();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for HostDeletionTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v11 = sub_1CF73E664();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_1CF6A4E24((uint64_t)a1, &qword_1EFBA1440);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1CF73E664();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

void sub_1CF6A4E24(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_63(v2);
  OUTLINED_FUNCTION_1();
}

void *initializeWithTake for HostDeletionTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v7 = sub_1CF73E664();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for HostDeletionTarget(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v11 = sub_1CF73E664();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_1CF6A4E24((uint64_t)a1, &qword_1EFBA1440);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v9 = sub_1CF73E664();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for HostDeletionTarget()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF6A4FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int EnumTagSinglePayload;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(a1, a2, v4);
  if (EnumTagSinglePayload >= 2)
    return EnumTagSinglePayload - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HostDeletionTarget()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF6A5044(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  return OUTLINED_FUNCTION_20_1(a1, v5, a3, v6);
}

uint64_t sub_1CF6A5088(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  return __swift_getEnumTagSinglePayload(a1, 1, v2);
}

uint64_t sub_1CF6A50BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v4);
}

uint64_t sub_1CF6A50F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CF73E664();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeletePairedHostRecordRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(type metadata accessor for HostDeletionTarget(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
    {
      memcpy(a1, a2, *(_QWORD *)(v4 + 64));
    }
    else
    {
      v8 = sub_1CF73E664();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
    }
  }
  return a1;
}

void _s19RemotePairingDevice18HostDeletionTargetOwxx_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  if (__swift_getEnumTagSinglePayload(a1, 1, v2))
  {
    OUTLINED_FUNCTION_1();
  }
  else
  {
    v3 = OUTLINED_FUNCTION_27();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
}

void *initializeWithCopy for DeletePairedHostRecordRequest(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = type metadata accessor for HostDeletionTarget(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    v6 = sub_1CF73E664();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithCopy for DeletePairedHostRecordRequest(void *a1, const void *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (!EnumTagSinglePayload)
  {
    if (!v6)
    {
      v10 = sub_1CF73E664();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(a1, a2, v10);
      return a1;
    }
    sub_1CF6A4E24((uint64_t)a1, &qword_1EFBA1440);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = type metadata accessor for HostDeletionTarget(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  v7 = sub_1CF73E664();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  return a1;
}

void *initializeWithTake for DeletePairedHostRecordRequest(void *a1, const void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = type metadata accessor for HostDeletionTarget(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    v6 = sub_1CF73E664();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  return a1;
}

void *assignWithTake for DeletePairedHostRecordRequest(void *a1, const void *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1440);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (!EnumTagSinglePayload)
  {
    if (!v6)
    {
      v10 = sub_1CF73E664();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(a1, a2, v10);
      return a1;
    }
    sub_1CF6A4E24((uint64_t)a1, &qword_1EFBA1440);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    v8 = type metadata accessor for HostDeletionTarget(0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    return a1;
  }
  v7 = sub_1CF73E664();
  (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DeletePairedHostRecordRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF6A55AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_76();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for DeletePairedHostRecordRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF6A55E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_76();
  v0 = OUTLINED_FUNCTION_123();
  return __swift_storeEnumTagSinglePayload(v0, v1, v2, v3);
}

uint64_t sub_1CF6A5600()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for HostDeletionTarget(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ListPairedHostRecordRequest()
{
  OUTLINED_FUNCTION_31();
}

void type metadata accessor for ListPairedHostRecordResponse()
{
  OUTLINED_FUNCTION_31();
}

void type metadata accessor for FetchNetworkPairingSessionIDRequest()
{
  OUTLINED_FUNCTION_31();
}

_QWORD *assignWithCopy for FetchNetworkPairingSessionIDResponse(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FetchNetworkPairingSessionIDResponse(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchNetworkPairingSessionIDResponse(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FetchNetworkPairingSessionIDResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for FetchNetworkPairingSessionIDResponse()
{
  OUTLINED_FUNCTION_31();
}

void type metadata accessor for QueryUSBConnectedHostTrustStateRequest()
{
  OUTLINED_FUNCTION_31();
}

uint64_t destroy for AllowPromptlessPairingWithHostRequest()
{
  return swift_bridgeObjectRelease();
}

void _s19RemotePairingDevice37AllowPromptlessPairingWithHostRequestVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1();
}

uint64_t assignWithCopy for AllowPromptlessPairingWithHostRequest(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AllowPromptlessPairingWithHostRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AllowPromptlessPairingWithHostRequest(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AllowPromptlessPairingWithHostRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AllowPromptlessPairingWithHostRequest()
{
  OUTLINED_FUNCTION_31();
}

_QWORD *initializeBufferWithCopyOfBuffer for CreateWirelessPairingSessionRequest(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CF73E814();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t destroy for CreateWirelessPairingSessionRequest(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CF73E814();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CF73E814();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CF73E814();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CF73E814();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for CreateWirelessPairingSessionRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1CF73E814();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_BYTE *)(a1 + *(int *)(a3 + 20)) = *(_BYTE *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateWirelessPairingSessionRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_1CF6A5B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1CF73E814();
  if (*(_DWORD *)(*(_QWORD *)(v4 - 8) + 84) == (_DWORD)a2)
    OUTLINED_FUNCTION_53_1(a1, a2, v4);
  else
    OUTLINED_FUNCTION_40();
}

uint64_t storeEnumTagSinglePayload for CreateWirelessPairingSessionRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1CF6A5BA8(uint64_t a1, char a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_DWORD *)(*(_QWORD *)(sub_1CF73E814() - 8) + 84) == a3)
  {
    v7 = OUTLINED_FUNCTION_123();
    OUTLINED_FUNCTION_20_1(v7, v8, v9, v10);
  }
  else
  {
    *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
    OUTLINED_FUNCTION_40();
  }
}

uint64_t sub_1CF6A5C00()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CF73E814();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t destroy for PinNotificationEvent(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PinNotificationEvent(uint64_t a1, uint64_t a2)
{
  unint64_t v3;
  uint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    v4 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for PinNotificationEvent(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  __int128 v5;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    v5 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for PinNotificationEvent(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  __int128 v6;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PinNotificationEvent(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 1;
  if (v4 >= 3)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PinNotificationEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 1;
  }
  return result;
}

uint64_t sub_1CF6A5F20(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1CF6A5F38(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

void type metadata accessor for PinNotificationEvent()
{
  OUTLINED_FUNCTION_31();
}

uint64_t type metadata accessor for RemotePairingDevicePairingServiceConnection()
{
  return objc_opt_self();
}

uint64_t method lookup function for RemotePairingDevicePairingServiceConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for PinNotificationEvent.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PinNotificationEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1CF6A6068 + 4 * byte_1CF740FF2[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1CF6A609C + 4 * byte_1CF740FED[v4]))();
}

uint64_t sub_1CF6A609C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6A60A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6A60ACLL);
  return result;
}

uint64_t sub_1CF6A60B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6A60C0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1CF6A60C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6A60CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PinNotificationEvent.CodingKeys()
{
  return &type metadata for PinNotificationEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for PinNotificationEvent.EmptyCodingKeys()
{
  return &type metadata for PinNotificationEvent.EmptyCodingKeys;
}

ValueMetadata *type metadata accessor for PinNotificationEvent.ShowCodingKeys()
{
  return &type metadata for PinNotificationEvent.ShowCodingKeys;
}

ValueMetadata *type metadata accessor for PinNotificationEvent.HideCodingKeys()
{
  return &type metadata for PinNotificationEvent.HideCodingKeys;
}

ValueMetadata *type metadata accessor for CreateWirelessPairingSessionRequest.CodingKeys()
{
  return &type metadata for CreateWirelessPairingSessionRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for AllowPromptlessPairingWithHostRequest.CodingKeys()
{
  return &type metadata for AllowPromptlessPairingWithHostRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for QueryUSBConnectedHostTrustStateRequest.CodingKeys()
{
  return &type metadata for QueryUSBConnectedHostTrustStateRequest.CodingKeys;
}

uint64_t OUTLINED_FUNCTION_64_1()
{
  return 0;
}

ValueMetadata *type metadata accessor for FetchNetworkPairingSessionIDResponse.CodingKeys()
{
  return &type metadata for FetchNetworkPairingSessionIDResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for FetchNetworkPairingSessionIDRequest.CodingKeys()
{
  return &type metadata for FetchNetworkPairingSessionIDRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for ListPairedHostRecordResponse.CodingKeys()
{
  return &type metadata for ListPairedHostRecordResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for ListPairedHostRecordRequest.CodingKeys()
{
  return &type metadata for ListPairedHostRecordRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for DeletePairedHostRecordRequest.CodingKeys()
{
  return &type metadata for DeletePairedHostRecordRequest.CodingKeys;
}

uint64_t _s19RemotePairingDevice20PinNotificationEventO14ShowCodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF6A6200 + 4 * byte_1CF740FFC[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF6A6234 + 4 * byte_1CF740FF7[v4]))();
}

uint64_t sub_1CF6A6234(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6A623C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6A6244);
  return result;
}

uint64_t sub_1CF6A6250(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6A6258);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF6A625C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6A6264(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HostDeletionTarget.CodingKeys()
{
  return &type metadata for HostDeletionTarget.CodingKeys;
}

ValueMetadata *type metadata accessor for HostDeletionTarget.AllCodingKeys()
{
  return &type metadata for HostDeletionTarget.AllCodingKeys;
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.Options.Host.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s19RemotePairingDevice36FetchNetworkPairingSessionIDResponseV10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CF6A6320 + 4 * byte_1CF741001[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CF6A6340 + 4 * byte_1CF741006[v4]))();
}

_BYTE *sub_1CF6A6320(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CF6A6340(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6A6348(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6A6350(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6A6358(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6A6360(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for HostDeletionTarget.SingleHostCodingKeys()
{
  return &type metadata for HostDeletionTarget.SingleHostCodingKeys;
}

uint64_t getEnumTagSinglePayload for PairedHostInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PairedHostInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1CF6A6450 + 4 * byte_1CF741010[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1CF6A6484 + 4 * byte_1CF74100B[v4]))();
}

uint64_t sub_1CF6A6484(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6A648C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6A6494);
  return result;
}

uint64_t sub_1CF6A64A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6A64A8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1CF6A64AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6A64B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PairedHostInfo.CodingKeys()
{
  return &type metadata for PairedHostInfo.CodingKeys;
}

unint64_t sub_1CF6A64D4()
{
  unint64_t result;

  result = qword_1EFBA1740;
  if (!qword_1EFBA1740)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7418F8, &type metadata for PairedHostInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1740);
  }
  return result;
}

unint64_t sub_1CF6A6514()
{
  unint64_t result;

  result = qword_1EFBA1748;
  if (!qword_1EFBA1748)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7419B0, &type metadata for HostDeletionTarget.SingleHostCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1748);
  }
  return result;
}

unint64_t sub_1CF6A6554()
{
  unint64_t result;

  result = qword_1EFBA1750;
  if (!qword_1EFBA1750)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741AB8, &type metadata for HostDeletionTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1750);
  }
  return result;
}

unint64_t sub_1CF6A6594()
{
  unint64_t result;

  result = qword_1EFBA1758;
  if (!qword_1EFBA1758)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741B70, &type metadata for DeletePairedHostRecordRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1758);
  }
  return result;
}

unint64_t sub_1CF6A65D4()
{
  unint64_t result;

  result = qword_1EFBA1760;
  if (!qword_1EFBA1760)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741C78, &type metadata for ListPairedHostRecordResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1760);
  }
  return result;
}

unint64_t sub_1CF6A6614()
{
  unint64_t result;

  result = qword_1EFBA1768;
  if (!qword_1EFBA1768)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741D80, &type metadata for FetchNetworkPairingSessionIDResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1768);
  }
  return result;
}

unint64_t sub_1CF6A6654()
{
  unint64_t result;

  result = qword_1EFBA1770;
  if (!qword_1EFBA1770)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741E88, &type metadata for AllowPromptlessPairingWithHostRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1770);
  }
  return result;
}

unint64_t sub_1CF6A6694()
{
  unint64_t result;

  result = qword_1EFBA1778;
  if (!qword_1EFBA1778)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741F40, &type metadata for CreateWirelessPairingSessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1778);
  }
  return result;
}

unint64_t sub_1CF6A66D4()
{
  unint64_t result;

  result = qword_1EFBA1780;
  if (!qword_1EFBA1780)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742048, &type metadata for PinNotificationEvent.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1780);
  }
  return result;
}

unint64_t sub_1CF6A6714()
{
  unint64_t result;

  result = qword_1EFBA1788;
  if (!qword_1EFBA1788)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742150, &type metadata for PinNotificationEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1788);
  }
  return result;
}

unint64_t sub_1CF6A6754()
{
  unint64_t result;

  result = qword_1EFBA1790;
  if (!qword_1EFBA1790)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742070, &type metadata for PinNotificationEvent.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1790);
  }
  return result;
}

unint64_t sub_1CF6A6794()
{
  unint64_t result;

  result = qword_1EFBA1798;
  if (!qword_1EFBA1798)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742098, &type metadata for PinNotificationEvent.EmptyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1798);
  }
  return result;
}

unint64_t sub_1CF6A67D4()
{
  unint64_t result;

  result = qword_1EFBA17A0;
  if (!qword_1EFBA17A0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741FB8, &type metadata for PinNotificationEvent.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17A0);
  }
  return result;
}

unint64_t sub_1CF6A6814()
{
  unint64_t result;

  result = qword_1EFBA17A8;
  if (!qword_1EFBA17A8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741FE0, &type metadata for PinNotificationEvent.ShowCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17A8);
  }
  return result;
}

unint64_t sub_1CF6A6854()
{
  unint64_t result;

  result = qword_1EFBA17B0;
  if (!qword_1EFBA17B0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741F68, &type metadata for PinNotificationEvent.HideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17B0);
  }
  return result;
}

unint64_t sub_1CF6A6894()
{
  unint64_t result;

  result = qword_1EFBA17B8;
  if (!qword_1EFBA17B8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741F90, &type metadata for PinNotificationEvent.HideCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17B8);
  }
  return result;
}

unint64_t sub_1CF6A68D4()
{
  unint64_t result;

  result = qword_1EFBA17C0;
  if (!qword_1EFBA17C0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7420C0, &type metadata for PinNotificationEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17C0);
  }
  return result;
}

unint64_t sub_1CF6A6914()
{
  unint64_t result;

  result = qword_1EFBA17C8;
  if (!qword_1EFBA17C8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7420E8, &type metadata for PinNotificationEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17C8);
  }
  return result;
}

unint64_t sub_1CF6A6954()
{
  unint64_t result;

  result = qword_1EFBA17D0;
  if (!qword_1EFBA17D0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741EB0, &type metadata for CreateWirelessPairingSessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17D0);
  }
  return result;
}

unint64_t sub_1CF6A6994()
{
  unint64_t result;

  result = qword_1EFBA17D8;
  if (!qword_1EFBA17D8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741ED8, &type metadata for CreateWirelessPairingSessionRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17D8);
  }
  return result;
}

unint64_t sub_1CF6A69D4()
{
  unint64_t result;

  result = qword_1EFBA17E0;
  if (!qword_1EFBA17E0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741DF8, &type metadata for AllowPromptlessPairingWithHostRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17E0);
  }
  return result;
}

unint64_t sub_1CF6A6A14()
{
  unint64_t result;

  result = qword_1EFBA17E8;
  if (!qword_1EFBA17E8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741E20, &type metadata for AllowPromptlessPairingWithHostRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17E8);
  }
  return result;
}

unint64_t sub_1CF6A6A54()
{
  unint64_t result;

  result = qword_1ED8F6830;
  if (!qword_1ED8F6830)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741DA8, &type metadata for QueryUSBConnectedHostTrustStateRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F6830);
  }
  return result;
}

unint64_t sub_1CF6A6A94()
{
  unint64_t result;

  result = qword_1ED8F6828;
  if (!qword_1ED8F6828)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741DD0, &type metadata for QueryUSBConnectedHostTrustStateRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F6828);
  }
  return result;
}

unint64_t sub_1CF6A6AD4()
{
  unint64_t result;

  result = qword_1EFBA17F0;
  if (!qword_1EFBA17F0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741CF0, &type metadata for FetchNetworkPairingSessionIDResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17F0);
  }
  return result;
}

unint64_t sub_1CF6A6B14()
{
  unint64_t result;

  result = qword_1EFBA17F8;
  if (!qword_1EFBA17F8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741D18, &type metadata for FetchNetworkPairingSessionIDResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA17F8);
  }
  return result;
}

unint64_t sub_1CF6A6B54()
{
  unint64_t result;

  result = qword_1EFBA1800;
  if (!qword_1EFBA1800)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741CA0, &type metadata for FetchNetworkPairingSessionIDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1800);
  }
  return result;
}

unint64_t sub_1CF6A6B94()
{
  unint64_t result;

  result = qword_1EFBA1808;
  if (!qword_1EFBA1808)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741CC8, &type metadata for FetchNetworkPairingSessionIDRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1808);
  }
  return result;
}

unint64_t sub_1CF6A6BD4()
{
  unint64_t result;

  result = qword_1EFBA1810;
  if (!qword_1EFBA1810)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741BE8, &type metadata for ListPairedHostRecordResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1810);
  }
  return result;
}

unint64_t sub_1CF6A6C14()
{
  unint64_t result;

  result = qword_1EFBA1818;
  if (!qword_1EFBA1818)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741C10, &type metadata for ListPairedHostRecordResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1818);
  }
  return result;
}

unint64_t sub_1CF6A6C54()
{
  unint64_t result;

  result = qword_1EFBA1820;
  if (!qword_1EFBA1820)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741B98, &type metadata for ListPairedHostRecordRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1820);
  }
  return result;
}

unint64_t sub_1CF6A6C94()
{
  unint64_t result;

  result = qword_1EFBA1828;
  if (!qword_1EFBA1828)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741BC0, &type metadata for ListPairedHostRecordRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1828);
  }
  return result;
}

unint64_t sub_1CF6A6CD4()
{
  unint64_t result;

  result = qword_1EFBA1830;
  if (!qword_1EFBA1830)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741AE0, &type metadata for DeletePairedHostRecordRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1830);
  }
  return result;
}

unint64_t sub_1CF6A6D14()
{
  unint64_t result;

  result = qword_1EFBA1838;
  if (!qword_1EFBA1838)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741B08, &type metadata for DeletePairedHostRecordRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1838);
  }
  return result;
}

unint64_t sub_1CF6A6D54()
{
  unint64_t result;

  result = qword_1EFBA1840;
  if (!qword_1EFBA1840)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7419D8, &type metadata for HostDeletionTarget.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1840);
  }
  return result;
}

unint64_t sub_1CF6A6D94()
{
  unint64_t result;

  result = qword_1EFBA1848;
  if (!qword_1EFBA1848)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741A00, &type metadata for HostDeletionTarget.AllCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1848);
  }
  return result;
}

unint64_t sub_1CF6A6DD4()
{
  unint64_t result;

  result = qword_1EFBA1850;
  if (!qword_1EFBA1850)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741920, &type metadata for HostDeletionTarget.SingleHostCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1850);
  }
  return result;
}

unint64_t sub_1CF6A6E14()
{
  unint64_t result;

  result = qword_1EFBA1858;
  if (!qword_1EFBA1858)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741948, &type metadata for HostDeletionTarget.SingleHostCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1858);
  }
  return result;
}

unint64_t sub_1CF6A6E54()
{
  unint64_t result;

  result = qword_1EFBA1860;
  if (!qword_1EFBA1860)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741A28, &type metadata for HostDeletionTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1860);
  }
  return result;
}

unint64_t sub_1CF6A6E94()
{
  unint64_t result;

  result = qword_1EFBA1868;
  if (!qword_1EFBA1868)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741A50, &type metadata for HostDeletionTarget.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1868);
  }
  return result;
}

unint64_t sub_1CF6A6ED4()
{
  unint64_t result;

  result = qword_1EFBA1870;
  if (!qword_1EFBA1870)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741868, &type metadata for PairedHostInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1870);
  }
  return result;
}

unint64_t sub_1CF6A6F14()
{
  unint64_t result;

  result = qword_1EFBA1878;
  if (!qword_1EFBA1878)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF741890, &type metadata for PairedHostInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1878);
  }
  return result;
}

uint64_t sub_1CF6A6F54()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

void sub_1CF6A6F78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CF6A2C84(a1, a2, *(_QWORD *)(v2 + 16));
}

void sub_1CF6A6F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  sub_1CF6A2CDC(a1, a2, a3, a4, *(_QWORD *)(v4 + 16));
}

void sub_1CF6A6F88(uint64_t a1)
{
  uint64_t v1;

  sub_1CF708618(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CF6A6F90(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1CF6A7008()
{
  unint64_t result;

  result = qword_1EFBA18B0;
  if (!qword_1EFBA18B0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for BrowseForPairableHostRequest, &type metadata for BrowseForPairableHostRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA18B0);
  }
  return result;
}

unint64_t sub_1CF6A7044()
{
  unint64_t result;

  result = qword_1EFBA18B8;
  if (!qword_1EFBA18B8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for BrowseForPairableHostRequest, &type metadata for BrowseForPairableHostRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA18B8);
  }
  return result;
}

unint64_t sub_1CF6A7080()
{
  unint64_t result;

  result = qword_1EFBA18C0;
  if (!qword_1EFBA18C0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for HostCheckInRequest, &type metadata for HostCheckInRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA18C0);
  }
  return result;
}

unint64_t sub_1CF6A70BC()
{
  unint64_t result;

  result = qword_1EFBA18C8;
  if (!qword_1EFBA18C8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for HostCheckInRequest, &type metadata for HostCheckInRequest);
    atomic_store(result, (unint64_t *)&qword_1EFBA18C8);
  }
  return result;
}

unint64_t sub_1CF6A70F8()
{
  unint64_t result;

  result = qword_1EFBA18D0;
  if (!qword_1EFBA18D0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for CancelPairingCommand, &type metadata for CancelPairingCommand);
    atomic_store(result, (unint64_t *)&qword_1EFBA18D0);
  }
  return result;
}

unint64_t sub_1CF6A7134()
{
  unint64_t result;

  result = qword_1EFBA18D8;
  if (!qword_1EFBA18D8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for CancelPairingCommand, &type metadata for CancelPairingCommand);
    atomic_store(result, (unint64_t *)&qword_1EFBA18D8);
  }
  return result;
}

unint64_t sub_1CF6A7170()
{
  unint64_t result;

  result = qword_1EFBA18E0;
  if (!qword_1EFBA18E0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for AttemptPairingPinCommand, &type metadata for AttemptPairingPinCommand);
    atomic_store(result, (unint64_t *)&qword_1EFBA18E0);
  }
  return result;
}

unint64_t sub_1CF6A71AC()
{
  unint64_t result;

  result = qword_1EFBA18E8;
  if (!qword_1EFBA18E8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for AttemptPairingPinCommand, &type metadata for AttemptPairingPinCommand);
    atomic_store(result, (unint64_t *)&qword_1EFBA18E8);
  }
  return result;
}

unint64_t sub_1CF6A71E8()
{
  unint64_t result;

  result = qword_1EFBA1908;
  if (!qword_1EFBA1908)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for InitiatePairingWithHostCommand, &type metadata for InitiatePairingWithHostCommand);
    atomic_store(result, (unint64_t *)&qword_1EFBA1908);
  }
  return result;
}

unint64_t sub_1CF6A7224()
{
  unint64_t result;

  result = qword_1EFBA1910;
  if (!qword_1EFBA1910)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for InitiatePairingWithHostCommand, &type metadata for InitiatePairingWithHostCommand);
    atomic_store(result, (unint64_t *)&qword_1EFBA1910);
  }
  return result;
}

void sub_1CF6A7260(id a1)
{

}

uint64_t sub_1CF6A726C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CF6A8A20(a1, *(_QWORD *)(v1 + 16));
}

void sub_1CF6A7274(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

uint64_t sub_1CF6A7280()
{
  uint64_t v0;

  swift_release();
  sub_1CF6A7260(*(id *)(v0 + 32));
  return swift_deallocObject();
}

void sub_1CF6A72B0()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
  OUTLINED_FUNCTION_1();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

id sub_1CF6A72F0(id a1)
{
  return a1;
}

unint64_t sub_1CF6A72FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8F7A10;
  if (!qword_1ED8F7A10)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED8F7A00);
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8F7A10);
  }
  return result;
}

id sub_1CF6A7340(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1CF6A7350(void *a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

id sub_1CF6A7360(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1CF6A736C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_20_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_21_0@<X0>(uint64_t (*a1)(uint64_t, _QWORD)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, *(_QWORD *)(v2 - 136));
}

void OUTLINED_FUNCTION_22_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  char v13;
  uint64_t v14;
  int *v15;
  _QWORD *v16;
  _QWORD *v17;

  *(_BYTE *)(v14 + v15[9]) = v13;
  v16 = (_QWORD *)(v14 + v15[10]);
  *v16 = a11;
  v16[1] = a12;
  v17 = (_QWORD *)(v14 + v15[11]);
  *v17 = v12;
  v17[1] = a10;
}

uint64_t OUTLINED_FUNCTION_26_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_33_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_35()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v0 + 8))(v1, *(_QWORD *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_37_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_40_1()
{
  return sub_1CF73F810();
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return sub_1CF73F5AC();
}

uint64_t OUTLINED_FUNCTION_47_1@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return type metadata accessor for HostDeletionTarget(0);
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return sub_1CF73F4A4();
}

uint64_t OUTLINED_FUNCTION_53_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

_QWORD *OUTLINED_FUNCTION_54_2()
{
  _QWORD *v0;

  return __swift_project_boxed_opaque_existential_0Tm(v0, v0[3]);
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return sub_1CF73F408();
}

uint64_t OUTLINED_FUNCTION_57_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_64_2(uint64_t a1, uint64_t a2)
{
  return sub_1CF68E328(a1, a2);
}

void OUTLINED_FUNCTION_66_0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_67_0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_68_0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_69_0()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_70_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, a4);
}

uint64_t OUTLINED_FUNCTION_71()
{
  return sub_1CF73F4F8();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_75()
{
  return sub_1CF73F378();
}

uint64_t OUTLINED_FUNCTION_76()
{
  return type metadata accessor for HostDeletionTarget(0);
}

uint64_t OUTLINED_FUNCTION_77()
{
  return swift_dynamicCastClassUnconditional();
}

uint64_t OUTLINED_FUNCTION_78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1CF69C834(v0, v1 + *(int *)(v2 + 32));
}

uint64_t OUTLINED_FUNCTION_79()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_81()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1CF69C834(v0, v1 + *(int *)(v2 + 28));
}

uint64_t OUTLINED_FUNCTION_82()
{
  return sub_1CF73F4E0();
}

void OUTLINED_FUNCTION_83_0()
{
  RemotePairingDevicePairingServiceConnection.deletePairingRecords(matching:invokingCompletionHandlerOn:completion:)();
}

size_t OUTLINED_FUNCTION_85(_QWORD *a1)
{
  uint64_t v1;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / 16);
  return result;
}

uint64_t OUTLINED_FUNCTION_86()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_89()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1CF6A3724(v1, v0);
}

void OUTLINED_FUNCTION_90()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

uint64_t OUTLINED_FUNCTION_97()
{
  return sub_1CF73F57C();
}

uint64_t OUTLINED_FUNCTION_102()
{
  return sub_1CF73F7F8();
}

uint64_t OUTLINED_FUNCTION_103()
{
  return sub_1CF73F7F8();
}

uint64_t OUTLINED_FUNCTION_104()
{
  return sub_1CF73F7EC();
}

unint64_t OUTLINED_FUNCTION_110()
{
  return sub_1CF6A38B4();
}

uint64_t OUTLINED_FUNCTION_111()
{
  return sub_1CF73F840();
}

unint64_t OUTLINED_FUNCTION_112()
{
  return sub_1CF6A383C();
}

uint64_t OUTLINED_FUNCTION_113()
{
  return sub_1CF73F4BC();
}

unint64_t OUTLINED_FUNCTION_114()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_1CF6A3788();
}

uint64_t OUTLINED_FUNCTION_115()
{
  return sub_1CF73E730();
}

uint64_t OUTLINED_FUNCTION_116()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0);
}

unint64_t OUTLINED_FUNCTION_117()
{
  return sub_1CF6A3878();
}

uint64_t OUTLINED_FUNCTION_119@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_120()
{
  return sub_1CF73F528();
}

uint64_t OUTLINED_FUNCTION_123()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_125()
{
  return swift_getObjectType();
}

unint64_t static MachServiceNames.pairingManagementService.getter()
{
  return OUTLINED_FUNCTION_0(47);
}

unint64_t static MachServiceNames.deviceInitiatedPairingService.getter()
{
  return OUTLINED_FUNCTION_0(59);
}

unint64_t static MachServiceNames.tunnelManagementService.getter()
{
  return OUTLINED_FUNCTION_0(46);
}

unint64_t static MachServiceNames.auxiliaryMetadata.getter()
{
  return OUTLINED_FUNCTION_0(55);
}

unint64_t static RemoteServiceNames.tunnelService.getter()
{
  return OUTLINED_FUNCTION_0(56);
}

unint64_t static RemoteServiceNames.lockdownService.getter()
{
  return OUTLINED_FUNCTION_0(42);
}

unint64_t static RemoteServiceNames.deviceComputeService.getter()
{
  return OUTLINED_FUNCTION_0(48);
}

RemotePairingDevice::BonjourService_optional __swiftcall BonjourService.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  RemotePairingDevice::BonjourService_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1CF73F498();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

void sub_1CF6A7928(char *a1)
{
  sub_1CF6B35F0(*a1);
}

unint64_t sub_1CF6A7938()
{
  unint64_t result;

  result = qword_1EFBA1960;
  if (!qword_1EFBA1960)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for BonjourService, &type metadata for BonjourService);
    atomic_store(result, (unint64_t *)&qword_1EFBA1960);
  }
  return result;
}

void sub_1CF6A7974()
{
  sub_1CF6B3CF0();
}

void sub_1CF6A797C(uint64_t a1)
{
  char *v1;

  sub_1CF6B3F54(a1, *v1);
}

void sub_1CF6A7984()
{
  sub_1CF6B434C();
}

RemotePairingDevice::BonjourService_optional sub_1CF6A798C(Swift::String *a1)
{
  return BonjourService.init(rawValue:)(*a1);
}

uint64_t sub_1CF6A7998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = BonjourService.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void type metadata accessor for MachServiceNames()
{
  OUTLINED_FUNCTION_31();
}

void type metadata accessor for RemoteServiceNames()
{
  OUTLINED_FUNCTION_31();
}

uint64_t getEnumTagSinglePayload for BonjourService(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for BonjourService(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1CF6A7AA8 + 4 * byte_1CF7426AA[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1CF6A7ADC + 4 * byte_1CF7426A5[v4]))();
}

uint64_t sub_1CF6A7ADC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6A7AE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6A7AECLL);
  return result;
}

uint64_t sub_1CF6A7AF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6A7B00);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1CF6A7B04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6A7B0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6A7B18(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1CF6934BC(a1, a2);
  return a1;
}

uint64_t _s5StateOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1CF68E984(*(_QWORD *)a2, v4, v5, v6, v7, v8, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1CF68E984(v9, v10, v11, v12, v13, v14, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s5StateOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1CF68E984(v5, v7, v6, v8, v9, v11, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  return a1;
}

uint64_t _s5StateOwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFC && *(_BYTE *)(a1 + 41))
    {
      v2 = *(_DWORD *)a1 + 251;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 4)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s5StateOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CF6A7D0C(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnection.State()
{
  return &type metadata for ControlChannelConnection.State;
}

uint64_t OUTLINED_FUNCTION_5_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t (*v9)(void);
  uint64_t (*v10)(uint64_t, uint64_t);

  return sub_1CF68E984(a1, a2, a3, a4, a5, a6, v9, v10, a9);
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1CF6A3AE0(v1);
  return sub_1CF6A7B18(v2, v0);
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1CF6A3AE0(v2);
  sub_1CF6A7B18(v1, v0);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_21_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_25_1(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  return sub_1CF68E984(result, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_38_2()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6934BC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_42_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  return sub_1CF68E984(a1, a2, a3, a4, a5, 0, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6A7B18(v1, v0);
}

uint64_t sub_1CF6A7EDC()
{
  uint64_t result;

  sub_1CF6AA174(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA1968 = result;
  return result;
}

void sub_1CF6A7F54(uint64_t a1)
{
  OUTLINED_FUNCTION_1_4(a1, &qword_1EFBA1978);
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_1CF6A7FAC(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4;

  v4 = a3 + 16;
  swift_beginAccess();
  a1(v4);
  return swift_endAccess();
}

uint64_t sub_1CF6A800C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD v13[4];
  char v14;
  uint64_t v15;
  uint64_t v16;

  v6 = v5;
  *(_QWORD *)(v6 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3740]), sel_init);
  v13[0] = a1;
  v13[1] = a2;
  v13[2] = a3;
  swift_unknownObjectWeakInit();
  v14 = 0;
  v15 = a4;
  v16 = a5;
  sub_1CF6AA1AC((uint64_t)v13, v6 + 16);
  OUTLINED_FUNCTION_2_4();
  swift_retain();
  sub_1CF6A3AE0(a4);
  OUTLINED_FUNCTION_121();
  sub_1CF73E874();
  swift_release();
  sub_1CF73E724();
  sub_1CF693EC8(a4);
  swift_release();
  swift_release();
  return v6;
}

uint64_t sub_1CF6A80F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  os_log_type_t v15;
  NSObject *v16;
  void (*v17)(char *, char *, uint64_t);
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint8_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v2 = sub_1CF73E940();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v26 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v26 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1AA8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1CF6AA1E8(a1, (uint64_t)v14);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v11, v14, v2);
    v15 = sub_1CF73F0CC();
    if (qword_1EFBA08E0 != -1)
      swift_once();
    v16 = qword_1EFBA1968;
    v17 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    v17(v9, v11, v2);
    v18 = v15;
    if (os_log_type_enabled(v16, v15))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v27 = swift_slowAlloc();
      v29 = v27;
      *(_DWORD *)v19 = 136315138;
      v26 = v19 + 4;
      v17(v6, v9, v2);
      v20 = sub_1CF73EF10();
      sub_1CF68F110(v20, v21, &v29);
      v28 = v22;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      v23 = *(void (**)(char *, uint64_t))(v3 + 8);
      v23(v9, v2);
      _os_log_impl(&dword_1CF67E000, v16, v18, "Recieved error from side channel listener: %s", v19, 0xCu);
      v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v24, -1, -1);
      MEMORY[0x1D17D3ED0](v19, -1, -1);
    }
    else
    {
      v23 = *(void (**)(char *, uint64_t))(v3 + 8);
      v23(v9, v2);
    }
    return ((uint64_t (*)(char *, uint64_t))v23)(v11, v2);
  }
  else
  {
    sub_1CF6A83B4(*v14, v14[1]);
    return swift_release();
  }
}

void sub_1CF6A83B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  sub_1CF73F0C0();
  if (qword_1EFBA08E0 != -1)
    swift_once();
  sub_1CF73E694();
  OUTLINED_FUNCTION_16();
  swift_weakInit();
  sub_1CF6A9F3C();
  sub_1CF6A9F78();
  sub_1CF73E7D8();
  swift_release();
  sub_1CF73E724();
  objc_allocWithZone((Class)type metadata accessor for WirelessPairingSession());
  v3 = OUTLINED_FUNCTION_2_4();
  v4 = sub_1CF6A8CC8(v3, a2);
  MEMORY[0x1E0C80A78](v4);
  sub_1CF6A7F54((uint64_t)sub_1CF6A9FB4);

}

void sub_1CF6A8504(uint64_t a1)
{
  unint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t Strong;
  uint64_t v7;
  id v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  NSObject *v19;
  uint8_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t *);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30[3];

  v2 = *(void **)a1;
  v1 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v5 = *(unsigned __int8 *)(a1 + 32);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v7 = Strong;
    if (v5)
    {
      v8 = v2;
      v9 = sub_1CF73F0CC();
      if (qword_1EFBA08E0 != -1)
        swift_once();
      v10 = qword_1EFBA1968;
      v11 = os_log_type_enabled((os_log_t)qword_1EFBA1968, v9);
      if ((_DWORD)v11)
      {
        sub_1CF6A9FFC(v2, v1, v4, v3, 1);
        sub_1CF6A9FFC(v2, v1, v4, v3, 1);
        v12 = (uint8_t *)swift_slowAlloc();
        v13 = swift_slowAlloc();
        v26 = v13;
        *(_DWORD *)v12 = 136315138;
        v30[0] = (uint64_t)v2;
        v14 = v2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
        v15 = sub_1CF73EF10();
        sub_1CF68F110(v15, v16, &v26);
        v30[0] = v17;
        sub_1CF73F2A0();
        swift_bridgeObjectRelease();
        sub_1CF6A9FBC(v2, v1, v4, v3, 1);
        sub_1CF6A9FBC(v2, v1, v4, v3, 1);
        _os_log_impl(&dword_1CF67E000, v10, v9, "Recieved error from side channel peer: %s", v12, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v13, -1, -1);
        v11 = MEMORY[0x1D17D3ED0](v12, -1, -1);
      }
      MEMORY[0x1E0C80A78](v11);
      sub_1CF6A7F54((uint64_t)sub_1CF6A726C);
      swift_release();
      sub_1CF6A9FBC(v2, v1, v4, v3, 1);
    }
    else
    {
      v18 = sub_1CF73F0C0();
      if (qword_1EFBA08E0 != -1)
        swift_once();
      v19 = qword_1EFBA1968;
      if (os_log_type_enabled((os_log_t)qword_1EFBA1968, v18))
      {
        sub_1CF6A9FFC(v2, v1, v4, v3, 0);
        sub_1CF6A9FFC(v2, v1, v4, v3, 0);
        v20 = (uint8_t *)swift_slowAlloc();
        v25 = swift_slowAlloc();
        *(_DWORD *)v20 = 136315138;
        v29 = v3;
        v30[0] = v25;
        v27 = v1;
        v28 = v4;
        sub_1CF6AA008((uint64_t)v2, v1);
        v21 = sub_1CF73EF10();
        sub_1CF68F110(v21, v22, v30);
        v26 = v23;
        sub_1CF73F2A0();
        swift_bridgeObjectRelease();
        sub_1CF6A9FBC(v2, v1, v4, v3, 0);
        sub_1CF6A9FBC(v2, v1, v4, v3, 0);
        _os_log_impl(&dword_1CF67E000, v19, v18, "Recieved message from side channel peer: %s", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v25, -1, -1);
        MEMORY[0x1D17D3ED0](v20, -1, -1);
      }
      swift_beginAccess();
      v24 = *(void (**)(uint64_t *))(v7 + 56);
      if (v24)
      {
        v26 = (uint64_t)v2;
        v27 = v1;
        v28 = v4;
        v29 = v3;
        swift_retain();
        v24(&v26);
        sub_1CF693EC8((uint64_t)v24);
      }
      else
      {
        sub_1CF73F0CC();
        sub_1CF73E694();
      }
      swift_release();
    }
  }
}

uint64_t sub_1CF6A89A4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  void (*v5)(uint64_t, _QWORD);

  result = swift_unknownObjectWeakAssign();
  v5 = *(void (**)(uint64_t, _QWORD))(a1 + 8);
  *(_BYTE *)(a1 + 32) = 1;
  if (v5)
  {
    swift_retain();
    v5(a2, 0);
    sub_1CF693EC8((uint64_t)v5);
    result = sub_1CF693EC8((uint64_t)v5);
  }
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_1CF6A8A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t result;

  if (*(_QWORD *)a1)
  {
    OUTLINED_FUNCTION_2_4();
    sub_1CF73E718();
    swift_release_n();
  }
  *(_QWORD *)a1 = 0;
  v4 = MEMORY[0x1D17D3F84](a1 + 24);
  if (v4)
  {
    v5 = (void *)v4;
    sub_1CF6A923C(a2);

  }
  else if ((*(_BYTE *)(a1 + 32) & 1) == 0)
  {
    v6 = *(void (**)(uint64_t, uint64_t))(a1 + 8);
    if (v6)
    {
      OUTLINED_FUNCTION_2_4();
      v6(a2, 1);
      sub_1CF693EC8((uint64_t)v6);
    }
  }
  result = sub_1CF693EC8(*(_QWORD *)(a1 + 8));
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_1CF6A8AC4()
{
  uint64_t v0;

  sub_1CF6AA058(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1CF6A8AF0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___RPWirelessPairingSession_Internal__invalidationHandlers);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

id sub_1CF6A8B40@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR___RPWirelessPairingSession_Internal__state);
  *a1 = v2;
  return sub_1CF6A9EDC(v2);
}

void sub_1CF6A8B54(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v3 = *(void **)(v1 + OBJC_IVAR___RPWirelessPairingSession_Internal__state);
  *(_QWORD *)(v1 + OBJC_IVAR___RPWirelessPairingSession_Internal__state) = v2;
  sub_1CF6A8CB8(v3);
}

uint64_t sub_1CF6A8B6C(uint64_t a1)
{
  OUTLINED_FUNCTION_1_4(a1, &qword_1EFBA1978);
  return OUTLINED_FUNCTION_4_3();
}

id sub_1CF6A8BDC@<X0>(_QWORD *a1@<X8>)
{
  return sub_1CF6A8B40(a1);
}

BOOL sub_1CF6A8C34(uint64_t a1)
{
  void *v2;

  OUTLINED_FUNCTION_1_4(a1, &qword_1EFBA1978);
  OUTLINED_FUNCTION_0_6();
  if (v2 != (void *)1)
    sub_1CF6A8CB8(v2);
  return v2 != (void *)1;
}

void sub_1CF6A8CB8(id a1)
{
  if (a1 != (id)1)

}

id sub_1CF6A8CC8(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  id v6;
  char *v7;
  char *v8;
  id v9;
  objc_super v11;

  v5 = OBJC_IVAR___RPWirelessPairingSession_Internal__lock;
  v6 = objc_allocWithZone(MEMORY[0x1E0CB3740]);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, sel_init);
  *(_QWORD *)&v7[OBJC_IVAR___RPWirelessPairingSession_Internal__invalidationHandlers] = MEMORY[0x1E0DEE9D8];
  v8 = &v7[OBJC_IVAR___RPWirelessPairingSession_Internal__connection];
  *(_QWORD *)v8 = a1;
  *((_QWORD *)v8 + 1) = a2;
  *(_QWORD *)&v7[OBJC_IVAR___RPWirelessPairingSession_Internal__state] = 1;
  OUTLINED_FUNCTION_121();

  v11.receiver = v7;
  v11.super_class = (Class)type metadata accessor for WirelessPairingSession();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  swift_release();
  return v9;
}

void sub_1CF6A8D9C()
{
  sub_1CF73F0E4();
  if (qword_1EFBA08E0 != -1)
    swift_once();
  sub_1CF73E694();
  sub_1CF6A923C(0);
}

uint64_t sub_1CF6A8E4C(void *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  id v7;

  v6 = (_QWORD *)OUTLINED_FUNCTION_16();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  OUTLINED_FUNCTION_1_4((uint64_t)v6, &qword_1EFBA1978);
  v7 = a1;
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_4_3();
  return swift_release();
}

uint64_t sub_1CF6A8F08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v7 = sub_1CF73ED54();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1CF73ED84();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a1;
  aBlock[4] = sub_1CF6AA0DC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CC068;
  aBlock[3] = &block_descriptor_0;
  v16 = _Block_copy(aBlock);
  swift_retain();
  v17 = a1;
  sub_1CF73ED6C();
  v19[1] = MEMORY[0x1E0DEE9D8];
  sub_1CF6AA11C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6A72FC();
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v14, v10, v16);
  _Block_release(v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return swift_release();
}

void sub_1CF6A90D0(uint64_t a1, void (*a2)(void *), uint64_t a3)
{
  void *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;

  sub_1CF6A8B40(&v12);
  v6 = v12;
  if (v12 == (void *)1)
  {
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = a2;
    *(_QWORD *)(v7 + 24) = a3;
    v8 = (uint64_t *)(a1 + OBJC_IVAR___RPWirelessPairingSession_Internal__invalidationHandlers);
    swift_beginAccess();
    swift_retain();
    sub_1CF709CB4();
    v9 = *(_QWORD *)(*v8 + 16);
    sub_1CF709D38(v9);
    v10 = *v8;
    *(_QWORD *)(v10 + 16) = v9 + 1;
    v11 = v10 + 16 * v9;
    *(_QWORD *)(v11 + 32) = sub_1CF6AA0A8;
    *(_QWORD *)(v11 + 40) = v7;
    swift_endAccess();
  }
  else
  {
    a2(v12);
    sub_1CF6A8CB8(v6);
  }
}

void sub_1CF6A923C(uint64_t a1)
{
  OUTLINED_FUNCTION_1_4(a1, &qword_1EFBA1978);
  OUTLINED_FUNCTION_0_6();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_1CF6A9298()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6A92C4(void *a1)
{
  uint64_t *v1;

  return sub_1CF6A8F08(a1, v1[2], v1[3], v1[4]);
}

void sub_1CF6A92D0()
{
  uint64_t v0;

  sub_1CF6A90D0(*(_QWORD *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1CF6A92EC(uint64_t a1, void *a2)
{
  id v4;
  os_log_type_t v5;
  NSObject *v6;
  id v7;
  id v8;
  uint8_t *v9;
  void *v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  void *v14;
  id v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(void **);
  id v21[3];
  void *v22;

  sub_1CF6A8B40(v21);
  if (v21[0] == (id)1)
  {
    if (a2)
    {
      v4 = a2;
      v5 = sub_1CF73F0E4();
      if (qword_1EFBA08E0 != -1)
        swift_once();
      v6 = qword_1EFBA1968;
      if (os_log_type_enabled((os_log_t)qword_1EFBA1968, v5))
      {
        v7 = a2;
        v8 = a2;
        v9 = (uint8_t *)swift_slowAlloc();
        v10 = (void *)swift_slowAlloc();
        *(_DWORD *)v9 = 136315138;
        v21[0] = v10;
        v22 = a2;
        v11 = a2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
        v12 = sub_1CF73EF10();
        sub_1CF68F110(v12, v13, (uint64_t *)v21);
        v22 = v14;
        sub_1CF73F2A0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1CF67E000, v6, v5, "Wireless pairing session invalidated with error: %s", v9, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v10, -1, -1);
        MEMORY[0x1D17D3ED0](v9, -1, -1);
      }

    }
    else
    {
      sub_1CF73F0E4();
      if (qword_1EFBA08E0 != -1)
        swift_once();
      sub_1CF73E694();
    }
    v21[0] = a2;
    v15 = a2;
    sub_1CF6A8B54((uint64_t *)v21);
    sub_1CF73E718();
    v16 = (uint64_t *)(a1 + OBJC_IVAR___RPWirelessPairingSession_Internal__invalidationHandlers);
    swift_beginAccess();
    v17 = *v16;
    v18 = *(_QWORD *)(*v16 + 16);
    if (v18)
    {
      swift_bridgeObjectRetain();
      v19 = v17 + 40;
      do
      {
        v20 = *(void (**)(void **))(v19 - 8);
        v22 = a2;
        swift_retain();
        v20(&v22);
        swift_release();
        v19 += 16;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
    }
    sub_1CF6A8AF0(MEMORY[0x1E0DEE9D8]);
  }
  else
  {
    sub_1CF6A8CB8(v21[0]);
  }
}

id WirelessPairingSession.__deallocating_deinit()
{
  void *v0;
  uint64_t v1;
  objc_super v3;

  sub_1CF6A923C(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2F80);
  v1 = OUTLINED_FUNCTION_16();
  *(_OWORD *)(v1 + 16) = xmmword_1CF742850;
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 32) = 0xD000000000000017;
  *(_QWORD *)(v1 + 40) = 0x80000001CF750640;
  sub_1CF73F7D4();
  swift_bridgeObjectRelease();
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for WirelessPairingSession();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t type metadata accessor for WirelessPairingSession()
{
  return objc_opt_self();
}

id WirelessPairingSession.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WirelessPairingSession.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t type metadata accessor for InProgressWirelessPairingSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for WirelessPairingSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WirelessPairingSession.state.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of WirelessPairingSession.invalidated.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of WirelessPairingSession.endSession()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of WirelessPairingSession.registerInvalidationHandler(invokingOnQueue:handler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

void destroy for WirelessPairingSession.State(void **a1)
{
  void *v1;
  int v2;

  v1 = *a1;
  v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF)
    v2 = (int)v1;
  if ((v2 + 1) <= 1)

}

_QWORD *_s19RemotePairingDevice22WirelessPairingSessionC5StateOwCP_0(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  return a1;
}

void **assignWithCopy for WirelessPairingSession.State(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;
  id v9;
  void *v10;
  id v11;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1)
      v11 = v7;
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    v9 = v7;
    v10 = *a1;
    *a1 = v7;

  }
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

void **assignWithTake for WirelessPairingSession.State(void **a1, void **a2)
{
  void *v3;
  void *v4;
  int v5;
  unsigned int v6;
  void *v7;
  unsigned int v8;

  v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF)
    v5 = -1;
  else
    v5 = (int)v3;
  v6 = v5 + 1;
  v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  v8 = (_DWORD)v4 + 1;
  if (v6 > 1)
    goto LABEL_11;
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for WirelessPairingSession.State(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFE && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483646);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 2)
    return (v3 - 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for WirelessPairingSession.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFE)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 1;
  }
  return result;
}

uint64_t sub_1CF6A9A48(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  if ((v1 + 1) >= 2)
    return v1;
  else
    return 0;
}

_QWORD *sub_1CF6A9A68(_QWORD *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *result = 0;
    *(_DWORD *)result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for WirelessPairingSession.State()
{
  return &type metadata for WirelessPairingSession.State;
}

uint64_t destroy for InProgressWirelessPairingSession.State(uint64_t a1)
{
  uint64_t result;

  swift_release();
  if (*(_QWORD *)(a1 + 8))
    swift_release();
  result = swift_unknownObjectWeakDestroy();
  if (*(_QWORD *)(a1 + 40))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for InProgressWirelessPairingSession.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = (_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 8);
  swift_retain();
  if (v4)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *v5;
  }
  swift_unknownObjectWeakCopyInit();
  v7 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v7;
    *(_QWORD *)(a1 + 48) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for InProgressWirelessPairingSession.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v5 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  swift_unknownObjectWeakCopyAssign();
  v7 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  if (!v7)
  {
    if (v8)
    {
      v10 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v8;
      *(_QWORD *)(a1 + 48) = v10;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for InProgressWirelessPairingSession.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  }
  swift_unknownObjectWeakTakeInit();
  v6 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (v6)
  {
    v7 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v7;
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithTake for InProgressWirelessPairingSession.State(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
    if (v4)
    {
      v5 = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 8) = v4;
      *(_QWORD *)(a1 + 16) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    v6 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
LABEL_8:
  swift_unknownObjectWeakTakeAssign();
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(a1 + 40);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  if (!v8)
  {
    if (v7)
    {
      v10 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v7;
      *(_QWORD *)(a1 + 48) = v10;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v9;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InProgressWirelessPairingSession.State(uint64_t *a1, unsigned int a2)
{
  int v2;
  uint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 56))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InProgressWirelessPairingSession.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InProgressWirelessPairingSession.State()
{
  return &type metadata for InProgressWirelessPairingSession.State;
}

id sub_1CF6A9EDC(id result)
{
  if (result != (id)1)
    return result;
  return result;
}

uint64_t sub_1CF6A9EEC()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1CF6A9F10()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1CF6A9F34(uint64_t a1)
{
  sub_1CF6A8504(a1);
}

unint64_t sub_1CF6A9F3C()
{
  unint64_t result;

  result = qword_1EFBA1A98;
  if (!qword_1EFBA1A98)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for PinNotificationEvent, &type metadata for PinNotificationEvent);
    atomic_store(result, (unint64_t *)&qword_1EFBA1A98);
  }
  return result;
}

unint64_t sub_1CF6A9F78()
{
  unint64_t result;

  result = qword_1EFBA1AA0;
  if (!qword_1EFBA1AA0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for PinNotificationEvent, &type metadata for PinNotificationEvent);
    atomic_store(result, (unint64_t *)&qword_1EFBA1AA0);
  }
  return result;
}

uint64_t sub_1CF6A9FB4(uint64_t a1)
{
  uint64_t v1;

  return sub_1CF6A89A4(a1, *(_QWORD *)(v1 + 16));
}

void sub_1CF6A9FBC(id a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)

  else
    sub_1CF6A9FC8((uint64_t)a1, a2);
}

uint64_t sub_1CF6A9FC8(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

id sub_1CF6A9FFC(id a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if ((a5 & 1) != 0)
    return a1;
  else
    return (id)sub_1CF6AA008((uint64_t)a1, a2);
}

uint64_t sub_1CF6AA008(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1CF6AA03C()
{
  uint64_t v0;

  return sub_1CF6A7FAC(*(void (**)(uint64_t))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1CF6AA058(uint64_t a1)
{
  destroy for InProgressWirelessPairingSession.State(a1);
  return a1;
}

uint64_t sub_1CF6AA084()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CF6AA0A8(_QWORD *a1)
{
  uint64_t v1;

  sub_1CF708664(a1, *(void (**)(_QWORD))(v1 + 16));
}

uint64_t sub_1CF6AA0B0()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1CF6AA0DC()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_1CF6AA11C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8F79B0;
  if (!qword_1ED8F79B0)
  {
    v1 = sub_1CF73ED54();
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8F79B0);
  }
  return result;
}

void sub_1CF6AA15C()
{
  uint64_t v0;

  sub_1CF6A92EC(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1CF6AA174(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_1CF6AA1AC(uint64_t a1, uint64_t a2)
{
  initializeWithTake for InProgressWirelessPairingSession.State(a2, a1);
  return a2;
}

uint64_t sub_1CF6AA1E0(uint64_t a1)
{
  return sub_1CF6A80F4(a1);
}

uint64_t sub_1CF6AA1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1AA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1CF6AA230@<X0>(_QWORD *a1@<X8>)
{
  return sub_1CF6A8BDC(a1);
}

unint64_t static RemotePairingError.userInfoChallengeKey.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_1CF6AA260()
{
  sub_1CF6AA5E0();
  return sub_1CF73E8E0();
}

uint64_t sub_1CF6AA2A0()
{
  sub_1CF6ABBFC();
  return sub_1CF73F714();
}

uint64_t sub_1CF6AA2C8()
{
  sub_1CF6ABBFC();
  return sub_1CF73F708();
}

uint64_t sub_1CF6AA2F8()
{
  sub_1CF6AA5E0();
  return sub_1CF73E91C();
}

uint64_t sub_1CF6AA348()
{
  sub_1CF6AA5E0();
  return sub_1CF73E928();
}

uint64_t sub_1CF6AA3A4()
{
  sub_1CF6AA5E0();
  return sub_1CF73E910();
}

uint64_t sub_1CF6AA3F0()
{
  sub_1CF6AA5E0();
  return sub_1CF73E8C8();
}

uint64_t sub_1CF6AA428()
{
  sub_1CF6AA5E0();
  return sub_1CF73E8BC();
}

uint64_t sub_1CF6AA460()
{
  sub_1CF6AA5E0();
  return sub_1CF73E8D4();
}

uint64_t sub_1CF6AA498()
{
  sub_1CF6AA5E0();
  return sub_1CF73E8B0();
}

uint64_t sub_1CF6AA4D0()
{
  sub_1CF6AA5E0();
  return sub_1CF73E8A4();
}

uint64_t sub_1CF6AA508()
{
  sub_1CF6AA5E0();
  return sub_1CF73E88C();
}

uint64_t sub_1CF6AA560()
{
  sub_1CF6AA5E0();
  return sub_1CF73E898();
}

void static RemotePairingError.deviceNotFound.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1CF6AA5E0()
{
  unint64_t result;

  result = qword_1ED8F6C80;
  if (!qword_1ED8F6C80)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for RemotePairingError, &type metadata for RemotePairingError);
    atomic_store(result, (unint64_t *)&qword_1ED8F6C80);
  }
  return result;
}

void static RemotePairingError.connectionFailed.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.pairingFailed.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.deviceRejectedPairing.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.interactivePairingRequired.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.invalidOperation.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.rapportError.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.tunnelError.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.managedConfigurationRejectedPairing.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.findMyRejectedPairing.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.deviceIsAlreadyPairingWithHost.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.failedToAuthenticateUser.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.remotePairingNotSupportedByDevice.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.pairingRecordRemovalFailed.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.pairingRecordNotFound.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.mobileDeviceError.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.unlockRequired.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.remoteUnlockFailure.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.pairingRecordMissingInfo.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.userRejectedPairing.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.macAddressUnavailable.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.networkInterfaceIndexUnavailable.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.notConnectedOverNetwork.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.invalidInput.getter()
{
  OUTLINED_FUNCTION_1_5();
  sub_1CF73F774();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.wakeOnLANFailed.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.wakeOnControlChannelFailed.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.remoteUnlockKeysUnsupported.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.managedConfigurationChallengeRequired.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.pairingAlreadyInProgress.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.mtuIsLessThanMinSupportedMTU.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.mtuIsMoreThanMaxSupportedMTU.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.secKeyIsInvalid.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.tlsKeyCreationFailed.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

void static RemotePairingError.assertionReleased.getter()
{
  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  OUTLINED_FUNCTION_0_7();
  OUTLINED_FUNCTION_1();
}

uint64_t static RemotePairingError.managedConfigurationChallengeRequired(with:)(uint64_t a1, unint64_t a2)
{
  uint64_t inited;

  OUTLINED_FUNCTION_1_5();
  OUTLINED_FUNCTION_3_0();
  sub_1CF73F774();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7C50);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CF742850;
  *(_QWORD *)(inited + 32) = 0xD000000000000010;
  *(_QWORD *)(inited + 40) = 0x80000001CF750870;
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0CB0338];
  *(_QWORD *)(inited + 48) = a1;
  *(_QWORD *)(inited + 56) = a2;
  sub_1CF6934BC(a1, a2);
  sub_1CF73EE44();
  sub_1CF6ABA2C(MEMORY[0x1E0DEE9D8]);
  return sub_1CF73F768();
}

void ControlChannelConnectionError.normalized<A>(as:)(ValueMetadata *a1)
{
  if (a1 == &type metadata for RemotePairingError)
    __asm { BR              X9 }
  OUTLINED_FUNCTION_6_2();
}

uint64_t sub_1CF6AB18C()
{
  uint64_t result;

  if (MEMORY[0x1E0D838F0])
  {
    sub_1CF6ABB78();
    sub_1CF73EED4();
    sub_1CF6AA5E0();
    sub_1CF73F234();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CF6AB210()
{
  uint64_t v0;

  sub_1CF6AA5E0();
  sub_1CF73F774();
  sub_1CF6ABB3C();
  v0 = swift_allocError();
  sub_1CF73E904();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1CF6AB2CC()
{
  sub_1CF6ABB78();
  static ControlChannelConnectionError.errorDomain.getter();
  sub_1CF6AA5E0();
  sub_1CF73F234();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6AB334(void *a1)
{
  id v2;

  sub_1CF6ABB78();
  v2 = a1;
  if ((swift_dynamicCast() & 1) != 0)
    __asm { BR              X10 }
  return 0;
}

uint64_t static NSError.setRemotePairingNormalizationProviders()()
{
  uint64_t result;

  if (qword_1ED8F78D8 != -1)
    result = swift_once();
  if (qword_1ED8F7940 != -1)
    return swift_once();
  return result;
}

unint64_t sub_1CF6AB588()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1AB8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1CF742850;
  v1 = sub_1CF6ABE3C();
  result = sub_1CF6ABE78();
  *(_QWORD *)(v0 + 32) = &type metadata for RemotePairingError;
  *(_QWORD *)(v0 + 40) = v1;
  *(_QWORD *)(v0 + 48) = result;
  qword_1EFBA1AB0 = v0;
  return result;
}

uint64_t static RemotePairingErrorCodingWrapper.supportedTypes.getter()
{
  if (qword_1EFBA08E8 != -1)
    swift_once();
  OUTLINED_FUNCTION_10();
  return swift_bridgeObjectRetain();
}

uint64_t static RemotePairingErrorCodingWrapper.supportedTypes.setter(uint64_t a1)
{
  if (qword_1EFBA08E8 != -1)
    swift_once();
  OUTLINED_FUNCTION_10();
  qword_1EFBA1AB0 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static RemotePairingErrorCodingWrapper.supportedTypes.modify())()
{
  if (qword_1EFBA08E8 != -1)
    swift_once();
  OUTLINED_FUNCTION_10();
  return j__swift_endAccess;
}

id RemotePairingErrorCodingWrapper.wrappedValue.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void sub_1CF6AB758(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  RemotePairingErrorCodingWrapper.wrappedValue.setter(v1);
}

void RemotePairingErrorCodingWrapper.wrappedValue.setter(void *a1)
{
  void **v1;
  _QWORD *v2;
  void *v4;
  id v5;
  uint64_t v6;

  v2 = v1;
  v4 = *v1;
  v5 = a1;

  *v2 = a1;
  swift_getErrorValue();
  sub_1CF6AA5E0();
  v6 = OUTLINED_FUNCTION_8_1();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_44_0();
  *v2 = v6;
}

void (*RemotePairingErrorCodingWrapper.wrappedValue.modify(_QWORD *a1))(_QWORD **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  return sub_1CF6AB848;
}

void sub_1CF6AB848(_QWORD **a1, char a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;

  v2 = *a1;
  if ((a2 & 1) == 0)
  {
    v3 = (uint64_t *)v2[4];
    swift_getErrorValue();
    sub_1CF6AA5E0();
    v4 = OUTLINED_FUNCTION_8_1();
    OUTLINED_FUNCTION_44_0();
    *v3 = v4;
  }
  free(v2);
}

uint64_t RemotePairingErrorCodingWrapper.init(wrappedValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *static RemotePairingErrorCodingWrapper.defaultEncodingValue(forUnencodableValue:)(void *a1)
{
  id v2;

  v2 = a1;
  return a1;
}

void RemotePairingErrorCodingWrapper.encode(to:)()
{
  void *v0;

  v0 = (void *)sub_1CF73E484();
  sub_1CF73F24C();

}

uint64_t RemotePairingErrorCodingWrapper.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[40];

  sub_1CF6ABB78();
  sub_1CF6ABBB4(a1, (uint64_t)v7);
  v5 = sub_1CF73F240();
  result = __swift_destroy_boxed_opaque_existential_0Tm(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

void *sub_1CF6AB9B0@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *result;

  result = static RemotePairingErrorCodingWrapper.defaultEncodingValue(forUnencodableValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1CF6AB9D8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return RemotePairingErrorCodingWrapper.init(wrappedValue:)(*a1, a2);
}

id sub_1CF6AB9E0@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = RemotePairingErrorCodingWrapper.wrappedValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6ABA04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return RemotePairingErrorCodingWrapper.init(from:)(a1, a2);
}

void sub_1CF6ABA18()
{
  RemotePairingErrorCodingWrapper.encode(to:)();
}

void sub_1CF6ABA2C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (*(_QWORD *)(a1 + 16)
    && (__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7A80),
        v2 = sub_1CF73F474(),
        v3 = (_QWORD *)v2,
        (v4 = *(_QWORD *)(a1 + 16)) != 0))
  {
    v5 = v2 + 64;
    v6 = a1 + 32;
    swift_retain();
    while (1)
    {
      sub_1CF6ABF18(v6, (uint64_t)&v15);
      v7 = v15;
      v8 = v16;
      v9 = sub_1CF6ABEB4(v15, v16);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)(v5 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
      v11 = (uint64_t *)(v3[6] + 16 * v9);
      *v11 = v7;
      v11[1] = v8;
      sub_1CF68E2E4(&v17, (_OWORD *)(v3[7] + 32 * v9));
      v12 = v3[2];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
        goto LABEL_10;
      v3[2] = v14;
      v6 += 48;
      if (!--v4)
      {
        swift_release();
        goto LABEL_8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
LABEL_8:
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_6_2();
  }
}

unint64_t sub_1CF6ABB3C()
{
  unint64_t result;

  result = qword_1ED8F6C90;
  if (!qword_1ED8F6C90)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for RemotePairingError, &type metadata for RemotePairingError);
    atomic_store(result, (unint64_t *)&qword_1ED8F6C90);
  }
  return result;
}

unint64_t sub_1CF6ABB78()
{
  unint64_t result;

  result = qword_1ED8F7A40;
  if (!qword_1ED8F7A40)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8F7A40);
  }
  return result;
}

uint64_t sub_1CF6ABBB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_1CF6ABBFC()
{
  unint64_t result;

  result = qword_1ED8F6C78;
  if (!qword_1ED8F6C78)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for RemotePairingError, &type metadata for RemotePairingError);
    atomic_store(result, (unint64_t *)&qword_1ED8F6C78);
  }
  return result;
}

unint64_t sub_1CF6ABC3C()
{
  unint64_t result;

  result = qword_1ED8F6C70;
  if (!qword_1ED8F6C70)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for RemotePairingError, &type metadata for RemotePairingError);
    atomic_store(result, (unint64_t *)&qword_1ED8F6C70);
  }
  return result;
}

unint64_t sub_1CF6ABC84()
{
  unint64_t result;

  result = qword_1ED8F7F08;
  if (!qword_1ED8F7F08)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for RemotePairingErrorCodingWrapper, &type metadata for RemotePairingErrorCodingWrapper);
    atomic_store(result, (unint64_t *)&qword_1ED8F7F08);
  }
  return result;
}

unint64_t sub_1CF6ABCC4()
{
  unint64_t result;

  result = qword_1ED8F7F00;
  if (!qword_1ED8F7F00)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for RemotePairingErrorCodingWrapper, &type metadata for RemotePairingErrorCodingWrapper);
    atomic_store(result, (unint64_t *)&qword_1ED8F7F00);
  }
  return result;
}

id sub_1CF6ABD00@<X0>(void **a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = v2;
  return v2;
}

_QWORD *initializeBufferWithCopyOfBuffer for RemotePairingErrorCodingWrapper(_QWORD *a1, id *a2)
{
  id v3;
  id v4;

  v3 = *a2;
  v4 = *a2;
  *a1 = v3;
  return a1;
}

void destroy for RemotePairingErrorCodingWrapper(id *a1)
{

}

void **assignWithCopy for RemotePairingErrorCodingWrapper(void **a1, id *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = *a2;
  v4 = *a2;
  v5 = *a1;
  *a1 = v3;

  return a1;
}

void **assignWithTake for RemotePairingErrorCodingWrapper(void **a1, void **a2)
{
  void *v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for RemotePairingErrorCodingWrapper(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RemotePairingErrorCodingWrapper(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemotePairingErrorCodingWrapper()
{
  return &type metadata for RemotePairingErrorCodingWrapper;
}

unint64_t sub_1CF6ABE3C()
{
  unint64_t result;

  result = qword_1EFBA1AC0;
  if (!qword_1EFBA1AC0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for RemotePairingError, &type metadata for RemotePairingError);
    atomic_store(result, (unint64_t *)&qword_1EFBA1AC0);
  }
  return result;
}

unint64_t sub_1CF6ABE78()
{
  unint64_t result;

  result = qword_1EFBA1AC8;
  if (!qword_1EFBA1AC8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for RemotePairingError, &type metadata for RemotePairingError);
    atomic_store(result, (unint64_t *)&qword_1EFBA1AC8);
  }
  return result;
}

unint64_t sub_1CF6ABEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1CF73F7EC();
  sub_1CF73EF34();
  v4 = sub_1CF73F810();
  return sub_1CF6ABF60(a1, a2, v4);
}

uint64_t sub_1CF6ABF18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F79F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CF6ABF60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1CF73F690() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1CF73F690() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1CF73F690() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

unint64_t OUTLINED_FUNCTION_5_4()
{
  return sub_1CF692E68();
}

void __swiftcall IPv4Address.copy_sockaddr_in()(sockaddr_in *__return_ptr retstr)
{
  sub_1CF73E97C();
  __asm { BR              X10 }
}

uint64_t sub_1CF6AC0F8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_8();
  return (v0 << 32) | 0x210;
}

uint64_t sub_1CF6AC1B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unsigned int *v5;

  v2 = sub_1CF73E430();
  if (v2)
  {
    v3 = v2;
    result = sub_1CF73E454();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v5 = (unsigned int *)(v3 + a1 - result);
  }
  else
  {
    v5 = 0;
  }
  result = sub_1CF73E448();
  if (v5)
    return *v5;
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_1CF6AC220(uint64_t a1)
{
  unint64_t result;

  result = sub_1CF6AC244();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1CF6AC244()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBA1AD0;
  if (!qword_1EFBA1AD0)
  {
    v1 = sub_1CF73E85C();
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0D4D210], v1);
    atomic_store(result, (unint64_t *)&qword_1EFBA1AD0);
  }
  return result;
}

uint64_t XPCConnection.send<A, B>(request:queue:handler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD v8[4];

  v8[3] = a6;
  v8[1] = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8[2] = (char *)v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF6A38B4();
  return sub_1CF73E700();
}

uint64_t sub_1CF6AC458()
{
  sub_1CF6AC55C();
  return sub_1CF73F864();
}

uint64_t sub_1CF6AC480()
{
  sub_1CF6AC55C();
  return sub_1CF73F870();
}

uint64_t EmptyResponse.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EE8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_13();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6AC55C();
  sub_1CF73F858();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
}

unint64_t sub_1CF6AC55C()
{
  unint64_t result;

  result = qword_1ED8F7DA8;
  if (!qword_1ED8F7DA8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7431F8, &type metadata for EmptyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DA8);
  }
  return result;
}

uint64_t EmptyResponse.init(from:)(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t sub_1CF6AC5BC()
{
  return sub_1CF6AC7A4();
}

uint64_t sub_1CF6AC5C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CF6AC5FC + 4 * byte_1CF742CC0[a1]))(0x73736563637573, 0xE700000000000000);
}

uint64_t sub_1CF6AC5FC()
{
  return 0x6572756C696166;
}

uint64_t sub_1CF6AC610()
{
  return 0x676E656C6C616863;
}

unint64_t sub_1CF6AC62C()
{
  return 0xD000000000000013;
}

uint64_t sub_1CF6AC648(uint64_t a1)
{
  return EmptyResponse.init(from:)(a1);
}

uint64_t sub_1CF6AC65C(_QWORD *a1)
{
  return EmptyResponse.encode(to:)(a1);
}

void sub_1CF6AC670(char *a1)
{
  sub_1CF6B399C(*a1);
}

void sub_1CF6AC67C()
{
  sub_1CF6B3CFC();
}

void sub_1CF6AC684(uint64_t a1)
{
  char *v1;

  sub_1CF6B4138(a1, *v1);
}

void sub_1CF6AC68C()
{
  sub_1CF6B42F4();
}

uint64_t sub_1CF6AC694@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6AC7A4();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6AC6C8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CF6AC5C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CF6AC6F0()
{
  sub_1CF6AE104();
  return sub_1CF73F018();
}

uint64_t sub_1CF6AC74C()
{
  sub_1CF6AE104();
  return sub_1CF73F000();
}

uint64_t sub_1CF6AC798()
{
  return sub_1CF6AC7A4();
}

uint64_t sub_1CF6AC7A4()
{
  unint64_t v0;

  v0 = sub_1CF73F498();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1CF6AC7E8()
{
  return sub_1CF6AC7A4();
}

uint64_t sub_1CF6AC804()
{
  return 4;
}

uint64_t sub_1CF6AC80C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4_4 + 4 * byte_1CF742CC4[a1]))(7823730, 0xE300000000000000);
}

unint64_t sub_1CF6AC83C()
{
  return OUTLINED_FUNCTION_5_5();
}

uint64_t sub_1CF6AC848()
{
  return OUTLINED_FUNCTION_11_2();
}

uint64_t sub_1CF6AC858(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4_4_0 + 4
                                                                                                 * byte_1CF742CC8[a1]))(7823730, 0xE300000000000000);
}

unint64_t sub_1CF6AC888()
{
  return OUTLINED_FUNCTION_5_5();
}

uint64_t sub_1CF6AC894()
{
  return OUTLINED_FUNCTION_11_2();
}

void sub_1CF6AC8A4(char *a1)
{
  sub_1CF6B3AC0(*a1);
}

void sub_1CF6AC8B0()
{
  sub_1CF6B3D08();
}

void sub_1CF6AC8B8(uint64_t a1)
{
  char *v1;

  sub_1CF6B41C4(a1, *v1);
}

void sub_1CF6AC8C0()
{
  sub_1CF6B42E8();
}

uint64_t sub_1CF6AC8C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6AC7A4();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6AC8FC@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CF6AC80C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CF6AC924()
{
  unsigned __int8 *v0;

  return sub_1CF6AC858(*v0);
}

uint64_t sub_1CF6AC92C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6AC7E8();
  *a1 = result;
  return result;
}

void sub_1CF6AC950(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1CF6AC95C()
{
  sub_1CF6ACBC8();
  return sub_1CF73F864();
}

uint64_t sub_1CF6AC984()
{
  sub_1CF6ACBC8();
  return sub_1CF73F870();
}

void PairingOutcome.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1AD8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_28();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6ACBC8();
  sub_1CF73F840();
  if (!v1)
  {
    sub_1CF6ACC04();
    OUTLINED_FUNCTION_14_4();
    sub_1CF73F528();
    __asm { BR              X10 }
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1CF6ACBC8()
{
  unint64_t result;

  result = qword_1EFBA1AE0;
  if (!qword_1EFBA1AE0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7431A8, &unk_1E8C9A2F8);
    atomic_store(result, (unint64_t *)&qword_1EFBA1AE0);
  }
  return result;
}

unint64_t sub_1CF6ACC04()
{
  unint64_t result;

  result = qword_1EFBA1AE8;
  if (!qword_1EFBA1AE8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743180, &unk_1E8C9A268);
    atomic_store(result, (unint64_t *)&qword_1EFBA1AE8);
  }
  return result;
}

void PairingOutcome.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  id v8;
  uint64_t v9;
  void *v10;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1AF8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_99();
  v9 = *(_QWORD *)(v1 + 8);
  v10 = *(void **)v1;
  v6 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6ACBC8();
  sub_1CF73F858();
  v7 = v6 >> 6;
  sub_1CF6ACE54();
  OUTLINED_FUNCTION_12_3();
  sub_1CF73F5F4();
  if (!v2)
  {
    if (!v7)
    {
      v8 = v10;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
      sub_1CF6ACE90(&qword_1EFBA1B08, &qword_1EFBA1AF8);
      sub_1CF6A38B4();
      OUTLINED_FUNCTION_12_3();
      sub_1CF73F6E4();
      OUTLINED_FUNCTION_3_5(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
      sub_1CF6ACEC8(v10, v9, v6);
      goto LABEL_3;
    }
    if (v7 == 1)
    {
      OUTLINED_FUNCTION_12_3();
      sub_1CF73F5D0();
      OUTLINED_FUNCTION_12_3();
      sub_1CF73F5A0();
    }
  }
  OUTLINED_FUNCTION_3_5(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
LABEL_3:
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1CF6ACE54()
{
  unint64_t result;

  result = qword_1EFBA1B00;
  if (!qword_1EFBA1B00)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743158, &unk_1E8C9A268);
    atomic_store(result, (unint64_t *)&qword_1EFBA1B00);
  }
  return result;
}

uint64_t sub_1CF6ACE90(uint64_t *a1, uint64_t *a2)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_15_2();
  }
  return result;
}

void sub_1CF6ACEC8(id a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 0x3Fu)

}

void sub_1CF6ACEDC(_QWORD *a1)
{
  PairingOutcome.init(from:)(a1);
}

void sub_1CF6ACEF0(_QWORD *a1)
{
  PairingOutcome.encode(to:)(a1);
}

uint64_t RSDDeviceInfo.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR___RPRSDDeviceInfo_Internal_name);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RSDDeviceInfo.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR___RPRSDDeviceInfo_Internal_uuid;
  v4 = OUTLINED_FUNCTION_27();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

id RSDDeviceInfo.__allocating_init(name:uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return RSDDeviceInfo.init(name:uuid:)(a1, a2, a3);
}

id RSDDeviceInfo.init(name:uuid:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char *v3;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  objc_super v11;

  v5 = &v3[OBJC_IVAR___RPRSDDeviceInfo_Internal_name];
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  v6 = &v3[OBJC_IVAR___RPRSDDeviceInfo_Internal_uuid];
  v7 = OUTLINED_FUNCTION_27();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a3, v7);
  v11.receiver = v3;
  v11.super_class = (Class)OUTLINED_FUNCTION_10_5();
  v9 = objc_msgSendSuper2(&v11, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a3, v7);
  return v9;
}

uint64_t type metadata accessor for RSDDeviceInfo()
{
  uint64_t result;

  result = qword_1EFBA1B60;
  if (!qword_1EFBA1B60)
    return swift_getSingletonMetadata();
  return result;
}

id RSDDeviceInfo.__allocating_init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  uint64_t v9;

  v0 = OUTLINED_FUNCTION_27();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = _s7Mercury12RemoteDeviceC0b7PairingC0E18endpointIdentifierSSvg_0();
  v5 = v4;
  sub_1CF73E6C4();
  v6 = objc_allocWithZone((Class)OUTLINED_FUNCTION_10_5());
  v7 = RSDDeviceInfo.init(name:uuid:)(v3, v5, (uint64_t)v2);
  swift_release();
  return v7;
}

uint64_t sub_1CF6AD230()
{
  _BYTE v1[72];
  _BYTE __dst[72];

  sub_1CF73F81C();
  swift_bridgeObjectRetain();
  sub_1CF73EF34();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_27();
  sub_1CF6ADAFC(&qword_1EFBA1B18);
  sub_1CF73EE68();
  memcpy(__dst, v1, sizeof(__dst));
  return sub_1CF73F804();
}

uint64_t sub_1CF6AD2E0(uint64_t a1)
{
  uint64_t v1;
  BOOL v2;
  char v3;
  char *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_1CF691028(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_1CF68F37C((uint64_t)v6);
    goto LABEL_10;
  }
  OUTLINED_FUNCTION_10_5();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    v3 = 0;
    return v3 & 1;
  }
  v2 = *(_QWORD *)(v1 + OBJC_IVAR___RPRSDDeviceInfo_Internal_name) == *(_QWORD *)&v5[OBJC_IVAR___RPRSDDeviceInfo_Internal_name]
    && *(_QWORD *)(v1 + OBJC_IVAR___RPRSDDeviceInfo_Internal_name + 8) == *(_QWORD *)&v5[OBJC_IVAR___RPRSDDeviceInfo_Internal_name
                                                                                       + 8];
  if (!v2 && (sub_1CF73F690() & 1) == 0)
  {

    goto LABEL_10;
  }
  v3 = sub_1CF73E64C();

  return v3 & 1;
}

id RSDDeviceInfo.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void RSDDeviceInfo.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1CF6AD478(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CF6AD54C()
{
  sub_1CF73F7EC();
  sub_1CF73F7F8();
  return sub_1CF73F810();
}

uint64_t sub_1CF6AD590(char a1)
{
  if ((a1 & 1) != 0)
    return 1684632949;
  else
    return 1701667182;
}

uint64_t sub_1CF6AD5B0()
{
  return sub_1CF6AD54C();
}

uint64_t sub_1CF6AD5B8()
{
  sub_1CF73F7EC();
  sub_1CF73F7F8();
  return sub_1CF73F810();
}

uint64_t sub_1CF6AD5F8()
{
  char *v0;

  return sub_1CF6AD590(*v0);
}

uint64_t sub_1CF6AD600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6AD478(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF6AD624()
{
  sub_1CF6AD830();
  return sub_1CF73F864();
}

uint64_t sub_1CF6AD64C()
{
  sub_1CF6AD830();
  return sub_1CF73F870();
}

id RSDDeviceInfo.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)OUTLINED_FUNCTION_10_5();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CF6AD6F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1B20);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_99();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6AD830();
  sub_1CF73F858();
  sub_1CF73F5C4();
  if (!v1)
  {
    sub_1CF73E664();
    sub_1CF6ADAFC((uint64_t *)&qword_1EFBA13F8);
    sub_1CF73F5F4();
  }
  return OUTLINED_FUNCTION_3_5(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

unint64_t sub_1CF6AD830()
{
  unint64_t result;

  result = qword_1EFBA1B28;
  if (!qword_1EFBA1B28)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743108, &type metadata for RSDDeviceInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1B28);
  }
  return result;
}

void *RSDDeviceInfo.__allocating_init(from:)(_QWORD *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return RSDDeviceInfo.init(from:)(a1);
}

void *RSDDeviceInfo.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  objc_super v18;
  char v19;

  v4 = sub_1CF73E664();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_28();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1B30);
  v6 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_13();
  v13 = (uint64_t)a1;
  v7 = __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6AD830();
  v15 = v14;
  sub_1CF73F840();
  if (v16)
  {
    __swift_destroy_boxed_opaque_existential_0Tm(v13);

    type metadata accessor for RSDDeviceInfo();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v17 = v5;
    v8 = sub_1CF73F4F8();
    v10 = (uint64_t *)&v15[OBJC_IVAR___RPRSDDeviceInfo_Internal_name];
    *v10 = v8;
    v10[1] = v11;
    v19 = 1;
    sub_1CF6ADAFC((uint64_t *)&qword_1EFBA1410);
    sub_1CF73F528();
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v15[OBJC_IVAR___RPRSDDeviceInfo_Internal_uuid], v2, v4);

    v18.receiver = v15;
    v18.super_class = (Class)type metadata accessor for RSDDeviceInfo();
    v7 = objc_msgSendSuper2(&v18, sel_init);
    OUTLINED_FUNCTION_1_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    __swift_destroy_boxed_opaque_existential_0Tm(v13);
  }
  return v7;
}

uint64_t sub_1CF6ADAFC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (!result)
  {
    sub_1CF73E664();
    OUTLINED_FUNCTION_15_2();
  }
  return result;
}

unint64_t sub_1CF6ADB34(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1CF6A383C();
  result = sub_1CF6A3878();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

void *sub_1CF6ADB60@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  void *result;

  result = RSDDeviceInfo.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1CF6ADB88(_QWORD *a1)
{
  return sub_1CF6AD6F4(a1);
}

void type metadata accessor for EmptyResponse()
{
  OUTLINED_FUNCTION_31();
}

uint64_t sub_1CF6ADBB4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CF73E664();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for RSDDeviceInfo()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RSDDeviceInfo.__allocating_init(name:uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RSDDeviceInfo.encode(to:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of RSDDeviceInfo.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for RSDDeviceInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF6ADCD0 + 4 * byte_1CF742CD5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF6ADD04 + 4 * byte_1CF742CD0[v4]))();
}

uint64_t sub_1CF6ADD04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6ADD0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6ADD14);
  return result;
}

uint64_t sub_1CF6ADD20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6ADD28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF6ADD2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6ADD34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RSDDeviceInfo.CodingKeys()
{
  return &type metadata for RSDDeviceInfo.CodingKeys;
}

void _s14descr1E8C9A349O3RawOMa()
{
  OUTLINED_FUNCTION_31();
}

uint64_t getEnumTagSinglePayload for TunnelMessage.MessageType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_1CF6ADDEC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CF6ADE38 + 4 * byte_1CF742CDF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CF6ADE6C + 4 * byte_1CF742CDA[v4]))();
}

uint64_t sub_1CF6ADE6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6ADE74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6ADE7CLL);
  return result;
}

uint64_t sub_1CF6ADE88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6ADE90);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CF6ADE94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6ADE9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void _s14descr1E8C9A349O10CodingKeysOMa()
{
  OUTLINED_FUNCTION_31();
}

ValueMetadata *type metadata accessor for EmptyResponse.CodingKeys()
{
  return &type metadata for EmptyResponse.CodingKeys;
}

unint64_t sub_1CF6ADEC8()
{
  unint64_t result;

  result = qword_1EFBA1B70;
  if (!qword_1EFBA1B70)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742F88, &unk_1E8C9A2F8);
    atomic_store(result, (unint64_t *)&qword_1EFBA1B70);
  }
  return result;
}

unint64_t sub_1CF6ADF08()
{
  unint64_t result;

  result = qword_1EFBA1B78;
  if (!qword_1EFBA1B78)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743028, &unk_1E8C9A268);
    atomic_store(result, (unint64_t *)&qword_1EFBA1B78);
  }
  return result;
}

unint64_t sub_1CF6ADF48()
{
  unint64_t result;

  result = qword_1EFBA1B80;
  if (!qword_1EFBA1B80)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7430E0, &type metadata for RSDDeviceInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1B80);
  }
  return result;
}

unint64_t sub_1CF6ADF88()
{
  unint64_t result;

  result = qword_1EFBA1B88;
  if (!qword_1EFBA1B88)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743050, &type metadata for RSDDeviceInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1B88);
  }
  return result;
}

unint64_t sub_1CF6ADFC8()
{
  unint64_t result;

  result = qword_1EFBA1B90;
  if (!qword_1EFBA1B90)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743078, &type metadata for RSDDeviceInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1B90);
  }
  return result;
}

unint64_t sub_1CF6AE008()
{
  unint64_t result;

  result = qword_1EFBA1B98;
  if (!qword_1EFBA1B98)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742EC0, &unk_1E8C9A2F8);
    atomic_store(result, (unint64_t *)&qword_1EFBA1B98);
  }
  return result;
}

unint64_t sub_1CF6AE048()
{
  unint64_t result;

  result = qword_1EFBA1BA0;
  if (!qword_1EFBA1BA0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742EE8, &unk_1E8C9A2F8);
    atomic_store(result, (unint64_t *)&qword_1EFBA1BA0);
  }
  return result;
}

unint64_t sub_1CF6AE088()
{
  unint64_t result;

  result = qword_1ED8F7DB8;
  if (!qword_1ED8F7DB8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742E70, &type metadata for EmptyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DB8);
  }
  return result;
}

unint64_t sub_1CF6AE0C8()
{
  unint64_t result;

  result = qword_1ED8F7DB0;
  if (!qword_1ED8F7DB0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742E98, &type metadata for EmptyResponse.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DB0);
  }
  return result;
}

unint64_t sub_1CF6AE104()
{
  unint64_t result;

  result = qword_1EFBA1BA8;
  if (!qword_1EFBA1BA8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF742FB0, &unk_1E8C9A268);
    atomic_store(result, (unint64_t *)&qword_1EFBA1BA8);
  }
  return result;
}

unint64_t OUTLINED_FUNCTION_5_5()
{
  return 0xD000000000000014;
}

uint64_t sub_1CF6AE160()
{
  uint64_t result;

  sub_1CF6AA174(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA1BB0 = result;
  return result;
}

uint64_t PairingChallenge.lastAttemptIncorrect.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PairingChallenge.throttledBy.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t PairingChallenge.__allocating_init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char v13;
  uint64_t v14;

  v13 = a3 & 1;
  v14 = swift_allocObject();
  PairingChallenge.init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(a1, a2, v13, a4, a5, a6, a7);
  return v14;
}

uint64_t PairingChallenge.init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(char a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1BB8);
  swift_allocObject();
  v15 = sub_1CF6AE894(0);
  *(_QWORD *)(v7 + 64) = a7;
  *(_QWORD *)(v7 + 72) = v15;
  *(_BYTE *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_BYTE *)(v7 + 32) = a3 & 1;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a6;
  return v7;
}

uint64_t sub_1CF6AE30C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  char v7;
  uint64_t result;

  v5 = *(_QWORD *)(v2 + 72);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  os_unfair_lock_lock(v6);
  OUTLINED_FUNCTION_10();
  v7 = *(_BYTE *)(v5 + 24);
  *(_BYTE *)(v5 + 24) = 1;
  os_unfair_lock_unlock(v6);
  if ((v7 & 1) == 0)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(a1, a2);
  result = OUTLINED_FUNCTION_0_10();
  __break(1u);
  return result;
}

uint64_t sub_1CF6AE3C8()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  char v3;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  os_unfair_lock_lock(v2);
  OUTLINED_FUNCTION_10();
  v3 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(v1 + 24) = 1;
  os_unfair_lock_unlock(v2);
  if ((v3 & 1) == 0)
    return (*(uint64_t (**)(void))(v0 + 56))();
  result = OUTLINED_FUNCTION_0_10();
  __break(1u);
  return result;
}

uint64_t PairingChallenge.deinit()
{
  uint64_t v0;
  uint64_t v1;

  if ((sub_1CF6AE518() & 1) == 0)
  {
    sub_1CF73F0E4();
    if (qword_1EFBA08F0 != -1)
      swift_once();
    v1 = sub_1CF73E694();
    (*(void (**)(uint64_t))(v0 + 56))(v1);
  }
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1CF6AE518()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v1);
  swift_beginAccess();
  v2 = *(unsigned __int8 *)(v0 + 24);
  os_unfair_lock_unlock(v1);
  return v2;
}

void sub_1CF6AE568()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_3_6();
  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  OUTLINED_FUNCTION_10();
  sub_1CF6AEA08(v3, v0);
  os_unfair_lock_unlock(v2);
  OUTLINED_FUNCTION_5();
}

void sub_1CF6AE5B8()
{
  _QWORD *v0;
  _QWORD *v1;
  os_unfair_lock_s *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_10();
  v3 = (void *)v1[3];
  v4 = v1[4];
  v5 = v1[5];
  *v0 = v3;
  v0[1] = v4;
  v0[2] = v5;
  sub_1CF6AE9F4(v3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v2);
  OUTLINED_FUNCTION_5();
}

uint64_t PairingChallenge.__deallocating_deinit()
{
  PairingChallenge.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1CF6AE658()
{
  uint64_t v0;

  return *(unsigned __int8 *)(*(_QWORD *)(v0 + OBJC_IVAR___RPPairingChallenge__underlyingValue) + 16);
}

uint64_t sub_1CF6AE69C()
{
  uint64_t v0;

  if ((*(_BYTE *)(*(_QWORD *)(v0 + OBJC_IVAR___RPPairingChallenge__underlyingValue) + 32) & 1) != 0)
    return 0;
  else
    return sub_1CF73F078();
}

uint64_t sub_1CF6AE6D0(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_4_5();
  sub_1CF6AE30C(a1, a2);
  return swift_release();
}

uint64_t sub_1CF6AE768()
{
  OUTLINED_FUNCTION_4_5();
  sub_1CF6AE3C8();
  return swift_release();
}

id sub_1CF6AE7C8(uint64_t a1)
{
  char *v2;
  objc_super v4;

  v2 = (char *)objc_allocWithZone((Class)RPPairingChallenge);
  *(_QWORD *)&v2[OBJC_IVAR___RPPairingChallenge__underlyingValue] = a1;
  v4.receiver = v2;
  v4.super_class = (Class)RPPairingChallenge;
  swift_retain();
  return objc_msgSendSuper2(&v4, sel_init);
}

void __swiftcall RPPairingChallenge.init()(RPPairingChallenge *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void RPPairingChallenge.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1CF6AE894(char a1)
{
  uint64_t v1;
  _DWORD *v3;

  v3 = (_DWORD *)swift_slowAlloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = 0;
  *(_BYTE *)(v1 + 24) = a1;
  return v1;
}

_QWORD *sub_1CF6AE8CC(uint64_t a1)
{
  _QWORD *v1;
  _DWORD *v3;

  v3 = (_DWORD *)OUTLINED_FUNCTION_5_6();
  v1[2] = v3;
  *v3 = 0;
  sub_1CF6AE9B0(a1, (uint64_t)v1 + *(_QWORD *)(*v1 + 96));
  return v1;
}

_QWORD *sub_1CF6AE90C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _DWORD *v7;

  v7 = (_DWORD *)OUTLINED_FUNCTION_5_6();
  *v7 = 0;
  v3[2] = v7;
  v3[3] = a1;
  v3[4] = a2;
  v3[5] = a3;
  return v3;
}

uint64_t type metadata accessor for PairingChallenge()
{
  return objc_opt_self();
}

uint64_t method lookup function for PairingChallenge()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PairingChallenge.__allocating_init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 120))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of PairingChallenge.answer(withPIN:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of PairingChallenge.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t type metadata accessor for RPPairingChallenge(uint64_t a1)
{
  return sub_1CF6AA174(a1, (unint64_t *)&unk_1EFBA1CC0);
}

uint64_t sub_1CF6AE9B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s5StateVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1CF6AE9F4(id result)
{
  if ((char *)result - 1 >= (char *)2)
    return result;
  return result;
}

uint64_t sub_1CF6AEA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s5StateVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return swift_slowAlloc();
}

void sub_1CF6AEA58(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD v10[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1CF68E2E4((_OWORD *)a1, v10);
    sub_1CF6B0EC0(v10, a2);

  }
  else
  {
    OUTLINED_FUNCTION_36_2(a1);
    sub_1CF703978((uint64_t)a2, v3, v4, v5, v6, v7, v8, v9, *(uint64_t *)&v10[0], *((uint64_t *)&v10[0] + 1));

    OUTLINED_FUNCTION_36_2((uint64_t)v10);
  }
  OUTLINED_FUNCTION_5();
}

void sub_1CF6AEAC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];
  char v13;

  if (*(_QWORD *)(a1 + 24))
  {
    v5 = *(_OWORD *)(a1 + 16);
    v12[0] = *(_OWORD *)a1;
    v12[1] = v5;
    v13 = *(_BYTE *)(a1 + 32);
    sub_1CF6B0F2C((uint64_t)v12, a2, a3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CF693ED8(a1, &qword_1EFBA1CD8);
    sub_1CF703A50(a2, a3, v6, v7, v8, v9, v10, v11, *(uint64_t *)&v12[0], *((uint64_t *)&v12[0] + 1));
    swift_bridgeObjectRelease();
    sub_1CF693ED8((uint64_t)v12, &qword_1EFBA1CD8);
  }
}

void sub_1CF6AEB58()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  _OWORD v4[2];

  OUTLINED_FUNCTION_32_2();
  if (v3)
  {
    sub_1CF68E2E4(v2, v4);
    sub_1CF6B0FA8(v4, v1, v0);
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    OUTLINED_FUNCTION_14_5((uint64_t)v2);
    OUTLINED_FUNCTION_28_3();
    sub_1CF703B08();
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_14_5((uint64_t)v4);
  }
  OUTLINED_FUNCTION_5();
}

void sub_1CF6AEBC0()
{
  uint64_t v0;
  uint64_t v1;
  _OWORD *v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v13[3];

  OUTLINED_FUNCTION_32_2();
  if (v3)
  {
    v4 = v2[1];
    v13[0] = *v2;
    v13[1] = v4;
    v13[2] = v2[2];
    sub_1CF6B1118(v13, v1, v0);
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    OUTLINED_FUNCTION_14_5((uint64_t)v2);
    v5 = OUTLINED_FUNCTION_28_3();
    sub_1CF703D28(v5, v6, v7, v8, v9, v10, v11, v12, *(uint64_t *)&v13[0], *((uint64_t *)&v13[0] + 1));
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_14_5((uint64_t)v13);
  }
  OUTLINED_FUNCTION_44();
}

void sub_1CF6AEC30()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13[2];

  OUTLINED_FUNCTION_32_2();
  if (v3)
  {
    sub_1CF68C850(v2, (uint64_t)v13);
    sub_1CF6B1194(v13, v1, v0);
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    OUTLINED_FUNCTION_14_5((uint64_t)v2);
    v4 = OUTLINED_FUNCTION_28_3();
    sub_1CF703E04(v4, v5, v6, v7, v8, v9, v10, v11, v12, *(uint64_t *)&v13[0]);
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_14_5((uint64_t)v13);
  }
  OUTLINED_FUNCTION_44();
}

id DeviceKeyValueStore.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DeviceKeyValueStore.init()()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_super v3;

  v1 = OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs;
  v2 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F69B8);
  *(_QWORD *)&v0[v1] = sub_1CF73EE44();

  v3.receiver = v2;
  v3.super_class = (Class)type metadata accessor for DeviceKeyValueStore();
  objc_msgSendSuper2(&v3, sel_init);
  OUTLINED_FUNCTION_84();
}

uint64_t type metadata accessor for DeviceKeyValueStore()
{
  return objc_opt_self();
}

void DeviceKeyValueStore.__allocating_init(copyingValuesFrom:)(char *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  DeviceKeyValueStore.init(copyingValuesFrom:)(a1);
  OUTLINED_FUNCTION_1();
}

id DeviceKeyValueStore.init(copyingValuesFrom:)(char *a1)
{
  char *v1;
  uint64_t *v3;
  char *v4;
  uint64_t *v5;
  uint64_t v6;
  id v7;
  objc_super v9;

  v3 = (uint64_t *)&v1[OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs];
  v4 = v1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F69B8);
  *v3 = sub_1CF73EE44();
  v5 = (uint64_t *)&a1[OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs];
  OUTLINED_FUNCTION_2_0();
  v6 = *v5;
  OUTLINED_FUNCTION_10();
  *v3 = v6;
  OUTLINED_FUNCTION_26_2();

  OUTLINED_FUNCTION_40_0();
  v9.receiver = v4;
  v9.super_class = (Class)type metadata accessor for DeviceKeyValueStore();
  v7 = objc_msgSendSuper2(&v9, sel_init);

  return v7;
}

id static DeviceKeyValueStore.keyValueStoreContainingStandardKeys()()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char is_darwinos;
  _BYTE v7[24];
  uint64_t v8;

  v0 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DeviceKeyValueStore()), sel_init);
  OUTLINED_FUNCTION_1_7(0xD000000000000016, 0x80000001CF7512F0, 0, 0, 0x614E656369766544, 0xEA0000000000656DLL);
  v1 = OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_0_11(v1 & 0xFFFFFFFFFFFFLL | 0x5474000000000000, v2);
  OUTLINED_FUNCTION_1_7(0x536C65646F4D5748, 0xEA00000000007274, 0, 0, 0x6572617764726148, 0xED00006C65646F4DLL);
  v3 = OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_0_11(v3 & 0xFFFFFFFFFFFFLL | 0x4E74000000000000, 0xEB00000000656D61);
  v4 = OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_0_11(v4 & 0xFFFFFFFFFFFFLL | 0x5674000000000000, 0xEE006E6F69737265);
  OUTLINED_FUNCTION_0_11(0xD000000000000021, 0x80000001CF751310);
  OUTLINED_FUNCTION_0_11(0x726556646C697542, 0xEC0000006E6F6973);
  OUTLINED_FUNCTION_0_11(0xD000000000000018, 0x80000001CF751340);
  OUTLINED_FUNCTION_0_11(0x6C43656369766544, 0xEB00000000737361);
  OUTLINED_FUNCTION_1_7(0x6E6974656B72616DLL, 0xEE00656D616E2D67, 0, 0, 0xD000000000000013, 0x80000001CF751360);
  OUTLINED_FUNCTION_0_11(0x6F43656369766544, 0xEB00000000726F6CLL);
  OUTLINED_FUNCTION_0_11(0xD000000000000014, 0x80000001CF751380);
  OUTLINED_FUNCTION_0_11(0x6968637241555043, 0xEF65727574636574);
  sub_1CF6B00EC(0xD000000000000017, 0x80000001CF7513A0, 0, 0, 0, 0, 0);
  sub_1CF6B0268(0x6F632D6863746177, 0xEF6E6F696E61706DLL, 0xD000000000000018, 0x80000001CF7513C0, 0xD000000000000018, 0x80000001CF7513E0, 0);
  OUTLINED_FUNCTION_0_11(0xD00000000000001ALL, 0x80000001CF751400);
  OUTLINED_FUNCTION_13_5(0xD000000000000016, 0x80000001CF751420);
  OUTLINED_FUNCTION_13_5(0x6175747269567349, 0xEF6563697665446CLL);
  OUTLINED_FUNCTION_4_6(0x6544657571696E55, 0xEE00444965636976);
  sub_1CF6B03C0(0x6843657571696E55, 0xEC00000044497069, 0, 0, 0, 0, 1);
  OUTLINED_FUNCTION_4_6(0x7264644169666957, 0xEB00000000737365);
  OUTLINED_FUNCTION_4_6(0x754E6C6169726553, 0xEC0000007265626DLL);
  is_darwinos = os_variant_is_darwinos();
  v8 = MEMORY[0x1E0DEAFA0];
  v7[0] = is_darwinos;
  sub_1CF6AF3D8(1280070990, 0xE400000000000000, 0x6E69777261447349, 0xEA0000000000534FLL, (uint64_t)v7, 0);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v7);
  return v0;
}

void sub_1CF6AF26C(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t *))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v4 = sub_1CF73F474();
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9E0];
  }
  v6 = v4;
  v5 = OUTLINED_FUNCTION_8_2();
  a3(v5, 1, &v6);
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_84();
}

uint64_t sub_1CF6AF354()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_8_2();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F69B8);
  v0 = sub_1CF73EE38();
  OUTLINED_FUNCTION_3_7();
  return v0;
}

uint64_t sub_1CF6AF3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  _QWORD **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  char v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  uint64_t result;
  uint64_t v25;
  _QWORD *v26;
  _BYTE v27[40];

  if (a2)
    v11 = a1;
  else
    v11 = 1280070990;
  if (a2)
    v12 = a2;
  else
    v12 = 0xE400000000000000;
  v13 = (_QWORD **)(v6 + OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_8_2();
  OUTLINED_FUNCTION_6_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_29_2(v11, v12);
  v15 = v14;
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  swift_bridgeObjectRelease();
  if (!v15)
  {
    OUTLINED_FUNCTION_8_2();
    v16 = sub_1CF73EE44();
    OUTLINED_FUNCTION_10();
    sub_1CF6B108C(v16, v11, v12, (uint64_t *)&unk_1ED8F69D0);
    swift_endAccess();
    OUTLINED_FUNCTION_3_7();
  }
  sub_1CF68F1EC(a5, (uint64_t)v27);
  v27[32] = a6 & 1;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_8_2();
  OUTLINED_FUNCTION_54_0();
  swift_isUniquelyReferenced_nonNull_native();
  v26 = *v13;
  v17 = v26;
  *v13 = (_QWORD *)0x8000000000000000;
  OUTLINED_FUNCTION_8_2();
  v18 = OUTLINED_FUNCTION_43_2();
  if (__OFADD__(v17[2], (v19 & 1) == 0))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v20 = v18;
  v21 = v19;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F69D0);
  if ((sub_1CF73F420() & 1) == 0)
  {
LABEL_13:
    if ((v21 & 1) != 0)
    {
      v25 = *(_QWORD *)(v26[7] + 8 * v20);
      sub_1CF6AEAC0((uint64_t)v27, a3, a4);
      sub_1CF6B2C88(&v25, 1, &v26, v20, v11, v12, (uint64_t *)&unk_1ED8F69B8);
      OUTLINED_FUNCTION_3_7();
      OUTLINED_FUNCTION_11_3();
      *v13 = v26;
      OUTLINED_FUNCTION_3_7();
      swift_endAccess();
      return OUTLINED_FUNCTION_3_7();
    }
    goto LABEL_16;
  }
  v22 = OUTLINED_FUNCTION_43_2();
  if ((v21 & 1) == (v23 & 1))
  {
    v20 = v22;
    goto LABEL_13;
  }
LABEL_17:
  result = sub_1CF73F6FC();
  __break(1u);
  return result;
}

double sub_1CF6AF62C@<D0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  double result;

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1CF6B0D94(), (v5 & 1) != 0))
  {
    sub_1CF6B2C48(*(_QWORD *)(a1 + 56) + 40 * v4, a2);
  }
  else
  {
    *(_BYTE *)(a2 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

void sub_1CF6AF684(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  char v6;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_1CF68E0D0(a1), (v6 & 1) != 0))
  {
    OUTLINED_FUNCTION_20_3(*(_QWORD *)(a2 + 56) + 32 * v5, a3);
  }
  else
  {
    OUTLINED_FUNCTION_44_2();
    OUTLINED_FUNCTION_1();
  }
}

void sub_1CF6AF6C8(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1CF6B0E48(a1);
    if ((v2 & 1) != 0)
      swift_retain();
  }
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6AF714(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a1 + 16) && (v4 = OUTLINED_FUNCTION_42_2(), (v5 & 1) != 0))
  {
    OUTLINED_FUNCTION_20_3(*(_QWORD *)(v2 + 56) + 32 * v4, a2);
  }
  else
  {
    OUTLINED_FUNCTION_44_2();
    OUTLINED_FUNCTION_1();
  }
}

void sub_1CF6AF758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_42_2();
    if ((v3 & 1) != 0)
      swift_bridgeObjectRetain();
  }
  OUTLINED_FUNCTION_1();
}

void sub_1CF6AF790(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  unint64_t v4;
  char v5;

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1CF6B0E78(), (v5 & 1) != 0))
  {
    sub_1CF6B3120(*(_QWORD *)(a1 + 56) + 48 * v4, (uint64_t)a2);
  }
  else
  {
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
    OUTLINED_FUNCTION_1();
  }
}

void sub_1CF6AF7E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;

  if (*(_QWORD *)(a3 + 16))
  {
    OUTLINED_FUNCTION_42_2();
    if ((v3 & 1) != 0)
      OUTLINED_FUNCTION_6_3();
  }
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6AF828()
{
  _OWORD *v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD v29[4];
  uint64_t v30;

  OUTLINED_FUNCTION_22_2();
  v6 = v5 | 0x4C4C0000u;
  if (v2)
    v7 = v6;
  else
    v7 = v3;
  if (v2)
    v8 = 0xE400000000000000;
  else
    v8 = v4;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_29_2(v7, v8);
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_11_3();
  if (!v1)
    goto LABEL_11;
  v9 = OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_23_2(v9, v10, v11, v12, v13, v14);
  v15 = OUTLINED_FUNCTION_40_0();
  if (!v30)
  {
    OUTLINED_FUNCTION_27_3(v15, &qword_1EFBA1CD8, v16, v17, v18, v19, v20, v21);
    OUTLINED_FUNCTION_19();
LABEL_11:
    OUTLINED_FUNCTION_44_2();
    goto LABEL_12;
  }
  v22 = OUTLINED_FUNCTION_45_2(v15);
  OUTLINED_FUNCTION_27_3(v22, &qword_1EFBA1CD8, v23, v24, v25, v26, v27, v28);
  OUTLINED_FUNCTION_19();
  sub_1CF68E2E4(v29, v0);
LABEL_12:
  OUTLINED_FUNCTION_16_3();
}

uint64_t sub_1CF6AF8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  char v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD v42[3];
  _BYTE v43[40];
  _OWORD v44[3];
  _BYTE v45[40];
  __int128 v46;
  _OWORD v47[2];
  char v48;
  __int128 v49;
  _OWORD v50[2];
  char v51;
  _QWORD v52[7];

  if (a2)
    v2 = a1;
  else
    v2 = 1280070990;
  if (a2)
    v3 = a2;
  else
    v3 = 0xE400000000000000;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_8_2();
  OUTLINED_FUNCTION_29_2(v2, v3);
  v5 = v4;
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_11_3();
  if (v5)
  {
    sub_1CF6B3160(v5, v52);
    v40 = v52[0];
    v41 = v52[3];
    v6 = v52[4];
    v38 = v52[1];
    v39 = (unint64_t)(v52[2] + 64) >> 6;
    OUTLINED_FUNCTION_8_2();
    v7 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    if (!v6)
      goto LABEL_10;
LABEL_9:
    v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    v9 = v8 | (v41 << 6);
    while (1)
    {
      v24 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * v9);
      v25 = *v24;
      v26 = v24[1];
      sub_1CF6B2C48(*(_QWORD *)(v40 + 56) + 40 * v9, (uint64_t)v50);
      *(_QWORD *)&v49 = v25;
      *((_QWORD *)&v49 + 1) = v26;
      v46 = v49;
      v47[0] = v50[0];
      v47[1] = v50[1];
      v48 = v51;
      v27 = v49;
      v44[2] = v49;
      sub_1CF6B2C48((uint64_t)v47, (uint64_t)v45);
      v42[2] = v27;
      sub_1CF6B2C48((uint64_t)v47, (uint64_t)v43);
      sub_1CF68F1EC((uint64_t)v43, (uint64_t)v44);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1CF6B2D4C((uint64_t)v43);
      sub_1CF68E2E4(v44, v42);
      swift_isUniquelyReferenced_nonNull_native();
      v28 = OUTLINED_FUNCTION_50_0();
      if (__OFADD__(v7[2], (v29 & 1) == 0))
        break;
      v30 = v28;
      v31 = v29;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1CE0);
      if ((sub_1CF73F420() & 1) != 0)
      {
        v32 = OUTLINED_FUNCTION_50_0();
        if ((v31 & 1) != (v33 & 1))
          goto LABEL_47;
        v30 = v32;
      }
      if ((v31 & 1) != 0)
      {
        v34 = (_OWORD *)(v7[7] + 32 * v30);
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v34);
        sub_1CF68E2E4(v42, v34);
      }
      else
      {
        v7[(v30 >> 6) + 8] |= 1 << v30;
        *(_OWORD *)(v7[6] + 16 * v30) = v27;
        sub_1CF68E2E4(v42, (_OWORD *)(v7[7] + 32 * v30));
        v35 = v7[2];
        v12 = __OFADD__(v35, 1);
        v36 = v35 + 1;
        if (v12)
          goto LABEL_45;
        v7[2] = v36;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1CF6B2D4C((uint64_t)v45);
      sub_1CF693ED8((uint64_t)&v46, (uint64_t *)&unk_1ED8F79D8);
      if (v6)
        goto LABEL_9;
LABEL_10:
      v10 = v41 + 1;
      if (__OFADD__(v41, 1))
        goto LABEL_46;
      if (v10 >= v39)
        goto LABEL_41;
      if (!*(_QWORD *)(v38 + 8 * v10))
      {
        OUTLINED_FUNCTION_53_2();
        if (v11 == v12)
          goto LABEL_41;
        OUTLINED_FUNCTION_52_1();
        if (!v13)
        {
          OUTLINED_FUNCTION_53_2();
          if (v11 == v12)
            goto LABEL_41;
          OUTLINED_FUNCTION_52_1();
          if (!v14)
          {
            OUTLINED_FUNCTION_53_2();
            if (v11 == v12)
              goto LABEL_41;
            OUTLINED_FUNCTION_52_1();
            if (!v15)
            {
              OUTLINED_FUNCTION_53_2();
              if (v11 == v12)
                goto LABEL_41;
              OUTLINED_FUNCTION_52_1();
              if (!v17)
              {
                if (v16 + 5 >= v39)
                  goto LABEL_41;
                if (!*(_QWORD *)(v38 + 8 * (v16 + 5)))
                {
                  v18 = v41 + 7;
                  while (v18 < v39)
                  {
                    if (*(_QWORD *)(v38 + 8 * v18++))
                      goto LABEL_30;
                  }
LABEL_41:
                  swift_release();
                  swift_bridgeObjectRelease();
                  return (uint64_t)v7;
                }
              }
            }
          }
        }
      }
LABEL_30:
      OUTLINED_FUNCTION_34_2();
      v6 = v21 & v20;
      v9 = v23 + (v22 << 6);
      v41 = v22;
    }
    __break(1u);
LABEL_45:
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    result = sub_1CF73F6FC();
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

void sub_1CF6AFD78()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _BYTE v30[64];
  uint64_t v31;

  OUTLINED_FUNCTION_22_2();
  v6 = v5 | 0x4C4C0000u;
  if (v2)
    v7 = v6;
  else
    v7 = v3;
  if (v2)
    v8 = 0xE400000000000000;
  else
    v8 = v4;
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_29_2(v7, v8);
  OUTLINED_FUNCTION_51_1();
  OUTLINED_FUNCTION_11_3();
  if (!v1)
    goto LABEL_11;
  v9 = OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_23_2(v9, v10, v11, v12, v13, v14);
  v15 = OUTLINED_FUNCTION_40_0();
  if (!v31)
  {
    OUTLINED_FUNCTION_27_3(v15, &qword_1EFBA1CD8, v16, v17, v18, v19, v20, v21);
    OUTLINED_FUNCTION_19();
LABEL_11:
    OUTLINED_FUNCTION_44_2();
    goto LABEL_12;
  }
  v22 = OUTLINED_FUNCTION_45_2(v15);
  OUTLINED_FUNCTION_27_3(v22, &qword_1EFBA1CD8, v23, v24, v25, v26, v27, v28);
  OUTLINED_FUNCTION_19();
  v29 = v30[32];
  sub_1CF6B2D4C((uint64_t)v30);
  *(_QWORD *)(v0 + 24) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)v0 = v29;
LABEL_12:
  OUTLINED_FUNCTION_16_3();
}

id sub_1CF6AFE54(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  _QWORD v17[3];
  uint64_t v18;

  if (a3)
    sub_1CF73EED4();
  sub_1CF73EED4();
  v7 = a1;
  v8 = OUTLINED_FUNCTION_18_2();
  a5(v8);

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_11();
  v9 = v18;
  if (!v18)
    return 0;
  v10 = __swift_project_boxed_opaque_existential_0Tm(v17, v18);
  v11 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v10);
  (*(void (**)(char *))(v11 + 16))((char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_28_3();
  v13 = (void *)sub_1CF73F684();
  v14 = OUTLINED_FUNCTION_28_3();
  v15(v14);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v17);
  return v13;
}

uint64_t sub_1CF6AFF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v13 = (void *)sub_1CF73EEB0();
  v14 = MGCopyAnswer();

  v26 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C78);
  v15 = MEMORY[0x1E0DEA968];
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v21 = a5;
    v17 = v23;
    v18 = v24;
    if (a4)
    {
      v19 = a4;
    }
    else
    {
      a3 = 1280070990;
      v19 = 0xE400000000000000;
    }
    v25 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = a7 & 1;
    sub_1CF6AF3D8(a3, v19, a1, a2, (uint64_t)&v23, v20);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v23);
    if (a6)
    {
      v25 = v15;
      v23 = v17;
      v24 = v18;
      swift_bridgeObjectRetain();
      sub_1CF6AF3D8(a3, v19, v21, a6, (uint64_t)&v23, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v23);
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1CF6B00EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v13 = (void *)sub_1CF73EEB0();
  v14 = MGCopyAnswer();

  v22[0] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C78);
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A20);
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v17 = v24;
    if (a4)
      v18 = a3;
    else
      v18 = 1280070990;
    if (a4)
      v19 = a4;
    else
      v19 = 0xE400000000000000;
    v23 = v15;
    v22[0] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20 = a7 & 1;
    sub_1CF6AF3D8(v18, v19, a1, a2, (uint64_t)v22, v20);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
    if (a6)
    {
      v23 = v15;
      v22[0] = v17;
      swift_bridgeObjectRetain();
      sub_1CF6AF3D8(v18, v19, a5, a6, (uint64_t)v22, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v22);
    }
    else
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1CF6B0268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  _QWORD v23[3];
  uint64_t v24;
  char v25;

  v14 = (void *)sub_1CF73EEB0();
  v15 = MGCopyAnswer();

  v23[0] = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C78);
  v16 = MEMORY[0x1E0DEAFA0];
  result = swift_dynamicCast();
  if ((_DWORD)result)
  {
    v22 = a5;
    v18 = v25 & 1;
    if (a4)
      v19 = a3;
    else
      v19 = 1280070990;
    if (a4)
      v20 = a4;
    else
      v20 = 0xE400000000000000;
    v24 = v16;
    LOBYTE(v23[0]) = v25 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = a7 & 1;
    sub_1CF6AF3D8(v19, v20, a1, a2, (uint64_t)v23, v21);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    if (a6)
    {
      v24 = v16;
      LOBYTE(v23[0]) = v18;
      sub_1CF6AF3D8(v19, v20, v22, a6, (uint64_t)v23, v21);
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v23);
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void sub_1CF6B03C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  char v21;
  id v22;
  _QWORD v24[3];
  uint64_t v25;

  v13 = (void *)sub_1CF73EEB0();
  MGCopyAnswer();

  objc_opt_self();
  v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    v15 = (void *)v14;
    if (a4)
      v16 = a3;
    else
      v16 = 1280070990;
    if (a4)
      v17 = a4;
    else
      v17 = 0xE400000000000000;
    sub_1CF6B3208(0, (unint64_t *)&unk_1ED8F7A50);
    v19 = v18;
    v25 = v18;
    v24[0] = v15;
    v20 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = a7 & 1;
    sub_1CF6AF3D8(v16, v17, a1, a2, (uint64_t)v24, v21);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
    if (a6)
    {
      v25 = v19;
      v24[0] = v20;
      v22 = v20;
      sub_1CF6AF3D8(v16, v17, a5, a6, (uint64_t)v24, v21);

      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v24);
    }
    else
    {
      swift_bridgeObjectRelease();

    }
  }
  else
  {
    swift_unknownObjectRelease();
  }
}

void *sub_1CF6B0550(char a1)
{
  void *v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v7[2];

  v7[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1CF6B0670(a1);
  v1 = (void *)objc_opt_self();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F79D0);
  v2 = (void *)sub_1CF73EE14();
  swift_bridgeObjectRelease();
  v7[0] = 0;
  v3 = objc_msgSend(v1, sel_dataWithPropertyList_format_options_error_, v2, 200, 0, v7);

  v4 = v7[0];
  if (v3)
  {
    v5 = (void *)sub_1CF73E5A4();

  }
  else
  {
    v5 = v4;
    sub_1CF73E490();

    swift_willThrow();
  }
  return v5;
}

void sub_1CF6B0670(char a1)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  int64_t v26;
  int64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 *v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  _QWORD v73[2];
  _BYTE v74[40];
  _QWORD v75[5];
  _QWORD v76[6];

  v3 = (uint64_t *)(v1 + OBJC_IVAR___RPDeviceKeyValueStore_Internal_kvs);
  OUTLINED_FUNCTION_2_0();
  v4 = *v3;
  sub_1CF6B3160(v4, v75);
  v57 = v75[0];
  v58 = v75[3];
  v5 = v75[4];
  v55 = v75[1];
  v56 = (unint64_t)(v75[2] + 64) >> 6;
  v66 = &v71;
  v54[1] = v4;
  swift_bridgeObjectRetain_n();
  v6 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v64 = v6;
    if (!v5)
      break;
    v61 = (v5 - 1) & v5;
    v7 = __clz(__rbit64(v5)) | (v58 << 6);
LABEL_19:
    v63 = v54;
    v15 = *(_QWORD *)(v57 + 56);
    v16 = (uint64_t *)(*(_QWORD *)(v57 + 48) + 16 * v7);
    v17 = v16[1];
    v59 = *v16;
    v18 = *(_QWORD *)(v15 + 8 * v7);
    sub_1CF6B3160(v18, v76);
    v20 = v76[0];
    v19 = v76[1];
    v21 = v76[3];
    v22 = v76[4];
    v23 = (unint64_t)(v76[2] + 64) >> 6;
    v62 = v18;
    swift_bridgeObjectRetain_n();
    v60 = v17;
    OUTLINED_FUNCTION_6_3();
    v65 = MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if (v22)
      {
        v24 = __clz(__rbit64(v22));
        v22 &= v22 - 1;
        v25 = v24 | (v21 << 6);
        goto LABEL_37;
      }
      v26 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_56;
      }
      if (v26 >= v23)
        goto LABEL_49;
      if (!*(_QWORD *)(v19 + 8 * v26))
      {
        if (v21 + 2 >= v23)
          goto LABEL_49;
        if (!*(_QWORD *)(v19 + 8 * (v21 + 2)))
        {
          if (v21 + 3 >= v23)
            goto LABEL_49;
          if (!*(_QWORD *)(v19 + 8 * (v21 + 3)))
          {
            if (v21 + 4 >= v23)
              goto LABEL_49;
            if (!*(_QWORD *)(v19 + 8 * (v21 + 4)))
            {
              if (v21 + 5 >= v23)
                goto LABEL_49;
              if (!*(_QWORD *)(v19 + 8 * (v21 + 5)))
                break;
            }
          }
        }
      }
LABEL_36:
      OUTLINED_FUNCTION_34_2();
      v22 = v30 & v29;
      v25 = v32 + (v31 << 6);
      v21 = v31;
LABEL_37:
      v33 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * v25);
      v35 = *v33;
      v34 = v33[1];
      sub_1CF6B2C48(*(_QWORD *)(v20 + 56) + 40 * v25, (uint64_t)v74);
      v73[0] = v35;
      v73[1] = v34;
      sub_1CF6B2C48((uint64_t)v74, (uint64_t)&v67);
      if ((a1 & 1) != 0)
      {
        OUTLINED_FUNCTION_6_3();
        sub_1CF6B2D4C((uint64_t)&v67);
LABEL_41:
        *(_QWORD *)&v70 = v35;
        *((_QWORD *)&v70 + 1) = v34;
        sub_1CF68F1EC((uint64_t)v74, (uint64_t)v66);
        OUTLINED_FUNCTION_6_3();
        goto LABEL_42;
      }
      v36 = v69;
      OUTLINED_FUNCTION_6_3();
      sub_1CF6B2D4C((uint64_t)&v67);
      if ((v36 & 1) == 0)
        goto LABEL_41;
      v71 = 0u;
      v72 = 0u;
      v70 = 0u;
LABEL_42:
      sub_1CF693ED8((uint64_t)v73, (uint64_t *)&unk_1ED8F79D8);
      if (*((_QWORD *)&v70 + 1))
      {
        v67 = v70;
        v68 = v71;
        v69 = v72;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CF6C6DC0();
          v65 = v43;
        }
        v38 = *(_QWORD *)(v65 + 16);
        v37 = *(_QWORD *)(v65 + 24);
        if (v38 >= v37 >> 1)
        {
          OUTLINED_FUNCTION_48_1(v37);
          sub_1CF6C6DC0();
          v65 = v44;
        }
        v39 = v65;
        *(_QWORD *)(v65 + 16) = v38 + 1;
        v40 = (_OWORD *)(v39 + 48 * v38);
        v41 = v67;
        v42 = v69;
        v40[3] = v68;
        v40[4] = v42;
        v40[2] = v41;
      }
      else
      {
        sub_1CF693ED8((uint64_t)&v70, (uint64_t *)&unk_1EFBA1DB8);
      }
    }
    v27 = v21 + 6;
    while (v27 < v23)
    {
      if (*(_QWORD *)(v19 + 8 * v27++))
        goto LABEL_36;
    }
LABEL_49:
    swift_release();
    sub_1CF6AF26C(v65, &qword_1ED8F7A80, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1CF6B2958);
    v46 = v45;
    swift_bridgeObjectRelease();
    v6 = v64;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1CF6C6D20();
      v6 = v52;
    }
    v47 = v60;
    v5 = v61;
    v48 = v59;
    v50 = *(_QWORD *)(v6 + 16);
    v49 = *(_QWORD *)(v6 + 24);
    if (v50 >= v49 >> 1)
    {
      OUTLINED_FUNCTION_48_1(v49);
      sub_1CF6C6D20();
      v6 = v53;
    }
    *(_QWORD *)(v6 + 16) = v50 + 1;
    v51 = (_QWORD *)(v6 + 24 * v50);
    v51[4] = v48;
    v51[5] = v47;
    v51[6] = v46;
  }
  v8 = v58 + 1;
  if (!__OFADD__(v58, 1))
  {
    if (v8 >= v56)
      goto LABEL_54;
    if (!*(_QWORD *)(v55 + 8 * v8))
    {
      if (v58 + 2 >= v56)
        goto LABEL_54;
      if (!*(_QWORD *)(v55 + 8 * (v58 + 2)))
      {
        if (v58 + 3 >= v56)
          goto LABEL_54;
        if (!*(_QWORD *)(v55 + 8 * (v58 + 3)))
        {
          if (v58 + 4 >= v56)
            goto LABEL_54;
          if (!*(_QWORD *)(v55 + 8 * (v58 + 4)))
          {
            if (v58 + 5 >= v56)
              goto LABEL_54;
            if (!*(_QWORD *)(v55 + 8 * (v58 + 5)))
            {
              v9 = v58 + 6;
              while (v9 < v56)
              {
                if (*(_QWORD *)(v55 + 8 * v9++))
                  goto LABEL_18;
              }
LABEL_54:
              swift_release();
              swift_bridgeObjectRelease();
              sub_1CF6AF26C(v6, (uint64_t *)&unk_1ED8F7A70, (void (*)(uint64_t, uint64_t, uint64_t *))sub_1CF6B2684);
              return;
            }
          }
        }
      }
    }
LABEL_18:
    OUTLINED_FUNCTION_34_2();
    v61 = v12 & v11;
    v7 = v14 + (v13 << 6);
    v58 = v13;
    goto LABEL_19;
  }
LABEL_56:
  __break(1u);
}

uint64_t sub_1CF6B0B40(uint64_t a1)
{
  void *v1;
  void *v2;
  char v3;
  void *v5;
  _BYTE v6[24];
  uint64_t v7;

  sub_1CF6B3198(a1, (uint64_t)v6, &qword_1ED8F7C80);
  if (!v7)
  {
    sub_1CF693ED8((uint64_t)v6, &qword_1ED8F7C80);
    goto LABEL_5;
  }
  type metadata accessor for DeviceKeyValueStore();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    v3 = 0;
    return v3 & 1;
  }
  sub_1CF6B3208(0, (unint64_t *)&unk_1EFBA1CF0);
  sub_1CF6B0670(1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F79D0);
  v1 = (void *)OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_11_3();
  sub_1CF6B0670(1);
  v2 = (void *)OUTLINED_FUNCTION_37_2();
  OUTLINED_FUNCTION_11_3();
  v3 = sub_1CF73F258();

  return v3 & 1;
}

id DeviceKeyValueStore.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DeviceKeyValueStore();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1CF6B0D28()
{
  uint64_t v0;

  sub_1CF73EED4();
  sub_1CF73F7EC();
  sub_1CF73EF34();
  v0 = OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_11();
  return v0;
}

unint64_t sub_1CF6B0D94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_3();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_40_1();
  v0 = OUTLINED_FUNCTION_18_2();
  return sub_1CF6B2378(v0, v1, v2);
}

unint64_t sub_1CF6B0DD0(uint64_t a1)
{
  uint64_t v2;

  sub_1CF73EED4();
  sub_1CF73F7EC();
  sub_1CF73EF34();
  v2 = OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_40_0();
  return sub_1CF6B2458(a1, v2);
}

unint64_t sub_1CF6B0E48(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1CF73F7E0();
  return sub_1CF6B25CC(a1, v2);
}

unint64_t sub_1CF6B0E78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_3();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_11();
  OUTLINED_FUNCTION_40_1();
  v0 = OUTLINED_FUNCTION_18_2();
  return sub_1CF6B2378(v0, v1, v2);
}

uint64_t sub_1CF6B0EC0(_OWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t v6;

  swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  *v2 = 0x8000000000000000;
  sub_1CF6B180C(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6B0F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_1CF6B1918(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6B0FA8(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_1CF6B1A2C(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6B1024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_17_2();
  v6 = sub_1CF6B1B48(a1, a2, a3);
  OUTLINED_FUNCTION_39_1(v6, v7, v8, v9, v10, v11, v12, v13, v15, v16);
  return OUTLINED_FUNCTION_7_3();
}

uint64_t sub_1CF6B1074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF6B108C(a1, a2, a3, &qword_1EFBA1D28);
}

uint64_t sub_1CF6B1080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF6B108C(a1, a2, a3, &qword_1EFBA1D30);
}

uint64_t sub_1CF6B108C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v9;
  uint64_t v11;

  swift_isUniquelyReferenced_nonNull_native();
  OUTLINED_FUNCTION_17_2();
  sub_1CF6B1C50(a1, a2, a3, v9, a4);
  *v4 = v11;
  return OUTLINED_FUNCTION_7_3();
}

uint64_t sub_1CF6B10EC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_21_2();
  v0 = OUTLINED_FUNCTION_12_4();
  v2 = sub_1CF6B1D60(v0, v1);
  OUTLINED_FUNCTION_39_1(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12);
  return OUTLINED_FUNCTION_10_6();
}

uint64_t sub_1CF6B1118(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_1CF6B1E64(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6B1194(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_1CF6B1F7C(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6B1210(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  _QWORD *v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  char v36;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A70);
  v36 = a2;
  v6 = sub_1CF73F468();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_39;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v35 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v34 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  if (!v10)
    goto LABEL_7;
LABEL_6:
  v14 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v18)) + (v13 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
    v22 = *v20;
    v21 = v20[1];
    v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * i);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1CF73F7EC();
    sub_1CF73EF34();
    result = sub_1CF73F810();
    v24 = -1 << *(_BYTE *)(v7 + 32);
    v25 = result & ~v24;
    v26 = v25 >> 6;
    if (((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6))) == 0)
    {
      v28 = 0;
      v29 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v29 || (v28 & 1) == 0)
      {
        v30 = v26 == v29;
        if (v26 == v29)
          v26 = 0;
        v28 |= v30;
        v31 = *(_QWORD *)(v11 + 8 * v26);
        if (v31 != -1)
        {
          v27 = __clz(__rbit64(~v31)) + (v26 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    v32 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v27);
    *v32 = v22;
    v32[1] = v21;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v27) = v23;
    ++*(_QWORD *)(v7 + 16);
    if (v10)
      goto LABEL_6;
LABEL_7:
    v16 = v13 + 1;
    if (__OFADD__(v13, 1))
      goto LABEL_41;
    if (v16 >= v34)
    {
      swift_release();
      v17 = (_QWORD *)(v5 + 64);
      goto LABEL_34;
    }
    v17 = (_QWORD *)(v5 + 64);
    v18 = *(_QWORD *)(v35 + 8 * v16);
    ++v13;
    if (!v18)
    {
      v13 = v16 + 1;
      if (v16 + 1 >= v34)
        goto LABEL_32;
      v18 = *(_QWORD *)(v35 + 8 * v13);
      if (!v18)
        break;
    }
LABEL_18:
    v10 = (v18 - 1) & v18;
  }
  v19 = v16 + 2;
  if (v19 < v34)
  {
    v18 = *(_QWORD *)(v35 + 8 * v19);
    if (!v18)
    {
      while (1)
      {
        v13 = v19 + 1;
        if (__OFADD__(v19, 1))
          goto LABEL_42;
        if (v13 >= v34)
          goto LABEL_32;
        v18 = *(_QWORD *)(v35 + 8 * v13);
        ++v19;
        if (v18)
          goto LABEL_18;
      }
    }
    v13 = v19;
    goto LABEL_18;
  }
LABEL_32:
  swift_release();
LABEL_34:
  if ((v36 & 1) != 0)
  {
    v33 = 1 << *(_BYTE *)(v5 + 32);
    if (v33 >= 64)
      sub_1CF6B2668(0, (unint64_t)(v33 + 63) >> 6, v17);
    else
      *v17 = -1 << v33;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_39:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_1CF6B1514(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  unint64_t v14;
  unint64_t i;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  int64_t v33;
  _QWORD *v34;
  _OWORD v35[2];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7A80);
  v6 = sub_1CF73F468();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v34 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v8 + 63) >> 6;
    v11 = v6 + 64;
    result = swift_retain();
    v13 = 0;
    if (!v10)
      goto LABEL_7;
LABEL_6:
    v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (i = v14 | (v13 << 6); ; i = __clz(__rbit64(v17)) + (v13 << 6))
    {
      v19 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * i);
      v21 = *v19;
      v20 = v19[1];
      v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * i);
      if ((a2 & 1) != 0)
      {
        sub_1CF68E2E4(v22, v35);
      }
      else
      {
        sub_1CF68F1EC((uint64_t)v22, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_1CF73F7EC();
      sub_1CF73EF34();
      result = sub_1CF73F810();
      v23 = -1 << *(_BYTE *)(v7 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v11 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v11 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      v31 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v26);
      *v31 = v21;
      v31[1] = v20;
      result = (uint64_t)sub_1CF68E2E4(v35, (_OWORD *)(*(_QWORD *)(v7 + 56) + 32 * v26));
      ++*(_QWORD *)(v7 + 16);
      if (v10)
        goto LABEL_6;
LABEL_7:
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_40;
      if (v16 >= v33)
        goto LABEL_33;
      v17 = v34[v16];
      ++v13;
      if (!v17)
      {
        v13 = v16 + 1;
        if (v16 + 1 >= v33)
          goto LABEL_33;
        v17 = v34[v13];
        if (!v17)
        {
          v18 = v16 + 2;
          if (v18 >= v33)
          {
LABEL_33:
            swift_release();
            v3 = v2;
            if ((a2 & 1) != 0)
            {
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 >= 64)
                sub_1CF6B2668(0, (unint64_t)(v32 + 63) >> 6, v34);
              else
                *v34 = -1 << v32;
              *(_QWORD *)(v5 + 16) = 0;
            }
            break;
          }
          v17 = v34[v18];
          if (!v17)
          {
            while (1)
            {
              v13 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_41;
              if (v13 >= v33)
                goto LABEL_33;
              v17 = v34[v13];
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          v13 = v18;
        }
      }
LABEL_18:
      v10 = (v17 - 1) & v17;
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

_OWORD *sub_1CF6B180C(_OWORD *a1, void *a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v5;
  unint64_t v6;
  char v7;
  unint64_t v8;
  char v9;
  unint64_t v10;
  char v11;
  _QWORD *v12;
  _OWORD *v13;
  _OWORD *result;

  v3 = (_QWORD **)v2;
  v5 = (_QWORD *)*v2;
  v6 = sub_1CF6B0DD0((uint64_t)a2);
  if (__OFADD__(v5[2], (v7 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v8 = v6;
  v9 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA32A0);
  if ((sub_1CF73F420() & 1) == 0)
    goto LABEL_5;
  v10 = sub_1CF6B0DD0((uint64_t)a2);
  if ((v9 & 1) != (v11 & 1))
  {
LABEL_9:
    type metadata accessor for RPTrustedHostInfoKey(0);
    result = (_OWORD *)sub_1CF73F6FC();
    __break(1u);
    return result;
  }
  v8 = v10;
LABEL_5:
  v12 = *v3;
  if ((v9 & 1) != 0)
  {
    v13 = (_OWORD *)(v12[7] + 32 * v8);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v13);
    return sub_1CF68E2E4(a1, v13);
  }
  else
  {
    sub_1CF6B20A0(v8, (uint64_t)a2, a1, v12);
    return a2;
  }
}

uint64_t sub_1CF6B1918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1CF6B0D94();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F69C8);
  if ((sub_1CF73F420() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1CF6B0D94();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1CF73F6FC();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
    return sub_1CF6B31D4(a1, v15[7] + 40 * v11);
  sub_1CF6B2104(v11, a2, a3, a1, v15);
  return swift_bridgeObjectRetain();
}

_OWORD *sub_1CF6B1A2C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1CF6B0D94();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1CE0);
  if ((sub_1CF73F420() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1CF6B0D94();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_1CF73F6FC();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = (_OWORD *)(v15[7] + 32 * v11);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
    return sub_1CF68E2E4(a1, v16);
  }
  else
  {
    sub_1CF6B2160(v11, a2, a3, a1, v15);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

unint64_t sub_1CF6B1B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t *v16;
  unint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1CF6B0E48(a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1DB0);
  if ((sub_1CF73F420() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1CF6B0E48(a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_1CF73F6FC();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) == 0)
    return sub_1CF6B21C8(v11, a3, a1, a2, v15);
  v16 = (uint64_t *)(v15[7] + 16 * v11);
  result = swift_release();
  *v16 = a1;
  v16[1] = a2;
  return result;
}

uint64_t sub_1CF6B1C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  _QWORD **v5;
  unint64_t v10;
  char v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;

  sub_1CF6B0D94();
  OUTLINED_FUNCTION_41_3();
  if (v12)
  {
    __break(1u);
    goto LABEL_9;
  }
  v13 = v10;
  v14 = v11;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  if ((sub_1CF73F420() & 1) == 0)
    goto LABEL_5;
  OUTLINED_FUNCTION_18_2();
  v15 = sub_1CF6B0D94();
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_9:
    result = sub_1CF73F6FC();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = *v5;
  if ((v14 & 1) != 0)
  {
    v18 = v17[7];
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 8 * v13) = a1;
  }
  else
  {
    sub_1CF6B2210(v13, a2, a3, a1, v17);
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_1CF6B1D60(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t result;
  _BYTE v16[40];

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_1CF68E0D0(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v9 = v7;
  v10 = v8;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1DA0);
  if ((sub_1CF73F420() & 1) == 0)
    goto LABEL_5;
  v11 = sub_1CF68E0D0(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_10:
    result = sub_1CF73F6FC();
    __break(1u);
    return result;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    v14 = v13[7];
    result = swift_unknownObjectRelease();
    *(_QWORD *)(v14 + 8 * v9) = a1;
  }
  else
  {
    sub_1CF68E1C4(a2, (uint64_t)v16);
    return sub_1CF6B2258(v9, (uint64_t)v16, a1, v13);
  }
  return result;
}

uint64_t sub_1CF6B1E64(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1CF6B0E78();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA3270);
  if ((sub_1CF73F420() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1CF6B0E78();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1D10);
    result = sub_1CF73F6FC();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
    return sub_1CF6B30E4((uint64_t)a1, v15[7] + 48 * v11);
  sub_1CF6B22B0(v11, a2, a3, a1, v15);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CF6B1F7C(__int128 *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_1CF6B0E78();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1D20);
  if ((sub_1CF73F420() & 1) == 0)
    goto LABEL_5;
  v13 = sub_1CF6B0E78();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1D10);
    result = sub_1CF73F6FC();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7] + 40 * v11;
    __swift_destroy_boxed_opaque_existential_0Tm(v16);
    return sub_1CF68C850(a1, v16);
  }
  else
  {
    sub_1CF6B230C(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

_OWORD *sub_1CF6B20A0(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_1CF68E2E4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1CF6B2104(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = a5[7] + 40 * result;
  v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  *(_BYTE *)(v6 + 32) = *(_BYTE *)(a4 + 32);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

_OWORD *sub_1CF6B2160(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1CF68E2E4(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_1CF6B21C8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a5[6] + 8 * result) = a2;
  v5 = (_QWORD *)(a5[7] + 16 * result);
  *v5 = a3;
  v5[1] = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1CF6B2210(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

unint64_t sub_1CF6B2258(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = a4[6] + 40 * result;
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_1CF6B22B0(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = (_OWORD *)(a5[7] + 48 * result);
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  v6[2] = a4[2];
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_1CF6B230C(unint64_t a1, uint64_t a2, uint64_t a3, __int128 *a4, _QWORD *a5)
{
  _QWORD *v6;
  uint64_t result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_1CF68C850(a4, a5[7] + 40 * a1);
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

unint64_t sub_1CF6B2378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1CF73F690() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1CF73F690() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_1CF6B2458(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_1CF73EED4();
    v8 = v7;
    if (v6 == sub_1CF73EED4() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_1CF73EED4();
          v15 = v14;
          if (v13 == sub_1CF73EED4() && v15 == v16)
            break;
          v18 = sub_1CF73F690();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1CF6B25CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

uint64_t sub_1CF6B2668(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_1CF6B2684(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t *i;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  for (i = (uint64_t *)(swift_bridgeObjectRetain() + 48); ; i += 3)
  {
    v7 = *(i - 2);
    v6 = *(i - 1);
    v8 = *i;
    v9 = (_QWORD *)*a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11 = sub_1CF6B0D94();
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1CF73F6FC();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1DC8);
      sub_1CF73F42C();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (_QWORD *)(v18[6] + 16 * v11);
    *v19 = v7;
    v19[1] = v6;
    *(_QWORD *)(v18[7] + 8 * v11) = v8;
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v18[2] = v22;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1CF6B1210(v14, a2 & 1);
  v16 = sub_1CF6B0D94();
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();

    return;
  }
LABEL_20:
  sub_1CF73F348();
  sub_1CF73EF58();
  sub_1CF73F408();
  sub_1CF73EF58();
  sub_1CF73F450();
  __break(1u);
}

void sub_1CF6B2958(uint64_t a1, char a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  char v10;
  unint64_t v11;
  uint64_t v12;
  _BOOL8 v13;
  uint64_t v14;
  char v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;
  _OWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  id v31;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  v6 = a1 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1CF6B3198(v6, (uint64_t)&v28, (uint64_t *)&unk_1ED8F79F0);
    v8 = v28;
    v7 = v29;
    v26 = v28;
    v27 = v29;
    sub_1CF68E2E4(&v30, v25);
    v9 = (_QWORD *)*a3;
    v11 = sub_1CF6B0D94();
    v12 = v9[2];
    v13 = (v10 & 1) == 0;
    v14 = v12 + v13;
    if (__OFADD__(v12, v13))
    {
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      sub_1CF73F6FC();
      __break(1u);
      goto LABEL_20;
    }
    v15 = v10;
    if (v9[3] < v14)
      break;
    if ((a2 & 1) != 0)
    {
      if ((v10 & 1) != 0)
        goto LABEL_14;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1CE0);
      sub_1CF73F42C();
      if ((v15 & 1) != 0)
        goto LABEL_14;
    }
LABEL_10:
    v18 = (_QWORD *)*a3;
    *(_QWORD *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    v19 = (_QWORD *)(v18[6] + 16 * v11);
    *v19 = v8;
    v19[1] = v7;
    sub_1CF68E2E4(v25, (_OWORD *)(v18[7] + 32 * v11));
    v20 = v18[2];
    v21 = __OFADD__(v20, 1);
    v22 = v20 + 1;
    if (v21)
      goto LABEL_18;
    v18[2] = v22;
    v6 += 48;
    a2 = 1;
    if (!--v3)
    {
      swift_bridgeObjectRelease_n();
      return;
    }
  }
  sub_1CF6B1514(v14, a2 & 1);
  v16 = sub_1CF6B0D94();
  if ((v15 & 1) != (v17 & 1))
    goto LABEL_19;
  v11 = v16;
  if ((v15 & 1) == 0)
    goto LABEL_10;
LABEL_14:
  v23 = (void *)swift_allocError();
  swift_willThrow();
  v31 = v23;
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_20:
  sub_1CF73F348();
  sub_1CF73EF58();
  sub_1CF73F408();
  sub_1CF73EF58();
  sub_1CF73F450();
  __break(1u);
}

uint64_t sub_1CF6B2C48(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for KVSValue(a2, a1);
  return a2;
}

uint64_t sub_1CF6B2C7C(uint64_t *a1, char a2, _QWORD **a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1CF6B2C88(a1, a2, a3, a4, a5, a6, &qword_1EFBA1D38);
}

uint64_t sub_1CF6B2C88(uint64_t *a1, char a2, _QWORD **a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v7;

  v7 = *a1;
  if (*a1)
  {
    if ((a2 & 1) != 0)
    {
      *(_QWORD *)((*a3)[7] + 8 * a4) = v7;
    }
    else
    {
      sub_1CF6B2210(a4, a5, a6, v7, *a3);
      OUTLINED_FUNCTION_26_2();
    }
  }
  else if ((a2 & 1) != 0)
  {
    swift_arrayDestroy();
    __swift_instantiateConcreteTypeFromMangledName(a7);
    sub_1CF73F438();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CF6B2D4C(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return a1;
}

uint64_t method lookup function for DeviceKeyValueStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DeviceKeyValueStore.__allocating_init(copyingValuesFrom:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.setValue(_:_:_:sensitive:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.getValue(_:_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.getKeyValuePairs(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.isValueSensitive(_:_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DeviceKeyValueStore.data(includeSensitive:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t destroy for KVSValue(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a1);
}

uint64_t initializeWithCopy for KVSValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithCopy for KVSValue(uint64_t a1, uint64_t a2)
{
  __swift_assign_boxed_opaque_existential_0((uint64_t *)a1, (uint64_t *)a2);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for KVSValue(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for KVSValue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for KVSValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for KVSValue()
{
  return &type metadata for KVSValue;
}

uint64_t sub_1CF6B30E4(uint64_t a1, uint64_t a2)
{
  sub_1CF7054E8(a2, a1);
  return a2;
}

uint64_t sub_1CF6B3120(uint64_t a1, uint64_t a2)
{
  sub_1CF7052F8(a2, a1);
  return a2;
}

uint64_t sub_1CF6B3160@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v2 = -1;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  *a2 = a1;
  v6 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v5 = v6;
  if (-v3 < 64)
    v2 = ~(-1 << -(char)v3);
  a2[1] = result;
  a2[2] = ~v3;
  a2[3] = 0;
  a2[4] = v2 & v5;
  return result;
}

void sub_1CF6B3198(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  void (*v4)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledName(a3);
  v3 = OUTLINED_FUNCTION_69();
  v4(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6B31D4(uint64_t a1, uint64_t a2)
{
  assignWithTake for KVSValue(a2, a1);
  return a2;
}

void sub_1CF6B3208(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t OUTLINED_FUNCTION_12_4()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = 0x8000000000000000;
  return v1;
}

void OUTLINED_FUNCTION_17_2()
{
  _QWORD *v0;

  *v0 = 0x8000000000000000;
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_20_3(uint64_t a1, uint64_t a2)
{
  return sub_1CF68F1EC(a1, a2);
}

uint64_t OUTLINED_FUNCTION_21_2()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_26_2()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_27_3(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  sub_1CF693ED8((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  return 0x6375646F7250;
}

uint64_t OUTLINED_FUNCTION_37_2()
{
  return sub_1CF73EE14();
}

uint64_t OUTLINED_FUNCTION_39_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  uint64_t result;

  result = *v10;
  *v10 = a10;
  return result;
}

unint64_t OUTLINED_FUNCTION_42_2()
{
  return sub_1CF6B0D94();
}

uint64_t OUTLINED_FUNCTION_45_2(uint64_t a1, ...)
{
  uint64_t v2;
  va_list va;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  va_list va1;

  va_start(va1, a1);
  va_start(va, a1);
  v2 = va_arg(va1, _QWORD);
  v4 = va_arg(va1, _QWORD);
  v5 = va_arg(va1, _QWORD);
  v6 = va_arg(va1, _QWORD);
  v7 = va_arg(va1, _QWORD);
  return sub_1CF6B2C48((uint64_t)va1, (uint64_t)va);
}

BOOL OUTLINED_FUNCTION_48_1@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_51_1()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_1CF6B3360(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_1CF6B336C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_1CF73EED4();
  v2 = v1;
  if (v0 == sub_1CF73EED4() && v2 == v3)
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_1CF6B33D0(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x726F727265736ELL;
  else
    v2 = 0x656C6261646F63;
  if ((a2 & 1) != 0)
    v3 = 0x726F727265736ELL;
  else
    v3 = 0x656C6261646F63;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_269();
  return v4 & 1;
}

void sub_1CF6B3444(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x656369766564;
  else
    v3 = 1953722216;
  if (v2)
    v4 = 0xE400000000000000;
  else
    v4 = 0xE600000000000000;
  if ((a2 & 1) != 0)
    v5 = 0x656369766564;
  else
    v5 = 1953722216;
  if ((a2 & 1) != 0)
    v6 = 0xE600000000000000;
  else
    v6 = 0xE400000000000000;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

void sub_1CF6B34B8(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v2 = 1667855729;
  if (a1)
  {
    if (a1 == 1)
      v3 = 7365492;
    else
      v3 = 7365749;
    v4 = 0xE300000000000000;
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1667855729;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 7365492;
    else
      v2 = 7365749;
    v5 = 0xE300000000000000;
  }
  else
  {
    v5 = 0xE400000000000000;
  }
  if (v3 == v2 && v4 == v5)
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

void sub_1CF6B3560(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0x6976654465726F63;
  else
    v3 = 0x615065746F6D6572;
  if (v2)
    v4 = 0xED0000676E697269;
  else
    v4 = 0xEA00000000006563;
  if ((a2 & 1) != 0)
    v5 = 0x6976654465726F63;
  else
    v5 = 0x615065746F6D6572;
  if ((a2 & 1) != 0)
    v6 = 0xEA00000000006563;
  else
    v6 = 0xED0000676E697269;
  if (v3 == v5 && v4 == v6)
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

void sub_1CF6B35F0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1CF6B364C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_1CF6B36AC + 4 * byte_1CF743335[a2]))(0xD000000000000013);
}

void sub_1CF6B36AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0xD000000000000013 && v2 == ((v1 - 32) | 0x8000000000000000))
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

void sub_1CF6B3714(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1CF6B375C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CF6B37F8 + 4 * byte_1CF743340[a2]))(7697517);
}

void sub_1CF6B37F8(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 7697517 && v1 == 0xE300000000000000)
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

void sub_1CF6B38A0(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1CF6B3904(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CF6B3948 + 4 * byte_1CF74334A[a2]))(a3 + 1);
}

void sub_1CF6B3948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 == a3 + 1 && v4 == ((v3 - 32) | 0x8000000000000000))
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

void sub_1CF6B399C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1CF6B39F4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CF6B3A54 + 4 * byte_1CF743352[a2]))(0x6572756C696166);
}

void sub_1CF6B3A54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0x6572756C696166 && v1 == v2)
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

void sub_1CF6B3AC0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1CF6B3B08(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_1CF6B3B64 + 4 * byte_1CF74335A[a2]))(0x726F727265);
}

void sub_1CF6B3B64(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x726F727265 && v1 == 0xE500000000000000)
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

void sub_1CF6B3BD8(char a1)
{
  __asm { BR              X13 }
}

uint64_t sub_1CF6B3C3C()
{
  unint64_t v0;
  unsigned __int8 v1;

  v0 = OUTLINED_FUNCTION_338();
  return ((uint64_t (*)(unint64_t))((char *)sub_1CF6B3C88 + 4 * byte_1CF743362[v1]))(v0);
}

void sub_1CF6B3C88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 == 0xD000000000000012 && v2 == ((v1 - 32) | 0x8000000000000000))
    OUTLINED_FUNCTION_115_0();
  else
    OUTLINED_FUNCTION_18_3();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_40();
}

void sub_1CF6B3CE4()
{
  sub_1CF6B4388();
}

void sub_1CF6B3CF0()
{
  sub_1CF6B3DBC();
}

void sub_1CF6B3CFC()
{
  sub_1CF6B3DBC();
}

void sub_1CF6B3D08()
{
  sub_1CF6B3DBC();
}

uint64_t sub_1CF6B3D14()
{
  return sub_1CF6B4464();
}

void sub_1CF6B3D20()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_334();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

void sub_1CF6B3D48()
{
  sub_1CF6B44D4();
}

void sub_1CF6B3D54(unsigned __int8 a1)
{
  OUTLINED_FUNCTION_56();
  sub_1CF6DB294(a1);
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

void sub_1CF6B3D98()
{
  sub_1CF6B3DBC();
}

void sub_1CF6B3DA4()
{
  sub_1CF6B43F8();
}

void sub_1CF6B3DB0()
{
  sub_1CF6B3DBC();
}

void sub_1CF6B3DBC()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_331(v0);
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

void sub_1CF6B3DE8()
{
  sub_1CF73F7F8();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6B3E08()
{
  sub_1CF73EF34();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6B3E4C()
{
  sub_1CF73EF34();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6B3E98()
{
  OUTLINED_FUNCTION_67_1();
  return OUTLINED_FUNCTION_17_3();
}

uint64_t sub_1CF6B3EF4()
{
  OUTLINED_FUNCTION_67_1();
  return OUTLINED_FUNCTION_17_3();
}

void sub_1CF6B3F54(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1CF6B3F9C()
{
  OUTLINED_FUNCTION_355();
  OUTLINED_FUNCTION_67_1();
  return OUTLINED_FUNCTION_17_3();
}

void sub_1CF6B4000(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CF6B4038()
{
  OUTLINED_FUNCTION_67_1();
  return OUTLINED_FUNCTION_17_3();
}

void sub_1CF6B40B4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CF6B40F8()
{
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_67_1();
  return OUTLINED_FUNCTION_17_3();
}

void sub_1CF6B4138(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CF6B4178()
{
  OUTLINED_FUNCTION_67_1();
  return OUTLINED_FUNCTION_17_3();
}

void sub_1CF6B41C4(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_1CF6B41FC()
{
  OUTLINED_FUNCTION_67_1();
  return OUTLINED_FUNCTION_17_3();
}

void sub_1CF6B424C(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1CF6B4294()
{
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_67_1();
  return OUTLINED_FUNCTION_17_3();
}

void sub_1CF6B42DC()
{
  sub_1CF6B4358();
}

void sub_1CF6B42E8()
{
  sub_1CF6B4358();
}

void sub_1CF6B42F4()
{
  sub_1CF6B4358();
}

void sub_1CF6B4300()
{
  sub_1CF6B4358();
}

void sub_1CF6B430C()
{
  unsigned __int8 v0;

  OUTLINED_FUNCTION_126_0();
  sub_1CF6DB294(v0);
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

void sub_1CF6B434C()
{
  sub_1CF6B4358();
}

void sub_1CF6B4358()
{
  uint64_t v0;

  v0 = sub_1CF73F7EC();
  OUTLINED_FUNCTION_331(v0);
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

void sub_1CF6B4388()
{
  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

void sub_1CF6B43F8()
{
  OUTLINED_FUNCTION_126_0();
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

uint64_t sub_1CF6B4464()
{
  sub_1CF73F7EC();
  sub_1CF73EF34();
  swift_bridgeObjectRelease();
  return sub_1CF73F810();
}

void sub_1CF6B44D4()
{
  OUTLINED_FUNCTION_126_0();
  sub_1CF73EF34();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

void sub_1CF6B4530()
{
  sub_1CF73F7EC();
  OUTLINED_FUNCTION_334();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

uint64_t sub_1CF6B455C()
{
  uint64_t result;

  sub_1CF6CACDC();
  result = sub_1CF73F270();
  qword_1ED8F78F0 = result;
  return result;
}

BOOL PairingConsentCollectionOutcome.terminal.getter()
{
  _QWORD *v0;

  return *v0 != 1;
}

void PermittedPromptlessPairingMode.hash(into:)()
{
  sub_1CF73F7F8();
  OUTLINED_FUNCTION_1();
}

void PermittedPromptlessPairingMode.hashValue.getter()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

uint64_t sub_1CF6B4620()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1CF73F498();
  OUTLINED_FUNCTION_3_7();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1CF6B466C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x656369766564;
  else
    return 1953722216;
}

uint64_t sub_1CF6B46A4()
{
  return sub_1CF6B3D14();
}

uint64_t sub_1CF6B46AC()
{
  return sub_1CF6B3E4C();
}

uint64_t sub_1CF6B46B4()
{
  return sub_1CF6B4464();
}

uint64_t sub_1CF6B46BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6B4620();
  *a1 = result;
  return result;
}

void sub_1CF6B46E8(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t v3;

  *a1 = sub_1CF6B466C(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B470C(char *a1, char *a2)
{
  sub_1CF6B3444(*a1, *a2);
}

uint64_t sub_1CF6B4718()
{
  sub_1CF6C9E00();
  return sub_1CF73F018();
}

uint64_t sub_1CF6B4774()
{
  sub_1CF6C9E00();
  return sub_1CF73F000();
}

uint64_t ControlChannelConnection.Options.Host.attemptPairVerify.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ControlChannelConnection.Options.Host.attemptPairVerify.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Host.attemptPairVerify.modify())()
{
  return nullsub_1;
}

RemotePairingDevice::ControlChannelConnection::Options::Host __swiftcall ControlChannelConnection.Options.Host.init(attemptPairVerify:)(RemotePairingDevice::ControlChannelConnection::Options::Host attemptPairVerify)
{
  RemotePairingDevice::ControlChannelConnection::Options::Host *v1;

  v1->attemptPairVerify = attemptPairVerify.attemptPairVerify;
  return attemptPairVerify;
}

uint64_t sub_1CF6B47EC(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001CF751B10)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1CF6B4870()
{
  sub_1CF73F7EC();
  sub_1CF73F7F8();
  return sub_1CF73F810();
}

unint64_t sub_1CF6B48B0()
{
  return 0xD000000000000011;
}

uint64_t sub_1CF6B48D0()
{
  sub_1CF73F7EC();
  sub_1CF73F7F8();
  return sub_1CF73F810();
}

uint64_t sub_1CF6B4910@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6B47EC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CF6B4938()
{
  sub_1CF6B4A34();
  return sub_1CF73F864();
}

uint64_t sub_1CF6B4960()
{
  sub_1CF6B4A34();
  return sub_1CF73F870();
}

void ControlChannelConnection.Options.Host.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_2();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1DE0);
  OUTLINED_FUNCTION_152();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_0Tm(v3, v3[3]);
  sub_1CF6B4A34();
  sub_1CF73F858();
  sub_1CF73F5D0();
  OUTLINED_FUNCTION_26_1(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1CF6B4A34()
{
  unint64_t result;

  result = qword_1ED8F7158;
  if (!qword_1ED8F7158)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743C10, &type metadata for ControlChannelConnection.Options.Host.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7158);
  }
  return result;
}

void ControlChannelConnection.Options.Host.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_2();
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7B30);
  OUTLINED_FUNCTION_152();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  sub_1CF6B4A34();
  OUTLINED_FUNCTION_300();
  if (!v0)
  {
    v8 = sub_1CF73F504();
    OUTLINED_FUNCTION_26_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    *v6 = v8 & 1;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF6B4B34()
{
  ControlChannelConnection.Options.Host.init(from:)();
}

void sub_1CF6B4B48()
{
  ControlChannelConnection.Options.Host.encode(to:)();
}

uint64_t ControlChannelConnection.Options.Device.allowsPairSetup.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ControlChannelConnection.Options.Device.allowsPairSetup.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsPairSetup.modify())()
{
  return nullsub_1;
}

uint64_t ControlChannelConnection.Options.Device.allowsPinlessPairing.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t ControlChannelConnection.Options.Device.allowsPinlessPairing.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsPinlessPairing.modify())()
{
  return nullsub_1;
}

uint64_t ControlChannelConnection.Options.Device.allowsIncomingTunnelConnections.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t ControlChannelConnection.Options.Device.allowsIncomingTunnelConnections.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsIncomingTunnelConnections.modify())()
{
  return nullsub_1;
}

uint64_t ControlChannelConnection.Options.Device.allowsPromptlessAutomationPairingUpgrade.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 3);
}

uint64_t ControlChannelConnection.Options.Device.allowsPromptlessAutomationPairingUpgrade.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsPromptlessAutomationPairingUpgrade.modify())()
{
  return nullsub_1;
}

uint64_t ControlChannelConnection.Options.Device.allowsSharingSensitiveInfo.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t ControlChannelConnection.Options.Device.allowsSharingSensitiveInfo.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*ControlChannelConnection.Options.Device.allowsSharingSensitiveInfo.modify())()
{
  return nullsub_1;
}

uint64_t static ControlChannelConnection.Options.Device.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t result;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  _BOOL4 v10;
  _BOOL4 v11;
  _BOOL4 v12;

  result = 0;
  if (*a1 == *a2 && ((a1[1] ^ a2[1]) & 1) == 0)
  {
    v4 = a1[2];
    v5 = a1[3];
    v6 = a1[4];
    v7 = a2[2];
    v8 = a2[3];
    v9 = a2[4];
    if (v4 == 2)
    {
      if (v7 != 2)
        return 0;
    }
    else
    {
      result = 0;
      v10 = (v4 & 1) == 0;
      if (v7 == 2 || ((v10 ^ v7) & 1) == 0)
        return result;
    }
    if (v5 == 2)
    {
      if (v8 != 2)
        return 0;
LABEL_13:
      if (v6 == 2)
      {
        if (v9 != 2)
          return 0;
      }
      else
      {
        v12 = (v6 & 1) == 0;
        if (v9 == 2 || ((v12 ^ v9) & 1) == 0)
          return 0;
      }
      return 1;
    }
    result = 0;
    v11 = (v5 & 1) == 0;
    if (v8 != 2 && ((v11 ^ v8) & 1) != 0)
      goto LABEL_13;
  }
  return result;
}

uint64_t sub_1CF6B4CDC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x615073776F6C6C61 && a2 == 0xEF70757465537269;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001CF751B30 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001CF751B50 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000028 && a2 == 0x80000001CF751B70 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001CF751BA0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1CF6B4EF8()
{
  return 5;
}

uint64_t sub_1CF6B4F00()
{
  sub_1CF73F7EC();
  sub_1CF73F7F8();
  return sub_1CF73F810();
}

uint64_t sub_1CF6B4F44(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CF6B4F84 + 4 * byte_1CF743381[a1]))(0x615073776F6C6C61, 0xEF70757465537269);
}

unint64_t sub_1CF6B4F84()
{
  return 0xD000000000000014;
}

unint64_t sub_1CF6B4FA0()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1CF6B4FF4()
{
  return sub_1CF6B4F00();
}

uint64_t sub_1CF6B4FFC()
{
  unsigned __int8 *v0;

  return sub_1CF6B4F44(*v0);
}

uint64_t sub_1CF6B5004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6B4CDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF6B5028@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6B4EF8();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6B504C()
{
  sub_1CF6B51F4();
  return sub_1CF73F864();
}

uint64_t sub_1CF6B5074()
{
  sub_1CF6B51F4();
  return sub_1CF73F870();
}

void ControlChannelConnection.Options.Device.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  OUTLINED_FUNCTION_2();
  v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C18);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1CF6B51F4();
  sub_1CF73F858();
  OUTLINED_FUNCTION_252();
  if (!v0)
  {
    OUTLINED_FUNCTION_252();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_132();
    OUTLINED_FUNCTION_132();
  }
  v4 = OUTLINED_FUNCTION_304();
  v5(v4);
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1CF6B51F4()
{
  unint64_t result;

  result = qword_1ED8F7130;
  if (!qword_1ED8F7130)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743BC0, &type metadata for ControlChannelConnection.Options.Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7130);
  }
  return result;
}

void ControlChannelConnection.Options.Device.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  char v11;
  char v12;

  OUTLINED_FUNCTION_2();
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1DE8);
  OUTLINED_FUNCTION_152();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_28();
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  sub_1CF6B51F4();
  OUTLINED_FUNCTION_300();
  if (!v0)
  {
    v8 = OUTLINED_FUNCTION_230();
    v9 = OUTLINED_FUNCTION_230();
    v12 = OUTLINED_FUNCTION_122_0();
    v11 = OUTLINED_FUNCTION_122_0();
    v10 = OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_26_1(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    *v6 = v8 & 1;
    v6[1] = v9 & 1;
    v6[2] = v12;
    v6[3] = v11;
    v6[4] = v10;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v4);
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF6B5390()
{
  ControlChannelConnection.Options.Device.init(from:)();
}

void sub_1CF6B53A4()
{
  ControlChannelConnection.Options.Device.encode(to:)();
}

void static ControlChannelConnection.defaultMaxReconnectionAttempts.setter(uint64_t a1)
{
  OUTLINED_FUNCTION_10();
  qword_1EFBA1DD8 = a1;
  OUTLINED_FUNCTION_26();
}

void static ControlChannelConnection.defaultMaxReconnectionAttempts.modify()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

double sub_1CF6B542C@<D0>(uint64_t a1@<X8>)
{
  char v2;
  __int128 v3;
  __int128 v4;
  double result;
  __int128 v6;
  _OWORD v7[4];
  __int128 v8;
  __int128 v9;
  char v10;

  sub_1CF6B5658((uint64_t)v7);
  v2 = v10;
  v3 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v3;
  v4 = v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(_OWORD *)(a1 + 48) = v4;
  result = *(double *)&v8;
  v6 = v9;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v6;
  *(_BYTE *)(a1 + 96) = v2;
  return result;
}

void sub_1CF6B547C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13[12];
  char v14;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  v11 = *(_QWORD *)(a1 + 88);
  v12 = *(_BYTE *)(a1 + 96);
  v13[0] = *(_QWORD *)a1;
  v13[1] = v1;
  v13[2] = v2;
  v13[3] = v3;
  v13[4] = v4;
  v13[5] = v5;
  v13[6] = v6;
  v13[7] = v7;
  v13[8] = v8;
  v13[9] = v9;
  v13[10] = v10;
  v13[11] = v11;
  v14 = v12;
  sub_1CF6B56D0(v13[0], v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11);
  sub_1CF6B5738(v13);
}

uint64_t sub_1CF6B54F8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *);
  char v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[9];
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;

  result = swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 40);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 48);
    v7 = *(_QWORD *)(v0 + 56);
    v8 = *(_QWORD *)(v0 + 64);
    v9 = *(_QWORD *)(v0 + 72);
    v14 = *(_QWORD *)(v0 + 88);
    v15 = *(_QWORD *)(v0 + 80);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 96);
    v11 = *(_BYTE *)(v0 + 112);
    result = swift_beginAccess();
    v10 = *(void (**)(_QWORD *))(v0 + 280);
    if (v10)
    {
      v16[0] = v3;
      v16[1] = v4;
      v16[2] = v5;
      v16[3] = v2;
      v16[4] = v6;
      v16[5] = v7;
      v16[6] = v8;
      v16[7] = v9;
      v16[8] = v15;
      v17 = v14 & 1;
      v18 = v13;
      v19 = v12;
      v20 = v11;
      sub_1CF6B56D0(v3, v4, v5, v2, v6, v7, v8, v9, v15, v14, v13, v12);
      sub_1CF6A3AE0((uint64_t)v10);
      v10(v16);
      sub_1CF693EC8((uint64_t)v10);
      return sub_1CF694020(v3, v4, v5, v2, v6, v7, v8, v9, v15, v14, v13, v12);
    }
  }
  return result;
}

uint64_t sub_1CF6B5658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v9 = *(_QWORD *)(v1 + 64);
  v10 = *(_QWORD *)(v1 + 72);
  v11 = *(_QWORD *)(v1 + 80);
  v12 = *(_QWORD *)(v1 + 88);
  v13 = *(_QWORD *)(v1 + 96);
  v14 = *(_QWORD *)(v1 + 104);
  v15 = *(_BYTE *)(v1 + 112);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v12;
  *(_QWORD *)(a1 + 80) = v13;
  *(_QWORD *)(a1 + 88) = v14;
  *(_BYTE *)(a1 + 96) = v15;
  return sub_1CF6B56D0(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1CF6B56D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12)
{
  uint64_t result;

  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1CF6A7B18(a11, a12);
  }
  return result;
}

void sub_1CF6B5738(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[4];
  v20 = *(_OWORD *)(a1 + 5);
  v21 = *((_OWORD *)a1 + 1);
  v5 = a1[7];
  v19 = *((_OWORD *)a1 + 4);
  v6 = a1[10];
  v7 = a1[11];
  v8 = *((_BYTE *)a1 + 96);
  OUTLINED_FUNCTION_10();
  v9 = OUTLINED_FUNCTION_171();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_OWORD *)(v1 + 32) = v21;
  *(_QWORD *)(v1 + 48) = v4;
  *(_OWORD *)(v1 + 56) = v20;
  *(_QWORD *)(v1 + 72) = v5;
  *(_OWORD *)(v1 + 80) = v19;
  *(_QWORD *)(v1 + 96) = v6;
  *(_QWORD *)(v1 + 104) = v7;
  *(_BYTE *)(v1 + 112) = v8;
  OUTLINED_FUNCTION_258(v10, v11, v12, v13, v14, v15, v16, v17, v18, v9);
  sub_1CF6B54F8();
  OUTLINED_FUNCTION_169();
}

void sub_1CF6B57D0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B5808(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    sub_1CF6B54F8();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B5834(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1CF6B5890((uint64_t)v1);
}

void sub_1CF6B5860()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(id *)(v0 + 120);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B5890(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  OUTLINED_FUNCTION_10();
  v3 = *(void **)(v1 + 120);
  *(_QWORD *)(v1 + 120) = a1;

  OUTLINED_FUNCTION_26();
}

void sub_1CF6B58C8()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

double sub_1CF6B58FC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;
  char v8;

  sub_1CF6918B8((uint64_t)v6);
  v2 = v7;
  v3 = v8;
  result = *(double *)v6;
  v5 = v6[1];
  *(_OWORD *)a1 = v6[0];
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 32) = v2;
  *(_BYTE *)(a1 + 40) = v3;
  return result;
}

void sub_1CF6B5944(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6[5];
  char v7;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_BYTE *)(a1 + 40);
  v6[0] = *(_QWORD *)a1;
  v6[1] = v1;
  v6[2] = v2;
  v6[3] = v3;
  v6[4] = v4;
  v7 = v5;
  sub_1CF68EA18(v6[0], v1, v2, v3, v4, v5, (uint64_t (*)(void))sub_1CF6A3AE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6A7B18, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6934BC);
  sub_1CF691788(v6);
}

uint64_t sub_1CF6B59B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[27];
  v2 = v0[28];
  OUTLINED_FUNCTION_116_0(v0 + 24);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

double sub_1CF6B59F8@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  sub_1CF6B5A68(&v3);
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

void sub_1CF6B5A30(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3[2];

  v2 = *a1;
  v1 = a1[1];
  v3[0] = v2;
  v3[1] = v1;
  swift_bridgeObjectRetain();
  sub_1CF6B5A9C(v3);
}

void sub_1CF6B5A68(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_2_0();
  v3 = *(_QWORD *)(v1 + 184);
  *a1 = *(_QWORD *)(v1 + 176);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B5A9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  OUTLINED_FUNCTION_10();
  *(_QWORD *)(v1 + 176) = v2;
  *(_QWORD *)(v1 + 184) = v3;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5();
}

void sub_1CF6B5AD8()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6B5B0C()
{
  _QWORD *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t inited;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  __int128 v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v1 = v0;
  v2 = v0 + 24;
  v3 = v0[27];
  v4 = v0[28];
  OUTLINED_FUNCTION_332(v0 + 24);
  v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v55 = v5;
  sub_1CF6B5658((uint64_t)&v43);
  v6 = v46;
  if (v46)
  {
    v7 = v50;
    v40 = v49;
    v8 = v43;
    v9 = v44;
    v10 = v45;
    v41 = v47;
    v42 = v48;
    v39 = v51;
    v11 = v52;
    v12 = v53;
    OUTLINED_FUNCTION_26_2();
    v38 = v12;
    v13 = v40;
    sub_1CF694020(v8, v9, v10, v6, v41, v42, v40, v7, v39, *((uint64_t *)&v39 + 1), v11, v38);
  }
  else
  {
    OUTLINED_FUNCTION_2_0();
    v15 = (void *)v1[15];
    if (!v15)
      goto LABEL_10;
    v16 = v15;
    v13 = CUPairedPeer.udid.getter();
    v7 = v17;

    if (!v7)
    {
      v13 = 0;
      goto LABEL_11;
    }
  }
  v14 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0)
    v14 = v13 & 0xFFFFFFFFFFFFLL;
  if (!v14)
  {
    OUTLINED_FUNCTION_19();
LABEL_10:
    v13 = 0;
    v7 = 0;
  }
LABEL_11:
  v18 = v1[27];
  v19 = v1[28];
  __swift_project_boxed_opaque_existential_0Tm(v2, v18);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v19 + 64))(&v43, v18, v19);
  v20 = v46;
  if (v46)
  {
    v21 = v47;
    v22 = OUTLINED_FUNCTION_116_0(&v43);
    (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
    OUTLINED_FUNCTION_251();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v43);
  }
  else
  {
    sub_1CF6A4E24((uint64_t)&v43, &qword_1ED8F7E60);
    v22 = 0;
    v21 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EF8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CF743C80;
  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 48) = v22;
  *(_QWORD *)(inited + 56) = v21;
  sub_1CF6B5A68(&v43);
  if (v44)
  {
    OUTLINED_FUNCTION_275();
    sub_1CF73EF58();
    OUTLINED_FUNCTION_269();
    v24 = 0x5F6E6F6363;
    v25 = 0xE500000000000000;
  }
  else
  {
    v24 = 0;
    v25 = 0;
  }
  *(_QWORD *)(inited + 64) = v24;
  *(_QWORD *)(inited + 72) = v25;
  if (*(_QWORD *)(inited + 40))
  {
    v26 = OUTLINED_FUNCTION_6_3();
    v29 = OUTLINED_FUNCTION_226(v26, v27, v28, MEMORY[0x1E0DEE9D8]);
    v30 = *((_QWORD *)v29 + 3);
    if (*((_QWORD *)v29 + 2) >= v30 >> 1)
      v29 = OUTLINED_FUNCTION_72_1(v30);
    OUTLINED_FUNCTION_242();
  }
  else
  {
    v29 = (char *)MEMORY[0x1E0DEE9D8];
  }
  if (*(_QWORD *)(inited + 56))
  {
    OUTLINED_FUNCTION_6_3();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = OUTLINED_FUNCTION_105_0(0, *((_QWORD *)v29 + 2) + 1);
    v31 = *((_QWORD *)v29 + 3);
    if (*((_QWORD *)v29 + 2) >= v31 >> 1)
      v29 = OUTLINED_FUNCTION_72_1(v31);
    OUTLINED_FUNCTION_242();
  }
  if (*(_QWORD *)(inited + 72))
  {
    OUTLINED_FUNCTION_6_3();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v29 = OUTLINED_FUNCTION_105_0(0, *((_QWORD *)v29 + 2) + 1);
    v32 = *((_QWORD *)v29 + 3);
    if (*((_QWORD *)v29 + 2) >= v32 >> 1)
      v29 = OUTLINED_FUNCTION_72_1(v32);
    OUTLINED_FUNCTION_242();
  }
  OUTLINED_FUNCTION_3_7();
  v43 = (uint64_t)v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7E90);
  sub_1CF6CA380(&qword_1ED8F7E98, &qword_1ED8F7E90);
  v33 = sub_1CF73EE74();
  v35 = v34;
  OUTLINED_FUNCTION_11();
  v36 = HIBYTE(v35) & 0xF;
  if ((v35 & 0x2000000000000000) == 0)
    v36 = v33 & 0xFFFFFFFFFFFFLL;
  if (v36)
  {
    v43 = 10272;
    v44 = 0xE200000000000000;
    OUTLINED_FUNCTION_304();
    sub_1CF73EF58();
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_125_0();
    sub_1CF73EF58();
  }
  OUTLINED_FUNCTION_3_7();
  return v54;
}

void ControlChannelConnection.transport.getter(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_1CF68CE44(v1 + 192, a1);
}

id ControlChannelConnection.queue.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 232);
}

void ControlChannelConnection.options.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 240);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(v1 + 244);
  *(_DWORD *)a1 = v2;
}

void sub_1CF6B5F20(uint64_t (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();

  sub_1CF6B6020();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_1CF6CAFA8;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)())v2;
}

void sub_1CF6B5F84(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
  }
  sub_1CF6A3AE0(v1);
  sub_1CF693B60();
}

void sub_1CF6B6004(void (*a1)(void))
{
  a1();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B6020()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B604C()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B6080(void (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();

  sub_1CF6B6164();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_1CF6CABCC;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (void (*)())v2;
}

void sub_1CF6B60E4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
  }
  sub_1CF6A3AE0(v1);
  sub_1CF693B9C();
}

void sub_1CF6B6164()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6190()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B61C4(void (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();

  sub_1CF6B62A8();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_1CF6CABAC;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (void (*)())v2;
}

void sub_1CF6B6228(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
  }
  sub_1CF6A3AE0(v1);
  sub_1CF6B62D4();
}

void sub_1CF6B62A8()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B62D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_10();
  v3 = *(_QWORD *)(v1 + 280);
  *(_QWORD *)(v1 + 280) = v2;
  *(_QWORD *)(v1 + 288) = v0;
  sub_1CF693EC8(v3);
  OUTLINED_FUNCTION_5();
}

void sub_1CF6B6310()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B6344(void (**a1)()@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)();

  sub_1CF6B6428();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_1CF6CAFA0;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (void (*)())v2;
}

void sub_1CF6B63A8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
  }
  sub_1CF6A3AE0(v1);
  sub_1CF6B6454();
}

void sub_1CF6B6428()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_10();
  v3 = *(_QWORD *)(v1 + 296);
  *(_QWORD *)(v1 + 296) = v2;
  *(_QWORD *)(v1 + 304) = v0;
  sub_1CF693EC8(v3);
  OUTLINED_FUNCTION_5();
}

void sub_1CF6B6490()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B64C4()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_3_2();
}

void sub_1CF6B64E8(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10();
  *(_BYTE *)(v1 + 312) = a1;
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6518()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B654C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_147(v0, v1, (uint64_t *)&unk_1ED8F7120);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6584()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_144(v0, v1, (uint64_t *)&unk_1ED8F7120);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B65C4()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B65F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(_BYTE *))
{
  _BYTE v7[40];

  sub_1CF6C6F4C(a1, (uint64_t)v7, a5);
  a6(v7);
  OUTLINED_FUNCTION_79_0();
}

void sub_1CF6B6634()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_147(v0, v1, &qword_1ED8F7118);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B666C()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B66A0(uint64_t a1)
{
  _BYTE v1[40];

  sub_1CF68CE44(a1, (uint64_t)v1);
  sub_1CF6B6710();
}

void sub_1CF6B66D8(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  sub_1CF68CE44(v1 + 400, a1);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6710()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 400);
  v1 = (__int128 *)OUTLINED_FUNCTION_69();
  sub_1CF68C850(v1, v2);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6754()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B6788()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_147(v0, v1, &qword_1ED8F68B0);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B67C0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_144(v0, v1, &qword_1ED8F68B0);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6800()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B6834()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_147(v0, v1, &qword_1ED8F7CB8);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B686C()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_144(v0, v1, &qword_1ED8F7CB8);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B68AC()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B68E0()
{
  _QWORD *v0;
  int v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_185();
  if (v2 || (*(_QWORD *)&v1 & 0xFF0000) == 0x20000)
  {
    v3 = v0[27];
    v4 = v0[28];
    OUTLINED_FUNCTION_116_0(v0 + 24);
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  }
  OUTLINED_FUNCTION_40();
}

uint64_t sub_1CF6B6940()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions);
  if (v1 == 2)
    return 2;
  else
    return v1 & 1;
}

uint64_t sub_1CF6B6960()
{
  uint64_t v0;

  if (*(_DWORD *)(v0
                                  + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions) == 2)
    return 2;
  else
    return HIBYTE(*(_DWORD *)(v0
                                             + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions));
}

void sub_1CF6B6984()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_3_2();
}

void sub_1CF6B69CC()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_3_2();
}

void sub_1CF6B6A14()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(_QWORD *)(v0 + 528);
  if (v1
    && *(uint64_t *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) >= 21)
  {
    OUTLINED_FUNCTION_185();
  }
  OUTLINED_FUNCTION_3_2();
}

void sub_1CF6B6A70()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_3_2();
}

void sub_1CF6B6A94(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10();
  *(_BYTE *)(v1 + 520) = a1;
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6AC4()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B6AF8(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1CF6B6B54((uint64_t)v1);
}

void sub_1CF6B6B24()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(id *)(v0 + 528);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6B54(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  OUTLINED_FUNCTION_10();
  v3 = *(void **)(v1 + 528);
  *(_QWORD *)(v1 + 528) = a1;

  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6B8C()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B6BC0(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  sub_1CF6B6C1C((uint64_t)v1);
}

void sub_1CF6B6BEC()
{
  uint64_t v0;
  id v1;

  OUTLINED_FUNCTION_2_0();
  v1 = *(id *)(v0 + 536);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6C1C(uint64_t a1)
{
  uint64_t v1;
  void *v3;

  OUTLINED_FUNCTION_10();
  v3 = *(void **)(v1 + 536);
  *(_QWORD *)(v1 + 536) = a1;

  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6C54()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6B6C88(uint64_t (**a1)(uint64_t *a1)@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);

  sub_1CF6B6E54();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_1CF6CABC4;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = (uint64_t (*)(uint64_t *))v2;
}

uint64_t sub_1CF6B6CEC(uint64_t *a1, void (*a2)(void (*)(), uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  swift_retain();
  a2(sub_1CF6A3AF8, v5);
  return swift_release();
}

void sub_1CF6B6D58(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
  }
  sub_1CF6A3AE0(v1);
  sub_1CF6B6E84();
}

uint64_t sub_1CF6B6DD8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  uint64_t v6;
  _QWORD v8[2];

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v8[0] = sub_1CF6CABAC;
  v8[1] = v6;
  swift_retain();
  a3(v8);
  return swift_release();
}

void sub_1CF6B6E54()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6B6E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_10();
  v3 = *(_QWORD *)(v1 + 544);
  *(_QWORD *)(v1 + 544) = v2;
  *(_QWORD *)(v1 + 552) = v0;
  sub_1CF693EC8(v3);
  OUTLINED_FUNCTION_5();
}

void sub_1CF6B6EC8()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

uint64_t ControlChannelConnection.maxReconnectionAttempts.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 560);
}

uint64_t ControlChannelConnection.startedAt.getter()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  sub_1CF73EDC0();
  v0 = OUTLINED_FUNCTION_69();
  return v1(v0);
}

uint64_t sub_1CF6B6F44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData);
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData + 8);
  *v3 = a1;
  v3[1] = a2;
  return sub_1CF693FE0(v4, v5);
}

BOOL sub_1CF6B6F64()
{
  __int16 v0;

  OUTLINED_FUNCTION_68_1();
  return (v0 & 0x8000) == 0;
}

void sub_1CF6B6F7C(void **a1)
{
  void *v1;

  v1 = *a1;
  sub_1CF68C660(v1);
  sub_1CF69254C(&v1);
}

void sub_1CF6B6FB4()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

uint64_t ControlChannelConnection.__allocating_init(transport:queue:options:maxReconnectionAttempts:pairingDataStorageProvider:peerWireProtocolVersion:)(__int128 *a1, uint64_t a2, int *a3, uint64_t a4, __int128 *a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  ControlChannelConnection.init(transport:queue:options:maxReconnectionAttempts:pairingDataStorageProvider:peerWireProtocolVersion:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

void sub_1CF6B706C()
{
  uint64_t v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10();
  *(_BYTE *)(v0 + 520) = 1;
  OUTLINED_FUNCTION_2_0();
  v1 = *(void (**)(uint64_t))(v0 + 248);
  if (v1)
  {
    v2 = OUTLINED_FUNCTION_2_4();
    v1(v2);
    v3 = OUTLINED_FUNCTION_69();
    sub_1CF693EC8(v3);
  }
  OUTLINED_FUNCTION_79_0();
}

void sub_1CF6B70C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  NSObject *v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  Swift::String v45;
  void *v46;
  uint64_t v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  id v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int8x16_t v82;
  int8x16_t v83;
  int8x16_t v84;
  int8x16_t v85;
  int8x16_t v86;
  uint64_t v87;
  BOOL v88;
  BOOL v89;
  BOOL v90;
  uint64_t v91;
  int v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unsigned __int8 v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  void *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  char v181;
  unsigned __int8 v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t *v227;
  const void *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  void *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unsigned __int8 v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t *v290;
  void (*v291)(uint64_t *);
  void (*v292)(uint64_t *);
  uint64_t v293;
  uint64_t v294;
  os_log_type_t v295;
  NSObject *v296;
  os_log_type_t v297;
  _BOOL4 v298;
  uint8_t *v299;
  uint64_t v300;
  unint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  os_log_type_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  uint64_t v559;
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  uint64_t v572;
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  uint64_t v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  uint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  uint64_t v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  uint64_t v698;
  uint64_t v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  unint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  unint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  uint64_t v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  uint64_t v736;
  uint64_t v737;
  uint64_t v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  id v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  id v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  NSObject *v776;
  uint64_t v777;
  uint64_t v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  uint64_t v801;
  uint64_t v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  uint64_t v828;
  uint64_t v829;
  uint64_t v830;
  uint64_t v831;
  uint64_t v832;
  os_log_type_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t v870;
  uint64_t v871;
  uint64_t v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  uint64_t v880;
  uint64_t v881;
  uint64_t v882;
  uint64_t v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  uint64_t v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  uint64_t v904;
  uint64_t v905;
  uint64_t v906;
  os_log_t log;
  os_log_t logb;
  os_log_t logc;
  os_log_t logd;
  os_log_t loge;
  os_log_t logf;
  os_log_t logg;
  os_log_t logh;
  os_log_t logi;
  os_log_t loga;
  os_log_t logj;
  os_log_t logk;
  os_log_t logl;
  os_log_t logm;
  os_log_t logn;
  os_log_t logo;
  os_log_t logp;
  os_log_t logq;
  os_log_t logr;
  os_log_t logs;
  uint64_t type;
  uint64_t typed;
  uint64_t typee;
  uint64_t typef;
  uint64_t typea;
  uint64_t typeg;
  uint64_t typeh;
  uint64_t typei;
  uint64_t typej;
  NSObject *typek;
  uint64_t typel;
  uint64_t typeb;
  uint64_t typem;
  uint64_t typen;
  uint64_t typeo;
  uint64_t typep;
  uint64_t typeq;
  uint64_t typec;
  uint64_t typer;
  uint64_t types;
  uint64_t typet;
  uint64_t typeu;
  os_log_type_t typev;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  uint64_t v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  uint64_t v974;
  uint64_t v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  uint64_t v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  uint64_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  uint64_t v1010;
  uint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  uint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  uint64_t v1021;
  uint64_t v1022;
  uint64_t v1023;
  uint64_t v1024;
  uint64_t v1025;
  uint64_t v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  uint64_t v1036;
  uint64_t v1037;
  uint64_t v1038;
  uint64_t v1039;
  uint64_t v1040;
  uint64_t v1041;
  uint64_t v1042;
  uint64_t v1043;
  os_log_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  uint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  _QWORD v1058[4];
  char v1059;
  __n128 __dst[9];
  _BYTE v1061[136];
  _BYTE v1062[136];
  _BYTE v1063[144];

  OUTLINED_FUNCTION_2();
  v2 = v1;
  v3 = v0;
  memcpy(__dst, v4, 0x92uLL);
  sub_1CF6CA678(&__dst[1], v1061);
  sub_1CF6CA678(v1061, v1062);
  if (sub_1CF6CA6B4((uint64_t)v1062) != 1)
  {
    v50 = sub_1CF6CA6C0((uint64_t)v1062);
    v51 = *(void **)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream);
    if (v51)
    {
      OUTLINED_FUNCTION_131(v50, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
      v52 = v51;
      OUTLINED_FUNCTION_304();
      sub_1CF6B80C8();
      if (!v1)
      {

        OUTLINED_FUNCTION_131(v59, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
        OUTLINED_FUNCTION_197(v60, v61, v62, v63, v64, v65, v66, v67, v302, v323, v344, v365, v386, v407, v428, v448, v470, v490, v511,
          v531,
          v551,
          v572,
          v593,
          v614,
          v635,
          v656,
          v677,
          v698,
          v719,
          v740,
          v761,
          v783,
          v804,
          v824,
          v846,
          v866,
          v887,
          (uint64_t)log,
          type,
          v950,
          v971,
          v993,
          v1014,
          v1026,
          v1038);
        v68 = v1058;
        goto LABEL_50;
      }

    }
    else
    {
      v1041 = MEMORY[0x1E0DEA968];
      OUTLINED_FUNCTION_75_0();
      v1038 = v56;
      v1039 = v57;
      LOBYTE(v1042) = 1;
      sub_1CF692E68();
      v58 = OUTLINED_FUNCTION_105();
      LOBYTE(v1058[0]) = 1;
      OUTLINED_FUNCTION_131(v58, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
      ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v1058);
      OUTLINED_FUNCTION_329();
      sub_1CF692EA4((uint64_t)&v1038);
      OUTLINED_FUNCTION_194();
      v53 = swift_willThrow();
    }
    OUTLINED_FUNCTION_131(v53, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
    goto LABEL_69;
  }
  v5 = (const void *)sub_1CF6CA6C0((uint64_t)v1062);
  v6 = (uint64_t)sub_1CF6C8C64(v5, &v1038);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream))
  {
LABEL_3:
    OUTLINED_FUNCTION_131(v6, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
    v14 = sub_1CF73F0CC();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v15 = qword_1ED8F78F0;
    if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v14))
    {
      OUTLINED_FUNCTION_26_3(__dst, (uint64_t (*)(void))sub_1CF6934BC);
      OUTLINED_FUNCTION_158();
      OUTLINED_FUNCTION_26_3(__dst, (uint64_t (*)(void))sub_1CF6934BC);
      OUTLINED_FUNCTION_158();
      v972 = v2;
      v16 = (uint8_t *)OUTLINED_FUNCTION_4_7();
      v1057 = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v16 = 136446466;
      v17 = sub_1CF6B5B0C();
      OUTLINED_FUNCTION_382(v17, v18, v19, v20, v21, v22, v23, v24, v302, v323, v344, v365, v386, v407, v428, v448, v470, v490, v511,
        v531,
        v551,
        v572,
        v593,
        v614,
        v635,
        v656,
        v677,
        v698,
        v719,
        v740,
        v761,
        v783,
        v804,
        v824,
        v846,
        v866,
        v887,
        (uint64_t)log,
        type,
        v950,
        v972,
        v993,
        v1014,
        v1026,
        v1038,
        v1039,
        v1040,
        v1041,
        v1042,
        v1043,
        (uint64_t)v1044,
        v1045,
        v1046,
        v1047,
        v1048,
        v1049,
        v1050,
        v1051,
        v1052,
        v1053,
        v1054,
        v1055,
        v1056);
      v1058[0] = v25;
      OUTLINED_FUNCTION_321();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_244();
      OUTLINED_FUNCTION_197(v26, v27, v28, v29, v30, v31, v32, v33, v303, v324, v345, v366, v387, v408, v429, v449, v471, v491, v512,
        v532,
        v552,
        v573,
        v594,
        v615,
        v636,
        v657,
        v678,
        v699,
        v720,
        v741,
        v762,
        v784,
        v805,
        v825,
        v847,
        v867,
        v888,
        (uint64_t)logb,
        typed,
        v951,
        v973,
        v994,
        v1015,
        v1027,
        v1038);
      sub_1CF6CA630(__dst, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
      v34 = sub_1CF73EF10();
      OUTLINED_FUNCTION_382(v34, v35, v36, v37, v38, v39, v40, v41, v304, v325, v346, v367, v388, v409, v430, v450, v472, v492, v513,
        v533,
        v553,
        v574,
        v595,
        v616,
        v637,
        v658,
        v679,
        v700,
        v721,
        v742,
        v763,
        v785,
        v806,
        v826,
        v848,
        v868,
        v889,
        (uint64_t)logc,
        typee,
        v952,
        v974,
        v995,
        v1016,
        v1028,
        v1038,
        v1039,
        v1040,
        v1041,
        v1042,
        v1043,
        (uint64_t)v1044,
        v1045,
        v1046,
        v1047,
        v1048,
        v1049,
        v1050,
        v1051,
        v1052,
        v1053,
        v1054,
        v1055,
        v1056);
      v1058[0] = v42;
      OUTLINED_FUNCTION_321();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_165();
      OUTLINED_FUNCTION_165();
      _os_log_impl(&dword_1CF67E000, v15, v14, "%{public}s: Rejecting unencrypted message from peer since we have completed auth or do not accept this message type pre-auth: %s", v16, 0x16u);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0_1();
    }
    v1058[3] = MEMORY[0x1E0DEA968];
    OUTLINED_FUNCTION_75_0();
    v1058[0] = v43;
    v1058[1] = v44;
    v1059 = 1;
    LOBYTE(v1057) = 3;
    v45 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v1057);
    sub_1CF692EA4((uint64_t)v1058);
    sub_1CF692E68();
    v46 = (void *)OUTLINED_FUNCTION_105();
    *(_BYTE *)v47 = 3;
    *(Swift::String *)(v47 + 8) = v45;
    *(_OWORD *)(v47 + 24) = 0u;
    *(_OWORD *)(v47 + 40) = 0u;
    *(_QWORD *)(v47 + 56) = 0;
    OUTLINED_FUNCTION_8_2();
    v48 = 0;
    sub_1CF6926B8(v46);
    OUTLINED_FUNCTION_131(v49, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();

    goto LABEL_69;
  }
  OUTLINED_FUNCTION_197(v6, v7, v8, v9, v10, v11, v12, v13, v302, v323, v344, v365, v386, v407, v428, v448, v470, v490, v511,
    v531,
    v551,
    v572,
    v593,
    v614,
    v635,
    v656,
    v677,
    v698,
    v719,
    v740,
    v761,
    v783,
    v804,
    v824,
    v846,
    v866,
    v887,
    (uint64_t)log,
    type,
    v950,
    v971,
    v993,
    v1014,
    v1026,
    v1038);
  v54 = sub_1CF6CA6D0((uint64_t)v1058);
  if (v54)
  {
    if (v54 == 1)
    {
      v6 = OUTLINED_FUNCTION_245();
      v55 = (*(_QWORD *)(v6 + 8) >> 60) & 3;
      if ((_DWORD)v55)
      {
        if ((_DWORD)v55 != 3)
          goto LABEL_3;
        if (*(_OWORD *)(v6 + 16) != 0)
          goto LABEL_3;
        OUTLINED_FUNCTION_309();
        if (!v88)
          goto LABEL_3;
      }
    }
    else
    {
      v91 = OUTLINED_FUNCTION_245();
      v6 = sub_1CF6C9F7C(v91 + 8);
      if (v6 > 7)
        goto LABEL_3;
      OUTLINED_FUNCTION_312();
      if (v88)
        goto LABEL_3;
    }
  }
  else
  {
    v6 = OUTLINED_FUNCTION_245();
    v69 = *(_QWORD *)(v6 + 72);
    if (v69 >> 62 == 3)
    {
      v70 = *(unsigned __int8 *)(v6 + 96);
      v72 = *(_QWORD *)(v6 + 80);
      v71 = *(_QWORD *)(v6 + 88);
      v74 = *(_QWORD *)(v6 + 56);
      v73 = *(_QWORD *)(v6 + 64);
      v76 = *(_QWORD *)(v6 + 40);
      v75 = *(_QWORD *)(v6 + 48);
      v77 = *(_QWORD *)(v6 + 24);
      v78 = *(_QWORD *)(v6 + 32);
      v79 = *(_QWORD *)v6;
      v81 = v6 + 8;
      v6 = *(_QWORD *)(v6 + 8);
      v80 = *(_QWORD *)(v81 + 8);
      if (v70)
        goto LABEL_25;
      if (v69 != 0xC000000000000000)
        goto LABEL_25;
      v82.i64[0] = v75;
      v82.i64[1] = v76;
      v83.i64[0] = v71;
      v83.i64[1] = v72;
      v84.i64[0] = v78;
      v84.i64[1] = v77;
      v85.i64[0] = v73;
      v85.i64[1] = v74;
      v86 = vorrq_s8(vorrq_s8(v83, v82), vorrq_s8(v85, v84));
      if (v79 | *(_QWORD *)&vorr_s8(*(int8x8_t *)v86.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v86, v86, 8uLL)) | v6 | v80)
      {
LABEL_25:
        v87 = v72 | v71 | v73 | v74 | v75 | v76 | v78 | v77 | v80 | v6;
        if (v70 || ((OUTLINED_FUNCTION_301(), v88) ? (v88 = v79 == 1) : (v88 = 0), !v88 || v87))
        {
          if (v70 || ((OUTLINED_FUNCTION_301(), v88) ? (v89 = v79 == 2) : (v89 = 0), !v89 || v87))
          {
            if (v70)
              goto LABEL_3;
            v90 = v69 == 0xC000000000000000 && v79 == 3;
            if (!v90 || v87)
              goto LABEL_3;
          }
        }
      }
    }
  }
  OUTLINED_FUNCTION_131(v6, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  v68 = &v1038;
LABEL_50:
  sub_1CF6C8C64(v68, v1063);
  sub_1CF6C8C64(v1063, v1058);
  v92 = sub_1CF6CA6D0((uint64_t)v1058);
  if (!v92)
  {
    v158 = sub_1CF6CA7A8((uint64_t)v1058);
    v159 = *(_QWORD *)v158;
    v160 = *(_QWORD *)(v158 + 8);
    v161 = *(_QWORD *)(v158 + 16);
    v162 = *(_QWORD *)(v158 + 24);
    HIDWORD(v783) = *(unsigned __int8 *)(v158 + 96);
    v170 = OUTLINED_FUNCTION_189(v158, v163, v164, v165, v166, v167, v168, v169, v302, v323, v344, v365, v386, v407, v428, v448, v470, v490, v511,
             v531,
             v551,
             v572,
             v593,
             v614,
             v635,
             v656,
             v677,
             v698,
             v719,
             v740,
             v761,
             v783,
             *(_QWORD *)(v158 + 88),
             *(_QWORD *)(v158 + 80),
             *(_QWORD *)(v158 + 72),
             *(_QWORD *)(v158 + 64),
             *(_QWORD *)(v158 + 56),
             *(_QWORD *)(v158 + 48),
             *(_QWORD *)(v158 + 40),
             v3,
             *(_QWORD *)(v158 + 32),
             v993,
             v1014,
             v1026,
             v1038,
             v1039,
             v1040,
             v1041,
             v1042,
             v1043,
             (uint64_t)v1044,
             v1045,
             v1046,
             v1047,
             v1048,
             v1049,
             v1050,
             v1051,
             v1052,
             v1053,
             v1054,
             v1055,
             v1056);
    v178 = OUTLINED_FUNCTION_316((uint64_t)v170, v171, v172, v173, v174, v175, v176, v177, v311, v332, v353, v374, v395, v416, v437, v457, v479, v499, v520,
             v540,
             v560,
             v581,
             v602,
             v623,
             v644,
             v665,
             v686,
             v707,
             v728,
             v749,
             v770,
             v792,
             v812,
             v834,
             v854,
             v875,
             v895,
             (uint64_t)logi,
             typel,
             v959,
             v982,
             v1002,
             v1020,
             v1032,
             v1038,
             v1039,
             v1040,
             v1041,
             v1042,
             v1043,
             (uint64_t)v1044,
             v1045,
             v1046,
             v1047,
             v1048,
             v1049,
             v1050,
             v1051,
             v1052,
             v1053,
             v1054,
             v1055,
             v1056);
    v180 = *(_QWORD *)(v178 + 80);
    v179 = *(_QWORD *)(v178 + 88);
    v181 = *(_BYTE *)(v178 + 96);
    LOBYTE(v396) = v181;
    v561 = *(_QWORD *)(v178 + 72);
    v582 = *(_QWORD *)(v178 + 64);
    v729 = *(_QWORD *)(v178 + 8);
    v750 = *(id *)v178;
    v687 = *(_QWORD *)(v178 + 24);
    v708 = *(_QWORD *)(v178 + 16);
    v645 = *(_QWORD *)(v178 + 40);
    v666 = *(_QWORD *)(v178 + 32);
    v603 = *(_QWORD *)(v178 + 56);
    v624 = *(_QWORD *)(v178 + 48);
    sub_1CF6CA4D0(*(id *)v178, v729, v708, v687, v666, v645, v624, v603, v582, v561, v180, v179);
    v182 = sub_1CF73F0E4();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v771 = qword_1ED8F78F0;
    if (OUTLINED_FUNCTION_289(qword_1ED8F78F0))
    {
      HIDWORD(v458) = v182;
      v500 = v161;
      OUTLINED_FUNCTION_50_1();
      OUTLINED_FUNCTION_29_3();
      swift_retain();
      OUTLINED_FUNCTION_50_1();
      OUTLINED_FUNCTION_29_3();
      swift_retain();
      v183 = OUTLINED_FUNCTION_4_7();
      v1003 = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v183 = 136446722;
      v184 = sub_1CF6B5B0C();
      OUTLINED_FUNCTION_86_0(v184, v185, v186, v187, v188, v189, v190, v191, v312, v333, v354, v375, v396, v417, v1003, v458, v162, v500, v160,
        v159,
        v561,
        v582,
        v603,
        v624,
        v645,
        v666,
        v687,
        v708,
        v729,
        (uint64_t)v750,
        v771,
        v793,
        v813,
        v835,
        v855,
        v876,
        v896,
        (uint64_t)loga,
        typeb,
        v960,
        v983,
        v1003);
      OUTLINED_FUNCTION_70_1();
      OUTLINED_FUNCTION_13_0();
      v192 = OUTLINED_FUNCTION_11_3();
      *(_WORD *)(v183 + 12) = 2082;
      OUTLINED_FUNCTION_100_0(v192, v193, v194, v195, v196, v197, v198, v199, v313, v334, v355, v376, v397, v418, v438, v459, v480, v501, v521,
        v541,
        v562,
        v583,
        v604,
        v625,
        v646,
        v667,
        v688,
        v709,
        v730,
        v751,
        v772,
        v794,
        v814,
        v836,
        v856,
        v877,
        v897,
        (uint64_t)logj,
        typem,
        v961,
        v984,
        v1004,
        v1021,
        v1033,
        v1038);
      v200 = OUTLINED_FUNCTION_307();
      OUTLINED_FUNCTION_86_0(v200, v201, v202, v203, v204, v205, v206, v207, v314, v335, v356, v377, v398, v419, v439, v460, v481, v502, v522,
        v542,
        v563,
        v584,
        v605,
        v626,
        v647,
        v668,
        v689,
        v710,
        v731,
        v752,
        v773,
        v795,
        v815,
        v837,
        v857,
        v878,
        v898,
        (uint64_t)logk,
        typen,
        v962,
        v985,
        v1005);
      v1038 = v208;
      OUTLINED_FUNCTION_73_2();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_26_3(__dst, (uint64_t (*)(void))sub_1CF6933C0);
      OUTLINED_FUNCTION_26_3(__dst, (uint64_t (*)(void))sub_1CF6933C0);
      *(_WORD *)(v183 + 22) = 2080;
      OUTLINED_FUNCTION_188(v209, v210, v211, v212, v213, v214, v215, v216, v315, v336, v357, v378, v399, v420, v440, v461, v482, v503, v523,
        v543,
        v564,
        v585,
        v606,
        v627,
        v648,
        v669,
        v690,
        v711,
        v732,
        v753,
        v774,
        v796,
        v816,
        v838,
        v858,
        v879,
        v899,
        (uint64_t)logl,
        typeo,
        v963,
        v986,
        v1006,
        v1022,
        v1034,
        v1038);
      LOBYTE(v400) = v181;
      sub_1CF6CA4D0(v754, v733, v712, v691, v670, v649, v628, v607, v586, v565, v180, v179);
      v217 = OUTLINED_FUNCTION_320();
      OUTLINED_FUNCTION_101_0(v217, v218, v219, v220, v221, v222, v223, v224, v316, v337, v358, v379, v400, v421, v441, v462, v483, v504, v524,
        v544,
        v565,
        v586,
        v607,
        v628,
        v649,
        v670,
        v691,
        v712,
        v733,
        (uint64_t)v754,
        v775,
        v797,
        v817,
        v839,
        v859,
        v880,
        v900,
        (uint64_t)logm,
        typep,
        v964,
        v987,
        v1007);
      OUTLINED_FUNCTION_148();
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_21_3();
      v225 = OUTLINED_FUNCTION_149();
      sub_1CF6CA6DC(v225);
      OUTLINED_FUNCTION_288(&dword_1CF67E000, v776, v469, "%{public}s: Received event (id=%{public}s from peer: %s");
      OUTLINED_FUNCTION_371();
      OUTLINED_FUNCTION_0_1();
    }
    v1038 = v159;
    v1039 = v160;
    v1040 = v161;
    v1041 = v162;
    v1042 = v983;
    v1043 = typeb;
    v1044 = loga;
    v1045 = v896;
    v1046 = v876;
    v1047 = v855;
    v1048 = v835;
    v1049 = v813;
    LOBYTE(v1050) = BYTE4(v793);
    sub_1CF6B8A44((uint64_t)&v1038);
    OUTLINED_FUNCTION_21_3();
    v226 = OUTLINED_FUNCTION_149();
    goto LABEL_68;
  }
  if (v92 == 1)
  {
    v93 = (uint64_t *)sub_1CF6CA7A8((uint64_t)v1058);
    v94 = *v93;
    v95 = v93[1];
    v96 = v93[2];
    v97 = v93[3];
    v105 = OUTLINED_FUNCTION_189((uint64_t)v93, v98, v99, v100, v101, v102, v103, v104, v302, v323, v344, v365, v386, v407, v428, v448, v470, v490, v511,
             v531,
             v551,
             v572,
             v593,
             v614,
             v635,
             v656,
             v677,
             v698,
             v719,
             v740,
             v761,
             v783,
             v804,
             v824,
             v846,
             v866,
             v887,
             (uint64_t)log,
             type,
             v3,
             v2,
             v993,
             v1014,
             v1026,
             v1038,
             v1039,
             v1040,
             v1041,
             v1042,
             v1043,
             (uint64_t)v1044,
             v1045,
             v1046,
             v1047,
             v1048,
             v1049,
             v1050,
             v1051,
             v1052,
             v1053,
             v1054,
             v1055,
             v1056);
    OUTLINED_FUNCTION_316((uint64_t)v105, v106, v107, v108, v109, v110, v111, v112, v305, v326, v347, v368, v389, v410, v431, v451, v473, v493, v514,
      v534,
      v554,
      v575,
      v596,
      v617,
      v638,
      v659,
      v680,
      v701,
      v722,
      v743,
      v764,
      v786,
      v807,
      v827,
      v849,
      v869,
      v890,
      (uint64_t)logd,
      typef,
      v953,
      v976,
      v996,
      v1017,
      v1029,
      v1038,
      v1039,
      v1040,
      v1041,
      v1042,
      v1043,
      (uint64_t)v1044,
      v1045,
      v1046,
      v1047,
      v1048,
      v1049,
      v1050,
      v1051,
      v1052,
      v1053,
      v1054,
      v1055,
      v1056);
    OUTLINED_FUNCTION_213();
    v113 = sub_1CF73F0E4();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    typea = qword_1ED8F78F0;
    if (OUTLINED_FUNCTION_289(qword_1ED8F78F0))
    {
      LODWORD(v828) = v113;
      v870 = v96;
      OUTLINED_FUNCTION_50_1();
      OUTLINED_FUNCTION_29_3();
      OUTLINED_FUNCTION_190();
      OUTLINED_FUNCTION_50_1();
      OUTLINED_FUNCTION_29_3();
      OUTLINED_FUNCTION_190();
      v114 = OUTLINED_FUNCTION_4_7();
      v997 = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v114 = 136446722;
      v115 = sub_1CF6B5B0C();
      OUTLINED_FUNCTION_86_0(v115, v116, v117, v118, v119, v120, v121, v122, v306, v327, v348, v369, v390, v411, v432, v452, v474, v494, v515,
        v535,
        v555,
        v576,
        v597,
        v618,
        v639,
        v660,
        v681,
        v702,
        v723,
        v744,
        v765,
        v787,
        v997,
        v828,
        v97,
        v870,
        v95,
        v94,
        typea,
        v954,
        v977,
        v997);
      OUTLINED_FUNCTION_70_1();
      OUTLINED_FUNCTION_13_0();
      v123 = OUTLINED_FUNCTION_11_3();
      *(_WORD *)(v114 + 12) = 2082;
      OUTLINED_FUNCTION_100_0(v123, v124, v125, v126, v127, v128, v129, v130, v307, v328, v349, v370, v391, v412, v433, v453, v475, v495, v516,
        v536,
        v556,
        v577,
        v598,
        v619,
        v640,
        v661,
        v682,
        v703,
        v724,
        v745,
        v766,
        v788,
        v808,
        v829,
        v850,
        v871,
        v891,
        (uint64_t)loge,
        typeg,
        v955,
        v978,
        v998,
        v1018,
        v1030,
        v1038);
      v131 = OUTLINED_FUNCTION_307();
      OUTLINED_FUNCTION_86_0(v131, v132, v133, v134, v135, v136, v137, v138, v308, v329, v350, v371, v392, v413, v434, v454, v476, v496, v517,
        v537,
        v557,
        v578,
        v599,
        v620,
        v641,
        v662,
        v683,
        v704,
        v725,
        v746,
        v767,
        v789,
        v809,
        v830,
        v851,
        v872,
        v892,
        (uint64_t)logf,
        typeh,
        v956,
        v979,
        v999);
      v1038 = v139;
      OUTLINED_FUNCTION_73_2();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_26_3(__dst, (uint64_t (*)(void))sub_1CF6933C0);
      OUTLINED_FUNCTION_26_3(__dst, (uint64_t (*)(void))sub_1CF6933C0);
      *(_WORD *)(v114 + 22) = 2080;
      OUTLINED_FUNCTION_188(v140, v141, v142, v143, v144, v145, v146, v147, v309, v330, v351, v372, v393, v414, v435, v455, v477, v497, v518,
        v538,
        v558,
        v579,
        v600,
        v621,
        v642,
        v663,
        v684,
        v705,
        v726,
        v747,
        v768,
        v790,
        v810,
        v831,
        v852,
        v873,
        v893,
        (uint64_t)logg,
        typei,
        v957,
        v980,
        v1000,
        v1019,
        v1031,
        v1038);
      OUTLINED_FUNCTION_213();
      v148 = OUTLINED_FUNCTION_320();
      OUTLINED_FUNCTION_101_0(v148, v149, v150, v151, v152, v153, v154, v155, v310, v331, v352, v373, v394, v415, v436, v456, v478, v498, v519,
        v539,
        v559,
        v580,
        v601,
        v622,
        v643,
        v664,
        v685,
        v706,
        v727,
        v748,
        v769,
        v791,
        v811,
        v832,
        v853,
        v874,
        v894,
        (uint64_t)logh,
        typej,
        v958,
        v981,
        v1001);
      OUTLINED_FUNCTION_148();
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_21_3();
      v156 = OUTLINED_FUNCTION_149();
      sub_1CF6CA6DC(v156);
      OUTLINED_FUNCTION_288(&dword_1CF67E000, typek, v833, "%{public}s: Received request (id=%{public}s from peer: %s");
      OUTLINED_FUNCTION_371();
      OUTLINED_FUNCTION_0_1();
    }
    v1038 = v94;
    v1039 = v95;
    v1040 = v96;
    v1041 = v97;
    v157 = swift_allocObject();
    swift_weakInit();
    OUTLINED_FUNCTION_163();
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_163();
    OUTLINED_FUNCTION_121();
    sub_1CF6B82EC((uint64_t)&v1038, v954, v157, __dst);
    OUTLINED_FUNCTION_29_3();
    swift_release();
    sub_1CF6CA630(__dst, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
    swift_release();
    OUTLINED_FUNCTION_29_3();
    goto LABEL_69;
  }
  v227 = (uint64_t *)OUTLINED_FUNCTION_245();
  v228 = v227 + 1;
  v229 = *v227;
  v237 = OUTLINED_FUNCTION_189((uint64_t)v227, v230, v231, v232, v233, v234, v235, v236, v302, v323, v344, v365, v386, v407, v428, v448, v470, v490, v511,
           v531,
           v551,
           v572,
           v593,
           v614,
           v635,
           v656,
           v677,
           v698,
           v719,
           v740,
           v761,
           v783,
           v804,
           v824,
           v846,
           v866,
           v887,
           (uint64_t)log,
           type,
           v950,
           v975,
           v993,
           v1014,
           v1026,
           v1038,
           v1039,
           v1040,
           v1041,
           v1042,
           v1043,
           (uint64_t)v1044,
           v1045,
           v1046,
           v1047,
           v1048,
           v1049,
           v1050,
           v1051,
           v1052,
           v1053,
           v1054,
           v1055,
           v1056);
  v245 = OUTLINED_FUNCTION_316((uint64_t)v237, v238, v239, v240, v241, v242, v243, v244, v317, v338, v359, v380, v401, v422, v442, v463, v484, v505, v525,
           v545,
           v566,
           v587,
           v608,
           v629,
           v650,
           v671,
           v692,
           v713,
           v734,
           v755,
           v777,
           v798,
           v818,
           v840,
           v860,
           v881,
           v901,
           (uint64_t)logn,
           typeq,
           v965,
           v988,
           v1008,
           v1023,
           v1035,
           v1038,
           v1039,
           v1040,
           v1041,
           v1042,
           v1043,
           (uint64_t)v1044,
           v1045,
           v1046,
           v1047,
           v1048,
           v1049,
           v1050,
           v1051,
           v1052,
           v1053,
           v1054,
           v1055,
           v1056);
  sub_1CF6CA744(v245);
  v246 = sub_1CF73F0E4();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v247 = qword_1ED8F78F0;
  if (OUTLINED_FUNCTION_289(qword_1ED8F78F0))
  {
    LODWORD(typec) = v246;
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_187();
    OUTLINED_FUNCTION_158();
    v966 = v229;
    v248 = OUTLINED_FUNCTION_4_7();
    v1009 = OUTLINED_FUNCTION_4_7();
    *(_DWORD *)v248 = 136446722;
    v249 = sub_1CF6B5B0C();
    OUTLINED_FUNCTION_86_0(v249, v250, v251, v252, v253, v254, v255, v256, v318, v339, v360, v381, v402, v423, v443, v464, v485, v506, v526,
      v546,
      v567,
      v588,
      v609,
      v630,
      v651,
      v672,
      v693,
      v714,
      v735,
      v756,
      v778,
      v799,
      v819,
      v841,
      v861,
      v882,
      v902,
      v247,
      typec,
      v966,
      (uint64_t)v228,
      v1009);
    OUTLINED_FUNCTION_70_1();
    OUTLINED_FUNCTION_13_0();
    v257 = OUTLINED_FUNCTION_11_3();
    *(_WORD *)(v248 + 12) = 2082;
    OUTLINED_FUNCTION_100_0(v257, v258, v259, v260, v261, v262, v263, v264, v319, v340, v361, v382, v403, v424, v444, v465, v486, v507, v527,
      v547,
      v568,
      v589,
      v610,
      v631,
      v652,
      v673,
      v694,
      v715,
      v736,
      v757,
      v779,
      v800,
      v820,
      v842,
      v862,
      v883,
      v903,
      (uint64_t)logo,
      typer,
      v967,
      v989,
      v1010,
      v1024,
      v1036,
      v1038);
    v265 = OUTLINED_FUNCTION_307();
    OUTLINED_FUNCTION_86_0(v265, v266, v267, v268, v269, v270, v271, v272, v320, v341, v362, v383, v404, v425, v445, v466, v487, v508, v528,
      v548,
      v569,
      v590,
      v611,
      v632,
      v653,
      v674,
      v695,
      v716,
      v737,
      v758,
      v780,
      v801,
      v821,
      v843,
      v863,
      v884,
      v904,
      (uint64_t)logp,
      types,
      v968,
      v990,
      v1011);
    v1038 = v273;
    OUTLINED_FUNCTION_73_2();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_26_3(__dst, (uint64_t (*)(void))sub_1CF6933C0);
    OUTLINED_FUNCTION_26_3(__dst, (uint64_t (*)(void))sub_1CF6933C0);
    *(_WORD *)(v248 + 22) = 2080;
    OUTLINED_FUNCTION_188(v274, v275, v276, v277, v278, v279, v280, v281, v321, v342, v363, v384, v405, v426, v446, v467, v488, v509, v529,
      v549,
      v570,
      v591,
      v612,
      v633,
      v654,
      v675,
      v696,
      v717,
      v738,
      v759,
      v781,
      v802,
      v822,
      v844,
      v864,
      v885,
      v905,
      (uint64_t)logq,
      typet,
      v969,
      v991,
      v1012,
      v1025,
      v1037,
      v1038);
    sub_1CF6CA744(v245);
    v282 = OUTLINED_FUNCTION_320();
    OUTLINED_FUNCTION_101_0(v282, v283, v284, v285, v286, v287, v288, v289, v322, v343, v364, v385, v406, v427, v447, v468, v489, v510, v530,
      v550,
      v571,
      v592,
      v613,
      v634,
      v655,
      v676,
      v697,
      v718,
      v739,
      v760,
      v782,
      v803,
      v823,
      v845,
      v865,
      v886,
      v906,
      (uint64_t)logr,
      typeu,
      v970,
      v992,
      v1013);
    OUTLINED_FUNCTION_148();
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_21_3();
    OUTLINED_FUNCTION_21_3();
    _os_log_impl(&dword_1CF67E000, logs, typev, "%{public}s: Received response (id=%{public}s from peer: %s", (uint8_t *)v248, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
  }
  v290 = (uint64_t *)(v3 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__replyHandlers);
  OUTLINED_FUNCTION_277();
  sub_1CF6AF6C8(v229, *v290);
  if (v291)
  {
    v292 = v291;
    swift_beginAccess();
    sub_1CF703BA8();
    OUTLINED_FUNCTION_162();
    swift_endAccess();
    sub_1CF693EC8((uint64_t)v290);
    sub_1CF6C8CAC(v228, &v1038);
    v292(&v1038);
    v293 = OUTLINED_FUNCTION_293();
    sub_1CF6CA6DC(v293);
    v294 = OUTLINED_FUNCTION_304();
    sub_1CF693EC8(v294);
    v226 = OUTLINED_FUNCTION_293();
LABEL_68:
    sub_1CF6CA6DC(v226);
    goto LABEL_69;
  }
  v295 = sub_1CF73F0CC();
  v296 = qword_1ED8F78F0;
  v297 = v295;
  v298 = os_log_type_enabled((os_log_t)qword_1ED8F78F0, v295);
  OUTLINED_FUNCTION_20();
  if (v298)
  {
    v299 = (uint8_t *)OUTLINED_FUNCTION_4_7();
    v1038 = OUTLINED_FUNCTION_4_7();
    *(_DWORD *)v299 = 136446210;
    v300 = sub_1CF6B5B0C();
    sub_1CF68F110(v300, v301, &v1038);
    sub_1CF73F2A0();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_3();
    _os_log_impl(&dword_1CF67E000, v296, v297, "%{public}s: Received response to unknown message", v299, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
  }
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_21_3();
  OUTLINED_FUNCTION_13_0();
LABEL_69:
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1CF6B80C8()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  void *v7;
  id v9[2];

  v9[1] = *(id *)MEMORY[0x1E0C80C00];
  sub_1CF73E3E8();
  swift_allocObject();
  sub_1CF73E3DC();
  v1 = (void *)sub_1CF73E58C();
  v9[0] = 0;
  v2 = objc_msgSend(v0, sel_decryptData_aadData_error_, v1, 0, v9);

  v3 = v9[0];
  if (v2)
  {
    v4 = sub_1CF73E5A4();
    v6 = v5;

    sub_1CF6CA7B8();
    sub_1CF73E3D0();
    sub_1CF6933C0(v4, v6);
  }
  else
  {
    v7 = v3;
    sub_1CF73E490();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_1CF6B8218(const void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;
  _QWORD __src[17];
  _BYTE __dst[136];
  _BYTE v8[128];

  sub_1CF6C8CAC(a1, v8);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    __src[0] = *(_QWORD *)(a3 + 8);
    sub_1CF6C8CAC(v8, &__src[1]);
    memcpy(__dst, __src, 0x82uLL);
    sub_1CF6CA7F4((uint64_t)__dst);
    sub_1CF6C8C64(__dst, &v5);
    sub_1CF6CA148((uint64_t)v8);
    sub_1CF6B94F8();
    swift_release();
    return sub_1CF6CA148((uint64_t)v8);
  }
  return result;
}

void sub_1CF6B82EC(uint64_t a1, uint64_t a2, uint64_t a3, __n128 *a4)
{
  os_log_type_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14[5];

  swift_retain();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  swift_retain();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  swift_retain();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  swift_retain();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  if ((*(_DWORD *)(a2 + 240) & 0x8000) == 0)
    __asm { BR              X11 }
  swift_retain();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  swift_retain();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  v7 = sub_1CF73F0CC();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v8 = qword_1ED8F78F0;
  if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v7))
  {
    swift_retain_n();
    v9 = (uint8_t *)swift_slowAlloc();
    v10 = swift_slowAlloc();
    v14[0] = v10;
    *(_DWORD *)v9 = 136446210;
    v11 = sub_1CF6B5B0C();
    sub_1CF68F110(v11, v12, v14);
    v14[4] = v13;
    sub_1CF73F2A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CF67E000, v8, v7, "%{public}s: Host received unexpected request from device", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17D3ED0](v10, -1, -1);
    MEMORY[0x1D17D3ED0](v9, -1, -1);
  }
  swift_release();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  swift_release();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  swift_release();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  swift_release();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  swift_release();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  swift_release();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  swift_release();
  sub_1CF6CA630(a4, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
}

void sub_1CF6B8A44(uint64_t a1)
{
  __asm { BR              X10 }
}

#error "1CF6B8BB8: call analysis failed (funcsize=37)"

void sub_1CF6B8BD0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  id v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (v2 || v6 != 0xC000000000000000 || v12 | v5 | v11 | v10 | v9 | v8 | v1 | v0 | v3 | v4 | v7)
  {
    v15 = v11 | v12 | v10 | v9 | v8 | v1 | v0 | v3 | v4 | v7;
    if (v2 || (v6 == 0xC000000000000000 ? (v16 = v5 == 1) : (v16 = 0), !v16 || v15))
    {
      if (!v2)
      {
        v17 = v6 == 0xC000000000000000 && v5 == 2;
        if (v17 && !v15)
          JUMPOUT(0x1CF6B8BBCLL);
      }
      if (v2 || (v6 == 0xC000000000000000 ? (v18 = v5 == 3) : (v18 = 0), !v18 || v15))
      {
        OUTLINED_FUNCTION_96_0();
        sub_1CF6C691C();
      }
      else
      {
        OUTLINED_FUNCTION_96_0();
        sub_1CF6BE39C(v19, v20, v21, v22, v23, v24, v25, v26);
      }
    }
    else
    {
      OUTLINED_FUNCTION_96_0();
      sub_1CF6BF44C();
    }
  }
  else
  {
    sub_1CF6ABB3C();
    v13 = (void *)OUTLINED_FUNCTION_105();
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_202();
    sub_1CF6BE1E4(v13);
    OUTLINED_FUNCTION_96_0();

  }
}

uint64_t sub_1CF6B8D18()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  char v23;
  void *v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  void (*v40)(uint64_t);
  __int128 v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t);
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  char *v55;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  _QWORD *v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  unint64_t v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;

  OUTLINED_FUNCTION_167();
  v78 = v2;
  v79 = v3;
  v4 = v0;
  v61 = *v0;
  v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F7D10);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v57 - v9;
  v11 = sub_1CF73E664();
  v60 = *(uint64_t **)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_28();
  *(_QWORD *)&v63 = 0;
  *((_QWORD *)&v63 + 1) = 0xE000000000000000;
  sub_1CF73EF58();
  *(_QWORD *)&v72 = v0;
  sub_1CF73F408();
  OUTLINED_FUNCTION_330();
  v15 = OUTLINED_FUNCTION_226(v12, v13, v14, MEMORY[0x1E0DEE9D8]);
  v17 = *((_QWORD *)v15 + 2);
  v16 = *((_QWORD *)v15 + 3);
  if (v17 >= v16 >> 1)
    v15 = OUTLINED_FUNCTION_15_4(v16);
  OUTLINED_FUNCTION_249();
  OUTLINED_FUNCTION_107_0(4023401);
  v19 = v0[27];
  v18 = v0[28];
  v62 = v0 + 24;
  __swift_project_boxed_opaque_existential_0Tm(v0 + 24, v19);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18);
  OUTLINED_FUNCTION_380();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_330();
  OUTLINED_FUNCTION_159();
  if (v21)
    v15 = OUTLINED_FUNCTION_15_4(v20);
  OUTLINED_FUNCTION_249();
  *(_QWORD *)&v72 = 0x726F70736E617274;
  *((_QWORD *)&v72 + 1) = 0xEA00000000003D74;
  sub_1CF68CE44((uint64_t)v62, (uint64_t)&v63);
  OUTLINED_FUNCTION_116_0(&v63);
  swift_getDynamicType();
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v63);
  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_379();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_159();
  if (v21)
    v15 = OUTLINED_FUNCTION_15_4(v22);
  OUTLINED_FUNCTION_249();
  if ((v0[30] & 0x8000) != 0)
  {
    OUTLINED_FUNCTION_26_0();
LABEL_13:
    sub_1CF6B5658((uint64_t)&v63);
    v28 = *((_QWORD *)&v64 + 1);
    if (*((_QWORD *)&v64 + 1))
    {
      v60 = v4;
      v30 = v67;
      v29 = v68;
      v59 = v66;
      v31 = v63;
      v32 = v64;
      v58 = v65;
      v57 = v69;
      v33 = v70;
      v34 = v71;
      OUTLINED_FUNCTION_8_2();
      sub_1CF694020(v31, *((uint64_t *)&v31 + 1), v32, v28, v58, v59, v30, v29, v57, *((uint64_t *)&v57 + 1), v33, v34);
      OUTLINED_FUNCTION_107_0(0x3D44494455);
      sub_1CF73EF58();
      OUTLINED_FUNCTION_3_7();
      OUTLINED_FUNCTION_125_0();
      v35 = v63;
      v37 = *((_QWORD *)v15 + 2);
      v36 = *((_QWORD *)v15 + 3);
      if (v37 >= v36 >> 1)
        v15 = OUTLINED_FUNCTION_15_4(v36);
      *((_QWORD *)v15 + 2) = v37 + 1;
      *(_OWORD *)&v15[16 * v37 + 32] = v35;
      v4 = v60;
    }
    goto LABEL_24;
  }
  v23 = OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_23_1();
  if ((v23 & 1) != 0)
    goto LABEL_13;
  OUTLINED_FUNCTION_2_0();
  v24 = (void *)v0[15];
  if (!v24)
  {
    OUTLINED_FUNCTION_318((uint64_t)v10, 1);
LABEL_20:
    sub_1CF6A4E24((uint64_t)v10, qword_1ED8F7D10);
    goto LABEL_24;
  }
  v25 = objc_msgSend(v24, sel_identifier);
  if (v25)
  {
    v26 = v25;
    sub_1CF73E658();

    v27 = 0;
  }
  else
  {
    v27 = 1;
  }
  OUTLINED_FUNCTION_318((uint64_t)v8, v27);
  sub_1CF6C6F9C((uint64_t)v8, (uint64_t)v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
    goto LABEL_20;
  v38 = v60;
  v39 = OUTLINED_FUNCTION_266();
  v40(v39);
  OUTLINED_FUNCTION_107_0(0x797469746E656469);
  sub_1CF6CACA8(&qword_1ED8F7D08, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
  sub_1CF73F648();
  OUTLINED_FUNCTION_380();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_125_0();
  v41 = v63;
  OUTLINED_FUNCTION_159();
  if (v21)
    v15 = OUTLINED_FUNCTION_15_4(v42);
  *((_QWORD *)v15 + 2) = v1;
  *(_OWORD *)&v15[16 * v17 + 32] = v41;
  ((void (*)(uint64_t, uint64_t))v38[1])(v1, v11);
LABEL_24:
  v43 = v4[28];
  OUTLINED_FUNCTION_116_0(v62);
  v44 = OUTLINED_FUNCTION_372();
  v45(v44);
  if (*((_QWORD *)&v73 + 1))
  {
    sub_1CF68C850(&v72, (uint64_t)&v63);
    *(_QWORD *)&v72 = 0x746E696F70646E65;
    *((_QWORD *)&v72 + 1) = 0xE90000000000003DLL;
    OUTLINED_FUNCTION_116_0(&v63);
    v46 = OUTLINED_FUNCTION_372();
    v47(v46);
    OUTLINED_FUNCTION_379();
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_125_0();
    v43 = *((_QWORD *)&v72 + 1);
    v48 = v72;
    v50 = *((_QWORD *)v15 + 2);
    v49 = *((_QWORD *)v15 + 3);
    if (v50 >= v49 >> 1)
      v15 = OUTLINED_FUNCTION_15_4(v49);
    *((_QWORD *)v15 + 2) = v50 + 1;
    v51 = &v15[16 * v50];
    *((_QWORD *)v51 + 4) = v48;
    *((_QWORD *)v51 + 5) = v43;
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v63);
  }
  else
  {
    sub_1CF6A4E24((uint64_t)&v72, &qword_1ED8F7E60);
  }
  v76 = 0x3D6574617473;
  v77 = 0xE600000000000000;
  sub_1CF6918B8((uint64_t)&v63);
  v72 = v63;
  v73 = v64;
  v74 = v65;
  v75 = v66;
  sub_1CF73EF10();
  sub_1CF73EF58();
  OUTLINED_FUNCTION_3_7();
  v52 = v76;
  v53 = v77;
  OUTLINED_FUNCTION_159();
  if (v21)
    v15 = OUTLINED_FUNCTION_15_4(v54);
  *((_QWORD *)v15 + 2) = &v76;
  v55 = &v15[16 * v43];
  *((_QWORD *)v55 + 4) = v52;
  *((_QWORD *)v55 + 5) = v53;
  *(_QWORD *)&v63 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7E90);
  sub_1CF6CA380(&qword_1ED8F7E98, &qword_1ED8F7E90);
  sub_1CF73EE74();
  OUTLINED_FUNCTION_19();
  OUTLINED_FUNCTION_107_0(60);
  OUTLINED_FUNCTION_351();
  sub_1CF73EF58();
  OUTLINED_FUNCTION_19();
  sub_1CF73EF58();
  sub_1CF73EF58();
  OUTLINED_FUNCTION_11();
  sub_1CF73EF58();
  return v63;
}

uint64_t sub_1CF6B93EC()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__messageSequenceNumber);
  if (result == -1)
    __break(1u);
  else
    *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__messageSequenceNumber) = result + 1;
  return result;
}

void *sub_1CF6B940C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  unint64_t v20;
  void *v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[17];

  v5 = *a1;
  v6 = a1[1];
  v7 = a1[2];
  v8 = a1[3];
  v9 = sub_1CF6B93EC();
  v10 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_158();
  sub_1CF6B1024((uint64_t)sub_1CF6CABAC, v10, v9);
  swift_endAccess();
  v41[0] = v5;
  v41[1] = v6;
  v41[2] = v7;
  v41[3] = v8;
  v11 = sub_1CF6CAC94((uint64_t)v41);
  OUTLINED_FUNCTION_291(v11, v12, v13, v14, v15, v16, v17, v18, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41[0]);
  v19 = (void *)OUTLINED_FUNCTION_374();
  sub_1CF6CA5A4(v19, v20);
  sub_1CF6B94F8();
  v21 = (void *)OUTLINED_FUNCTION_374();
  return sub_1CF6C8BA8(v21, v22);
}

void sub_1CF6B94F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  const void *v6;
  const void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int8x16_t v35;
  int8x16_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int8x16_t v39;
  uint64_t v40;
  BOOL v41;
  BOOL v42;
  BOOL v43;
  const void *v44;
  __int16 v45;
  os_log_type_t v46;
  NSObject *v47;
  _BOOL8 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE __dst[136];
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE v142[136];
  _BYTE v143[136];
  _BYTE v144[144];

  OUTLINED_FUNCTION_167();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_1CF6C8C64(v6, &v130);
  sub_1CF6C8C64(v7, v144);
  v8 = *(void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__encryptionStream);
  if (!v8)
  {
    sub_1CF6C8C64(&v130, v142);
    v10 = sub_1CF6CA6D0((uint64_t)v142);
    if ((_DWORD)v10)
    {
      if ((_DWORD)v10 == 1)
      {
        v18 = OUTLINED_FUNCTION_282(v10, v11, v12, v13, v14, v15, v16, v17, v98, v102, v106, *((uint64_t *)&v106 + 1), v107, v108, v109, v110, v111, v112, v113,
                v114,
                v115,
                v116,
                v117,
                v118,
                v119,
                v120,
                v121,
                v122,
                v123,
                v124,
                *(uint64_t *)__dst,
                *(uint64_t *)&__dst[8],
                *(uint64_t *)&__dst[16],
                *(uint64_t *)&__dst[24],
                *(uint64_t *)&__dst[32],
                *(uint64_t *)&__dst[40],
                *(uint64_t *)&__dst[48],
                *(uint64_t *)&__dst[56],
                *(uint64_t *)&__dst[64],
                *(uint64_t *)&__dst[72],
                *(uint64_t *)&__dst[80],
                *(uint64_t *)&__dst[88],
                *(uint64_t *)&__dst[96],
                *(uint64_t *)&__dst[104],
                *(uint64_t *)&__dst[112],
                *(uint64_t *)&__dst[120],
                *(uint64_t *)&__dst[128],
                v126,
                v127,
                v128,
                v129,
                v130,
                v131,
                v132,
                v133,
                v134,
                v135,
                v136,
                v137,
                v138,
                v139,
                v140,
                v141);
        v19 = (*(_QWORD *)(v18 + 8) >> 60) & 3;
        if ((_DWORD)v19)
        {
          if ((_DWORD)v19 != 3 || *(_OWORD *)(v18 + 16) != 0 || (OUTLINED_FUNCTION_309(), !v41))
          {
LABEL_47:
            *(_QWORD *)&__dst[24] = MEMORY[0x1E0DEA968];
            OUTLINED_FUNCTION_75_0();
            *(_QWORD *)__dst = v93;
            *(_QWORD *)&__dst[8] = v94;
            __dst[32] = 1;
            sub_1CF692E68();
            v95 = (void *)OUTLINED_FUNCTION_105();
            v97 = v96;
            LOBYTE(v106) = 1;
            ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v106);
            OUTLINED_FUNCTION_329();
            sub_1CF692EA4((uint64_t)__dst);
            *(_BYTE *)v97 = 1;
            *(_QWORD *)(v97 + 8) = __dst;
            *(_QWORD *)(v97 + 16) = v5;
            *(_OWORD *)(v97 + 24) = 0u;
            *(_OWORD *)(v97 + 40) = 0u;
            *(_QWORD *)(v97 + 56) = 0;
            swift_willThrow();
            OUTLINED_FUNCTION_145(v95);

            goto LABEL_46;
          }
        }
      }
      else
      {
        v44 = (const void *)OUTLINED_FUNCTION_282(v10, v11, v12, v13, v14, v15, v16, v17, v98, v102, v106, *((uint64_t *)&v106 + 1), v107, v108, v109, v110, v111, v112, v113,
                              v114,
                              v115,
                              v116,
                              v117,
                              v118,
                              v119,
                              v120,
                              v121,
                              v122,
                              v123,
                              v124,
                              *(uint64_t *)__dst,
                              *(uint64_t *)&__dst[8],
                              *(uint64_t *)&__dst[16],
                              *(uint64_t *)&__dst[24],
                              *(uint64_t *)&__dst[32],
                              *(uint64_t *)&__dst[40],
                              *(uint64_t *)&__dst[48],
                              *(uint64_t *)&__dst[56],
                              *(uint64_t *)&__dst[64],
                              *(uint64_t *)&__dst[72],
                              *(uint64_t *)&__dst[80],
                              *(uint64_t *)&__dst[88],
                              *(uint64_t *)&__dst[96],
                              *(uint64_t *)&__dst[104],
                              *(uint64_t *)&__dst[112],
                              *(uint64_t *)&__dst[120],
                              *(uint64_t *)&__dst[128],
                              v126,
                              v127,
                              v128,
                              v129,
                              v130,
                              v131,
                              v132,
                              v133,
                              v134,
                              v135,
                              v136,
                              v137,
                              v138,
                              v139,
                              v140,
                              v141);
        memcpy(__dst, v44, 0x82uLL);
        if (sub_1CF6C9F7C((uint64_t)&__dst[8]) > 7)
          goto LABEL_47;
        OUTLINED_FUNCTION_312();
        if (v41)
          goto LABEL_47;
      }
    }
    else
    {
      v20 = OUTLINED_FUNCTION_282(v10, v11, v12, v13, v14, v15, v16, v17, v98, v102, v106, *((uint64_t *)&v106 + 1), v107, v108, v109, v110, v111, v112, v113,
              v114,
              v115,
              v116,
              v117,
              v118,
              v119,
              v120,
              v121,
              v122,
              v123,
              v124,
              *(uint64_t *)__dst,
              *(uint64_t *)&__dst[8],
              *(uint64_t *)&__dst[16],
              *(uint64_t *)&__dst[24],
              *(uint64_t *)&__dst[32],
              *(uint64_t *)&__dst[40],
              *(uint64_t *)&__dst[48],
              *(uint64_t *)&__dst[56],
              *(uint64_t *)&__dst[64],
              *(uint64_t *)&__dst[72],
              *(uint64_t *)&__dst[80],
              *(uint64_t *)&__dst[88],
              *(uint64_t *)&__dst[96],
              *(uint64_t *)&__dst[104],
              *(uint64_t *)&__dst[112],
              *(uint64_t *)&__dst[120],
              *(uint64_t *)&__dst[128],
              v126,
              v127,
              v128,
              v129,
              v130,
              v131,
              v132,
              v133,
              v134,
              v135,
              v136,
              v137,
              v138,
              v139,
              v140,
              v141);
      v21 = *(_QWORD *)(v20 + 72);
      if (v21 >> 62 == 3)
      {
        v22 = *(unsigned __int8 *)(v20 + 96);
        v24 = *(_QWORD *)(v20 + 80);
        v23 = *(_QWORD *)(v20 + 88);
        v26 = *(_QWORD *)(v20 + 56);
        v25 = *(_QWORD *)(v20 + 64);
        v28 = *(_QWORD *)(v20 + 40);
        v27 = *(_QWORD *)(v20 + 48);
        v30 = *(_QWORD *)(v20 + 24);
        v29 = *(_QWORD *)(v20 + 32);
        v31 = *(_QWORD *)v20;
        v34 = v20 + 8;
        v32 = *(_QWORD *)(v20 + 8);
        v33 = *(_QWORD *)(v34 + 8);
        if (v22)
          goto LABEL_14;
        if (v21 != 0xC000000000000000)
          goto LABEL_14;
        v35.i64[0] = v27;
        v35.i64[1] = v28;
        v36.i64[0] = v23;
        v36.i64[1] = v24;
        v37.i64[0] = v29;
        v37.i64[1] = v30;
        v38.i64[0] = v25;
        v38.i64[1] = v26;
        v39 = vorrq_s8(vorrq_s8(v36, v35), vorrq_s8(v38, v37));
        if (v31 | *(_QWORD *)&vorr_s8(*(int8x8_t *)v39.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v39, v39, 8uLL)) | v32 | v33)
        {
LABEL_14:
          v40 = v24 | v23 | v25 | v26 | v27 | v28 | v29 | v30 | v33 | v32;
          if (v22 || ((OUTLINED_FUNCTION_301(), v41) ? (v41 = v31 == 1) : (v41 = 0), !v41 || v40))
          {
            if (v22 || ((OUTLINED_FUNCTION_301(), v41) ? (v42 = v31 == 2) : (v42 = 0), !v42 || v40))
            {
              if (v22)
                goto LABEL_47;
              v43 = v21 == 0xC000000000000000 && v31 == 3;
              if (!v43 || v40)
                goto LABEL_47;
            }
          }
        }
      }
    }
    sub_1CF6C8C64(v144, __dst);
    sub_1CF6CABF8((uint64_t)__dst);
    sub_1CF6CA6DC((uint64_t)&v130);
    goto LABEL_39;
  }
  v9 = v8;
  sub_1CF6B9A60(&v130, (uint64_t *)&v106);

  *(_OWORD *)__dst = v106;
  sub_1CF6CAC48((uint64_t)__dst);
LABEL_39:
  sub_1CF6CA678(__dst, v143);
  if ((v3 & 1) != 0)
    v5 = sub_1CF6B93EC();
  OUTLINED_FUNCTION_253();
  __dst[0] = (v45 & 0x8000) == 0;
  *(_QWORD *)&__dst[8] = v5;
  sub_1CF6CA678(v143, &__dst[16]);
  sub_1CF6CAC0C();
  v46 = sub_1CF73F0E4();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v47 = qword_1ED8F78F0;
  v48 = OUTLINED_FUNCTION_45_3();
  if (v48)
  {
    OUTLINED_FUNCTION_184(v48, v49, v50, v51, v52, v53, v54, v55, v98, v102, v106, *((uint64_t *)&v106 + 1), v107, v108, v109, v110, v111, v112, v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      v121,
      v122,
      v123,
      v124,
      *(uint64_t *)__dst,
      *(uint64_t *)&__dst[8],
      *(uint64_t *)&__dst[16],
      *(uint64_t *)&__dst[24],
      *(uint64_t *)&__dst[32],
      *(uint64_t *)&__dst[40],
      *(uint64_t *)&__dst[48],
      *(uint64_t *)&__dst[56],
      *(uint64_t *)&__dst[64],
      *(uint64_t *)&__dst[72],
      *(uint64_t *)&__dst[80],
      *(uint64_t *)&__dst[88],
      *(uint64_t *)&__dst[96],
      *(uint64_t *)&__dst[104],
      *(uint64_t *)&__dst[112],
      *(uint64_t *)&__dst[120],
      *(uint64_t *)&__dst[128],
      v126,
      v127,
      v128,
      v129,
      v130);
    OUTLINED_FUNCTION_180();
    v56 = OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_184(v56, v57, v58, v59, v60, v61, v62, v63, v99, v103, v106, *((uint64_t *)&v106 + 1), v107, v108, v109, v110, v111, v112, v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      v121,
      v122,
      v123,
      v124,
      *(uint64_t *)__dst,
      *(uint64_t *)&__dst[8],
      *(uint64_t *)&__dst[16],
      *(uint64_t *)&__dst[24],
      *(uint64_t *)&__dst[32],
      *(uint64_t *)&__dst[40],
      *(uint64_t *)&__dst[48],
      *(uint64_t *)&__dst[56],
      *(uint64_t *)&__dst[64],
      *(uint64_t *)&__dst[72],
      *(uint64_t *)&__dst[80],
      *(uint64_t *)&__dst[88],
      *(uint64_t *)&__dst[96],
      *(uint64_t *)&__dst[104],
      *(uint64_t *)&__dst[112],
      *(uint64_t *)&__dst[120],
      *(uint64_t *)&__dst[128],
      v126,
      v127,
      v128,
      v129,
      v130);
    OUTLINED_FUNCTION_180();
    OUTLINED_FUNCTION_121();
    v64 = OUTLINED_FUNCTION_4_7();
    v104 = OUTLINED_FUNCTION_4_7();
    *(_DWORD *)v64 = 136446722;
    v65 = OUTLINED_FUNCTION_69_1();
    OUTLINED_FUNCTION_46_1(v65, v66, v67);
    *(_QWORD *)&v106 = v68;
    OUTLINED_FUNCTION_368();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_3();
    *(_WORD *)(v64 + 12) = 2082;
    OUTLINED_FUNCTION_168(&v106, __dst);
    v69 = sub_1CF720324();
    OUTLINED_FUNCTION_46_1(v69, v70, v71);
    *(_QWORD *)&v106 = v72;
    OUTLINED_FUNCTION_368();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_182();
    OUTLINED_FUNCTION_182();
    *(_WORD *)(v64 + 22) = 2080;
    sub_1CF6C8C64(&v130, &v106);
    sub_1CF6CA6DC((uint64_t)&v130);
    v73 = OUTLINED_FUNCTION_369();
    OUTLINED_FUNCTION_51_2(v73, v74, v75);
    *(_QWORD *)&v106 = v76;
    OUTLINED_FUNCTION_352();
    v77 = OUTLINED_FUNCTION_178();
    v85 = OUTLINED_FUNCTION_183(v77, v78, v79, v80, v81, v82, v83, v84, v100, v104, v106, *((uint64_t *)&v106 + 1), v107, v108, v109, v110, v111, v112, v113,
            v114,
            v115,
            v116,
            v117,
            v118,
            v119,
            v120,
            v121,
            v122,
            v123,
            v124,
            *(uint64_t *)__dst,
            *(uint64_t *)&__dst[8],
            *(uint64_t *)&__dst[16],
            *(uint64_t *)&__dst[24],
            *(uint64_t *)&__dst[32],
            *(uint64_t *)&__dst[40],
            *(uint64_t *)&__dst[48],
            *(uint64_t *)&__dst[56],
            *(uint64_t *)&__dst[64],
            *(uint64_t *)&__dst[72],
            *(uint64_t *)&__dst[80],
            *(uint64_t *)&__dst[88],
            *(uint64_t *)&__dst[96],
            *(uint64_t *)&__dst[104],
            *(uint64_t *)&__dst[112],
            *(uint64_t *)&__dst[120],
            *(uint64_t *)&__dst[128],
            v126,
            v127,
            v128,
            v129,
            v130);
    OUTLINED_FUNCTION_183(v85, v86, v87, v88, v89, v90, v91, v92, v101, v105, v106, *((uint64_t *)&v106 + 1), v107, v108, v109, v110, v111, v112, v113,
      v114,
      v115,
      v116,
      v117,
      v118,
      v119,
      v120,
      v121,
      v122,
      v123,
      v124,
      *(uint64_t *)__dst,
      *(uint64_t *)&__dst[8],
      *(uint64_t *)&__dst[16],
      *(uint64_t *)&__dst[24],
      *(uint64_t *)&__dst[32],
      *(uint64_t *)&__dst[40],
      *(uint64_t *)&__dst[48],
      *(uint64_t *)&__dst[56],
      *(uint64_t *)&__dst[64],
      *(uint64_t *)&__dst[72],
      *(uint64_t *)&__dst[80],
      *(uint64_t *)&__dst[88],
      *(uint64_t *)&__dst[96],
      *(uint64_t *)&__dst[104],
      *(uint64_t *)&__dst[112],
      *(uint64_t *)&__dst[120],
      *(uint64_t *)&__dst[128],
      v126,
      v127,
      v128,
      v129,
      v130);
    _os_log_impl(&dword_1CF67E000, v47, v46, "%{public}s: Sending message (id=%{public}s) to peer: %s", (uint8_t *)v64, 0x20u);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
  }
  OUTLINED_FUNCTION_168(&v106, __dst);
  sub_1CF6B9BD0(&v106);
  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_181();
LABEL_46:
  OUTLINED_FUNCTION_17();
}

void sub_1CF6B9A60(const void *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  char v17[136];
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  sub_1CF6C8C64(a1, v17);
  sub_1CF73E40C();
  swift_allocObject();
  sub_1CF73E400();
  sub_1CF6CAC58();
  v5 = sub_1CF73E3F4();
  if (v3)
    goto LABEL_2;
  v7 = v5;
  v8 = v6;
  v9 = (void *)sub_1CF73E58C();
  v16 = 0;
  v10 = objc_msgSend(v2, sel_encryptData_aadData_error_, v9, 0, &v16);

  v11 = v16;
  if (!v10)
  {
    v15 = v11;
    sub_1CF73E490();

    swift_willThrow();
    sub_1CF6933C0(v7, v8);
LABEL_2:
    swift_release();
    return;
  }
  v12 = sub_1CF73E5A4();
  v14 = v13;
  sub_1CF6933C0(v7, v8);
  swift_release();

  *a2 = v12;
  a2[1] = v14;
}

uint64_t sub_1CF6B9BD0(const void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_BYTE *, uint64_t, void (*)(void *), uint64_t, uint64_t, uint64_t);
  _BYTE v9[152];
  __n128 v10[9];

  OUTLINED_FUNCTION_168(v10, a1);
  v3 = v1[27];
  v4 = v1[28];
  OUTLINED_FUNCTION_116_0(v1 + 24);
  OUTLINED_FUNCTION_168(v9, a1);
  v5 = v1[29];
  v6 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v6 + 16) = v1;
  OUTLINED_FUNCTION_168((void *)(v6 + 24), a1);
  v7 = *(void (**)(_BYTE *, uint64_t, void (*)(void *), uint64_t, uint64_t, uint64_t))(v4 + 40);
  OUTLINED_FUNCTION_2_4();
  sub_1CF6CA630(v10, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  v7(v9, v5, sub_1CF6CA3B8, v6, v3, v4);
  return OUTLINED_FUNCTION_357();
}

void sub_1CF6B9CB4(void *a1, uint64_t a2, __n128 *a3)
{
  id v5;
  os_log_type_t v6;
  NSObject *v7;
  id v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  Swift::String v25;
  os_log_type_t v26;
  NSObject *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD __dst[10];
  uint64_t v38[2];

  if (a1)
  {
    v5 = a1;
    v6 = sub_1CF73F0CC();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v7 = qword_1ED8F78F0;
    if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v6))
    {
      swift_retain();
      sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
      v8 = a1;
      swift_retain();
      sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
      v9 = a1;
      v10 = swift_slowAlloc();
      v36 = swift_slowAlloc();
      v38[0] = v36;
      *(_DWORD *)v10 = 136446722;
      v11 = sub_1CF6B5B0C();
      sub_1CF68F110(v11, v12, v38);
      *(_QWORD *)&__dst[0] = v13;
      sub_1CF73F2A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v10 + 12) = 2082;
      memcpy(__dst, a3, 0x92uLL);
      v14 = sub_1CF720324();
      sub_1CF68F110(v14, v15, v38);
      *(_QWORD *)&__dst[0] = v16;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
      sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
      *(_WORD *)(v10 + 22) = 2082;
      *(_QWORD *)&__dst[0] = a1;
      v17 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
      v18 = sub_1CF73EF10();
      sub_1CF68F110(v18, v19, v38);
      *(_QWORD *)&__dst[0] = v20;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CF67E000, v7, v6, "%{public}s: Failed to send message (id=%{public}s) to peer. Error: %{public}s", (uint8_t *)v10, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v36, -1, -1);
      MEMORY[0x1D17D3ED0](v10, -1, -1);
    }
    memset(__dst, 0, 32);
    LOBYTE(__dst[2]) = 2;
    sub_1CF692E68();
    v21 = (void *)swift_allocError();
    v23 = v22;
    LOBYTE(v38[0]) = 0;
    v24 = a1;
    v25 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v38);
    sub_1CF692EA4((uint64_t)__dst);
    *(_BYTE *)v23 = 0;
    *(Swift::String *)(v23 + 8) = v25;
    *(_OWORD *)(v23 + 24) = 0u;
    *(_OWORD *)(v23 + 40) = 0u;
    *(_QWORD *)(v23 + 56) = a1;
    sub_1CF6926B8(v21);

  }
  else
  {
    v26 = sub_1CF73F0C0();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v27 = qword_1ED8F78F0;
    if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v26))
    {
      swift_retain();
      sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
      swift_retain();
      sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
      v28 = swift_slowAlloc();
      v29 = swift_slowAlloc();
      v38[0] = v29;
      *(_DWORD *)v28 = 136446466;
      v30 = sub_1CF6B5B0C();
      sub_1CF68F110(v30, v31, v38);
      *(_QWORD *)&__dst[0] = v32;
      sub_1CF73F2A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v28 + 12) = 2082;
      memcpy(__dst, a3, 0x92uLL);
      v33 = sub_1CF720324();
      sub_1CF68F110(v33, v34, v38);
      *(_QWORD *)&__dst[0] = v35;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
      sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
      _os_log_impl(&dword_1CF67E000, v27, v26, "%{public}s: Successfully sent message (id=%{public}s) to peer", (uint8_t *)v28, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v29, -1, -1);
      MEMORY[0x1D17D3ED0](v28, -1, -1);
    }
  }
}

#error "1CF6BA40C: call analysis failed (funcsize=100)"

void sub_1CF6BA424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v7;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  os_log_type_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  NSObject *v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  NSObject *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;

  OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_267();
  if ((v7 & 0x8000) == 0)
  {
    OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_77_0();
    if ((v3 & 1) != 0)
      goto LABEL_5;
    v50 = 628;
    OUTLINED_FUNCTION_172();
    OUTLINED_FUNCTION_63_1();
    __break(1u);
  }
  OUTLINED_FUNCTION_26_0();
LABEL_5:
  OUTLINED_FUNCTION_362((uint64_t)&v53);
  if (v58 != 4 || v53 != 5 || (v55 | v54 | v56 | v57) != 0)
  {
    sub_1CF68EA18(v53, v54, v55, v56, v57, v58, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    v56 = MEMORY[0x1E0DEA968];
    OUTLINED_FUNCTION_75_0();
    v53 = v10;
    v54 = v11;
    LOBYTE(v57) = 1;
    sub_1CF692E68();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_238();
    LOBYTE(v52) = a1;
    ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v52);
    OUTLINED_FUNCTION_251();
    sub_1CF692EA4((uint64_t)&v53);
    OUTLINED_FUNCTION_97_0();
    v53 = v3;
    v54 = 0;
    LOBYTE(v55) = 0;
    OUTLINED_FUNCTION_273();
    OUTLINED_FUNCTION_234();
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_2_0();
  v12 = *(void (**)(uint64_t, uint64_t))(v3 + 544);
  if (!v12)
  {
    LOBYTE(v52) = 1;
    v43 = MEMORY[0x1E0DEE9D8];
    v44 = OUTLINED_FUNCTION_129();
    v45 = OUTLINED_FUNCTION_129();
    OUTLINED_FUNCTION_82_0((unsigned __int8 *)&v52, a2, a3, a1, v46, v47, v48, v49, v43, v44, v45);
    OUTLINED_FUNCTION_178();
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  if (a1 && *(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_190();
    v13 = sub_1CF73F0E4();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v14 = qword_1ED8F78F0;
    if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v13))
    {
      OUTLINED_FUNCTION_20();
      v51 = v14;
      v15 = (uint8_t *)OUTLINED_FUNCTION_4_7();
      v52 = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v15 = 136446210;
      v16 = OUTLINED_FUNCTION_363();
      OUTLINED_FUNCTION_383(v16, v17, v18, v19, v20, v21, v22, v23, v50);
      OUTLINED_FUNCTION_360();
      sub_1CF73F2A0();
      OUTLINED_FUNCTION_13_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33(&dword_1CF67E000, v51, v13, "%{public}s: Not using out-of-band PairSetup handler to complete pairing as non-standard pairing options were provided by client", v15);
      OUTLINED_FUNCTION_32_3();
      OUTLINED_FUNCTION_0_1();
    }
    LOBYTE(v52) = 1;
    v24 = MEMORY[0x1E0DEE9D8];
    v25 = OUTLINED_FUNCTION_198();
    v26 = OUTLINED_FUNCTION_198();
    OUTLINED_FUNCTION_82_0((unsigned __int8 *)&v52, a2, a3, a1, v27, v28, v29, v30, v24, v25, v26);
    sub_1CF693EC8((uint64_t)v12);
    OUTLINED_FUNCTION_150();
    goto LABEL_28;
  }
  OUTLINED_FUNCTION_190();
  v31 = sub_1CF73F0E4();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v32 = qword_1ED8F78F0;
  if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v31))
  {
    OUTLINED_FUNCTION_20();
    v33 = (uint8_t *)OUTLINED_FUNCTION_4_7();
    v52 = OUTLINED_FUNCTION_4_7();
    *(_DWORD *)v33 = 136446210;
    v34 = OUTLINED_FUNCTION_363();
    OUTLINED_FUNCTION_383(v34, v35, v36, v37, v38, v39, v40, v41, v50);
    OUTLINED_FUNCTION_360();
    sub_1CF73F2A0();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_33(&dword_1CF67E000, v32, v31, "%{public}s: Using configured out-of-band PairSetup handler to complete pairing", v33);
    OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_0_1();
  }
  v12(a2, a3);
  v42 = OUTLINED_FUNCTION_259();
  sub_1CF693EC8(v42);
LABEL_13:
  OUTLINED_FUNCTION_134();
}

void sub_1CF6BA8A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;

  v2 = v1;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  if ((*(_DWORD *)(v1 + 240) & 0x8000) == 0)
  {
    v4 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v4 & 1) != 0)
      goto LABEL_5;
    OUTLINED_FUNCTION_172();
    OUTLINED_FUNCTION_113_0();
    __break(1u);
  }
  swift_bridgeObjectRelease();
LABEL_5:
  sub_1CF6918B8((uint64_t)&v12);
  if (v17 == 1)
  {
    sub_1CF68EA18(v12, v13, v14, v15, v16, v17, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    v5 = *(void **)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession);
    if (v5)
    {
      v6 = v5;
      v7 = (void *)sub_1CF73EEB0();
      objc_msgSend(v6, sel_tryPIN_, v7);

      return;
    }
  }
  else
  {
    sub_1CF68EA18(v12, v13, v14, v15, v16, v17, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  }
  v15 = MEMORY[0x1E0DEA968];
  OUTLINED_FUNCTION_75_0();
  v12 = v8;
  v13 = v9;
  LOBYTE(v16) = 1;
  sub_1CF692E68();
  OUTLINED_FUNCTION_105();
  v11 = v10;
  v18 = 3;
  ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v18);
  OUTLINED_FUNCTION_162();
  sub_1CF692EA4((uint64_t)&v12);
  *(_BYTE *)v11 = 3;
  *(_QWORD *)(v11 + 8) = &v12;
  *(_QWORD *)(v11 + 16) = a1;
  *(_OWORD *)(v11 + 24) = 0u;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_QWORD *)(v11 + 56) = 0;
  swift_willThrow();
}

void sub_1CF6BAAA8(uint64_t a1, uint64_t a2)
{
  char v2;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  os_log_type_t v13;
  os_log_type_t v14;
  NSObject *v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_267();
  if ((v5 & 0x8000) == 0)
  {
    OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_77_0();
    if ((v2 & 1) != 0)
      goto LABEL_5;
    OUTLINED_FUNCTION_340();
    OUTLINED_FUNCTION_172();
    OUTLINED_FUNCTION_113_0();
    __break(1u);
  }
  OUTLINED_FUNCTION_26_0();
LABEL_5:
  OUTLINED_FUNCTION_362((uint64_t)&v20);
  v12 = v20;
  if (v23 == 1)
  {
    OUTLINED_FUNCTION_130(v6, v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    v13 = sub_1CF73F0E4();
    v14 = v13;
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v15 = qword_1ED8F78F0;
    if (OUTLINED_FUNCTION_81_0())
    {
      OUTLINED_FUNCTION_20();
      v16 = (uint8_t *)OUTLINED_FUNCTION_4_7();
      *(_QWORD *)&v20 = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v16 = 136446210;
      v17 = OUTLINED_FUNCTION_363();
      sub_1CF68F110(v17, v18, (uint64_t *)&v20);
      OUTLINED_FUNCTION_319();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_33(&dword_1CF67E000, v15, v14, "%{public}s: Sending PairSetup cancel request to peer", v16);
      OUTLINED_FUNCTION_32_3();
      OUTLINED_FUNCTION_0_1();
    }
    v20 = xmmword_1CF743CA0;
    v21 = 0;
    v22 = 0;
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_237();
    v19 = (_QWORD *)OUTLINED_FUNCTION_16();
    v19[2] = v15;
    v19[3] = a1;
    v19[4] = a2;
    OUTLINED_FUNCTION_350();
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_364((uint64_t *)&v20, (uint64_t)sub_1CF6C8B8C, (uint64_t)v19);
    OUTLINED_FUNCTION_260();
    OUTLINED_FUNCTION_298();
  }
  else
  {
    if (!v23)
    {
      OUTLINED_FUNCTION_340();
      __asm { BR              X11 }
    }
    OUTLINED_FUNCTION_130(v6, v7, v8, v9, v10, v11, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_3_0();
    sub_1CF73F774();
    sub_1CF6ABB3C();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_3_0();
    sub_1CF73F780();
    OUTLINED_FUNCTION_273();
    OUTLINED_FUNCTION_170();
  }
}

void sub_1CF6BAE6C(const void *a1, uint64_t a2, void (*a3)(void *), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t Strong;
  uint64_t v11;
  int v12;
  uint64_t *v13;
  uint64_t *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  id v24;
  os_log_type_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  Swift::String v49;
  os_log_type_t v50;
  NSObject *v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t *);
  uint64_t v58;
  char *v59;
  uint64_t v60;
  void *v61;
  os_log_type_t v62;
  NSObject *v63;
  os_log_type_t v64;
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  os_log_type_t v71;
  NSObject *v72;
  os_log_type_t v73;
  uint64_t v75;
  uint8_t *v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint8_t *v81;
  void *v82;
  _QWORD v83[4];
  int v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  __int128 v106;
  char v107;
  uint64_t v108[2];
  _BYTE v109[128];
  _BYTE v110[136];

  v95 = a4;
  v6 = sub_1CF73E3C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF6C8CAC(a1, v110);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v11 = Strong;
    v92 = v9;
    v93 = v7;
    v94 = v6;
    sub_1CF6C8CAC(v110, v109);
    v12 = sub_1CF6C9F7C((uint64_t)v109);
    v13 = &qword_1ED8F7000;
    v14 = &qword_1ED8F7000;
    if (v12 != 7)
    {
      if (v12 == 4)
      {
        v15 = (_QWORD *)nullsub_1(v109);
        v84 = *(unsigned __int8 *)v15;
        v16 = v15[1];
        v90 = v15[2];
        v91 = v16;
        v17 = v15[3];
        v88 = v15[4];
        v89 = v17;
        v18 = v15[5];
        v86 = v15[6];
        v87 = v18;
        v85 = v15[7];
        sub_1CF6C8CAC(v110, &v104);
        v19 = (_QWORD *)nullsub_1(&v104);
        v20 = v19[4];
        v22 = v19[6];
        v21 = (void *)v19[7];
        v83[1] = v19[2];
        swift_bridgeObjectRetain();
        v83[2] = v20;
        swift_bridgeObjectRetain();
        v83[3] = v22;
        swift_bridgeObjectRetain();
        v23 = v21;
        v24 = v21;
        v25 = sub_1CF73F0CC();
        if (qword_1ED8F78F8 != -1)
          swift_once();
        v26 = qword_1ED8F78F0;
        if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v25))
        {
          sub_1CF6CA148((uint64_t)v110);
          swift_retain();
          sub_1CF6CA148((uint64_t)v110);
          swift_retain();
          v27 = swift_slowAlloc();
          v28 = swift_slowAlloc();
          v83[0] = a3;
          v29 = v11;
          v30 = v28;
          v108[0] = v28;
          *(_DWORD *)v27 = 136446466;
          v31 = sub_1CF6B5B0C();
          sub_1CF68F110(v31, v32, v108);
          v96 = v33;
          sub_1CF73F2A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v27 + 12) = 2080;
          LOBYTE(v96) = v84;
          v97 = v91;
          v98 = v90;
          v99 = v89;
          v100 = v88;
          v101 = v87;
          v102 = v86;
          v103 = v85;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v34 = v23;
          v35 = sub_1CF73EF10();
          sub_1CF68F110(v35, v36, v108);
          v96 = v37;
          v13 = &qword_1ED8F7000;
          sub_1CF73F2A0();
          swift_bridgeObjectRelease();
          sub_1CF6CA148((uint64_t)v110);
          sub_1CF6CA148((uint64_t)v110);
          _os_log_impl(&dword_1CF67E000, v26, v25, "%{public}s: Received error response from peer for PairSetup cancel request: %s", (uint8_t *)v27, 0x16u);
          swift_arrayDestroy();
          v38 = v30;
          v11 = v29;
          a3 = (void (*)(void *))v83[0];
          MEMORY[0x1D17D3ED0](v38, -1, -1);
          v39 = v27;
          v14 = &qword_1ED8F7000;
          MEMORY[0x1D17D3ED0](v39, -1, -1);
        }
        sub_1CF692E68();
        v40 = (void *)swift_allocError();
        *(_BYTE *)v41 = v84;
        v42 = v90;
        *(_QWORD *)(v41 + 8) = v91;
        *(_QWORD *)(v41 + 16) = v42;
        v43 = v88;
        *(_QWORD *)(v41 + 24) = v89;
        *(_QWORD *)(v41 + 32) = v43;
        v44 = v86;
        *(_QWORD *)(v41 + 40) = v87;
        *(_QWORD *)(v41 + 48) = v44;
        *(_QWORD *)(v41 + 56) = v85;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45 = v23;
        a3(v40);

        sub_1CF6CA148((uint64_t)v110);
      }
      else
      {
        *(_QWORD *)&v106 = MEMORY[0x1E0DEA968];
        v104 = 0xD00000000000004BLL;
        *(_QWORD *)&v105 = 0x80000001CF7525C0;
        BYTE8(v106) = 1;
        sub_1CF692E68();
        v46 = (void *)swift_allocError();
        v48 = v47;
        LOBYTE(v96) = 2;
        v49 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v96);
        sub_1CF692EA4((uint64_t)&v104);
        *(_BYTE *)v48 = 2;
        v13 = &qword_1ED8F7000;
        *(Swift::String *)(v48 + 8) = v49;
        *(_OWORD *)(v48 + 24) = 0u;
        *(_OWORD *)(v48 + 40) = 0u;
        *(_QWORD *)(v48 + 56) = 0;
        sub_1CF6926B8(v46);

      }
    }
    v50 = sub_1CF73F0E4();
    if (v13[287] != -1)
      swift_once();
    v51 = v14[286];
    if (os_log_type_enabled(v51, v50))
    {
      swift_retain_n();
      v52 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v104 = v53;
      *(_DWORD *)v52 = 136446210;
      v54 = sub_1CF6B5B0C();
      sub_1CF68F110(v54, v55, &v104);
      v96 = v56;
      sub_1CF73F2A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF67E000, v51, v50, "%{public}s: Received successful response from peer for PairSetup cancel request", v52, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v53, -1, -1);
      MEMORY[0x1D17D3ED0](v52, -1, -1);
    }
    sub_1CF6918B8((uint64_t)&v104);
    v57 = (void (*)(uint64_t *))v104;
    if (v107 == 1)
    {
      v58 = v105;
      v104 = 5;
      v105 = 0u;
      v106 = 0u;
      v107 = 4;
      sub_1CF691788(&v104);
      objc_msgSend(*(id *)(v11 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession), sel_invalidate);
      if (v57)
      {
        LODWORD(v104) = 89;
        swift_retain();
        sub_1CF6ABA2C(MEMORY[0x1E0DEE9D8]);
        sub_1CF6CACA8(qword_1EFBA2080, (void (*)(uint64_t))MEMORY[0x1E0CADE90]);
        v59 = v92;
        v60 = v94;
        sub_1CF73E478();
        v61 = (void *)sub_1CF73E3B8();
        (*(void (**)(char *, uint64_t))(v93 + 8))(v59, v60);
        v104 = (uint64_t)v61;
        *(_QWORD *)&v105 = 0;
        BYTE8(v105) = 0;
        v57(&v104);
        sub_1CF693EC8((uint64_t)v57);

      }
      a3(0);
      v62 = sub_1CF73F0E4();
      v63 = qword_1ED8F78F0;
      v64 = v62;
      if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v62))
      {
        swift_retain_n();
        v65 = (uint8_t *)swift_slowAlloc();
        v66 = swift_slowAlloc();
        v95 = v58;
        v67 = v66;
        v104 = v66;
        *(_DWORD *)v65 = 136446210;
        v68 = sub_1CF6B5B0C();
        sub_1CF68F110(v68, v69, &v104);
        v96 = v70;
        sub_1CF73F2A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CF67E000, v63, v64, "%{public}s: Successfully cancelled PairSetup attempt", v65, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v67, -1, -1);
        MEMORY[0x1D17D3ED0](v65, -1, -1);
      }
      swift_release();
      sub_1CF693EC8((uint64_t)v57);
    }
    else
    {
      if (!v107)
        __asm { BR              X10 }
      sub_1CF68EA18(v104, v105, *((uint64_t *)&v105 + 1), v106, *((uint64_t *)&v106 + 1), v107, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
      v71 = sub_1CF73F0CC();
      v72 = qword_1ED8F78F0;
      v73 = v71;
      if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v71))
      {
        swift_retain_n();
        v75 = swift_slowAlloc();
        v83[0] = a3;
        v76 = (uint8_t *)v75;
        v77 = swift_slowAlloc();
        v96 = v77;
        *(_DWORD *)v76 = 136446210;
        v78 = sub_1CF6B5B0C();
        sub_1CF68F110(v78, v79, &v96);
        v108[0] = v80;
        sub_1CF73F2A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CF67E000, v72, v73, "%{public}s: Received successful response from peer for PairSetup cancel request but no longer in state setUpManualPairingInProgress", v76, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v77, -1, -1);
        v81 = v76;
        a3 = (void (*)(void *))v83[0];
        MEMORY[0x1D17D3ED0](v81, -1, -1);
      }
      sub_1CF6AA5E0();
      sub_1CF73F774();
      v108[0] = v96;
      v108[1] = v97;
      sub_1CF6ABB3C();
      v82 = (void *)swift_allocError();
      sub_1CF73F780();
      a3(v82);
      swift_release();

    }
  }
}

void *sub_1CF6BBA64(void *a1, unint64_t a2, unsigned __int8 *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15[4];

  v12 = *a3;
  OUTLINED_FUNCTION_175();
  v15[0] = (uint64_t)a1;
  v15[1] = a2 | 0x1000000000000000;
  v15[2] = v12;
  v15[3] = a4;
  v13 = (_QWORD *)OUTLINED_FUNCTION_16();
  v13[2] = v6;
  v13[3] = a5;
  v13[4] = a6;
  sub_1CF6934BC((uint64_t)a1, a2);
  OUTLINED_FUNCTION_8_2();
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_350();
  OUTLINED_FUNCTION_364(v15, (uint64_t)sub_1CF6C8B9C, (uint64_t)v13);
  swift_release();
  return sub_1CF6C8BA8(a1, a2 | 0x1000000000000000);
}

void sub_1CF6BBB30(const void *a1, _QWORD *a2, void (*a3)(_WORD *), uint64_t a4)
{
  uint64_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  unsigned __int16 *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  os_log_type_t v28;
  NSObject *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  Swift::String v40;
  id v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  _QWORD v54[4];
  char v55;
  uint64_t v56[2];
  _BYTE v57[128];
  _BYTE v58[128];
  _BYTE v59[136];

  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EF8);
  MEMORY[0x1E0C80A78](v53);
  v9 = (_WORD *)((char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_1CF73E94C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF6C8CAC(a1, v58);
  sub_1CF6C8CAC(v58, v59);
  v14 = sub_1CF6C9F7C((uint64_t)v59);
  if (v14 == 5)
  {
    v19 = *(void **)nullsub_1(v59);
    goto LABEL_5;
  }
  if (v14 == 4)
  {
    v15 = nullsub_1(v59);
    v16 = *(_BYTE *)v15;
    v17 = *(_OWORD *)(v15 + 8);
    v51 = *(_OWORD *)(v15 + 24);
    v52 = v17;
    v50 = *(_OWORD *)(v15 + 40);
    v18 = *(_QWORD *)(v15 + 56);
    sub_1CF692E68();
    v19 = (void *)swift_allocError();
    *(_BYTE *)v20 = v16;
    *(_OWORD *)(v20 + 8) = v52;
    *(_OWORD *)(v20 + 24) = v51;
    *(_OWORD *)(v20 + 40) = v50;
    *(_QWORD *)(v20 + 56) = v18;
LABEL_5:
    sub_1CF6CA148((uint64_t)v58);
    swift_willThrow();
    goto LABEL_13;
  }
  *(_QWORD *)&v52 = a4;
  sub_1CF6C8CAC(v58, v57);
  if (sub_1CF6C9F7C((uint64_t)v57) == 2)
  {
    *(_QWORD *)&v51 = a3;
    v21 = (unsigned __int16 *)nullsub_1(v57);
    v48 = *v21;
    v22 = *((_QWORD *)v21 + 1);
    v49 = *((_QWORD *)v21 + 2);
    *(_QWORD *)&v50 = v22;
    v24 = a2[27];
    v23 = a2[28];
    __swift_project_boxed_opaque_existential_0Tm(a2 + 24, v24);
    v25 = *(void (**)(uint64_t, uint64_t))(v23 + 56);
    sub_1CF6C8CAC(v58, v54);
    v26 = nullsub_1(v54);
    v27 = *(_QWORD *)(v26 + 8);
    v46 = *(_QWORD *)(v26 + 16);
    v47 = v27;
    sub_1CF6A7B18(v27, v46);
    v25(v24, v23);
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1F00);
    v43 = (char *)v9 + *(int *)(v42 + 48);
    v44 = (_QWORD *)((char *)v9 + *(int *)(v42 + 64));
    *v9 = v48;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v43, v13, v10);
    v45 = v49;
    *v44 = v50;
    v44[1] = v45;
    swift_storeEnumTagMultiPayload();
    sub_1CF6A7B18(v47, v46);
    ((void (*)(_WORD *))v51)(v9);
    sub_1CF6CA148((uint64_t)v58);
    sub_1CF6A4E24((uint64_t)v9, &qword_1EFBA1EF8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return;
  }
  v28 = sub_1CF73F0CC();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v29 = qword_1ED8F78F0;
  if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v28))
  {
    sub_1CF6CA148((uint64_t)v58);
    swift_retain();
    sub_1CF6CA148((uint64_t)v58);
    swift_retain();
    v30 = swift_slowAlloc();
    v31 = swift_slowAlloc();
    v56[0] = v31;
    *(_DWORD *)v30 = 136446466;
    v32 = sub_1CF6B5B0C();
    sub_1CF68F110(v32, v33, v56);
    v54[0] = v34;
    sub_1CF73F2A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2080;
    sub_1CF6C8CAC(v58, v54);
    sub_1CF6CA148((uint64_t)v58);
    v35 = sub_1CF73EF10();
    sub_1CF68F110(v35, v36, v56);
    v54[0] = v37;
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();
    sub_1CF6CA148((uint64_t)v58);
    sub_1CF6CA148((uint64_t)v58);
    _os_log_impl(&dword_1CF67E000, v29, v28, "%{public}s Received unexpected response to tunnel listener creation request: %s", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17D3ED0](v31, -1, -1);
    MEMORY[0x1D17D3ED0](v30, -1, -1);
  }
  v54[3] = MEMORY[0x1E0DEA968];
  v54[0] = 0xD000000000000034;
  v54[1] = 0x80000001CF752580;
  v55 = 1;
  sub_1CF692E68();
  v19 = (void *)swift_allocError();
  v39 = v38;
  LOBYTE(v56[0]) = 2;
  v40 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v56);
  sub_1CF692EA4((uint64_t)v54);
  *(_BYTE *)v39 = 2;
  *(Swift::String *)(v39 + 8) = v40;
  *(_OWORD *)(v39 + 24) = 0u;
  *(_OWORD *)(v39 + 40) = 0u;
  *(_QWORD *)(v39 + 56) = 0;
  swift_willThrow();
LABEL_13:
  *(_QWORD *)v9 = v19;
  swift_storeEnumTagMultiPayload();
  v41 = v19;
  a3(v9);

  sub_1CF6A4E24((uint64_t)v9, &qword_1EFBA1EF8);
}

void sub_1CF6BC0B8(void (*a1)(uint64_t, _QWORD, uint64_t), uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_2_0();
  v6 = *(char **)(v2 + 528);
  if (v6
    && *(uint64_t *)&v6[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 13)
  {
    v10 = xmmword_1CF743CB0;
    v11 = 0;
    v12 = 0;
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_237();
    v8 = (_QWORD *)OUTLINED_FUNCTION_16();
    v8[2] = v3;
    v8[3] = a1;
    v8[4] = a2;
    v9 = v6;
    OUTLINED_FUNCTION_350();
    OUTLINED_FUNCTION_121();
    OUTLINED_FUNCTION_364((uint64_t *)&v10, (uint64_t)sub_1CF6C8C10, (uint64_t)v8);
    OUTLINED_FUNCTION_260();
    OUTLINED_FUNCTION_298();

  }
  else
  {
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_376();
    v13 = v10;
    sub_1CF6ABB3C();
    v7 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_91_0();
    a1(v7, 0, 1);
    OUTLINED_FUNCTION_170();
  }
}

void sub_1CF6BC204(const void *a1, uint64_t a2, void (*a3)(void *, void *, uint64_t))
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void **v10;
  void *v11;
  void *v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  NSObject *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  id v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34[16];
  _QWORD v35[4];
  char v36;
  _BYTE v37[128];
  _BYTE v38[128];
  _BYTE v39[136];

  sub_1CF6C8CAC(a1, v39);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1CF6C8CAC(v39, v38);
    v4 = sub_1CF6C9F7C((uint64_t)v38);
    if (v4 == 5)
    {
      v8 = *(void **)nullsub_1(v38);
    }
    else
    {
      if (v4 != 4)
      {
        sub_1CF6C8CAC(v39, v37);
        if (sub_1CF6C9F7C((uint64_t)v37) == 3)
        {
          v10 = (void **)nullsub_1(v37);
          v11 = *v10;
          v12 = v10[1];
          sub_1CF6C8CAC(v39, v34);
          v13 = (uint64_t *)nullsub_1(v34);
          v14 = *v13;
          v15 = v13[1];
          sub_1CF6C8CAC(v39, v35);
          v16 = nullsub_1(v35);
          sub_1CF6934BC(*(_QWORD *)v16, *(_QWORD *)(v16 + 8));
          sub_1CF6934BC(v14, v15);
          a3(v11, v12, 0);
          swift_release();
          sub_1CF6CA148((uint64_t)v39);
          sub_1CF6CA148((uint64_t)v39);
          return;
        }
        v17 = sub_1CF73F0CC();
        if (qword_1ED8F78F8 != -1)
          swift_once();
        v18 = qword_1ED8F78F0;
        if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v17))
        {
          sub_1CF6CA148((uint64_t)v39);
          swift_retain();
          sub_1CF6CA148((uint64_t)v39);
          swift_retain();
          v19 = swift_slowAlloc();
          v20 = swift_slowAlloc();
          v34[0] = v20;
          *(_DWORD *)v19 = 136446466;
          v21 = sub_1CF6B5B0C();
          sub_1CF68F110(v21, v22, v34);
          v35[0] = v23;
          sub_1CF73F2A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v19 + 12) = 2080;
          sub_1CF6C8CAC(v39, v35);
          sub_1CF6CA148((uint64_t)v39);
          v24 = sub_1CF73EF10();
          sub_1CF68F110(v24, v25, v34);
          v35[0] = v26;
          sub_1CF73F2A0();
          swift_bridgeObjectRelease();
          sub_1CF6CA148((uint64_t)v39);
          sub_1CF6CA148((uint64_t)v39);
          _os_log_impl(&dword_1CF67E000, v18, v17, "%{public}s Received unexpected response to create remote unlock key request: %s", (uint8_t *)v19, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D17D3ED0](v20, -1, -1);
          MEMORY[0x1D17D3ED0](v19, -1, -1);
        }
        v35[3] = MEMORY[0x1E0DEA968];
        v35[0] = 0xD000000000000034;
        v35[1] = 0x80000001CF752540;
        v36 = 1;
        sub_1CF692E68();
        v8 = (void *)swift_allocError();
        v28 = v27;
        LOBYTE(v34[0]) = 2;
        v29 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v34);
        sub_1CF692EA4((uint64_t)v35);
        *(_BYTE *)v28 = 2;
        *(Swift::String *)(v28 + 8) = v29;
        *(_OWORD *)(v28 + 24) = 0u;
        *(_OWORD *)(v28 + 40) = 0u;
        *(_QWORD *)(v28 + 56) = 0;
        goto LABEL_14;
      }
      v5 = nullsub_1(v38);
      v6 = *(_BYTE *)v5;
      v32 = *(_OWORD *)(v5 + 24);
      v33 = *(_OWORD *)(v5 + 8);
      v31 = *(_OWORD *)(v5 + 40);
      v7 = *(_QWORD *)(v5 + 56);
      sub_1CF692E68();
      v8 = (void *)swift_allocError();
      *(_BYTE *)v9 = v6;
      *(_OWORD *)(v9 + 8) = v33;
      *(_OWORD *)(v9 + 24) = v32;
      *(_OWORD *)(v9 + 40) = v31;
      *(_QWORD *)(v9 + 56) = v7;
    }
    sub_1CF6CA148((uint64_t)v39);
LABEL_14:
    swift_willThrow();
    v30 = v8;
    a3(v8, 0, 1);
    swift_release();

  }
}

void sub_1CF6BC678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  void *v39;
  void *v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;

  OUTLINED_FUNCTION_268();
  a29 = v31;
  a30 = v32;
  v34 = v33;
  v36 = v35;
  v38 = v37;
  v40 = v39;
  OUTLINED_FUNCTION_175();
  OUTLINED_FUNCTION_2_0();
  v41 = *(char **)(v30 + 528);
  if (v41
    && *(uint64_t *)&v41[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 13)
  {
    a10 = (uint64_t)v40;
    a11 = v38 | 0x2000000000000000;
    a12 = 0;
    a13 = 0;
    v42 = OUTLINED_FUNCTION_16();
    swift_weakInit();
    v43 = (_QWORD *)OUTLINED_FUNCTION_16();
    v43[2] = v42;
    v43[3] = v36;
    v43[4] = v34;
    v44 = v41;
    sub_1CF6934BC((uint64_t)v40, v38);
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_121();
    sub_1CF6B940C(&a10, (uint64_t)sub_1CF6C8C48, (uint64_t)v43);

    swift_release();
    sub_1CF6C8BA8(v40, v38 | 0x2000000000000000);
    swift_release();
  }
  else
  {
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_376();
    a14 = a10;
    a15 = a11;
    sub_1CF6ABB3C();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_91_0();
    OUTLINED_FUNCTION_273();
    OUTLINED_FUNCTION_170();
  }
  OUTLINED_FUNCTION_61_1();
}

void sub_1CF6BC7E0(const void *a1, uint64_t a2, void (*a3)(void *))
{
  int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  os_log_type_t v10;
  NSObject *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  Swift::String v22;
  id v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _QWORD v27[4];
  char v28;
  uint64_t v29[2];
  _BYTE v30[128];
  _BYTE v31[128];
  _BYTE v32[136];

  sub_1CF6C8CAC(a1, v32);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1CF6C8CAC(v32, v31);
    v4 = sub_1CF6C9F7C((uint64_t)v31);
    if (v4 == 5)
    {
      v8 = *(void **)nullsub_1(v31);
    }
    else
    {
      if (v4 != 4)
      {
        sub_1CF6C8CAC(v32, v30);
        if (sub_1CF6C9F7C((uint64_t)v30) == 6)
        {
          a3(0);
          swift_release();
          return;
        }
        v10 = sub_1CF73F0CC();
        if (qword_1ED8F78F8 != -1)
          swift_once();
        v11 = qword_1ED8F78F0;
        if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v10))
        {
          sub_1CF6CA148((uint64_t)v32);
          swift_retain();
          sub_1CF6CA148((uint64_t)v32);
          swift_retain();
          v12 = swift_slowAlloc();
          v13 = swift_slowAlloc();
          v29[0] = v13;
          *(_DWORD *)v12 = 136446466;
          v14 = sub_1CF6B5B0C();
          sub_1CF68F110(v14, v15, v29);
          v27[0] = v16;
          sub_1CF73F2A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v12 + 12) = 2080;
          sub_1CF6C8CAC(v32, v27);
          sub_1CF6CA148((uint64_t)v32);
          v17 = sub_1CF73EF10();
          sub_1CF68F110(v17, v18, v29);
          v27[0] = v19;
          sub_1CF73F2A0();
          swift_bridgeObjectRelease();
          sub_1CF6CA148((uint64_t)v32);
          sub_1CF6CA148((uint64_t)v32);
          _os_log_impl(&dword_1CF67E000, v11, v10, "%{public}s Received unexpected response to remote unlock request: %s", (uint8_t *)v12, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D17D3ED0](v13, -1, -1);
          MEMORY[0x1D17D3ED0](v12, -1, -1);
        }
        v27[3] = MEMORY[0x1E0DEA968];
        v27[0] = 0xD000000000000029;
        v27[1] = 0x80000001CF752510;
        v28 = 1;
        sub_1CF692E68();
        v8 = (void *)swift_allocError();
        v21 = v20;
        LOBYTE(v29[0]) = 2;
        v22 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v29);
        sub_1CF692EA4((uint64_t)v27);
        *(_BYTE *)v21 = 2;
        *(Swift::String *)(v21 + 8) = v22;
        *(_OWORD *)(v21 + 24) = 0u;
        *(_OWORD *)(v21 + 40) = 0u;
        *(_QWORD *)(v21 + 56) = 0;
        goto LABEL_14;
      }
      v5 = nullsub_1(v31);
      v6 = *(_BYTE *)v5;
      v25 = *(_OWORD *)(v5 + 24);
      v26 = *(_OWORD *)(v5 + 8);
      v24 = *(_OWORD *)(v5 + 40);
      v7 = *(_QWORD *)(v5 + 56);
      sub_1CF692E68();
      v8 = (void *)swift_allocError();
      *(_BYTE *)v9 = v6;
      *(_OWORD *)(v9 + 8) = v26;
      *(_OWORD *)(v9 + 24) = v25;
      *(_OWORD *)(v9 + 40) = v24;
      *(_QWORD *)(v9 + 56) = v7;
    }
    sub_1CF6CA148((uint64_t)v32);
LABEL_14:
    swift_willThrow();
    v23 = v8;
    a3(v8);
    swift_release();

  }
}

void sub_1CF6BCBD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v26 = 0u;
  v27 = 0u;
  v28 = 0u;
  v29 = 0u;
  v25 = 2;
  v30 = 0xC000000000000000;
  v31 = 0;
  v32 = 0;
  v33 = 0;
  v0 = sub_1CF6C8C54((uint64_t)&v25);
  OUTLINED_FUNCTION_291(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25);
  OUTLINED_FUNCTION_109_0();
}

void sub_1CF6BCC38()
{
  uint64_t v0;
  __int16 v3;
  uint64_t v4;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  sub_1CF6918B8((uint64_t)&v10);
  if (v13 == 4
    && v10 == 4
    && (*((_QWORD *)&v11 + 1) | (unint64_t)v11 | (unint64_t)v12 | *((_QWORD *)&v12 + 1)) == 0)
  {
    OUTLINED_FUNCTION_68_1();
    if (v3 < 0)
    {
      v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions);
      if (v4 != 2 && (v4 & 1) != 0)
      {
        v11 = 0u;
        v12 = 0u;
        v13 = 0u;
        v14 = 0u;
        v10 = 4;
        v15 = 0xC000000000000000;
        v16 = 0;
        v17 = 0;
        v18 = 0;
        sub_1CF6C8C54((uint64_t)&v10);
        sub_1CF6C8C64(&v10, &v6);
        OUTLINED_FUNCTION_109_0();
        sub_1CF6925A4(0);
        v6 = 5;
        v7 = 0u;
        v8 = 0u;
        v9 = 4;
        sub_1CF691788(&v6);
        sub_1CF6B5890(0);
        return;
      }
    }
  }
  else
  {
    sub_1CF68EA18(v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  }
  v10 = 0;
  sub_1CF68D0CC();
}

uint64_t sub_1CF6BCD58()
{
  uint64_t v0;
  char v1;
  unint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14[3];

  v1 = *(_DWORD *)(v0 + 240);
  if ((*(_DWORD *)(v0 + 240) & 0x8000) != 0)
  {
    sub_1CF6BCEC0(&v10);
    v14[0] = v10;
    v14[1] = v11;
    sub_1CF6B5A9C(v14);
    if (qword_1ED8F7F18 != -1)
      swift_once();
    v2 = v1 & 1;
    OUTLINED_FUNCTION_2_0();
    v3 = (void *)qword_1ED8F7F10;
    sub_1CF6B5A68(&v10);
    v4 = v10;
    v5 = v11;
    v10 = (uint64_t)v3;
    v11 = v2;
    v12 = v4;
    v13 = v5;
    v6 = OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_346();
    v7 = OUTLINED_FUNCTION_16();
    *(_QWORD *)(v7 + 16) = v6;
    *(_BYTE *)(v7 + 24) = v2;
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_190();
    v8 = v3;
    sub_1CF6B940C(&v10, (uint64_t)sub_1CF6CA374, v7);
    OUTLINED_FUNCTION_40_0();

    OUTLINED_FUNCTION_357();
    sub_1CF6C8BA8(v3, v2);
    return OUTLINED_FUNCTION_298();
  }
  else
  {
    OUTLINED_FUNCTION_172();
    result = OUTLINED_FUNCTION_63_1();
    __break(1u);
  }
  return result;
}

uint64_t sub_1CF6BCEC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  _QWORD v12[2];

  v2 = sub_1CF73F060();
  *(_QWORD *)(v2 + 16) = 6;
  if (((unint64_t)", device supports >=" & 0x2000000000000000) == 0
    || (((unint64_t)", device supports >=" >> 56) & 0xF) != 0)
  {
    v3 = 0;
    while (1)
    {
      v4 = sub_1CF73EF40();
      if (v4 < 0)
        break;
      v5 = v4;
      if (!v4)
        goto LABEL_12;
      v12[0] = 0;
      MEMORY[0x1D17D3EE8](v12, 8);
      if (v5 > v12[0] * v5)
      {
        v6 = -(uint64_t)v5 % v5;
        while (v6 > v12[0] * v5)
        {
          v12[0] = 0;
          MEMORY[0x1D17D3EE8](v12, 8);
        }
      }
      sub_1CF73EF4C();
      v7 = sub_1CF73EFAC();
      v8 = (uint64_t *)(v2 + 32 + 16 * v3);
      *v8 = v7;
      v8[1] = v9;
      if (++v3 == 6)
      {
        *(_QWORD *)(v2 + 16) = 6;
        v12[0] = v2;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EC0);
        sub_1CF6CA380(&qword_1EFBA1EC8, &qword_1EFBA1EC0);
        result = sub_1CF73EFB8();
        *a1 = result;
        a1[1] = v11;
        return result;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_1CF73F348();
  swift_bridgeObjectRelease();
  result = sub_1CF73F450();
  __break(1u);
  return result;
}

void sub_1CF6BD0B0(const void *a1, uint64_t a2, char a3)
{
  uint64_t Strong;
  uint64_t v5;
  int v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  os_log_type_t v12;
  NSObject *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  Swift::String v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  int *v36;
  int v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  Swift::String v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  id v53;
  id v54;
  char *v55;
  void *v56;
  char *v57;
  char v58;
  uint64_t v59;
  int v60;
  char v61;
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  __int128 v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77[3];
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char v88;
  _BYTE v89[128];
  _BYTE v90[128];
  _BYTE v91[136];

  sub_1CF6C8CAC(a1, v91);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return;
  v5 = Strong;
  sub_1CF6C8CAC(v91, v90);
  v6 = sub_1CF6C9F7C((uint64_t)v90);
  if (v6 == 5)
  {
    v10 = *(void **)nullsub_1(v90);
    goto LABEL_6;
  }
  if (v6 == 4)
  {
    v7 = nullsub_1(v90);
    v8 = *(_BYTE *)v7;
    v72 = *(_OWORD *)(v7 + 24);
    v74 = *(_OWORD *)(v7 + 8);
    v70 = *(_OWORD *)(v7 + 40);
    v9 = *(_QWORD *)(v7 + 56);
    sub_1CF692E68();
    v10 = (void *)swift_allocError();
    *(_BYTE *)v11 = v8;
    *(_OWORD *)(v11 + 8) = v74;
    *(_OWORD *)(v11 + 24) = v72;
    *(_OWORD *)(v11 + 40) = v70;
    *(_QWORD *)(v11 + 56) = v9;
LABEL_6:
    sub_1CF6CA148((uint64_t)v91);
LABEL_13:
    swift_willThrow();
    sub_1CF6926B8(v10);
    swift_release();

    return;
  }
  sub_1CF6C8CAC(v91, v89);
  if (sub_1CF6C9F7C((uint64_t)v89))
  {
    v12 = sub_1CF73F0CC();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v13 = qword_1ED8F78F0;
    if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v12))
    {
      sub_1CF6CA148((uint64_t)v91);
      swift_retain();
      sub_1CF6CA148((uint64_t)v91);
      swift_retain();
      v14 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v77[0] = v15;
      *(_DWORD *)v14 = 136446466;
      v16 = sub_1CF6B5B0C();
      sub_1CF68F110(v16, v17, v77);
      v78 = v18;
      sub_1CF73F2A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v14 + 12) = 2080;
      sub_1CF6C8CAC(v91, &v78);
      sub_1CF6CA148((uint64_t)v91);
      v19 = sub_1CF73EF10();
      sub_1CF68F110(v19, v20, v77);
      v78 = v21;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      sub_1CF6CA148((uint64_t)v91);
      sub_1CF6CA148((uint64_t)v91);
      _os_log_impl(&dword_1CF67E000, v13, v12, "%{public}s Received unexpected response to handshake request: %s", (uint8_t *)v14, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v15, -1, -1);
      MEMORY[0x1D17D3ED0](v14, -1, -1);
    }
    *(_QWORD *)&v80 = MEMORY[0x1E0DEA968];
    v78 = 0xD000000000000025;
    *(_QWORD *)&v79 = 0x80000001CF7520D0;
    BYTE8(v80) = 1;
    sub_1CF692E68();
    v10 = (void *)swift_allocError();
    v23 = v22;
    LOBYTE(v77[0]) = 2;
    v24 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v77);
    sub_1CF692EA4((uint64_t)&v78);
    *(_BYTE *)v23 = 2;
    *(Swift::String *)(v23 + 8) = v24;
    *(_OWORD *)(v23 + 24) = 0u;
    *(_OWORD *)(v23 + 40) = 0u;
    *(_QWORD *)(v23 + 56) = 0;
    goto LABEL_13;
  }
  v61 = a3;
  v25 = nullsub_1(v89);
  v65 = *(unsigned __int8 *)(v25 + 16);
  v60 = *(unsigned __int8 *)(v25 + 17);
  v63 = *(unsigned __int8 *)(v25 + 18);
  v62 = *(unsigned __int8 *)(v25 + 19);
  v26 = *(_QWORD *)(v25 + 24);
  v27 = *(_QWORD *)(v25 + 40);
  v28 = *(_QWORD *)(v25 + 48);
  v69 = *(_QWORD *)(v25 + 56);
  v71 = *(_QWORD *)(v25 + 32);
  v29 = *(_QWORD *)(v25 + 72);
  v66 = *(_QWORD *)(v25 + 64);
  v31 = *(_QWORD *)(v25 + 80);
  v30 = *(_QWORD *)(v25 + 88);
  v68 = v30;
  v33 = *(_QWORD *)(v25 + 96);
  v32 = *(_QWORD *)(v25 + 104);
  v34 = *(_QWORD *)(v25 + 112);
  v75 = v34;
  v52 = v5;
  v35 = *(_BYTE *)(v25 + 120);
  v53 = *(id *)v25;
  v56 = *(void **)(v25 + 8);
  v58 = *(_BYTE *)(v25 + 20);
  v54 = *(id *)v25;
  v67 = v33;
  v73 = v26;
  sub_1CF6B56D0(v26, v71, v27, v28, v69, v66, v29, v31, v30, v33, v32, v34);
  sub_1CF6CA148((uint64_t)v91);
  v55 = (char *)v54;
  sub_1CF6B56D0(v26, v71, v27, v28, v69, v66, v29, v31, v30, v33, v32, v34);
  v57 = v56;
  sub_1CF6B6B54((uint64_t)v53);
  v36 = (int *)(v52 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions);
  *(_BYTE *)(v52 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions + 4) = v58;
  v37 = 256;
  if (!v60)
    v37 = 0;
  *v36 = v37 | v65 | (v63 << 16) | (v62 << 24);
  v78 = v26;
  *(_QWORD *)&v79 = v71;
  v64 = v28;
  *((_QWORD *)&v79 + 1) = v27;
  *(_QWORD *)&v80 = v28;
  *((_QWORD *)&v80 + 1) = v69;
  v81 = v66;
  v59 = v31;
  v82 = v29;
  v83 = v31;
  v84 = v30;
  v85 = v33;
  v86 = v32;
  v87 = v34;
  v88 = v35;
  sub_1CF6B5738(&v78);
  if (qword_1ED8F7910 != -1)
    swift_once();
  swift_beginAccess();
  v38 = qword_1ED8F7F18;
  v39 = (char *)(id)qword_1ED8F7900;
  if (v38 != -1)
    swift_once();
  swift_beginAccess();
  v40 = OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue;
  if (*(_QWORD *)(qword_1ED8F7F10
                 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) < *(_QWORD *)&v57[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue])
  {

    v78 = 0;
    *(_QWORD *)&v79 = 0xE000000000000000;
    sub_1CF73F348();
    sub_1CF73EF58();
    v76 = *(_QWORD *)(qword_1ED8F7F10
                    + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue);
    sub_1CF73F648();
    sub_1CF73EF58();
    swift_bridgeObjectRelease();
    sub_1CF73EF58();
    v41 = *(_QWORD *)&v57[v40];

    v76 = v41;
LABEL_25:
    sub_1CF73F648();
    sub_1CF73EF58();
    swift_bridgeObjectRelease();
    sub_1CF73EF58();
    *(_QWORD *)&v80 = MEMORY[0x1E0DEA968];
    BYTE8(v80) = 1;
    sub_1CF692E68();
    v44 = (void *)swift_allocError();
    v46 = v45;
    LOBYTE(v76) = 5;
    v47 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v76);
    sub_1CF692EA4((uint64_t)&v78);
    *(_BYTE *)v46 = 5;
    *(Swift::String *)(v46 + 8) = v47;
    *(_OWORD *)(v46 + 24) = 0u;
    *(_OWORD *)(v46 + 40) = 0u;
    *(_QWORD *)(v46 + 56) = 0;
    swift_willThrow();
    sub_1CF6926B8(v44);

    goto LABEL_27;
  }

  v42 = OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue;
  v43 = *(_QWORD *)&v55[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue];
  if (v43 < *(_QWORD *)&v39[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue])
  {
    v78 = 0;
    *(_QWORD *)&v79 = 0xE000000000000000;
    sub_1CF73F348();
    sub_1CF73EF58();

    v76 = v43;
    sub_1CF73F648();
    sub_1CF73EF58();
    swift_bridgeObjectRelease();
    sub_1CF73EF58();
    v76 = *(_QWORD *)&v39[v42];
    goto LABEL_25;
  }

LABEL_27:
  sub_1CF694020(v73, v71, v27, v64, v69, v66, v29, v59, v68, v67, v32, v75);
  if ((v61 & 1) != 0)
  {
    LOBYTE(v78) = 0;
    v48 = MEMORY[0x1E0DEE9D8];
    v49 = sub_1CF73EE44();
    v50 = sub_1CF73EE44();
    sub_1CF6C3DF8((unsigned __int8 *)&v78, 0, 0, 0, 0, 0xF000000000000000, 0, 0, v48, v49, v50);
    sub_1CF6CA148((uint64_t)v91);
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = v65;
    if (!v64)
      v51 = 0;
    if (v51 == 1)
    {
      v78 = 5;
      v79 = 0u;
      v80 = 0u;
      LOBYTE(v81) = 4;
      sub_1CF691788(&v78);
      sub_1CF6B706C();
    }
    else
    {
      v78 = 1;
      sub_1CF68D0CC();
    }
    sub_1CF6CA148((uint64_t)v91);
    swift_release();

  }
}

void sub_1CF6BDAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _BYTE v9[24];
  __int128 v10;
  char v11;

  OUTLINED_FUNCTION_141(a1, a2, a3, a4, a5, a6, a7, a8, 7, *(__int128 *)&v9[8], v10, v11);
  *(_OWORD *)v9 = xmmword_1CF743CC0;
  *(_QWORD *)&v9[16] = 0;
  *(_QWORD *)&v10 = 0;
  v8 = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_346();
  OUTLINED_FUNCTION_121();
  sub_1CF6B940C((uint64_t *)v9, (uint64_t)sub_1CF6C9F74, v8);
  OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_79_0();
}

void sub_1CF6BDB34(const void *a1)
{
  os_log_type_t v3;
  NSObject *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  os_log_type_t v29;
  NSObject *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  _BYTE v45[48];
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  char v50;
  uint64_t v51[4];
  char v52;
  _OWORD v53[2];
  uint64_t v54;
  char v55;
  _OWORD v56[2];
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  _BYTE v65[128];

  sub_1CF6C8CAC(a1, v65);
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return;
  sub_1CF6918B8((uint64_t)&v59);
  if (v64 == 4 && v59 == 7 && (v61 | v60 | v62 | v63) == 0)
  {
    sub_1CF6C8CAC(v65, v56);
    v13 = sub_1CF6C9F7C((uint64_t)v56);
    if (v13 == 5)
    {
      v17 = *(void **)nullsub_1(v56);
    }
    else
    {
      if (v13 != 4)
      {
        sub_1CF6C8CAC(v65, v53);
        if (sub_1CF6C9F7C((uint64_t)v53) == 1)
        {
          v19 = nullsub_1(v53);
          v20 = *(_OWORD *)(v19 + 32);
          v21 = *(_OWORD *)(v19 + 48);
          v22 = *(_QWORD *)(v19 + 64);
          v23 = *(unsigned __int8 *)(v19 + 72);
          v24 = *(_BYTE *)(v19 + 96);
          v25 = *(_OWORD *)(v19 + 16);
          *(_OWORD *)v45 = *(_OWORD *)v19;
          *(_OWORD *)&v45[16] = v25;
          *(_OWORD *)&v45[32] = v20;
          v46 = v21;
          v47 = v22;
          v48 = v23;
          v49 = *(_OWORD *)(v19 + 80);
          v50 = v24;
          sub_1CF6C8CAC(v65, v51);
          v26 = nullsub_1(v51);
          v27 = *(_QWORD *)(v26 + 80);
          v28 = *(_QWORD *)(v26 + 88);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1CF6A7B18(v27, v28);
          sub_1CF6B5738((uint64_t *)v45);
          *(_QWORD *)v45 = 4;
          memset(&v45[8], 0, 32);
          v45[40] = 4;
          sub_1CF691788((uint64_t *)v45);
          sub_1CF6B706C();
          goto LABEL_13;
        }
        v29 = sub_1CF73F0CC();
        if (qword_1ED8F78F8 != -1)
          swift_once();
        v30 = qword_1ED8F78F0;
        if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v29))
        {
          swift_retain();
          sub_1CF6CA148((uint64_t)v65);
          swift_retain();
          sub_1CF6CA148((uint64_t)v65);
          v31 = swift_slowAlloc();
          v32 = swift_slowAlloc();
          *(_QWORD *)v45 = v32;
          *(_DWORD *)v31 = 136446466;
          v33 = sub_1CF6B5B0C();
          sub_1CF68F110(v33, v34, (uint64_t *)v45);
          v51[0] = v35;
          sub_1CF73F2A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v31 + 12) = 2080;
          sub_1CF6C8CAC(v65, v51);
          sub_1CF6CA148((uint64_t)v65);
          v36 = sub_1CF73EF10();
          sub_1CF68F110(v36, v37, (uint64_t *)v45);
          v51[0] = v38;
          sub_1CF73F2A0();
          swift_bridgeObjectRelease();
          sub_1CF6CA148((uint64_t)v65);
          sub_1CF6CA148((uint64_t)v65);
          _os_log_impl(&dword_1CF67E000, v30, v29, "%{public}s Received unexpected response to handshake request: %s", (uint8_t *)v31, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1D17D3ED0](v32, -1, -1);
          MEMORY[0x1D17D3ED0](v31, -1, -1);
        }
        v51[3] = MEMORY[0x1E0DEA968];
        v51[0] = 0xD000000000000025;
        v51[1] = 0x80000001CF752080;
        v52 = 1;
        sub_1CF692E68();
        v17 = (void *)swift_allocError();
        v40 = v39;
        v45[0] = 2;
        v41 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v45);
        sub_1CF692EA4((uint64_t)v51);
        *(_BYTE *)v40 = 2;
        *(Swift::String *)(v40 + 8) = v41;
        *(_OWORD *)(v40 + 24) = 0u;
        *(_OWORD *)(v40 + 40) = 0u;
        *(_QWORD *)(v40 + 56) = 0;
        goto LABEL_27;
      }
      v14 = nullsub_1(v56);
      v15 = *(_BYTE *)v14;
      v43 = *(_OWORD *)(v14 + 24);
      v44 = *(_OWORD *)(v14 + 8);
      v42 = *(_OWORD *)(v14 + 40);
      v16 = *(_QWORD *)(v14 + 56);
      sub_1CF692E68();
      v17 = (void *)swift_allocError();
      *(_BYTE *)v18 = v15;
      *(_OWORD *)(v18 + 8) = v44;
      *(_OWORD *)(v18 + 24) = v43;
      *(_OWORD *)(v18 + 40) = v42;
      *(_QWORD *)(v18 + 56) = v16;
    }
    sub_1CF6CA148((uint64_t)v65);
LABEL_27:
    swift_willThrow();
    sub_1CF6926B8(v17);
    swift_release();

    return;
  }
  sub_1CF68EA18(v59, v60, v61, v62, v63, v64, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  v3 = sub_1CF73F0CC();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v4 = qword_1ED8F78F0;
  swift_retain_n();
  if (os_log_type_enabled(v4, v3))
  {
    swift_retain_n();
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v51[0] = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = sub_1CF6B5B0C();
    sub_1CF68F110(v7, v8, v51);
    *(_QWORD *)&v56[0] = v9;
    sub_1CF73F2A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    sub_1CF6918B8((uint64_t)v56);
    v53[0] = v56[0];
    v53[1] = v56[1];
    v54 = v57;
    v55 = v58;
    v10 = sub_1CF73EF10();
    sub_1CF68F110(v10, v11, v51);
    *(_QWORD *)&v56[0] = v12;
    sub_1CF73F2A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CF67E000, v4, v3, "%{public}s: Received peer info but in state %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17D3ED0](v6, -1, -1);
    MEMORY[0x1D17D3ED0](v5, -1, -1);
LABEL_13:
    swift_release();
    return;
  }
  swift_release_n();
}

void sub_1CF6BE1E4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t *);
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  char v21;

  sub_1CF6918B8((uint64_t)&v18);
  v8 = (void (*)(uint64_t *))v18;
  v9 = v20;
  if ((v21 - 1) > 1u)
  {
    OUTLINED_FUNCTION_80_0(v18, v3, v4, v5, v6, v7, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    sub_1CF73F0E4();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EB0);
    v16 = OUTLINED_FUNCTION_16();
    *(_OWORD *)(v16 + 16) = xmmword_1CF742850;
    sub_1CF6918B8((uint64_t)&v17);
    OUTLINED_FUNCTION_369();
    OUTLINED_FUNCTION_162();
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 64) = sub_1CF6C9F38();
    *(_QWORD *)(v16 + 32) = v1;
    *(_QWORD *)(v16 + 40) = v9;
    sub_1CF73E694();
    OUTLINED_FUNCTION_19();
  }
  else
  {
    v18 = 5;
    v19 = 0u;
    v20 = 0u;
    v21 = 4;
    sub_1CF691788(&v18);
    if (v8)
    {
      v18 = (uint64_t)a1;
      *(_QWORD *)&v19 = 0;
      BYTE8(v19) = 0;
      v10 = a1;
      v8(&v18);
      OUTLINED_FUNCTION_80_0((uint64_t)v8, v11, v12, v13, v14, v15, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);

    }
  }
  OUTLINED_FUNCTION_151();
}

void sub_1CF6BE39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t (*v8)(__int128 *);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  os_log_type_t v25;
  NSObject *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;

  OUTLINED_FUNCTION_292(a1, a2, a3, a4, a5, a6, a7, a8, v53, v57);
  v8 = (uint64_t (*)(__int128 *))v62;
  if (v66 == 1)
  {
    if ((_QWORD)v62)
    {
      v62 = xmmword_1CF743CD0;
      LOBYTE(v63) = 0x80;
      sub_1CF6A3AE0((uint64_t)v8);
      v9 = v8(&v62);
      v17 = OUTLINED_FUNCTION_102_0(v9, v10, v11, v12, v13, v14, v15, v16, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
      OUTLINED_FUNCTION_102_0(v17, v18, v19, v20, v21, v22, v23, v24, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    }
  }
  else
  {
    sub_1CF68EA18(v62, *((uint64_t *)&v62 + 1), v63, v64, v65, v66, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    v25 = sub_1CF73F0E4();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v26 = qword_1ED8F78F0;
    OUTLINED_FUNCTION_20();
    if (OUTLINED_FUNCTION_25_2())
    {
      OUTLINED_FUNCTION_20();
      v27 = OUTLINED_FUNCTION_4_7();
      OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v27 = 136446466;
      v28 = sub_1CF6B5B0C();
      OUTLINED_FUNCTION_227(v28, v29, v30, v31, v32, v33, v34, v35, v54, v58, v61);
      OUTLINED_FUNCTION_286();
      sub_1CF73F2A0();
      OUTLINED_FUNCTION_13_0();
      v36 = OUTLINED_FUNCTION_107();
      *(_WORD *)(v27 + 12) = 2080;
      OUTLINED_FUNCTION_292(v36, v37, v38, v39, v40, v41, v42, v43, v55, v59);
      v44 = OUTLINED_FUNCTION_369();
      OUTLINED_FUNCTION_227(v44, v45, v46, v47, v48, v49, v50, v51, v56, v60, v62);
      *(_QWORD *)&v62 = v52;
      sub_1CF73F2A0();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_107();
      OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v26, v25, "%{public}s: Ignoring awaiting user consent message from peer since state=%s", (uint8_t *)v27);
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_0_1();
    }
    OUTLINED_FUNCTION_13_0();
  }
  OUTLINED_FUNCTION_169();
}

void sub_1CF6BE5C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;

  v2 = *(_QWORD *)(a1 + 24);
  v1 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v7 = *(unsigned __int8 *)(a1 + 72);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 88);
  v10 = *(_BYTE *)(a1 + 96);
  v13 = *(_QWORD *)a1;
  v14 = *(_OWORD *)(a1 + 8);
  v15 = v2;
  v16 = v1;
  v17 = v4;
  v18 = v3;
  v19 = v6;
  v20 = v5;
  v21 = v7;
  v22 = v8;
  v23 = v9;
  v24 = v10;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_8_2();
  OUTLINED_FUNCTION_275();
  OUTLINED_FUNCTION_26_2();
  v11 = OUTLINED_FUNCTION_259();
  sub_1CF6A7B18(v11, v12);
  sub_1CF6B5738(&v13);
}

void sub_1CF6BE658(unsigned int a1, int a2)
{
  void (*v4)(uint64_t *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t (*v11)(void);
  uint64_t (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t (*v19)(void);
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  sub_1CF6918B8((uint64_t)&v21);
  v4 = (void (*)(uint64_t *))v21;
  if (v26 == 1)
  {
    if (v21)
    {
      v21 = HIWORD(a1) & 1;
      v22 = a2 & ((int)(a1 << 14) >> 31);
      LOBYTE(v23) = ((a1 & 0x20000) == 0) | 0x40;
      sub_1CF6A3AE0((uint64_t)v4);
      v4(&v21);
      v5 = OUTLINED_FUNCTION_135();
      sub_1CF68EA18(v5, v6, v7, v8, v9, v10, v11, v12, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
      v13 = OUTLINED_FUNCTION_135();
      sub_1CF68EA18(v13, v14, v15, v16, v17, v18, v19, v20, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    }
  }
  else
  {
    sub_1CF68EA18(v21, v22, v23, v24, v25, v26, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  }
  OUTLINED_FUNCTION_76_0();
}

void sub_1CF6BE744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  unint64_t v67;
  char v68;

  OUTLINED_FUNCTION_167();
  OUTLINED_FUNCTION_2_0();
  v1 = *(_QWORD *)(v0 + 528);
  if (v1
    && *(uint64_t *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) >= 20)
  {
    sub_1CF73F0E4();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    if (OUTLINED_FUNCTION_25_2())
    {
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_4_7();
      v45 = OUTLINED_FUNCTION_4_7();
      v13 = OUTLINED_FUNCTION_37_3(4.8751e-34);
      OUTLINED_FUNCTION_358(v13, v14, v15, v16, v17, v18, v19, v20, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36,
        v37,
        v38,
        v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45);
      v28 = v21;
      sub_1CF73F2A0();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_23_3(&dword_1CF67E000, v22, v23, "%{public}s: Pushing metadata update event to host");
      OUTLINED_FUNCTION_32_3();
      OUTLINED_FUNCTION_0_1();
    }
    sub_1CF6C3360((uint64_t)&v57);
    v24 = v66;
    v25 = v67;
    v46 = v58;
    v45 = v57;
    v47 = v59;
    v48 = v60;
    v49 = v61;
    v50 = v62;
    v51 = v63;
    v52 = v64;
    v53 = v65 | 0x8000000000000000;
    v54 = v66;
    v55 = v67;
    v56 = v68;
    sub_1CF6C8C54((uint64_t)&v45);
    sub_1CF6C8C64(&v45, &v28);
    OUTLINED_FUNCTION_211();
    OUTLINED_FUNCTION_8_2();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_296();
    sub_1CF6A7B18(v24, v25);
    OUTLINED_FUNCTION_109_0();
    OUTLINED_FUNCTION_150();
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_375();
    OUTLINED_FUNCTION_150();
    OUTLINED_FUNCTION_40_0();
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_375();
  }
  else
  {
    sub_1CF73F0E4();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    if (OUTLINED_FUNCTION_25_2())
    {
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_4_7();
      v45 = OUTLINED_FUNCTION_4_7();
      v2 = OUTLINED_FUNCTION_37_3(4.8751e-34);
      OUTLINED_FUNCTION_358(v2, v3, v4, v5, v6, v7, v8, v9, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36,
        v37,
        v38,
        v39,
        v40,
        v41,
        v42,
        v43,
        v44,
        v45);
      v28 = v10;
      OUTLINED_FUNCTION_85_0();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_23_3(&dword_1CF67E000, v11, v12, "%{public}s: Not pushing metadata update event to host as it does not have a wire protocol version to support it");
      OUTLINED_FUNCTION_32_3();
      OUTLINED_FUNCTION_0_1();
    }
  }
  OUTLINED_FUNCTION_17();
}

void sub_1CF6BEAE4(uint64_t a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, __n128 *a5)
{
  void *v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;
  id v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  os_log_type_t v19;
  NSObject *v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 *v46;
  unsigned __int8 v47;
  _QWORD v48[9];
  unsigned __int8 v49;
  uint64_t v50;
  unint64_t v51;
  char v52;
  _BYTE v53[136];
  _QWORD v54[17];
  uint64_t v55[17];
  _QWORD __src[16];
  _BYTE __dst[136];

  v6 = *(void **)a1;
  v7 = *(_BYTE *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *a2;
  v11 = a2[1];
  v12 = a2[2];
  v13 = a2[3];
  v47 = a2[4];
  if (!remotePairingIsEnabled())
  {
    v19 = sub_1CF73F0E4();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v20 = qword_1ED8F78F0;
    if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v19))
    {
      swift_retain_n();
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v55[0] = v22;
      *(_DWORD *)v21 = 136446210;
      v23 = sub_1CF6B5B0C();
      sub_1CF68F110(v23, v24, v55);
      v54[0] = v25;
      sub_1CF73F2A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF67E000, v20, v19, "%{public}s: Rejecting control channel connection because RemotePairing support is disabled on this device.", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v22, -1, -1);
      MEMORY[0x1D17D3ED0](v21, -1, -1);
    }
    sub_1CF6ABB3C();
    v26 = (void *)swift_allocError();
    sub_1CF6AA5E0();
    sub_1CF73F774();
    sub_1CF7203AC((uint64_t)v26, (uint64_t)v6);

    sub_1CF6C8CAC(__src, __dst);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v54[0] = a5->n128_u64[1];
      sub_1CF6C8CAC(__dst, &v54[1]);
      memcpy(v55, v54, 0x82uLL);
      sub_1CF6CA7F4((uint64_t)v55);
      sub_1CF6C8C64(v55, v53);
      sub_1CF6CA148((uint64_t)__dst);
      sub_1CF6B94F8();
      swift_release();
      sub_1CF6CA148((uint64_t)__dst);
    }
    sub_1CF6CA148((uint64_t)__dst);
    goto LABEL_27;
  }
  v46 = a5;
  v14 = v6;
  sub_1CF6B6B54((uint64_t)v6);
  v55[0] = v8;
  v55[1] = v9;
  swift_bridgeObjectRetain();
  sub_1CF6B5A9C(v55);
  if ((v7 & 1) != 0)
  {
    v55[0] = 8;
    memset(&v55[1], 0, 32);
    LOBYTE(v55[5]) = 4;
    sub_1CF691788(v55);
    if (!v10)
      goto LABEL_4;
LABEL_17:
    sub_1CF6C3360((uint64_t)v48);
    v28 = v48[1];
    v29 = v48[3];
    v41 = v48[2];
    v42 = v48[0];
    v39 = v48[6];
    v40 = v48[4];
    v44 = v48[7];
    v45 = v48[5];
    v38 = v48[8];
    v43 = v49;
    v30 = v50;
    v31 = v51;
    v37 = v52;
    if (qword_1ED8F7F18 != -1)
      swift_once();
    swift_beginAccess();
    v32 = qword_1ED8F7910;
    v33 = (id)qword_1ED8F7F10;
    if (v32 != -1)
      swift_once();
    swift_beginAccess();
    v34 = (void *)qword_1ED8F7900;
    __src[0] = v33;
    __src[1] = qword_1ED8F7900;
    LOBYTE(__src[2]) = 1;
    BYTE1(__src[2]) = v11;
    BYTE2(__src[2]) = v12;
    BYTE3(__src[2]) = v13;
    BYTE4(__src[2]) = v47;
    __src[3] = v42;
    __src[4] = v28;
    __src[5] = v41;
    __src[6] = v29;
    __src[7] = v40;
    __src[8] = v45;
    __src[9] = v39;
    __src[10] = v44;
    __src[11] = v38;
    __src[12] = v43;
    __src[13] = v30;
    __src[14] = v31;
    LOBYTE(__src[15]) = v37;
    memcpy(__dst, __src, 0x79uLL);
    sub_1CF6CA904((uint64_t)__dst);
    swift_beginAccess();
    if (!swift_weakLoadStrong())
    {
      v36 = v34;
      sub_1CF6CA9BC((uint64_t)__src);
      a5 = v46;
      goto LABEL_27;
    }
    a5 = v46;
    v54[0] = v46->n128_u64[1];
    sub_1CF6C8CAC(__dst, &v54[1]);
    memcpy(v55, v54, 0x82uLL);
    sub_1CF6CA7F4((uint64_t)v55);
    sub_1CF6C8C64(v55, v53);
    sub_1CF6CA90C((uint64_t)__src);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v35 = v34;
    sub_1CF6A7B18(v30, v31);
    sub_1CF6CA90C((uint64_t)__src);
    sub_1CF6B94F8();
    swift_release();
    sub_1CF6CA9BC((uint64_t)__src);
    sub_1CF6CA9BC((uint64_t)__src);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CF693FE0(v30, v31);
LABEL_26:
    sub_1CF6CA9BC((uint64_t)__src);
LABEL_27:
    swift_release();
    goto LABEL_28;
  }
  v55[0] = 5;
  memset(&v55[1], 0, 32);
  LOBYTE(v55[5]) = 4;
  sub_1CF691788(v55);
  sub_1CF6B706C();
  if (v10)
    goto LABEL_17;
LABEL_4:
  if (qword_1ED8F7F18 != -1)
    swift_once();
  swift_beginAccess();
  v15 = qword_1ED8F7910;
  v16 = (id)qword_1ED8F7F10;
  if (v15 != -1)
    swift_once();
  swift_beginAccess();
  v17 = (void *)qword_1ED8F7900;
  __src[0] = v16;
  __src[1] = qword_1ED8F7900;
  LOBYTE(__src[2]) = 0;
  BYTE1(__src[2]) = v11;
  BYTE2(__src[2]) = v12;
  BYTE3(__src[2]) = v13;
  BYTE4(__src[2]) = v47;
  memset(&__src[3], 0, 97);
  memcpy(__dst, __src, 0x79uLL);
  sub_1CF6CA904((uint64_t)__dst);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    v54[0] = a5->n128_u64[1];
    sub_1CF6C8CAC(__dst, &v54[1]);
    memcpy(v55, v54, 0x82uLL);
    sub_1CF6CA7F4((uint64_t)v55);
    sub_1CF6C8C64(v55, v53);
    sub_1CF6CA90C((uint64_t)__src);
    v18 = v17;
    sub_1CF6CA90C((uint64_t)__src);
    sub_1CF6B94F8();
    swift_release();
    sub_1CF6CA9BC((uint64_t)__src);
    sub_1CF6CA9BC((uint64_t)__src);
    goto LABEL_26;
  }
  v27 = v17;
  sub_1CF6CA9BC((uint64_t)__src);
  swift_release();
LABEL_28:
  sub_1CF6CA630(a5, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
}

void sub_1CF6BF44C()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;
  RemotePairingDevice::ControlChannelConnectionError::Code v3;
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  _QWORD v11[4];
  char v12;

  OUTLINED_FUNCTION_68_1();
  if (v0 < 0)
  {
    v4 = sub_1CF73F0CC();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v5 = qword_1ED8F78F0;
    if (OUTLINED_FUNCTION_45_3())
    {
      OUTLINED_FUNCTION_20();
      v6 = (uint8_t *)OUTLINED_FUNCTION_4_7();
      v11[0] = OUTLINED_FUNCTION_4_7();
      v7 = OUTLINED_FUNCTION_60_0(4.8751e-34);
      OUTLINED_FUNCTION_46_1(v7, v8, v9);
      OUTLINED_FUNCTION_59_2();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_33(&dword_1CF67E000, v5, v4, "%{public}s: Ignoring invalid PairVerify failed message received by host", v6);
      OUTLINED_FUNCTION_32_3();
      OUTLINED_FUNCTION_0_1();
    }
    goto LABEL_8;
  }
  if ((v0 & 1) == 0)
  {
    v11[3] = MEMORY[0x1E0DEA968];
    OUTLINED_FUNCTION_75_0();
    v11[0] = v1;
    v11[1] = v2;
    v12 = 1;
    sub_1CF692E68();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_280();
    ControlChannelConnectionError.Message.format(code:)(v3);
    OUTLINED_FUNCTION_162();
    sub_1CF692EA4((uint64_t)v11);
    OUTLINED_FUNCTION_42_3();
    OUTLINED_FUNCTION_44_0();
LABEL_8:
    OUTLINED_FUNCTION_76_0();
    return;
  }
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_98_0(v10);
  sub_1CF6B706C();
}

void sub_1CF6BF5D8(uint64_t a1, uint64_t a2, __n128 *a3)
{
  char v5;
  os_log_type_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint8_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  uint64_t v38;
  Swift::String v39;
  void *v40;
  uint64_t v41;
  void *v42;
  id v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  __n128 *v49;
  _BYTE v50[136];
  _QWORD __src[17];
  uint64_t __dst[17];
  _BYTE v53[128];
  _BYTE v54[128];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;

  if ((*(_DWORD *)(a1 + 240) & 0x8000) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_4:
    v6 = sub_1CF73F0E4();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v49 = a3;
    v7 = qword_1ED8F78F0;
    v8 = v6;
    if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v6))
    {
      swift_retain_n();
      v9 = (uint8_t *)swift_slowAlloc();
      v10 = swift_slowAlloc();
      __dst[0] = v10;
      *(_DWORD *)v9 = 136446210;
      v11 = sub_1CF6B5B0C();
      sub_1CF68F110(v11, v12, __dst);
      __src[0] = v13;
      sub_1CF73F2A0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF67E000, v7, v8, "%{public}s: Received PairSetup cancel request from host", v9, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v10, -1, -1);
      MEMORY[0x1D17D3ED0](v9, -1, -1);
    }
    sub_1CF6918B8((uint64_t)&v55);
    v15 = v55;
    v14 = v56;
    v17 = v57;
    v16 = v58;
    v18 = v59;
    switch(v60)
    {
      case 0:
        __asm { BR              X11 }
        return;
      case 1:
        sub_1CF68EA18(v55, v56, v57, v58, v59, 1, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
        goto LABEL_22;
      case 2:
        sub_1CF68EA18(v55, v56, v57, v58, v59, 2, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
        goto LABEL_22;
      case 3:
        v27 = sub_1CF73F0E4();
        v28 = qword_1ED8F78F0;
        v29 = v27;
        if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v27))
        {
          swift_retain_n();
          v47 = v16;
          v30 = (uint8_t *)swift_slowAlloc();
          v48 = v18;
          v31 = swift_slowAlloc();
          __dst[0] = v31;
          *(_DWORD *)v30 = 136446210;
          v32 = sub_1CF6B5B0C();
          sub_1CF68F110(v32, v33, __dst);
          __src[0] = v34;
          sub_1CF73F2A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CF67E000, v28, v29, "%{public}s: Cancelling in-progress pairing consent collection", v30, 0xCu);
          swift_arrayDestroy();
          v35 = v31;
          v18 = v48;
          MEMORY[0x1D17D3ED0](v35, -1, -1);
          v36 = v30;
          v16 = v47;
          MEMORY[0x1D17D3ED0](v36, -1, -1);
        }
        swift_beginAccess();
        sub_1CF6C6F4C(a1 + 320, (uint64_t)__dst, (uint64_t *)&unk_1ED8F7120);
        if (__dst[3])
        {
          sub_1CF68CE44((uint64_t)__dst, (uint64_t)__src);
          sub_1CF6A4E24((uint64_t)__dst, (uint64_t *)&unk_1ED8F7120);
          v37 = __src[3];
          v38 = __src[4];
          __swift_project_boxed_opaque_existential_0Tm(__src, __src[3]);
          (*(void (**)(uint64_t, uint64_t))(v38 + 32))(v37, v38);
          sub_1CF68EA18(v15, v14, v17, v16, v18, 3, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
          __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__src);
        }
        else
        {
          sub_1CF68EA18(v15, v14, v17, v16, v18, 3, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
          sub_1CF6A4E24((uint64_t)__dst, (uint64_t *)&unk_1ED8F7120);
        }
LABEL_22:
        a3 = v49;
        __dst[0] = 5;
        memset(&__dst[1], 0, 32);
        LOBYTE(__dst[5]) = 4;
        sub_1CF691788(__dst);
        objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession), sel_invalidate);
        sub_1CF6CAA6C((uint64_t)v54);
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          __src[0] = v49->n128_u64[1];
          sub_1CF6C8CAC(v54, &__src[1]);
          memcpy(__dst, __src, 0x82uLL);
          sub_1CF6CA7F4((uint64_t)__dst);
          sub_1CF6C8C64(__dst, v50);
          sub_1CF6B94F8();
          swift_release();
        }
        break;
      default:
        sub_1CF68EA18(v55, v56, v57, v58, v59, v60, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
        __dst[3] = MEMORY[0x1E0DEA968];
        __dst[0] = 0xD000000000000029;
        __dst[1] = 0x80000001CF7516B0;
        LOBYTE(__dst[4]) = 1;
        LOBYTE(__src[0]) = 3;
        v39 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)__src);
        sub_1CF692EA4((uint64_t)__dst);
        sub_1CF692E68();
        v40 = (void *)swift_allocError();
        *(_BYTE *)v41 = 3;
        *(Swift::String *)(v41 + 8) = v39;
        *(_OWORD *)(v41 + 24) = 0u;
        *(_OWORD *)(v41 + 40) = 0u;
        *(_QWORD *)(v41 + 56) = 0;
        swift_beginAccess();
        v42 = *(void **)(a1 + 528);
        if (v42)
        {
          swift_bridgeObjectRetain();
          v43 = 0;
          v44 = v42;
          a3 = v49;
        }
        else
        {
          swift_bridgeObjectRetain();
          v45 = 0;
          a3 = v49;
          if (qword_1ED8F7910 != -1)
            swift_once();
          swift_beginAccess();
          v44 = (id)qword_1ED8F7900;
          v42 = 0;
        }
        v46 = v42;
        sub_1CF7203AC((uint64_t)v40, (uint64_t)v44);

        sub_1CF6C8CAC(v54, v53);
        swift_beginAccess();
        if (swift_weakLoadStrong())
        {
          __src[0] = a3->n128_u64[1];
          sub_1CF6C8CAC(v53, &__src[1]);
          memcpy(__dst, __src, 0x82uLL);
          sub_1CF6CA7F4((uint64_t)__dst);
          sub_1CF6C8C64(__dst, v50);
          sub_1CF6CA148((uint64_t)v53);
          sub_1CF6B94F8();
          swift_release();
          sub_1CF6CA148((uint64_t)v53);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();

        }
        else
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();

        }
        sub_1CF6CA148((uint64_t)v53);
        break;
    }
    goto LABEL_33;
  }
  v5 = sub_1CF73F690();
  swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    goto LABEL_4;
  v19 = sub_1CF73F0CC();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v20 = qword_1ED8F78F0;
  v21 = v19;
  if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v19))
  {
    swift_retain_n();
    v22 = (uint8_t *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    __dst[0] = v23;
    *(_DWORD *)v22 = 136446210;
    v24 = sub_1CF6B5B0C();
    sub_1CF68F110(v24, v25, __dst);
    __src[0] = v26;
    sub_1CF73F2A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CF67E000, v20, v21, "%{public}s: Ignoring invalid cancelPairSetup message received by host", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17D3ED0](v23, -1, -1);
    MEMORY[0x1D17D3ED0](v22, -1, -1);
  }
LABEL_33:
  swift_release();
  sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
}

void sub_1CF6C0144()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  RemotePairingDevice::ControlChannelConnectionError::Code v6;
  os_log_type_t v7;
  NSObject *v8;
  uint8_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  os_log_type_t v31;
  NSObject *v32;
  uint8_t *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  os_log_type_t v50;
  NSObject *v51;
  uint8_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  unint64_t v72;
  NSObject *v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;

  v1 = (_QWORD *)v0;
  OUTLINED_FUNCTION_68_1();
  if (v3 < 0)
  {
    v7 = sub_1CF73F0CC();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v8 = qword_1ED8F78F0;
    if (OUTLINED_FUNCTION_45_3())
    {
      OUTLINED_FUNCTION_20();
      v9 = (uint8_t *)OUTLINED_FUNCTION_4_7();
      v107 = OUTLINED_FUNCTION_4_7();
      v10 = OUTLINED_FUNCTION_60_0(4.8751e-34);
      OUTLINED_FUNCTION_224(v10, v11, v12, v13, v14, v15, v16, v17, v82, v83, v84, v85, v86, v87, v88, v90, v91, v92, v93,
        v94,
        v95,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107);
      OUTLINED_FUNCTION_59_2();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_33(&dword_1CF67E000, v8, v7, "%{public}s: Ignoring invalid PairSetup request received by host", v9);
      OUTLINED_FUNCTION_32_3();
      OUTLINED_FUNCTION_0_1();
    }
  }
  else
  {
    if ((v3 & 1) == 0)
    {
      *(_QWORD *)&v109 = MEMORY[0x1E0DEA968];
      OUTLINED_FUNCTION_75_0();
      v107 = v4;
      *(_QWORD *)&v108 = v5;
      BYTE8(v109) = 1;
      sub_1CF692E68();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_280();
      ControlChannelConnectionError.Message.format(code:)(v6);
      OUTLINED_FUNCTION_162();
      sub_1CF692EA4((uint64_t)&v107);
      OUTLINED_FUNCTION_42_3();
      OUTLINED_FUNCTION_44_0();
      return;
    }
    v19 = v2[1];
    v18 = v2[2];
    v20 = v2[3];
    v21 = v2[4];
    if ((v3 & 0x100) == 0)
    {
      LOBYTE(v90) = 1;
      OUTLINED_FUNCTION_2_0();
      v22 = *(_QWORD *)(v0 + 296);
      v23 = *(_QWORD *)(v0 + 304);
      v24 = OUTLINED_FUNCTION_266();
      sub_1CF6A3AE0(v24);
      v25 = MEMORY[0x1E0DEE9D8];
      v89 = v20;
      v26 = v21;
      v27 = v19;
      v28 = OUTLINED_FUNCTION_215();
      v29 = OUTLINED_FUNCTION_215();
      sub_1CF6C3DF8((unsigned __int8 *)&v90, v22, v23, 0, v27, v18, v89, v26, v25, v28, v29);
      OUTLINED_FUNCTION_19();
      OUTLINED_FUNCTION_11();
      v30 = OUTLINED_FUNCTION_266();
LABEL_25:
      sub_1CF693EC8(v30);
      return;
    }
    if ((*(_BYTE *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__userHasDeclinedPairing) & 1) != 0)
    {
      v31 = sub_1CF73F0CC();
      if (qword_1ED8F78F8 != -1)
        swift_once();
      v32 = qword_1ED8F78F0;
      if (OUTLINED_FUNCTION_45_3())
      {
        OUTLINED_FUNCTION_20();
        v33 = (uint8_t *)OUTLINED_FUNCTION_4_7();
        v107 = OUTLINED_FUNCTION_4_7();
        v34 = OUTLINED_FUNCTION_60_0(4.8751e-34);
        OUTLINED_FUNCTION_224(v34, v35, v36, v37, v38, v39, v40, v41, v82, v83, v84, v85, v86, v87, v88, v90, v91, v92, v93,
          v94,
          v95,
          v96,
          v97,
          v98,
          v99,
          v100,
          v101,
          v102,
          v103,
          v104,
          v105,
          v106,
          v107);
        OUTLINED_FUNCTION_59_2();
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_11_3();
        OUTLINED_FUNCTION_33(&dword_1CF67E000, v32, v31, "%{public}s: Automatically rejecting pairing request from host since user has already declined previous attempt", v33);
        OUTLINED_FUNCTION_32_3();
        OUTLINED_FUNCTION_0_1();
      }
      sub_1CF6ABB3C();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_279();
      sub_1CF6AA5E0();
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_202();
      OUTLINED_FUNCTION_2_0();
      v42 = (void *)v1[66];
      if (v42)
      {
        v43 = (id)v1[66];
      }
      else
      {
        if (qword_1ED8F7910 != -1)
          swift_once();
        OUTLINED_FUNCTION_2_0();
        v43 = OUTLINED_FUNCTION_241();
      }
      OUTLINED_FUNCTION_326();
      if (v70 != v71)
      {
        v73 = 0;
        v72 = 0xC000000000000000;
      }
      else
      {
        OUTLINED_FUNCTION_41();
        v72 = 0x4000000000000000;
        v73 = v32;
      }
      v74 = v42;

      OUTLINED_FUNCTION_44_0();
      v108 = 0u;
      v109 = 0u;
      v110 = 0u;
      v111 = 0u;
      v107 = (uint64_t)v73;
      v112 = v72;
      v113 = 0;
      v114 = 0;
      v115 = 0;
      sub_1CF6C8C54((uint64_t)&v107);
      sub_1CF6C8C64(&v107, &v90);
      OUTLINED_FUNCTION_58_2();
      OUTLINED_FUNCTION_14_6(v73, v75, v76, v77, v78, v79, v80, v81, 0, v72, 0, 0);
    }
    else
    {
      OUTLINED_FUNCTION_2_0();
      if (*(_BYTE *)(v0 + 312) != 1)
      {
        v50 = sub_1CF73F0E4();
        if (qword_1ED8F78F8 != -1)
          swift_once();
        v51 = qword_1ED8F78F0;
        if (OUTLINED_FUNCTION_81_0())
        {
          OUTLINED_FUNCTION_20();
          v52 = (uint8_t *)OUTLINED_FUNCTION_4_7();
          v107 = OUTLINED_FUNCTION_4_7();
          *(_DWORD *)v52 = 136446210;
          v53 = OUTLINED_FUNCTION_69_1();
          OUTLINED_FUNCTION_224(v53, v54, v55, v56, v57, v58, v59, v60, v82, v83, v84, v85, v86, v87, v88, v90, v91, v92, v93,
            v94,
            v95,
            v96,
            v97,
            v98,
            v99,
            v100,
            v101,
            v102,
            v103,
            v104,
            v105,
            v106,
            v107);
          v90 = v61;
          OUTLINED_FUNCTION_319();
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_11_3();
          OUTLINED_FUNCTION_33(&dword_1CF67E000, v51, v50, "%{public}s: Not requesting user consent for pairing attempt as requireUserConsentForPairing is set to false", v52);
          OUTLINED_FUNCTION_32_3();
          OUTLINED_FUNCTION_0_1();
        }
        LOBYTE(v90) = 1;
        OUTLINED_FUNCTION_2_0();
        v62 = v1[37];
        v63 = v1[38];
        v64 = OUTLINED_FUNCTION_259();
        sub_1CF6A3AE0(v64);
        v65 = MEMORY[0x1E0DEE9D8];
        v66 = OUTLINED_FUNCTION_212();
        v67 = OUTLINED_FUNCTION_212();
        OUTLINED_FUNCTION_264((unsigned __int8 *)&v90, v62, v63, 0, v19, v18, v68, v69, v65, v66, v67);
        OUTLINED_FUNCTION_270();
        OUTLINED_FUNCTION_57();
        v30 = OUTLINED_FUNCTION_259();
        goto LABEL_25;
      }
      v107 = v19;
      v108 = v18;
      v109 = 0uLL;
      LOBYTE(v110) = 3;
      sub_1CF6934BC(v19, v18);
      OUTLINED_FUNCTION_98_0(&v107);
      v44 = OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_378(v44, (uint64_t)&v107, (uint64_t *)&unk_1ED8F7120);
      if ((_QWORD)v109)
      {
        sub_1CF68CE44((uint64_t)&v107, (uint64_t)&v90);
        sub_1CF6A4E24((uint64_t)&v107, (uint64_t *)&unk_1ED8F7120);
        v45 = v94;
        __swift_project_boxed_opaque_existential_0Tm(&v90, v93);
        v46 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData);
        v47 = *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData + 8);
        v48 = *(void (**)(uint64_t))(v45 + 24);
        OUTLINED_FUNCTION_211();
        sub_1CF6A7B18(v46, v47);
        OUTLINED_FUNCTION_121();
        v49 = OUTLINED_FUNCTION_259();
        v48(v49);
        swift_release();
        sub_1CF693FE0(v46, v47);
        OUTLINED_FUNCTION_107();
        __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v90);
      }
      else
      {
        sub_1CF6A4E24((uint64_t)&v107, (uint64_t *)&unk_1ED8F7120);
      }
    }
  }
}

void sub_1CF6C081C(void **a1)
{
  void *v1;

  v1 = *a1;
  sub_1CF6C0F50(&v1);
}

void sub_1CF6C0850()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  char v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t *v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  void *v36;
  unint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  os_log_type_t v46;
  NSObject *v47;
  os_log_type_t v48;
  char v49;
  uint8_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD v64[2];
  uint8_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  OUTLINED_FUNCTION_167();
  v83 = v3;
  v84 = v4;
  OUTLINED_FUNCTION_68_1();
  if ((v7 & 0x8000) == 0)
  {
    v8 = v0;
    if ((v7 & 0x1000000) != 0
      && (v9 = v5,
          v1 = *(void **)(v6 + 8),
          v10 = *(_QWORD *)(v6 + 16),
          v2 = *(_QWORD *)(v0 + 216),
          __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v0 + 192), v2),
          v11 = OUTLINED_FUNCTION_266(),
          (v12(v11) & 1) != 0))
    {
      sub_1CF6918B8((uint64_t)&v72);
      v13 = v75 == 4 && v72 == (void *)5;
      if (v13 && !(*((_QWORD *)&v73 + 1) | (unint64_t)v73 | (unint64_t)v74 | *((_QWORD *)&v74 + 1)))
      {
        v16 = OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_378(v16, (uint64_t)&v72, (uint64_t *)&unk_1ED8F7120);
        v17 = v74;
        if ((_QWORD)v74)
        {
          v18 = __swift_project_boxed_opaque_existential_0Tm(&v72, v74);
          v19 = *(_QWORD *)(v17 - 8);
          ((void (*)(_QWORD *, _QWORD *))MEMORY[0x1E0C80A78])(v18, v18);
          v21 = (char *)v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
          (*(void (**)(char *))(v19 + 16))(v21);
          sub_1CF6A4E24((uint64_t)&v72, (uint64_t *)&unk_1ED8F7120);
          v22 = OUTLINED_FUNCTION_266();
          v23(v22);
          (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v17);
          v24 = v71;
          if (v71)
          {
            v25 = v69;
            if ((v69 & 1) != 0)
            {
              if ((v9 & 1) == 0)
              {
                v67 = v70;
                v26 = &unk_1E8C983F0;
                goto LABEL_35;
              }
            }
            else if ((v9 & 1) != 0)
            {
              v67 = v70;
              v26 = &unk_1E8C983C0;
LABEL_35:
              v68 = (uint64_t)v26;
              v46 = sub_1CF73F0E4();
              if (qword_1ED8F78F8 != -1)
                swift_once();
              v47 = qword_1ED8F78F0;
              v48 = v46;
              if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v46))
              {
                v49 = v25 & 1;
                v50 = (uint8_t *)OUTLINED_FUNCTION_4_7();
                v66 = OUTLINED_FUNCTION_4_7();
                v72 = (void *)v66;
                v65 = v50;
                *(_DWORD *)v50 = 136315138;
                v64[1] = v50 + 4;
                LOBYTE(v69) = v49;
                v51 = sub_1CF73EF10();
                sub_1CF68F110(v51, v52, (uint64_t *)&v72);
                v69 = v53;
                sub_1CF73F2A0();
                OUTLINED_FUNCTION_107();
                OUTLINED_FUNCTION_33(&dword_1CF67E000, v47, v48, "Host approved for promptless pairing of type %s.", v65);
                OUTLINED_FUNCTION_32_3();
                OUTLINED_FUNCTION_0_1();
              }
              if ((v9 & 1) != 0)
                v54 = 3;
              else
                v54 = 2;
              LOBYTE(v69) = v54;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EA8);
              v55 = OUTLINED_FUNCTION_16();
              *(_OWORD *)(v55 + 16) = xmmword_1CF742850;
              v72 = (void *)0xD00000000000001DLL;
              *(_QWORD *)&v73 = 0x80000001CF751F70;
              v56 = MEMORY[0x1E0DEA968];
              sub_1CF73F330();
              *(_QWORD *)(v55 + 96) = v56;
              *(_QWORD *)(v55 + 72) = v67;
              *(_QWORD *)(v55 + 80) = v24;
              v57 = OUTLINED_FUNCTION_129();
              v63 = OUTLINED_FUNCTION_129();
              v62 = v68;
              OUTLINED_FUNCTION_254();
              sub_1CF6C3DF8(v58, v59, v60, v61, (uint64_t)v1, v10, 0, 0, v62, v63, v57);
              OUTLINED_FUNCTION_57();
              OUTLINED_FUNCTION_150();
              OUTLINED_FUNCTION_107();
              goto LABEL_15;
            }
            OUTLINED_FUNCTION_11_3();
            sub_1CF6AA5E0();
            OUTLINED_FUNCTION_257();
            v81 = v69;
            v82 = v70;
            OUTLINED_FUNCTION_91_0();
            v33 = (uint64_t)v72;
            v34 = v73;
            sub_1CF6ABB3C();
            v29 = (void *)OUTLINED_FUNCTION_105();
            *v35 = v33;
            v35[1] = v34;
            OUTLINED_FUNCTION_2_0();
            v31 = *(void **)(v8 + 528);
            if (v31)
            {
              v32 = *(char **)(v8 + 528);
              goto LABEL_30;
            }
            if (qword_1ED8F7910 == -1)
              goto LABEL_26;
            goto LABEL_44;
          }
        }
        else
        {
          sub_1CF6A4E24((uint64_t)&v72, (uint64_t *)&unk_1ED8F7120);
        }
        sub_1CF6AA5E0();
        OUTLINED_FUNCTION_257();
        v81 = v69;
        v82 = v70;
        OUTLINED_FUNCTION_91_0();
        v27 = (uint64_t)v72;
        v28 = v73;
        sub_1CF6ABB3C();
        v29 = (void *)OUTLINED_FUNCTION_105();
        *v30 = v27;
        v30[1] = v28;
        OUTLINED_FUNCTION_2_0();
        v31 = *(void **)(v8 + 528);
        if (v31)
        {
          v32 = *(char **)(v8 + 528);
LABEL_30:
          if (*(uint64_t *)&v32[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 11)
          {
            OUTLINED_FUNCTION_223();
            v37 = 0x4000000000000000;
            v36 = v29;
          }
          else
          {
            v36 = 0;
            v37 = 0xC000000000000000;
          }
          v38 = v31;

          v73 = 0u;
          v74 = 0u;
          v75 = 0u;
          v76 = 0u;
          v72 = v36;
          v77 = v37;
          v78 = 0;
          v79 = 0;
          v80 = 0;
          sub_1CF6C8C54((uint64_t)&v72);
          sub_1CF6C8C64(&v72, &v69);
          sub_1CF6B94F8();
          OUTLINED_FUNCTION_14_6(v36, v39, v40, v41, v42, v43, v44, v45, 0, v37, 0, 0);
          goto LABEL_15;
        }
        if (qword_1ED8F7910 == -1)
        {
LABEL_26:
          OUTLINED_FUNCTION_2_0();
          v32 = (char *)(id)qword_1ED8F7900;
          goto LABEL_30;
        }
LABEL_44:
        swift_once();
        goto LABEL_26;
      }
      sub_1CF68EA18((uint64_t)v72, v73, *((uint64_t *)&v73 + 1), v74, *((uint64_t *)&v74 + 1), v75, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
      OUTLINED_FUNCTION_263(MEMORY[0x1E0DEA968]);
    }
    else
    {
      OUTLINED_FUNCTION_263(MEMORY[0x1E0DEA968]);
    }
    OUTLINED_FUNCTION_75_0();
    v72 = (void *)v14;
    *(_QWORD *)&v73 = v15;
    BYTE8(v74) = 1;
    sub_1CF692E68();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_238();
    LOBYTE(v69) = v2;
    ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v69);
    OUTLINED_FUNCTION_251();
    sub_1CF692EA4((uint64_t)&v72);
    OUTLINED_FUNCTION_97_0();
    sub_1CF6926B8(v1);
    OUTLINED_FUNCTION_234();
LABEL_15:
    OUTLINED_FUNCTION_17();
    return;
  }
  sub_1CF73F0CC();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  sub_1CF73E694();
}

void sub_1CF6C0F50(void **a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  NSObject *v38;
  uint8_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  char v49;
  uint64_t *v50;
  void *v51;
  id v52;
  uint64_t v53;
  os_log_type_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t *v73;
  void *v74;
  char *v75;
  char v76;
  char v77;
  id v78;
  unint64_t v79;
  void *v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  void *v103;
  unint64_t v104;
  id v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char v193;

  v4 = v1;
  v5 = *a1;
  v6 = (uint64_t *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__mdmChallengeData + 8);
  if (v7 >> 60 != 15)
  {
    v185 = *v6;
    *(_QWORD *)&v186 = v7;
    OUTLINED_FUNCTION_302();
    OUTLINED_FUNCTION_302();
    v8 = sub_1CF73E5C8();
    sub_1CF693FE0(v185, v7);
    if (v8 < 0)
    {
      __break(1u);
      goto LABEL_42;
    }
    sub_1CF73E52C();
    sub_1CF6933C0(v185, v186);
  }
  sub_1CF6B6F44(0, 0xF000000000000000);
  sub_1CF6918B8((uint64_t)&v185);
  v2 = *((_QWORD *)&v187 + 1);
  v3 = v187;
  if (v188 == 3)
  {
    v155 = v185;
    v158 = v186;
    LOBYTE(v7) = sub_1CF73F0C0();
    if (qword_1ED8F78F8 == -1)
    {
LABEL_6:
      v9 = qword_1ED8F78F0;
      if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, (os_log_type_t)v7))
      {
        OUTLINED_FUNCTION_121();
        OUTLINED_FUNCTION_324();
        OUTLINED_FUNCTION_121();
        OUTLINED_FUNCTION_324();
        v10 = OUTLINED_FUNCTION_4_7();
        v185 = OUTLINED_FUNCTION_4_7();
        *(_DWORD *)v10 = 136446466;
        v11 = OUTLINED_FUNCTION_69_1();
        OUTLINED_FUNCTION_225(v11, v12, v13, v14, v15, v16, v17, v18, v135, v137, v140, v144, v147, v150, v155, v158, *((uint64_t *)&v158 + 1), v163, v164,
          v165,
          v166,
          v168,
          v170,
          v171,
          v172,
          v173,
          v174,
          v175,
          v176,
          v177,
          v178,
          v179,
          v180,
          v181,
          v182,
          v183,
          v184,
          v185);
        OUTLINED_FUNCTION_106_0();
        sub_1CF73F2A0();
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_11_3();
        *(_WORD *)(v10 + 12) = 2080;
        OUTLINED_FUNCTION_324();
        v19 = sub_1CF73EF10();
        sub_1CF68F110(v19, v20, &v185);
        OUTLINED_FUNCTION_106_0();
        OUTLINED_FUNCTION_243();
        OUTLINED_FUNCTION_40_0();
        OUTLINED_FUNCTION_325();
        OUTLINED_FUNCTION_325();
        OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v9, (os_log_type_t)v7, "%{public}s: Received pairing consent collection outcome: %s", (uint8_t *)v10);
        OUTLINED_FUNCTION_64();
        OUTLINED_FUNCTION_0_1();
      }
      switch((unint64_t)v5)
      {
        case 0uLL:
        case 2uLL:
          LOBYTE(v185) = 1;
          v21 = OUTLINED_FUNCTION_365();
          sub_1CF6934BC(v21, v22);
          v23 = MEMORY[0x1E0DEE9D8];
          v24 = OUTLINED_FUNCTION_219();
          v141 = OUTLINED_FUNCTION_219();
          OUTLINED_FUNCTION_254();
          OUTLINED_FUNCTION_264(v25, v26, v27, v28, v155, v158, v29, v30, v23, v24, v141);
          v31 = OUTLINED_FUNCTION_365();
          OUTLINED_FUNCTION_138(v31, v32, *((uint64_t *)&v158 + 1), v3, v2, 3, v33, v34, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
          OUTLINED_FUNCTION_57();
          OUTLINED_FUNCTION_19();
          v35 = OUTLINED_FUNCTION_365();
          sub_1CF68EA18(v35, v36, *((uint64_t *)&v158 + 1), v3, v2, 3, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
          break;
        case 1uLL:
          OUTLINED_FUNCTION_2_0();
          v53 = *(_QWORD *)(v4 + 528);
          if (v53
            && *(uint64_t *)(v53
                          + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) >= 10)
          {
            v186 = 0u;
            v187 = 0u;
            v188 = 0u;
            v189 = 0u;
            v185 = 3;
            v190 = 0xC000000000000000;
            v191 = 0;
            v192 = 0;
            v193 = 0;
            v127 = sub_1CF6C8C54((uint64_t)&v185);
            OUTLINED_FUNCTION_204(v127, v128, v129, v130, v131, v132, v133, v134, v135, v137, v140, v144, v147, v150, v155, v158, *((uint64_t *)&v158 + 1), v163, v164,
              v165,
              v166,
              v168,
              v170,
              v171,
              v172,
              v173,
              v174,
              v175,
              v176,
              v177,
              v178,
              v179,
              v180,
              v181,
              v182,
              v183,
              v184,
              v185);
            OUTLINED_FUNCTION_58_2();
          }
          else
          {
            v54 = sub_1CF73F0C0();
            v55 = qword_1ED8F78F0;
            v56 = v54;
            if (OUTLINED_FUNCTION_45_3())
            {
              OUTLINED_FUNCTION_20();
              v57 = (uint8_t *)OUTLINED_FUNCTION_4_7();
              v185 = OUTLINED_FUNCTION_4_7();
              *(_DWORD *)v57 = 136446210;
              v58 = OUTLINED_FUNCTION_69_1();
              OUTLINED_FUNCTION_225(v58, v59, v60, v61, v62, v63, v64, v65, v135, v137, v140, v144, v147, v150, v155, v158, *((uint64_t *)&v158 + 1), v163, v164,
                v165,
                v166,
                v168,
                v170,
                v171,
                v172,
                v173,
                v174,
                v175,
                v176,
                v177,
                v178,
                v179,
                v180,
                v181,
                v182,
                v183,
                v184,
                v185);
              OUTLINED_FUNCTION_106_0();
              sub_1CF73F2A0();
              OUTLINED_FUNCTION_13_0();
              OUTLINED_FUNCTION_11_3();
              OUTLINED_FUNCTION_33(&dword_1CF67E000, v55, v56, "%{public}s: Not sending awaitingUserConsent message to host as its supported wire protocol is too old", v57);
              OUTLINED_FUNCTION_32_3();
              OUTLINED_FUNCTION_0_1();
            }
          }
          sub_1CF68EA18(v155, v158, *((uint64_t *)&v158 + 1), v3, v2, 3, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
          break;
        case 3uLL:
          v66 = static Data.randomBytes(ofLength:)();
          v68 = v67;
          sub_1CF6934BC(v66, v67);
          sub_1CF6B6F44(v66, v68);
          OUTLINED_FUNCTION_127();
          sub_1CF691788(v69);
          v151 = v66;
          static RemotePairingError.managedConfigurationChallengeRequired(with:)(v66, v68);
          v70 = v185;
          v71 = v186;
          sub_1CF6ABB3C();
          v72 = (void *)OUTLINED_FUNCTION_105();
          *v73 = v70;
          v73[1] = v71;
          OUTLINED_FUNCTION_2_0();
          v74 = *(void **)(v4 + 528);
          if (v74)
          {
            v75 = *(char **)(v4 + 528);
          }
          else
          {
            if (qword_1ED8F7910 != -1)
              swift_once();
            OUTLINED_FUNCTION_2_0();
            v75 = (char *)(id)qword_1ED8F7900;
          }
          if (*(uint64_t *)&v75[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 11)
          {
            OUTLINED_FUNCTION_223();
            v104 = 0x4000000000000000;
            v103 = v72;
          }
          else
          {
            v103 = 0;
            v104 = 0xC000000000000000;
          }
          v105 = v74;

          OUTLINED_FUNCTION_210();
          v190 = v104;
          v191 = 0;
          v192 = 0;
          v193 = 0;
          v106 = sub_1CF6C8C54((uint64_t)&v185);
          OUTLINED_FUNCTION_204(v106, v107, v108, v109, v110, v111, v112, v113, v135, v137, v140, v144, v147, v151, v155, v158, *((uint64_t *)&v158 + 1), v163, v164,
            v165,
            v166,
            v168,
            v170,
            v171,
            v172,
            v173,
            v174,
            v175,
            v176,
            v177,
            v178,
            v179,
            v180,
            v181,
            v182,
            v183,
            v184,
            v185);
          OUTLINED_FUNCTION_58_2();
          OUTLINED_FUNCTION_156(v114, v115, v116, v117, v118, v119, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0, v139, v143, v146, v149, v153, v157, v160, v162);
          sub_1CF6933C0(v154, v68);
          OUTLINED_FUNCTION_14_6(v103, v120, v121, v122, v123, v124, v125, v126, 0, v104, 0, 0);
          break;
        default:
          v48 = v5;
          sub_1CF6AA5E0();
          OUTLINED_FUNCTION_3_0();
          sub_1CF73F774();
          v167 = v185;
          v169 = v186;
          v49 = sub_1CF73E8EC();
          OUTLINED_FUNCTION_19();
          if ((v49 & 1) != 0)
            *(_BYTE *)(v4 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__userHasDeclinedPairing) = 1;
          OUTLINED_FUNCTION_127();
          OUTLINED_FUNCTION_98_0(v50);
          OUTLINED_FUNCTION_2_0();
          v51 = *(void **)(v4 + 528);
          if (v51)
          {
            v52 = *(id *)(v4 + 528);
          }
          else
          {
            if (qword_1ED8F7910 != -1)
              swift_once();
            OUTLINED_FUNCTION_2_0();
            v52 = OUTLINED_FUNCTION_241();
          }
          OUTLINED_FUNCTION_326();
          if (v76 != v77)
          {
            v80 = 0;
            v79 = 0xC000000000000000;
          }
          else
          {
            v78 = v5;
            v79 = 0x4000000000000000;
            v80 = v5;
          }
          v81 = v51;

          OUTLINED_FUNCTION_210();
          v190 = v79;
          v191 = 0;
          v192 = 0;
          v193 = 0;
          v82 = sub_1CF6C8C54((uint64_t)&v185);
          OUTLINED_FUNCTION_204(v82, v83, v84, v85, v86, v87, v88, v89, v135, v137, v140, v144, v147, v150, v155, v158, *((uint64_t *)&v158 + 1), v163, v164,
            v165,
            v167,
            v169,
            v170,
            v171,
            v172,
            v173,
            v174,
            v175,
            v176,
            v177,
            v178,
            v179,
            v180,
            v181,
            v182,
            v183,
            v184,
            v185);
          OUTLINED_FUNCTION_58_2();
          OUTLINED_FUNCTION_325();
          OUTLINED_FUNCTION_156(v90, v91, v92, v93, v94, v95, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0, v138, v142, v145, v148, v152, v156, v159, v161);
          OUTLINED_FUNCTION_14_6(v80, v96, v97, v98, v99, v100, v101, v102, 0, v79, 0, 0);
          break;
      }
      return;
    }
LABEL_42:
    swift_once();
    goto LABEL_6;
  }
  sub_1CF68EA18(v185, v186, *((uint64_t *)&v186 + 1), v187, *((uint64_t *)&v187 + 1), v188, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  v37 = sub_1CF73F0CC();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v38 = qword_1ED8F78F0;
  if (OUTLINED_FUNCTION_45_3())
  {
    OUTLINED_FUNCTION_20();
    v39 = (uint8_t *)OUTLINED_FUNCTION_4_7();
    v185 = OUTLINED_FUNCTION_4_7();
    v40 = OUTLINED_FUNCTION_60_0(4.8751e-34);
    OUTLINED_FUNCTION_225(v40, v41, v42, v43, v44, v45, v46, v47, v136, v137, v140, v144, v147, v150, v155, v158, *((uint64_t *)&v158 + 1), v163, v164,
      v165,
      v166,
      v168,
      v170,
      v171,
      v172,
      v173,
      v174,
      v175,
      v176,
      v177,
      v178,
      v179,
      v180,
      v181,
      v182,
      v183,
      v184,
      v185);
    OUTLINED_FUNCTION_106_0();
    OUTLINED_FUNCTION_110_0();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_33(&dword_1CF67E000, v38, v37, "%{public}s: User responded to pairing prompt but we are no longer in correct state to handle response", v39);
    OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_0_1();
  }
}

id sub_1CF6C17AC(void *a1)
{
  uint64_t v1;
  void *v3;
  char *v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[17];
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  sub_1CF6918B8((uint64_t)&v22);
  if (v25 == 1)
  {
    sub_1CF68EA18(v22, v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    v22 = 5;
    v23 = 0u;
    v24 = 0u;
    LOBYTE(v25) = 4;
    sub_1CF691788(&v22);
    OUTLINED_FUNCTION_2_0();
    v3 = *(void **)(v1 + 528);
    if (v3)
    {
      v4 = *(char **)(v1 + 528);
    }
    else
    {
      if (qword_1ED8F7910 != -1)
        swift_once();
      OUTLINED_FUNCTION_2_0();
      v4 = (char *)(id)qword_1ED8F7900;
    }
    if (*(uint64_t *)&v4[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] >= 11)
    {
      v12 = a1;
      v11 = 0x4000000000000000;
    }
    else
    {
      a1 = 0;
      v11 = 0xC000000000000000;
    }
    v13 = v3;

    v23 = 0u;
    v24 = 0u;
    v25 = 0u;
    v26 = 0u;
    v22 = (uint64_t)a1;
    v27 = v11;
    v28 = 0;
    v29 = 0;
    v30 = 0;
    sub_1CF6C8C54((uint64_t)&v22);
    sub_1CF6C8C64(&v22, v21);
    OUTLINED_FUNCTION_109_0();
    OUTLINED_FUNCTION_14_6(a1, v14, v15, v16, v17, v18, v19, v20, 0, v11, 0, 0);
    return objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession), sel_invalidate);
  }
  else
  {
    sub_1CF68EA18(v22, v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    sub_1CF73F0CC();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    result = (id)OUTLINED_FUNCTION_25_2();
    if ((_DWORD)result)
    {
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_4_7();
      v22 = OUTLINED_FUNCTION_4_7();
      v6 = OUTLINED_FUNCTION_37_3(4.8751e-34);
      sub_1CF68F110(v6, v7, &v22);
      v21[0] = v8;
      OUTLINED_FUNCTION_85_0();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_23_3(&dword_1CF67E000, v9, v10, "%{public}s: Received PIN display error from user interaction provider but we are no longer in valid state for PIN pairing");
      OUTLINED_FUNCTION_32_3();
      OUTLINED_FUNCTION_0_1();
    }
  }
  return result;
}

void sub_1CF6C1A54(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, _QWORD *a5, uint64_t a6, __n128 *a7)
{
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, _QWORD *, uint64_t, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t);
  Swift::String v24;
  void *v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE v36[136];
  _BYTE __src[130];
  _QWORD __dst[17];
  _BYTE v39[128];
  _BYTE v40[128];

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a6;
  memcpy((void *)(v14 + 24), a7, 0x92uLL);
  v15 = *a3;
  swift_beginAccess();
  sub_1CF6C6F4C((uint64_t)(a5 + 45), (uint64_t)__src, &qword_1ED8F7118);
  if (*(_QWORD *)&__src[24])
  {
    sub_1CF68C850((__int128 *)__src, (uint64_t)__dst);
    v16 = __dst[4];
    v33 = __dst[3];
    v35 = a4;
    __swift_project_boxed_opaque_existential_0Tm(__dst, __dst[3]);
    v34 = a2;
    v17 = a5[27];
    v18 = a5[28];
    __swift_project_boxed_opaque_existential_0Tm(a5 + 24, v17);
    v32 = a1;
    v19 = v14;
    v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 80);
    swift_retain();
    sub_1CF6CA630(a7, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
    LOBYTE(v17) = v20(v17, v18);
    __src[0] = v15;
    v21 = a5[29];
    v22 = (_QWORD *)swift_allocObject();
    v22[2] = sub_1CF6CA8A0;
    v22[3] = v19;
    v22[4] = a5;
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t, _BYTE *, uint64_t, _QWORD *, uint64_t, void (*)(uint64_t), _QWORD *, uint64_t, uint64_t))(v16 + 8);
    swift_retain();
    swift_retain();
    v23(v17 & 1, v32, v34, __src, v35, a5, v21, sub_1CF6CA8D8, v22, v33, v16);
    swift_release();
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__dst);
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1CF6CA630(a7, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0, (uint64_t (*)(void))sub_1CF6CA5A4, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
    sub_1CF6A4E24((uint64_t)__src, &qword_1ED8F7118);
    __dst[3] = MEMORY[0x1E0DEA968];
    __dst[0] = 0xD00000000000001FLL;
    __dst[1] = 0x80000001CF752390;
    LOBYTE(__dst[4]) = 1;
    __src[0] = 3;
    v24 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)__src);
    sub_1CF692EA4((uint64_t)__dst);
    sub_1CF692E68();
    v25 = (void *)swift_allocError();
    *(_BYTE *)v26 = 3;
    *(Swift::String *)(v26 + 8) = v24;
    *(_OWORD *)(v26 + 24) = 0u;
    *(_OWORD *)(v26 + 40) = 0u;
    *(_QWORD *)(v26 + 56) = 0;
    swift_beginAccess();
    v27 = (void *)a5[66];
    if (v27)
    {
      swift_bridgeObjectRetain();
      v28 = 0;
      v29 = v27;
    }
    else
    {
      swift_bridgeObjectRetain();
      v30 = 0;
      if (qword_1ED8F7910 != -1)
        swift_once();
      swift_beginAccess();
      v29 = (id)qword_1ED8F7900;
      v27 = 0;
    }
    v31 = v27;
    sub_1CF7203AC((uint64_t)v25, (uint64_t)v29);

    sub_1CF6C8CAC(v40, v39);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      *(_QWORD *)__src = a7->n128_u64[1];
      sub_1CF6C8CAC(v39, &__src[8]);
      memcpy(__dst, __src, 0x82uLL);
      sub_1CF6CA7F4((uint64_t)__dst);
      sub_1CF6C8C64(__dst, v36);
      sub_1CF6CA148((uint64_t)v39);
      sub_1CF6B94F8();
      swift_release();
      sub_1CF6CA148((uint64_t)v39);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();

    }
    sub_1CF6CA148((uint64_t)v39);
    swift_release();
  }
  swift_release();
  sub_1CF6CA630(a7, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
}

void sub_1CF6C1EE4(uint64_t a1, void (*a2)(_BYTE *), uint64_t a3, uint64_t a4)
{
  void *v5;
  uint64_t v6;
  unint64_t v7;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  _BYTE v14[128];
  _BYTE v15[128];
  __int16 v16;
  uint64_t v17;
  unint64_t v18;

  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    swift_beginAccess();
    v9 = *(void **)(a4 + 528);
    if (v9)
    {
      v10 = v5;
      v11 = v9;
    }
    else
    {
      v12 = v5;
      if (qword_1ED8F7910 != -1)
        swift_once();
      swift_beginAccess();
      v11 = (id)qword_1ED8F7900;
      v9 = 0;
    }
    v13 = v9;
    sub_1CF7203AC((uint64_t)v5, (uint64_t)v11);

    sub_1CF6C8CAC(&v16, v15);
    sub_1CF6C8CAC(v15, v14);
    a2(v14);
    sub_1CF6CA8E4(v5, v6, v7, 1);
    sub_1CF6CA148((uint64_t)v15);
  }
  else
  {
    v16 = *(_QWORD *)a1;
    v17 = v6;
    v18 = v7;
    sub_1CF6CA8F8((uint64_t)&v16);
    sub_1CF6C8CAC(&v16, v15);
    sub_1CF6934BC(v6, v7);
    a2(v15);
    sub_1CF6CA8E4(v5, v6, v7, 0);
  }
}

void sub_1CF6C2064(uint64_t a1, uint64_t a2, __n128 *a3)
{
  uint64_t v4;
  unint64_t v5;
  char v6[136];
  _QWORD __src[17];
  _BYTE __dst[136];
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  char v32;

  sub_1CF6C3360((uint64_t)&v9);
  v4 = v18;
  v5 = v19;
  v22 = v10;
  v21 = v9;
  v23 = v11;
  v24 = v12;
  v25 = v13;
  v26 = v14;
  v27 = v15;
  v28 = v16;
  v29 = v17;
  v30 = v18;
  v31 = v19;
  v32 = v20;
  sub_1CF6CA808((uint64_t)&v21);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    __src[0] = a3->n128_u64[1];
    sub_1CF6C8CAC(&v21, &__src[1]);
    memcpy(__dst, __src, 0x82uLL);
    sub_1CF6CA7F4((uint64_t)__dst);
    sub_1CF6C8C64(__dst, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1CF6A7B18(v4, v5);
    sub_1CF6B94F8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_1CF693FE0(v4, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1CF693FE0(v4, v5);
  swift_release();
  sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
}

void sub_1CF6C23E0(uint64_t a1, uint64_t a2, __n128 *a3)
{
  void **v5;
  void *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  Swift::String v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  void *v34;
  void (*v35)(void);
  id v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _BYTE v40[136];
  _BYTE __src[130];
  _QWORD __dst[17];
  _QWORD v43[16];
  _QWORD v44[17];

  v5 = (void **)(a1 + 120);
  swift_beginAccess();
  v6 = *(void **)(a1 + 120);
  v7 = MEMORY[0x1E0DEA968];
  if (v6)
  {
    v8 = v6;
    v9 = CUPairedPeer.remoteUnlockKey.getter();
    v11 = v10;

    if (v11 >> 60 != 15)
    {
      sub_1CF693FE0(v9, v11);
      __dst[3] = v7;
      __dst[0] = 0xD00000000000002FLL;
      __dst[1] = 0x80000001CF752400;
      LOBYTE(__dst[4]) = 1;
      sub_1CF692E68();
      v13 = (void *)swift_allocError();
      v15 = v14;
      __src[0] = 2;
      v16 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)__src);
      sub_1CF692EA4((uint64_t)__dst);
      *(_BYTE *)v15 = 2;
      *(Swift::String *)(v15 + 8) = v16;
      *(_OWORD *)(v15 + 24) = 0u;
      *(_OWORD *)(v15 + 40) = 0u;
      *(_QWORD *)(v15 + 56) = 0;
      swift_willThrow();
LABEL_10:
      sub_1CF73F0CC();
      if (qword_1ED8F78F8 != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EB0);
      v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1CF742850;
      __dst[0] = v13;
      v23 = v13;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
      v24 = sub_1CF73EF10();
      v26 = v25;
      *(_QWORD *)(v22 + 56) = v7;
      *(_QWORD *)(v22 + 64) = sub_1CF6C9F38();
      *(_QWORD *)(v22 + 32) = v24;
      *(_QWORD *)(v22 + 40) = v26;
      sub_1CF73E694();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      v27 = *(void **)(a1 + 528);
      if (v27)
      {
        v28 = *(id *)(a1 + 528);
      }
      else
      {
        if (qword_1ED8F7910 != -1)
          swift_once();
        swift_beginAccess();
        v28 = (id)qword_1ED8F7900;
        v27 = 0;
      }
      v29 = v27;
      sub_1CF7203AC((uint64_t)v13, (uint64_t)v28);

      sub_1CF6C8CAC(v44, v43);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        *(_QWORD *)__src = a3->n128_u64[1];
        sub_1CF6C8CAC(v43, &__src[8]);
        memcpy(__dst, __src, 0x82uLL);
        sub_1CF6CA7F4((uint64_t)__dst);
        sub_1CF6C8C64(__dst, v40);
        sub_1CF6CA148((uint64_t)v43);
        sub_1CF6B94F8();
        swift_release();
        sub_1CF6CA148((uint64_t)v43);

      }
      else
      {

      }
      sub_1CF6CA148((uint64_t)v43);
LABEL_21:
      swift_release();
      sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
      return;
    }
  }
  type metadata accessor for RemoteUnlockKeypair();
  swift_allocObject();
  v12 = sub_1CF730D08();
  swift_beginAccess();
  sub_1CF6C6F4C(a1 + 440, (uint64_t)__src, &qword_1ED8F68B0);
  if (*(_QWORD *)&__src[24])
  {
    sub_1CF68C850((__int128 *)__src, (uint64_t)__dst);
    sub_1CF731118((uint64_t)__dst);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__dst);
  }
  else
  {
    sub_1CF6A4E24((uint64_t)__src, &qword_1ED8F68B0);
  }
  sub_1CF730E68();
  swift_beginAccess();
  v17 = v12[5];
  if (v17 >> 60 == 15 || (v18 = v12[4], swift_beginAccess(), v39 = v12[3], v39 >> 60 == 15))
  {
    __dst[3] = v7;
    __dst[0] = 0xD000000000000019;
    __dst[1] = 0x80000001CF7523E0;
    LOBYTE(__dst[4]) = 1;
    sub_1CF692E68();
    v13 = (void *)swift_allocError();
    v20 = v19;
    __src[0] = 3;
    v21 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)__src);
    sub_1CF692EA4((uint64_t)__dst);
    *(_BYTE *)v20 = 3;
    *(Swift::String *)(v20 + 8) = v21;
    *(_OWORD *)(v20 + 24) = 0u;
    *(_OWORD *)(v20 + 40) = 0u;
    *(_QWORD *)(v20 + 56) = 0;
    swift_willThrow();
    swift_release();
    goto LABEL_10;
  }
  v30 = *v5;
  if (*v5)
  {
    v31 = v12[2];
    sub_1CF6A7B18(v18, v17);
    sub_1CF6A7B18(v18, v17);
    v32 = v30;
    v37 = v31;
    sub_1CF6A7B18(v31, v39);
    v38 = v18;
    CUPairedPeer.remoteUnlockKey.setter(v18, v17);

    swift_beginAccess();
    sub_1CF68CE44(a1 + 400, (uint64_t)v43);
    v33 = v43[4];
    __swift_project_boxed_opaque_existential_0Tm(v43, v43[3]);
    v34 = *(void **)(a1 + 120);
    if (v34)
    {
      v35 = *(void (**)(void))(v33 + 24);
      v36 = v34;
      v35();

      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v43);
      v44[0] = v37;
      v44[1] = v39;
      sub_1CF6CAAA0((uint64_t)v44);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        *(_QWORD *)__src = a3->n128_u64[1];
        sub_1CF6C8CAC(v44, &__src[8]);
        memcpy(__dst, __src, 0x82uLL);
        sub_1CF6CA7F4((uint64_t)__dst);
        sub_1CF6C8C64(__dst, v40);
        sub_1CF6A7B18(v37, v39);
        sub_1CF6934BC(v37, v39);
        sub_1CF6B94F8();
        swift_release();
        sub_1CF693FE0(v37, v39);
        sub_1CF693FE0(v37, v39);
      }
      sub_1CF730DBC();
      sub_1CF693FE0(v37, v39);
      sub_1CF693FE0(v38, v17);
      swift_release();
      goto LABEL_21;
    }
  }
  else
  {
    swift_release();
    sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
    __break(1u);
  }
  swift_release();
  sub_1CF6CA630(a3, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  __break(1u);
}

void sub_1CF6C2B7C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, __n128 *a5)
{
  void *v9;
  id v10;
  _BYTE v11[136];
  _BYTE __src[130];
  _BYTE __dst[136];
  _BYTE v14[136];

  swift_beginAccess();
  v9 = *(void **)(a3 + 120);
  if (v9)
  {
    type metadata accessor for RemoteUnlockKeypair();
    v10 = v9;
    CUPairedPeer.remoteUnlockKey.getter();

    sub_1CF6934BC(a1, a2);
    sub_1CF730544(a1, a2);
    swift_beginAccess();
    sub_1CF6C6F4C(a3 + 440, (uint64_t)__src, &qword_1ED8F68B0);
    if (*(_QWORD *)&__src[24])
    {
      sub_1CF68C850((__int128 *)__src, (uint64_t)__dst);
      sub_1CF731118((uint64_t)__dst);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)__dst);
    }
    else
    {
      sub_1CF6A4E24((uint64_t)__src, &qword_1ED8F68B0);
    }
    sub_1CF730F48();
    sub_1CF730DBC();
    sub_1CF6CAAAC((uint64_t)v14);
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      *(_QWORD *)__src = a5->n128_u64[1];
      sub_1CF6C8CAC(v14, &__src[8]);
      memcpy(__dst, __src, 0x82uLL);
      sub_1CF6CA7F4((uint64_t)__dst);
      sub_1CF6C8C64(__dst, v11);
      sub_1CF6B94F8();
      swift_release();
      swift_release();
    }
    else
    {
      swift_release();
    }
    swift_release();
    sub_1CF6CA630(a5, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  }
  else
  {
    swift_release();
    sub_1CF6CA630(a5, (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C, (uint64_t (*)(void))sub_1CF6C8BA8, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
    __break(1u);
  }
}

uint64_t sub_1CF6C2F30()
{
  void *v0;
  uint64_t v1;
  uint64_t v3;

  v0 = (void *)sub_1CF73EEB0();
  v1 = OUTLINED_FUNCTION_336();

  if (v1 && (swift_dynamicCast() & 1) != 0)
    return v3;
  sub_1CF6AA5E0();
  sub_1CF73F774();
  sub_1CF6ABB3C();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_3_0();
  sub_1CF73F780();
  return swift_willThrow();
}

id sub_1CF6C305C()
{
  void *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1CF73EEB0();
  v1 = OUTLINED_FUNCTION_381();

  if (v1)
  {
    objc_opt_self();
    v2 = (void *)swift_dynamicCastObjCClass();
    if (v2)
    {
      v3 = objc_msgSend(v2, sel_unsignedLongLongValue);
      swift_unknownObjectRelease();
      return v3;
    }
    swift_unknownObjectRelease();
  }
  sub_1CF73F0E4();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  if (OUTLINED_FUNCTION_25_2())
  {
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_4_7();
    OUTLINED_FUNCTION_4_7();
    OUTLINED_FUNCTION_306();
    v4 = OUTLINED_FUNCTION_37_3(4.8751e-34);
    OUTLINED_FUNCTION_51_2(v4, v5, v6);
    OUTLINED_FUNCTION_287();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_23_3(&dword_1CF67E000, v7, v8, "%{public}s: Unable to fetch device ECID");
    OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_0_1();
  }
  return 0;
}

void sub_1CF6C31E8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1CF73EEB0();
  v1 = OUTLINED_FUNCTION_381();

  if (v1)
  {
    if (!swift_dynamicCast())
    {
      sub_1CF73F0E4();
      if (qword_1ED8F78F8 != -1)
        swift_once();
      if (OUTLINED_FUNCTION_25_2())
      {
        OUTLINED_FUNCTION_20();
        OUTLINED_FUNCTION_4_7();
        OUTLINED_FUNCTION_4_7();
        OUTLINED_FUNCTION_306();
        v2 = OUTLINED_FUNCTION_37_3(4.8751e-34);
        OUTLINED_FUNCTION_51_2(v2, v3, v4);
        OUTLINED_FUNCTION_85_0();
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_57();
        OUTLINED_FUNCTION_23_3(&dword_1CF67E000, v5, v6, "%{public}s: Unable to fetch device serial number");
        OUTLINED_FUNCTION_32_3();
        OUTLINED_FUNCTION_0_1();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1CF6C3360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  char v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  v4 = *(unsigned int *)(v1 + 240);
  v5 = v4 | ((unint64_t)*(unsigned __int8 *)(v1 + 244) << 32);
  if ((v4 & 0x8000) != 0)
  {
    OUTLINED_FUNCTION_172();
    result = OUTLINED_FUNCTION_113_0();
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_277();
    sub_1CF6C6F4C(v1 + 480, (uint64_t)&v35, &qword_1ED8F7CB8);
    if (v36)
    {
      sub_1CF68C850(&v35, (uint64_t)&v37);
      v6 = v39;
      v7 = v40;
      __swift_project_boxed_opaque_existential_0Tm(&v37, v39);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v7 + 8))(HIDWORD(v5) & 1, v6, v7);
      return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v37);
    }
    sub_1CF6A4E24((uint64_t)&v35, &qword_1ED8F7CB8);
    v9 = (void *)sub_1CF73EEB0();
    v10 = OUTLINED_FUNCTION_336();

    if (!v10)
      goto LABEL_11;
    *(_QWORD *)&v35 = v10;
    if ((OUTLINED_FUNCTION_218() & 1) == 0)
      goto LABEL_11;
    v11 = v38;
    v41 = v37;
    v12 = (void *)sub_1CF73EEB0();
    v13 = OUTLINED_FUNCTION_336();

    if (!v13 || (*(_QWORD *)&v35 = v13, !OUTLINED_FUNCTION_218()))
    {
LABEL_10:
      swift_bridgeObjectRelease();
LABEL_11:
      v39 = MEMORY[0x1E0DEA968];
      OUTLINED_FUNCTION_75_0();
      v37 = v18;
      v38 = v19;
      LOBYTE(v40) = 1;
      sub_1CF692E68();
      OUTLINED_FUNCTION_105();
      LOBYTE(v35) = 1;
      ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v35);
      OUTLINED_FUNCTION_329();
      sub_1CF692EA4((uint64_t)&v37);
      OUTLINED_FUNCTION_194();
      return swift_willThrow();
    }
    v14 = v37;
    v15 = v38;
    v16 = sub_1CF6C2F30();
    if (v2)
    {
      OUTLINED_FUNCTION_231();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    v32 = v16;
    v33 = v14;
    v34 = v17;
    v20 = v5 & 0x100000000;
    type metadata accessor for DeviceKeyValueStore();
    v21 = static DeviceKeyValueStore.keyValueStoreContainingStandardKeys()();
    v22 = sub_1CF6B0550(BYTE4(v5) & 1);
    v24 = v23;

    if (v20)
    {
      v25 = sub_1CF6C305C();
      v27 = v26 & 1;
      v28 = v41;
      v30 = v33;
      v29 = v34;
      v31 = v32;
    }
    else
    {
      swift_bridgeObjectRelease();
      v25 = 0;
      v31 = 0;
      v29 = 0xE000000000000000;
      v27 = 1;
      v28 = v41;
      v30 = v33;
    }
    *(_QWORD *)a1 = v31;
    *(_QWORD *)(a1 + 8) = v29;
    *(_QWORD *)(a1 + 16) = v28;
    *(_QWORD *)(a1 + 24) = v11;
    *(_QWORD *)(a1 + 32) = v30;
    *(_QWORD *)(a1 + 40) = v15;
    *(_QWORD *)(a1 + 48) = v31;
    *(_QWORD *)(a1 + 56) = v29;
    *(_QWORD *)(a1 + 64) = v25;
    *(_BYTE *)(a1 + 72) = v27;
    *(_QWORD *)(a1 + 80) = v22;
    *(_QWORD *)(a1 + 88) = v24;
    *(_BYTE *)(a1 + 96) = BYTE4(v20);
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1CF6C37FC(unsigned __int8 *a1)
{
  uint64_t v1;
  void *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  char v38;
  void *v39;
  id v40;
  void *v41;
  BOOL v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v3 = *a1;
  v4 = a1[1];
  v6 = *((_QWORD *)a1 + 1);
  v5 = *((_QWORD *)a1 + 2);
  v7 = *((_QWORD *)a1 + 4);
  v52 = *((_QWORD *)a1 + 3);
  v8 = *((_QWORD *)a1 + 5);
  v9 = sub_1CF73F0E4();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v53 = v4;
  v10 = qword_1ED8F78F0;
  v11 = os_log_type_enabled((os_log_t)qword_1ED8F78F0, v9);
  if ((_DWORD)v11)
  {
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_191();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_26_2();
    OUTLINED_FUNCTION_191();
    OUTLINED_FUNCTION_26_2();
    swift_bridgeObjectRetain();
    v19 = OUTLINED_FUNCTION_4_7();
    v54 = OUTLINED_FUNCTION_4_7();
    *(_DWORD *)v19 = 136446466;
    v20 = sub_1CF6B5B0C();
    OUTLINED_FUNCTION_227(v20, v21, v22, v23, v24, v25, v26, v27, v46, v48, v50);
    OUTLINED_FUNCTION_286();
    sub_1CF73F2A0();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_3_7();
    *(_WORD *)(v19 + 12) = 2080;
    v56 = v6;
    v57 = v5;
    v58 = v52;
    v59 = v7;
    v60 = v8;
    OUTLINED_FUNCTION_191();
    OUTLINED_FUNCTION_26_2();
    OUTLINED_FUNCTION_211();
    v28 = sub_1CF73EF10();
    OUTLINED_FUNCTION_227(v28, v29, v30, v31, v32, v33, v34, v35, v47, v49, v51);
    v55 = v36;
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_297();
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_297();
    OUTLINED_FUNCTION_107();
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v10, v9, "%{public}s: Received pairing data from peer: %s", (uint8_t *)v19);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_0_1();
  }
  if (v3)
  {
    OUTLINED_FUNCTION_68_1();
    if ((v37 & 0x8000) == 0)
    {
      OUTLINED_FUNCTION_23_1();
      goto LABEL_9;
    }
    v38 = OUTLINED_FUNCTION_11_1();
    v11 = OUTLINED_FUNCTION_26_0();
    if ((v38 & 1) != 0)
LABEL_9:
      __asm { BR              X9 }
  }
  OUTLINED_FUNCTION_292(v11, v12, v13, v14, v15, v16, v17, v18, v46, v48);
  if (v60 - 1 < 2
    || (v60 == 4 ? (v42 = v55 == 3) : (v42 = 0), v42 && !(v57 | v56 | v58 | v59)))
  {
    sub_1CF68EA18(v55, v56, v57, v58, v59, v60, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    v39 = *(void **)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession);
    if (v39)
    {
      v40 = v39;
      v41 = (void *)sub_1CF73E58C();
      OUTLINED_FUNCTION_370((uint64_t)v41, sel_receivedData_);

      return;
    }
    v58 = MEMORY[0x1E0DEA968];
    OUTLINED_FUNCTION_340();
    v55 = v45 + 35;
    v56 = 0x80000001CF751DB0;
    v44 = 1;
    LOBYTE(v59) = 1;
    sub_1CF692E68();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_279();
  }
  else
  {
    sub_1CF68EA18(v55, v56, v57, v58, v59, v60, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    v58 = MEMORY[0x1E0DEA968];
    OUTLINED_FUNCTION_340();
    v55 = v43 + 34;
    v56 = 0x80000001CF751D70;
    LOBYTE(v59) = 1;
    sub_1CF692E68();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_279();
    v44 = 2;
  }
  LOBYTE(v54) = v44;
  ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v54);
  OUTLINED_FUNCTION_162();
  sub_1CF692EA4((uint64_t)&v55);
  OUTLINED_FUNCTION_261();
  *(_QWORD *)(v7 + 56) = 0;
  sub_1CF6926B8(v2);
  OUTLINED_FUNCTION_44_0();
}

void sub_1CF6C3DF8(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  os_log_type_t v12;
  NSObject *v13;
  uint8_t *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  const void *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v58;
  uint64_t v59;
  id v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t aBlock;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;

  v61 = *a1;
  v12 = sub_1CF73F0C0();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v13 = qword_1ED8F78F0;
  if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v12))
  {
    OUTLINED_FUNCTION_20();
    v14 = (uint8_t *)OUTLINED_FUNCTION_4_7();
    aBlock = OUTLINED_FUNCTION_4_7();
    *(_DWORD *)v14 = 136446210;
    v15 = sub_1CF6B5B0C();
    OUTLINED_FUNCTION_47_2(v15, v16, v17, v18, v19, v20, v21, v22, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      a7,
      a8,
      a2,
      a3,
      a5,
      a6,
      v58,
      v59,
      a4,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70,
      v71,
      v72,
      v73,
      v74,
      v75,
      v76,
      v77,
      v78,
      v79,
      v80,
      v81,
      v82,
      v83,
      v84,
      v85,
      v86,
      v87,
      v88,
      v89);
    sub_1CF73F2A0();
    OUTLINED_FUNCTION_13_0();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_33(&dword_1CF67E000, v13, v12, "%{public}s: _configureNewPairingSession", v14);
    OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_0_1();
  }
  v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D1B3F8]), sel_init);
  v101 = a11;
  v102 = a10;
  v24 = *(_QWORD *)(v62 + 232);
  OUTLINED_FUNCTION_54_0();
  v25 = OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_146(v25, sel_setDispatchQueue_);
  OUTLINED_FUNCTION_255();
  v27 = v61;
  if ((_DWORD)v61)
  {
    if (v26 < 0)
    {
      OUTLINED_FUNCTION_26_0();
    }
    else
    {
      v24 = OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1();
      if ((v24 & 1) == 0)
      {
        v28 = 2;
        goto LABEL_16;
      }
    }
    v28 = 1;
  }
  else
  {
    if (v26 < 0)
    {
      OUTLINED_FUNCTION_26_0();
    }
    else
    {
      v24 = OUTLINED_FUNCTION_8_0();
      OUTLINED_FUNCTION_23_1();
      if ((v24 & 1) == 0)
      {
        v28 = 4;
        goto LABEL_16;
      }
    }
    v28 = 3;
  }
LABEL_16:
  objc_msgSend(v23, sel_setSessionType_, v28);
  objc_msgSend(v23, sel_setFlags_, 8);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_87_0();
  v29 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v29 + 16) = v24;
  *(_QWORD *)(v29 + 24) = v23;
  v99 = (uint64_t)sub_1CF6CAD1C;
  v100 = v29;
  aBlock = MEMORY[0x1E0C809B0];
  v96 = 1107296256;
  v97 = (uint64_t)sub_1CF6C5410;
  v98 = &block_descriptor_1;
  _Block_copy(&aBlock);
  v30 = v23;
  v31 = OUTLINED_FUNCTION_305();
  OUTLINED_FUNCTION_146(v31, sel_setCompletionHandler_);
  OUTLINED_FUNCTION_271();
  v32 = OUTLINED_FUNCTION_16();
  *(_BYTE *)(v32 + 16) = v61;
  *(_QWORD *)(v32 + 24) = v30;
  *(_QWORD *)(v32 + 32) = a4;
  *(_QWORD *)(v32 + 40) = v62;
  v100 = v32;
  OUTLINED_FUNCTION_339();
  OUTLINED_FUNCTION_95_0((uint64_t)sub_1CF6C584C, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, a7,
    a8,
    a2,
    a3,
    a5,
    a6,
    v58,
    a9,
    (uint64_t)v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89,
    v90,
    v91,
    v92,
    v93,
    v94,
    aBlock,
    v96);
  OUTLINED_FUNCTION_275();
  OUTLINED_FUNCTION_83();
  v30;
  v33 = OUTLINED_FUNCTION_305();
  OUTLINED_FUNCTION_146(v33, sel_setSendDataHandler_);
  OUTLINED_FUNCTION_337();
  _Block_release(v34);
  __asm { BR              X10 }
}

uint64_t sub_1CF6C53A0(void *a1, uint64_t a2, void *a3)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CF6C5FA0(a3, a1);
    return swift_release();
  }
  return result;
}

void sub_1CF6C5410(uint64_t a1, void *a2)
{
  void (*v3)(void *);
  id v4;

  v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  v4 = a2;
  v3(a2);
  swift_release();

}

uint64_t sub_1CF6C5464(char a1, uint64_t a2, unint64_t a3, unsigned __int8 a4, void *a5, uint64_t a6)
{
  char v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  CFStringRef v15;
  __CFString *v16;
  uint64_t v17;
  os_log_type_t v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32[17];
  unint64_t v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  char v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;

  v11 = a1 & 1;
  v42 = a1 & 1;
  v43 = a4;
  v44 = a2;
  v45 = a3;
  v46 = 0;
  v47 = 0;
  sub_1CF6934BC(a2, a3);
  v12 = objc_msgSend(a5, sel_sessionType);
  v13 = 0;
  v14 = 0;
  if (v12 == 1)
  {
    v15 = SCDynamicStoreCopyComputerName(0, 0);
    if (v15)
    {
      v16 = (__CFString *)v15;
      v13 = sub_1CF73EED4();
      v14 = v17;

    }
    else
    {
      v13 = 0;
      v14 = 0;
    }
    *((_QWORD *)&v45 + 1) = v13;
    v46 = v14;
  }
  if (a6)
    v47 = a6;
  swift_bridgeObjectRetain();
  v18 = sub_1CF73F0C0();
  if (qword_1ED8F78F8 != -1)
    swift_once();
  v19 = qword_1ED8F78F0;
  if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v18))
  {
    swift_retain();
    sub_1CF6934BC(a2, a3);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1CF6934BC(a2, a3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v29 = v13;
    v20 = swift_slowAlloc();
    v30 = swift_slowAlloc();
    v32[0] = v30;
    *(_DWORD *)v20 = 136446466;
    v21 = sub_1CF6B5B0C();
    sub_1CF68F110(v21, v22, v32);
    v33 = v23;
    sub_1CF73F2A0();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2080;
    LOBYTE(v33) = v11;
    BYTE1(v33) = a4;
    v34 = a2;
    *(_QWORD *)&v35 = a3;
    *((_QWORD *)&v35 + 1) = v29;
    v36 = v14;
    v37 = a6;
    sub_1CF6934BC(a2, a3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v24 = sub_1CF73EF10();
    sub_1CF68F110(v24, v25, v32);
    v33 = v26;
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();
    sub_1CF6933C0(a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CF6933C0(a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CF67E000, v19, v18, "%{public}s: Sending pairing data to peer: %s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17D3ED0](v30, -1, -1);
    MEMORY[0x1D17D3ED0](v20, -1, -1);
  }
  swift_beginAccess();
  v27 = v44;
  v33 = v42 | ((unint64_t)v43 << 8);
  v34 = v44;
  v31 = v45;
  v35 = v45;
  v36 = v46;
  v37 = v47;
  v38 = 0u;
  v39 = 0u;
  v40 = 0u;
  v41 = 0;
  sub_1CF6C8C54((uint64_t)&v33);
  sub_1CF6C8C64(&v33, v32);
  sub_1CF6934BC(v27, v31);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CF6B94F8();
  sub_1CF6933C0(v27, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CF6933C0(v27, v31);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6C584C(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(uint64_t, uint64_t, unint64_t);
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v5 = *(void (**)(uint64_t, uint64_t, unint64_t))(a1 + 32);
  swift_retain();
  v6 = a3;
  v7 = sub_1CF73E5A4();
  v9 = v8;

  v5(a2, v7, v9);
  sub_1CF6933C0(v7, v9);
  return swift_release();
}

uint64_t sub_1CF6C58C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v13 = result;
    v14 = a5[3];
    v15 = a5[4];
    __swift_project_boxed_opaque_existential_0Tm(a5, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(a2, a3, a6, a7, v13, v14, v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CF6C59A8(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  v4 = sub_1CF73EED4();
  v6 = v5;
  swift_retain();
  v3(a2, v4, v6);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6C5A0C(uint64_t a1, _QWORD *a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = a2[3];
    v6 = a2[4];
    __swift_project_boxed_opaque_existential_0Tm(a2, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, v5, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CF6C5A98(unsigned int a1, int a2)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CF6BE658(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1CF6C5B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v5)(uint64_t, uint64_t);

  v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

#error "1CF6C5D1C: call analysis failed (funcsize=263)"

void sub_1CF6C5FA0(void *a1, void *a2)
{
  uint64_t v2;
  void *v4;
  BOOL v5;
  os_log_type_t v6;
  NSObject *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  os_log_type_t v16;
  NSObject *v17;
  os_log_type_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  os_log_type_t v39;
  NSObject *v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;

  v4 = *(void **)(v2 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__pairingSession);
  if (v4)
    v5 = v4 == a1;
  else
    v5 = 0;
  if (v5)
  {
    if (a2)
    {
      OUTLINED_FUNCTION_41();
      v16 = sub_1CF73F0E4();
      if (qword_1ED8F78F8 != -1)
        swift_once();
      v17 = qword_1ED8F78F0;
      v18 = v16;
      if (OUTLINED_FUNCTION_81_0())
      {
        OUTLINED_FUNCTION_41();
        OUTLINED_FUNCTION_121();
        v19 = a1;
        OUTLINED_FUNCTION_41();
        OUTLINED_FUNCTION_121();
        v20 = v19;
        v21 = OUTLINED_FUNCTION_4_7();
        v59 = OUTLINED_FUNCTION_4_7();
        *(_DWORD *)v21 = 136446722;
        v22 = OUTLINED_FUNCTION_69_1();
        OUTLINED_FUNCTION_46_1(v22, v23, v24);
        OUTLINED_FUNCTION_71_0();
        OUTLINED_FUNCTION_13_0();
        v25 = OUTLINED_FUNCTION_11_3();
        *(_WORD *)(v21 + 12) = 2082;
        OUTLINED_FUNCTION_335(v25, v26, v27, v28, v29, v30, v31, v32, v57);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A8);
        v33 = OUTLINED_FUNCTION_262();
        OUTLINED_FUNCTION_46_1(v33, v34, v35);
        OUTLINED_FUNCTION_71_0();

        OUTLINED_FUNCTION_11_3();
        *(_WORD *)(v21 + 22) = 2082;
        OUTLINED_FUNCTION_41();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
        v36 = OUTLINED_FUNCTION_262();
        OUTLINED_FUNCTION_51_2(v36, v37, v38, a2, v59);
        OUTLINED_FUNCTION_243();
        OUTLINED_FUNCTION_57();
        OUTLINED_FUNCTION_44_0();
        OUTLINED_FUNCTION_44_0();
        _os_log_impl(&dword_1CF67E000, v17, v18, "%{public}s: Pairing session of kind %{public}s failed with error %{public}s", (uint8_t *)v21, 0x20u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0_1();
      }
      sub_1CF6C6420(a2);
      OUTLINED_FUNCTION_44_0();
    }
    else
    {
      v39 = sub_1CF73F0E4();
      if (qword_1ED8F78F8 != -1)
        swift_once();
      v40 = qword_1ED8F78F0;
      if (os_log_type_enabled((os_log_t)qword_1ED8F78F0, v39))
      {
        OUTLINED_FUNCTION_20();
        v41 = a1;
        v42 = OUTLINED_FUNCTION_4_7();
        OUTLINED_FUNCTION_4_7();
        *(_DWORD *)v42 = 136446466;
        v43 = OUTLINED_FUNCTION_69_1();
        OUTLINED_FUNCTION_46_1(v43, v44, v45);
        OUTLINED_FUNCTION_71_0();
        OUTLINED_FUNCTION_13_0();
        v46 = OUTLINED_FUNCTION_11_3();
        *(_WORD *)(v42 + 12) = 2082;
        OUTLINED_FUNCTION_335(v46, v47, v48, v49, v50, v51, v52, v53, v57);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A8);
        v54 = OUTLINED_FUNCTION_262();
        OUTLINED_FUNCTION_46_1(v54, v55, v56);
        OUTLINED_FUNCTION_160();

        OUTLINED_FUNCTION_11_3();
        OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v40, v39, "%{public}s: Pairing session of kind %{public}s succeeded", (uint8_t *)v42);
        OUTLINED_FUNCTION_64();
        OUTLINED_FUNCTION_0_1();
      }
      sub_1CF6C6684(a1);
    }
  }
  else
  {
    v6 = sub_1CF73F0C0();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    v7 = qword_1ED8F78F0;
    if (OUTLINED_FUNCTION_193())
    {
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_121();
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_121();
      v8 = OUTLINED_FUNCTION_4_7();
      v58 = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v8 = 136446466;
      v9 = OUTLINED_FUNCTION_69_1();
      OUTLINED_FUNCTION_46_1(v9, v10, v11);
      OUTLINED_FUNCTION_287();
      OUTLINED_FUNCTION_352();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_11_3();
      *(_WORD *)(v8 + 12) = 2082;
      OUTLINED_FUNCTION_41();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EA0);
      v12 = OUTLINED_FUNCTION_262();
      OUTLINED_FUNCTION_46_1(v12, v13, v14, a2, v58);
      OUTLINED_FUNCTION_118();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v7, v6, "%{public}s: Received completion with error=%{public}s from pairing session but ignoring since that is no longer active session", (uint8_t *)v8);
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_0_1();
    }
  }
}

void sub_1CF6C6420(void *a1)
{
  uint64_t v1;
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_BYTE *);
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE v70[40];
  __int128 v71;
  __int128 v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  _QWORD v77[5];
  unsigned __int8 v78;

  OUTLINED_FUNCTION_68_1();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_26_0();
  }
  else
  {
    OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_77_0();
    if ((v1 & 1) == 0)
      return;
  }
  OUTLINED_FUNCTION_272((uint64_t)v77);
  v12 = (uint64_t (*)(_BYTE *))v77[0];
  if (v78 - 1 < 2)
  {
    OUTLINED_FUNCTION_89_0(v4, v5, v6, v7, v8, v9, v10, v11, v45, v48, v50, v53, v54, v55, v56, v57, v58, v59, v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      *(uint64_t *)v70,
      *(uint64_t *)&v70[8],
      *(uint64_t *)&v70[16],
      *(uint64_t *)&v70[24],
      *(uint64_t *)&v70[32],
      v71);
    if (!v12)
      return;
    memset(v70, 0, 32);
    v70[32] = 2;
    sub_1CF692E68();
    v51 = OUTLINED_FUNCTION_105();
    v14 = v13;
    v15 = OUTLINED_FUNCTION_41();
    v23 = OUTLINED_FUNCTION_311((uint64_t)v15, v16, v17, v18, v19, v20, v21, v22, v46, v49, v51, 4);
    v25 = v24;
    sub_1CF692EA4((uint64_t)v70);
    *(_BYTE *)v14 = 4;
    *(_QWORD *)(v14 + 8) = v23;
    *(_QWORD *)(v14 + 16) = v25;
    *(_OWORD *)(v14 + 24) = 0u;
    *(_OWORD *)(v14 + 40) = 0u;
    *(_QWORD *)(v14 + 56) = a1;
    *(_QWORD *)v70 = v52;
    *(_QWORD *)&v70[8] = 0;
    v70[16] = 0;
    v26 = v12(v70);
    OUTLINED_FUNCTION_124(v26, v27, v28, v29, v30, v31, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    v32 = v52;
    goto LABEL_16;
  }
  if (v78 != 4 || v77[0] != 3 || (v77[2] | v77[1] | v77[3] | v77[4]) != 0)
  {
    OUTLINED_FUNCTION_124(v4, v5, v6, v7, v8, v9, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    *(_QWORD *)&v70[24] = MEMORY[0x1E0DEA968];
    OUTLINED_FUNCTION_75_0();
    *(_QWORD *)v70 = v35;
    *(_QWORD *)&v70[8] = v36;
    v70[32] = 1;
    sub_1CF692E68();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_279();
    OUTLINED_FUNCTION_311(v37, v38, v39, v40, v41, v42, v43, v44, v47, v48, v50, 1);
    OUTLINED_FUNCTION_162();
    sub_1CF692EA4((uint64_t)v70);
    OUTLINED_FUNCTION_42_3();
    v32 = a1;
LABEL_16:

    return;
  }
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions) != 2
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC19RemotePairingDevice24ControlChannelConnection__peerDeviceOptions) & 1) != 0)
  {
    OUTLINED_FUNCTION_89_0(v4, v5, v6, v7, v8, v9, v10, v11, v45, v48, v50, v53, v54, v55, v56, v57, v58, v59, v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      *(uint64_t *)v70,
      *(uint64_t *)&v70[8],
      *(uint64_t *)&v70[16],
      *(uint64_t *)&v70[24],
      *(uint64_t *)&v70[32],
      v71);
    memset(&v70[8], 0, 32);
    v71 = 0u;
    v72 = 0u;
    *(_QWORD *)v70 = 1;
    v73 = 0xC000000000000000;
    v74 = 0;
    v75 = 0;
    v76 = 0;
    sub_1CF6C8C54((uint64_t)v70);
    sub_1CF6C8C64(v70, &v53);
    OUTLINED_FUNCTION_109_0();
    sub_1CF6B706C();
  }
  else
  {
    *(_QWORD *)v70 = 1;
    sub_1CF68D0CC();
  }
}

void sub_1CF6C6684(void *a1)
{
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int16 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  char v76;

  sub_1CF6B5890((uint64_t)objc_msgSend(a1, sel_pairedPeer));
  v6 = sub_1CF6EEC14();
  sub_1CF6925A4(v6);
  OUTLINED_FUNCTION_272((uint64_t)&v66);
  OUTLINED_FUNCTION_347();
  if ((_DWORD)v12 == 1)
  {
    OUTLINED_FUNCTION_43_3(v7, v8, v9, v10, v11, v12, v13, v14, v57, v61, v62, v63, v64, v65, v66, v67, v68, v69);
    if (v5)
    {
      v66 = 0;
      *(_QWORD *)&v67 = 0;
      BYTE8(v67) = 0x80;
      v15 = sub_1CF6A3AE0(v5);
      OUTLINED_FUNCTION_348(v15, v16, v17, v18, v19, v20);
      OUTLINED_FUNCTION_138(v5, 0, v2, v3, v4, 1, v21, v22, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
      v23 = OUTLINED_FUNCTION_206();
      v30 = 1;
LABEL_7:
      OUTLINED_FUNCTION_138(v23, v24, v25, v26, v27, v30, v28, v29, v58);
      goto LABEL_15;
    }
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_174(v7, v8, v9, v10, v11, v12, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
  OUTLINED_FUNCTION_272((uint64_t)&v66);
  OUTLINED_FUNCTION_347();
  if ((_DWORD)v36 != 2)
  {
    OUTLINED_FUNCTION_174(v31, v32, v33, v34, v35, v36, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    OUTLINED_FUNCTION_253();
    if (v47 < 0)
    {
      OUTLINED_FUNCTION_26_0();
    }
    else
    {
      OUTLINED_FUNCTION_8_0();
      v48 = OUTLINED_FUNCTION_77_0();
      if ((v1 & 1) == 0)
      {
LABEL_13:
        OUTLINED_FUNCTION_43_3(v48, v49, v50, v51, v52, v53, v54, v55, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69);
        sub_1CF6B706C();
        goto LABEL_15;
      }
    }
    sub_1CF6B5658((uint64_t)&v66);
    v56 = v68;
    LOBYTE(v64) = v76;
    v48 = sub_1CF694020(v66, v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1), v69, v70, v71, v72, v73, v74, v75);
    if (!v56)
    {
      sub_1CF6BDAC4(v48, v49, v50, v51, v52, v53, v54, v55);
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_43_3(v31, v32, v33, v34, v35, v36, v37, v38, v59, v61, v62, v63, v64, v65, v66, v67, v68, v69);
  if (v5)
  {
    v66 = 0;
    *(_QWORD *)&v67 = 0;
    BYTE8(v67) = 0x80;
    v39 = sub_1CF6A3AE0(v5);
    OUTLINED_FUNCTION_348(v39, v40, v41, v42, v43, v44);
    OUTLINED_FUNCTION_138(v5, 0, v2, v3, v4, 2, v45, v46, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    v23 = OUTLINED_FUNCTION_206();
    v30 = 2;
    goto LABEL_7;
  }
LABEL_15:
  OUTLINED_FUNCTION_151();
}

void sub_1CF6C691C()
{
  __int16 v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  OUTLINED_FUNCTION_68_1();
  if (v0 < 0)
  {
    sub_1CF73F0CC();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    if (OUTLINED_FUNCTION_25_2())
    {
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_4_7();
      OUTLINED_FUNCTION_4_7();
      OUTLINED_FUNCTION_306();
      v7 = OUTLINED_FUNCTION_37_3(4.8751e-34);
      OUTLINED_FUNCTION_51_2(v7, v8, v9);
      v22 = v10;
      OUTLINED_FUNCTION_85_0();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_23_3(&dword_1CF67E000, v11, v12, "%{public}s: Ignoring unexpected unpaired message from device");
      OUTLINED_FUNCTION_32_3();
      OUTLINED_FUNCTION_0_1();
    }
  }
  else if ((v0 & 1) != 0)
  {
    sub_1CF6918B8((uint64_t)&v16);
    if (v21 == 4 && v16 == 4 && (v18 | v17 | v19 | v20) == 0)
    {
      sub_1CF6B5890(0);
      sub_1CF6925A4(0);
      OUTLINED_FUNCTION_155();
      sub_1CF691788(v15);
    }
    else
    {
      sub_1CF68EA18(v16, v17, v18, v19, v20, v21, (uint64_t (*)(void))sub_1CF693EC8, (uint64_t (*)(uint64_t, uint64_t))sub_1CF693FE0, (uint64_t (*)(uint64_t, uint64_t))sub_1CF6933C0);
    }
  }
  else
  {
    sub_1CF73F0CC();
    if (qword_1ED8F78F8 != -1)
      swift_once();
    if (OUTLINED_FUNCTION_25_2())
    {
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_4_7();
      OUTLINED_FUNCTION_4_7();
      OUTLINED_FUNCTION_306();
      v1 = OUTLINED_FUNCTION_37_3(4.8751e-34);
      OUTLINED_FUNCTION_51_2(v1, v2, v3);
      v22 = v4;
      OUTLINED_FUNCTION_85_0();
      OUTLINED_FUNCTION_13_0();
      OUTLINED_FUNCTION_57();
      OUTLINED_FUNCTION_23_3(&dword_1CF67E000, v5, v6, "%{public}s: Invalidating control channel in response to unpair message from host as this channel does not support PairSetup");
      OUTLINED_FUNCTION_32_3();
      OUTLINED_FUNCTION_0_1();
    }
    v16 = 0;
    sub_1CF68D0CC();
  }
  OUTLINED_FUNCTION_76_0();
}

void sub_1CF6C6B70()
{
  OUTLINED_FUNCTION_56();
  OUTLINED_FUNCTION_102();
  OUTLINED_FUNCTION_40_1();
  OUTLINED_FUNCTION_24();
}

uint64_t sub_1CF6C6B98()
{
  return sub_1CF6B8D18();
}

void sub_1CF6C6BB8()
{
  sub_1CF6C6B70();
}

uint64_t sub_1CF6C6BD8()
{
  MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnection);
  return HashableByObjectIdentity.hash(into:)();
}

uint64_t sub_1CF6C6C20(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1CF6C6C30(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

void sub_1CF6C6C64()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;

  OUTLINED_FUNCTION_199();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_128();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  OUTLINED_FUNCTION_90_0();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1F08);
    v7 = (_QWORD *)OUTLINED_FUNCTION_16();
    v8 = _swift_stdlib_malloc_size(v7);
    v7[2] = v2;
    v7[3] = 2 * ((uint64_t)(v8 - 32) / 8);
  }
  if ((v1 & 1) != 0)
  {
    v9 = (char *)OUTLINED_FUNCTION_196();
    sub_1CF6C7E8C(v9, v10, v11);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    v12 = OUTLINED_FUNCTION_94();
    sub_1CF6C74B4(v12, v13, v14, v15);
  }
  OUTLINED_FUNCTION_40();
}

void sub_1CF6C6D14()
{
  sub_1CF6C70A4();
}

void sub_1CF6C6D20()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_199();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_128();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  OUTLINED_FUNCTION_90_0();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7C40);
    v6 = (_QWORD *)OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_56_1(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_196();
    sub_1CF6C7F6C(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_94();
    sub_1CF6C75A4(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_34_0();
}

void sub_1CF6C6DC0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_199();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_128();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  OUTLINED_FUNCTION_90_0();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7C50);
    v6 = (_QWORD *)OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_56_1(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_196();
    sub_1CF6C7FF8(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_94();
    sub_1CF6C76C0(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_34_0();
}

char *sub_1CF6C6E60(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_1CF6C8084((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CF6C77DC(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

void sub_1CF6C6F4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_278(a1, a2, a3);
  OUTLINED_FUNCTION_122(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6C6F78()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CF6C6F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED8F7D10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1CF6C6FE4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_199();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_128();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  OUTLINED_FUNCTION_90_0();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1ED8);
    v6 = (_QWORD *)OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_56_1(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_196();
    sub_1CF6C80DC(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_94();
    sub_1CF6C78D0(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1CF6C7084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CF6C7264(a1, a2, a3, a4, &qword_1EFBA1E98, (void (*)(_QWORD))MEMORY[0x1E0D4D228]);
}

void sub_1CF6C7098()
{
  sub_1CF6C70A4();
}

void sub_1CF6C70A4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  _QWORD *v12;
  size_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_199();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_128();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  OUTLINED_FUNCTION_90_0();
  if (v3)
  {
    OUTLINED_FUNCTION_308(v7, v8, v9, v10, v11);
    v12 = (_QWORD *)OUTLINED_FUNCTION_16();
    v13 = _swift_stdlib_malloc_size(v12);
    v12[2] = v2;
    v12[3] = 2 * ((uint64_t)(v13 - 32) / 16);
  }
  if ((v1 & 1) != 0)
  {
    v14 = (char *)OUTLINED_FUNCTION_196();
    sub_1CF6C8084(v14, v15, v16);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    v17 = OUTLINED_FUNCTION_94();
    sub_1CF6C7DBC(v17, v18, v19, v20);
  }
  OUTLINED_FUNCTION_40();
}

void sub_1CF6C714C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6C7184(a1, a2, a3, a4, &qword_1EFBA1E90, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_1CF6C79CC, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1CF6C8168);
}

void sub_1CF6C7168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6C7184(a1, a2, a3, a4, &qword_1EFBA1E88, (void (*)(_QWORD, uint64_t, _QWORD *, uint64_t))sub_1CF6C7AC0, (void (*)(uint64_t, uint64_t, _QWORD *))sub_1CF6C8168);
}

void sub_1CF6C7184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD, uint64_t, _QWORD *, uint64_t), void (*a7)(uint64_t, uint64_t, _QWORD *))
{
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  _QWORD *v18;

  v10 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v12 != v13)
    {
      OUTLINED_FUNCTION_128();
      if (v12)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (v15)
  {
    OUTLINED_FUNCTION_308(a1, a2, a3, a4, a5);
    v16 = (_QWORD *)OUTLINED_FUNCTION_16();
    v17 = _swift_stdlib_malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 32);
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v18 = v16 + 4;
  if ((v10 & 1) != 0)
  {
    a7(a4 + 32, v14, v18);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    a6(0, v14, v18, a4);
  }
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1CF6C7250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CF6C7264(a1, a2, a3, a4, &qword_1EFBA18A0, (void (*)(_QWORD))MEMORY[0x1E0CCE3C0]);
}

uint64_t sub_1CF6C7264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD))
{
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  size_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t result;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v10 != v11)
    {
      OUTLINED_FUNCTION_128();
      if (v10)
      {
        __break(1u);
        goto LABEL_23;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (!v13)
  {
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_308(a1, a2, a3, a4, a5);
  v14 = *(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8);
  v15 = *(_QWORD *)(v14 + 72);
  v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  v17 = (_QWORD *)swift_allocObject();
  v18 = _swift_stdlib_malloc_size(v17);
  if (!v15 || (v18 - v16 == 0x8000000000000000 ? (v19 = v15 == -1) : (v19 = 0), v19))
  {
LABEL_23:
    OUTLINED_FUNCTION_3_1();
    result = sub_1CF73F444();
    __break(1u);
    return result;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_18:
  v20 = *(unsigned __int8 *)(*(_QWORD *)(((uint64_t (*)(_QWORD))a6)(0) - 8) + 80);
  v21 = (v20 + 32) & ~v20;
  v22 = (unint64_t)v17 + v21;
  if ((v8 & 1) != 0)
  {
    sub_1CF6C81CC(a4 + v21, v12, v22, a6);
    *(_QWORD *)(a4 + 16) = 0;
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    sub_1CF6C7BB4(0, v12, v22, a4, (uint64_t (*)(_QWORD))a6);
  }
  return (uint64_t)v17;
}

void sub_1CF6C7408()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  char v3;
  char v4;
  char v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_199();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_95();
    if (v4 != v5)
    {
      OUTLINED_FUNCTION_128();
      if (v4)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_93_0();
    }
  }
  OUTLINED_FUNCTION_90_0();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1880);
    v6 = (_QWORD *)OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_56_1(v6);
  }
  if ((v1 & 1) != 0)
  {
    v7 = (char *)OUTLINED_FUNCTION_196();
    sub_1CF6C82E8(v7, v8, v9);
    *(_QWORD *)(v0 + 16) = 0;
    OUTLINED_FUNCTION_3_7();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_94();
    sub_1CF6C7CA0(v10, v11, v12, v13);
  }
  OUTLINED_FUNCTION_34_0();
}

void sub_1CF6C74A8()
{
  sub_1CF6C70A4();
}

char *sub_1CF6C74B4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = (char *)sub_1CF73F480();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C75A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 24 * a1 + 32;
    v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F79E8);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1CF73F480();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C76C0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 48 * a1 + 32;
    v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F79F0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1CF73F480();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C77DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1CF73F480();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C78D0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 96 * a1 + 32;
    v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1CF73F480();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C79CC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1CF73F480();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C7AC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1CF73F480();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C7BB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a5(0) - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v9 + 72);
  v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
  v13 = v11 * v5;
  v14 = a3 + v13;
  v15 = v12 + v13;
  if (v12 >= v14 || v15 <= a3)
  {
    swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_3_7();
    return v14;
  }
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_40_3();
LABEL_11:
  result = OUTLINED_FUNCTION_11_4();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C7CA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 40 * a1 + 32;
    v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_1CF73F480();
  __break(1u);
  return result;
}

void sub_1CF6C7DBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v4 < 0)
  {
LABEL_9:
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
    goto LABEL_11;
  }
  v5 = a4 + 16 * a1 + 32;
  if (v5 >= a3 + 16 * v4 || v5 + 16 * v4 <= a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F6A08);
    swift_arrayInitWithCopy();
    OUTLINED_FUNCTION_3_7();
    OUTLINED_FUNCTION_186();
    return;
  }
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_40_3();
LABEL_11:
  OUTLINED_FUNCTION_11_4();
  __break(1u);
}

char *sub_1CF6C7E8C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1CF73F480();
    __break(1u);
  }
  else if (__dst != __src || &__src[8 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 8 * a2);
  }
  return __src;
}

char *sub_1CF6C7F14(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    result = (char *)OUTLINED_FUNCTION_8_3();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_4(a3, result);
  }
  return result;
}

char *sub_1CF6C7F6C(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1CF73F480();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

char *sub_1CF6C7FF8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1CF73F480();
    __break(1u);
  }
  else if (__dst != __src || &__src[48 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 48 * a2);
  }
  return __src;
}

char *sub_1CF6C8084(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    result = (char *)OUTLINED_FUNCTION_8_3();
    __break(1u);
  }
  else if (a3 != result || &result[16 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_4(a3, result);
  }
  return result;
}

char *sub_1CF6C80DC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_1CF73F480();
    __break(1u);
  }
  else if (__dst != __src || &__src[96 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 96 * a2);
  }
  return __src;
}

char *sub_1CF6C8168(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    result = (char *)OUTLINED_FUNCTION_8_3();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_4(a3, result);
  }
  return result;
}

void sub_1CF6C81C0(unint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1CF6C81CC(a1, a2, a3, (void (*)(_QWORD))MEMORY[0x1E0CCE3C0]);
}

void sub_1CF6C81CC(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_8_3();
    __break(1u);
  }
  else if (a3 < a1 || a1 + *(_QWORD *)(*(_QWORD *)(((uint64_t (*)(_QWORD))a4)(0) - 8) + 72) * a2 <= a3)
  {
    a4(0);
    OUTLINED_FUNCTION_317();
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (a3 == a1)
  {
    OUTLINED_FUNCTION_5();
  }
  else
  {
    OUTLINED_FUNCTION_317();
    swift_arrayInitWithTakeBackToFront();
  }
}

char *sub_1CF6C8288(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    result = (char *)OUTLINED_FUNCTION_8_3();
    __break(1u);
  }
  else if (a3 != result || &result[48 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_4(a3, result);
  }
  return result;
}

char *sub_1CF6C82E8(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    result = (char *)OUTLINED_FUNCTION_8_3();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)OUTLINED_FUNCTION_6_4(a3, result);
  }
  return result;
}

uint64_t sub_1CF6C834C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
    if (v4 + 8 * v3 <= v2 || v2 + 8 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1890);
      OUTLINED_FUNCTION_104_0();
      return OUTLINED_FUNCTION_35_1();
    }
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_40_3();
  }
  result = OUTLINED_FUNCTION_11_4();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C83EC()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_367();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
  }
  else
  {
    OUTLINED_FUNCTION_313();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_55_1();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_40_3();
  }
  result = OUTLINED_FUNCTION_11_4();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C8474()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_367();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
  }
  else
  {
    if (v2 + 96 * v1 <= v0 || v0 + 96 * v1 <= v2)
      return OUTLINED_FUNCTION_55_1();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_40_3();
  }
  result = OUTLINED_FUNCTION_11_4();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C850C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1CF6C85C4(a1, a2, a3);
}

uint64_t sub_1CF6C8518(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
    if (v4 + 16 * v3 <= v2 || v2 + 16 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F6A08);
      OUTLINED_FUNCTION_104_0();
      return OUTLINED_FUNCTION_35_1();
    }
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_40_3();
  }
  result = OUTLINED_FUNCTION_11_4();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C85B8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_1CF6C85C4(a1, a2, a3);
}

uint64_t sub_1CF6C85C4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
    v7 = *(_QWORD *)(*(_QWORD *)(v6(0) - 8) + 72) * v3;
    v8 = a3 + v7;
    v9 = v4 + v7;
    if (v8 <= v4 || v9 <= a3)
    {
      OUTLINED_FUNCTION_104_0();
      return OUTLINED_FUNCTION_35_1();
    }
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_40_3();
  }
  result = OUTLINED_FUNCTION_11_4();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C866C()
{
  unint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_367();
  if (v3 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
  }
  else
  {
    if (v2 + 48 * v1 <= v0 || v0 + 48 * v1 <= v2)
      return OUTLINED_FUNCTION_55_1();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_40_3();
  }
  result = OUTLINED_FUNCTION_11_4();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C8704(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t result;

  if (a2 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
  }
  else
  {
    OUTLINED_FUNCTION_121_0();
    if (v4 + 40 * v3 <= v2 || v2 + 40 * v3 <= v4)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
      OUTLINED_FUNCTION_104_0();
      return OUTLINED_FUNCTION_35_1();
    }
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_40_3();
  }
  result = OUTLINED_FUNCTION_11_4();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C87A8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  char v3;
  char v4;
  BOOL v5;
  uint64_t result;

  OUTLINED_FUNCTION_367();
  if (v0 < 0)
  {
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_39_2();
  }
  else
  {
    OUTLINED_FUNCTION_313();
    if (!v4 & v3)
      v5 = v2 > v1;
    else
      v5 = 0;
    if (!v5)
      return OUTLINED_FUNCTION_55_1();
    OUTLINED_FUNCTION_3_1();
    OUTLINED_FUNCTION_40_3();
  }
  result = OUTLINED_FUNCTION_11_4();
  __break(1u);
  return result;
}

uint64_t sub_1CF6C8830(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1CF68F110(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1CF73F2A0();
  result = OUTLINED_FUNCTION_11_3();
  *a1 = v8;
  return result;
}

void *sub_1CF6C889C(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1CF73F480();
  __break(1u);
  return result;
}

char *sub_1CF6C8960(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7C60);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_1CF6C8AF8(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_1CF6C8A34(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_1CF6C8A34(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_1CF73F480();
  __break(1u);
  return result;
}

char *sub_1CF6C8AF8(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_1CF73F480();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

_BYTE **sub_1CF6C8B78(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

void sub_1CF6C8B8C(const void *a1)
{
  uint64_t v1;

  sub_1CF6BAE6C(a1, *(_QWORD *)(v1 + 16), *(void (**)(void *))(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1CF6C8B9C(const void *a1)
{
  uint64_t v1;

  sub_1CF6BBB30(a1, *(_QWORD **)(v1 + 16), *(void (**)(_WORD *))(v1 + 24), *(_QWORD *)(v1 + 32));
}

void *sub_1CF6C8BA8(void *result, unint64_t a2)
{
  uint64_t v2;

  v2 = (a2 >> 60) & 3;
  if ((_DWORD)v2 == 2)
    return (void *)sub_1CF6933C0((uint64_t)result, a2 & 0xCFFFFFFFFFFFFFFFLL);
  if ((_DWORD)v2 == 1)
  {
    sub_1CF6933C0((uint64_t)result, a2 & 0xCFFFFFFFFFFFFFFFLL);
  }
  else
  {
    if ((_DWORD)v2)
      return result;

  }
  return (void *)swift_bridgeObjectRelease();
}

void sub_1CF6C8C10(const void *a1)
{
  uint64_t v1;

  sub_1CF6BC204(a1, *(_QWORD *)(v1 + 16), *(void (**)(void *, void *, uint64_t))(v1 + 24));
}

uint64_t objectdestroy_3Tm()
{
  OUTLINED_FUNCTION_176();
  swift_release();
  return swift_deallocObject();
}

void sub_1CF6C8C48(const void *a1)
{
  uint64_t v1;

  sub_1CF6BC7E0(a1, *(_QWORD *)(v1 + 16), *(void (**)(void *))(v1 + 24));
}

uint64_t sub_1CF6C8C54(uint64_t result)
{
  *(_WORD *)(result + 128) &= 0x7FFu;
  return result;
}

void *sub_1CF6C8C64(const void *a1, void *a2)
{
  __swift_memcpy130_8(a2, a1);
  return a2;
}

uint64_t sub_1CF6C8CA0(uint64_t result)
{
  *(_BYTE *)(result + 121) = 4;
  return result;
}

void *sub_1CF6C8CAC(const void *a1, void *a2)
{
  __swift_memcpy122_8(a2, a1);
  return a2;
}

unint64_t sub_1CF6C8CEC()
{
  unint64_t result;

  result = qword_1EFBA1DF0;
  if (!qword_1EFBA1DF0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for PermittedPromptlessPairingMode, &type metadata for PermittedPromptlessPairingMode);
    atomic_store(result, (unint64_t *)&qword_1EFBA1DF0);
  }
  return result;
}

void sub_1CF6C8D28(uint64_t a1)
{
  uint64_t v2;

  sub_1CF6CACA8(&qword_1ED8F7198, (void (*)(uint64_t))type metadata accessor for ControlChannelConnection);
  *(_QWORD *)(a1 + 8) = v2;
}

void sub_1CF6C8D64()
{
  sub_1CF6CACA8(&qword_1ED8F71A0, (void (*)(uint64_t))type metadata accessor for ControlChannelConnection);
}

void sub_1CF6C8D98()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_239();
  sub_1CF6B5860();
  *v0 = v1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8DEC()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_239();
  sub_1CF6B64C4();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8E10(char *a1)
{
  sub_1CF6B64E8(*a1);
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8E30()
{
  sub_1CF6B654C();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6B65F8(a1, a2, a3, a4, (uint64_t *)&unk_1ED8F7120, (void (*)(_BYTE *))sub_1CF6B6584);
}

void sub_1CF6C8E70()
{
  sub_1CF6B6634();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6B65F8(a1, a2, a3, a4, &qword_1ED8F7118, (void (*)(_BYTE *))sub_1CF692438);
}

void sub_1CF6C8EB0(uint64_t a1@<X8>)
{
  sub_1CF6B66D8(a1);
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8ED0()
{
  sub_1CF6B6788();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6B65F8(a1, a2, a3, a4, &qword_1ED8F68B0, (void (*)(_BYTE *))sub_1CF6B67C0);
}

void sub_1CF6C8F10()
{
  sub_1CF6B6834();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6B65F8(a1, a2, a3, a4, &qword_1ED8F7CB8, (void (*)(_BYTE *))sub_1CF6B686C);
}

void sub_1CF6C8F50()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_239();
  sub_1CF6B6A70();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8F74(char *a1)
{
  sub_1CF6B6A94(*a1);
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8F94()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_239();
  sub_1CF6B6B24();
  *v0 = v1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8FB8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_239();
  sub_1CF6B6BEC();
  *v0 = v1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6C8FE4(void **a1@<X8>)
{
  sub_1CF68C620(a1);
  OUTLINED_FUNCTION_1();
}

uint64_t dispatch thunk of TunnelListenerCreator.startListener(peerToPeer:withKey:transportProtocolType:peerConnectionsInfo:forControlChannelConnection:invokingCompletionHandlerOnQueue:onComplete:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 8))();
}

uint64_t getEnumTagSinglePayload for PairingConsentCollectionOutcome(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PairingConsentCollectionOutcome(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

_QWORD *sub_1CF6C90D4(_QWORD *result, int a2)
{
  unsigned int v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2)
      return result;
    v2 = a2 - 1;
  }
  *result = v2;
  return result;
}

void type metadata accessor for PairingConsentCollectionOutcome()
{
  OUTLINED_FUNCTION_31();
}

void type metadata accessor for PermittedPromptlessPairingMode()
{
  OUTLINED_FUNCTION_31();
}

uint64_t dispatch thunk of UserInteractionProvider.show(pin:sendingHost:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t dispatch thunk of UserInteractionProvider.hidePin(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of UserInteractionProvider.collectConsentForPinlessPairing(withHostNamed:hostPairingOptions:hostChallenge:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 24))();
}

uint64_t dispatch thunk of UserInteractionProvider.cancelConsentCollection()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of UserInteractionProvider.shouldUseOSProvidedPinUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of UserInteractionProvider.promptlessPairingInfo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DeviceMetadataProvider.getDeviceInfo(includingSensitiveKeys:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1CF6C9170()
{
  return type metadata accessor for ControlChannelConnection();
}

uint64_t sub_1CF6C9178()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1CF73EDC0();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for ControlChannelConnection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfo.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfo.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfo.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ControlChannelConnection.resolvedIdentity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of ControlChannelConnection.resolvedIdentity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ControlChannelConnection.resolvedIdentity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ControlChannelConnection.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of ControlChannelConnection.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of ControlChannelConnection.correlationIdentifier.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of ControlChannelConnection.correlationIdentifier.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of ControlChannelConnection.correlationIdentifier.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of ControlChannelConnection.loggingPrefix.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of ControlChannelConnection._connectionSetupCompleteHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of ControlChannelConnection._connectionSetupCompleteHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfoUpdateHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfoUpdateHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceInfoUpdateHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of ControlChannelConnection.serverPairSetupOutcomeHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of ControlChannelConnection.serverPairSetupOutcomeHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of ControlChannelConnection.serverPairSetupOutcomeHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of ControlChannelConnection.requireUserConsentForPairing.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of ControlChannelConnection.requireUserConsentForPairing.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of ControlChannelConnection.requireUserConsentForPairing.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of ControlChannelConnection.userInteractionProvider.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of ControlChannelConnection.userInteractionProvider.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of ControlChannelConnection.userInteractionProvider.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of ControlChannelConnection.tunnelListenerCreator.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of ControlChannelConnection.tunnelListenerCreator.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of ControlChannelConnection.pairingDataStorageProvider.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of ControlChannelConnection.pairingDataStorageProvider.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of ControlChannelConnection.pairingDataStorageProvider.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of ControlChannelConnection.customKeybagProvider.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of ControlChannelConnection.customKeybagProvider.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of ControlChannelConnection.customKeybagProvider.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of ControlChannelConnection.customDeviceMetadataProvider.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of ControlChannelConnection.customDeviceMetadataProvider.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of ControlChannelConnection.customDeviceMetadataProvider.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsTunnelConnections.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsPairSetup.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsPromptlessAutomationPairingUpgrade.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsRemoteUnlock.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsDowngradingAuthenticatedChannels.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerDeviceSupportsUpgradingNonAutomationLockdownPairings.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of ControlChannelConnection.connectionSetupDidComplete.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of ControlChannelConnection.connectionSetupDidComplete.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of ControlChannelConnection.connectionSetupDidComplete.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerWireProtocolVersion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerWireProtocolVersion.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of ControlChannelConnection.peerWireProtocolVersion.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostMinumumSupportedWireProtocolVersion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostMinumumSupportedWireProtocolVersion.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostMinumumSupportedWireProtocolVersion.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostOutOfBandPairSetupHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostOutOfBandPairSetupHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of ControlChannelConnection.hostOutOfBandPairSetupHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationReason.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1072))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidationReason.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of ControlChannelConnection.__allocating_init(transport:queue:options:maxReconnectionAttempts:pairingDataStorageProvider:peerWireProtocolVersion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1088))();
}

uint64_t dispatch thunk of ControlChannelConnection.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1144))();
}

uint64_t dispatch thunk of ControlChannelConnection.initiatePromptlessPairing(forAutomationRecord:pairingOutcomeHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1184))();
}

uint64_t dispatch thunk of ControlChannelConnection.initiatePairing(withOptions:pairingOutcomeHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1192))();
}

uint64_t dispatch thunk of ControlChannelConnection.attempt(pairingPIN:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1200))();
}

uint64_t dispatch thunk of ControlChannelConnection.cancelPairSetup(completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1208))();
}

uint64_t dispatch thunk of ControlChannelConnection.requestTunnelBringup(usingKey:transportProtocolType:peerConnectionsInfo:onComplete:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1216))();
}

uint64_t dispatch thunk of ControlChannelConnection.requestCreateRemoteUnlockKey(onComplete:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1224))();
}

uint64_t dispatch thunk of ControlChannelConnection.requestRemoteUnlock(hostKey:onComplete:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1232))();
}

uint64_t dispatch thunk of ControlChannelConnection.wakeDevice()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1240))();
}

uint64_t dispatch thunk of ControlChannelConnection.notifyPeerOfUnpairing()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1248))();
}

uint64_t dispatch thunk of ControlChannelConnection.pushDeviceInfoChangesToHost()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1304))();
}

uint64_t dispatch thunk of ControlChannelConnection.invalidate(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1488))();
}

uint64_t dispatch thunk of ControlChannelConnection.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1504))();
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.Options(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3FFF && *(_BYTE *)(a1 + 5))
    {
      v2 = *(_DWORD *)a1 + 16382;
    }
    else
    {
      v2 = ((*(_DWORD *)a1 >> 1) & 0x3F00 | *(_DWORD *)a1 & 0xFE | (*(_DWORD *)a1 >> 15) & 1) ^ 0x3FFF;
      if (v2 >= 0x3FFE)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnection.Options(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 0x3FFF;
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0x3FFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
    {
      *(_BYTE *)(result + 4) = 0;
      *(_DWORD *)result = -a2 & 0xFE | ((((((-a2 & 0x3F00) >> 1) - (a2 << 13)) >> 7) & 0x7F) << 9);
    }
  }
  return result;
}

uint64_t sub_1CF6C96FC(_DWORD *a1)
{
  return (*a1 >> 15) & 1;
}

unsigned int *sub_1CF6C9708(unsigned int *result)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *result;
  v2 = v1 & 0xFFFFFFFFFFFF7FFFLL | ((unint64_t)*((unsigned __int8 *)result + 4) << 32);
  *result = v1 & 0xFFFF7FFF;
  *((_BYTE *)result + 4) = BYTE4(v2);
  return result;
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.Options.Host(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnection.Options.Host(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF6C980C + 4 * byte_1CF7433B7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF6C9840 + 4 * byte_1CF7433B2[v4]))();
}

uint64_t sub_1CF6C9840(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6C9848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6C9850);
  return result;
}

uint64_t sub_1CF6C985C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6C9864);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF6C9868(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6C9870(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ControlChannelConnection.Options.Host()
{
  OUTLINED_FUNCTION_31();
}

uint64_t getEnumTagSinglePayload for ControlChannelConnection.Options.Device(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  unsigned int v3;
  BOOL v4;

  if (a2)
  {
    if (a2 >= 0xFF && a1[5])
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *a1;
      v4 = v3 >= 2;
      v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnection.Options.Device(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 5) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

void _s19RemotePairingDevice31PairingConsentCollectionOutcomeOwca_0(uint64_t a1)
{
  void **v1;
  void *v2;
  void *v3;
  void **v4;
  void *v5;
  char v6;
  void **v7;

  OUTLINED_FUNCTION_228(a1);
  if (v6)
  {
    OUTLINED_FUNCTION_341();
    if (v6)
    {
      OUTLINED_FUNCTION_223();
      v5 = *v1;
      *v1 = v2;

    }
    else
    {
      v7 = v4;

      *v1 = *v7;
    }
  }
  else
  {
    OUTLINED_FUNCTION_341();
    if (v6)
      OUTLINED_FUNCTION_223();
    *v1 = v2;
  }
  OUTLINED_FUNCTION_40();
}

void _s19RemotePairingDevice31PairingConsentCollectionOutcomeOwta_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  char v3;
  void *v4;

  OUTLINED_FUNCTION_228(a1);
  if (!v3)
  {
    OUTLINED_FUNCTION_341();
LABEL_6:
    *v1 = v2;
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_341();
  if (!v3)
  {

    goto LABEL_6;
  }
  *v1 = v2;

LABEL_7:
  OUTLINED_FUNCTION_1();
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnection.InvalidationReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFB)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 4;
  }
  return result;
}

uint64_t _s19RemotePairingDevice30PermittedPromptlessPairingModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF6C9A5C + 4 * byte_1CF7433C1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF6C9A90 + 4 * byte_1CF7433BC[v4]))();
}

uint64_t sub_1CF6C9A90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6C9A98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6C9AA0);
  return result;
}

uint64_t sub_1CF6C9AAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6C9AB4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF6C9AB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6C9AC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ControlChannelConnection.PeerType()
{
  OUTLINED_FUNCTION_31();
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnection.Options.Device.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1CF6C9B24 + 4 * byte_1CF7433CB[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1CF6C9B58 + 4 * byte_1CF7433C6[v4]))();
}

uint64_t sub_1CF6C9B58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6C9B60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6C9B68);
  return result;
}

uint64_t sub_1CF6C9B74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6C9B7CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1CF6C9B80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6C9B88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnection.Options.Device.CodingKeys()
{
  return &type metadata for ControlChannelConnection.Options.Device.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnection.Options.Host.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CF6C9BE4 + 4 * byte_1CF7433D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CF6C9C04 + 4 * byte_1CF7433D5[v4]))();
}

_BYTE *sub_1CF6C9BE4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CF6C9C04(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6C9C0C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6C9C14(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6C9C1C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6C9C24(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnection.Options.Host.CodingKeys()
{
  return &type metadata for ControlChannelConnection.Options.Host.CodingKeys;
}

unint64_t sub_1CF6C9C44()
{
  unint64_t result;

  result = qword_1EFBA1E60;
  if (!qword_1EFBA1E60)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7439F0, &type metadata for ControlChannelConnection.Options.Host.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1E60);
  }
  return result;
}

unint64_t sub_1CF6C9C84()
{
  unint64_t result;

  result = qword_1EFBA1E68;
  if (!qword_1EFBA1E68)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743AA8, &type metadata for ControlChannelConnection.Options.Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA1E68);
  }
  return result;
}

unint64_t sub_1CF6C9CC4()
{
  unint64_t result;

  result = qword_1EFBA1E70;
  if (!qword_1EFBA1E70)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743AD0, &unk_1E8C9AA60);
    atomic_store(result, (unint64_t *)&qword_1EFBA1E70);
  }
  return result;
}

unint64_t sub_1CF6C9D04()
{
  unint64_t result;

  result = qword_1ED8F7148;
  if (!qword_1ED8F7148)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743A18, &type metadata for ControlChannelConnection.Options.Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7148);
  }
  return result;
}

unint64_t sub_1CF6C9D44()
{
  unint64_t result;

  result = qword_1ED8F7140;
  if (!qword_1ED8F7140)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743A40, &type metadata for ControlChannelConnection.Options.Device.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7140);
  }
  return result;
}

unint64_t sub_1CF6C9D84()
{
  unint64_t result;

  result = qword_1ED8F7168;
  if (!qword_1ED8F7168)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743960, &type metadata for ControlChannelConnection.Options.Host.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7168);
  }
  return result;
}

unint64_t sub_1CF6C9DC4()
{
  unint64_t result;

  result = qword_1ED8F7160;
  if (!qword_1ED8F7160)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743988, &type metadata for ControlChannelConnection.Options.Host.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7160);
  }
  return result;
}

unint64_t sub_1CF6C9E00()
{
  unint64_t result;

  result = qword_1ED8F7188;
  if (!qword_1ED8F7188)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF743AF8, &unk_1E8C9AA60);
    atomic_store(result, (unint64_t *)&qword_1ED8F7188);
  }
  return result;
}

void sub_1CF6C9E3C(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12)
{
  unint64_t v12;

  v12 = a10 >> 62;
  if (a10 >> 62 == 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1CF693FE0(a11, a12);
  }
  else if ((_DWORD)v12 == 1)
  {

  }
  else if (!(_DWORD)v12)
  {
    sub_1CF6933C0(a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1CF6C9F10(id a1)
{
  if ((unint64_t)a1 >= 4)

}

id sub_1CF6C9F20(id result)
{
  if ((unint64_t)result >= 4)
    return result;
  return result;
}

void sub_1CF6C9F30(void **a1)
{
  sub_1CF6C081C(a1);
}

unint64_t sub_1CF6C9F38()
{
  unint64_t result;

  result = qword_1EFBA1EB8;
  if (!qword_1EFBA1EB8)
  {
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1EFBA1EB8);
  }
  return result;
}

void sub_1CF6C9F74(const void *a1)
{
  sub_1CF6BDB34(a1);
}

uint64_t sub_1CF6C9F7C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 121) <= 5u)
    return *(unsigned __int8 *)(a1 + 121);
  else
    return (*(_DWORD *)a1 + 6);
}

id sub_1CF6C9F94(id result, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, char a16, char a17)
{
  id v23;
  id v24;
  uint64_t v25;
  unint64_t v26;

  switch(a17)
  {
    case 0:
      v23 = result;
      v24 = a2;
      return (id)sub_1CF6B56D0(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
    case 1:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v25 = a11;
      v26 = a12;
      return (id)sub_1CF6A7B18(v25, v26);
    case 2:
      v25 = (uint64_t)a2;
      v26 = a3;
      return (id)sub_1CF6A7B18(v25, v26);
    case 3:
      return (id)sub_1CF6934BC((uint64_t)result, (unint64_t)a2);
    case 4:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      result = (id)a8;
      goto LABEL_8;
    case 5:
LABEL_8:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1CF6CA148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_166();
  v10(v2, v3, v4, v5, v6, v7, v8, v9);
  return a1;
}

void sub_1CF6CA1A0(void *a1, void *a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, char a16, char a17)
{
  uint64_t v23;
  unint64_t v24;

  switch(a17)
  {
    case 0:

      sub_1CF694020(a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
      return;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v23 = a11;
      v24 = a12;
      goto LABEL_5;
    case 2:
      v23 = (uint64_t)a2;
      v24 = a3;
LABEL_5:
      sub_1CF693FE0(v23, v24);
      return;
    case 3:
      sub_1CF6933C0((uint64_t)a1, (unint64_t)a2);
      return;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a1 = (void *)a8;
      goto LABEL_8;
    case 5:
LABEL_8:

      break;
    default:
      return;
  }
}

uint64_t sub_1CF6CA354()
{
  OUTLINED_FUNCTION_176();
  return swift_deallocObject();
}

void sub_1CF6CA374(const void *a1)
{
  uint64_t v1;

  sub_1CF6BD0B0(a1, *(_QWORD *)(v1 + 16), *(_BYTE *)(v1 + 24));
}

void sub_1CF6CA380(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    OUTLINED_FUNCTION_15_2();
  }
  OUTLINED_FUNCTION_1();
}

void sub_1CF6CA3B8(void *a1)
{
  uint64_t v1;

  sub_1CF6B9CB4(a1, *(_QWORD *)(v1 + 16), (__n128 *)(v1 + 24));
}

uint64_t sub_1CF6CA3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, __int16 a17, uint64_t (*a18)(void), uint64_t (*a19)(void), uint64_t (*a20)(void),uint64_t (*a21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  if ((a17 & 0x2000) != 0)
    return sub_1CF6CA43C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17 & 0xDFFF, a19, a20,
             a21);
  else
    return a18();
}

uint64_t sub_1CF6CA43C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int16 a17, uint64_t (*a18)(void), uint64_t (*a19)(void), uint64_t (*a20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  int v20;
  uint64_t result;

  v20 = a17 >> 14;
  switch(v20)
  {
    case 2:
      return a20(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
    case 1:
      return a19();
    case 0:
      return a18();
  }
  return result;
}

id sub_1CF6CA4D0(id result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, unint64_t a12)
{
  unint64_t v12;

  v12 = a10 >> 62;
  if (a10 >> 62 == 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (id)sub_1CF6A7B18(a11, a12);
  }
  else if ((_DWORD)v12 == 1)
  {
    return result;
  }
  else if (!(_DWORD)v12)
  {
    sub_1CF6934BC(a2, a3);
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

id sub_1CF6CA5A4(id result, unint64_t a2)
{
  uint64_t v2;
  id v3;

  v2 = (a2 >> 60) & 3;
  switch((_DWORD)v2)
  {
    case 2:
      return (id)sub_1CF6934BC((uint64_t)result, a2 & 0xCFFFFFFFFFFFFFFFLL);
    case 1:
      sub_1CF6934BC((uint64_t)result, a2 & 0xCFFFFFFFFFFFFFFFLL);
      return (id)swift_bridgeObjectRetain();
    case 0:
      v3 = result;
      swift_bridgeObjectRetain();
      return v3;
  }
  return result;
}

void sub_1CF6CA630(__n128 *a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  OUTLINED_FUNCTION_74_0(a1[1].n128_i64[0], a2, a3, a4, a5, a1[3].n128_i64[1], a1[4].n128_i64[0], a1[4].n128_i64[1], a1[1].n128_i64[1], a1[5], a1[6], a1[7]);
  OUTLINED_FUNCTION_323();
}

void *sub_1CF6CA678(const void *a1, void *a2)
{
  __swift_memcpy130_8(a2, a1);
  return a2;
}

uint64_t sub_1CF6CA6B4(uint64_t a1)
{
  return (*(unsigned __int16 *)(a1 + 128) >> 13) & 1;
}

uint64_t sub_1CF6CA6C0(uint64_t result)
{
  *(_WORD *)(result + 128) &= ~0x2000u;
  return result;
}

uint64_t sub_1CF6CA6D0(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 128) >> 14;
}

uint64_t sub_1CF6CA6DC(uint64_t a1)
{
  __n128 v2;
  uint64_t v3;
  uint64_t (*v4)(void);
  uint64_t (*v5)(void);
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = OUTLINED_FUNCTION_166();
  sub_1CF6CA43C(v3, v11, v12, v13, v7, v8, v9, v10, v2.n128_i64[0], v2.n128_i64[1], v14, v15, v16, v17, *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_WORD *)(a1 + 128), v4, v5,
    v6);
  return a1;
}

uint64_t sub_1CF6CA744(uint64_t a1)
{
  sub_1CF6C9F94(*(id *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_WORD *)(a1 + 128), HIBYTE(*(_WORD *)(a1 + 128)));
  return a1;
}

uint64_t sub_1CF6CA7A8(uint64_t result)
{
  *(_WORD *)(result + 128) &= 0x3FFFu;
  return result;
}

unint64_t sub_1CF6CA7B8()
{
  unint64_t result;

  result = qword_1ED8F7110;
  if (!qword_1ED8F7110)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF748298, &unk_1E8CA2130);
    atomic_store(result, (unint64_t *)&qword_1ED8F7110);
  }
  return result;
}

uint64_t sub_1CF6CA7F4(uint64_t result)
{
  *(_WORD *)(result + 128) = *(_WORD *)(result + 128) & 0x7FF | 0x8000;
  return result;
}

uint64_t sub_1CF6CA808(uint64_t result)
{
  *(_BYTE *)(result + 121) = 1;
  return result;
}

uint64_t objectdestroy_59Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_176();
  sub_1CF6CA3C4(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_WORD *)(v0 + 168), (uint64_t (*)(void))sub_1CF6933C0, (uint64_t (*)(void))sub_1CF6C9E3C,
    (uint64_t (*)(void))sub_1CF6C8BA8,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6CA1A0);
  return swift_deallocObject();
}

uint64_t sub_1CF6CA8A0(const void *a1)
{
  uint64_t v1;

  return sub_1CF6B8218(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_1CF6CA8AC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CF6CA8D8(uint64_t a1)
{
  uint64_t v1;

  sub_1CF6C1EE4(a1, *(void (**)(_BYTE *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

void sub_1CF6CA8E4(void *a1, uint64_t a2, unint64_t a3, char a4)
{
  if ((a4 & 1) != 0)

  else
    sub_1CF6933C0(a2, a3);
}

uint64_t sub_1CF6CA8F8(uint64_t result)
{
  *(_BYTE *)(result + 121) = 2;
  return result;
}

uint64_t sub_1CF6CA904(uint64_t result)
{
  *(_BYTE *)(result + 121) = 0;
  return result;
}

uint64_t sub_1CF6CA90C(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  id v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(void **)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v14 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 112);
  v10 = *(id *)a1;
  v11 = v2;
  sub_1CF6B56D0(v16, v15, v14, v3, v4, v5, v6, v7, v13, *((uint64_t *)&v13 + 1), v8, v9);
  return a1;
}

uint64_t sub_1CF6CA9BC(uint64_t a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 56);
  v5 = *(_QWORD *)(a1 + 64);
  v6 = *(_QWORD *)(a1 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  v11 = *(_OWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(_QWORD *)(a1 + 112);

  sub_1CF694020(v14, v13, v12, v3, v4, v5, v6, v7, v11, *((uint64_t *)&v11 + 1), v8, v9);
  return a1;
}

double sub_1CF6CAA6C(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_WORD *)(a1 + 120) = 1536;
  return result;
}

uint64_t sub_1CF6CAAA0(uint64_t result)
{
  *(_BYTE *)(result + 121) = 3;
  return result;
}

double sub_1CF6CAAAC(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 105) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_BYTE *)(a1 + 121) = 6;
  return result;
}

void *sub_1CF6CAAD0(const void *a1, void *a2)
{
  __swift_memcpy146_8(a2, a1);
  return a2;
}

uint64_t sub_1CF6CAB0C(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int16 *)(a1 + 144);
  if (((v1 >> 11) & 2) != 0)
    return ((*(_QWORD *)a1 >> 2) & 0xFFFFFFFE | *(_QWORD *)a1 & 1) + 2;
  else
    return (v1 >> 11) & 3;
}

uint64_t sub_1CF6CAB34(uint64_t result)
{
  *(_WORD *)(result + 144) &= 0xE7FFu;
  return result;
}

uint64_t sub_1CF6CAB44(uint64_t a1)
{
  sub_1CF68BFCC(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_WORD *)(a1 + 144));
  return a1;
}

uint64_t sub_1CF6CABA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CF6B6DD8(a1, a2, *(void (**)(_QWORD *))(v2 + 16));
}

void sub_1CF6CABAC()
{
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6CABC4(uint64_t *a1)
{
  uint64_t v1;

  return sub_1CF6B6CEC(a1, *(void (**)(void (*)(), uint64_t))(v1 + 16));
}

void sub_1CF6CABCC()
{
  uint64_t v0;

  sub_1CF6B6004(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1CF6CABD4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6CABF8(uint64_t result)
{
  *(_WORD *)(result + 128) = *(_WORD *)(result + 128) & 0xC7FF | 0x2000;
  return result;
}

void sub_1CF6CAC0C()
{
  __n128 v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  __n128 v11;

  v0 = OUTLINED_FUNCTION_166();
  OUTLINED_FUNCTION_74_0(v1, v2, v3, v4, v5, v6, v7, v8, v9, v0, v10, v11);
  OUTLINED_FUNCTION_323();
}

uint64_t sub_1CF6CAC48(uint64_t result)
{
  *(_WORD *)(result + 128) &= 0xC7FFu;
  return result;
}

unint64_t sub_1CF6CAC58()
{
  unint64_t result;

  result = qword_1ED8F7100;
  if (!qword_1ED8F7100)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF748270, &unk_1E8CA2130);
    atomic_store(result, (unint64_t *)&qword_1ED8F7100);
  }
  return result;
}

uint64_t sub_1CF6CAC94(uint64_t result)
{
  *(_WORD *)(result + 128) = *(_WORD *)(result + 128) & 0x7FF | 0x4000;
  return result;
}

void sub_1CF6CACA8(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    OUTLINED_FUNCTION_15_2();
  }
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1CF6CACDC()
{
  unint64_t result;

  result = qword_1ED8F7A60;
  if (!qword_1ED8F7A60)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED8F7A60);
  }
  return result;
}

uint64_t sub_1CF6CAD1C(void *a1)
{
  uint64_t v1;

  return sub_1CF6C53A0(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_1CF6CAD3C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6CAD70(char a1, uint64_t a2, unint64_t a3)
{
  uint64_t v3;

  return sub_1CF6C5464(a1, a2, a3, *(_BYTE *)(v3 + 16), *(void **)(v3 + 24), *(_QWORD *)(v3 + 32));
}

void sub_1CF6CAD80(uint64_t a1, void *a2, SEL *a3)
{
  id v5;

  v5 = (id)sub_1CF73EE14();
  OUTLINED_FUNCTION_11();
  objc_msgSend(a2, *a3, v5);

}

uint64_t objectdestroy_113Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_176();

  return swift_deallocObject();
}

void sub_1CF6CAE1C()
{
  uint64_t v0;

  sub_1CF6C5B50(*(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_1();
}

void sub_1CF6CAE3C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1CF73EEB0();
  objc_msgSend(a3, sel_setFixedPIN_, v4);

}

uint64_t sub_1CF6CAE80(unsigned int a1, int a2)
{
  return sub_1CF6C5A98(a1, a2);
}

uint64_t sub_1CF6CAE88()
{
  uint64_t v0;

  OUTLINED_FUNCTION_176();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CF6CAEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1CF6C58C8(a1, a2, a3, v3[2], v3 + 3, v3[8], v3[9]);
}

uint64_t sub_1CF6CAEC8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_176();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1CF6CAEF0()
{
  uint64_t v0;

  return sub_1CF6C5A0C(*(_QWORD *)(v0 + 16), (_QWORD *)(v0 + 24));
}

void sub_1CF6CAEFC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4;

  v4 = (id)sub_1CF73EEB0();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setFixedPIN_, v4);

}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_3()
{
  return sub_1CF73F690();
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  uint64_t v0;

  return sub_1CF6CA6DC(v0 - 224);
}

BOOL OUTLINED_FUNCTION_25_2()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

void OUTLINED_FUNCTION_26_3(__n128 *a1, uint64_t (*a2)(void))
{
  uint64_t (*v2)(void);
  uint64_t (*v3)(void);
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1CF6CA630(a1, a2, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_35_1()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_37_3(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_1CF6B5B0C();
}

void OUTLINED_FUNCTION_42_3()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  *(_BYTE *)v2 = v4;
  *(_QWORD *)(v2 + 8) = v0;
  *(_QWORD *)(v2 + 16) = v3;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_QWORD *)(v2 + 56) = 0;
  sub_1CF6926B8(v1);
}

BOOL OUTLINED_FUNCTION_45_3()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

void OUTLINED_FUNCTION_47_2(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a69;

  sub_1CF68F110(a1, a2, &a69);
}

void OUTLINED_FUNCTION_51_2(uint64_t a1, unint64_t a2, uint64_t a3, ...)
{
  va_list va;

  va_start(va, a3);
  sub_1CF68F110(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_54_3()
{
  uint64_t v0;

  sub_1CF6A3AE0(v0);
  return v0;
}

uint64_t OUTLINED_FUNCTION_55_1()
{
  return swift_arrayInitWithCopy();
}

size_t OUTLINED_FUNCTION_56_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void OUTLINED_FUNCTION_58_2()
{
  sub_1CF6B94F8();
}

uint64_t OUTLINED_FUNCTION_59_2()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_60_0(float a1)
{
  float *v1;

  *v1 = a1;
  return sub_1CF6B5B0C();
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  return sub_1CF73F450();
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return sub_1CF73EF34();
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return sub_1CF6B5B0C();
}

uint64_t OUTLINED_FUNCTION_70_1()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_71_0()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_74_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>, __n128 a11@<Q1>, __n128 a12@<Q2>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int16 v17;

  return sub_1CF6CA3C4(a1, a9, v12, v13, v14, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a11.n128_i64[0], a11.n128_i64[1], a12.n128_i64[0], a12.n128_i64[1], v15, v16, v17, a2, a3,
           a4,
           a5);
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return swift_bridgeObjectRelease();
}

BOOL OUTLINED_FUNCTION_81_0()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

void OUTLINED_FUNCTION_82_0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1CF6C3DF8(a1, a2, a3, a4, 0, 0xF000000000000000, 0, 0, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_85_0()
{
  return sub_1CF73F2A0();
}

void OUTLINED_FUNCTION_86_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  sub_1CF68F110(a1, a2, &a42);
}

void OUTLINED_FUNCTION_89_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  uint64_t v34;

  a29 = 5;
  *(_OWORD *)(v34 + 8) = 0u;
  *(_OWORD *)(v34 + 24) = 0u;
  a34 = 4;
  sub_1CF691788(&a29);
}

uint64_t OUTLINED_FUNCTION_91_0()
{
  return sub_1CF73F780();
}

uint64_t OUTLINED_FUNCTION_94()
{
  return 0;
}

double OUTLINED_FUNCTION_97_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  double result;

  *(_BYTE *)v1 = v3;
  *(_QWORD *)(v1 + 8) = v0;
  *(_QWORD *)(v1 + 16) = v2;
  result = 0.0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  return result;
}

void OUTLINED_FUNCTION_98_0(uint64_t *a1)
{
  sub_1CF691788(a1);
}

void *OUTLINED_FUNCTION_100_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t __dst)
{
  return memcpy(&__dst, &STACK[0x2C8], 0x92uLL);
}

void OUTLINED_FUNCTION_101_0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  sub_1CF68F110(a1, a2, &a42);
}

uint64_t OUTLINED_FUNCTION_102_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);

  return sub_1CF68EA18(v14, v9, v11, v12, v13, 1, v10, v15, a9);
}

uint64_t OUTLINED_FUNCTION_104_0()
{
  uint64_t v0;

  return v0;
}

char *OUTLINED_FUNCTION_105_0(char *a1, int64_t a2)
{
  uint64_t v2;

  return sub_1CF6C6E60(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_107_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 288) = a1;
  *(_QWORD *)(v2 - 280) = v1;
}

void OUTLINED_FUNCTION_109_0()
{
  sub_1CF6B94F8();
}

uint64_t OUTLINED_FUNCTION_110_0()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_113_0()
{
  return sub_1CF73F450();
}

uint64_t OUTLINED_FUNCTION_114_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t (*v15)(void);
  uint64_t (*v16)(uint64_t, uint64_t);

  return sub_1CF68EA18(v9, v10, v11, v12, v13, v14, v15, v16, a9);
}

_QWORD *OUTLINED_FUNCTION_116_0(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_0Tm(a1, v1);
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  return sub_1CF73F4C8();
}

uint64_t OUTLINED_FUNCTION_123_0()
{
  return sub_1CF73F330();
}

uint64_t OUTLINED_FUNCTION_124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  return sub_1CF68EA18(v9, v10, v11, v12, v13, v14, a7, a8, a9);
}

uint64_t OUTLINED_FUNCTION_125_0()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  return sub_1CF73F7EC();
}

double OUTLINED_FUNCTION_127()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  return sub_1CF68EA18(v13, v12, v11, v10, v9, v14, a7, a8, a9);
}

void OUTLINED_FUNCTION_131(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1CF6CA630((__n128 *)&STACK[0x2C8], a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_132()
{
  return sub_1CF73F594();
}

uint64_t OUTLINED_FUNCTION_135()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_136()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF693FE0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t (*v9)(void);
  uint64_t (*v10)(uint64_t, uint64_t);

  return sub_1CF68EA18(a1, a2, a3, a4, a5, a6, v9, v10, a9);
}

void OUTLINED_FUNCTION_141(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, __int128 a11, char a12)
{
  a10 = 0u;
  a11 = 0u;
  a12 = 4;
  sub_1CF691788(&a9);
}

void OUTLINED_FUNCTION_145(void *a1)
{
  sub_1CF6926B8(a1);
}

void OUTLINED_FUNCTION_147(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1CF6C6F4C(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_149()
{
  uint64_t v0;

  return v0 - 224;
}

BOOL OUTLINED_FUNCTION_154(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

double OUTLINED_FUNCTION_155()
{
  return 0.0;
}

uint64_t OUTLINED_FUNCTION_156(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t), uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;

  return sub_1CF68EA18(a15, a16, a17, v18, v17, 3, a7, a8, a9);
}

id OUTLINED_FUNCTION_157(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v51;
  void *v52;

  *(_WORD *)(v51 + 12) = 2080;
  return v52;
}

uint64_t OUTLINED_FUNCTION_158()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_160()
{
  return sub_1CF73F2A0();
}

void OUTLINED_FUNCTION_161(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,void *a34)
{
  sub_1CF6CAE3C(0x303030303030, 0xE600000000000000, a34);
}

void OUTLINED_FUNCTION_163()
{
  uint64_t (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1CF6CA630((__n128 *)&STACK[0x2C8], v0, v1, v2, v3);
}

void OUTLINED_FUNCTION_164()
{
  uint64_t (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1CF6CA630((__n128 *)&STACK[0x2C8], v0, v1, v2, v3);
}

void OUTLINED_FUNCTION_165()
{
  uint64_t (*v0)(void);
  uint64_t (*v1)(void);
  uint64_t (*v2)(void);
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_1CF6CA630((__n128 *)&STACK[0x2C8], v0, v1, v2, v3);
}

__n128 OUTLINED_FUNCTION_166()
{
  __n128 *v0;

  return v0[4];
}

void OUTLINED_FUNCTION_170()
{
  void *v0;

}

__n128 OUTLINED_FUNCTION_171()
{
  __n128 *v0;

  return v0[5];
}

uint64_t OUTLINED_FUNCTION_174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t (*a7)(void), uint64_t (*a8)(uint64_t, uint64_t), uint64_t (*a9)(uint64_t, uint64_t))
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  return sub_1CF68EA18(v13, v9, v10, v11, v12, a6, a7, a8, a9);
}

void OUTLINED_FUNCTION_175()
{
  OS_dispatch_queue.assertOnQueueHierarchy()();
}

uint64_t OUTLINED_FUNCTION_176()
{
  return swift_release();
}

id OUTLINED_FUNCTION_177()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_178()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_179(id a1)
{

}

void OUTLINED_FUNCTION_180()
{
  sub_1CF6CAC0C();
}

void OUTLINED_FUNCTION_181()
{
  sub_1CF6CAC0C();
}

void OUTLINED_FUNCTION_182()
{
  sub_1CF6CAC0C();
}

uint64_t OUTLINED_FUNCTION_183(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  return sub_1CF6CA6DC((uint64_t)&a52);
}

uint64_t OUTLINED_FUNCTION_184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  return sub_1CF6CA6DC((uint64_t)&a52);
}

uint64_t OUTLINED_FUNCTION_187()
{
  uint64_t v0;

  return sub_1CF6CA6DC(v0 - 224);
}

void *OUTLINED_FUNCTION_188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  uint64_t v45;

  return sub_1CF6C8C64((const void *)(v45 - 224), &a45);
}

void *OUTLINED_FUNCTION_189(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a64;
  uint64_t v64;

  return sub_1CF6C8C64((const void *)(v64 - 224), &a64);
}

uint64_t OUTLINED_FUNCTION_190()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_191()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6934BC(v1, v0);
}

BOOL OUTLINED_FUNCTION_193()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

uint64_t OUTLINED_FUNCTION_196()
{
  uint64_t v0;

  return v0 + 32;
}

void *OUTLINED_FUNCTION_197(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,char a45)
{
  return sub_1CF6C8C64(&a45, &STACK[0x240]);
}

uint64_t OUTLINED_FUNCTION_198()
{
  return sub_1CF73EE44();
}

uint64_t OUTLINED_FUNCTION_201()
{
  return sub_1CF6B5B0C();
}

uint64_t OUTLINED_FUNCTION_202()
{
  return sub_1CF73F774();
}

void OUTLINED_FUNCTION_203()
{
  sub_1CF6B94F8();
}

void *OUTLINED_FUNCTION_204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
  return sub_1CF6C8C64(&a38, &a21);
}

uint64_t OUTLINED_FUNCTION_205()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_206()
{
  uint64_t v0;

  return v0;
}

double OUTLINED_FUNCTION_210()
{
  uint64_t v0;
  double result;

  result = 0.0;
  *(_OWORD *)(v0 + 8) = 0u;
  *(_OWORD *)(v0 + 24) = 0u;
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_212()
{
  return sub_1CF73EE44();
}

id OUTLINED_FUNCTION_213()
{
  void *v0;
  unint64_t v1;

  return sub_1CF6CA5A4(v0, v1);
}

uint64_t OUTLINED_FUNCTION_214()
{
  return 0x6E6E75742D70725FLL;
}

uint64_t OUTLINED_FUNCTION_215()
{
  return sub_1CF73EE44();
}

uint64_t OUTLINED_FUNCTION_218()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_219()
{
  return sub_1CF73EE44();
}

uint64_t OUTLINED_FUNCTION_220()
{
  return sub_1CF73EE44();
}

uint64_t OUTLINED_FUNCTION_222()
{
  return sub_1CF73EE44();
}

id OUTLINED_FUNCTION_223()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_224(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  sub_1CF68F110(a1, a2, &a33);
}

void OUTLINED_FUNCTION_225(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  sub_1CF68F110(a1, a2, &a38);
}

char *OUTLINED_FUNCTION_226(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1CF6C6E60(0, 1, 1, a4);
}

void OUTLINED_FUNCTION_227(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_list va;

  va_start(va, a11);
  sub_1CF68F110(a1, a2, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_228(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_230()
{
  return sub_1CF73F504();
}

void OUTLINED_FUNCTION_231()
{
  void *v0;

}

uint64_t OUTLINED_FUNCTION_232()
{
  return swift_retain();
}

id OUTLINED_FUNCTION_233()
{
  void *v0;

  return sub_1CF68DA60(v0);
}

uint64_t OUTLINED_FUNCTION_237()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_240()
{
  return sub_1CF73EF10();
}

id OUTLINED_FUNCTION_241()
{
  id *v0;

  return *v0;
}

void OUTLINED_FUNCTION_242()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = v2;
  v5 = v1 + 16 * v4;
  *(_QWORD *)(v5 + 32) = v3;
  *(_QWORD *)(v5 + 40) = v0;
}

uint64_t OUTLINED_FUNCTION_243()
{
  return sub_1CF73F2A0();
}

void OUTLINED_FUNCTION_244()
{
  uint64_t v0;

  *(_WORD *)(v0 + 12) = 2080;
}

uint64_t OUTLINED_FUNCTION_245()
{
  return sub_1CF6CA7A8((uint64_t)&STACK[0x240]);
}

void OUTLINED_FUNCTION_247(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,char a62)
{
  a44 = a1;
  sub_1CF68E274((uint64_t)&a44, (uint64_t)&a62);
}

uint64_t OUTLINED_FUNCTION_248()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_249()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v2 + 16) = v1;
  v5 = v2 + 16 * v3;
  *(_QWORD *)(v5 + 32) = v0;
  *(_QWORD *)(v5 + 40) = v4;
}

uint64_t OUTLINED_FUNCTION_250@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_256(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  sub_1CF68E274((uint64_t)&a51, (uint64_t)&a69);
}

uint64_t OUTLINED_FUNCTION_257()
{
  return sub_1CF73F750();
}

uint64_t OUTLINED_FUNCTION_258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __n128 a10@<Q0>)
{
  unint64_t v10;

  return sub_1CF694020(a1, a2, a3, a4, a5, a6, a7, a8, a10.n128_i64[0], a10.n128_i64[1], a9, v10);
}

uint64_t OUTLINED_FUNCTION_259()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_260()
{
  return swift_release();
}

double OUTLINED_FUNCTION_261()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double result;

  *(_BYTE *)v2 = v0;
  *(_QWORD *)(v2 + 8) = v1;
  *(_QWORD *)(v2 + 16) = v3;
  result = 0.0;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  return result;
}

uint64_t OUTLINED_FUNCTION_262()
{
  return sub_1CF73EF10();
}

void OUTLINED_FUNCTION_263(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 208) = a1;
}

void OUTLINED_FUNCTION_264(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1CF6C3DF8(a1, a2, a3, a4, a5, a6, 0, 0, a9, a10, a11);
}

uint64_t OUTLINED_FUNCTION_266()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_269()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_270()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_272(uint64_t a1@<X8>)
{
  sub_1CF6918B8(a1);
}

uint64_t OUTLINED_FUNCTION_273()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t OUTLINED_FUNCTION_274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,__int128 a40)
{
  uint64_t v40;

  *(_QWORD *)(a1 + 16) = v40;
  return sub_1CF68C850(&a40, a1 + 24);
}

uint64_t OUTLINED_FUNCTION_275()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_277()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_278(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_281(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  return sub_1CF68E2F4((uint64_t)&a69);
}

uint64_t OUTLINED_FUNCTION_282(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  return sub_1CF6CA7A8((uint64_t)&a69);
}

uint64_t OUTLINED_FUNCTION_283(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&a69);
}

void *OUTLINED_FUNCTION_284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  return sub_1CF6C8C64(&a69, &a51);
}

void OUTLINED_FUNCTION_285(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;
  uint64_t v69;

  sub_1CF68CE44(v69, (uint64_t)&a69);
}

void OUTLINED_FUNCTION_288(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x20u);
}

BOOL OUTLINED_FUNCTION_289(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_290()
{
  return swift_release();
}

void *OUTLINED_FUNCTION_291(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  return sub_1CF6C8C64(&a26, &a9);
}

void OUTLINED_FUNCTION_292(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  sub_1CF6918B8((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_293()
{
  uint64_t v0;

  return v0 - 224;
}

id OUTLINED_FUNCTION_294()
{
  void *v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_295()
{
  uint64_t v0;

  return sub_1CF693EC8(v0);
}

uint64_t OUTLINED_FUNCTION_296()
{
  return swift_bridgeObjectRetain();
}

id OUTLINED_FUNCTION_303(uint64_t a1, const char *a2)
{
  uint64_t v2;
  void *v3;

  return objc_msgSend(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_307()
{
  return sub_1CF720324();
}

uint64_t OUTLINED_FUNCTION_308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

void OUTLINED_FUNCTION_310(uint64_t a1, uint64_t a2, SEL *a3)
{
  void *v3;

  sub_1CF6CAD80(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_311(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12)
{
  return ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&a12)._countAndFlagsBits;
}

uint64_t OUTLINED_FUNCTION_315()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t OUTLINED_FUNCTION_316(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a64;

  return sub_1CF6CA7A8((uint64_t)&a64);
}

uint64_t OUTLINED_FUNCTION_317()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_318(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_319()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_320()
{
  return sub_1CF73EF10();
}

uint64_t OUTLINED_FUNCTION_321()
{
  return sub_1CF73F2A0();
}

id OUTLINED_FUNCTION_324()
{
  void *v0;

  return sub_1CF6C9F20(v0);
}

void OUTLINED_FUNCTION_325()
{
  void *v0;

  sub_1CF6C9F10(v0);
}

char *OUTLINED_FUNCTION_327(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  return &a51;
}

uint64_t OUTLINED_FUNCTION_328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  char a69;

  return sub_1CF6B5658((uint64_t)&a69);
}

uint64_t OUTLINED_FUNCTION_331(uint64_t a1, ...)
{
  uint64_t (*v1)(char *, uint64_t);
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return v1(va, v2);
}

_QWORD *OUTLINED_FUNCTION_332(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_0Tm(a1, v1);
}

uint64_t OUTLINED_FUNCTION_334()
{
  return sub_1CF73F7F8();
}

void OUTLINED_FUNCTION_335(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  sub_1CF6EEBC4(&a9);
}

uint64_t OUTLINED_FUNCTION_336()
{
  return MGCopyAnswer();
}

unint64_t OUTLINED_FUNCTION_338()
{
  return 0xD000000000000012;
}

uint64_t OUTLINED_FUNCTION_342(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  return ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&a15)._countAndFlagsBits;
}

void OUTLINED_FUNCTION_344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51)
{
  sub_1CF68CE44((uint64_t)&a51, (uint64_t)&a40);
}

void *OUTLINED_FUNCTION_345(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,char a57)
{
  return sub_1CF6CAAD0(&a57, &a38);
}

uint64_t OUTLINED_FUNCTION_348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  uint64_t (*v6)(char *);
  va_list va;

  va_start(va, a6);
  return v6(va);
}

uint64_t OUTLINED_FUNCTION_351()
{
  return sub_1CF73F87C();
}

uint64_t OUTLINED_FUNCTION_352()
{
  return sub_1CF73F2A0();
}

void OUTLINED_FUNCTION_358(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  sub_1CF68F110(a1, a2, &a28);
}

void OUTLINED_FUNCTION_361()
{
  void *v0;

}

void OUTLINED_FUNCTION_362(uint64_t a1@<X8>)
{
  sub_1CF6918B8(a1);
}

uint64_t OUTLINED_FUNCTION_363()
{
  return sub_1CF6B5B0C();
}

void *OUTLINED_FUNCTION_364(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF6B940C(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_365()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_368()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_369()
{
  return sub_1CF73EF10();
}

id OUTLINED_FUNCTION_370(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

uint64_t OUTLINED_FUNCTION_371()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_372()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_374()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_375()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF693FE0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_376()
{
  return sub_1CF73F744();
}

void OUTLINED_FUNCTION_378(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1CF6C6F4C(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_379()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_380()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_381()
{
  return MGCopyAnswer();
}

void OUTLINED_FUNCTION_382(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t a64;

  sub_1CF68F110(a1, a2, &a64);
}

void OUTLINED_FUNCTION_383(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_list va;

  va_start(va, a9);
  sub_1CF68F110(a1, a2, (uint64_t *)va);
}

uint64_t sub_1CF6CC068(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t sub_1CF6CC094()
{
  uint64_t result;

  sub_1CF6AA174(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA1F10 = result;
  return result;
}

uint64_t generatePairingKeyPair()()
{
  uint64_t v0;
  _QWORD v2[2];

  v2[0] = static Data.randomBytes(ofLength:)();
  v2[1] = v0;
  static Data.randomBytes(ofLength:)();
  sub_1CF6CD970((uint64_t)v2);
  return v2[0];
}

uint64_t InProcessIRKGenerator.generateIRK(completion:)(void (*a1)(uint64_t, unint64_t, _QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v2 = static Data.randomBytes(ofLength:)();
  OUTLINED_FUNCTION_3_8(v2, v3, v4, v5, v6, v7, v8, v9, v11, v12, v13, v15);
  a1(v14, v16, 0);
  return sub_1CF6933C0(v14, v16);
}

uint64_t InProcessIRKGenerator.generateIRKSync()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v0 = static Data.randomBytes(ofLength:)();
  OUTLINED_FUNCTION_3_8(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10, v11, v13);
  return v12;
}

uint64_t sub_1CF6CC1E8(void (*a1)(uint64_t, unint64_t, _QWORD))
{
  return InProcessIRKGenerator.generateIRK(completion:)(a1);
}

uint64_t OPACKEncoderCreateData(from:)(_QWORD *a1)
{
  void *v1;
  id NSDataTm;
  uint64_t v3;
  uint64_t v4;
  id v5;
  int v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v7 = 0;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  v1 = (void *)sub_1CF73F684();
  NSDataTm = OPACKEncoderCreateNSDataTm(v1, (uint64_t)&v7, MEMORY[0x1E0D1B4D0]);
  swift_unknownObjectRelease();
  if (NSDataTm)
  {
    v3 = sub_1CF73E5A4();

  }
  else
  {
    sub_1CF73EED4();
    v3 = v4;
    v5 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
    OUTLINED_FUNCTION_0_12();
    OUTLINED_FUNCTION_7_4();
  }
  return v3;
}

void RapportIRKGenerator.init(queue:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;

  sub_1CF6AA174(0, (unint64_t *)&qword_1ED8F7A30);
  v4 = sub_1CF73ED84();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_13();
  sub_1CF73ED6C();
  v5 = sub_1CF73F150();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_34();
  sub_1CF6CE26C(&qword_1ED8F7D00, v6, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7CF0);
  sub_1CF6CE2AC((unint64_t *)&qword_1ED8F7CF8, &qword_1ED8F7CF0);
  sub_1CF73F2F4();
  v7 = sub_1CF73F174();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_34();
  (*(void (**)(uint64_t, _QWORD))(v10 + 104))(v9 - v8, *MEMORY[0x1E0DEF8D0]);
  v11 = sub_1CF73F18C();
  if (MEMORY[0x1E0D838F0])
  {
    v12 = (void *)v11;
    v13 = objc_allocWithZone(MEMORY[0x1E0D838F0]);
    v14 = v12;
    v15 = a1;
    v16 = objc_msgSend(v13, sel_init);
    objc_msgSend(v16, sel_setDispatchQueue_, v14);

    *a2 = v16;
    a2[1] = v15;
    a2[2] = v14;
    OUTLINED_FUNCTION_17();
  }
  else
  {
    sub_1CF73F450();
    __break(1u);
  }
}

void RapportIRKGenerator.generateIRK(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  void *v14;
  _QWORD *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  _QWORD aBlock[6];

  v6 = sub_1CF73ED54();
  v19 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_34();
  v9 = v8 - v7;
  v10 = sub_1CF73ED84();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_13();
  v13 = *(void **)v2;
  v12 = *(void **)(v2 + 8);
  v14 = *(void **)(v2 + 16);
  v15 = (_QWORD *)swift_allocObject();
  v15[2] = v13;
  v15[3] = v12;
  v15[4] = v14;
  v15[5] = a1;
  v15[6] = a2;
  aBlock[4] = sub_1CF6CE244;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CC068;
  aBlock[3] = &block_descriptor_2;
  v16 = _Block_copy(aBlock);
  v17 = v13;
  v18 = v12;
  v14;
  swift_retain();
  sub_1CF73ED6C();
  sub_1CF6CE26C((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6CE2AC((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v3, v9, v16);
  _Block_release(v16);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v9, v6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v3, v10);
  swift_release();
  OUTLINED_FUNCTION_17();
}

uint64_t sub_1CF6CC714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1CF6CC74C(a4, a5);
}

uint64_t sub_1CF6CC74C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  _QWORD *v25;
  id v26;
  _QWORD aBlock[5];
  _QWORD *v28;

  v5 = sub_1CF73EDF0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (_QWORD **)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(void **)v2;
  v9 = *(void **)(v2 + 8);
  v11 = *(void **)(v2 + 16);
  *v8 = v11;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DEF740], v5);
  v12 = v11;
  LOBYTE(v11) = sub_1CF73EE08();
  result = (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
  if ((v11 & 1) != 0)
  {
    v14 = swift_allocObject();
    *(_BYTE *)(v14 + 16) = 0;
    v15 = swift_allocObject();
    *(_BYTE *)(v15 + 16) = 0;
    v16 = swift_allocObject();
    *(_DWORD *)(v16 + 16) = -1;
    v17 = (_QWORD *)swift_allocObject();
    v17[2] = v16;
    v17[3] = v10;
    v17[4] = v9;
    v17[5] = v12;
    v17[6] = a1;
    v17[7] = a2;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v14;
    v18[3] = v15;
    v18[4] = v10;
    v18[5] = v9;
    v18[6] = v12;
    v18[7] = sub_1CF6CE510;
    v18[8] = v17;
    aBlock[4] = sub_1CF6CE588;
    v28 = v18;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CF717C2C;
    aBlock[3] = &block_descriptor_16;
    v19 = _Block_copy(aBlock);
    v25 = v28;
    v20 = v10;
    v21 = v9;
    v22 = v12;
    v26 = v20;
    v23 = v21;
    v24 = v22;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    swift_beginAccess();
    notify_register_dispatch("com.apple.rapport.identitiesChanged", (int *)(v16 + 16), v24, v19);
    swift_endAccess();
    _Block_release(v19);
    sub_1CF6CCC30(v26, v23, v24, (uint64_t)sub_1CF6CE510, (uint64_t)v17, v15, v14);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CF6CC9F8(void *a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int v20;
  uint64_t v21;
  char v22;
  void *v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD aBlock[6];

  v28 = a6;
  v14 = sub_1CF73ED54();
  v27 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1CF73ED84();
  v17 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v20 = *(_DWORD *)(a4 + 16);
  if (v20 != -1)
    notify_cancel(v20);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = a8;
  *(_QWORD *)(v21 + 24) = a9;
  *(_QWORD *)(v21 + 32) = a1;
  *(_QWORD *)(v21 + 40) = a2;
  v22 = a3 & 1;
  *(_BYTE *)(v21 + 48) = a3 & 1;
  aBlock[4] = sub_1CF6CE880;
  aBlock[5] = v21;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CC068;
  aBlock[3] = &block_descriptor_28;
  v23 = _Block_copy(aBlock);
  swift_retain();
  sub_1CF6CE8AC(a1, a2, v22);
  sub_1CF73ED6C();
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1CF6CE26C((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6CE2AC((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v19, v16, v23);
  _Block_release(v23);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v14);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v26);
  return swift_release();
}

void sub_1CF6CCC30(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  char v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD aBlock[6];

  v26 = a4;
  v13 = sub_1CF73EDF0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v16 = a3;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DEF740], v13);
  v17 = a3;
  v18 = sub_1CF73EE08();
  (*(void (**)(_QWORD *, uint64_t))(v14 + 8))(v16, v13);
  if ((v18 & 1) == 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  sub_1CF73F0E4();
  if (qword_1EFBA0900 != -1)
LABEL_5:
    swift_once();
  sub_1CF73E694();
  v19 = (_QWORD *)swift_allocObject();
  v19[2] = a1;
  v19[3] = a2;
  v20 = v26;
  v19[4] = v17;
  v19[5] = v20;
  v19[6] = a5;
  v19[7] = a6;
  v19[8] = a7;
  aBlock[4] = sub_1CF6CE5E0;
  aBlock[5] = v19;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CD52C;
  aBlock[3] = &block_descriptor_22;
  v21 = _Block_copy(aBlock);
  v22 = a1;
  v23 = a2;
  v24 = v17;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_getIdentitiesWithFlags_completion_, 1, v21);
  _Block_release(v21);
}

void sub_1CF6CCE30(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void), uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  os_log_type_t v18;
  NSObject *v19;
  os_log_type_t v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  id v34;
  void *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  _BYTE *v40;
  id v41;
  os_log_type_t v42;
  NSObject *v43;
  os_log_type_t v44;
  id v45;
  id v46;
  uint8_t *v47;
  uint64_t v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  void *v52;
  id v53;
  os_log_type_t v54;
  NSObject *v55;
  os_log_type_t v56;
  uint8_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  unint64_t v69[3];
  uint64_t v70[4];

  v64 = a4;
  v65 = a7;
  v63 = a3;
  v14 = sub_1CF73EDF0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (uint64_t *)((char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *v17 = a5;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v15 + 104))(v17, *MEMORY[0x1E0DEF740], v14);
  v62 = a5;
  v18 = sub_1CF73EE08();
  (*(void (**)(_QWORD *, uint64_t))(v15 + 8))(v17, v14);
  if ((v18 & 1) != 0)
  {
    v18 = sub_1CF73F0E4();
    if (qword_1EFBA0900 == -1)
      goto LABEL_3;
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  v19 = qword_1EFBA1F10;
  v20 = v18;
  if (os_log_type_enabled((os_log_t)qword_1EFBA1F10, v18))
  {
    v21 = a2;
    swift_bridgeObjectRetain();
    v22 = a2;
    swift_bridgeObjectRetain();
    v23 = swift_slowAlloc();
    v24 = swift_slowAlloc();
    v70[0] = v24;
    *(_DWORD *)v23 = 136315394;
    v69[0] = (unint64_t)a2;
    v25 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EA0);
    v61 = a8;
    v26 = sub_1CF73EF10();
    sub_1CF68F110(v26, v27, v70);
    v69[0] = v28;
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();

    *(_WORD *)(v23 + 12) = 2080;
    v69[0] = a1;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1F28);
    v29 = sub_1CF73EF10();
    sub_1CF68F110(v29, v30, v70);
    v69[0] = v31;
    a8 = v61;
    sub_1CF73F2A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CF67E000, v19, v20, "Received IRK fetch response from Rapport. Error = %s, identities = %s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D17D3ED0](v24, -1, -1);
    MEMORY[0x1D17D3ED0](v23, -1, -1);
  }
  if (!a2)
  {
    if (a1)
    {
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        if (sub_1CF73F45C())
          goto LABEL_10;
      }
      else
      {
        v33 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v33)
        {
LABEL_10:
          sub_1CF713200(0, (a1 & 0xC000000000000001) == 0, a1);
          if ((a1 & 0xC000000000000001) != 0)
            v34 = (id)MEMORY[0x1D17D2F70](0, a1);
          else
            v34 = *(id *)(a1 + 32);
          v35 = v34;
          swift_bridgeObjectRelease();
          v36 = sub_1CF6CE7E4(v35);
          if (v37 >> 60 == 15)
          {
            sub_1CF73F450();
            __break(1u);
          }
          else
          {
            v38 = v36;
            v39 = v37;
            a6();
            sub_1CF693FE0(v38, v39);

          }
          return;
        }
      }
      swift_bridgeObjectRelease();
    }
    sub_1CF6CE610();
    v32 = (void *)swift_allocError();
    *v40 = 1;
    goto LABEL_19;
  }
  v32 = a2;
LABEL_19:
  v41 = a2;
  swift_willThrow();
  swift_beginAccess();
  if (*(_BYTE *)(a8 + 16) == 1)
  {
    v42 = sub_1CF73F0E4();
    v43 = qword_1EFBA1F10;
    v44 = v42;
    if (os_log_type_enabled((os_log_t)qword_1EFBA1F10, v42))
    {
      v45 = v32;
      v46 = v32;
      v47 = (uint8_t *)swift_slowAlloc();
      v48 = swift_slowAlloc();
      v69[0] = v48;
      *(_DWORD *)v47 = 136315138;
      v68 = v32;
      v49 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
      v50 = sub_1CF73EF10();
      sub_1CF68F110(v50, v51, (uint64_t *)v69);
      v68 = v52;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CF67E000, v43, v44, "Second attempt to fetch IRK from Rapport failed. Propagating error to client: %s", v47, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v48, -1, -1);
      MEMORY[0x1D17D3ED0](v47, -1, -1);
    }
    v53 = v32;
    ((void (*)(void *, _QWORD, uint64_t))a6)(v32, 0, 1);

  }
  else
  {
    swift_beginAccess();
    *(_BYTE *)(a8 + 16) = 1;
    swift_beginAccess();
    if (*(_BYTE *)(a9 + 16) == 1)
    {
      v54 = sub_1CF73F0E4();
      v55 = qword_1EFBA1F10;
      v56 = v54;
      if (os_log_type_enabled((os_log_t)qword_1EFBA1F10, v54))
      {
        v57 = (uint8_t *)swift_slowAlloc();
        v58 = swift_slowAlloc();
        v67 = v58;
        *(_DWORD *)v57 = 136446210;
        sub_1CF68F110(0xD000000000000023, 0x80000001CF752A60, &v67);
        v66 = v59;
        sub_1CF73F2A0();
        _os_log_impl(&dword_1CF67E000, v55, v56, "Attempting to fetch IRK from Rapport again due to %{public}s notification", v57, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v58, -1, -1);
        MEMORY[0x1D17D3ED0](v57, -1, -1);
      }
      sub_1CF6CCC30(v63, v64, v62, a6, v65, a8, a9);
    }
  }

}

uint64_t sub_1CF6CD52C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1CF6AA174(0, &qword_1EFBA1F18);
    v4 = sub_1CF73F048();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1CF6CD5B8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8)
{
  os_log_type_t v12;
  _BYTE *v13;
  NSObject *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  os_log_type_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v26[7];
  uint64_t v27[3];

  v12 = sub_1CF73F0E4();
  if (qword_1EFBA0900 != -1)
    swift_once();
  v13 = (_BYTE *)(a2 + 16);
  v14 = qword_1EFBA1F10;
  if (os_log_type_enabled((os_log_t)qword_1EFBA1F10, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v27[0] = v16;
    *(_DWORD *)v15 = 136446210;
    sub_1CF68F110(0xD000000000000023, 0x80000001CF752A60, v27);
    v26[4] = v17;
    sub_1CF73F2A0();
    _os_log_impl(&dword_1CF67E000, v14, v12, "Received %{public}s darwin notification", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D17D3ED0](v16, -1, -1);
    MEMORY[0x1D17D3ED0](v15, -1, -1);
  }
  swift_beginAccess();
  if ((*v13 & 1) == 0)
  {
    swift_beginAccess();
    *v13 = 1;
    swift_beginAccess();
    if (*(_BYTE *)(a3 + 16) == 1)
    {
      v18 = sub_1CF73F0E4();
      v19 = qword_1EFBA1F10;
      v20 = v18;
      if (os_log_type_enabled((os_log_t)qword_1EFBA1F10, v18))
      {
        v21 = (uint8_t *)swift_slowAlloc();
        v22 = swift_slowAlloc();
        v26[0] = v22;
        *(_DWORD *)v21 = 136446210;
        sub_1CF68F110(0xD000000000000023, 0x80000001CF752A60, v26);
        sub_1CF73F2A0();
        _os_log_impl(&dword_1CF67E000, v19, v20, "Attempting to fetch IRK from Rapport again due to %{public}s notification", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v22, -1, -1);
        MEMORY[0x1D17D3ED0](v21, -1, -1);
      }
      sub_1CF6CCC30(a4, a5, a6, a7, a8, a3, a2);
    }
  }
}

id sub_1CF6CD8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)sub_1CF73EEB0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_1CF73EE14();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

void sub_1CF6CD970(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_1CF6CD9CC(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  LOWORD(v4) = a1;
  BYTE2(v4) = BYTE2(a1);
  HIBYTE(v4) = BYTE3(a1);
  v5 = BYTE4(a1);
  v6 = BYTE5(a1);
  v7 = BYTE6(a1);
  sub_1CF6CDC0C(v2);
  *v1 = v3;
  v1[1] = v4 | ((unint64_t)v5 << 32) | ((unint64_t)v6 << 40) | ((unint64_t)v7 << 48);
}

void sub_1CF6CDC0C(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1CF6CDC6C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v6 = v3;
  LOWORD(v7) = a1;
  BYTE2(v7) = BYTE2(a1);
  HIBYTE(v7) = BYTE3(a1);
  v8 = BYTE4(a1);
  v9 = BYTE5(a1);
  v10 = BYTE6(a1);
  result = sub_1CF6CE778((uint64_t)&v6, BYTE6(a1), v2);
  v5 = v7 | ((unint64_t)v8 << 32) | ((unint64_t)v9 << 40) | ((unint64_t)v10 << 48);
  *v1 = v6;
  v1[1] = v5;
  return result;
}

void sub_1CF6CDEB0(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1CF6CDF08@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;
  unsigned int v4;
  unsigned __int8 v5;
  unsigned __int8 v6;
  unsigned __int8 v7;

  LOWORD(v4) = a1;
  BYTE2(v4) = BYTE2(a1);
  HIBYTE(v4) = BYTE3(a1);
  v5 = BYTE4(a1);
  v6 = BYTE5(a1);
  v7 = BYTE6(a1);
  result = CryptoHKDF();
  *v1 = v2;
  v1[1] = v4 | ((unint64_t)v5 << 32) | ((unint64_t)v6 << 40) | ((unint64_t)v7 << 48);
  return result;
}

uint64_t sub_1CF6CE210()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_6_5();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6CE244()
{
  uint64_t *v0;

  return sub_1CF6CC714(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t sub_1CF6CE26C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1D17D3DEC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CF6CE2AC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEAF38], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of IRKGenerator.generateIRK(completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for InProcessIRKGenerator()
{
  return &type metadata for InProcessIRKGenerator;
}

_QWORD *initializeBufferWithCopyOfBuffer for RapportIRKGenerator(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v4;
  v8 = v5;
  return a1;
}

void destroy for RapportIRKGenerator(id *a1)
{

}

uint64_t assignWithCopy for RapportIRKGenerator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  return a1;
}

uint64_t assignWithTake for RapportIRKGenerator(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for RapportIRKGenerator(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RapportIRKGenerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RapportIRKGenerator()
{
  return &type metadata for RapportIRKGenerator;
}

uint64_t sub_1CF6CE4BC()
{
  return OUTLINED_FUNCTION_2_1();
}

uint64_t sub_1CF6CE4C8()
{
  return OUTLINED_FUNCTION_2_1();
}

uint64_t sub_1CF6CE4D4()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_6_5();

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6CE510(void *a1, unint64_t a2, char a3)
{
  uint64_t *v3;

  return sub_1CF6CC9F8(a1, a2, a3 & 1, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_1CF6CE540()
{
  uint64_t v0;

  swift_release();
  swift_release();
  OUTLINED_FUNCTION_6_5();

  swift_release();
  return swift_deallocObject();
}

void sub_1CF6CE588(uint64_t a1)
{
  uint64_t v1;

  sub_1CF6CD5B8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
}

uint64_t sub_1CF6CE59C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_6_5();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1CF6CE5E0(unint64_t a1, void *a2)
{
  uint64_t v2;

  sub_1CF6CCE30(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32), *(void (**)(void))(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64));
}

unint64_t sub_1CF6CE610()
{
  unint64_t result;

  result = qword_1EFBA1F20;
  if (!qword_1EFBA1F20)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for IdentityError, &type metadata for IdentityError);
    atomic_store(result, (unint64_t *)&qword_1EFBA1F20);
  }
  return result;
}

void sub_1CF6CE64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (sub_1CF73E430())
  {
    if (__OFSUB__(a1, sub_1CF73E454()))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      sub_1CF73E448();
      sub_1CF6CDC0C(a4);
      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_1CF6CE6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  result = sub_1CF73E430();
  if (!result)
    goto LABEL_8;
  result = sub_1CF73E454();
  if (__OFSUB__(a1, result))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1CF73E448();
  result = ccsha512_di();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  result = ccrng();
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (a4)
    return cced25519_make_key_pair();
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1CF6CE778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  result = ccsha512_di();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  result = ccrng();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a3)
    return cced25519_make_key_pair();
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1CF6CE7E4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_deviceIRKData);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1CF73E5A4();

  return v3;
}

uint64_t sub_1CF6CE844()
{
  uint64_t v0;

  swift_release();
  sub_1CF6CE874(*(id *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

void sub_1CF6CE874(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)

  else
    sub_1CF6933C0((uint64_t)a1, a2);
}

uint64_t sub_1CF6CE880()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(unsigned __int8 *)(v0 + 48));
}

id sub_1CF6CE8AC(id a1, unint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return a1;
  else
    return (id)sub_1CF6934BC((uint64_t)a1, a2);
}

uint64_t sub_1CF6CE8D4()
{
  uint64_t result;

  sub_1CF6AA174(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA1F30 = result;
  return result;
}

uint64_t static VirtualInterface.minSupportedMTU.getter()
{
  return 1280;
}

uint64_t static VirtualInterface.maxSupportedMTU.getter()
{
  return 16000;
}

void static VirtualInterface.maxSupportedPendingPackets.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;

  if (qword_1EFBA0800 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_13_3(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = sub_1CF695A1C();
  OUTLINED_FUNCTION_53_0(v8, v9, v10, v11);
  OUTLINED_FUNCTION_24();
}

void static VirtualInterface.defaultMTU.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  char v18;

  if (qword_1EFBA0808 != -1)
    swift_once();
  v0 = OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_13_3(v0, v1, v2, v3, v4, v5, v6, v7, v12, v13, v14, v15, v16, v17, v18);
  v8 = sub_1CF695A1C();
  OUTLINED_FUNCTION_53_0(v8, v9, v10, v11);
  OUTLINED_FUNCTION_24();
}

uint64_t VirtualInterface.interfaceName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t VirtualInterface.address.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CF6ABBB4(v1 + 32, a1);
}

uint64_t VirtualInterface.__allocating_init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(void *a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  VirtualInterface.init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(a1, a2, a3, a4 & 0x1FFFF, a5 | ((HIDWORD(a5) & 1) << 32), a6, a7);
  return v14;
}

uint64_t VirtualInterface.init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  void *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  const char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  void *v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  void *v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  void *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  int v218;
  char v219;

  v9 = v8;
  v10 = v7;
  v218 = a4;
  v209 = a3;
  v15 = *v7;
  v7[20] = 0;
  v7[11] = 0;
  v7[12] = 0;
  if (qword_1EFBA0810 != -1)
    swift_once();
  swift_beginAccess();
  v16 = qword_1EFBA1088;
  v17 = unk_1EFBA1090;
  v18 = byte_1EFBA1098;
  swift_bridgeObjectRetain();
  sub_1CF68DC58(v16, v17, v18);
  v20 = v19;
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
    sub_1CF6CF4D8();
    v21 = (void *)v10[20];
    v10[20] = v22;

  }
  v23 = sub_1CF6CFBD0();
  if (!v23)
  {
    OUTLINED_FUNCTION_40_0();
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_3_0();
    v55 = OUTLINED_FUNCTION_0_13();
    OUTLINED_FUNCTION_9_3(v55, v56, v57, v58, v59, v60, v61, v62, v160, v166, v172, v178, v184, v190, v196, v199, a6, v206, v209,
      v212,
      v213,
      v214,
      v215);
    OUTLINED_FUNCTION_3_9();
    OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_28_0();

    goto LABEL_18;
  }
  v161 = v9;
  v167 = a5;
  v207 = (void *)v23;
  result = NEVirtualInterfaceCopyName();
  if (result)
  {
    v25 = (void *)result;
    v26 = sub_1CF73EED4();
    v28 = v27;

    v219 = 0;
    swift_bridgeObjectRetain();
    sub_1CF73F348();
    swift_bridgeObjectRelease();
    v214 = 0xD000000000000029;
    v215 = 0x80000001CF752B40;
    sub_1CF73EF58();
    sub_1CF73EF1C();
    swift_bridgeObjectRelease();
    v29 = os_transaction_create();
    swift_release();
    if (v29)
    {
      v179 = v26;
      v185 = v28;
      v197 = v15;
      v200 = a2;
      v191 = a1;
      v173 = v29;
      if (a7)
      {
        sub_1CF73F0E4();
        if (qword_1EFBA0908 != -1)
          swift_once();
        if (OUTLINED_FUNCTION_34_3())
        {
          swift_bridgeObjectRetain_n();
          OUTLINED_FUNCTION_22_3();
          v214 = OUTLINED_FUNCTION_24_4();
          v30 = OUTLINED_FUNCTION_11_5(4.8751e-34);
          OUTLINED_FUNCTION_19_3(v30, v31, v32, v33, v34, v35, v36, v37, v161, v167, v29, v26, v28);
          OUTLINED_FUNCTION_5_7(v38);
          OUTLINED_FUNCTION_31_0();
          OUTLINED_FUNCTION_33_4(&dword_1CF67E000, v39, v40, "Physical interface name is:%{public}s");
          OUTLINED_FUNCTION_41_4();
          OUTLINED_FUNCTION_0_1();
        }
        v41 = (void *)OUTLINED_FUNCTION_66_1();
        v42 = NEVirtualInterfaceSetDelegateInterface();

        if (v42)
        {
          sub_1CF73F0E4();
          if (OUTLINED_FUNCTION_34_3())
          {
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_22_3();
            v214 = OUTLINED_FUNCTION_24_4();
            v43 = OUTLINED_FUNCTION_11_5(4.8149e-34);
            OUTLINED_FUNCTION_19_3(v43, v44, v45, v46, v47, v48, v49, v50, v161, v167, v173, v26, v28);
            OUTLINED_FUNCTION_5_7(v51);
            OUTLINED_FUNCTION_31_0();
            v54 = "Assigned %s as the delegate interface on virtual interface successfully";
            goto LABEL_25;
          }
        }
        else
        {
          sub_1CF73F0D8();
          if (OUTLINED_FUNCTION_34_3())
          {
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_22_3();
            v214 = OUTLINED_FUNCTION_24_4();
            v80 = OUTLINED_FUNCTION_11_5(4.8149e-34);
            OUTLINED_FUNCTION_19_3(v80, v81, v82, v83, v84, v85, v86, v87, v161, v167, v173, v26, v28);
            OUTLINED_FUNCTION_5_7(v88);
            OUTLINED_FUNCTION_31_0();
            v54 = "Failed to set %s as the delegate interface on virtual interface";
LABEL_25:
            OUTLINED_FUNCTION_33_4(&dword_1CF67E000, v52, v53, v54);
            OUTLINED_FUNCTION_41_4();
            OUTLINED_FUNCTION_0_1();
          }
        }
        OUTLINED_FUNCTION_40_0();
      }
      else
      {
        sub_1CF73F0E4();
        if (qword_1EFBA0908 != -1)
          swift_once();
        sub_1CF73E694();
      }
      sub_1CF6ABBB4(a2, (uint64_t)&v214);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1F38);
      OUTLINED_FUNCTION_64_3();
      sub_1CF6ABBB4(v209, (uint64_t)&v214);
      OUTLINED_FUNCTION_64_3();
      v89 = (void *)sub_1CF73EEB0();
      v90 = (void *)OUTLINED_FUNCTION_66_1();
      v91 = NEVirtualInterfaceAddAddress();

      if (v91)
      {
        OUTLINED_FUNCTION_40_0();
        swift_bridgeObjectRelease();
        if (NEVirtualInterfaceSetRankNever())
        {
          v92 = a2;
          v93 = v209;
          if (NEVirtualInterfaceUpdateAdHocService())
          {
            if ((v218 & 0x10000) != 0)
              static VirtualInterface.defaultMTU.getter();
            if (NEVirtualInterfaceSetMTU()
              && ((v167 & 0x100000000) != 0 || NEVirtualInterfaceSetMaxPendingPackets()))
            {
              v10[2] = v179;
              v10[3] = v28;
              sub_1CF6ABBB4(v200, (uint64_t)(v10 + 4));
              v10[9] = (uint64_t)v207;
              v10[10] = (uint64_t)v191;
              *(_OWORD *)(v10 + 13) = 0u;
              *(_OWORD *)(v10 + 15) = 0u;
              *(_OWORD *)(v10 + 17) = 0u;
              v10[19] = v173;
              swift_retain();
              v94 = v191;
              OUTLINED_FUNCTION_58_3();
              swift_unknownObjectRetain();
              sub_1CF6CFED4();
              if (v161)
              {
                swift_unknownObjectRelease();
                OUTLINED_FUNCTION_30_2(&v219, v179);
                OUTLINED_FUNCTION_57();
                OUTLINED_FUNCTION_48_2();

                v95 = swift_release();
              }
              else
              {
                OUTLINED_FUNCTION_57();
                OUTLINED_FUNCTION_48_2();

                v95 = swift_unknownObjectRelease();
              }
              OUTLINED_FUNCTION_69_2(v95, v96, v97, v98, v99, v100, v101, v102, v161, v167, v173, v179, v28, (uint64_t)v191, v15, v200, a6, (uint64_t)v207, v209);
              __swift_destroy_boxed_opaque_existential_0Tm(v92);
              return (uint64_t)v10;
            }
            OUTLINED_FUNCTION_57();
            sub_1CF6AA5E0();
            OUTLINED_FUNCTION_58_3();
            OUTLINED_FUNCTION_3_0();
            v144 = OUTLINED_FUNCTION_0_13();
            OUTLINED_FUNCTION_9_3(v144, v145, v146, v147, v148, v149, v150, v151, v161, v167, v173, v179, v28, (uint64_t)v191, v15, v200, a6, (uint64_t)v207, v209,
              v212,
              v213,
              v214,
              v215);
            OUTLINED_FUNCTION_3_9();
            OUTLINED_FUNCTION_1_8();
            OUTLINED_FUNCTION_28_0();
            OUTLINED_FUNCTION_54_4();
            OUTLINED_FUNCTION_30_2(&v219, v183);
            OUTLINED_FUNCTION_57();
            v152 = OUTLINED_FUNCTION_48_2();
            OUTLINED_FUNCTION_74_1(v152, v153, v154, v155, v156, v157, v158, v159, v165, v171, v177, v183, v189, v195);
            v143 = v211;
          }
          else
          {
            OUTLINED_FUNCTION_57();
            sub_1CF6AA5E0();
            OUTLINED_FUNCTION_58_3();
            OUTLINED_FUNCTION_3_0();
            v127 = OUTLINED_FUNCTION_0_13();
            OUTLINED_FUNCTION_9_3(v127, v128, v129, v130, v131, v132, v133, v134, v161, v167, v173, v179, v28, (uint64_t)v191, v15, v200, a6, (uint64_t)v207, v209,
              v212,
              v213,
              v214,
              v215);
            OUTLINED_FUNCTION_3_9();
            OUTLINED_FUNCTION_71_1();
            OUTLINED_FUNCTION_1_8();
            OUTLINED_FUNCTION_28_0();
            OUTLINED_FUNCTION_54_4();
            OUTLINED_FUNCTION_30_2(&v219, v182);
            OUTLINED_FUNCTION_57();
            v135 = OUTLINED_FUNCTION_48_2();
            OUTLINED_FUNCTION_74_1(v135, v136, v137, v138, v139, v140, v141, v142, v164, v170, v176, v182, v188, v194);
            v143 = v93;
          }
          __swift_destroy_boxed_opaque_existential_0Tm(v143);
          v79 = v92;
          goto LABEL_19;
        }
        OUTLINED_FUNCTION_150();
        sub_1CF6AA5E0();
        OUTLINED_FUNCTION_3_0();
        v103 = OUTLINED_FUNCTION_0_13();
        OUTLINED_FUNCTION_9_3(v103, v104, v105, v106, v107, v108, v109, v110, v161, v167, v173, v179, v28, (uint64_t)v191, v15, a2, a6, (uint64_t)v207, v209,
          v212,
          v213,
          v214,
          v215);
        OUTLINED_FUNCTION_3_9();
        OUTLINED_FUNCTION_1_8();
        OUTLINED_FUNCTION_28_0();
        OUTLINED_FUNCTION_54_4();
        sub_1CF6CFD1C(&v219, v179, v28);
        OUTLINED_FUNCTION_150();
      }
      else
      {
        OUTLINED_FUNCTION_150();
        v205 = sub_1CF6AA5E0();
        OUTLINED_FUNCTION_3_0();
        sub_1CF73F774();
        v216 = v214;
        v217 = v215;
        sub_1CF73F348();
        OUTLINED_FUNCTION_55_2();
        sub_1CF73EF58();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_55_2();
        sub_1CF73EF58();
        OUTLINED_FUNCTION_40_0();
        OUTLINED_FUNCTION_39_3(0x6F742027u);
        sub_1CF73EF58();
        sub_1CF6ABB3C();
        OUTLINED_FUNCTION_105();
        sub_1CF73F780();
        OUTLINED_FUNCTION_28_0();
        OUTLINED_FUNCTION_54_4();
        sub_1CF6CFD1C(&v219, v179, v28);
        OUTLINED_FUNCTION_150();
      }
      v111 = swift_release();
      OUTLINED_FUNCTION_74_1(v111, v112, v113, v114, v115, v116, v117, v118, v161, v167, v173, v179, v185, v191);
      OUTLINED_FUNCTION_69_2(v119, v120, v121, v122, v123, v124, v125, v126, v163, v169, v175, v181, v187, v193, v197, v200, v205, (uint64_t)v207, v209);
      __swift_destroy_boxed_opaque_existential_0Tm(v202);
      goto LABEL_40;
    }
    OUTLINED_FUNCTION_57();
    OUTLINED_FUNCTION_40_0();
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_3_0();
    v71 = OUTLINED_FUNCTION_0_13();
    OUTLINED_FUNCTION_9_3(v71, v72, v73, v74, v75, v76, v77, v78, v161, v167, v172, v178, v184, v190, v196, v199, a6, (uint64_t)v207, v209,
      v212,
      v213,
      v214,
      v215);
    OUTLINED_FUNCTION_3_9();
    OUTLINED_FUNCTION_71_1();
    OUTLINED_FUNCTION_1_8();
    OUTLINED_FUNCTION_28_0();
    sub_1CF6CFD1C(&v219, v26, v28);
    OUTLINED_FUNCTION_57();
    swift_release();

LABEL_18:
    OUTLINED_FUNCTION_69_2(v63, v64, v65, v66, v67, v68, v69, v70, v162, v168, v174, v180, v186, v192, v198, v201, v204, v208, v210);
    v79 = a2;
LABEL_19:
    __swift_destroy_boxed_opaque_existential_0Tm(v79);
LABEL_40:
    sub_1CF693EC8(v10[11]);

    swift_deallocPartialClassInstance();
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

void sub_1CF6CF4D8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  id v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  os_log_type_t v38;
  uint64_t v39;
  uint64_t v40;
  NSObject *v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  NSObject *v47;
  uint64_t v48;
  _DWORD *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;

  OUTLINED_FUNCTION_167();
  v59 = v1;
  v60 = v0;
  v2 = sub_1CF73EF04();
  v64 = *(_QWORD *)(v2 - 8);
  v65 = v2;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_14();
  v63 = v4;
  v5 = sub_1CF73F0FC();
  v61 = *(_QWORD *)(v5 - 8);
  v62 = v5;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  v66 = v7;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA2060);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_34();
  v11 = v10 - v9;
  v12 = OUTLINED_FUNCTION_68_2();
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x1E0C80A78](v12);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v54 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v58 = (uint64_t)&v54 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v54 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v54 - v24;
  v26 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v27 = objc_msgSend(v26, sel_URLsForDirectory_inDomains_, 13, 1);

  v28 = sub_1CF73F048();
  sub_1CF6E09B8(v28, v11);
  OUTLINED_FUNCTION_19();
  if (__swift_getEnumTagSinglePayload(v11, 1, v12) == 1)
  {
    sub_1CF693ED8(v11, (uint64_t *)&unk_1EFBA2060);
    sub_1CF73F0CC();
    if (qword_1EFBA0908 != -1)
      swift_once();
    sub_1CF73E694();
LABEL_17:
    OUTLINED_FUNCTION_17();
    return;
  }
  v54 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = v18;
  v56 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 32);
  v56(v25, v11, v12);
  v71 = 0;
  v72 = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1F38);
  sub_1CF73F408();
  sub_1CF73EF58();
  v29 = v13;
  v69 = 58;
  v70 = 0xE100000000000000;
  v67 = 45;
  v68 = 0xE100000000000000;
  sub_1CF6D24C0();
  sub_1CF73F2B8();
  swift_bridgeObjectRelease();
  v57 = v25;
  sub_1CF73E49C();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v61 + 104))(v66, *MEMORY[0x1E0DEF798], v62);
  v71 = sub_1CF73E4A8();
  v72 = v30;
  v31 = v63;
  sub_1CF73EEF8();
  OUTLINED_FUNCTION_40_4();
  v32 = sub_1CF73F2C4();
  (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v31, v65);
  swift_bridgeObjectRelease();
  if (v32)
  {
    sub_1CF6AA174(0, (unint64_t *)&unk_1EFBA2070);
    v33 = v58;
    OUTLINED_FUNCTION_57_2(v58, (uint64_t)v23);
    v65 = v29;
    v34 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v35 = swift_allocObject();
    v56((char *)(v35 + v34), v33, v12);
    v36 = v59;
    v37 = sub_1CF73F120();
    swift_bridgeObjectRelease();
    v38 = sub_1CF73F0CC();
    v39 = (uint64_t)v23;
    if (v37)
    {
      v40 = (uint64_t)v57;
      if (qword_1EFBA0908 != -1)
        swift_once();
      v41 = qword_1EFBA1F30;
      v42 = (uint64_t)v55;
      OUTLINED_FUNCTION_57_2((uint64_t)v55, v39);
      if (os_log_type_enabled(v41, v38))
      {
        v43 = (uint8_t *)OUTLINED_FUNCTION_4_7();
        v71 = OUTLINED_FUNCTION_4_7();
        v66 = v39;
        *(_DWORD *)v43 = 136315138;
        sub_1CF6935F8((unint64_t *)&unk_1EFBA3550, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v44 = sub_1CF73F648();
        OUTLINED_FUNCTION_59(v44, v45);
        OUTLINED_FUNCTION_20_4(v46);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_7_5(v42);
        _os_log_impl(&dword_1CF67E000, v41, v38, "Successfully created packet tracing logger at %s", v43, 0xCu);
        OUTLINED_FUNCTION_42_4();
        OUTLINED_FUNCTION_0_1();
      }
      OUTLINED_FUNCTION_7_5(v42);
      OUTLINED_FUNCTION_7_5(v39);
      OUTLINED_FUNCTION_7_5(v40);
    }
    else
    {
      if (qword_1EFBA0908 != -1)
        swift_once();
      v47 = qword_1EFBA1F30;
      v48 = v54;
      OUTLINED_FUNCTION_57_2(v54, (uint64_t)v23);
      if (os_log_type_enabled(v47, v38))
      {
        v49 = (_DWORD *)OUTLINED_FUNCTION_4_7();
        v71 = OUTLINED_FUNCTION_4_7();
        *v49 = 136315138;
        sub_1CF6935F8((unint64_t *)&unk_1EFBA3550, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v50 = sub_1CF73F648();
        OUTLINED_FUNCTION_59(v50, v51);
        OUTLINED_FUNCTION_20_4(v52);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_7_5(v48);
        OUTLINED_FUNCTION_43_4(&dword_1CF67E000, v47, v53, "Failed to create packet tracing logger at %s");
        OUTLINED_FUNCTION_42_4();
        OUTLINED_FUNCTION_0_1();
      }
      OUTLINED_FUNCTION_7_5(v48);
      OUTLINED_FUNCTION_7_5((uint64_t)v23);
      OUTLINED_FUNCTION_7_5((uint64_t)v57);
    }
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_1CF6CFBD0()
{
  void *v0;
  uint64_t v1;
  uint64_t result;

  sub_1CF73EE44();
  sub_1CF6AEB58();
  sub_1CF6AEB58();
  v0 = (void *)sub_1CF73EE14();
  swift_bridgeObjectRelease();
  v1 = NEVirtualInterfaceCreateWithOptions();

  result = 0;
  if (v1)
  {
    type metadata accessor for _ManagedOpaqueCFTypeWrapper();
    swift_allocObject();
    return _ManagedOpaqueCFTypeWrapper.init(retainedValue:)(v1);
  }
  return result;
}

_BYTE *sub_1CF6CFD1C(_BYTE *result, uint64_t a2, unint64_t a3)
{
  os_log_type_t v5;
  NSObject *v6;
  uint8_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if ((*result & 1) == 0)
  {
    v5 = sub_1CF73F0CC();
    if (qword_1EFBA0908 != -1)
      swift_once();
    v6 = qword_1EFBA1F30;
    if (os_log_type_enabled((os_log_t)qword_1EFBA1F30, v5))
    {
      swift_bridgeObjectRetain_n();
      v7 = (uint8_t *)swift_slowAlloc();
      v8 = swift_slowAlloc();
      v10 = v8;
      *(_DWORD *)v7 = 136446210;
      if (a3)
      {
        v9 = a3;
      }
      else
      {
        a2 = 0x6E776F6E6B6E753CLL;
        v9 = 0xE90000000000003ELL;
      }
      swift_bridgeObjectRetain();
      sub_1CF68F110(a2, v9, &v10);
      sub_1CF73F2A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF67E000, v6, v5, "Cleaning up virtual interface %{public}s due to throwing init", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v8, -1, -1);
      MEMORY[0x1D17D3ED0](v7, -1, -1);
    }
    return (_BYTE *)NEVirtualInterfaceInvalidate();
  }
  return result;
}

void sub_1CF6CFED4()
{
  uint64_t v0;
  void *v1;
  int MultipleIPPacketsHandler;
  _QWORD aBlock[6];

  NEVirtualInterfaceSetReadAutomatically();
  v0 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1CF6D25B4;
  aBlock[5] = v0;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6D1A9C;
  aBlock[3] = &block_descriptor_12;
  v1 = _Block_copy(aBlock);
  swift_release();
  MultipleIPPacketsHandler = NEVirtualInterfaceSetReadMultipleIPPacketsHandler();
  _Block_release(v1);
  if (!MultipleIPPacketsHandler)
  {
    sub_1CF6AA5E0();
    sub_1CF73F774();
    sub_1CF6ABB3C();
    swift_allocError();
    sub_1CF73F780();
    swift_willThrow();
  }
}

void VirtualInterface.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  os_log_type_t v5;
  NSObject *v6;
  _DWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;

  OUTLINED_FUNCTION_167();
  v2 = v0;
  v3 = sub_1CF73F0F0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_99();
  v5 = sub_1CF73F0E4();
  if (qword_1EFBA0908 != -1)
    swift_once();
  v6 = qword_1EFBA1F30;
  if (os_log_type_enabled((os_log_t)qword_1EFBA1F30, v5))
  {
    swift_retain();
    v7 = (_DWORD *)OUTLINED_FUNCTION_4_7();
    v13 = OUTLINED_FUNCTION_4_7();
    *v7 = 136446210;
    v9 = *(_QWORD *)(v2 + 16);
    v8 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain();
    sub_1CF68F110(v9, v8, &v13);
    sub_1CF73F2A0();
    swift_release();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_4(&dword_1CF67E000, v6, v10, "Invalidating virtual interface ref for interface %{public}s");
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
  }
  NEVirtualInterfaceInvalidate();
  if (*(_QWORD *)(v2 + 104))
    OUTLINED_FUNCTION_0_1();
  if (*(_QWORD *)(v2 + 120))
    OUTLINED_FUNCTION_0_1();
  if (*(_QWORD *)(v2 + 136))
    OUTLINED_FUNCTION_0_1();
  v11 = *(void **)(v2 + 160);
  if (v11)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1CF6935F8((unint64_t *)&unk_1EFBA1F40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF780], MEMORY[0x1E0DEF790]);
    v12 = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA35B0);
    sub_1CF6D23E4((unint64_t *)&unk_1EFBA1F50, (uint64_t *)&unk_1EFBA35B0);
    sub_1CF73F2F4();
    sub_1CF73F12C();

    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(v2 + 32);
  swift_release();

  sub_1CF693EC8(*(_QWORD *)(v2 + 88));
  swift_unknownObjectRelease();

  OUTLINED_FUNCTION_17();
}

uint64_t VirtualInterface.__deallocating_deinit()
{
  VirtualInterface.deinit();
  return swift_deallocClassInstance();
}

void VirtualInterface.writePackets(_:completion:)(uint64_t a1, void (*a2)(void *))
{
  _QWORD *v2;
  _QWORD *v3;
  unint64_t v6;
  int v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;

  v3 = v2;
  v6 = *(_QWORD *)(a1 + 16);
  if (v3[14] < (int64_t)v6)
  {
    if (v3[13])
      OUTLINED_FUNCTION_0_1();
    if (v3[15])
      OUTLINED_FUNCTION_0_1();
    if (v3[17])
      OUTLINED_FUNCTION_0_1();
    if (v6 >> 61)
    {
      __break(1u);
    }
    else
    {
      v3[13] = OUTLINED_FUNCTION_4_7();
      v3[14] = v6;
      if (!(v6 >> 60))
      {
        v3[15] = OUTLINED_FUNCTION_4_7();
        v3[16] = v6;
        v3[17] = OUTLINED_FUNCTION_4_7();
        v3[18] = v6;
        goto LABEL_11;
      }
    }
    __break(1u);
    JUMPOUT(0x1CF6D089CLL);
  }
LABEL_11:
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = *(_DWORD *)(a1 + 32);
    if ((v7 & 0x80000000) == 0)
    {
      v8 = *(_QWORD *)(a1 + 120);
      *(_DWORD *)v3[13] = v7;
      __asm { BR              X9 }
    }
    OUTLINED_FUNCTION_3_1();
    sub_1CF73F444();
    __break(1u);
    JUMPOUT(0x1CF6D08E4);
  }
  if (NEVirtualInterfaceWriteMultipleIPPackets())
  {
    v9 = 0;
  }
  else
  {
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_3_0();
    sub_1CF73F774();
    sub_1CF73F348();
    sub_1CF73EF58();
    swift_bridgeObjectRetain();
    sub_1CF73EF58();
    OUTLINED_FUNCTION_19();
    sub_1CF73EF58();
    sub_1CF73F780();
    sub_1CF6ABB3C();
    v9 = (void *)swift_allocError();
    *v10 = 0;
    v10[1] = 0xE000000000000000;
  }
  a2(v9);

}

void sub_1CF6D0924()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  void *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v33;
  _BYTE v34[16];
  id v35;
  uint64_t v36;
  unint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_167();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2048);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_99();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA2050);
  OUTLINED_FUNCTION_3();
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v34[-v9];
  v11 = sub_1CF73E9AC();
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = &v34[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v17 = &v34[-v16];
  v45 = v0;
  v18 = *(void **)(v0 + 160);
  if (v18)
  {
    v19 = v3[9];
    if (v19 >> 60 != 15)
    {
      v40 = v8;
      v41 = v15;
      v38 = v14;
      v20 = v3[4];
      v21 = v3[5];
      v22 = v3[6];
      v43 = v3[7];
      v44 = v19;
      v23 = v3[8];
      v39 = sub_1CF73EA00();
      __swift_storeEnumTagSinglePayload(v1, 1, 1, v39);
      v24 = v18;
      v25 = v20;
      v26 = v44;
      v27 = v24;
      sub_1CF6D233C(v23, v44);
      OUTLINED_FUNCTION_44_3(v25);
      v42 = v22;
      v28 = v22;
      v29 = v43;
      sub_1CF6934BC(v28, v43);
      OUTLINED_FUNCTION_44_3(v25);
      sub_1CF73E9B8();
      if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) == 1)
      {

        sub_1CF6D2368(v23, v26);
        sub_1CF6933C0(v25, v21);
        v30 = v42;
      }
      else
      {
        v35 = v27;
        v36 = v25;
        v37 = v21;
        v31 = v41;
        v32 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v41 + 32);
        v32(v17, v10, v11);
        __swift_storeEnumTagSinglePayload(v1, 1, 1, v39);
        v33 = v42;
        sub_1CF6934BC(v42, v29);
        v10 = v40;
        sub_1CF73E9B8();
        if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11) != 1)
        {
          v32(v38, v10, v11);
          __asm { BR              X10 }
        }
        (*(void (**)(_BYTE *, uint64_t))(v31 + 8))(v17, v11);

        sub_1CF6D2368(v23, v44);
        sub_1CF6933C0(v36, v37);
        v30 = v33;
      }
      sub_1CF6933C0(v30, v29);
      sub_1CF693ED8((uint64_t)v10, (uint64_t *)&unk_1EFBA2050);
    }
  }
  OUTLINED_FUNCTION_17();
}

void VirtualInterface.readPackets(completion:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  _QWORD *v17;
  void *v18;
  id v19;
  uint64_t v20;
  _QWORD v21[6];

  OUTLINED_FUNCTION_167();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v6 = sub_1CF73ED54();
  v20 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_34();
  v10 = v9 - v8;
  v11 = sub_1CF73ED84();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_34();
  v15 = v14 - v13;
  v16 = *(void **)(v0 + 80);
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v1;
  v17[3] = v5;
  v17[4] = v3;
  v21[4] = sub_1CF6D23C0;
  v21[5] = v17;
  v21[0] = MEMORY[0x1E0C809B0];
  v21[1] = 1107296256;
  v21[2] = sub_1CF6CC068;
  v21[3] = &block_descriptor_3;
  v18 = _Block_copy(v21);
  v19 = v16;
  swift_retain();
  swift_retain();
  sub_1CF73ED6C();
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6D23E4((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v15, v10, v18);
  _Block_release(v18);

  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v10, v6);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  swift_release();
  OUTLINED_FUNCTION_17();
}

uint64_t sub_1CF6D1328(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)(a1 + 88))
  {
    v8 = *(_QWORD *)(a1 + 88);
    v9 = *(_QWORD *)(a1 + 96);
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = v9;
    sub_1CF6A3AE0(v8);
    result = sub_1CF693EC8((uint64_t)sub_1CF6D24A0);
    __break(1u);
  }
  else
  {
    sub_1CF6A3AE0(0);
    sub_1CF693EC8(0);
    v6 = *(_QWORD *)(a1 + 88);
    *(_QWORD *)(a1 + 88) = a2;
    *(_QWORD *)(a1 + 96) = a3;
    sub_1CF693EC8(v6);
    swift_retain();
    return NEVirtualInterfaceReadyToReadMultiple();
  }
  return result;
}

void sub_1CF6D13D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t Strong;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  int v23;
  char v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  __int128 v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  char v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  void (**v50)(_QWORD);
  void (*v51)(_QWORD);
  uint64_t v52;
  void (**v53)(_QWORD);
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  _QWORD *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  unint64_t v67;
  uint64_t v68;

  v10 = sub_1CF73EDF0();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (uint64_t *)((char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v15 = Strong;
    v16 = a6;
    v17 = *(_QWORD *)(Strong + 88);
    v53 = (void (**)(_QWORD))(Strong + 88);
    if (v17)
    {
      v55 = a6;
      v18 = *(void **)(Strong + 80);
      *v13 = v18;
      (*(void (**)(_QWORD *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DEF740], v10);
      v19 = v18;
      v16 = sub_1CF73EE08();
      (*(void (**)(_QWORD *, uint64_t))(v11 + 8))(v13, v10);
      if ((v16 & 1) != 0)
      {
        if (a2 && a4)
        {
          v20 = v55;
          if (a5)
          {
            v54 = v15;
            if (a6)
            {
              v21 = 0;
              v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
              do
              {
                v68 = v21;
                sub_1CF6D1854(&v68, a4, a5, (uint64_t)&v60);
                if ((unint64_t)v64 >> 60 != 15)
                {
                  v59 = v64;
                  v23 = (int)v60;
                  v56 = v61;
                  v24 = v62;
                  v25 = v63;
                  v58 = v65;
                  v57 = v66;
                  v26 = v67;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                  {
                    sub_1CF6C6FE4();
                    v22 = v31;
                  }
                  v27 = v22[2];
                  v28 = v22;
                  v29 = v59;
                  if (v27 >= v22[3] >> 1)
                  {
                    sub_1CF6C6FE4();
                    v29 = v59;
                    v28 = v32;
                  }
                  v28[2] = v27 + 1;
                  v22 = v28;
                  v30 = &v28[12 * v27];
                  *((_DWORD *)v30 + 8) = v23;
                  *(_OWORD *)(v30 + 5) = v56;
                  *((_BYTE *)v30 + 56) = v24;
                  v30[8] = v25;
                  *(_OWORD *)(v30 + 9) = v29;
                  *(_OWORD *)(v30 + 11) = v58;
                  *(_OWORD *)(v30 + 13) = v57;
                  v30[15] = v26;
                  v20 = v55;
                }
                ++v21;
              }
              while (v20 != v21);
            }
            else
            {
              v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            }
            v36 = v22[2];
            if (v36)
            {
              swift_bridgeObjectRetain();
              *(_QWORD *)&v58 = v22;
              v37 = v22 + 8;
              do
              {
                *(_QWORD *)&v59 = v36;
                v38 = *((_BYTE *)v37 - 8);
                v39 = *v37;
                v40 = v37[1];
                v41 = v37[2];
                v42 = v37[3];
                v43 = v37[4];
                v44 = v37[5];
                v45 = v37[6];
                v46 = v37[7];
                v47 = *(_OWORD *)(v37 - 3);
                LODWORD(v60) = *((_DWORD *)v37 - 8);
                v61 = v47;
                LOBYTE(v62) = v38;
                v63 = v39;
                *(_QWORD *)&v64 = v40;
                *((_QWORD *)&v64 + 1) = v41;
                *(_QWORD *)&v65 = v42;
                *((_QWORD *)&v65 + 1) = v43;
                *(_QWORD *)&v66 = v44;
                *((_QWORD *)&v66 + 1) = v45;
                v67 = v46;
                sub_1CF6934BC(v39, v40);
                sub_1CF6934BC(v41, v42);
                sub_1CF6D233C(v43, v44);
                sub_1CF6934BC(v45, v46);
                sub_1CF6D0924();
                v48 = v39;
                v49 = v59;
                sub_1CF6933C0(v48, v40);
                sub_1CF6933C0(v41, v42);
                sub_1CF6D2368(v43, v44);
                sub_1CF6933C0(v45, v46);
                v37 += 12;
                v36 = v49 - 1;
              }
              while (v36);
              v22 = (_QWORD *)v58;
              swift_bridgeObjectRelease();
            }
            v50 = v53;
            v51 = *v53;
            if (*v53)
            {
              *v53 = 0;
              v50[1] = 0;
              swift_retain();
              sub_1CF693EC8((uint64_t)v51);
              v60 = v22;
              *(_QWORD *)&v61 = nullsub_1;
              *((_QWORD *)&v61 + 1) = 0;
              v51(&v60);
              sub_1CF693EC8((uint64_t)v51);
              swift_bridgeObjectRelease();
              swift_release();
              return;
            }
LABEL_31:
            __break(1u);
            return;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
        goto LABEL_31;
      }
      __break(1u);
    }
    else
    {
      sub_1CF73F0CC();
      if (qword_1EFBA0908 == -1)
      {
LABEL_18:
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EB0);
        v33 = swift_allocObject();
        v34 = MEMORY[0x1E0DEB418];
        *(_OWORD *)(v33 + 16) = xmmword_1CF742850;
        v35 = MEMORY[0x1E0DEB490];
        *(_QWORD *)(v33 + 56) = v34;
        *(_QWORD *)(v33 + 64) = v35;
        *(_QWORD *)(v33 + 32) = v16;
        sub_1CF73E694();
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
    }
    swift_once();
    goto LABEL_18;
  }
}

void sub_1CF6D1854(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void *v4;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  os_log_type_t v9;
  NSObject *v10;
  os_log_type_t v11;
  id v12;
  id v13;
  uint8_t *v14;
  id v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  __int128 v22;
  unsigned __int8 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _QWORD *v28;

  if (!a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (!*(_QWORD *)(a2 + 8 * *a1))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (!a3)
  {
LABEL_13:
    __break(1u);
    return;
  }
  v6 = MEMORY[0x1D17D21C0]();
  v8 = v7;
  sub_1CF6934BC(v6, v7);
  TunnelPacket.init(data:)(v6, v8, (uint64_t)&v21);
  if (v4)
  {
    v9 = sub_1CF73F0CC();
    if (qword_1EFBA0908 != -1)
      swift_once();
    v10 = qword_1EFBA1F30;
    v11 = v9;
    if (os_log_type_enabled((os_log_t)qword_1EFBA1F30, v9))
    {
      v12 = v4;
      v13 = v4;
      v14 = (uint8_t *)swift_slowAlloc();
      v28 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v14 = 138543362;
      v15 = v4;
      v16 = _swift_stdlib_bridgeErrorToNSError();
      v21 = v16;
      sub_1CF73F2A0();
      v17 = v28;
      *v28 = v16;

      _os_log_impl(&dword_1CF67E000, v10, v11, "Discarding packet data as it is not a valid IPv6 packet: %{public}@", v14, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA3540);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v17, -1, -1);
      MEMORY[0x1D17D3ED0](v14, -1, -1);
    }
    sub_1CF6933C0(v6, v8);

    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_QWORD *)(a4 + 32) = 0;
    *(_QWORD *)(a4 + 40) = 0xF000000000000000;
    *(_OWORD *)(a4 + 48) = 0u;
    *(_OWORD *)(a4 + 64) = 0u;
    *(_OWORD *)(a4 + 80) = 0u;
  }
  else
  {
    sub_1CF6933C0(v6, v8);
    v18 = v23;
    *(_QWORD *)a4 = v21;
    *(_OWORD *)(a4 + 8) = v22;
    *(_QWORD *)(a4 + 24) = v18;
    v19 = v25;
    *(_OWORD *)(a4 + 32) = v24;
    *(_OWORD *)(a4 + 48) = v19;
    v20 = v27;
    *(_OWORD *)(a4 + 64) = v26;
    *(_OWORD *)(a4 + 80) = v20;
  }
}

uint64_t sub_1CF6D1A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v15(a2, a3, a4, a5, a6, a7, a8);
  return swift_release();
}

uint64_t sub_1CF6D1B24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  int v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  os_log_type_t v23;
  NSObject *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  os_log_type_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  _QWORD v44[2];
  int v45;
  int v46;
  os_log_t v47;
  uint64_t v48;
  uint64_t v49;

  v4 = sub_1CF73E4B4();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v44 - v9;
  v11 = sub_1CF73E3C4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](a1);
  v15 = (char *)v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v13);
  v18 = (char *)v44 - v17;
  if (v16)
  {
    v19 = v5;
    v20 = a2;
    v46 = v16;
    v21 = sub_1CF73E6A0();
    if ((v21 & 0x100000000) != 0)
      v22 = 5;
    else
      v22 = v21;
    LODWORD(v49) = v22;
    sub_1CF6ABA2C(MEMORY[0x1E0DEE9D8]);
    sub_1CF6935F8(qword_1EFBA2080, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90], MEMORY[0x1E0CADE88]);
    sub_1CF73E478();
    v23 = sub_1CF73F0CC();
    if (qword_1EFBA0908 != -1)
      swift_once();
    v24 = qword_1EFBA1F30;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v10, v20, v4);
    v25 = v12;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v18, v11);
    v47 = v24;
    if (os_log_type_enabled(v24, v23))
    {
      v26 = swift_slowAlloc();
      v27 = swift_slowAlloc();
      v49 = v27;
      *(_DWORD *)v26 = 136446722;
      v44[0] = v26 + 4;
      sub_1CF6935F8((unint64_t *)&unk_1EFBA3550, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v45 = v23;
      v28 = sub_1CF73F648();
      sub_1CF68F110(v28, v29, &v49);
      v48 = v30;
      v44[1] = &v49;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v4);
      *(_WORD *)(v26 + 12) = 1024;
      LODWORD(v48) = v46;
      sub_1CF73F2A0();
      *(_WORD *)(v26 + 18) = 2080;
      sub_1CF6935F8((unint64_t *)&unk_1EFBA3560, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90], MEMORY[0x1E0CADEA0]);
      v31 = sub_1CF73F720();
      sub_1CF68F110(v31, v32, &v49);
      v48 = v33;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      v34 = *(void (**)(char *, uint64_t))(v25 + 8);
      v34(v15, v11);
      _os_log_impl(&dword_1CF67E000, v47, (os_log_type_t)v45, "%{public}s: IO cleanup error: %d, %s", (uint8_t *)v26, 0x1Cu);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v27, -1, -1);
      MEMORY[0x1D17D3ED0](v26, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v4);
      v34 = *(void (**)(char *, uint64_t))(v12 + 8);
      v34(v15, v11);
    }
    return ((uint64_t (*)(char *, uint64_t))v34)(v18, v11);
  }
  else
  {
    v35 = sub_1CF73F0B4();
    if (qword_1EFBA0908 != -1)
      swift_once();
    v36 = qword_1EFBA1F30;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    v37 = v35;
    if (os_log_type_enabled(v36, v35))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      v39 = swift_slowAlloc();
      v49 = v39;
      *(_DWORD *)v38 = 136446210;
      sub_1CF6935F8((unint64_t *)&unk_1EFBA3550, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v40 = sub_1CF73F648();
      sub_1CF68F110(v40, v41, &v49);
      v48 = v42;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      _os_log_impl(&dword_1CF67E000, v36, v37, "%{public}s: IO cleanup complete", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v39, -1, -1);
      return MEMORY[0x1D17D3ED0](v38, -1, -1);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
}

void VirtualInterface.getInterfaceStatistics()()
{
  void *v0;
  id v1;
  id v2;

  v0 = (void *)NEVirtualInterfaceCopyStatistics();
  if (v0)
  {
    v1 = v0;
    sub_1CF73EE20();

    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_3_0();
    sub_1CF73F774();
    sub_1CF73F348();
    sub_1CF73EF58();
    type metadata accessor for CFDictionary(0);
    v2 = v1;
    OUTLINED_FUNCTION_64_3();
    sub_1CF73EF58();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_39_3(0x726F6620u);
    sub_1CF73EF58();
    swift_bridgeObjectRetain();
    sub_1CF73EF58();
    swift_bridgeObjectRelease();
    sub_1CF6ABB3C();
    OUTLINED_FUNCTION_105();
    sub_1CF73F780();
    swift_willThrow();

  }
  else
  {
    __break(1u);
  }
}

void sub_1CF6D222C()
{
  static VirtualInterface.defaultMTU.getter();
}

uint64_t sub_1CF6D2240()
{
  return 1280;
}

uint64_t sub_1CF6D2248()
{
  return 16000;
}

void sub_1CF6D2250()
{
  static VirtualInterface.maxSupportedPendingPackets.getter();
}

uint64_t sub_1CF6D2264()
{
  return VirtualInterface.interfaceName.getter();
}

uint64_t sub_1CF6D2284@<X0>(uint64_t a1@<X8>)
{
  return VirtualInterface.address.getter(a1);
}

uint64_t sub_1CF6D22A4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, unint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8;
  uint64_t result;

  result = VirtualInterface.__allocating_init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(a1, a2, a3, a4 & 0x1FFFF, a5 | ((HIDWORD(a5) & 1) << 32), a6, a7);
  if (!v8)
    *a8 = result;
  return result;
}

void sub_1CF6D22DC(uint64_t a1, void (*a2)(void *))
{
  VirtualInterface.writePackets(_:completion:)(a1, a2);
}

void sub_1CF6D22FC()
{
  VirtualInterface.readPackets(completion:)();
}

void sub_1CF6D231C()
{
  VirtualInterface.getInterfaceStatistics()();
}

uint64_t sub_1CF6D233C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return (uint64_t)sub_1CF6D2350(a1, a2);
  return a1;
}

id sub_1CF6D2350(uint64_t a1, unint64_t a2)
{
  id result;

  if (a2 >> 61 == 3)
    return (id)(a2 & 0x1FFFFFFFFFFFFFFFLL);
  return result;
}

void sub_1CF6D2368(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    sub_1CF6D237C(a1, a2);
}

void sub_1CF6D237C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61 == 3)

}

uint64_t sub_1CF6D2394()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6D23C0()
{
  uint64_t *v0;

  return sub_1CF6D1328(v0[2], v0[3], v0[4]);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

void sub_1CF6D23E4(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEAF38], v3), a1);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for VirtualInterface()
{
  return objc_opt_self();
}

uint64_t method lookup function for VirtualInterface()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of VirtualInterface.__allocating_init(queue:address:netmask:mtu:maxPendingPackets:physicalInterfaceName:)(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unint64_t a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, unint64_t))(v5 + 160))(a1, a2, a3, a4 & 0x1FFFF, a5 | ((HIDWORD(a5) & 1) << 32));
}

uint64_t sub_1CF6D247C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6D24A0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1CF6D24C0()
{
  unint64_t result;

  result = qword_1ED8F79C0;
  if (!qword_1ED8F79C0)
  {
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED8F79C0);
  }
  return result;
}

uint64_t sub_1CF6D24FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_68_2();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1CF6D2558(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_68_2() - 8) + 80);
  return sub_1CF6D1B24(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t sub_1CF6D2590()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1CF6D25B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  sub_1CF6D13D8(a1, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_5_7(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 128) = a1;
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_17_4()
{
  return sub_1CF73F648();
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  return sub_1CF73EF58();
}

void OUTLINED_FUNCTION_19_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  unint64_t v13;
  uint64_t v14;
  va_list va;

  va_start(va, a13);
  sub_1CF68F110(v14, v13, (uint64_t *)va);
}

uint64_t OUTLINED_FUNCTION_20_4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  return swift_slowAlloc();
}

void OUTLINED_FUNCTION_27_4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 96) = 0;
  *(_QWORD *)(v0 - 88) = 0xE000000000000000;
}

_BYTE *OUTLINED_FUNCTION_30_2(_BYTE *a1, uint64_t a2)
{
  unint64_t v2;

  return sub_1CF6CFD1C(a1, a2, v2);
}

void OUTLINED_FUNCTION_33_4(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;

  _os_log_impl(a1, v4, v5, a4, v6, 0xCu);
}

void OUTLINED_FUNCTION_38_3(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(*(_QWORD *)(a12 + 120) + 8 * v12) = v13;
  *(_QWORD *)(*(_QWORD *)(a12 + 136) + 8 * v12) = a1;
}

uint64_t OUTLINED_FUNCTION_39_3(unsigned int a1)
{
  return a1 | 0x746E692000000000;
}

uint64_t OUTLINED_FUNCTION_40_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_41_4()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_45_4()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_48_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_54_4()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_55_2()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_57_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

void OUTLINED_FUNCTION_60_1()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 88);
  *(_QWORD *)(v0 - 96) = *(_QWORD *)(v0 - 96);
  *(_QWORD *)(v0 - 88) = v1;
}

uint64_t OUTLINED_FUNCTION_61_2()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_62_1()
{
  uint64_t v0;
  unint64_t v1;

  sub_1CF6D2368(v0, v1);
}

uint64_t OUTLINED_FUNCTION_64_3()
{
  return sub_1CF73EF10();
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return sub_1CF73EEB0();
}

uint64_t OUTLINED_FUNCTION_67_2()
{
  unint64_t v0;
  uint64_t v1;

  return sub_1CF6933C0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return sub_1CF73E4B4();
}

uint64_t OUTLINED_FUNCTION_69_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return __swift_destroy_boxed_opaque_existential_0Tm(a19);
}

void OUTLINED_FUNCTION_74_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{

}

uint64_t LockedValueType.__allocating_init(value:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  LockedValueType.init(value:)(a1);
  return v2;
}

uint64_t LockedValueType<A>.testAndSet()()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;

  v1 = *(os_unfair_lock_s **)(v0 + 16);
  os_unfair_lock_lock(v1);
  OUTLINED_FUNCTION_10();
  v2 = *(unsigned __int8 *)(v0 + 24);
  *(_BYTE *)(v0 + 24) = 1;
  os_unfair_lock_unlock(v1);
  return v2;
}

void LockedValueType.read()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 16))(a1, v2);
  sub_1CF6D304C(v1);
  OUTLINED_FUNCTION_5();
}

char *LockedValueType.init(value:)(uint64_t a1)
{
  char *v1;
  uint64_t v3;
  _DWORD *v4;

  v3 = *(_QWORD *)v1;
  v4 = (_DWORD *)swift_slowAlloc();
  *((_QWORD *)v1 + 2) = v4;
  *v4 = 0;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))(&v1[*(_QWORD *)(*(_QWORD *)v1 + 96)], a1);
  return v1;
}

char *LockedValueType.deinit()
{
  char *v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  MEMORY[0x1D17D3ED0](*((_QWORD *)v0 + 2), -1, -1);
  (*(void (**)(char *))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))(&v0[*(_QWORD *)(*(_QWORD *)v0 + 96)]);
  return v0;
}

uint64_t LockedValueType.__deallocating_deinit()
{
  LockedValueType.deinit();
  return swift_deallocClassInstance();
}

void sub_1CF6D2938(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t);
  uint64_t v13;
  _BYTE v14[24];
  uint64_t v15;

  v3 = _s5StateVMa();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_3_10();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v14[-v5];
  v7 = *(os_unfair_lock_s **)(a1 + 16);
  os_unfair_lock_lock(v7);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_20_5();
  v6[*(int *)(v3 + 24)] = 1;
  v8 = *(int *)(v3 + 28);
  v9 = *(_QWORD *)&v6[v8];
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v15 = v1;
    OUTLINED_FUNCTION_6_6();
    v11 = v9 + 40;
    do
    {
      v12 = *(void (**)(uint64_t))(v11 - 8);
      v13 = OUTLINED_FUNCTION_2_4();
      v12(v13);
      OUTLINED_FUNCTION_16_0();
      v11 += 16;
      --v10;
    }
    while (v10);
    OUTLINED_FUNCTION_57();
  }
  OUTLINED_FUNCTION_57();
  *(_QWORD *)&v6[v8] = MEMORY[0x1E0DEE9D8];
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_18_5();
  os_unfair_lock_unlock(v7);
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF6D2A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_t v19;

  v6 = _s5StateVMa();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_3_10();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - v8;
  v19 = *(os_unfair_lock_t *)(a1 + 16);
  os_unfair_lock_lock(v19);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_20_5();
  v10 = OUTLINED_FUNCTION_9();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = *(int *)(v6 + 28);
  v12 = *(_QWORD *)&v9[v11];
  OUTLINED_FUNCTION_2_4();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1CF6C7098();
    v12 = v16;
  }
  v14 = *(_QWORD *)(v12 + 16);
  v13 = *(_QWORD *)(v12 + 24);
  if (v14 >= v13 >> 1)
  {
    OUTLINED_FUNCTION_12_5(v13);
    sub_1CF6C7098();
    v12 = v17;
  }
  *(_QWORD *)(v12 + 16) = v14 + 1;
  v15 = v12 + 16 * v14;
  *(_QWORD *)(v15 + 32) = sub_1CF6CABCC;
  *(_QWORD *)(v15 + 40) = v10;
  *(_QWORD *)&v9[v11] = v12;
  OUTLINED_FUNCTION_11_6();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_18_5();
  os_unfair_lock_unlock(v19);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF6D2BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  os_unfair_lock_s *v3;
  _QWORD *v4;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_8_6(a1);
  OUTLINED_FUNCTION_10();
  v7 = (void *)v4[3];
  v8 = v4[4];
  v9 = v4[5];
  v10 = OUTLINED_FUNCTION_9();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  sub_1CF6AE9F4(v7);
  OUTLINED_FUNCTION_6_6();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_2_4();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1CF6C74A8();
    v8 = v15;
  }
  v12 = *(_QWORD *)(v8 + 16);
  v11 = *(_QWORD *)(v8 + 24);
  if (v12 >= v11 >> 1)
  {
    OUTLINED_FUNCTION_12_5(v11);
    sub_1CF6C74A8();
    v8 = v16;
  }
  *(_QWORD *)(v8 + 16) = v12 + 1;
  v13 = v8 + 16 * v12;
  *(_QWORD *)(v13 + 32) = sub_1CF6D3258;
  *(_QWORD *)(v13 + 40) = v10;
  v14 = (void *)v4[3];
  v4[3] = v7;
  v4[4] = v8;
  v4[5] = v9;
  sub_1CF6D31DC(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v3);
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_2_7();
}

void sub_1CF6D2CC4(_QWORD *a1, void *a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;

  v5 = (os_unfair_lock_s *)a1[2];
  os_unfair_lock_lock(v5);
  OUTLINED_FUNCTION_10();
  v6 = a1[4];
  v7 = a1[5];
  v11 = (id)a1[3];
  v12 = v6;
  v13 = v7;
  sub_1CF6AE9F4(v11);
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_6_6();
  sub_1CF7090BC(&v11);
  v8 = v12;
  v9 = v13;
  if (v2)
  {
    sub_1CF6D31DC(v11);
  }
  else
  {
    v10 = (void *)a1[3];
    a1[3] = v11;
    a1[4] = v8;
    a1[5] = v9;
    sub_1CF6D31DC(v10);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v5);

  OUTLINED_FUNCTION_2_7();
}

void sub_1CF6D2DA0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3;
  os_unfair_lock_s *v4;
  _QWORD *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_8_6(a1);
  OUTLINED_FUNCTION_10();
  v8 = v5[4];
  v9 = v5[5];
  v13 = (id)v5[3];
  v14 = v8;
  v15 = v9;
  sub_1CF6AE9F4(v13);
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_6_6();
  sub_1CF709BA0((uint64_t)&v13, a2);
  v10 = v14;
  v11 = v15;
  if (v3)
  {
    sub_1CF6D31DC(v13);
    OUTLINED_FUNCTION_57();
  }
  else
  {
    v12 = (void *)v5[3];
    v5[3] = v13;
    v5[4] = v10;
    v5[5] = v11;
    sub_1CF6D31DC(v12);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v4);

}

void LockedValueType.write<A>(_:)(void (*a1)(char *)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  os_unfair_lock_t *v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v19 = a3;
  v20 = a2;
  v18 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_15();
  v7 = *(_QWORD *)(v6 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v17 - v13;
  os_unfair_lock_lock(v3[2]);
  v15 = (uint64_t)v3 + *(_QWORD *)&(*v3)[24]._os_unfair_lock_opaque;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_13_7((uint64_t)v14, v15, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  v16 = v21;
  a1(v14);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v7);
  }
  else
  {
    OUTLINED_FUNCTION_13_7((uint64_t)v12, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32));
    OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_13_7(v15, (uint64_t)v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 40));
    OUTLINED_FUNCTION_18_5();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v19, v4, v20);
  }
  os_unfair_lock_unlock(v3[2]);
  OUTLINED_FUNCTION_0_0();
}

void LockedValueType.put(newValue:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_5();
  OUTLINED_FUNCTION_5_8();
  OUTLINED_FUNCTION_10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 24))(v2, a1);
  swift_endAccess();
  sub_1CF6D304C(v1);
  OUTLINED_FUNCTION_5();
}

void sub_1CF6D304C(uint64_t a1)
{
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(a1 + 16));
}

uint64_t LockedValueType<A>.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(_BYTE *, _QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  _BYTE v12[32];

  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  OUTLINED_FUNCTION_15();
  LockedValueType.read()(v3);
  v7 = (void (*)(_BYTE *, _QWORD))sub_1CF73F0A8();
  v9 = v8;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, v9, AssociatedTypeWitness);
  v7(v12, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
}

uint64_t sub_1CF6D313C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for LockedValueType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for LockedValueType);
}

uint64_t method lookup function for LockedValueType()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LockedValueType.__allocating_init(value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_1CF6D31DC(id a1)
{
  if ((char *)a1 - 1 >= (char *)2)

}

uint64_t sub_1CF6D31F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = _s5StateVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CF6D3234()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6D3258(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t OUTLINED_FUNCTION_5_8()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
}

BOOL OUTLINED_FUNCTION_12_5@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_18_5()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_19_4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1CF6D31F0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1CF6AEA08(v0, v1);
}

uint64_t sub_1CF6D32CC()
{
  uint64_t result;

  sub_1CF6CACDC();
  result = sub_1CF73F270();
  qword_1EFBA2108 = result;
  return result;
}

uint64_t RemoteDevice.createTransport(withTargetQueue:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  os_log_t log;
  NSObject *loga;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[2];
  uint64_t v46;

  v2 = v1;
  v4 = sub_1CF73E6AC();
  if (v4)
  {
    v5 = (void *)v4;
    sub_1CF73E85C();
    sub_1CF73E820();
    v6 = swift_dynamicCastClassUnconditional();
    if (xpc_remote_connection_get_remote_service_version() < 2)
    {
      sub_1CF73F0CC();
      if (qword_1EFBA0910 != -1)
        swift_once();
      sub_1CF73E694();
      sub_1CF6AA5E0();
      OUTLINED_FUNCTION_2_8();
      sub_1CF73F774();
      OUTLINED_FUNCTION_4_9();
      v28 = OUTLINED_FUNCTION_3_9();
      OUTLINED_FUNCTION_0_14(v28, v29, v30, v31, v32, v33, v34, v35, (uint64_t)log, v38, v39, v40, v41, v42, v43, v44, v45[0]);
      sub_1CF73F780();
      swift_willThrow();

      return swift_release();
    }
    else
    {
      v7 = type metadata accessor for RemoteXPCControlChannelTransport();
      v8 = swift_allocObject();
      swift_retain();
      swift_retain();
      v9 = sub_1CF6D3800(v6, v2, v8);
      v10 = sub_1CF73F0E4();
      if (qword_1EFBA0910 != -1)
        swift_once();
      v11 = qword_1EFBA2108;
      if (os_log_type_enabled((os_log_t)qword_1EFBA2108, v10))
      {
        swift_retain_n();
        swift_retain();
        v12 = swift_slowAlloc();
        v45[0] = swift_slowAlloc();
        *(_DWORD *)v12 = 136446466;
        swift_beginAccess();
        loga = v11;
        v13 = *(_QWORD *)(v9 + 16);
        v14 = *(_QWORD *)(v9 + 24);
        swift_bridgeObjectRetain();
        sub_1CF68F110(v13, v14, v45);
        v46 = v15;
        sub_1CF73F2A0();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v12 + 12) = 2082;
        v16 = _s7Mercury12RemoteDeviceC0b7PairingC0E18endpointIdentifierSSvg_0();
        sub_1CF68F110(v16, v17, v45);
        v46 = v18;
        sub_1CF73F2A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1CF67E000, loga, v10, "Created control channel transport %{public}s from RSD device %{public}s", (uint8_t *)v12, 0x16u);
        swift_arrayDestroy();
        OUTLINED_FUNCTION_0_1();
      }
      a1[3] = v7;
      a1[4] = (uint64_t)&protocol witness table for RemoteXPCControlChannelTransport;

      result = swift_release();
      *a1 = v9;
    }
  }
  else
  {
    sub_1CF73F0CC();
    if (qword_1EFBA0910 != -1)
      swift_once();
    sub_1CF73E694();
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_2_8();
    sub_1CF73F774();
    OUTLINED_FUNCTION_4_9();
    v20 = OUTLINED_FUNCTION_3_9();
    OUTLINED_FUNCTION_0_14(v20, v21, v22, v23, v24, v25, v26, v27, (uint64_t)log, v38, v39, v40, v41, v42, v43, v44, v45[0]);
    sub_1CF73F780();
    return swift_willThrow();
  }
  return result;
}

BOOL RemoteDevice.isValid.getter()
{
  int v0;

  v0 = sub_1CF73E6D0();
  return v0 == sub_1CF73F21C();
}

uint64_t sub_1CF6D379C@<X0>(uint64_t *a1@<X8>)
{
  return RemoteDevice.createTransport(withTargetQueue:)(a1);
}

BOOL sub_1CF6D37BC()
{
  return RemoteDevice.isValid.getter();
}

uint64_t sub_1CF6D37E0()
{
  return RemoteDevice.endpointIdentifier.getter();
}

uint64_t sub_1CF6D3800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(a3 + 56) = 33619968;
  v4 = MEMORY[0x1E0D4D318];
  *(_QWORD *)(a3 + 32) = a1;
  *(_QWORD *)(a3 + 40) = v4;
  *(_QWORD *)(a3 + 48) = a2;
  v5 = qword_1ED8F6AF8;
  swift_retain();
  swift_retain();
  if (v5 != -1)
    swift_once();
  sub_1CF68C4F8();
  sub_1CF73F648();
  sub_1CF73EF58();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(a3 + 16) = 0x707865746F6D6572;
  *(_QWORD *)(a3 + 24) = 0xEA00000000002D63;
  return a3;
}

uint64_t dispatch thunk of ControlChannelEndpoint.createTransport(withTargetQueue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ControlChannelEndpoint.isValid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlChannelEndpoint.endpointIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1CF6D3928()
{
  uint64_t result;

  sub_1CF6AA174(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA2110 = result;
  return result;
}

void sub_1CF6D39A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;

}

void sub_1CF6D39AC(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 24);
  *(_QWORD *)(v1 + 24) = a1;

}

uint64_t WiFiKeepAlive.__allocating_init(reason:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  WiFiKeepAlive.init(reason:)(a1, a2);
  return v4;
}

_QWORD *WiFiKeepAlive.init(reason:)(uint64_t a1, unint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  id *v6;
  id v7;
  id v8;
  id v9;
  os_log_type_t v10;
  NSObject *v11;
  uint8_t *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  os_log_type_t v17;
  NSObject *v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  id v24[3];

  v3 = v2;
  v24[2] = *(id *)MEMORY[0x1E0C80C00];
  v3[2] = 0;
  v3[3] = 0;
  v6 = (id *)(v3 + 2);
  v3[4] = a1;
  v3[5] = a2;
  swift_bridgeObjectRetain();
  if ((_RPIsDarwinOS() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    sub_1CF6AA5E0();
    sub_1CF73F744();
    sub_1CF6ABB3C();
    swift_allocError();
    sub_1CF73F780();
    swift_willThrow();
  }
  else
  {
    v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D1BA48]), sel_init);
    objc_msgSend(v7, sel_activate);
    v8 = *v6;
    *v6 = v7;
    v9 = v7;

    v10 = sub_1CF73F0E4();
    if (qword_1EFBA0918 != -1)
      swift_once();
    v11 = qword_1EFBA2110;
    if (os_log_type_enabled((os_log_t)qword_1EFBA2110, v10))
    {
      swift_bridgeObjectRetain_n();
      v12 = (uint8_t *)OUTLINED_FUNCTION_4_7();
      v24[0] = (id)OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v12 = 136315138;
      swift_bridgeObjectRetain();
      sub_1CF68F110(a1, a2, (uint64_t *)v24);
      OUTLINED_FUNCTION_6_7();
      sub_1CF73F2A0();
      swift_bridgeObjectRelease_n();
      OUTLINED_FUNCTION_33(&dword_1CF67E000, v11, v10, "Starting background WiFi activity: %s", v12);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0_1();
    }
    sub_1CF6AA174(0, &qword_1EFBA2118);
    v13 = sub_1CF6D3E58(1, a1, a2);
    v24[0] = 0;
    if (objc_msgSend(v9, sel_beginActivity_error_, v13, v24))
    {
      v14 = v24[0];

      v15 = (id)v3[3];
      v3[3] = v13;
      goto LABEL_18;
    }
    v16 = v24[0];
    sub_1CF73E490();

    swift_willThrow();
  }
  v17 = sub_1CF73F0CC();
  if (qword_1EFBA0918 != -1)
    swift_once();
  v18 = qword_1EFBA2110;
  if (os_log_type_enabled((os_log_t)qword_1EFBA2110, v17))
  {
    OUTLINED_FUNCTION_5_0();
    OUTLINED_FUNCTION_5_0();
    v19 = (uint8_t *)OUTLINED_FUNCTION_4_7();
    v24[0] = (id)OUTLINED_FUNCTION_4_7();
    *(_DWORD *)v19 = 136315138;
    OUTLINED_FUNCTION_5_0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
    v20 = sub_1CF73EF10();
    sub_1CF68F110(v20, v21, (uint64_t *)v24);
    OUTLINED_FUNCTION_6_7();
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_234();
    OUTLINED_FUNCTION_234();
    OUTLINED_FUNCTION_33(&dword_1CF67E000, v18, v17, "Unable to start background WiFi activity: %s", v19);
    OUTLINED_FUNCTION_3_11();
    OUTLINED_FUNCTION_0_1();
  }
  if (*v6)
  {
    v22 = *v6;
    objc_msgSend(v22, sel_invalidate);
    OUTLINED_FUNCTION_234();

  }
  else
  {
    OUTLINED_FUNCTION_234();
  }
  v15 = *v6;
  *v6 = 0;
LABEL_18:

  return v3;
}

id sub_1CF6D3E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  id v5;

  if (a3)
  {
    v4 = (void *)sub_1CF73EEB0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = 0;
  }
  v5 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_activityWithType_reason_, a1, v4);

  return v5;
}

void sub_1CF6D3ED8()
{
  uint64_t v0;
  void *v1;
  id v2;
  os_log_type_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = v1;
    v3 = sub_1CF73F0E4();
    if (qword_1EFBA0918 != -1)
      swift_once();
    v4 = qword_1EFBA2110;
    v5 = v3;
    if (os_log_type_enabled((os_log_t)qword_1EFBA2110, v3))
    {
      swift_retain();
      v6 = (uint8_t *)OUTLINED_FUNCTION_4_7();
      v9 = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v6 = 136315138;
      v7 = *(_QWORD *)(v0 + 32);
      v8 = *(_QWORD *)(v0 + 40);
      swift_bridgeObjectRetain();
      sub_1CF68F110(v7, v8, &v9);
      sub_1CF73F2A0();
      swift_release();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_33(&dword_1CF67E000, v4, v5, "Stopping background WiFi activity: %s", v6);
      OUTLINED_FUNCTION_3_11();
      OUTLINED_FUNCTION_0_1();
    }
    objc_msgSend(*(id *)(v0 + 16), sel_endActivity_, v2);
    sub_1CF6D39AC(0);
    objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
    sub_1CF6D39A0(0);

  }
}

uint64_t WiFiKeepAlive.deinit()
{
  uint64_t v0;

  sub_1CF6D3ED8();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WiFiKeepAlive.__deallocating_deinit()
{
  WiFiKeepAlive.deinit();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WiFiKeepAlive()
{
  return objc_opt_self();
}

uint64_t method lookup function for WiFiKeepAlive()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WiFiKeepAlive.__allocating_init(reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of WiFiKeepAlive.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

Swift::Void __swiftcall CUPairingSession.configureFailing()()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v0 = MEMORY[0x1E0C809B0];
  v1 = OUTLINED_FUNCTION_1_9((uint64_t)sub_1CF6D446C, MEMORY[0x1E0C809B0], 1107296256, v4, v7);
  OUTLINED_FUNCTION_146((uint64_t)v1, sel_setFindPeerHandler_);
  OUTLINED_FUNCTION_271();
  v2 = OUTLINED_FUNCTION_1_9((uint64_t)sub_1CF6D45D8, v0, 1107296256, v5, v8);
  OUTLINED_FUNCTION_146((uint64_t)v2, sel_setSavePeerHandler_);
  OUTLINED_FUNCTION_271();
  v3 = OUTLINED_FUNCTION_1_9((uint64_t)sub_1CF6D492C, v0, 1107296256, v6, v9);
  OUTLINED_FUNCTION_146((uint64_t)v3, sel_setCopyIdentityHandler_);
  OUTLINED_FUNCTION_271();
}

uint64_t CUPairingSession.configure(customDataStorageProvider:completion:)(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  const void *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  void (*v30)(uint64_t (*)(void *, char), _QWORD *, uint64_t, uint64_t);
  id v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t aBlock;
  uint64_t aBlocka;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51[2];

  sub_1CF6ABBB4((uint64_t)a1, (uint64_t)v51);
  v8 = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_2_9(v8, v9, v10, v11, v12, v13, v14, v15, v33, aBlock, v39, v41, v45, v49, v50, v51[0]);
  v16 = MEMORY[0x1E0C809B0];
  OUTLINED_FUNCTION_7_6((uint64_t)sub_1CF6D446C, v34, MEMORY[0x1E0C809B0], 1107296256, v42, v46);
  v17 = OUTLINED_FUNCTION_4_10();
  OUTLINED_FUNCTION_5_9(v17, sel_setFindPeerHandler_);
  _Block_release(v4);
  sub_1CF6ABBB4((uint64_t)a1, (uint64_t)v51);
  v18 = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_2_9(v18, v19, v20, v21, v22, v23, v24, v25, v35, aBlocka, v40, v43, v47, (uint64_t)sub_1CF6D49C4, (uint64_t)v4, v51[0]);
  OUTLINED_FUNCTION_7_6((uint64_t)sub_1CF6D45D8, v36, v16, 1107296256, v44, v48);
  v26 = OUTLINED_FUNCTION_4_10();
  OUTLINED_FUNCTION_5_9(v26, sel_setSavePeerHandler_);
  _Block_release(v4);
  v27 = a1[3];
  v28 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v27);
  v29 = (_QWORD *)OUTLINED_FUNCTION_16();
  v29[2] = v3;
  v29[3] = a2;
  v29[4] = a3;
  v30 = *(void (**)(uint64_t (*)(void *, char), _QWORD *, uint64_t, uint64_t))(v28 + 8);
  v31 = v3;
  swift_retain();
  v30(sub_1CF6D4A00, v29, v27, v28);
  return swift_release();
}

uint64_t sub_1CF6D436C(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t (*v6)(void);
  id v7;
  uint64_t v8;
  uint64_t result;

  if (a1)
  {
    v5 = a4[4];
    __swift_project_boxed_opaque_existential_0Tm(a4, a4[3]);
    v6 = *(uint64_t (**)(void))(v5 + 16);
    v7 = a1;
    v8 = v6();

    return v8;
  }
  else
  {
    result = sub_1CF73F450();
    __break(1u);
  }
  return result;
}

id sub_1CF6D446C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  id v8;
  void *v9;

  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v8 = a2;
  v9 = (void *)v7(a2, a3, a4);
  swift_release();

  return v9;
}

uint64_t sub_1CF6D44DC(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  void (*v6)(void);
  id v7;
  uint64_t result;

  if (a1)
  {
    v5 = a4[4];
    __swift_project_boxed_opaque_existential_0Tm(a4, a4[3]);
    v6 = *(void (**)(void))(v5 + 24);
    v7 = a1;
    v6();

    return 1;
  }
  else
  {
    result = sub_1CF73F450();
    __break(1u);
  }
  return result;
}

uint64_t sub_1CF6D45D8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v7)(void *, uint64_t, uint64_t);
  id v8;

  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v8 = a2;
  LOBYTE(a4) = v7(a2, a3, a4);
  swift_release();

  return a4 & 1;
}

uint64_t sub_1CF6D4648(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t aBlock;
  uint64_t v29;
  void *v30;
  void *v31;
  void *v32;
  uint64_t v33;

  v23 = a4;
  v9 = sub_1CF73ED54();
  v26 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF73ED84();
  v24 = *(_QWORD *)(v12 - 8);
  v25 = v12;
  MEMORY[0x1E0C80A78]();
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a1;
  *(_BYTE *)(v15 + 24) = a2 & 1;
  v32 = sub_1CF6D4AB0;
  v33 = v15;
  v16 = MEMORY[0x1E0C809B0];
  aBlock = MEMORY[0x1E0C809B0];
  v29 = 1107296256;
  v30 = sub_1CF6D492C;
  v31 = &block_descriptor_24;
  v17 = _Block_copy(&aBlock);
  sub_1CF6A72F0(a1);
  swift_release();
  objc_msgSend(a3, sel_setCopyIdentityHandler_, v17);
  _Block_release(v17);
  v18 = objc_msgSend(a3, sel_dispatchQueue);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v23;
  *(_QWORD *)(v19 + 24) = a5;
  v32 = sub_1CF6D24A0;
  v33 = v19;
  aBlock = v16;
  v29 = 1107296256;
  v30 = sub_1CF6CC068;
  v31 = &block_descriptor_30;
  v20 = _Block_copy(&aBlock);
  swift_retain();
  sub_1CF73ED6C();
  v27 = MEMORY[0x1E0DEE9D8];
  sub_1CF6AA11C();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6A72FC();
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v14, v11, v20);
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v25);
  return swift_release();
}

id sub_1CF6D48C4(int a1, _QWORD *a2, id a3, char a4)
{
  id v4;
  id v5;
  id v7;
  void *v8;
  id v9;

  v4 = a3;
  if ((a4 & 1) != 0)
  {
    if (a2)
    {
      v7 = a3;
      v8 = (void *)sub_1CF73E484();
      v9 = v8;
      *a2 = v8;
      sub_1CF6A7260(v4);
    }
    return 0;
  }
  else
  {
    v5 = a3;
  }
  return v4;
}

id sub_1CF6D492C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v5)(uint64_t, uint64_t);
  void *v6;

  v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v6 = (void *)v5(a2, a3);
  swift_release();
  return v6;
}

uint64_t sub_1CF6D4980()
{
  return 0;
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_1CF6D49A0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CF6D49C4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CF6D436C(a1, a2, a3, (_QWORD *)(v3 + 16));
}

uint64_t sub_1CF6D49CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CF6D44DC(a1, a2, a3, (_QWORD *)(v3 + 16));
}

uint64_t sub_1CF6D49D4()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6D4A00(void *a1, char a2)
{
  uint64_t v2;

  return sub_1CF6D4648(a1, a2 & 1, *(void **)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
}

uint64_t dispatch thunk of PairingDataStorageProvider.copyOrCreateSelfIdentity(completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.fetchPeer(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.save(peer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.resolve(authTag:for:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 32))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.generateAuthTag(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.generateAuthTagCreatingSelfIdentityIfRequired(for:completionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of PairingDataStorageProvider.numPairedPeers()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_1CF6D4A88()
{
  uint64_t v0;

  sub_1CF6A7260(*(id *)(v0 + 16));
  return swift_deallocObject();
}

id sub_1CF6D4AB0(int a1, _QWORD *a2)
{
  uint64_t v2;

  return sub_1CF6D48C4(a1, a2, *(id *)(v2 + 16), *(_BYTE *)(v2 + 24));
}

uint64_t sub_1CF6D4ABC()
{
  swift_release();
  return swift_deallocObject();
}

id OUTLINED_FUNCTION_5_9(uint64_t a1, const char *a2)
{
  void *v2;
  uint64_t v3;

  return objc_msgSend(v2, a2, v3);
}

void (*sub_1CF6D4B20(_QWORD *a1, uint64_t a2, uint64_t a3))(_QWORD *a1)
{
  _QWORD *v6;

  v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1CF6D83DC(v6, a2, a3);
  return sub_1CF6D4B8C;
}

void sub_1CF6D4B8C(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_43_5(v1);
}

void static AuxiliaryMetadataItem.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1CF6D4BF8@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  if (a1 >> 61)
    v2 = 0;
  else
    v2 = *(_BYTE *)(v1 + 16) ^ *(_BYTE *)(a1 + 16) ^ 1;
  return v2 & 1;
}

uint64_t sub_1CF6D4D94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v11;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      v9 = 1;
    }
    else
    {
      v3 = (uint64_t *)(a1 + 32);
      v4 = (uint64_t *)(a2 + 32);
      v5 = v2 - 1;
      do
      {
        v7 = *v3++;
        v6 = v7;
        v8 = *v4++;
        v13 = v8;
        v14 = v6;
        v9 = static AuxiliaryMetadataItem.== infix(_:_:)(&v14, &v13);
        v11 = v5-- != 0;
      }
      while ((v9 & 1) != 0 && v11);
    }
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

uint64_t sub_1CF6D4E20(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  if (result == a2)
    return 1;
  v3 = result;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v4 = 0;
  v5 = result + 64;
  v6 = 1 << *(_BYTE *)(result + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(result + 64);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      v4 = v12 + 1;
      if (v12 + 1 >= v9)
        return 1;
      v13 = *(_QWORD *)(v5 + 8 * v4);
      if (!v13)
      {
        v4 = v12 + 2;
        if (v12 + 2 >= v9)
          return 1;
        v13 = *(_QWORD *)(v5 + 8 * v4);
        if (!v13)
        {
          v4 = v12 + 3;
          if (v12 + 3 >= v9)
            return 1;
          v13 = *(_QWORD *)(v5 + 8 * v4);
          if (!v13)
            break;
        }
      }
    }
LABEL_23:
    v8 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    v20 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v11);
    swift_retain();
    swift_bridgeObjectRetain();
    v15 = sub_1CF6B0D94();
    v17 = v16;
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    v19 = *(_QWORD *)(*(_QWORD *)(a2 + 56) + 8 * v15);
    v18 = static AuxiliaryMetadataItem.== infix(_:_:)(&v19, &v20);
    result = swift_release();
    if ((v18 & 1) == 0)
      return 0;
  }
  v14 = v12 + 4;
  if (v14 >= v9)
    return 1;
  v13 = *(_QWORD *)(v5 + 8 * v14);
  if (v13)
  {
    v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    v4 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v4 >= v9)
      return 1;
    v13 = *(_QWORD *)(v5 + 8 * v4);
    ++v14;
    if (v13)
      goto LABEL_23;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1CF6D5004(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  char v12;

  v2 = a1 == 0x6E61656C6F6F62 && a2 == 0xE700000000000000;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 7630441 && a2 == 0xE300000000000000;
    if (v6 || (sub_1CF73F690() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x74616F6C66 && a2 == 0xE500000000000000;
      if (v7 || (sub_1CF73F690() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x676E69727473 && a2 == 0xE600000000000000;
        if (v8 || (sub_1CF73F690() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 1635017060 && a2 == 0xE400000000000000;
          if (v9 || (sub_1CF73F690() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x7961727261 && a2 == 0xE500000000000000;
            if (v10 || (sub_1CF73F690() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else if (a1 == 0x616E6F6974636964 && a2 == 0xEA00000000007972)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v12 = sub_1CF73F690();
              swift_bridgeObjectRelease();
              if ((v12 & 1) != 0)
                return 6;
              else
                return 7;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1CF6D52A4()
{
  return 7;
}

uint64_t sub_1CF6D52AC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CF6D52E0 + 4 * byte_1CF743FA7[a1]))(0x6E61656C6F6F62, 0xE700000000000000);
}

uint64_t sub_1CF6D52E0()
{
  return 7630441;
}

uint64_t sub_1CF6D52F0()
{
  return 0x74616F6C66;
}

uint64_t sub_1CF6D5304()
{
  return 0x676E69727473;
}

uint64_t sub_1CF6D5318()
{
  return 1635017060;
}

uint64_t sub_1CF6D5328()
{
  return 0x7961727261;
}

uint64_t sub_1CF6D533C()
{
  return 0x616E6F6974636964;
}

uint64_t sub_1CF6D5358()
{
  return 12383;
}

uint64_t sub_1CF6D5364(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1CF73F690();
    OUTLINED_FUNCTION_3_7();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1CF6D53CC()
{
  sub_1CF73F7EC();
  OUTLINED_FUNCTION_103();
  sub_1CF73F810();
  OUTLINED_FUNCTION_24();
}

void sub_1CF6D53FC()
{
  sub_1CF6D53CC();
}

uint64_t sub_1CF6D5418()
{
  sub_1CF6D5D34();
  return sub_1CF73F864();
}

uint64_t sub_1CF6D5440()
{
  sub_1CF6D5D34();
  return sub_1CF73F870();
}

uint64_t sub_1CF6D5468()
{
  sub_1CF6D5E9C();
  return sub_1CF73F864();
}

uint64_t sub_1CF6D5490()
{
  sub_1CF6D5E9C();
  return sub_1CF73F870();
}

uint64_t sub_1CF6D54B8()
{
  unsigned __int8 *v0;

  return sub_1CF6D52AC(*v0);
}

uint64_t sub_1CF6D54C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6D5004(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF6D54E4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6D52A4();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6D5508()
{
  sub_1CF6D5C80();
  return sub_1CF73F864();
}

uint64_t sub_1CF6D5530()
{
  sub_1CF6D5C80();
  return sub_1CF73F870();
}

uint64_t sub_1CF6D5558()
{
  sub_1CF6D5D70();
  return sub_1CF73F864();
}

uint64_t sub_1CF6D5580()
{
  sub_1CF6D5D70();
  return sub_1CF73F870();
}

uint64_t sub_1CF6D55A8()
{
  sub_1CF6D5CBC();
  return sub_1CF73F864();
}

uint64_t sub_1CF6D55D0()
{
  sub_1CF6D5CBC();
  return sub_1CF73F870();
}

uint64_t sub_1CF6D55F8()
{
  sub_1CF6D5E24();
  return sub_1CF73F864();
}

uint64_t sub_1CF6D5620()
{
  sub_1CF6D5E24();
  return sub_1CF73F870();
}

uint64_t sub_1CF6D5648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6D5364(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CF6D5670()
{
  sub_1CF6D5E60();
  return sub_1CF73F864();
}

uint64_t sub_1CF6D5698()
{
  sub_1CF6D5E60();
  return sub_1CF73F870();
}

void sub_1CF6D56C0()
{
  sub_1CF73F7EC();
  OUTLINED_FUNCTION_103();
  sub_1CF73F810();
  OUTLINED_FUNCTION_24();
}

uint64_t sub_1CF6D56EC()
{
  sub_1CF6D5DE8();
  return sub_1CF73F864();
}

uint64_t sub_1CF6D5714()
{
  sub_1CF6D5DE8();
  return sub_1CF73F870();
}

void AuxiliaryMetadataItem.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2230);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_41_5(v5, v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2238);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_42_5(v7, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2240);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2248);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2250);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2258);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_15();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2260);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_99();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2268);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_12();
  v14 = *v2;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6D5C80();
  sub_1CF73F858();
  __asm { BR              X10 }
}

void sub_1CF6D5934()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 104) = 0;
  sub_1CF6D5E9C();
  OUTLINED_FUNCTION_33_5();
  sub_1CF73F5D0();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v1);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 136) + 8))(v3, v2);
  OUTLINED_FUNCTION_15_6();
}

unint64_t sub_1CF6D5C80()
{
  unint64_t result;

  result = qword_1ED8F7DC0;
  if (!qword_1ED8F7DC0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744B40, &type metadata for AuxiliaryMetadataItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DC0);
  }
  return result;
}

unint64_t sub_1CF6D5CBC()
{
  unint64_t result;

  result = qword_1EFBA2270;
  if (!qword_1EFBA2270)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744AF0, &type metadata for AuxiliaryMetadataItem.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2270);
  }
  return result;
}

unint64_t sub_1CF6D5CF8()
{
  unint64_t result;

  result = qword_1EFBA2280;
  if (!qword_1EFBA2280)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for AuxiliaryMetadataItem, &type metadata for AuxiliaryMetadataItem);
    atomic_store(result, (unint64_t *)&qword_1EFBA2280);
  }
  return result;
}

unint64_t sub_1CF6D5D34()
{
  unint64_t result;

  result = qword_1EFBA2288;
  if (!qword_1EFBA2288)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744AA0, &type metadata for AuxiliaryMetadataItem.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2288);
  }
  return result;
}

unint64_t sub_1CF6D5D70()
{
  unint64_t result;

  result = qword_1EFBA22A0;
  if (!qword_1EFBA22A0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744A50, &type metadata for AuxiliaryMetadataItem.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA22A0);
  }
  return result;
}

unint64_t sub_1CF6D5DAC()
{
  unint64_t result;

  result = qword_1ED8F6A18;
  if (!qword_1ED8F6A18)
  {
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED8F6A18);
  }
  return result;
}

unint64_t sub_1CF6D5DE8()
{
  unint64_t result;

  result = qword_1EFBA22A8;
  if (!qword_1EFBA22A8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744A00, &type metadata for AuxiliaryMetadataItem.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA22A8);
  }
  return result;
}

unint64_t sub_1CF6D5E24()
{
  unint64_t result;

  result = qword_1EFBA22B0;
  if (!qword_1EFBA22B0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7449B0, &type metadata for AuxiliaryMetadataItem.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA22B0);
  }
  return result;
}

unint64_t sub_1CF6D5E60()
{
  unint64_t result;

  result = qword_1EFBA22B8;
  if (!qword_1EFBA22B8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744960, &type metadata for AuxiliaryMetadataItem.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA22B8);
  }
  return result;
}

unint64_t sub_1CF6D5E9C()
{
  unint64_t result;

  result = qword_1ED8F7E28;
  if (!qword_1ED8F7E28)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744910, &type metadata for AuxiliaryMetadataItem.BooleanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E28);
  }
  return result;
}

void AuxiliaryMetadataItem.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7ED8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_41_5(v4, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EB8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EB0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EC8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EC0);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EA8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_42_5(v10, v26);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7ED0);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_34();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EA0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  OUTLINED_FUNCTION_12();
  v27 = a1;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6D5C80();
  sub_1CF73F840();
  if (v28)
  {
    v14 = (uint64_t)a1;
  }
  else
  {
    v29 = v12;
    v15 = sub_1CF73F564();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = *(unsigned __int8 *)(v15 + 32);
      sub_1CF6A6F50(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
      v19 = v18;
      v21 = v20;
      swift_bridgeObjectRelease();
      if (v19 == v21 >> 1)
        __asm { BR              X9 }
    }
    v14 = (uint64_t)v27;
    v22 = sub_1CF73F384();
    swift_allocError();
    v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1470);
    *v24 = &type metadata for AuxiliaryMetadataItem;
    sub_1CF73F4B0();
    sub_1CF73F378();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v24, *MEMORY[0x1E0DEC450], v22);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v29);
  }
  __swift_destroy_boxed_opaque_existential_0Tm(v14);
  OUTLINED_FUNCTION_15_6();
}

void sub_1CF6D62C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_BYTE *)(v3 - 94) = 1;
  sub_1CF6D5E60();
  v4 = *(_QWORD *)(v3 - 184);
  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_31_3();
  if (!v0)
  {
    v5 = v4;
    v6 = OUTLINED_FUNCTION_16();
    v7 = sub_1CF73F540();
    if (v1)
    {
      OUTLINED_FUNCTION_30_3(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 264) + 8));
      OUTLINED_FUNCTION_9_4();
      OUTLINED_FUNCTION_8_7();
      swift_deallocUninitializedObject();
    }
    else
    {
      v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 264) + 8);
      *(_QWORD *)(v3 - 128) = v7;
      OUTLINED_FUNCTION_30_3(v5, v8);
      OUTLINED_FUNCTION_9_4();
      OUTLINED_FUNCTION_8_7();
      *(_QWORD *)(v6 + 16) = *(_QWORD *)(v3 - 128);
      *v2 = v6 | 0x2000000000000000;
    }
    JUMPOUT(0x1CF6D62ACLL);
  }
  OUTLINED_FUNCTION_9_4();
  JUMPOUT(0x1CF6D62A8);
}

void sub_1CF6D638C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v4 - 136) = v1;
  *(_BYTE *)(v4 - 92) = 3;
  sub_1CF6D5DE8();
  v5 = *(_QWORD *)(v4 - 168);
  OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_31_3();
  if (!v0)
  {
    v6 = OUTLINED_FUNCTION_16();
    v7 = sub_1CF73F4F8();
    *(_QWORD *)(v4 - 144) = v8;
    if (v2)
    {
      OUTLINED_FUNCTION_58_0(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 232) + 8));
      OUTLINED_FUNCTION_24_5();
      OUTLINED_FUNCTION_2_10();
      JUMPOUT(0x1CF6D6724);
    }
    v9 = v7;
    OUTLINED_FUNCTION_58_0(v5, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 232) + 8));
    OUTLINED_FUNCTION_24_5();
    OUTLINED_FUNCTION_2_10();
    v10 = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(v6 + 16) = v9;
    *(_QWORD *)(v6 + 24) = v10;
    *v3 = v6 | 0x6000000000000000;
    JUMPOUT(0x1CF6D62ACLL);
  }
  OUTLINED_FUNCTION_24_5();
  JUMPOUT(0x1CF6D62A8);
}

void sub_1CF6D684C(_QWORD *a1)
{
  AuxiliaryMetadataItem.init(from:)(a1);
}

void sub_1CF6D6860(_QWORD *a1)
{
  AuxiliaryMetadataItem.encode(to:)(a1);
}

uint64_t sub_1CF6D6878()
{
  uint64_t result;

  sub_1CF6B3208(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA2220 = result;
  return result;
}

void AuxiliaryMetadataUpdate.domain.getter()
{
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_1();
}

uint64_t AuxiliaryMetadataUpdate.domain.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AuxiliaryMetadataUpdate.domain.modify())()
{
  return nullsub_1;
}

uint64_t AuxiliaryMetadataUpdate.metadata.getter()
{
  return swift_bridgeObjectRetain();
}

void AuxiliaryMetadataUpdate.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_1();
}

uint64_t (*AuxiliaryMetadataUpdate.metadata.modify())()
{
  return nullsub_1;
}

uint64_t sub_1CF6D6994(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CF6D6A78(char a1)
{
  if ((a1 & 1) != 0)
    return 0x617461646174656DLL;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_1CF6D6AAC()
{
  char *v0;

  return sub_1CF6D6A78(*v0);
}

uint64_t sub_1CF6D6AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6D6994(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF6D6AD8()
{
  sub_1CF6D880C();
  return sub_1CF73F864();
}

uint64_t sub_1CF6D6B00()
{
  sub_1CF6D880C();
  return sub_1CF73F870();
}

void AuxiliaryMetadataUpdate.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA22C8) - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_99();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6D880C();
  sub_1CF73F858();
  sub_1CF73F5C4();
  if (!v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7E80);
    sub_1CF6D8658(&qword_1EFBA2278, (uint64_t (*)(void))sub_1CF6D5CF8, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1CF73F5F4();
  }
  OUTLINED_FUNCTION_37_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_0_0();
}

void AuxiliaryMetadataUpdate.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EE0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_28();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6D880C();
  sub_1CF73F840();
  if (v2)
  {
    OUTLINED_FUNCTION_71_2();
  }
  else
  {
    v7 = sub_1CF73F4F8();
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7E80);
    sub_1CF6D8658(&qword_1ED8F7E88, (uint64_t (*)(void))sub_1CF6D86CC, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    swift_bridgeObjectRetain();
    sub_1CF73F528();
    OUTLINED_FUNCTION_13_8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    *a2 = v7;
    a2[1] = v9;
    a2[2] = v10;
    OUTLINED_FUNCTION_6_3();
    OUTLINED_FUNCTION_71_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF6D6E0C(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  AuxiliaryMetadataUpdate.init(from:)(a1, a2);
}

void sub_1CF6D6E20(_QWORD *a1)
{
  AuxiliaryMetadataUpdate.encode(to:)(a1);
}

unint64_t static AuxiliaryMetadataProvider.XPCKeys.xpcEventStreamName.getter()
{
  return 0xD000000000000020;
}

uint64_t static AuxiliaryMetadataProvider.XPCKeys.domainKey.getter()
{
  return 0x6E69616D6F64;
}

void sub_1CF6D6E64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6D6E98(uint64_t a1, char a2)
{
  swift_endAccess();
  if ((a2 & 1) == 0)
    OS_dispatch_queue.assertOnQueueHierarchy()();
  OUTLINED_FUNCTION_1();
}

_QWORD *sub_1CF6D6EC8()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *result;

  sub_1CF73E868();
  sub_1CF73E838();
  v0 = swift_dynamicCastClassUnconditional();
  type metadata accessor for AuxiliaryMetadataProvider();
  v1 = (_QWORD *)swift_allocObject();
  result = sub_1CF6D6FD4(v0, v1);
  qword_1EFBA2228 = (uint64_t)result;
  return result;
}

uint64_t sub_1CF6D6F4C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t static AuxiliaryMetadataProvider.shared.getter()
{
  if (qword_1EFBA0928 != -1)
    swift_once();
  return swift_retain();
}

_QWORD *sub_1CF6D6FD4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  NSObject *v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v16 = a1;
  v3 = sub_1CF73F174();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1CF73F150();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v7);
  v9 = sub_1CF73ED84();
  MEMORY[0x1E0C80A78](v9);
  sub_1CF6B3208(0, (unint64_t *)&qword_1ED8F7A30);
  sub_1CF73ED6C();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1CF6935F8(&qword_1ED8F7D00, v8, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7CF0);
  sub_1CF6D96C4();
  sub_1CF73F2F4();
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DEF8D0], v3);
  v10 = (void *)sub_1CF73F18C();
  a2[3] = v10;
  sub_1CF73E7CC();
  swift_allocObject();
  a2[4] = sub_1CF73E7A8();
  sub_1CF73E7B4();
  swift_allocObject();
  a2[5] = sub_1CF73E7A8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1D38);
  a2[6] = sub_1CF73EE44();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7E80);
  a2[7] = sub_1CF73EE44();
  a2[2] = v16;
  swift_retain();
  sub_1CF73E724();
  v11 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_1CF6D972C;
  aBlock[5] = v11;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6D6F4C;
  aBlock[3] = &block_descriptor_29;
  v12 = _Block_copy(aBlock);
  v13 = v10;
  swift_retain_n();
  xpc_set_event_stream_handler("com.apple.remotepairing.metadata", v13, v12);
  _Block_release(v12);
  swift_release_n();
  swift_release();
  swift_release();

  return a2;
}

uint64_t sub_1CF6D7310()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t result;
  uint64_t v5;

  v0 = sub_1CF73E76C();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_unknownObjectRetain();
    sub_1CF73E778();
    sub_1CF6D7948();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

void sub_1CF6D73DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  char v12;
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  char isEscapingClosureAtFileLocation;
  _QWORD v17[6];

  OUTLINED_FUNCTION_167();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = sub_1CF73EDF0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_28();
  v10 = *(void **)(v0 + 24);
  *v1 = v10;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v9 + 104))(v1, *MEMORY[0x1E0DEF738], v8);
  v11 = v10;
  v12 = sub_1CF73EE08();
  (*(void (**)(_QWORD *, uint64_t))(v9 + 8))(v1, v8);
  if ((v12 & 1) != 0)
  {
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = v0;
    v13[3] = v7;
    v13[4] = v5;
    v13[5] = v3;
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = sub_1CF6D887C;
    *(_QWORD *)(v14 + 24) = v13;
    v17[4] = sub_1CF6A3AF8;
    v17[5] = v14;
    v17[0] = MEMORY[0x1E0C809B0];
    v17[1] = 1107296256;
    v17[2] = sub_1CF6D7584;
    v17[3] = &block_descriptor_5;
    v15 = _Block_copy(v17);
    swift_retain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_8_2();
    swift_retain();
    swift_release();
    dispatch_sync(v11, v15);
    _Block_release(v15);
    isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      OUTLINED_FUNCTION_17();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1CF6D7584(uint64_t a1)
{
  (*(void (**)(void))(a1 + 32))();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6D75A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  _DWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43[4];

  OUTLINED_FUNCTION_167();
  v2 = v0;
  v35[1] = v3;
  v5 = v4;
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2450);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_12();
  v9 = sub_1CF73E76C();
  v41 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_3();
  v11 = MEMORY[0x1E0C80A78](v10);
  v38 = (uint64_t)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v37 = (char *)v35 - v14;
  MEMORY[0x1E0C80A78](v13);
  v39 = (char *)v35 - v15;
  v35[0] = *(_QWORD *)(v0 + 24);
  OS_dispatch_queue.assertOnQueueHierarchy()();
  v16 = sub_1CF73F0E4();
  if (qword_1EFBA0920 != -1)
LABEL_17:
    swift_once();
  if (OUTLINED_FUNCTION_47_3())
  {
    OUTLINED_FUNCTION_40_5();
    v17 = (_DWORD *)OUTLINED_FUNCTION_4_7();
    v43[0] = OUTLINED_FUNCTION_4_7();
    *v17 = 136446210;
    v40 = v17 + 1;
    OUTLINED_FUNCTION_8_2();
    sub_1CF68F110(v7, v5, v43);
    v42 = v18;
    sub_1CF73F2A0();
    OUTLINED_FUNCTION_26_4();
    OUTLINED_FUNCTION_34_4(&dword_1CF67E000, v19, v20, "Client registered metadata for domain %{public}s");
    OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_0_1();
  }
  sub_1CF6D7DF8();
  OUTLINED_FUNCTION_8_2();
  sub_1CF6D6E64((uint64_t)v43);
  OUTLINED_FUNCTION_18_6();
  v22 = *v21;
  if (*v21)
  {
    v23 = v21;
    v36 = v2;
    do
    {
      if (*(_QWORD *)(v22 + 16))
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *v23 = v22;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          v22 = sub_1CF6D96B0(v22);
          *v23 = v22;
        }
        v25 = *(_QWORD *)(v22 + 16);
        if (!v25)
        {
          __break(1u);
          goto LABEL_17;
        }
        v40 = (_DWORD *)v16;
        v26 = v1;
        v27 = v25 - 1;
        OUTLINED_FUNCTION_69_3(v38, v22+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(_QWORD *)(v41 + 72) * (v25 - 1));
        *(_QWORD *)(v22 + 16) = v27;
        v1 = v26;
        *v23 = v22;
        v28 = (uint64_t)v37;
        v29 = OUTLINED_FUNCTION_61_3();
        OUTLINED_FUNCTION_69_3(v29, v30);
        OUTLINED_FUNCTION_69_3(v1, v28);
        v2 = v36;
        v31 = 0;
      }
      else
      {
        v31 = 1;
      }
      OUTLINED_FUNCTION_59_3(v1, v31);
      OUTLINED_FUNCTION_64_4();
      OUTLINED_FUNCTION_3_7();
      OUTLINED_FUNCTION_63_2();
      if (__swift_getEnumTagSinglePayload(v1, 1, v9) == 1)
        goto LABEL_15;
      v16 = v41;
      v32 = v39;
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v39, v1, v9);
      sub_1CF73E760();
      (*(void (**)(char *, uint64_t))(v16 + 8))(v32, v9);
      OUTLINED_FUNCTION_8_2();
      sub_1CF6D6E64((uint64_t)v43);
      OUTLINED_FUNCTION_18_6();
      v23 = v33;
      v22 = *v33;
    }
    while (*v33);
  }
  OUTLINED_FUNCTION_64_4();
  OUTLINED_FUNCTION_3_7();
  OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_59_3(v1, 1);
LABEL_15:
  sub_1CF693ED8(v1, &qword_1EFBA2450);
  OUTLINED_FUNCTION_2_3();
  OUTLINED_FUNCTION_8_2();
  v34 = swift_bridgeObjectRetain();
  sub_1CF6B1080(v34, v7, v5);
  swift_endAccess();
  OUTLINED_FUNCTION_3_7();
  OS_dispatch_queue.assertOnQueueHierarchy()();
  OUTLINED_FUNCTION_17();
}

void sub_1CF6D7948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  NSObject *v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  NSObject *v18;
  uint8_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_167();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2450);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_15();
  v2 = sub_1CF73E76C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_34();
  v6 = v5 - v4;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  sub_1CF73E754();
  if (__swift_getEnumTagSinglePayload(v0, 1, v2) == 1)
  {
    sub_1CF693ED8(v0, &qword_1EFBA2450);
    sub_1CF73F0D8();
    if (qword_1EFBA0920 != -1)
      swift_once();
    sub_1CF73E694();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v0, v2);
    v7 = sub_1CF73E784();
    if (v8)
    {
      v9 = v7;
      v10 = v8;
      OUTLINED_FUNCTION_2_0();
      OUTLINED_FUNCTION_6_3();
      OUTLINED_FUNCTION_54_0();
      v11 = OUTLINED_FUNCTION_57_3();
      v12 = sub_1CF6AF754(v11);
      OUTLINED_FUNCTION_40_0();
      OUTLINED_FUNCTION_11_3();
      if (v12)
      {
        v13 = sub_1CF73F0E4();
        if (qword_1EFBA0920 != -1)
          swift_once();
        v14 = qword_1EFBA2220;
        if (OUTLINED_FUNCTION_52_2())
        {
          OUTLINED_FUNCTION_40_5();
          v15 = (uint8_t *)OUTLINED_FUNCTION_4_7();
          OUTLINED_FUNCTION_4_7();
          OUTLINED_FUNCTION_17_5(4.8751e-34);
          OUTLINED_FUNCTION_46_3();
          OUTLINED_FUNCTION_16_4(v16);
          OUTLINED_FUNCTION_26_4();
          OUTLINED_FUNCTION_33(&dword_1CF67E000, v14, v13, "Received event from publisher for currently registered domain %{public}s. Pushing metadata to service", v15);
          OUTLINED_FUNCTION_32_3();
          OUTLINED_FUNCTION_0_1();
        }
        OUTLINED_FUNCTION_57_3();
        sub_1CF6D7DF8();
        OUTLINED_FUNCTION_40_0();
        swift_bridgeObjectRelease();
        sub_1CF73E760();
      }
      else
      {
        v24 = v9;
        v17 = sub_1CF73F0E4();
        if (qword_1EFBA0920 != -1)
          swift_once();
        v18 = qword_1EFBA2220;
        if (os_log_type_enabled((os_log_t)qword_1EFBA2220, (os_log_type_t)v17))
        {
          OUTLINED_FUNCTION_40_5();
          v19 = (uint8_t *)OUTLINED_FUNCTION_4_7();
          OUTLINED_FUNCTION_4_7();
          OUTLINED_FUNCTION_17_5(4.8751e-34);
          OUTLINED_FUNCTION_46_3();
          OUTLINED_FUNCTION_16_4(v20);
          OUTLINED_FUNCTION_26_4();
          OUTLINED_FUNCTION_33(&dword_1CF67E000, v18, (os_log_type_t)v17, "Received event from publisher for currently unregistered domain %{public}s. Storing event", v19);
          OUTLINED_FUNCTION_32_3();
          OUTLINED_FUNCTION_0_1();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E98);
        v21 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
        v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_1CF742850;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v22 + v21, v6, v2);
        OUTLINED_FUNCTION_2_0();
        OUTLINED_FUNCTION_54_0();
        OUTLINED_FUNCTION_26_2();
        v23 = OUTLINED_FUNCTION_57_3();
        sub_1CF6AF754(v23);
        OUTLINED_FUNCTION_40_0();
        swift_bridgeObjectRelease();
        sub_1CF702F18();
        OUTLINED_FUNCTION_2_3();
        sub_1CF6B1074(v22, v24, v10);
        swift_endAccess();
        OUTLINED_FUNCTION_40_0();
        OS_dispatch_queue.assertOnQueueHierarchy()();
      }
    }
    else
    {
      sub_1CF73F0D8();
      if (qword_1EFBA0920 != -1)
        swift_once();
      sub_1CF73E694();
    }
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v6, v2);
  }
  OUTLINED_FUNCTION_17();
}

void sub_1CF6D7DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[2];
  uint64_t v16;
  uint64_t v17[3];

  OUTLINED_FUNCTION_167();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2440);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_34();
  v15[0] = *(_QWORD *)(sub_1CF73E940() - 8);
  OUTLINED_FUNCTION_3();
  v8 = MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v15[1] = (char *)v15 - v9;
  OS_dispatch_queue.assertOnQueueHierarchy()();
  v16 = v5;
  v17[0] = v5;
  v17[1] = v3;
  v17[2] = v1;
  sub_1CF6D88F0();
  sub_1CF6D892C();
  sub_1CF6A383C();
  sub_1CF6A3878();
  OUTLINED_FUNCTION_54_0();
  swift_bridgeObjectRetain();
  sub_1CF73E73C();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_40_0();
  sub_1CF73F0E4();
  v10 = v3;
  if (qword_1EFBA0920 != -1)
    swift_once();
  if (OUTLINED_FUNCTION_47_3())
  {
    OUTLINED_FUNCTION_40_5();
    v11 = (_DWORD *)OUTLINED_FUNCTION_4_7();
    v17[0] = OUTLINED_FUNCTION_4_7();
    *v11 = 136446210;
    swift_bridgeObjectRetain();
    sub_1CF68F110(v16, v10, v17);
    OUTLINED_FUNCTION_25_3(v12);
    sub_1CF73F2A0();
    OUTLINED_FUNCTION_26_4();
    OUTLINED_FUNCTION_34_4(&dword_1CF67E000, v13, v14, "Successfully pushed auxiliary metadata to service for domain %{public}s");
    OUTLINED_FUNCTION_32_3();
    OUTLINED_FUNCTION_0_1();
  }
  OUTLINED_FUNCTION_17();
}

uint64_t AuxiliaryMetadataProvider.deinit()
{
  uint64_t v0;

  swift_release();

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t AuxiliaryMetadataProvider.__deallocating_deinit()
{
  AuxiliaryMetadataProvider.deinit();
  return swift_deallocClassInstance();
}

void (*sub_1CF6D83DC(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  _QWORD *v6;

  v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1CF6D8608(v6);
  v6[10] = sub_1CF6D84B8(v6 + 4, a2, a3);
  return sub_1CF6D846C;
}

void sub_1CF6D846C(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 72);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 80))(*(_QWORD *)a1 + 32, 0);
  OUTLINED_FUNCTION_11_3();
  v2(v1, 0);
  free(v1);
}

void (*sub_1CF6D84B8(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x30uLL);
  *a1 = v8;
  v8[2] = a3;
  v8[3] = v4;
  v8[1] = a2;
  v9 = *v4;
  v10 = sub_1CF6B0D94();
  *((_BYTE *)v8 + 40) = v11 & 1;
  if (__OFADD__(*(_QWORD *)(v9 + 16), (v11 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v12 = v10;
  v13 = v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1D28);
  if ((sub_1CF73F420() & 1) != 0)
  {
    v14 = sub_1CF6B0D94();
    if ((v13 & 1) == (v15 & 1))
    {
      v12 = v14;
      goto LABEL_5;
    }
LABEL_10:
    result = (void (*)(uint64_t **))sub_1CF73F6FC();
    __break(1u);
    return result;
  }
LABEL_5:
  v8[4] = v12;
  if ((v13 & 1) != 0)
    v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v12);
  else
    v16 = 0;
  *v8 = v16;
  return sub_1CF6D85D0;
}

void sub_1CF6D85D0(uint64_t **a1)
{
  uint64_t *v1;

  v1 = *a1;
  sub_1CF6B2C7C(*a1, *((_BYTE *)*a1 + 40), (_QWORD **)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_43_5(v1);
}

uint64_t (*sub_1CF6D8608(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_1CF6D8628;
}

uint64_t sub_1CF6D8628(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_1CF6D8634()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CF6D8658(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F7E80);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x1D17D3DEC](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CF6D86CC()
{
  unint64_t result;

  result = qword_1ED8F7E50;
  if (!qword_1ED8F7E50)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for AuxiliaryMetadataItem, &type metadata for AuxiliaryMetadataItem);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E50);
  }
  return result;
}

uint64_t sub_1CF6D8708(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBA2290);
    v8 = a2();
    result = MEMORY[0x1D17D3DEC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1CF6D8770()
{
  uint64_t v0;

  sub_1CF6933C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  return swift_deallocObject();
}

unint64_t sub_1CF6D8794()
{
  unint64_t result;

  result = qword_1ED8F6A20;
  if (!qword_1ED8F6A20)
  {
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED8F6A20);
  }
  return result;
}

uint64_t sub_1CF6D87D0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1CF6D87F4()
{
  return OUTLINED_FUNCTION_2_1();
}

uint64_t sub_1CF6D8800()
{
  return OUTLINED_FUNCTION_2_1();
}

unint64_t sub_1CF6D880C()
{
  unint64_t result;

  result = qword_1ED8F7E68;
  if (!qword_1ED8F7E68)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7448C0, &type metadata for AuxiliaryMetadataUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E68);
  }
  return result;
}

uint64_t sub_1CF6D8848()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1CF6D887C()
{
  sub_1CF6D75A0();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6D88A0()
{
  return OUTLINED_FUNCTION_2_1();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

unint64_t sub_1CF6D88C4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1CF6D88F0();
  result = sub_1CF6D892C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1CF6D88F0()
{
  unint64_t result;

  result = qword_1EFBA22D0;
  if (!qword_1EFBA22D0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for AuxiliaryMetadataUpdate, &type metadata for AuxiliaryMetadataUpdate);
    atomic_store(result, (unint64_t *)&qword_1EFBA22D0);
  }
  return result;
}

unint64_t sub_1CF6D892C()
{
  unint64_t result;

  result = qword_1EFBA22D8;
  if (!qword_1EFBA22D8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for AuxiliaryMetadataUpdate, &type metadata for AuxiliaryMetadataUpdate);
    atomic_store(result, (unint64_t *)&qword_1EFBA22D8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for AuxiliaryMetadataItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for AuxiliaryMetadataItem()
{
  return swift_release();
}

_QWORD *assignWithCopy for AuxiliaryMetadataItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for AuxiliaryMetadataItem(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuxiliaryMetadataItem(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7A && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 121;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x79)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for AuxiliaryMetadataItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x79)
  {
    *(_QWORD *)result = a2 - 122;
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7A)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1CF6D8ABC(_QWORD *a1)
{
  return *a1 >> 61;
}

_QWORD *sub_1CF6D8AC8(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1CF6D8AD8(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

void type metadata accessor for AuxiliaryMetadataItem()
{
  OUTLINED_FUNCTION_31();
}

uint64_t destroy for AuxiliaryMetadataUpdate()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s19RemotePairingDevice23AuxiliaryMetadataUpdateVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_1();
}

_QWORD *assignWithCopy for AuxiliaryMetadataUpdate(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AuxiliaryMetadataUpdate(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AuxiliaryMetadataUpdate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AuxiliaryMetadataUpdate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for AuxiliaryMetadataUpdate()
{
  OUTLINED_FUNCTION_31();
}

uint64_t type metadata accessor for AuxiliaryMetadataProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for AuxiliaryMetadataProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AuxiliaryMetadataProvider.registerMetadata(forDomain:metadata:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

void type metadata accessor for AuxiliaryMetadataProvider.XPCKeys()
{
  OUTLINED_FUNCTION_31();
}

uint64_t storeEnumTagSinglePayload for AuxiliaryMetadataUpdate.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF6D8D1C + 4 * byte_1CF743FC1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF6D8D50 + 4 * byte_1CF743FBC[v4]))();
}

uint64_t sub_1CF6D8D50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6D8D58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6D8D60);
  return result;
}

uint64_t sub_1CF6D8D6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6D8D74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF6D8D78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6D8D80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataUpdate.CodingKeys()
{
  return &type metadata for AuxiliaryMetadataUpdate.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AuxiliaryMetadataItem.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AuxiliaryMetadataItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1CF6D8E70 + 4 * byte_1CF743FCB[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1CF6D8EA4 + 4 * byte_1CF743FC6[v4]))();
}

uint64_t sub_1CF6D8EA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6D8EAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6D8EB4);
  return result;
}

uint64_t sub_1CF6D8EC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6D8EC8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1CF6D8ECC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6D8ED4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.CodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.CodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.BooleanCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.BooleanCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.IntCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.IntCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.FloatCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.FloatCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.StringCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.StringCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.DataCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.DataCodingKeys;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.ArrayCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.ArrayCodingKeys;
}

uint64_t _s19RemotePairingDevice21AuxiliaryMetadataItemO17BooleanCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CF6D8F94 + 4 * byte_1CF743FD0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CF6D8FB4 + 4 * byte_1CF743FD5[v4]))();
}

_BYTE *sub_1CF6D8F94(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CF6D8FB4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6D8FBC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6D8FC4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6D8FCC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6D8FD4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AuxiliaryMetadataItem.DictionaryCodingKeys()
{
  return &type metadata for AuxiliaryMetadataItem.DictionaryCodingKeys;
}

unint64_t sub_1CF6D8FF4()
{
  unint64_t result;

  result = qword_1EFBA23F8;
  if (!qword_1EFBA23F8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7442D8, &type metadata for AuxiliaryMetadataItem.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA23F8);
  }
  return result;
}

unint64_t sub_1CF6D9034()
{
  unint64_t result;

  result = qword_1EFBA2400;
  if (!qword_1EFBA2400)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744390, &type metadata for AuxiliaryMetadataItem.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2400);
  }
  return result;
}

unint64_t sub_1CF6D9074()
{
  unint64_t result;

  result = qword_1EFBA2408;
  if (!qword_1EFBA2408)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744448, &type metadata for AuxiliaryMetadataItem.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2408);
  }
  return result;
}

unint64_t sub_1CF6D90B4()
{
  unint64_t result;

  result = qword_1EFBA2410;
  if (!qword_1EFBA2410)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744500, &type metadata for AuxiliaryMetadataItem.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2410);
  }
  return result;
}

unint64_t sub_1CF6D90F4()
{
  unint64_t result;

  result = qword_1EFBA2418;
  if (!qword_1EFBA2418)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7445B8, &type metadata for AuxiliaryMetadataItem.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2418);
  }
  return result;
}

unint64_t sub_1CF6D9134()
{
  unint64_t result;

  result = qword_1EFBA2420;
  if (!qword_1EFBA2420)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744670, &type metadata for AuxiliaryMetadataItem.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2420);
  }
  return result;
}

unint64_t sub_1CF6D9174()
{
  unint64_t result;

  result = qword_1EFBA2428;
  if (!qword_1EFBA2428)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744728, &type metadata for AuxiliaryMetadataItem.BooleanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2428);
  }
  return result;
}

unint64_t sub_1CF6D91B4()
{
  unint64_t result;

  result = qword_1EFBA2430;
  if (!qword_1EFBA2430)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7447E0, &type metadata for AuxiliaryMetadataItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2430);
  }
  return result;
}

unint64_t sub_1CF6D91F4()
{
  unint64_t result;

  result = qword_1EFBA2438;
  if (!qword_1EFBA2438)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744898, &type metadata for AuxiliaryMetadataUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2438);
  }
  return result;
}

unint64_t sub_1CF6D9234()
{
  unint64_t result;

  result = qword_1ED8F7E78;
  if (!qword_1ED8F7E78)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744808, &type metadata for AuxiliaryMetadataUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E78);
  }
  return result;
}

unint64_t sub_1CF6D9274()
{
  unint64_t result;

  result = qword_1ED8F7E70;
  if (!qword_1ED8F7E70)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744830, &type metadata for AuxiliaryMetadataUpdate.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E70);
  }
  return result;
}

unint64_t sub_1CF6D92B4()
{
  unint64_t result;

  result = qword_1ED8F7E38;
  if (!qword_1ED8F7E38)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744698, &type metadata for AuxiliaryMetadataItem.BooleanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E38);
  }
  return result;
}

unint64_t sub_1CF6D92F4()
{
  unint64_t result;

  result = qword_1ED8F7E30;
  if (!qword_1ED8F7E30)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7446C0, &type metadata for AuxiliaryMetadataItem.BooleanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E30);
  }
  return result;
}

unint64_t sub_1CF6D9334()
{
  unint64_t result;

  result = qword_1ED8F7DE0;
  if (!qword_1ED8F7DE0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7445E0, &type metadata for AuxiliaryMetadataItem.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DE0);
  }
  return result;
}

unint64_t sub_1CF6D9374()
{
  unint64_t result;

  result = qword_1ED8F7DD8;
  if (!qword_1ED8F7DD8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744608, &type metadata for AuxiliaryMetadataItem.IntCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DD8);
  }
  return result;
}

unint64_t sub_1CF6D93B4()
{
  unint64_t result;

  result = qword_1ED8F7E10;
  if (!qword_1ED8F7E10)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744528, &type metadata for AuxiliaryMetadataItem.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E10);
  }
  return result;
}

unint64_t sub_1CF6D93F4()
{
  unint64_t result;

  result = qword_1ED8F7E08;
  if (!qword_1ED8F7E08)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744550, &type metadata for AuxiliaryMetadataItem.FloatCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E08);
  }
  return result;
}

unint64_t sub_1CF6D9434()
{
  unint64_t result;

  result = qword_1ED8F7E18;
  if (!qword_1ED8F7E18)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744470, &type metadata for AuxiliaryMetadataItem.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E18);
  }
  return result;
}

unint64_t sub_1CF6D9474()
{
  unint64_t result;

  result = qword_1ED8F7E20;
  if (!qword_1ED8F7E20)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744498, &type metadata for AuxiliaryMetadataItem.StringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E20);
  }
  return result;
}

unint64_t sub_1CF6D94B4()
{
  unint64_t result;

  result = qword_1ED8F7DF0;
  if (!qword_1ED8F7DF0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7443B8, &type metadata for AuxiliaryMetadataItem.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DF0);
  }
  return result;
}

unint64_t sub_1CF6D94F4()
{
  unint64_t result;

  result = qword_1ED8F7DE8;
  if (!qword_1ED8F7DE8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7443E0, &type metadata for AuxiliaryMetadataItem.DataCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DE8);
  }
  return result;
}

unint64_t sub_1CF6D9534()
{
  unint64_t result;

  result = qword_1ED8F7E00;
  if (!qword_1ED8F7E00)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744300, &type metadata for AuxiliaryMetadataItem.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E00);
  }
  return result;
}

unint64_t sub_1CF6D9574()
{
  unint64_t result;

  result = qword_1ED8F7DF8;
  if (!qword_1ED8F7DF8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744328, &type metadata for AuxiliaryMetadataItem.ArrayCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DF8);
  }
  return result;
}

unint64_t sub_1CF6D95B4()
{
  unint64_t result;

  result = qword_1ED8F7E48;
  if (!qword_1ED8F7E48)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744248, &type metadata for AuxiliaryMetadataItem.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E48);
  }
  return result;
}

unint64_t sub_1CF6D95F4()
{
  unint64_t result;

  result = qword_1ED8F7E40;
  if (!qword_1ED8F7E40)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744270, &type metadata for AuxiliaryMetadataItem.DictionaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E40);
  }
  return result;
}

unint64_t sub_1CF6D9634()
{
  unint64_t result;

  result = qword_1ED8F7DD0;
  if (!qword_1ED8F7DD0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744750, &type metadata for AuxiliaryMetadataItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DD0);
  }
  return result;
}

unint64_t sub_1CF6D9674()
{
  unint64_t result;

  result = qword_1ED8F7DC8;
  if (!qword_1ED8F7DC8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744778, &type metadata for AuxiliaryMetadataItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED8F7DC8);
  }
  return result;
}

uint64_t sub_1CF6D96B0(uint64_t a1)
{
  return sub_1CF6C7084(0, *(_QWORD *)(a1 + 16), 0, a1);
}

unint64_t sub_1CF6D96C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8F7CF8;
  if (!qword_1ED8F7CF8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F7CF0);
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8F7CF8);
  }
  return result;
}

uint64_t sub_1CF6D9708()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CF6D972C()
{
  return sub_1CF6D7310();
}

uint64_t OUTLINED_FUNCTION_17_5(float a1)
{
  float *v1;
  uint64_t v2;

  *v1 = a1;
  *(_QWORD *)(v2 - 176) = v1 + 1;
  return swift_bridgeObjectRetain();
}

void (*OUTLINED_FUNCTION_18_6())(_QWORD *a1)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_1CF6D4B20((_QWORD *)(v2 - 144), v1, v0);
}

uint64_t OUTLINED_FUNCTION_19_5()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 272) + 8))(v0, *(_QWORD *)(v1 - 104));
}

uint64_t OUTLINED_FUNCTION_20_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 272) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_25_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_30_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_33_5()
{
  return sub_1CF73F57C();
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  return swift_bridgeObjectRetain_n();
}

void OUTLINED_FUNCTION_41_5(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_42_5(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 184) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

BOOL OUTLINED_FUNCTION_47_3()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

BOOL OUTLINED_FUNCTION_52_2()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

uint64_t OUTLINED_FUNCTION_57_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_59_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_61_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 112, 0);
}

uint64_t OUTLINED_FUNCTION_64_4()
{
  uint64_t (*v0)(uint64_t, _QWORD);
  uint64_t v1;

  return v0(v1 - 144, 0);
}

uint64_t OUTLINED_FUNCTION_69_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_71_2()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0);
}

uint64_t ControlChannelConnectionError.init(_:message:failureReason:recoverySuggestion:underlyingError:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  char v15;
  Swift::String v16;
  uint64_t result;
  char v18;

  v18 = *a1;
  v15 = v18;
  v16 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v18);
  result = sub_1CF692EA4(a2);
  *(_BYTE *)a8 = v15;
  *(Swift::String *)(a8 + 8) = v16;
  *(_QWORD *)(a8 + 24) = a3;
  *(_QWORD *)(a8 + 32) = a4;
  *(_QWORD *)(a8 + 40) = a5;
  *(_QWORD *)(a8 + 48) = a6;
  *(_QWORD *)(a8 + 56) = a7;
  return result;
}

uint64_t ControlChannelConnectionError.Code.defaultMessage.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CF6D9968 + 4 * byte_1CF744B9C[*v0]))(0x206E776F6E6B6E55, 0xED0000726F727265);
}

uint64_t sub_1CF6D9968()
{
  return 0x726F70736E617254;
}

unint64_t sub_1CF6D998C()
{
  return 0xD000000000000014;
}

unint64_t sub_1CF6D99A8()
{
  return 0xD000000000000019;
}

RemotePairingDevice::ControlChannelConnectionError::Code_optional __swiftcall ControlChannelConnectionError.Code.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 6;
  if ((unint64_t)rawValue < 6)
    v2 = rawValue;
  *v1 = v2;
  return (RemotePairingDevice::ControlChannelConnectionError::Code_optional)rawValue;
}

void sub_1CF6D9A0C()
{
  sub_1CF6B3D20();
}

void sub_1CF6D9A14()
{
  sub_1CF6B3DE8();
}

void sub_1CF6D9A1C()
{
  sub_1CF6B4530();
}

RemotePairingDevice::ControlChannelConnectionError::Code_optional sub_1CF6D9A24(Swift::Int *a1)
{
  return ControlChannelConnectionError.Code.init(rawValue:)(*a1);
}

void ControlChannelConnectionError.message.getter()
{
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_1();
}

void ControlChannelConnectionError.failureReason.getter()
{
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_1();
}

void ControlChannelConnectionError.recoverySuggestion.getter()
{
  OUTLINED_FUNCTION_6_3();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_1();
}

void *ControlChannelConnectionError.underlyingError.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

uint64_t sub_1CF6D9AB4()
{
  sub_1CF68BF40();
  return sub_1CF73F708();
}

uint64_t ControlChannelConnectionError.errorCode.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t ControlChannelConnectionError.errorUserInfo.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;

  v2 = v0[1];
  v1 = v0[2];
  v4 = v0[3];
  v3 = v0[4];
  v5 = v0[6];
  v46 = v0[5];
  v6 = v0[7];
  v7 = MEMORY[0x1E0DEA968];
  v68 = sub_1CF73EE44();
  sub_1CF73EED4();
  *((_QWORD *)&v67 + 1) = v7;
  *((_QWORD *)&v66 + 1) = v1;
  v8 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_13_9(v8, v9, v10, v11, v12, v13, v14, v15, v42, v46, v50, v54, v58, v62, v2);
  sub_1CF6AEB58();
  sub_1CF73EED4();
  if (v3)
  {
    *((_QWORD *)&v67 + 1) = v7;
    *(_QWORD *)&v66 = v4;
    *((_QWORD *)&v66 + 1) = v3;
  }
  else
  {
    v66 = 0u;
    v67 = 0u;
  }
  v16 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_13_9(v16, v17, v18, v19, v20, v21, v22, v23, v43, v47, v51, v55, v59, v63, v66);
  sub_1CF6AEB58();
  sub_1CF73EED4();
  if (v5)
  {
    *((_QWORD *)&v67 + 1) = v7;
    *(_QWORD *)&v66 = v48;
    *((_QWORD *)&v66 + 1) = v5;
  }
  else
  {
    v66 = 0u;
    v67 = 0u;
  }
  v24 = swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_13_9(v24, v25, v26, v27, v28, v29, v30, v31, v44, v48, v52, v56, v60, v64, v66);
  sub_1CF6AEB58();
  v32 = sub_1CF73EED4();
  if (v6)
  {
    swift_getErrorValue();
    *((_QWORD *)&v67 + 1) = v57;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v66);
    v32 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(boxed_opaque_existential_0, v53, v57);
  }
  else
  {
    v66 = 0u;
    v67 = 0u;
  }
  OUTLINED_FUNCTION_13_9(v32, v33, v34, v35, v36, v37, v38, v39, v45, v49, v53, v57, v61, v65, v66);
  sub_1CF6AEB58();
  return v68;
}

uint64_t sub_1CF6D9CA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1701080931 && a2 == 0xE400000000000000;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6567617373656DLL && a2 == 0xE700000000000000;
    if (v6 || (sub_1CF73F690() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x526572756C696166 && a2 == 0xED00006E6F736165;
      if (v7 || (sub_1CF73F690() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000012 && a2 == 0x80000001CF753630 || (sub_1CF73F690() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x80000001CF753650 || (sub_1CF73F690() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0x69796C7265646E75 && a2 == 0xEF726F727245676ELL)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v9 = sub_1CF73F690();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 5;
        else
          return 6;
      }
    }
  }
}

uint64_t sub_1CF6D9F44()
{
  return 6;
}

uint64_t sub_1CF6D9F4C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CF6D9F78 + 4 * byte_1CF744BA2[a1]))(1701080931, 0xE400000000000000);
}

uint64_t sub_1CF6D9F78()
{
  return 0x6567617373656DLL;
}

uint64_t sub_1CF6D9F90()
{
  return 0x526572756C696166;
}

unint64_t sub_1CF6D9FB4()
{
  return 0xD000000000000012;
}

unint64_t sub_1CF6D9FD0()
{
  return 0xD000000000000013;
}

uint64_t sub_1CF6D9FF0()
{
  return 0x69796C7265646E75;
}

uint64_t sub_1CF6DA014()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_1CF73F498();
  swift_bridgeObjectRelease();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

uint64_t sub_1CF6DA064(char a1)
{
  if ((a1 & 1) != 0)
    return 0x726F727265736ELL;
  else
    return 0x656C6261646F63;
}

uint64_t sub_1CF6DA09C()
{
  unsigned __int8 *v0;

  return sub_1CF6D9F4C(*v0);
}

uint64_t sub_1CF6DA0A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6D9CA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF6DA0C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6D9F44();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6DA0EC()
{
  sub_1CF6DA5A8();
  return sub_1CF73F864();
}

uint64_t sub_1CF6DA114()
{
  sub_1CF6DA5A8();
  return sub_1CF73F870();
}

uint64_t sub_1CF6DA13C(char *a1, char *a2)
{
  return sub_1CF6B33D0(*a1, *a2);
}

void sub_1CF6DA148()
{
  sub_1CF6B3D48();
}

uint64_t sub_1CF6DA150()
{
  return sub_1CF6B3E08();
}

void sub_1CF6DA158()
{
  sub_1CF6B44D4();
}

uint64_t sub_1CF6DA160@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6DA014();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6DA18C@<X0>(uint64_t *a1@<X8>)
{
  char *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CF6DA064(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CF6DA1B4()
{
  sub_1CF6DB1EC();
  return sub_1CF73F018();
}

uint64_t sub_1CF6DA210()
{
  sub_1CF6DB1EC();
  return sub_1CF73F000();
}

void ControlChannelConnectionError.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  Swift::Int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  Swift::String v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  char v22;
  char v23;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2458);
  MEMORY[0x1E0C80A78](v5);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6DA5A8();
  sub_1CF73F840();
  if (!v2)
  {
    OUTLINED_FUNCTION_5_10();
    v6 = sub_1CF73F51C();
    ControlChannelConnectionError.Code.init(rawValue:)(v6);
    OUTLINED_FUNCTION_5_10();
    v7 = sub_1CF73F4F8();
    v9 = v8;
    v18 = v7;
    v16 = OUTLINED_FUNCTION_3_12(2);
    v17 = v10;
    v14 = OUTLINED_FUNCTION_3_12(3);
    v15 = v11;
    LOBYTE(v19) = 4;
    sub_1CF6DA5E4();
    OUTLINED_FUNCTION_5_10();
    sub_1CF73F4E0();
    if (v23 == 2)
    {
      v13 = 0;
    }
    else
    {
      v22 = 5;
      if ((v23 & 1) != 0)
      {
        sub_1CF6D8794();
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_5_10();
        sub_1CF73F528();
        sub_1CF6B3208(0, &qword_1EFBA2470);
        sub_1CF6B3208(0, (unint64_t *)&qword_1ED8F7A40);
        v13 = sub_1CF73F144();
        sub_1CF6933C0(v19, v20);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
        sub_1CF6DA9E0(&qword_1EFBA2478, &qword_1EFBA2458, MEMORY[0x1E0DED060]);
        sub_1CF6A38B4();
        OUTLINED_FUNCTION_14_7();
        OUTLINED_FUNCTION_5_10();
        sub_1CF73F6D8();
        v13 = v19;
      }
    }
    v19 = v18;
    v20 = v9;
    v21 = 0;
    v23 = 0;
    v12 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v23);
    sub_1CF692EA4((uint64_t)&v19);
    OUTLINED_FUNCTION_8();
    *(_BYTE *)a2 = 0;
    *(Swift::String *)(a2 + 8) = v12;
    *(_QWORD *)(a2 + 24) = v16;
    *(_QWORD *)(a2 + 32) = v17;
    *(_QWORD *)(a2 + 40) = v14;
    *(_QWORD *)(a2 + 48) = v15;
    *(_QWORD *)(a2 + 56) = v13;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1CF6DA5A8()
{
  unint64_t result;

  result = qword_1EFBA2460;
  if (!qword_1EFBA2460)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744F98, &type metadata for ControlChannelConnectionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2460);
  }
  return result;
}

unint64_t sub_1CF6DA5E4()
{
  unint64_t result;

  result = qword_1EFBA2468;
  if (!qword_1EFBA2468)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744F70, &type metadata for ControlChannelConnectionError.UnderlyingErrorType);
    atomic_store(result, (unint64_t *)&qword_1EFBA2468);
  }
  return result;
}

void ControlChannelConnectionError.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2480);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v10 = v1[4];
  v9 = v1[6];
  v8 = (void *)v1[7];
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6DA5A8();
  sub_1CF73F858();
  LOBYTE(v11) = 0;
  sub_1CF73F5E8();
  if (v2)
  {
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  }
  else
  {
    LOBYTE(v11) = 1;
    OUTLINED_FUNCTION_1_10();
    if (v10)
    {
      LOBYTE(v11) = 2;
      OUTLINED_FUNCTION_1_10();
    }
    if (v9)
    {
      LOBYTE(v11) = 3;
      OUTLINED_FUNCTION_1_10();
    }
    if (v8)
    {
      v11 = v8;
      v7 = v8;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
      sub_1CF6DA9E0(&qword_1EFBA2488, &qword_1EFBA2480, MEMORY[0x1E0DED188]);
      sub_1CF6A38B4();
      sub_1CF73F6E4();
      LOBYTE(v11) = 0;
      OUTLINED_FUNCTION_15_7();
      OUTLINED_FUNCTION_9_5();
      OUTLINED_FUNCTION_8_8(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));

      goto LABEL_5;
    }
    v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  }
  OUTLINED_FUNCTION_8_8(v6);
LABEL_5:
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1CF6DA9E0(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D17D3DEC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1CF6DAA20()
{
  unint64_t result;

  result = qword_1EFBA2490;
  if (!qword_1EFBA2490)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744F48, &type metadata for ControlChannelConnectionError.UnderlyingErrorType);
    atomic_store(result, (unint64_t *)&qword_1EFBA2490);
  }
  return result;
}

unint64_t sub_1CF6DAA60()
{
  unint64_t result;

  result = qword_1EFBA2498;
  if (!qword_1EFBA2498)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnectionError.Code, &type metadata for ControlChannelConnectionError.Code);
    atomic_store(result, (unint64_t *)&qword_1EFBA2498);
  }
  return result;
}

void sub_1CF6DAA9C(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  ControlChannelConnectionError.init(from:)(a1, a2);
}

void sub_1CF6DAAB0(_QWORD *a1)
{
  ControlChannelConnectionError.encode(to:)(a1);
}

uint64_t assignWithCopy for ControlChannelConnectionError(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 56);
  v5 = *(void **)(a2 + 56);
  v6 = v5;
  *(_QWORD *)(a1 + 56) = v5;

  return a1;
}

uint64_t assignWithTake for ControlChannelConnectionError(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  return a1;
}

uint64_t getEnumTagSinglePayload for ControlChannelConnectionError(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnectionError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t assignWithCopy for ControlChannelConnectionError.Message(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
    }
    else if (!v4)
    {
      swift_bridgeObjectRelease();
    }
    v5 = *((unsigned __int8 *)a2 + 32);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *((_QWORD *)a2 + 3);
      *(_QWORD *)(a1 + 24) = v6;
      (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
      *(_BYTE *)(a1 + 32) = 1;
    }
    else if (v5)
    {
      v7 = *a2;
      v8 = a2[1];
      *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
      *(_OWORD *)a1 = v7;
      *(_OWORD *)(a1 + 16) = v8;
    }
    else
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = *((_QWORD *)a2 + 1);
      *(_BYTE *)(a1 + 32) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t assignWithTake for ControlChannelConnectionError.Message(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  __int128 v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      __swift_destroy_boxed_opaque_existential_0Tm(a1);
    }
    else if (!v4)
    {
      swift_bridgeObjectRelease();
    }
    v5 = *(unsigned __int8 *)(a2 + 32);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
    }
    else
    {
      if (!v5)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_BYTE *)(a1 + 32) = 0;
        return a1;
      }
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      LOBYTE(v5) = *(_BYTE *)(a2 + 32);
    }
    *(_BYTE *)(a1 + 32) = v5;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlChannelConnectionError.Message(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnectionError.Message(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 32) = 0;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1CF6DAE78(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 32);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1CF6DAE94(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 32) = a2;
  return result;
}

void type metadata accessor for ControlChannelConnectionError.Message()
{
  OUTLINED_FUNCTION_31();
}

uint64_t storeEnumTagSinglePayload for ControlChannelConnectionError.UnderlyingErrorType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF6DAF18 + 4 * byte_1CF744BAD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF6DAF4C + 4 * byte_1CF744BA8[v4]))();
}

uint64_t sub_1CF6DAF4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6DAF54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6DAF5CLL);
  return result;
}

uint64_t sub_1CF6DAF68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6DAF70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF6DAF74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6DAF7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnectionError.UnderlyingErrorType()
{
  return &type metadata for ControlChannelConnectionError.UnderlyingErrorType;
}

uint64_t getEnumTagSinglePayload for TunnelMessage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s19RemotePairingDevice29ControlChannelConnectionErrorV4CodeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1CF6DB06C + 4 * byte_1CF744BB7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1CF6DB0A0 + 4 * byte_1CF744BB2[v4]))();
}

uint64_t sub_1CF6DB0A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6DB0A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6DB0B0);
  return result;
}

uint64_t sub_1CF6DB0BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6DB0C4);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1CF6DB0C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6DB0D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ControlChannelConnectionError.CodingKeys()
{
  return &type metadata for ControlChannelConnectionError.CodingKeys;
}

unint64_t sub_1CF6DB0F0()
{
  unint64_t result;

  result = qword_1EFBA24A0;
  if (!qword_1EFBA24A0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744E80, &type metadata for ControlChannelConnectionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA24A0);
  }
  return result;
}

unint64_t sub_1CF6DB130()
{
  unint64_t result;

  result = qword_1EFBA24A8;
  if (!qword_1EFBA24A8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744F20, &type metadata for ControlChannelConnectionError.UnderlyingErrorType);
    atomic_store(result, (unint64_t *)&qword_1EFBA24A8);
  }
  return result;
}

unint64_t sub_1CF6DB170()
{
  unint64_t result;

  result = qword_1EFBA24B0;
  if (!qword_1EFBA24B0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744DF0, &type metadata for ControlChannelConnectionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA24B0);
  }
  return result;
}

unint64_t sub_1CF6DB1B0()
{
  unint64_t result;

  result = qword_1EFBA24B8;
  if (!qword_1EFBA24B8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744E18, &type metadata for ControlChannelConnectionError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA24B8);
  }
  return result;
}

unint64_t sub_1CF6DB1EC()
{
  unint64_t result;

  result = qword_1EFBA24C0;
  if (!qword_1EFBA24C0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF744EA8, &type metadata for ControlChannelConnectionError.UnderlyingErrorType);
    atomic_store(result, (unint64_t *)&qword_1EFBA24C0);
  }
  return result;
}

void OUTLINED_FUNCTION_12_6()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_17_6()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1CF6DB248()
{
  unint64_t v0;

  v0 = sub_1CF73F498();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1CF6DB294(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CF6DB2C0 + 4 * byte_1CF744FF0[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1CF6DB2C0()
{
  return 7697517;
}

unint64_t sub_1CF6DB2D0()
{
  return 0xD000000000000010;
}

uint64_t sub_1CF6DB2EC()
{
  return 0x6441726576726573;
}

uint64_t sub_1CF6DB310()
{
  return 0x5352726576726573;
}

uint64_t sub_1CF6DB334()
{
  return 0x797469726F697270;
}

uint64_t sub_1CF6DB34C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CF6DB378 + 4 * byte_1CF744FF6[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_1CF6DB378()
{
  return 7697517;
}

unint64_t sub_1CF6DB388()
{
  return 0xD000000000000010;
}

uint64_t sub_1CF6DB3A4()
{
  return 0x6441726576726573;
}

uint64_t sub_1CF6DB3C8()
{
  return 0x5352726576726573;
}

uint64_t sub_1CF6DB3EC()
{
  return 0x797469726F697270;
}

uint64_t sub_1CF6DB404()
{
  unint64_t v0;

  v0 = sub_1CF73F498();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_1CF6DB44C(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1CF6DB484 + 4 * byte_1CF744FFC[a1]))(0xD000000000000016, 0x80000001CF74FAF0);
}

uint64_t sub_1CF6DB484(uint64_t a1)
{
  return a1 + 1;
}

void sub_1CF6DB4BC(char *a1)
{
  sub_1CF6B3714(*a1);
}

void sub_1CF6DB4C8()
{
  unsigned __int8 *v0;

  sub_1CF6B3D54(*v0);
}

void sub_1CF6DB4D0(uint64_t a1)
{
  char *v1;

  sub_1CF6B4000(a1, *v1);
}

void sub_1CF6DB4D8()
{
  sub_1CF6B430C();
}

uint64_t sub_1CF6DB4E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6DB248();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6DB50C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CF6DB294(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CF6DB534()
{
  unsigned __int8 *v0;

  return sub_1CF6DB34C(*v0);
}

uint64_t sub_1CF6DB53C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6DB290();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6DB560()
{
  sub_1CF6DBAB8();
  return sub_1CF73F864();
}

uint64_t sub_1CF6DB588()
{
  sub_1CF6DBAB8();
  return sub_1CF73F870();
}

void sub_1CF6DB5B0(char *a1)
{
  sub_1CF6B38A0(*a1);
}

void sub_1CF6DB5BC()
{
  sub_1CF6B3D98();
}

void sub_1CF6DB5C4(uint64_t a1)
{
  char *v1;

  sub_1CF6B40B4(a1, *v1);
}

void sub_1CF6DB5CC()
{
  sub_1CF6B4300();
}

uint64_t sub_1CF6DB5D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6DB404();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6DB600@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1CF6DB44C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1CF6DB628()
{
  sub_1CF6DC99C();
  return sub_1CF73F018();
}

uint64_t sub_1CF6DB684()
{
  sub_1CF6DC99C();
  return sub_1CF73F000();
}

void TunnelMessage.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1CF73E9AC();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_13();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24C8);
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_34();
  type metadata accessor for TunnelMessage();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6DBAB8();
  sub_1CF73F840();
  if (!v6)
  {
    sub_1CF6DBAF4();
    OUTLINED_FUNCTION_12_0();
    __asm { BR              X10 }
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF6DB870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int16 v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;

  v3 = OUTLINED_FUNCTION_6_10(1);
  if (!v1)
  {
    v4 = v3;
    OUTLINED_FUNCTION_14_8();
    OUTLINED_FUNCTION_2_11();
    if (*(_BYTE *)(v2 - 88))
      v5 = 0;
    else
      v5 = *(_QWORD *)(v2 - 96);
    OUTLINED_FUNCTION_0_16();
    v6 = *(_QWORD *)(v2 - 160);
    *(_WORD *)v6 = v4;
    *(_QWORD *)(v6 + 8) = v5;
    swift_storeEnumTagMultiPayload();
    sub_1CF6DBB6C(v6, v0, (uint64_t (*)(_QWORD))type metadata accessor for TunnelMessage);
    JUMPOUT(0x1CF6DB840);
  }
  JUMPOUT(0x1CF6DB838);
}

uint64_t type metadata accessor for TunnelMessage()
{
  uint64_t result;

  result = qword_1EFBA2598;
  if (!qword_1EFBA2598)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1CF6DBAB8()
{
  unint64_t result;

  result = qword_1EFBA24D0;
  if (!qword_1EFBA24D0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7452B8, &type metadata for TunnelMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA24D0);
  }
  return result;
}

unint64_t sub_1CF6DBAF4()
{
  unint64_t result;

  result = qword_1EFBA24D8;
  if (!qword_1EFBA24D8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745290, &type metadata for TunnelMessage.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EFBA24D8);
  }
  return result;
}

unint64_t sub_1CF6DBB30()
{
  unint64_t result;

  result = qword_1EFBA24E0;
  if (!qword_1EFBA24E0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for TunnelConnectionPriority, &type metadata for TunnelConnectionPriority);
    atomic_store(result, (unint64_t *)&qword_1EFBA24E0);
  }
  return result;
}

void sub_1CF6DBB6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_1();
}

void TunnelMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  v3 = v1;
  sub_1CF73E9AC();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  type metadata accessor for TunnelMessage();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_13();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2500);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_34();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6DBAB8();
  sub_1CF73F858();
  sub_1CF6DBF50(v3, v2);
  v9 = (char *)sub_1CF6DBCEC + 4 * byte_1CF745004[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_1CF6DBCEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(v2 + 8);
  *(_BYTE *)(v4 - 88) = 0;
  *(_BYTE *)(v4 - 65) = 0;
  sub_1CF6DBF94();
  OUTLINED_FUNCTION_1_11();
  if (!v0)
  {
    *(_BYTE *)(v4 - 88) = 1;
    OUTLINED_FUNCTION_10_7();
    *(_QWORD *)(v4 - 88) = v5;
    *(_BYTE *)(v4 - 65) = 5;
    sub_1CF6DBFD0();
    sub_1CF73F5F4();
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v1, v3);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1CF6DBF50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TunnelMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1CF6DBF94()
{
  unint64_t result;

  result = qword_1EFBA2508;
  if (!qword_1EFBA2508)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745268, &type metadata for TunnelMessage.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EFBA2508);
  }
  return result;
}

unint64_t sub_1CF6DBFD0()
{
  unint64_t result;

  result = qword_1EFBA2510;
  if (!qword_1EFBA2510)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for TunnelConnectionPriority, &type metadata for TunnelConnectionPriority);
    atomic_store(result, (unint64_t *)&qword_1EFBA2510);
  }
  return result;
}

void sub_1CF6DC00C(_QWORD *a1)
{
  TunnelMessage.init(from:)(a1);
}

void sub_1CF6DC020(_QWORD *a1)
{
  TunnelMessage.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for TunnelMessage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1CF73E9AC();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = type metadata accessor for TunnelInterfaceParameters();
    v8((uint64_t *)((char *)a1 + *(int *)(v9 + 20)), (uint64_t *)((char *)a2 + *(int *)(v9 + 20)), v7);
    *(_WORD *)((char *)a1 + *(int *)(v9 + 24)) = *(_WORD *)((char *)a2 + *(int *)(v9 + 24));
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
    v8((uint64_t *)((char *)a1 + *(int *)(v10 + 48)), (uint64_t *)((char *)a2 + *(int *)(v10 + 48)), v7);
    *(_WORD *)((char *)a1 + *(int *)(v10 + 64)) = *(_WORD *)((char *)a2 + *(int *)(v10 + 64));
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for TunnelMessage(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1CF73E9AC();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
    v6(a1, v3);
    v4 = type metadata accessor for TunnelInterfaceParameters();
    v6(a1 + *(int *)(v4 + 20), v3);
    v5 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8) + 48);
    return ((uint64_t (*)(uint64_t, uint64_t))v6)(v5, v3);
  }
  return result;
}

char *initializeWithCopy for TunnelMessage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1CF73E9AC();
    v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    v8 = type metadata accessor for TunnelInterfaceParameters();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    *(_WORD *)&a1[*(int *)(v8 + 24)] = *(_WORD *)&a2[*(int *)(v8 + 24)];
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
    v7(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v6);
    *(_WORD *)&a1[*(int *)(v9 + 64)] = *(_WORD *)&a2[*(int *)(v9 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithCopy for TunnelMessage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1CF6DC3F0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TunnelMessage);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1CF73E9AC();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
      v7(a1, a2, v6);
      v8 = type metadata accessor for TunnelInterfaceParameters();
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
      *(_WORD *)&a1[*(int *)(v8 + 24)] = *(_WORD *)&a2[*(int *)(v8 + 24)];
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
      v7(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v6);
      *(_WORD *)&a1[*(int *)(v9 + 64)] = *(_WORD *)&a2[*(int *)(v9 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1CF6DC3F0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_1();
}

char *initializeWithTake for TunnelMessage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1CF73E9AC();
    v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    v8 = type metadata accessor for TunnelInterfaceParameters();
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    *(_WORD *)&a1[*(int *)(v8 + 24)] = *(_WORD *)&a2[*(int *)(v8 + 24)];
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
    v7(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v6);
    *(_WORD *)&a1[*(int *)(v9 + 64)] = *(_WORD *)&a2[*(int *)(v9 + 64)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for TunnelMessage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  void (*v7)(char *, char *, uint64_t);
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1CF6DC3F0((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for TunnelMessage);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1CF73E9AC();
      v7 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      v8 = type metadata accessor for TunnelInterfaceParameters();
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
      *(_WORD *)&a1[*(int *)(v8 + 24)] = *(_WORD *)&a2[*(int *)(v8 + 24)];
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
      v7(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], v6);
      *(_WORD *)&a1[*(int *)(v9 + 64)] = *(_WORD *)&a2[*(int *)(v9 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1CF6DC634()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1CF6DC644()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v5;
  void *v6;
  char *v7;
  uint64_t v8;

  v6 = &unk_1CF745098;
  v0 = type metadata accessor for TunnelInterfaceParameters();
  if (v1 <= 0x3F)
  {
    v2 = sub_1CF73E9AC();
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout3();
      v7 = &v5;
      v8 = MEMORY[0x1E0DE9D38] + 64;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

uint64_t storeEnumTagSinglePayload for TunnelMessage.MessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1CF6DC750 + 4 * byte_1CF74500D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1CF6DC784 + 4 * byte_1CF745008[v4]))();
}

uint64_t sub_1CF6DC784(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6DC78C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6DC794);
  return result;
}

uint64_t sub_1CF6DC7A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6DC7A8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1CF6DC7AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6DC7B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TunnelMessage.MessageType()
{
  return &type metadata for TunnelMessage.MessageType;
}

uint64_t storeEnumTagSinglePayload for TunnelMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1CF6DC81C + 4 * byte_1CF745017[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1CF6DC850 + 4 * byte_1CF745012[v4]))();
}

uint64_t sub_1CF6DC850(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6DC858(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6DC860);
  return result;
}

uint64_t sub_1CF6DC86C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6DC874);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1CF6DC878(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6DC880(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TunnelMessage.CodingKeys()
{
  return &type metadata for TunnelMessage.CodingKeys;
}

unint64_t sub_1CF6DC8A0()
{
  unint64_t result;

  result = qword_1EFBA25D0;
  if (!qword_1EFBA25D0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7451A0, &type metadata for TunnelMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA25D0);
  }
  return result;
}

unint64_t sub_1CF6DC8E0()
{
  unint64_t result;

  result = qword_1EFBA25D8;
  if (!qword_1EFBA25D8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745240, &type metadata for TunnelMessage.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EFBA25D8);
  }
  return result;
}

unint64_t sub_1CF6DC920()
{
  unint64_t result;

  result = qword_1EFBA25E0;
  if (!qword_1EFBA25E0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7450D8, &type metadata for TunnelMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA25E0);
  }
  return result;
}

unint64_t sub_1CF6DC960()
{
  unint64_t result;

  result = qword_1EFBA25E8;
  if (!qword_1EFBA25E8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745100, &type metadata for TunnelMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA25E8);
  }
  return result;
}

unint64_t sub_1CF6DC99C()
{
  unint64_t result;

  result = qword_1EFBA25F0;
  if (!qword_1EFBA25F0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7451C8, &type metadata for TunnelMessage.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EFBA25F0);
  }
  return result;
}

uint64_t static NetworkPairingKeys.name.getter()
{
  return 1701667182;
}

uint64_t static NetworkPairingKeys.model.getter()
{
  return 0x6C65646F6DLL;
}

uint64_t BonjourAdvertFlags.init(rawValue:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

void static BonjourAdvertFlags.onDemand.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

unint64_t sub_1CF6DCA14()
{
  unint64_t result;

  result = qword_1EFBA25F8;
  if (!qword_1EFBA25F8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for BonjourAdvertFlags, &type metadata for BonjourAdvertFlags);
    atomic_store(result, (unint64_t *)&qword_1EFBA25F8);
  }
  return result;
}

unint64_t sub_1CF6DCA54()
{
  unint64_t result;

  result = qword_1EFBA2600;
  if (!qword_1EFBA2600)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for BonjourAdvertFlags, &type metadata for BonjourAdvertFlags);
    atomic_store(result, (unint64_t *)&qword_1EFBA2600);
  }
  return result;
}

uint64_t sub_1CF6DCA90@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  return BonjourAdvertFlags.init(rawValue:)(*a1, a2);
}

unint64_t sub_1CF6DCA9C()
{
  unint64_t result;

  result = qword_1ED8F68B8;
  if (!qword_1ED8F68B8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for BonjourAdvertFlags, &type metadata for BonjourAdvertFlags);
    atomic_store(result, (unint64_t *)&qword_1ED8F68B8);
  }
  return result;
}

unint64_t sub_1CF6DCADC()
{
  unint64_t result;

  result = qword_1ED8F68C0;
  if (!qword_1ED8F68C0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for BonjourAdvertFlags, &type metadata for BonjourAdvertFlags);
    atomic_store(result, (unint64_t *)&qword_1ED8F68C0);
  }
  return result;
}

uint64_t sub_1CF6DCB18(_QWORD *a1)
{
  _QWORD *v1;

  return sub_1CF739FE8(*a1, *v1);
}

void sub_1CF6DCB24(_QWORD *a1@<X8>)
{
  sub_1CF70A838(a1);
}

uint64_t sub_1CF6DCB30@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_1CF737B54(*a1, *v2, a2);
}

void sub_1CF6DCB3C(_QWORD *a1@<X8>)
{
  sub_1CF70A848(a1);
}

BOOL sub_1CF6DCB48(_QWORD *a1, uint64_t *a2)
{
  return sub_1CF70A888(a1, *a2);
}

void sub_1CF6DCB50(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1CF70A8B4(a2, *a1);
}

void sub_1CF6DCB58(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1CF70A904(a2, *a1);
}

void sub_1CF6DCB60(uint64_t *a1)
{
  sub_1CF70A954(*a1);
}

uint64_t sub_1CF6DCB68(uint64_t *a1)
{
  return sub_1CF737B70(*a1);
}

void sub_1CF6DCB70(uint64_t *a1)
{
  sub_1CF70A970(*a1);
}

void sub_1CF6DCB78(_QWORD *a1@<X8>)
{
  sub_1CF70A97C(a1);
}

BOOL sub_1CF6DCB84(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1CF737B90(*a1, *v1);
}

BOOL sub_1CF6DCB90(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1CF70A98C(*a1, *v1);
}

BOOL sub_1CF6DCB9C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1CF737BAC(*a1, *v1);
}

BOOL sub_1CF6DCBA8()
{
  uint64_t *v0;

  return sub_1CF70A9B4(*v0);
}

void sub_1CF6DCBB0(uint64_t *a1)
{
  sub_1CF70A9D0(*a1);
}

uint64_t sub_1CF6DCBB8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;

  result = BonjourAdvertFlags.init(rawValue:)(*a1, (_QWORD *)a2);
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_1CF6DCBE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = BonjourAdvertFlags.rawValue.getter();
  *a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for NetworkPairingKeys()
{
  return &type metadata for NetworkPairingKeys;
}

void sub_1CF6DCC18(void (*a1)(_BYTE *))
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  _BYTE *v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  _BYTE v12[24];

  v4 = _s5StateVMa();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v9 = &v12[-v8];
  v10 = (os_unfair_lock_s *)v1[2];
  os_unfair_lock_lock(v10);
  v11 = (uint64_t)v1 + *(_QWORD *)(*v1 + 96);
  swift_beginAccess();
  sub_1CF6DFC54(v11, (uint64_t)v9, (uint64_t (*)(_QWORD))_s5StateVMa);
  a1(v9);
  if (v2)
  {
    sub_1CF6DC3F0((uint64_t)v9, (uint64_t (*)(_QWORD))_s5StateVMa);
  }
  else
  {
    sub_1CF6DFC74((uint64_t)v9, (uint64_t)v7, (uint64_t (*)(_QWORD))_s5StateVMa);
    swift_beginAccess();
    sub_1CF6D31F0((uint64_t)v7, v11);
    swift_endAccess();
  }
  os_unfair_lock_unlock(v10);
}

uint64_t sub_1CF6DCD6C()
{
  uint64_t result;

  sub_1CF6AA174(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA2608 = result;
  return result;
}

void RPPairableHost.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_3_13();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_6_11();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_19_6();
  OUTLINED_FUNCTION_42();
}

uint64_t _s5StateVMa()
{
  uint64_t result;

  result = qword_1EFBA26A8;
  if (!qword_1EFBA26A8)
    return swift_getSingletonMetadata();
  return result;
}

void RPPairableHost.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_3_13();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v0);
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_6_11();
  OUTLINED_FUNCTION_10_8();
  OUTLINED_FUNCTION_4_11();
  OUTLINED_FUNCTION_15_9();
  OUTLINED_FUNCTION_19_6();
  OUTLINED_FUNCTION_42();
}

void RPPairableHost.identifier.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_3_13();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_6_11();
  OUTLINED_FUNCTION_11_7();
  OUTLINED_FUNCTION_4_11();
  v5 = OUTLINED_FUNCTION_27();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a1, v1, v5);
  OUTLINED_FUNCTION_18_7();
}

uint64_t RPPairableHost.available.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v0 = OUTLINED_FUNCTION_3_13();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF6AE568();
  if (v7[*(int *)(v4 + 24)] == 1)
  {
    sub_1CF6DC3F0((uint64_t)v7, (uint64_t (*)(_QWORD))_s5StateVMa);
    return 0;
  }
  else
  {
    sub_1CF6DFC54((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v3, type metadata accessor for PairableHostInfo);
    sub_1CF6DC3F0((uint64_t)v7, (uint64_t (*)(_QWORD))_s5StateVMa);
    v8 = v3[*(int *)(v0 + 28)];
    sub_1CF6DC3F0((uint64_t)v3, type metadata accessor for PairableHostInfo);
  }
  return v8;
}

uint64_t RPPairableHost.paired.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = OUTLINED_FUNCTION_3_13();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v2);
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_28();
  OUTLINED_FUNCTION_6_11();
  OUTLINED_FUNCTION_11_7();
  OUTLINED_FUNCTION_4_11();
  v4 = *(unsigned __int8 *)(v0 + *(int *)(v1 + 32));
  OUTLINED_FUNCTION_18_7();
  return v4;
}

id sub_1CF6DD338(uint64_t a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  char *v9;
  _xpc_endpoint_s *WirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvg_0;
  id v11;
  id v12;
  uint64_t v14;
  uint64_t v15;
  objc_super v16;

  v3 = OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_0_17();
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (uint64_t)v7 + *(int *)(v5 + 20);
  v15 = a1;
  sub_1CF6DFC54(a1, v8, type metadata accessor for PairableHostInfo);
  *v7 = 0;
  v7[1] = 0;
  *((_BYTE *)v7 + *(int *)(v3 + 24)) = 0;
  *(_QWORD *)((char *)v7 + *(int *)(v3 + 28)) = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA26E8);
  swift_allocObject();
  v9 = v1;
  *(_QWORD *)&v9[OBJC_IVAR___RPPairableHost__state] = sub_1CF6AE8CC((uint64_t)v7);
  OUTLINED_FUNCTION_3_13();
  WirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvg_0 = (_xpc_endpoint_s *)_s19RemotePairingDevice014CreateWirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvg_0();
  xpc_connection_create_from_endpoint(WirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvg_0);
  swift_unknownObjectRelease();
  sub_1CF73E868();
  sub_1CF73E82C();
  *(_QWORD *)&v9[OBJC_IVAR___RPPairableHost__serviceConnection] = swift_dynamicCastClassUnconditional();

  v16.receiver = v9;
  v16.super_class = (Class)RPPairableHost;
  v11 = objc_msgSendSuper2(&v16, sel_init);
  OUTLINED_FUNCTION_16();
  swift_unknownObjectWeakInit();
  type metadata accessor for DeviceServiceEvent(0);
  sub_1CF6935F8(&qword_1EFBA26F0, type metadata accessor for DeviceServiceEvent, (uint64_t)&protocol conformance descriptor for DeviceServiceEvent);
  sub_1CF6935F8(&qword_1EFBA26F8, type metadata accessor for DeviceServiceEvent, (uint64_t)&protocol conformance descriptor for DeviceServiceEvent);
  v12 = v11;
  swift_retain();
  sub_1CF73E7D8();
  swift_release();
  swift_release();
  swift_retain();
  sub_1CF73E724();
  swift_release();
  sub_1CF6A1618();
  swift_unknownObjectRelease();

  sub_1CF6DC3F0(v15, type metadata accessor for PairableHostInfo);
  return v12;
}

void sub_1CF6DD5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  os_log_type_t v22;
  NSObject *v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  void *v33;
  id v34;
  uint64_t v35;
  unint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45[2];
  char v46;
  void *v47;

  v4 = sub_1CF73E664();
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for PairableHostInfo(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DeviceServiceEvent(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v42 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2700);
  MEMORY[0x1E0C80A78](v16);
  v18 = (void **)((char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v19 = MEMORY[0x1D17D3F84](a2 + 16);
  if (v19)
  {
    v20 = (void *)v19;
    sub_1CF6DFDF4(a1, (uint64_t)v18, &qword_1EFBA2700);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = *v18;
      v22 = sub_1CF73F0CC();
      if (qword_1EFBA0930 != -1)
        swift_once();
      v23 = qword_1EFBA2608;
      if (os_log_type_enabled((os_log_t)qword_1EFBA2608, v22))
      {
        v24 = v20;
        v25 = v21;
        v26 = v24;
        v27 = v21;
        v28 = swift_slowAlloc();
        v43 = swift_slowAlloc();
        v45[0] = v43;
        *(_DWORD *)v28 = 136446466;
        v42[1] = v28 + 4;
        v29 = objc_msgSend(v26, sel_identifier);
        sub_1CF73E658();

        sub_1CF6935F8((unint64_t *)&qword_1ED8F7D08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
        v30 = sub_1CF73F648();
        v32 = v31;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v6, v4);
        sub_1CF68F110(v30, v32, v45);
        v47 = v33;
        sub_1CF73F2A0();

        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2082;
        v47 = v21;
        v34 = v21;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
        v35 = sub_1CF73EF10();
        sub_1CF68F110(v35, v36, v45);
        v47 = v37;
        sub_1CF73F2A0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1CF67E000, v23, v22, "Received XPC error for host %{public}s: %{public}s", (uint8_t *)v28, 0x16u);
        v38 = v43;
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v38, -1, -1);
        MEMORY[0x1D17D3ED0](v28, -1, -1);
      }
      v39 = swift_retain();
      sub_1CF6D2938(v39);

      swift_release();
    }
    else
    {
      sub_1CF6DFC74((uint64_t)v18, (uint64_t)v15, type metadata accessor for DeviceServiceEvent);
      sub_1CF6DFC54((uint64_t)v15, (uint64_t)v13, type metadata accessor for DeviceServiceEvent);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v40 = *((_QWORD *)v13 + 1);
        v41 = v13[16];
        LOBYTE(v45[0]) = *v13;
        v45[1] = v40;
        v46 = v41;
        sub_1CF6DDA40((unsigned __int8 *)v45);

      }
      else
      {
        sub_1CF6DFC74((uint64_t)v13, (uint64_t)v9, type metadata accessor for PairableHostInfo);
        sub_1CF6DDCB4();

        sub_1CF6DC3F0((uint64_t)v9, type metadata accessor for PairableHostInfo);
      }
      sub_1CF6DC3F0((uint64_t)v15, type metadata accessor for DeviceServiceEvent);
    }
  }
}

void sub_1CF6DDA40(unsigned __int8 *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;

  v2 = v1;
  v4 = sub_1CF73E664();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v23 - v9;
  v11 = _s5StateVMa();
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = *a1;
  v25 = *((_QWORD *)a1 + 1);
  v24 = a1[16];
  sub_1CF6AE568();
  v15 = (void (*)(uint64_t))*v13;
  v14 = v13[1];
  sub_1CF6A3AE0(*v13);
  sub_1CF6DC3F0((uint64_t)v13, (uint64_t (*)(_QWORD))_s5StateVMa);
  if (v15)
  {
    v16 = swift_allocObject();
    v23 = v14;
    v17 = v16;
    *(_QWORD *)(v16 + 16) = v2;
    v18 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v19 = objc_msgSend(v2, sel_identifier);
    sub_1CF73E658();

    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    v20 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v21 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v21 + v20, v8, v4);
    *(_QWORD *)(v21 + ((v6 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v18;
    type metadata accessor for PairingChallenge();
    swift_allocObject();
    swift_retain();
    v22 = PairingChallenge.init(lastAttemptIncorrect:throttledBy:handlingPINWith:handlingCancellationWith:)(v26, v25, v24, (uint64_t)sub_1CF6DFCC4, v17, (uint64_t)sub_1CF6DFD50, v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    swift_release();
    v15(v22);
    swift_release();
    sub_1CF693EC8((uint64_t)v15);
  }
}

void sub_1CF6DDCB4()
{
  sub_1CF6DCC18((void (*)(_BYTE *))sub_1CF6DFD98);
}

uint64_t RPPairableHost.registerChangeHandler(on:handler:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  id v11;

  if (a1)
  {
    v7 = a1;
  }
  else
  {
    if (qword_1EFBA09F0 != -1)
      swift_once();
    v7 = (id)qword_1EFBA41D8;
  }
  v8 = (_QWORD *)OUTLINED_FUNCTION_16();
  v8[2] = v7;
  v8[3] = a2;
  v8[4] = a3;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR___RPPairableHost__state);
  swift_retain();
  v10 = a1;
  swift_retain();
  v11 = v7;
  sub_1CF6D2A5C(v9, (uint64_t)sub_1CF6DF26C, (uint64_t)v8);
  sub_1CF6DDDF0((uint64_t)v11, a2, a3);

  return swift_release();
}

uint64_t sub_1CF6DDDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  _QWORD v17[2];
  _QWORD aBlock[6];

  v5 = sub_1CF73ED54();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1CF73ED84();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  aBlock[4] = sub_1CF6A3AF8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CC068;
  aBlock[3] = &block_descriptor_49;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1CF73ED6C();
  v17[1] = MEMORY[0x1E0DEE9D8];
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, v6, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6A72FC();
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

void RPPairableHost.pair(invokingHandlersOn:handlingPairingChallengesUsing:completionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (**v15)(uint64_t);
  id v16;
  uint64_t (*v17)(uint64_t);
  _QWORD *v18;
  _QWORD *v19;
  os_unfair_lock_s *v20;
  id v21;
  id v22;
  id v23;
  id v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  void *v28;
  _QWORD *v29;
  id v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;

  OUTLINED_FUNCTION_7_9();
  OUTLINED_FUNCTION_0_17();
  v12 = MEMORY[0x1E0C80A78](v11);
  v34 = (uint64_t)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (uint64_t (**)(uint64_t))((char *)&v32 - v14);
  if (a1)
  {
    v16 = a1;
  }
  else
  {
    if (qword_1EFBA09F0 != -1)
      swift_once();
    v16 = (id)qword_1EFBA41D8;
  }
  v17 = (uint64_t (*)(uint64_t))OUTLINED_FUNCTION_16();
  *((_QWORD *)v17 + 2) = v16;
  *((_QWORD *)v17 + 3) = a2;
  *((_QWORD *)v17 + 4) = a3;
  v18 = (_QWORD *)OUTLINED_FUNCTION_16();
  v18[2] = v16;
  v18[3] = a4;
  v18[4] = a5;
  v35 = v5;
  v33 = a4;
  v19 = *(_QWORD **)&v5[OBJC_IVAR___RPPairableHost__state];
  v20 = (os_unfair_lock_s *)v19[2];
  v21 = v16;
  swift_retain_n();
  v22 = v21;
  swift_retain();
  OUTLINED_FUNCTION_232();
  swift_retain();
  v23 = a1;
  v24 = v22;
  os_unfair_lock_lock(v20);
  v25 = (uint64_t)v19 + *(_QWORD *)(*v19 + 96);
  swift_beginAccess();
  sub_1CF6DFC54(v25, (uint64_t)v15, (uint64_t (*)(_QWORD))_s5StateVMa);
  if (*v15)
  {
    sub_1CF6ABB3C();
    v26 = (void *)swift_allocError();
    sub_1CF6AA5E0();
    sub_1CF73F774();
    sub_1CF6DE548(v26, (uint64_t)v24, v33, a5);

  }
  else
  {
    *v15 = sub_1CF6DF27C;
    v15[1] = v17;
    OUTLINED_FUNCTION_232();
  }
  v27 = v34;
  sub_1CF6DFC74((uint64_t)v15, v34, (uint64_t (*)(_QWORD))_s5StateVMa);
  swift_beginAccess();
  sub_1CF6D31F0(v27, v25);
  swift_endAccess();
  os_unfair_lock_unlock(v20);
  swift_release();
  swift_release();
  v28 = v35;
  v29 = (_QWORD *)OUTLINED_FUNCTION_16();
  v29[2] = v28;
  v29[3] = sub_1CF6DF28C;
  v29[4] = v18;
  v30 = v24;
  swift_retain();
  v31 = v28;
  sub_1CF6A16E8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

}

uint64_t sub_1CF6DE364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  _QWORD v19[2];
  _QWORD aBlock[6];

  v19[0] = a2;
  v7 = sub_1CF73ED54();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF73ED84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a1;
  aBlock[4] = sub_1CF6DFE2C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CC068;
  aBlock[3] = &block_descriptor_43;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1CF73ED6C();
  v19[1] = MEMORY[0x1E0DEE9D8];
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, v8, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6A72FC();
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1CF6DE548(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v20[0] = a2;
  v7 = sub_1CF73ED54();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF73ED84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a1;
  aBlock[4] = sub_1CF6DFE2C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CC068;
  aBlock[3] = &block_descriptor_6;
  v17 = _Block_copy(aBlock);
  swift_retain();
  v18 = a1;
  sub_1CF73ED6C();
  v20[1] = MEMORY[0x1E0DEE9D8];
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, v8, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6A72FC();
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void sub_1CF6DE72C(uint64_t a1, uint64_t a2, void (*a3)(id), uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  _QWORD *v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  void (*v24)(id);

  v23 = a4;
  v24 = a3;
  v6 = type metadata accessor for PairableHostInfo(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA2708);
  MEMORY[0x1E0C80A78](v9);
  v11 = (id *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = _s5StateVMa();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (uint64_t *)((char *)&v23 - v16);
  v18 = *(_QWORD **)(a2 + OBJC_IVAR___RPPairableHost__state);
  v19 = (os_unfair_lock_s *)v18[2];
  os_unfair_lock_lock(v19);
  v20 = (uint64_t)v18 + *(_QWORD *)(*v18 + 96);
  swift_beginAccess();
  sub_1CF6DFC54(v20, (uint64_t)v17, (uint64_t (*)(_QWORD))_s5StateVMa);
  sub_1CF693EC8(*v17);
  *v17 = 0;
  v17[1] = 0;
  sub_1CF6DFC74((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(_QWORD))_s5StateVMa);
  swift_beginAccess();
  sub_1CF6D31F0((uint64_t)v15, v20);
  swift_endAccess();
  os_unfair_lock_unlock(v19);
  sub_1CF6DFDF4(a1, (uint64_t)v11, qword_1EFBA2708);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = *v11;
    v22 = *v11;
    v24(v21);

  }
  else
  {
    sub_1CF6DFC74((uint64_t)v11, (uint64_t)v8, type metadata accessor for PairableHostInfo);
    sub_1CF6DDCB4();
    v24(0);
    sub_1CF6DC3F0((uint64_t)v8, type metadata accessor for PairableHostInfo);
  }
}

uint64_t RPPairableHost.pair(invokingHandlersOn:handlingPairingChallengesUsing:completionHandler:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;

  v10 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v10 + 16) = a2;
  *(_QWORD *)(v10 + 24) = a3;
  v11 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v11 + 16) = a4;
  *(_QWORD *)(v11 + 24) = a5;
  OUTLINED_FUNCTION_232();
  swift_retain();
  RPPairableHost.pair(invokingHandlersOn:handlingPairingChallengesUsing:completionHandler:)(a1, (uint64_t)sub_1CF6DF2F8, v10, (uint64_t)sub_1CF6A3AF8, v11);
  swift_release();
  return swift_release();
}

void sub_1CF6DEA0C(uint64_t a1, void (*a2)(void))
{
  id v4;

  type metadata accessor for RPPairingChallenge(0);
  v4 = sub_1CF6AE7C8(a1);
  a2();

}

uint64_t sub_1CF6DEB34()
{
  swift_bridgeObjectRetain();
  sub_1CF6A1830();
  return swift_bridgeObjectRelease();
}

void sub_1CF6DEB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  os_log_type_t v25;
  NSObject *v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39[3];

  v4 = sub_1CF73E664();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v32 - v9;
  v36 = a2 + 16;
  v11 = sub_1CF73F0C0();
  if (qword_1EFBA0930 != -1)
    swift_once();
  v12 = qword_1EFBA2608;
  v34 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v35 = a1;
  v34(v10, a1, v4);
  v13 = v11;
  if (os_log_type_enabled(v12, v11))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v33 = v8;
    v16 = v15;
    v39[0] = v15;
    *(_DWORD *)v14 = 136315138;
    sub_1CF6935F8((unint64_t *)&qword_1ED8F7D08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v17 = sub_1CF73F648();
    sub_1CF68F110(v17, v18, v39);
    v38 = v19;
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();
    v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v10, v4);
    _os_log_impl(&dword_1CF67E000, v12, v13, "Handling pairing challenge request for pairable host %s", v14, 0xCu);
    swift_arrayDestroy();
    v21 = v16;
    v8 = v33;
    MEMORY[0x1D17D3ED0](v21, -1, -1);
    MEMORY[0x1D17D3ED0](v14, -1, -1);
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t))(v5 + 8);
    v20(v10, v4);
  }
  v22 = v36;
  swift_beginAccess();
  v23 = MEMORY[0x1D17D3F84](v22);
  if (v23)
  {
    v24 = (void *)v23;
    sub_1CF6A197C();

  }
  else
  {
    v25 = sub_1CF73F0C0();
    v26 = qword_1EFBA2608;
    v34(v8, v35, v4);
    if (os_log_type_enabled(v26, v25))
    {
      v27 = (uint8_t *)swift_slowAlloc();
      v28 = swift_slowAlloc();
      v38 = v28;
      *(_DWORD *)v27 = 136315138;
      sub_1CF6935F8((unint64_t *)&qword_1ED8F7D08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v29 = sub_1CF73F648();
      sub_1CF68F110(v29, v30, &v38);
      v37 = v31;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      v20(v8, v4);
      _os_log_impl(&dword_1CF67E000, v26, v25, "Ignoring pairing challenge cancellation request for pairable host %s because associated host object has been deallocated", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v28, -1, -1);
      MEMORY[0x1D17D3ED0](v27, -1, -1);
    }
    else
    {
      v20(v8, v4);
    }
  }
}

void sub_1CF6DEF48(uint64_t a1)
{
  sub_1CF6DEF60(a1, "Received error from pairing cancellation attempt: %s");
}

void sub_1CF6DEF54(uint64_t a1)
{
  sub_1CF6DEF60(a1, "Received error from pin entry attempt: %s");
}

void sub_1CF6DEF60(uint64_t a1, const char *a2)
{
  id v3;
  id v4;
  os_log_type_t v5;
  NSObject *v6;
  uint8_t *v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v3 = *(id *)a1;
    v4 = *(id *)a1;
    v5 = sub_1CF73F0CC();
    if (qword_1EFBA0930 != -1)
      swift_once();
    v6 = qword_1EFBA2608;
    if (os_log_type_enabled((os_log_t)qword_1EFBA2608, v5))
    {
      OUTLINED_FUNCTION_23_6();
      OUTLINED_FUNCTION_23_6();
      v7 = (uint8_t *)swift_slowAlloc();
      v11 = swift_slowAlloc();
      *(_DWORD *)v7 = 136315138;
      v8 = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
      v9 = sub_1CF73EF10();
      sub_1CF68F110(v9, v10, &v11);
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_12_7();
      OUTLINED_FUNCTION_12_7();
      _os_log_impl(&dword_1CF67E000, v6, v5, a2, v7, 0xCu);
      swift_arrayDestroy();
      OUTLINED_FUNCTION_0_1();
    }
    sub_1CF6A7274(v3, 1);
  }
}

uint64_t sub_1CF6DF118(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t v11;

  v4 = _s5StateVMa();
  v5 = a1 + *(int *)(v4 + 20);
  result = type metadata accessor for PairableHostInfo(0);
  if (*(_QWORD *)(v5 + *(int *)(result + 36)) < *(_QWORD *)(a2 + *(int *)(result + 36)))
  {
    result = sub_1CF6DFDB0(a2, v5);
    v7 = *(_QWORD *)(a1 + *(int *)(v4 + 28));
    v8 = *(_QWORD *)(v7 + 16);
    if (v8)
    {
      swift_bridgeObjectRetain();
      v9 = v7 + 40;
      do
      {
        v10 = *(void (**)(uint64_t))(v9 - 8);
        v11 = swift_retain();
        v10(v11);
        swift_release();
        v9 += 16;
        --v8;
      }
      while (v8);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void __swiftcall RPPairableHost.init()(RPPairableHost *__return_ptr retstr)
{
  objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
}

void RPPairableHost.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1CF6DF26C()
{
  uint64_t *v0;

  return sub_1CF6DDDF0(v0[2], v0[3], v0[4]);
}

uint64_t sub_1CF6DF27C(uint64_t a1)
{
  uint64_t *v1;

  return sub_1CF6DE364(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1CF6DF28C(void *a1)
{
  uint64_t *v1;

  return sub_1CF6DE548(a1, v1[2], v1[3], v1[4]);
}

uint64_t objectdestroyTm()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

void sub_1CF6DF2C8(uint64_t a1)
{
  uint64_t v1;

  sub_1CF6DE72C(a1, *(_QWORD *)(v1 + 16), *(void (**)(id))(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1CF6DF2D4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1CF6DF2F8(uint64_t a1)
{
  uint64_t v1;

  sub_1CF6DEA0C(a1, *(void (**)(void))(v1 + 16));
}

uint64_t type metadata accessor for RPPairableHost(uint64_t a1)
{
  return sub_1CF6AA174(a1, &qword_1EFBA2648);
}

_QWORD *sub_1CF6DF314(_OWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      v7 = a2[1];
      *v4 = *a2;
      v4[1] = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    v9 = a3[5];
    v10 = (char *)v4 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1CF73E664();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    v13 = (int *)type metadata accessor for PairableHostInfo(0);
    v14 = v13[5];
    v15 = &v10[v14];
    v16 = &v11[v14];
    v17 = *((_QWORD *)v16 + 1);
    *(_QWORD *)v15 = *(_QWORD *)v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = v13[6];
    v19 = &v10[v18];
    v20 = &v11[v18];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    v10[v13[7]] = v11[v13[7]];
    v10[v13[8]] = v11[v13[8]];
    *(_QWORD *)&v10[v13[9]] = *(_QWORD *)&v11[v13[9]];
    v22 = v13[10];
    v23 = &v10[v22];
    v24 = &v11[v22];
    v25 = sub_1CF73E814();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    v27 = a3[7];
    *((_BYTE *)v4 + a3[6]) = *((_BYTE *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v27) = *(_QWORD *)((char *)a2 + v27);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1CF6DF480(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  if (*a1)
    swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = sub_1CF73E664();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = type metadata accessor for PairableHostInfo(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v7 = &v4[*(int *)(v6 + 40)];
  v8 = sub_1CF73E814();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1CF6DF534(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;

  if (*a2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1CF73E664();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = (int *)type metadata accessor for PairableHostInfo(0);
  v12 = v11[5];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = v11[6];
  v17 = &v8[v16];
  v18 = &v9[v16];
  v19 = *((_QWORD *)v18 + 1);
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *((_QWORD *)v17 + 1) = v19;
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  *(_QWORD *)&v8[v11[9]] = *(_QWORD *)&v9[v11[9]];
  v20 = v11[10];
  v21 = &v8[v20];
  v22 = &v9[v20];
  v23 = sub_1CF73E814();
  v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24(v21, v22, v23);
  v25 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1CF6DF674(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = *a2;
  if (!*a1)
  {
    if (v6)
    {
      v8 = a2[1];
      *a1 = v6;
      a1[1] = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = a2[1];
  *a1 = v6;
  a1[1] = v7;
  swift_retain();
  swift_release();
LABEL_8:
  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1CF73E664();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  v13 = (int *)type metadata accessor for PairableHostInfo(0);
  v14 = v13[5];
  v15 = &v10[v14];
  v16 = &v11[v14];
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *((_QWORD *)v15 + 1) = *((_QWORD *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = v13[6];
  v18 = &v10[v17];
  v19 = &v11[v17];
  *(_QWORD *)v18 = *(_QWORD *)v19;
  *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10[v13[7]] = v11[v13[7]];
  v10[v13[8]] = v11[v13[8]];
  *(_QWORD *)&v10[v13[9]] = *(_QWORD *)&v11[v13[9]];
  v20 = v13[10];
  v21 = &v10[v20];
  v22 = &v11[v20];
  v23 = sub_1CF73E814();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1CF6DF80C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  if (*a2)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1CF73E664();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = (int *)type metadata accessor for PairableHostInfo(0);
  *(_OWORD *)&v8[v11[5]] = *(_OWORD *)&v9[v11[5]];
  *(_OWORD *)&v8[v11[6]] = *(_OWORD *)&v9[v11[6]];
  v8[v11[7]] = v9[v11[7]];
  v8[v11[8]] = v9[v11[8]];
  *(_QWORD *)&v8[v11[9]] = *(_QWORD *)&v9[v11[9]];
  v12 = v11[10];
  v13 = &v8[v12];
  v14 = &v9[v12];
  v15 = sub_1CF73E814();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  return a1;
}

_QWORD *sub_1CF6DF910(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v6 = *a2;
  if (!*a1)
  {
    if (v6)
    {
      v8 = a2[1];
      *a1 = v6;
      a1[1] = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = a2[1];
  *a1 = v6;
  a1[1] = v7;
  swift_release();
LABEL_8:
  v9 = a3[5];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = sub_1CF73E664();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  v13 = (int *)type metadata accessor for PairableHostInfo(0);
  v14 = v13[5];
  v15 = &v10[v14];
  v16 = &v11[v14];
  v18 = *(_QWORD *)v16;
  v17 = *((_QWORD *)v16 + 1);
  *(_QWORD *)v15 = v18;
  *((_QWORD *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  v19 = v13[6];
  v20 = &v10[v19];
  v21 = &v11[v19];
  v23 = *(_QWORD *)v21;
  v22 = *((_QWORD *)v21 + 1);
  *(_QWORD *)v20 = v23;
  *((_QWORD *)v20 + 1) = v22;
  swift_bridgeObjectRelease();
  v10[v13[7]] = v11[v13[7]];
  v10[v13[8]] = v11[v13[8]];
  *(_QWORD *)&v10[v13[9]] = *(_QWORD *)&v11[v13[9]];
  v24 = v13[10];
  v25 = &v10[v24];
  v26 = &v11[v24];
  v27 = sub_1CF73E814();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = a3[7];
  *((_BYTE *)a1 + a3[6]) = *((_BYTE *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CF6DFA68()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF6DFA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = OUTLINED_FUNCTION_3_13();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t sub_1CF6DFAEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF6DFAF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;

  result = OUTLINED_FUNCTION_3_13();
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
    return __swift_storeEnumTagSinglePayload(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  return result;
}

uint64_t sub_1CF6DFB6C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PairableHostInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1CF6DFBF8()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_14_0();
  return swift_deallocObject();
}

uint64_t sub_1CF6DFC14()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1CF6DFC24()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 16) + 16))();
}

uint64_t sub_1CF6DFC30()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_14_0();
  return swift_deallocObject();
}

void sub_1CF6DFC4C(uint64_t a1)
{
  uint64_t v1;

  sub_1CF6DD5A8(a1, v1);
}

void sub_1CF6DFC54(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_87(a1, a2, a3);
  OUTLINED_FUNCTION_8_9(v3);
  OUTLINED_FUNCTION_1();
}

void sub_1CF6DFC74(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_87(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6DFCA8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_0();
  return swift_deallocObject();
}

void sub_1CF6DFCC4()
{
  sub_1CF6DEB34();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6DFCE0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_27();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1CF6DFD50()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(OUTLINED_FUNCTION_27() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_1CF6DEB90(v0 + v2, *(_QWORD *)(v0 + ((*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFF8)));
}

id sub_1CF6DFD8C(id result, char a2)
{
  if ((a2 & 1) != 0)
    return result;
  return result;
}

uint64_t sub_1CF6DFD98(uint64_t a1)
{
  uint64_t v1;

  return sub_1CF6DF118(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1CF6DFDB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for PairableHostInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1CF6DFDF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_8_9(v3);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6DFE20()
{
  return objectdestroy_36Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_1CF6DFE48()
{
  return objectdestroy_36Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_36Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  swift_release();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_1CF6DFE8C()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32));
  OUTLINED_FUNCTION_1();
}

void OUTLINED_FUNCTION_12_7()
{
  void *v0;

  sub_1CF6A7274(v0, 1);
}

void OUTLINED_FUNCTION_18_7()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1CF6DC3F0(v1, v0);
}

void OUTLINED_FUNCTION_19_6()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_1CF6DC3F0(v1, v0);
}

uint64_t Identifier.description.getter(uint64_t a1)
{
  uint64_t v2;

  v2 = (*(uint64_t (**)(_QWORD))(*(_QWORD *)(a1 + 24) + 16))(*(_QWORD *)(a1 + 16));
  sub_1CF73EF58();
  swift_bridgeObjectRetain();
  sub_1CF73EF58();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Identifier.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;

  v7 = (*(uint64_t (**)(void))(a2 + 8))();
  v9 = v7 < 1;
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    v10 = v7;
    v3 = sub_1CF6E0928(v7);
    v14[1] = v10;
    v15 = 0;
    v14[0] = v11;
    sub_1CF6E0050((uint64_t)v14, &v15, v10, a1, a2);
    v8 = v15;
    v9 = v10 < v15;
    if (v10 >= v15)
    {
      *(_QWORD *)(v3 + 16) = v15;
      v14[0] = v3;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EC0);
      sub_1CF6E07BC();
      result = sub_1CF73EFB8();
      *a3 = result;
      a3[1] = v13;
      return result;
    }
  }
  __break(1u);
  if (v9)
    __break(1u);
  *(_QWORD *)(v3 + 16) = v8;
  result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t sub_1CF6E0050(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v5 = *a2;
  if (*a2 < a3)
  {
    if ((((unint64_t)", device supports >=" >> 61) & ((((unint64_t)", device supports >=" >> 56) & 0xF) == 0)) == 0)
    {
      v8 = (_QWORD *)result;
      while (1)
      {
        v9 = sub_1CF73EF40();
        if (v9 < 0)
          break;
        v10 = v9;
        if (!v9)
          goto LABEL_13;
        v19 = 0;
        MEMORY[0x1D17D3EE8](&v19, 8);
        if (v10 > v19 * v10)
        {
          v11 = -(uint64_t)v10 % v10;
          while (v11 > v19 * v10)
          {
            v19 = 0;
            MEMORY[0x1D17D3EE8](&v19, 8);
          }
        }
        sub_1CF73EF4C();
        v12 = sub_1CF73EFAC();
        v14 = v13;
        result = swift_bridgeObjectRelease();
        v15 = (uint64_t *)(*v8 + 16 * v5);
        *v15 = v12;
        v15[1] = v14;
        if (++v5 >= a3)
        {
          *a2 = a3;
          return result;
        }
      }
      __break(1u);
LABEL_13:
      __break(1u);
    }
    v16 = a5;
    v17 = a4;
    swift_bridgeObjectRelease();
    v19 = 0;
    v20 = 0xE000000000000000;
    sub_1CF73F348();
    swift_bridgeObjectRelease();
    v19 = 0x206E6920677542;
    v20 = 0xE700000000000000;
    type metadata accessor for Identifier(0, v17, v16, v18);
    sub_1CF73F87C();
    sub_1CF73EF58();
    swift_bridgeObjectRelease();
    sub_1CF73EF58();
    result = sub_1CF73F450();
    __break(1u);
  }
  return result;
}

uint64_t Identifier.init(value:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t Identifier.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1CF73EF34();
  return swift_bridgeObjectRelease();
}

uint64_t static Identifier.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1CF73F690();
}

uint64_t sub_1CF6E02F4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1CF6E0370()
{
  return 0x65756C6176;
}

uint64_t sub_1CF6E0384()
{
  return sub_1CF69E8BC();
}

uint64_t sub_1CF6E038C()
{
  return sub_1CF6B4870();
}

uint64_t sub_1CF6E0398()
{
  return sub_1CF69EA24();
}

uint64_t sub_1CF6E03A4()
{
  sub_1CF73F7EC();
  sub_1CF69EA24();
  return sub_1CF73F810();
}

uint64_t sub_1CF6E03E4()
{
  return sub_1CF6E0370();
}

uint64_t sub_1CF6E03F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6E02F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CF6E0420()
{
  return sub_1CF69E8C4();
}

uint64_t sub_1CF6E0440@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1CF69E8BC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1CF6E0470(uint64_t a1)
{
  MEMORY[0x1D17D3DEC](&unk_1CF7457A0, a1);
  return sub_1CF73F864();
}

uint64_t sub_1CF6E04A4(uint64_t a1)
{
  MEMORY[0x1D17D3DEC](&unk_1CF7457A0, a1);
  return sub_1CF73F870();
}

void Identifier.encode(to:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = type metadata accessor for Identifier.CodingKeys(255, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  MEMORY[0x1D17D3DEC](&unk_1CF7457A0, v6);
  v7 = sub_1CF73F630();
  v11 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v10 - v8;
  v10 = *v4;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF73F858();
  sub_1CF73F5C4();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v7);
  OUTLINED_FUNCTION_0_0();
}

uint64_t Identifier.hashValue.getter()
{
  sub_1CF73F7EC();
  Identifier.hash(into:)();
  return sub_1CF73F810();
}

void Identifier.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v7 = type metadata accessor for Identifier.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1D17D3DEC](&unk_1CF7457A0, v7);
  v8 = sub_1CF73F570();
  MEMORY[0x1E0C80A78](v8);
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF73F840();
  if (!v5)
  {
    v9 = sub_1CF73F4F8();
    v11 = v10;
    OUTLINED_FUNCTION_1_13();
    *a5 = v9;
    a5[1] = v11;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1CF6E0740()
{
  sub_1CF73F7EC();
  Identifier.hash(into:)();
  return sub_1CF73F810();
}

void sub_1CF6E0780(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  Identifier.init(from:)(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3, a4);
}

void sub_1CF6E079C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  Identifier.encode(to:)(a1, a2, a3, a4);
}

uint64_t sub_1CF6E07B0(uint64_t a1)
{
  return sub_1CF6E0928(a1);
}

unint64_t sub_1CF6E07BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFBA1EC8;
  if (!qword_1EFBA1EC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFBA1EC0);
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EFBA1EC8);
  }
  return result;
}

uint64_t type metadata accessor for Identifier.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Identifier.CodingKeys);
}

void sub_1CF6E080C()
{
  JUMPOUT(0x1D17D3DECLL);
}

uint64_t dispatch thunk of static IdentifierCategory.numberOfCharacters.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static IdentifierCategory.prefix.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1CF6E082C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for Identifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Identifier);
}

uint64_t sub_1CF6E0840()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_1CF6E0848(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CF6E0888 + 4 * byte_1CF745570[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CF6E08A8 + 4 * byte_1CF745575[v4]))();
}

_BYTE *sub_1CF6E0888(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CF6E08A8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6E08B0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6E08B8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6E08C0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6E08C8(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_1CF6E08D4()
{
  JUMPOUT(0x1D17D3DECLL);
}

void sub_1CF6E08E4()
{
  JUMPOUT(0x1D17D3DECLL);
}

void sub_1CF6E08F4()
{
  JUMPOUT(0x1D17D3DECLL);
}

uint64_t sub_1CF6E0904(uint64_t a1)
{
  return sub_1CF6E0928(a1);
}

uint64_t sub_1CF6E0910(uint64_t a1)
{
  return sub_1CF6E0928(a1);
}

uint64_t sub_1CF6E091C(uint64_t a1)
{
  return sub_1CF6E0928(a1);
}

uint64_t sub_1CF6E0928(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_1CF73F444();
    __break(1u);
  }
  else if (a1)
  {
    result = sub_1CF73F060();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1CF6E09B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CF6E0B14(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], a2);
}

void sub_1CF6E09C4(uint64_t a1, uint64_t a2)
{
  __asm { BR              X12 }
}

uint64_t sub_1CF6E0A0C(unsigned __int8 a1, uint64_t a2)
{
  unsigned __int8 v2;

  if ((a2 & 0xFF000000000000) != 0)
    v2 = a1;
  else
    v2 = 0;
  return v2 | (((a2 & 0xFF000000000000) == 0) << 8);
}

uint64_t sub_1CF6E0B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1CF6E0B14(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0CCE3C0], a2);
}

uint64_t sub_1CF6E0B14@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = a2(0);
  v7 = v6;
  if (v5)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80)), v6);
    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  return __swift_storeEnumTagSinglePayload(a3, v8, 1, v7);
}

double sub_1CF6E0B8C@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    sub_1CF6B3120(a1 + 32, (uint64_t)a2);
  }
  else
  {
    result = 0.0;
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
  }
  return result;
}

uint64_t IPv6Address.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD v9[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA2050);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  OUTLINED_FUNCTION_3_14();
  sub_1CF73F834();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_0Tm(v9, v9[3]);
    OUTLINED_FUNCTION_3_14();
    sub_1CF73F69C();
    swift_bridgeObjectRetain();
    sub_1CF73E9C4();
    v7 = sub_1CF73E9AC();
    if (__swift_getEnumTagSinglePayload(v3, 1, v7) == 1)
    {
      sub_1CF68DE94(v3, (uint64_t *)&unk_1EFBA2050);
      sub_1CF73F348();
      swift_bridgeObjectRelease();
      sub_1CF73EF58();
      swift_bridgeObjectRelease();
      sub_1CF73F384();
      swift_allocError();
      sub_1CF73F36C();
      swift_bridgeObjectRelease();
      swift_willThrow();
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, v3, v7);
    }
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v9);
  }
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
}

uint64_t IPv6Address.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[24];
  uint64_t v9;

  v3 = v1;
  v5 = sub_1CF73E9AC();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_15();
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF73F84C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, v3, v5);
  sub_1CF73EF10();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_1CF73F6B4();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

void __swiftcall IPv6Address.copy_sockaddr_in6()(sockaddr_in6 *__return_ptr retstr)
{
  uint64_t v1;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2048);
  MEMORY[0x1E0C80A78](v1);
  sub_1CF73E994();
  __asm { BR              X10 }
}

uint64_t sub_1CF6E0F24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  OUTLINED_FUNCTION_0_18();
  sub_1CF73E9A0();
  v1 = sub_1CF73EA00();
  if (__swift_getEnumTagSinglePayload(v0, 1, v1) == 1)
  {
    sub_1CF68DE94(v0, &qword_1EFBA2048);
  }
  else
  {
    v2 = sub_1CF73E9F4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
    if ((v2 & 0x8000000000000000) != 0 || HIDWORD(v2))
    {
      OUTLINED_FUNCTION_3_1();
      sub_1CF73F444();
      __break(1u);
      JUMPOUT(0x1CF6E10E0);
    }
  }
  return 7708;
}

BOOL IPv6Address.isUniqueLocalAddress.getter()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  __int16 v3;
  __int16 v4;

  v0 = sub_1CF73E994();
  v2 = v1;
  sub_1CF6E09C4(v0, v1);
  v4 = v3;
  sub_1CF6933C0(v0, v2);
  return (v4 & 0x1FF) == 253;
}

uint64_t sub_1CF6E1144@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return IPv6Address.init(from:)(a1, a2);
}

uint64_t sub_1CF6E1158(_QWORD *a1)
{
  return IPv6Address.encode(to:)(a1);
}

uint64_t sub_1CF6E116C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = sub_1CF73E430();
  if (v2)
  {
    v3 = v2;
    result = sub_1CF73E454();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v5 = v3 + a1 - result;
  }
  else
  {
    v5 = 0;
  }
  result = sub_1CF73E448();
  if (v5)
    return *(_QWORD *)v5;
LABEL_8:
  __break(1u);
  return result;
}

uint64_t static IPv6Header.minHeaderLength.getter()
{
  return 40;
}

uint64_t static IPv6Header.addressLength.getter()
{
  return 16;
}

uint64_t IPv6Header.headerLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t (*IPv6Header.headerLength.modify())()
{
  return nullsub_1;
}

uint64_t (*IPv6Header.payloadLength.modify())()
{
  return nullsub_1;
}

uint64_t (*IPv6Header.ipProtocol.modify())()
{
  return nullsub_1;
}

uint64_t (*IPv6Header.sourceAddress.modify())()
{
  return nullsub_1;
}

uint64_t (*IPv6Header.destinationAddress.modify())()
{
  return nullsub_1;
}

uint64_t IPv6Header.init(_:)(uint64_t a1, uint64_t a2)
{
  if (OUTLINED_FUNCTION_19_7() >= 40)
    __asm { BR              X11 }
  sub_1CF6AA5E0();
  sub_1CF73F738();
  sub_1CF73F348();
  swift_bridgeObjectRelease();
  sub_1CF73E5C8();
  OUTLINED_FUNCTION_10_9();
  sub_1CF73EF58();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_10_9();
  sub_1CF73EF58();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_1();
  sub_1CF6ABB3C();
  OUTLINED_FUNCTION_105();
  sub_1CF73F780();
  swift_willThrow();
  return OUTLINED_FUNCTION_6_12();
}

uint64_t sub_1CF6E15F8()
{
  return 40;
}

uint64_t sub_1CF6E1600()
{
  return 16;
}

uint64_t sub_1CF6E161C(uint64_t a1, uint64_t a2)
{
  return IPv6Header.init(_:)(a1, a2);
}

uint64_t static IPv4Header.minHeaderLength.getter()
{
  return 20;
}

uint64_t static IPv4Header.addressLength.getter()
{
  return 4;
}

uint64_t IPv4Header.headerLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t IPv4Header.headerLength.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*IPv4Header.headerLength.modify())()
{
  return nullsub_1;
}

uint64_t IPv4Header.payloadLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t IPv4Header.payloadLength.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*IPv4Header.payloadLength.modify())()
{
  return nullsub_1;
}

uint64_t IPv4Header.ipProtocol.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t IPv4Header.ipProtocol.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*IPv4Header.ipProtocol.modify())()
{
  return nullsub_1;
}

uint64_t IPv4Header.sourceAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_21_4();
  return v1;
}

void _s19RemotePairingDevice10IPv6HeaderV13sourceAddress10Foundation4DataVvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CF6933C0(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  OUTLINED_FUNCTION_40();
}

uint64_t (*IPv4Header.sourceAddress.modify())()
{
  return nullsub_1;
}

uint64_t IPv4Header.destinationAddress.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  OUTLINED_FUNCTION_21_4();
  return v1;
}

void _s19RemotePairingDevice10IPv6HeaderV18destinationAddress10Foundation4DataVvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_1CF6933C0(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  OUTLINED_FUNCTION_40();
}

uint64_t (*IPv4Header.destinationAddress.modify())()
{
  return nullsub_1;
}

uint64_t IPv4Header.init(_:)(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  if (OUTLINED_FUNCTION_19_7() >= 20)
  {
    v3 = OUTLINED_FUNCTION_20_7();
    if ((v3 & 0xF0) == 0x40 && 4 * (v3 & 0xFu) >= 0x14)
      __asm { BR              X11 }
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_9_6();
    OUTLINED_FUNCTION_15_10();
    v4 = OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_18_8(v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  }
  else
  {
    sub_1CF6AA5E0();
    sub_1CF73F738();
    sub_1CF73F348();
    swift_bridgeObjectRelease();
    sub_1CF73E5C8();
    OUTLINED_FUNCTION_7_10();
    sub_1CF73EF58();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_0_19();
    OUTLINED_FUNCTION_7_10();
    sub_1CF73EF58();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_1();
    sub_1CF6ABB3C();
    OUTLINED_FUNCTION_105();
  }
  sub_1CF73F780();
  swift_willThrow();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_1CF6E19AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  if (__OFADD__(v3, 2))
  {
    __break(1u);
    goto LABEL_5;
  }
  if (__OFADD__(v3 + 2, 2))
  {
LABEL_5:
    __break(1u);
    JUMPOUT(0x1CF6E1B4CLL);
  }
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))((char *)&loc_1CF6E19D4 + *((int *)qword_1CF6E1B78 + a3)))(a1, a2, BYTE6(v4));
}

uint64_t sub_1CF6E1B88()
{
  return 20;
}

uint64_t sub_1CF6E1B90(uint64_t a1, uint64_t a2)
{
  return IPv4Header.init(_:)(a1, a2);
}

uint64_t sub_1CF6E1BA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  __int16 v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v5 = a1;
  v6 = a2;
  v7 = BYTE2(a2);
  v8 = BYTE3(a2);
  v9 = BYTE4(a2);
  v10 = BYTE5(a2);
  return bswap32(*(unsigned __int16 *)((char *)&v5 + a4)) >> 16;
}

uint64_t sub_1CF6E1C60(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int16 *)(a2 + a1);
}

uint64_t sub_1CF6E1C68(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a2 + a1);
}

uint64_t sub_1CF6E1C70(uint64_t a1, uint64_t a2)
{
  return *(unsigned int *)(a2 + a1);
}

uint64_t sub_1CF6E1C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v6 = sub_1CF73E430();
  if (v6)
  {
    v7 = v6;
    result = sub_1CF73E454();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v9 = v7 + a1 - result;
  }
  else
  {
    v9 = 0;
  }
  result = sub_1CF73E448();
  if (v9)
    return bswap32(*(unsigned __int16 *)(v9 + a4)) >> 16;
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1CF6E1CF4@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, _WORD *a3@<X8>)
{
  if (result)
  {
    result = sub_1CF6E1C60(a2, result);
    *a3 = bswap32(result) >> 16;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t dispatch thunk of static IPHeader.minHeaderLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of static IPHeader.addressLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of IPHeader.headerLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of IPHeader.payloadLength.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of IPHeader.ipProtocol.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of IPHeader.sourceAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of IPHeader.destinationAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of IPHeader.init(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

ValueMetadata *type metadata accessor for IPv6Header()
{
  return &type metadata for IPv6Header;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderVwxx_0(uint64_t a1)
{
  sub_1CF6933C0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  return sub_1CF6933C0(*(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
}

void _s19RemotePairingDevice10IPv6HeaderVwcp_0(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_OWORD *)a1 = *a2;
  OUTLINED_FUNCTION_4_12(a1, (uint64_t)a2);
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v3;
  OUTLINED_FUNCTION_8_10();
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)(a1 + 48) = a2;
  OUTLINED_FUNCTION_40();
}

void _s19RemotePairingDevice10IPv6HeaderVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  OUTLINED_FUNCTION_4_12((uint64_t)a1, (uint64_t)a2);
  v6 = a1[3];
  v7 = a1[4];
  a1[3] = v2;
  a1[4] = v3;
  sub_1CF6933C0(v6, v7);
  OUTLINED_FUNCTION_8_10();
  v8 = a1[5];
  v9 = a1[6];
  a1[5] = v2;
  a1[6] = a2;
  sub_1CF6933C0(v8, v9);
  OUTLINED_FUNCTION_40();
}

uint64_t _s19RemotePairingDevice10IPv6HeaderVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_1CF6933C0(v4, v5);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_1CF6933C0(v6, v7);
  return a1;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderVwet_0(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xD && *(_BYTE *)(a1 + 56))
    {
      v2 = *(_DWORD *)a1 + 12;
    }
    else
    {
      v2 = (((*(_QWORD *)(a1 + 32) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 32) >> 60) & 3))) ^ 0xF;
      if (v2 >= 0xC)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s19RemotePairingDevice10IPv6HeaderVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 13;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
    {
      *(_QWORD *)(result + 24) = 0;
      *(_QWORD *)(result + 32) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IPv4Header()
{
  return &type metadata for IPv4Header;
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return sub_1CF73E55C();
}

char *OUTLINED_FUNCTION_18_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13)
{
  return &a13;
}

uint64_t OUTLINED_FUNCTION_19_7()
{
  return sub_1CF73E5C8();
}

uint64_t OUTLINED_FUNCTION_20_7()
{
  return sub_1CF73E5F8();
}

uint64_t OUTLINED_FUNCTION_21_4()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6934BC(v0, v1);
}

void sub_1CF6E1FF8(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_1CF6E205C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char v25;
  uint64_t v26;

  v4 = v26;
  if (v26)
  {
    *(_QWORD *)(v3 - 104) = MEMORY[0x1E0DEE9D8];
    v5 = v26 & ~(v26 >> 63);
    sub_1CF6A2EC4();
    v6 = a1;
    v7 = *(_QWORD *)(v3 - 104);
    v24 = v1;
    if ((_DWORD)v2)
    {
      if ((_DWORD)v2 == 1)
        v8 = (int)a1;
      else
        v8 = *(_QWORD *)(a1 + 16);
      if (v26 < 0)
        goto LABEL_42;
    }
    else
    {
      if (v26 < 0)
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
      }
      v8 = 0;
    }
    *(_QWORD *)(v3 - 144) = v2;
    while (v5)
    {
      if ((_DWORD)v2)
      {
        if ((_DWORD)v2 == 1)
        {
          if (v8 < (int)a1 || v8 >= a1 >> 32)
            goto LABEL_36;
          v10 = sub_1CF73E430();
          if (!v10)
            goto LABEL_44;
          v11 = v10;
          v12 = sub_1CF73E454();
          v13 = v8 - v12;
          if (__OFSUB__(v8, v12))
            goto LABEL_39;
        }
        else
        {
          if (v8 < *(_QWORD *)(v6 + 16))
            goto LABEL_38;
          if (v8 >= *(_QWORD *)(v6 + 24))
            goto LABEL_40;
          v15 = sub_1CF73E430();
          if (!v15)
            goto LABEL_45;
          v11 = v15;
          v16 = sub_1CF73E454();
          v13 = v8 - v16;
          if (__OFSUB__(v8, v16))
            goto LABEL_41;
        }
        v14 = *(_BYTE *)(v11 + v13);
        v6 = a1;
      }
      else
      {
        if (v8 >= v26)
          goto LABEL_37;
        *(_BYTE *)(v3 - 118) = v6;
        *(_WORD *)(v3 - 117) = *(_WORD *)((char *)&a1 + 1);
        *(_BYTE *)(v3 - 115) = BYTE3(a1);
        *(_BYTE *)(v3 - 114) = v25;
        *(_WORD *)(v3 - 113) = *(_WORD *)((char *)&a1 + 5);
        *(_BYTE *)(v3 - 111) = HIBYTE(a1);
        *(_DWORD *)(v3 - 110) = v24;
        *(_WORD *)(v3 - 106) = WORD2(v24);
        v14 = *(_BYTE *)(v3 - 118 + v8);
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EB0);
      v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_1CF742850;
      *(_QWORD *)(v17 + 56) = MEMORY[0x1E0DEDE70];
      *(_QWORD *)(v17 + 64) = MEMORY[0x1E0DEDEC8];
      *(_BYTE *)(v17 + 32) = v14;
      v18 = sub_1CF73EEEC();
      v20 = v19;
      *(_QWORD *)(v3 - 104) = v7;
      v21 = *(_QWORD *)(v7 + 16);
      if (v21 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_1CF6A2EC4();
        v6 = a1;
        v7 = *(_QWORD *)(v3 - 104);
      }
      *(_QWORD *)(v7 + 16) = v21 + 1;
      v22 = v7 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v18;
      *(_QWORD *)(v22 + 40) = v20;
      ++v8;
      --v5;
      --v4;
      v2 = *(_QWORD *)(v3 - 144);
      if (!v4)
      {
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    JUMPOUT(0x1CF6E2388);
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t static Data.randomBytes(ofLength:)()
{
  uint64_t v0;
  int v1;
  uint64_t result;
  _QWORD v3[2];

  v3[0] = MEMORY[0x1D17D21CC]();
  v3[1] = v0;
  sub_1CF6E2940((uint64_t)v3);
  if (!v1)
    return v3[0];
  result = sub_1CF73F450();
  __break(1u);
  return result;
}

void Data.parseBE<A>(_:offset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X11 }
}

void sub_1CF6E2484(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4;

  if (__OFADD__(a3, a2))
  {
    __break(1u);
  }
  else if (!__OFADD__(a3 + a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64)))
  {
    __asm { BR              X13 }
  }
  __break(1u);
  JUMPOUT(0x1CF6E25B4);
}

uint64_t sub_1CF6E25D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  sub_1CF6E2674(v6, v7, a4, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1CF73F414();
}

uint64_t sub_1CF6E2674@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (a2)
    return sub_1CF6E2800(result, a2, a3, a4);
  __break(1u);
  return result;
}

uint64_t Data.HexStringEncodingOptions.init(separator:uppercase:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = a3;
  return result;
}

void static Data.HexStringEncodingOptions.authTag.getter(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_0_20(a1, (__n128)xmmword_1CF7458F0);
}

double static Data.HexStringEncodingOptions.bluetoothAddress.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 58;
  *(_OWORD *)a1 = xmmword_1CF745900;
  *(_BYTE *)(a1 + 16) = 1;
  return result;
}

void static Data.HexStringEncodingOptions.macAddress.getter(__n128 *a1@<X8>)
{
  OUTLINED_FUNCTION_0_20(a1, (__n128)xmmword_1CF745900);
}

uint64_t Data.HexStringEncodingOptions.separator.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Data.HexStringEncodingOptions.uppercase.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t Data.hexEncodedString(options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  swift_bridgeObjectRetain();
  sub_1CF6E1FF8(a2, a3);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7E90);
  sub_1CF6E2C08();
  v5 = sub_1CF73EE74();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1CF6E2800@<X0>(uint64_t isStackAllocationSafe@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  void *v14;
  size_t v15;
  void *v16;
  uint64_t v17;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  if ((v6 & (unint64_t)(v6 + 1)) != 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v9 = isStackAllocationSafe;
  if (v6 > 0xF
    || *(uint64_t *)(v5 + 72) >= 1025
    && (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), !(_DWORD)isStackAllocationSafe))
  {
    v14 = (void *)swift_slowAlloc();
    v15 = *(_QWORD *)(v5 + 64);
    if ((v15 & 0x8000000000000000) == 0)
    {
      v16 = v14;
      memcpy(v14, (const void *)(a2 + v9), v15);
      (*(void (**)(uint64_t, void *, uint64_t))(v5 + 16))(a4, v16, a3);
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v11 = (char *)&v17 - v10;
  v12 = *(_QWORD *)(v5 + 64);
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    JUMPOUT(0x1D17D3ED0);
  }
  memcpy((char *)&v17 - v10, (const void *)(a2 + v9), v12);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 16))(a4, v11, a3);
}

void sub_1CF6E2940(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1CF6E299C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t bytes, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  _QWORD *v17;
  size_t v18;
  uint64_t v19;
  uint64_t result;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned __int8 v24;
  unsigned __int8 v25;
  unsigned __int8 v26;

  v22 = v19;
  LOWORD(v23) = a1;
  BYTE2(v23) = BYTE2(a1);
  HIBYTE(v23) = BYTE3(a1);
  v24 = BYTE4(a1);
  v25 = BYTE5(a1);
  v26 = BYTE6(a1);
  result = SecRandomCopyBytes((SecRandomRef)*MEMORY[0x1E0CD7000], v18, &v22);
  v21 = v23 | ((unint64_t)v24 << 32) | ((unint64_t)v25 << 40) | ((unint64_t)v26 << 48);
  *v17 = v22;
  v17[1] = v21;
  return result;
}

uint64_t sub_1CF6E2BEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CF6E25D4(a1, a2, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16));
}

unint64_t sub_1CF6E2C08()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED8F7E98;
  if (!qword_1ED8F7E98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F7E90);
    result = MEMORY[0x1D17D3DEC](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED8F7E98);
  }
  return result;
}

uint64_t sub_1CF6E2C50(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s24HexStringEncodingOptionsVwca(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s24HexStringEncodingOptionsVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t _s24HexStringEncodingOptionsVwet(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s24HexStringEncodingOptionsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Data.HexStringEncodingOptions()
{
  return &type metadata for Data.HexStringEncodingOptions;
}

uint64_t sub_1CF6E2DE0(uint64_t a1, uint64_t a2, uint64_t a3, size_t a4)
{
  uint64_t result;
  uint64_t v7;
  void *v8;

  result = sub_1CF73E430();
  if (result)
  {
    v7 = result;
    result = sub_1CF73E454();
    if (!__OFSUB__(a1, result))
    {
      v8 = (void *)(v7 + a1 - result);
      sub_1CF73E448();
      return SecRandomCopyBytes((SecRandomRef)*MEMORY[0x1E0CD7000], a4, v8);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void PairableHostInfo.endpoint.getter()
{
  OUTLINED_FUNCTION_25_4();
  _s19RemotePairingDevice014CreateWirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvg_0();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for PairableHostInfo(uint64_t a1)
{
  return sub_1CF6A36B8(a1, qword_1EFBA2888);
}

uint64_t PairableHostInfo.identifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_34_5();
  return OUTLINED_FUNCTION_65(a1, v1, v4, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t PairableHostInfo.identifier.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_27();
  OUTLINED_FUNCTION_34_5();
  return OUTLINED_FUNCTION_65(v1, a1, v4, *(uint64_t (**)(void))(v3 + 40));
}

uint64_t (*PairableHostInfo.identifier.modify())()
{
  return nullsub_1;
}

uint64_t PairableHostInfo.name.getter()
{
  uint64_t v0;

  type metadata accessor for PairableHostInfo(0);
  OUTLINED_FUNCTION_86();
  return v0;
}

void PairableHostInfo.name.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_19_8();
  OUTLINED_FUNCTION_35_2();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_40();
}

uint64_t (*PairableHostInfo.name.modify())(_QWORD)
{
  type metadata accessor for PairableHostInfo(0);
  return nullsub_1;
}

uint64_t PairableHostInfo.model.getter()
{
  uint64_t v0;

  type metadata accessor for PairableHostInfo(0);
  OUTLINED_FUNCTION_86();
  return v0;
}

void PairableHostInfo.model.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_19_8();
  OUTLINED_FUNCTION_35_2();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_40();
}

uint64_t (*PairableHostInfo.model.modify())(_QWORD)
{
  type metadata accessor for PairableHostInfo(0);
  return nullsub_1;
}

uint64_t PairableHostInfo.available.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PairableHostInfo(0) + 28));
}

void PairableHostInfo.available.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_27_5() + 28)) = v0;
  OUTLINED_FUNCTION_1();
}

uint64_t (*PairableHostInfo.available.modify())(_QWORD)
{
  type metadata accessor for PairableHostInfo(0);
  return nullsub_1;
}

uint64_t PairableHostInfo.paired.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for PairableHostInfo(0) + 32));
}

void PairableHostInfo.paired.setter()
{
  char v0;
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_27_5() + 32)) = v0;
  OUTLINED_FUNCTION_1();
}

uint64_t (*PairableHostInfo.paired.modify())(_QWORD)
{
  type metadata accessor for PairableHostInfo(0);
  return nullsub_1;
}

uint64_t PairableHostInfo.monotonicIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PairableHostInfo(0) + 36));
}

void PairableHostInfo.monotonicIdentifier.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(type metadata accessor for PairableHostInfo(0) + 36)) = a1;
  OUTLINED_FUNCTION_1();
}

uint64_t (*PairableHostInfo.monotonicIdentifier.modify())(_QWORD)
{
  type metadata accessor for PairableHostInfo(0);
  return nullsub_1;
}

void sub_1CF6E3138()
{
  swift_unknownObjectRetain();
  PairableHostInfo.endpoint.setter();
}

void PairableHostInfo.endpoint.setter()
{
  OUTLINED_FUNCTION_25_4();
  _s19RemotePairingDevice014CreateWirelessB14SessionRequestV8endpointSo13OS_xpc_object_pvs_0();
  OUTLINED_FUNCTION_1();
}

void (*PairableHostInfo.endpoint.modify(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  OUTLINED_FUNCTION_25_4();
  v2[4] = sub_1CF73E7F0();
  return sub_1CF69F314;
}

uint64_t PairableHostInfo.init(identifier:name:model:available:paired:monotonicIdentifier:endpoint:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  v15 = (int *)type metadata accessor for PairableHostInfo(0);
  v16 = (_QWORD *)(a9 + v15[6]);
  v17 = OUTLINED_FUNCTION_27();
  v18 = *(_QWORD *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(a9, a1, v17);
  v19 = (_QWORD *)(a9 + v15[5]);
  *v19 = a2;
  v19[1] = a3;
  *v16 = a4;
  v16[1] = a5;
  *(_BYTE *)(a9 + v15[7]) = a6;
  *(_BYTE *)(a9 + v15[8]) = a7;
  *(_QWORD *)(a9 + v15[9]) = a8;
  sub_1CF73E7E4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(a1, v17);
}

uint64_t sub_1CF6E32C0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v11;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (sub_1CF73F690() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000;
      if (v7 || (sub_1CF73F690() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6C62616C69617661 && a2 == 0xE900000000000065;
        if (v8 || (sub_1CF73F690() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x646572696170 && a2 == 0xE600000000000000;
          if (v9 || (sub_1CF73F690() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000013 && a2 == 0x80000001CF753840 || (sub_1CF73F690() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x746E696F70646E65 && a2 == 0xE800000000000000)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            v11 = sub_1CF73F690();
            swift_bridgeObjectRelease();
            if ((v11 & 1) != 0)
              return 6;
            else
              return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_1CF6E3580(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1CF6E35B8
                                                            + 4 * asc_1CF745960[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1CF6E35B8()
{
  return 1701667182;
}

uint64_t sub_1CF6E35C8()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_1CF6E35DC()
{
  return 0x6C62616C69617661;
}

uint64_t sub_1CF6E35F8()
{
  return 0x646572696170;
}

unint64_t sub_1CF6E360C()
{
  return 0xD000000000000013;
}

uint64_t sub_1CF6E3628()
{
  return 0x746E696F70646E65;
}

uint64_t sub_1CF6E3640()
{
  unsigned __int8 *v0;

  return sub_1CF6E3580(*v0);
}

uint64_t sub_1CF6E3648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6E32C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF6E366C()
{
  sub_1CF6E38E8();
  return sub_1CF73F864();
}

uint64_t sub_1CF6E3694()
{
  sub_1CF6E38E8();
  return sub_1CF73F870();
}

uint64_t PairableHostInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2790);
  OUTLINED_FUNCTION_31_4();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_34();
  v8 = v7 - v6;
  __swift_project_boxed_opaque_existential_0Tm(a1, a1[3]);
  sub_1CF6E38E8();
  sub_1CF73F858();
  sub_1CF73E664();
  sub_1CF6935F8(&qword_1EFBA13F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  OUTLINED_FUNCTION_13_1();
  if (!v2)
  {
    OUTLINED_FUNCTION_3_13();
    sub_1CF73F5C4();
    sub_1CF73F588();
    OUTLINED_FUNCTION_252();
    OUTLINED_FUNCTION_252();
    sub_1CF73F624();
    sub_1CF73E814();
    sub_1CF6935F8(&qword_1EFBA1540, (uint64_t (*)(uint64_t))MEMORY[0x1E0D4D2D0], MEMORY[0x1E0D4D2E0]);
    OUTLINED_FUNCTION_13_1();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v8, v1);
}

unint64_t sub_1CF6E38E8()
{
  unint64_t result;

  result = qword_1EFBA2798;
  if (!qword_1EFBA2798)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7462CC, &type metadata for PairableHostInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2798);
  }
  return result;
}

void PairableHostInfo.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t *v28;
  uint64_t v29;

  OUTLINED_FUNCTION_2();
  v6 = v5;
  v23 = v7;
  sub_1CF73E814();
  OUTLINED_FUNCTION_31_4();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_28();
  v9 = sub_1CF73E664();
  v26 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_14();
  v24 = v11;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA27A0);
  v12 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v13 = OUTLINED_FUNCTION_10_10();
  type metadata accessor for PairableHostInfo(v13);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v14);
  OUTLINED_FUNCTION_34();
  v29 = v17 - v16;
  v18 = (uint64_t *)(v17 - v16 + v15[6]);
  *v18 = 0;
  v18[1] = 0;
  v27 = v15;
  v28 = v18;
  __swift_project_boxed_opaque_existential_0Tm(v6, v6[3]);
  sub_1CF6E38E8();
  sub_1CF73F840();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1CF6935F8(&qword_1EFBA1410, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    OUTLINED_FUNCTION_30_4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v29, v24, v9);
    v19 = sub_1CF73F4F8();
    v20 = (uint64_t *)(v29 + v27[5]);
    *v20 = v19;
    v20[1] = v21;
    *v28 = sub_1CF73F4BC();
    v28[1] = v22;
    *(_BYTE *)(v29 + v27[7]) = OUTLINED_FUNCTION_17_8() & 1;
    *(_BYTE *)(v29 + v27[8]) = OUTLINED_FUNCTION_17_8() & 1;
    *(_QWORD *)(v29 + v27[9]) = sub_1CF73F558();
    sub_1CF6935F8(&qword_1EFBA1550, (uint64_t (*)(uint64_t))MEMORY[0x1E0D4D2D0], MEMORY[0x1E0D4D2E8]);
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_7_11(v4, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v29 + v27[10], v2, v0);
    sub_1CF6E42D0(v29, v23, type metadata accessor for PairableHostInfo);
    __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v6);
    sub_1CF6DC3F0(v29, type metadata accessor for PairableHostInfo);
  }
  OUTLINED_FUNCTION_0_0();
}

uint64_t sub_1CF6E3CF8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001CF753860 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001CF753880)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1CF6E3DE0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0xD000000000000011;
}

uint64_t sub_1CF6E3E1C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_1CF6E3E88()
{
  PairableHostInfo.init(from:)();
}

uint64_t sub_1CF6E3E9C(_QWORD *a1)
{
  return PairableHostInfo.encode(to:)(a1);
}

unint64_t sub_1CF6E3EB0()
{
  char *v0;

  return sub_1CF6E3DE0(*v0);
}

uint64_t sub_1CF6E3EB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6E3CF8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF6E3EDC()
{
  sub_1CF6E4294();
  return sub_1CF73F864();
}

uint64_t sub_1CF6E3F04()
{
  sub_1CF6E4294();
  return sub_1CF73F870();
}

uint64_t sub_1CF6E3F2C()
{
  sub_1CF6E4370();
  return sub_1CF73F864();
}

uint64_t sub_1CF6E3F54()
{
  sub_1CF6E4370();
  return sub_1CF73F870();
}

uint64_t sub_1CF6E3F7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6E3E1C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1CF6E3FA4()
{
  sub_1CF6E42F8();
  return sub_1CF73F864();
}

uint64_t sub_1CF6E3FCC()
{
  sub_1CF6E42F8();
  return sub_1CF73F870();
}

void DeviceServiceEvent.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_2();
  v27 = v0;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA27A8);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  v23 = v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA27B0);
  v21 = *(_QWORD *)(v8 - 8);
  v22 = v8;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_34();
  v12 = v11 - v10;
  OUTLINED_FUNCTION_3_13();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v13);
  v14 = OUTLINED_FUNCTION_10_10();
  type metadata accessor for DeviceServiceEvent(v14);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_13();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA27B8);
  v26 = *(_QWORD *)(v16 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_34();
  v20 = v19 - v18;
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  sub_1CF6E4294();
  sub_1CF73F858();
  sub_1CF6E42D0(v27, v1, type metadata accessor for DeviceServiceEvent);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_26_5();
    OUTLINED_FUNCTION_18_9();
    sub_1CF6E4334();
    sub_1CF73F5F4();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  else
  {
    sub_1CF6E4B18(v1, v2, type metadata accessor for PairableHostInfo);
    sub_1CF6E4370();
    OUTLINED_FUNCTION_18_9();
    sub_1CF6935F8((unint64_t *)&unk_1EFBA1920, type metadata accessor for PairableHostInfo, (uint64_t)&protocol conformance descriptor for PairableHostInfo);
    sub_1CF73F5F4();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v12, v22);
    sub_1CF6DC3F0(v2, type metadata accessor for PairableHostInfo);
  }
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v20, v16);
  OUTLINED_FUNCTION_0_0();
}

uint64_t type metadata accessor for DeviceServiceEvent(uint64_t a1)
{
  return sub_1CF6A36B8(a1, qword_1EFBA2948);
}

unint64_t sub_1CF6E4294()
{
  unint64_t result;

  result = qword_1EFBA27C0;
  if (!qword_1EFBA27C0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF74627C, &type metadata for DeviceServiceEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA27C0);
  }
  return result;
}

void sub_1CF6E42D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  OUTLINED_FUNCTION_87(a1, a2, a3);
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_122(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16));
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1CF6E42F8()
{
  unint64_t result;

  result = qword_1EFBA27C8;
  if (!qword_1EFBA27C8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF74622C, &type metadata for DeviceServiceEvent.PairingChallengeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA27C8);
  }
  return result;
}

unint64_t sub_1CF6E4334()
{
  unint64_t result;

  result = qword_1EFBA27D0;
  if (!qword_1EFBA27D0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for PairingChallengeEvent, &type metadata for PairingChallengeEvent);
    atomic_store(result, (unint64_t *)&qword_1EFBA27D0);
  }
  return result;
}

unint64_t sub_1CF6E4370()
{
  unint64_t result;

  result = qword_1EFBA27D8;
  if (!qword_1EFBA27D8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7461DC, &type metadata for DeviceServiceEvent.PairableHostFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA27D8);
  }
  return result;
}

void DeviceServiceEvent.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _BYTE *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  _QWORD *v59;

  OUTLINED_FUNCTION_2();
  v2 = v1;
  v47 = v3;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA27E0);
  v50 = *(_QWORD *)(v4 - 8);
  v51 = v4;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  v53 = v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA27E8);
  v48 = *(_QWORD *)(v7 - 8);
  v49 = v7;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_14();
  v52 = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA27F0);
  v54 = *(_QWORD *)(v10 - 8);
  v55 = v10;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_13();
  v12 = type metadata accessor for DeviceServiceEvent(0);
  OUTLINED_FUNCTION_3();
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v43 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v43 - v20;
  __swift_project_boxed_opaque_existential_0Tm(v2, v2[3]);
  sub_1CF6E4294();
  sub_1CF73F840();
  if (v0)
    goto LABEL_8;
  v44 = v21;
  v45 = v19;
  v43 = v16;
  v46 = v12;
  v59 = v2;
  v22 = sub_1CF73F564();
  v23 = *(_QWORD *)(v22 + 16);
  if (!v23
    || (v24 = *(_BYTE *)(v22 + 32),
        sub_1CF6A6F50(1, v23, v22, v22 + 32, 0, (2 * v23) | 1),
        v26 = v25,
        v28 = v27,
        swift_bridgeObjectRelease(),
        v26 != v28 >> 1))
  {
    v30 = v54;
    v31 = v46;
    v32 = sub_1CF73F384();
    swift_allocError();
    v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1470);
    *v34 = v31;
    sub_1CF73F4B0();
    sub_1CF73F378();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x1E0DEC450], v32);
    swift_willThrow();
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_8_11(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    v2 = v59;
LABEL_8:
    v37 = (uint64_t)v2;
    goto LABEL_9;
  }
  if ((v24 & 1) != 0)
  {
    OUTLINED_FUNCTION_26_5();
    OUTLINED_FUNCTION_4_13();
    sub_1CF6E4ADC();
    OUTLINED_FUNCTION_29_4();
    v29 = v54;
    OUTLINED_FUNCTION_3_16(v50);
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_8_11(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    v38 = v57;
    v39 = v58;
    v40 = v43;
    *v43 = v56;
    *((_QWORD *)v40 + 1) = v38;
    v40[16] = v39;
    swift_storeEnumTagMultiPayload();
    v41 = (uint64_t)v40;
  }
  else
  {
    v56 = 0;
    sub_1CF6E4370();
    OUTLINED_FUNCTION_4_13();
    OUTLINED_FUNCTION_3_13();
    sub_1CF6935F8(&qword_1EFBA1918, type metadata accessor for PairableHostInfo, (uint64_t)&protocol conformance descriptor for PairableHostInfo);
    v35 = (uint64_t)v45;
    OUTLINED_FUNCTION_29_4();
    v36 = v54;
    OUTLINED_FUNCTION_3_16(v48);
    OUTLINED_FUNCTION_13_2();
    OUTLINED_FUNCTION_8_11(*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8));
    swift_storeEnumTagMultiPayload();
    v41 = v35;
  }
  v42 = (uint64_t)v44;
  sub_1CF6E4B18(v41, (uint64_t)v44, type metadata accessor for DeviceServiceEvent);
  sub_1CF6E4B18(v42, v47, type metadata accessor for DeviceServiceEvent);
  v37 = (uint64_t)v2;
LABEL_9:
  __swift_destroy_boxed_opaque_existential_0Tm(v37);
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF6E47EC()
{
  DeviceServiceEvent.init(from:)();
}

void sub_1CF6E4800()
{
  DeviceServiceEvent.encode(to:)();
}

uint64_t sub_1CF6E4814()
{
  sub_1CF6E4B40();
  return sub_1CF73F864();
}

uint64_t sub_1CF6E483C()
{
  sub_1CF6E4B40();
  return sub_1CF73F870();
}

void BrowseForPairableHostRequest.encode(to:)()
{
  sub_1CF6E4A04();
}

void BrowseForPairableHostRequest.init(from:)(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_109();
}

void sub_1CF6E48B0(uint64_t a1)
{
  InitiatePairingWithHostCommand.init(from:)(a1);
}

void sub_1CF6E48C4()
{
  BrowseForPairableHostRequest.encode(to:)();
}

uint64_t sub_1CF6E48D8()
{
  sub_1CF6E4B7C();
  return sub_1CF73F864();
}

uint64_t sub_1CF6E4900()
{
  sub_1CF6E4B7C();
  return sub_1CF73F870();
}

void InitiatePairingWithHostCommand.encode(to:)()
{
  sub_1CF6E4A04();
}

void InitiatePairingWithHostCommand.init(from:)(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_109();
}

void sub_1CF6E4974()
{
  InitiatePairingWithHostCommand.encode(to:)();
}

uint64_t sub_1CF6E4988()
{
  sub_1CF6E4BB8();
  return sub_1CF73F864();
}

uint64_t sub_1CF6E49B0()
{
  sub_1CF6E4BB8();
  return sub_1CF73F870();
}

void HostCheckInRequest.encode(to:)()
{
  sub_1CF6E4A04();
}

void sub_1CF6E4A04()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_2();
  v2 = v1;
  v4 = v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(v5);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_28();
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  v2();
  sub_1CF73F858();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v6);
  OUTLINED_FUNCTION_0_0();
}

void HostCheckInRequest.init(from:)(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  OUTLINED_FUNCTION_109();
}

void sub_1CF6E4AC8()
{
  HostCheckInRequest.encode(to:)();
}

unint64_t sub_1CF6E4ADC()
{
  unint64_t result;

  result = qword_1EFBA27F8;
  if (!qword_1EFBA27F8)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for PairingChallengeEvent, &type metadata for PairingChallengeEvent);
    atomic_store(result, (unint64_t *)&qword_1EFBA27F8);
  }
  return result;
}

void sub_1CF6E4B18(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  OUTLINED_FUNCTION_87(a1, a2, a3);
  OUTLINED_FUNCTION_34_5();
  OUTLINED_FUNCTION_122(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32));
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1CF6E4B40()
{
  unint64_t result;

  result = qword_1EFBA2808;
  if (!qword_1EFBA2808)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF74618C, &type metadata for BrowseForPairableHostRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2808);
  }
  return result;
}

unint64_t sub_1CF6E4B7C()
{
  unint64_t result;

  result = qword_1EFBA2818;
  if (!qword_1EFBA2818)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF74613C, &type metadata for InitiatePairingWithHostCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2818);
  }
  return result;
}

unint64_t sub_1CF6E4BB8()
{
  unint64_t result;

  result = qword_1EFBA2828;
  if (!qword_1EFBA2828)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7460EC, &type metadata for HostCheckInRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2828);
  }
  return result;
}

void sub_1CF6E4BF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_1CF6935F8(&qword_1EFBA1918, type metadata accessor for PairableHostInfo, (uint64_t)&protocol conformance descriptor for PairableHostInfo);
  *(_QWORD *)(a1 + 8) = v2;
  sub_1CF6935F8((unint64_t *)&unk_1EFBA1920, type metadata accessor for PairableHostInfo, (uint64_t)&protocol conformance descriptor for PairableHostInfo);
  *(_QWORD *)(a1 + 16) = v3;
}

void sub_1CF6E4C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6A3D74(a1, a2, a3, (uint64_t (*)(void))sub_1CF6A7008, (uint64_t (*)(void))sub_1CF6A7044);
}

void sub_1CF6E4C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6A3D74(a1, a2, a3, (uint64_t (*)(void))sub_1CF6A71E8, (uint64_t (*)(void))sub_1CF6A7224);
}

void sub_1CF6E4C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6A3D74(a1, a2, a3, (uint64_t (*)(void))sub_1CF6A7080, (uint64_t (*)(void))sub_1CF6A70BC);
}

void sub_1CF6E4C8C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  PairableHostInfo.endpoint.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_1();
}

_QWORD *initializeBufferWithCopyOfBuffer for PairableHostInfo(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1CF73E664();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (_QWORD *)((char *)a1 + v8);
    v11 = (_QWORD *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (_QWORD *)((char *)a1 + v9);
    v14 = (_QWORD *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *((_BYTE *)a1 + v16) = *((_BYTE *)a2 + v16);
    v17 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_1CF73E814();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
  }
  return a1;
}

uint64_t destroy for PairableHostInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1CF73E664();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 40);
  v6 = sub_1CF73E814();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for PairableHostInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1CF73E664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_1CF73E814();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  return a1;
}

uint64_t assignWithCopy for PairableHostInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1CF73E664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v13 = a3[10];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = sub_1CF73E814();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

uint64_t initializeWithTake for PairableHostInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1CF73E664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v9 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1CF73E814();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for PairableHostInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1CF73E664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_BYTE *)(a1 + v17) = *(_BYTE *)(a2 + v17);
  v18 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_1CF73E814();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for PairableHostInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1CF6E519C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v6 = OUTLINED_FUNCTION_27();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v7 = sub_1CF73E814();
    v8 = a1 + *(int *)(a3 + 40);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for PairableHostInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1CF6E5244(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = OUTLINED_FUNCTION_27();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      OUTLINED_FUNCTION_40();
      return;
    }
    v9 = sub_1CF73E814();
    v10 = a1 + *(int *)(a4 + 40);
  }
  __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t sub_1CF6E52D4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1CF73E664();
  if (v1 <= 0x3F)
  {
    result = sub_1CF73E814();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DeviceServiceEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  else
  {
    v8 = sub_1CF73E664();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    v9 = (int *)type metadata accessor for PairableHostInfo(0);
    v10 = v9[5];
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = v12[1];
    *v11 = *v12;
    v11[1] = v13;
    v14 = v9[6];
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    *((_BYTE *)a1 + v9[7]) = *((_BYTE *)a2 + v9[7]);
    *((_BYTE *)a1 + v9[8]) = *((_BYTE *)a2 + v9[8]);
    *(uint64_t *)((char *)a1 + v9[9]) = *(uint64_t *)((char *)a2 + v9[9]);
    v18 = v9[10];
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    v21 = sub_1CF73E814();
    v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for DeviceServiceEvent(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = swift_getEnumCaseMultiPayload();
  if (!(_DWORD)result)
  {
    v3 = sub_1CF73E664();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = type metadata accessor for PairableHostInfo(0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = a1 + *(int *)(v4 + 40);
    v6 = sub_1CF73E814();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  return result;
}

char *initializeWithCopy for DeviceServiceEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1CF73E664();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for PairableHostInfo(0);
    v8 = v7[5];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = *((_QWORD *)v10 + 1);
    *(_QWORD *)v9 = *(_QWORD *)v10;
    *((_QWORD *)v9 + 1) = v11;
    v12 = v7[6];
    v13 = &a1[v12];
    v14 = &a2[v12];
    v15 = *((_QWORD *)v14 + 1);
    *(_QWORD *)v13 = *(_QWORD *)v14;
    *((_QWORD *)v13 + 1) = v15;
    a1[v7[7]] = a2[v7[7]];
    a1[v7[8]] = a2[v7[8]];
    *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
    v16 = v7[10];
    v17 = &a1[v16];
    v18 = &a2[v16];
    v19 = sub_1CF73E814();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithCopy for DeviceServiceEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1CF6DC3F0((uint64_t)a1, type metadata accessor for DeviceServiceEvent);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1CF73E664();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = (int *)type metadata accessor for PairableHostInfo(0);
      v8 = v7[5];
      v9 = &a1[v8];
      v10 = &a2[v8];
      *(_QWORD *)v9 = *(_QWORD *)v10;
      *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
      v11 = v7[6];
      v12 = &a1[v11];
      v13 = &a2[v11];
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_QWORD *)v12 + 1) = *((_QWORD *)v13 + 1);
      a1[v7[7]] = a2[v7[7]];
      a1[v7[8]] = a2[v7[8]];
      *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
      v14 = v7[10];
      v15 = &a1[v14];
      v16 = &a2[v14];
      v17 = sub_1CF73E814();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *initializeWithTake for DeviceServiceEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = sub_1CF73E664();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    v7 = (int *)type metadata accessor for PairableHostInfo(0);
    *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
    *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
    a1[v7[7]] = a2[v7[7]];
    a1[v7[8]] = a2[v7[8]];
    *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
    v8 = v7[10];
    v9 = &a1[v8];
    v10 = &a2[v8];
    v11 = sub_1CF73E814();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *assignWithTake for DeviceServiceEvent(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_1CF6DC3F0((uint64_t)a1, type metadata accessor for DeviceServiceEvent);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = sub_1CF73E664();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      v7 = (int *)type metadata accessor for PairableHostInfo(0);
      *(_OWORD *)&a1[v7[5]] = *(_OWORD *)&a2[v7[5]];
      *(_OWORD *)&a1[v7[6]] = *(_OWORD *)&a2[v7[6]];
      a1[v7[7]] = a2[v7[7]];
      a1[v7[8]] = a2[v7[8]];
      *(_QWORD *)&a1[v7[9]] = *(_QWORD *)&a2[v7[9]];
      v8 = v7[10];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_1CF73E814();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1CF6E59F8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for PairableHostInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void type metadata accessor for BrowseForPairableHostRequest()
{
  OUTLINED_FUNCTION_31();
}

void type metadata accessor for InitiatePairingWithHostCommand()
{
  OUTLINED_FUNCTION_31();
}

void type metadata accessor for HostCheckInRequest()
{
  OUTLINED_FUNCTION_31();
}

ValueMetadata *type metadata accessor for HostCheckInRequest.CodingKeys()
{
  return &type metadata for HostCheckInRequest.CodingKeys;
}

ValueMetadata *type metadata accessor for InitiatePairingWithHostCommand.CodingKeys()
{
  return &type metadata for InitiatePairingWithHostCommand.CodingKeys;
}

ValueMetadata *type metadata accessor for BrowseForPairableHostRequest.CodingKeys()
{
  return &type metadata for BrowseForPairableHostRequest.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DeviceServiceEvent.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF6E5B04 + 4 * byte_1CF74596C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF6E5B38 + 4 * byte_1CF745967[v4]))();
}

uint64_t sub_1CF6E5B38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6E5B40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6E5B48);
  return result;
}

uint64_t sub_1CF6E5B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6E5B5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF6E5B60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6E5B68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DeviceServiceEvent.CodingKeys()
{
  return &type metadata for DeviceServiceEvent.CodingKeys;
}

ValueMetadata *type metadata accessor for DeviceServiceEvent.PairableHostFoundCodingKeys()
{
  return &type metadata for DeviceServiceEvent.PairableHostFoundCodingKeys;
}

uint64_t _s19RemotePairingDevice18DeviceServiceEventO27PairableHostFoundCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CF6E5BD8 + 4 * byte_1CF745971[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CF6E5BF8 + 4 * byte_1CF745976[v4]))();
}

_BYTE *sub_1CF6E5BD8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CF6E5BF8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6E5C00(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6E5C08(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF6E5C10(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF6E5C18(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DeviceServiceEvent.PairingChallengeCodingKeys()
{
  return &type metadata for DeviceServiceEvent.PairingChallengeCodingKeys;
}

uint64_t storeEnumTagSinglePayload for PairableHostInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1CF6E5C80 + 4 * byte_1CF745980[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1CF6E5CB4 + 4 * byte_1CF74597B[v4]))();
}

uint64_t sub_1CF6E5CB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6E5CBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6E5CC4);
  return result;
}

uint64_t sub_1CF6E5CD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6E5CD8);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1CF6E5CDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6E5CE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PairableHostInfo.CodingKeys()
{
  return &type metadata for PairableHostInfo.CodingKeys;
}

unint64_t sub_1CF6E5D04()
{
  unint64_t result;

  result = qword_1EFBA2980;
  if (!qword_1EFBA2980)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745DAC, &type metadata for PairableHostInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2980);
  }
  return result;
}

unint64_t sub_1CF6E5D44()
{
  unint64_t result;

  result = qword_1EFBA2988;
  if (!qword_1EFBA2988)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745E64, &type metadata for DeviceServiceEvent.PairingChallengeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2988);
  }
  return result;
}

unint64_t sub_1CF6E5D84()
{
  unint64_t result;

  result = qword_1EFBA2990;
  if (!qword_1EFBA2990)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745F1C, &type metadata for DeviceServiceEvent.PairableHostFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2990);
  }
  return result;
}

unint64_t sub_1CF6E5DC4()
{
  unint64_t result;

  result = qword_1EFBA2998;
  if (!qword_1EFBA2998)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745FD4, &type metadata for DeviceServiceEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2998);
  }
  return result;
}

unint64_t sub_1CF6E5E04()
{
  unint64_t result;

  result = qword_1EFBA29A0;
  if (!qword_1EFBA29A0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF74609C, &type metadata for HostCheckInRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29A0);
  }
  return result;
}

unint64_t sub_1CF6E5E44()
{
  unint64_t result;

  result = qword_1EFBA29A8;
  if (!qword_1EFBA29A8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF7460C4, &type metadata for HostCheckInRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29A8);
  }
  return result;
}

unint64_t sub_1CF6E5E84()
{
  unint64_t result;

  result = qword_1EFBA29B0;
  if (!qword_1EFBA29B0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF74604C, &type metadata for InitiatePairingWithHostCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29B0);
  }
  return result;
}

unint64_t sub_1CF6E5EC4()
{
  unint64_t result;

  result = qword_1EFBA29B8;
  if (!qword_1EFBA29B8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746074, &type metadata for InitiatePairingWithHostCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29B8);
  }
  return result;
}

unint64_t sub_1CF6E5F04()
{
  unint64_t result;

  result = qword_1EFBA29C0;
  if (!qword_1EFBA29C0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745FFC, &type metadata for BrowseForPairableHostRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29C0);
  }
  return result;
}

unint64_t sub_1CF6E5F44()
{
  unint64_t result;

  result = qword_1EFBA29C8;
  if (!qword_1EFBA29C8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746024, &type metadata for BrowseForPairableHostRequest.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29C8);
  }
  return result;
}

unint64_t sub_1CF6E5F84()
{
  unint64_t result;

  result = qword_1EFBA29D0;
  if (!qword_1EFBA29D0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745E8C, &type metadata for DeviceServiceEvent.PairableHostFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29D0);
  }
  return result;
}

unint64_t sub_1CF6E5FC4()
{
  unint64_t result;

  result = qword_1EFBA29D8;
  if (!qword_1EFBA29D8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745EB4, &type metadata for DeviceServiceEvent.PairableHostFoundCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29D8);
  }
  return result;
}

unint64_t sub_1CF6E6004()
{
  unint64_t result;

  result = qword_1EFBA29E0;
  if (!qword_1EFBA29E0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745DD4, &type metadata for DeviceServiceEvent.PairingChallengeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29E0);
  }
  return result;
}

unint64_t sub_1CF6E6044()
{
  unint64_t result;

  result = qword_1EFBA29E8;
  if (!qword_1EFBA29E8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745DFC, &type metadata for DeviceServiceEvent.PairingChallengeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29E8);
  }
  return result;
}

unint64_t sub_1CF6E6084()
{
  unint64_t result;

  result = qword_1EFBA29F0;
  if (!qword_1EFBA29F0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745F44, &type metadata for DeviceServiceEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29F0);
  }
  return result;
}

unint64_t sub_1CF6E60C4()
{
  unint64_t result;

  result = qword_1EFBA29F8;
  if (!qword_1EFBA29F8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745F6C, &type metadata for DeviceServiceEvent.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA29F8);
  }
  return result;
}

unint64_t sub_1CF6E6104()
{
  unint64_t result;

  result = qword_1EFBA2A00;
  if (!qword_1EFBA2A00)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745D1C, &type metadata for PairableHostInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2A00);
  }
  return result;
}

unint64_t sub_1CF6E6144()
{
  unint64_t result;

  result = qword_1EFBA2A08;
  if (!qword_1EFBA2A08)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF745D44, &type metadata for PairableHostInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2A08);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  return sub_1CF73F504();
}

uint64_t OUTLINED_FUNCTION_18_9()
{
  return sub_1CF73F57C();
}

uint64_t OUTLINED_FUNCTION_19_8()
{
  return type metadata accessor for PairableHostInfo(0);
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return type metadata accessor for PairableHostInfo(0);
}

unint64_t OUTLINED_FUNCTION_26_5()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 1;
  return sub_1CF6E42F8();
}

uint64_t OUTLINED_FUNCTION_27_5()
{
  return type metadata accessor for PairableHostInfo(0);
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return sub_1CF73F528();
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF6E6214()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  unint64_t v15;
  __int128 v16[2];
  uint64_t v17;
  __int128 v18;
  _QWORD v19[17];
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_167();
  v20 = v0;
  v21 = v1;
  v19[5] = *MEMORY[0x1E0C80C00];
  v14 = v2;
  v15 = v3;
  *(_QWORD *)&v18 = v2;
  *((_QWORD *)&v18 + 1) = v3;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2C88);
  if (!swift_dynamicCast())
  {
    v17 = 0;
    memset(v16, 0, sizeof(v16));
    sub_1CF693ED8((uint64_t)v16, &qword_1EFBA2C90);
    if ((v15 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((v15 & 0x2000000000000000) != 0)
    {
      v19[0] = v14;
      v19[1] = v15 & 0xFFFFFFFFFFFFFFLL;
      v6 = (char *)v19 + (HIBYTE(v15) & 0xF);
      v7 = v19;
    }
    else
    {
      if ((v14 & 0x1000000000000000) != 0)
      {
        v4 = (v15 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v5 = v14 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v4 = sub_1CF73F390();
      }
      if (v4)
        v6 = (char *)(v4 + v5);
      else
        v6 = 0;
      v7 = (_QWORD *)v4;
    }
    v8 = MEMORY[0x1D17D2178](v7, v6);
    v10 = v9;
    if (v9 >> 60 != 15)
    {
      OUTLINED_FUNCTION_76_1();
      *(_QWORD *)&v16[0] = v8;
      *((_QWORD *)&v16[0] + 1) = v10;
      return *(_QWORD *)&v16[0];
    }
    if ((v15 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v11 = sub_1CF73EF64();
    }
    else if ((v15 & 0x2000000000000000) != 0)
    {
      v11 = HIBYTE(v15) & 0xF;
    }
    else
    {
      v11 = v14 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v16[0] = MEMORY[0x1D17D2154](v11);
    *((_QWORD *)&v16[0] + 1) = v12;
    MEMORY[0x1E0C80A78](*(_QWORD *)&v16[0]);
    sub_1CF6EBBD0();
    __asm { BR              X12 }
  }
  sub_1CF68C850(v16, (uint64_t)v19);
  __swift_project_boxed_opaque_existential_0Tm(v19, v19[3]);
  sub_1CF73E46C();
  OUTLINED_FUNCTION_76_1();
  v16[0] = v18;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
  return *(_QWORD *)&v16[0];
}

void sub_1CF6E6698(uint64_t a1, uint64_t a2)
{
  char *v2;
  _QWORD v3[5];

  v3[3] = MEMORY[0x1E0CB0338];
  v3[4] = MEMORY[0x1E0CB0318];
  v3[0] = a1;
  v3[1] = a2;
  v2 = (char *)&loc_1CF6E66EC
     + *((int *)qword_1CF6E6828 + (__swift_project_boxed_opaque_existential_0Tm(v3, MEMORY[0x1E0CB0338])[1] >> 62));
  __asm { BR              X10 }
}

uint64_t sub_1CF6E66FC()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  sub_1CF6934BC(v1, v0);
  sub_1CF6EB370(BYTE6(v2), &v5);
  sub_1CF6933C0(v1, v0);
  v3 = v5;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v6);
  return v3;
}

uint64_t sub_1CF6E6838(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[5];

  v8[3] = MEMORY[0x1E0DEAC20];
  v8[4] = MEMORY[0x1E0CB1AA8];
  v8[0] = a1;
  v8[1] = a2;
  v2 = __swift_project_boxed_opaque_existential_0Tm(v8, MEMORY[0x1E0DEAC20]);
  v3 = *v2;
  if (*v2 && (v4 = v2[1], v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      v6 = sub_1CF73E4C0();
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      v6 = MEMORY[0x1D17D20E8]();
    }
    else
    {
      v6 = MEMORY[0x1D17D2100]();
    }
  }
  else
  {
    v6 = 0;
  }
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v8);
  return v6;
}

uint64_t sub_1CF6E68F0()
{
  uint64_t result;

  sub_1CF6B3208(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA2A10 = result;
  return result;
}

uint64_t sub_1CF6E6964()
{
  uint64_t result;

  type metadata accessor for AtomicCounter();
  swift_allocObject();
  result = AtomicCounter.init()();
  qword_1EFBA2A18 = result;
  return result;
}

void sub_1CF6E69A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1CF6E6A20(v1, v2);
}

uint64_t sub_1CF6E69DC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_10();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1CF6E6A20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_10();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5();
}

void sub_1CF6E6A60()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6E6A94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 88);
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return OUTLINED_FUNCTION_27_6(v3);
}

void sub_1CF6E6AA0(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 104);
  *(_QWORD *)(v1 + 104) = a1;

}

uint64_t sub_1CF6E6AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v2 + 112);
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return OUTLINED_FUNCTION_27_6(v3);
}

uint64_t sub_1CF6E6AB8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 136) = a1;
  return OUTLINED_FUNCTION_37_4();
}

uint64_t sub_1CF6E6AC4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 144) = a1;
  return OUTLINED_FUNCTION_37_4();
}

void sub_1CF6E6AD0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  OUTLINED_FUNCTION_10();
  v5 = *(_QWORD *)(v2 + 160);
  v6 = *(_QWORD *)(v2 + 168);
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = a2;
  sub_1CF6933C0(v5, v6);
  OUTLINED_FUNCTION_5();
}

uint64_t SecureSocketDataTransport.__allocating_init(physicallyConnected:underlyingConnectionSocket:bufferedReceiveSizeHandler:syncReceiveHandler:syncSendHandler:cleanupConnectionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;

  v17 = OUTLINED_FUNCTION_16();
  SecureSocketDataTransport.init(physicallyConnected:underlyingConnectionSocket:bufferedReceiveSizeHandler:syncReceiveHandler:syncSendHandler:cleanupConnectionHandler:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

_QWORD *SecureSocketDataTransport.init(physicallyConnected:underlyingConnectionSocket:bufferedReceiveSizeHandler:syncReceiveHandler:syncSendHandler:cleanupConnectionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_167();
  v12 = (_QWORD *)v10;
  v31 = v14;
  v32 = v13;
  v37 = v15;
  v38 = v16;
  v34 = v17;
  v35 = v18;
  v33 = v19;
  v36 = v20;
  sub_1CF73F150();
  v21 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v22);
  OUTLINED_FUNCTION_34();
  v23 = sub_1CF73F174();
  v24 = *(_QWORD *)(v23 - 8);
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_18_10();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_34();
  sub_1CF6B3208(0, (unint64_t *)&qword_1ED8F7A30);
  *(_QWORD *)(v10 + 88) = 0;
  *(_QWORD *)(v10 + 96) = 0;
  *(_QWORD *)(v10 + 112) = 0;
  *(_QWORD *)(v10 + 120) = 0;
  sub_1CF73ED78();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v24 + 104))(v11, *MEMORY[0x1E0DEF8D8], v23);
  v26 = MEMORY[0x1E0DEE9D8];
  sub_1CF6935F8(&qword_1ED8F7D00, v21, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7CF0);
  sub_1CF6D23E4((unint64_t *)&qword_1ED8F7CF8, &qword_1ED8F7CF0);
  sub_1CF73F2F4();
  *(_QWORD *)(v10 + 128) = sub_1CF73F18C();
  *(_QWORD *)(v10 + 136) = 0;
  *(_QWORD *)(v10 + 144) = 0;
  *(_QWORD *)(v10 + 152) = v26;
  *(_OWORD *)(v10 + 160) = xmmword_1CF743CE0;
  *(_QWORD *)(v10 + 176) = v26;
  *(_BYTE *)(v10 + 185) = 2;
  *(_OWORD *)(v10 + 192) = 0u;
  *(_OWORD *)(v10 + 208) = 0u;
  *(_OWORD *)(v10 + 217) = 0u;
  *(_BYTE *)(v10 + 184) = v34;
  *(_DWORD *)(v10 + 32) = v35;
  *(_QWORD *)(v10 + 40) = v36;
  *(_QWORD *)(v10 + 48) = v33;
  *(_QWORD *)(v10 + 56) = v37;
  *(_QWORD *)(v10 + 64) = v32;
  *(_QWORD *)(v10 + 72) = v38;
  *(_QWORD *)(v10 + 80) = v31;
  v27 = *(_QWORD *)(v10 + 88);
  v12[11] = a9;
  v12[12] = a10;
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_350();
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_83();
  sub_1CF693EC8(v27);
  if (qword_1EFBA0940 != -1)
    swift_once();
  sub_1CF68C4F8();
  sub_1CF73F648();
  sub_1CF73EF58();
  swift_release();
  OUTLINED_FUNCTION_11();
  swift_release();
  OUTLINED_FUNCTION_260();
  swift_release();
  v12[2] = 0x2D74656B636F73;
  v12[3] = 0xE700000000000000;
  v28 = (void *)v12[16];
  v12[13] = v28;
  v29 = v28;
  return v12;
}

void sub_1CF6E6E9C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  os_log_type_t v16;
  NSObject *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  void *v28;
  os_log_type_t v29;
  NSObject *v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t ErrorValue;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  _QWORD *v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t (*v61)();
  _QWORD *v62;

  OUTLINED_FUNCTION_167();
  v2 = v0;
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_14();
  sub_1CF73ED84();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_14();
  v49 = *(_QWORD *)(OUTLINED_FUNCTION_52_3(v5) - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  v48 = v7;
  OUTLINED_FUNCTION_71_3();
  if (v0[17])
  {
    v8 = v0[14];
    if (v8)
    {
      v9 = v0[15];
      swift_getObjectType();
      swift_unknownObjectRetain();
      OUTLINED_FUNCTION_78_0();
      v50 = v0;
      if (!sub_1CF73F1EC())
      {
        OUTLINED_FUNCTION_64_5();
        sub_1CF6AA5E0();
        OUTLINED_FUNCTION_3_0();
        OUTLINED_FUNCTION_86_1();
        v52 = v57;
        v53 = v58;
        OUTLINED_FUNCTION_87_1();
        v15 = v59;
        v14 = v60;
        v16 = sub_1CF73F0CC();
        if (qword_1EFBA0938 != -1)
          swift_once();
        v17 = qword_1EFBA2A10;
        if (os_log_type_enabled((os_log_t)qword_1EFBA2A10, v16))
        {
          swift_bridgeObjectRetain_n();
          OUTLINED_FUNCTION_158();
          OUTLINED_FUNCTION_4_7();
          v52 = OUTLINED_FUNCTION_7_12();
          *(_DWORD *)v1 = 136446466;
          OUTLINED_FUNCTION_10();
          v18 = v2[2];
          v19 = v2[3];
          swift_bridgeObjectRetain();
          sub_1CF68F110(v18, v19, &v52);
          OUTLINED_FUNCTION_15_11(v20);
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v1 + 12) = 2080;
          v59 = v15;
          v60 = v14;
          sub_1CF6ABB3C();
          v21 = OUTLINED_FUNCTION_85_1();
          sub_1CF68F110(v21, v22, &v52);
          v59 = v23;
          sub_1CF73F2A0();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          OUTLINED_FUNCTION_22_4(&dword_1CF67E000, v17, v16, "%{public}s: %s");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_0_1();
        }
        v24 = (void *)v2[13];
        v25 = (_QWORD *)OUTLINED_FUNCTION_16();
        v25[2] = v8;
        v25[3] = v9;
        v25[4] = v15;
        v25[5] = v14;
        v61 = sub_1CF6ECE48;
        v62 = v25;
        v59 = MEMORY[0x1E0C809B0];
        v60 = 1107296256;
        v26 = OUTLINED_FUNCTION_6_13((uint64_t)sub_1CF6CC068);
        OUTLINED_FUNCTION_78_0();
        v27 = v24;
        OUTLINED_FUNCTION_20_8();
        v52 = MEMORY[0x1E0DEE9D8];
        sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        OUTLINED_FUNCTION_14_1();
        OUTLINED_FUNCTION_17_0((unint64_t *)&qword_1ED8F7A10);
        OUTLINED_FUNCTION_44_4();
        OUTLINED_FUNCTION_77_1();
        sub_1CF73F2F4();
        MEMORY[0x1D17D2D90](0, v2, v15, v26);
        _Block_release(v26);
        OUTLINED_FUNCTION_16_6();

        OUTLINED_FUNCTION_79_1();
        OUTLINED_FUNCTION_29_5();
        OUTLINED_FUNCTION_4_14();
        goto LABEL_21;
      }
      OUTLINED_FUNCTION_10();
      if (*(_QWORD *)(v0[19] + 16))
      {
        OUTLINED_FUNCTION_64_5();
        OUTLINED_FUNCTION_10();
        v46 = sub_1CF6E7C20();
        v44 = v10;
        v45 = v11;
        v47 = v12;
        OUTLINED_FUNCTION_41_6();
        sub_1CF73E460();
        swift_allocObject();
        v55 = 0x200000000000;
        v56 = sub_1CF73E43C() | 0x4000000000000000;
        OUTLINED_FUNCTION_158();
        sub_1CF6EBE70((uint64_t)&v55);
        if (v13 > 0)
          __asm { BR              X10 }
        if (v13 < 0)
        {
          sub_1CF73E3AC();
          v28 = (void *)sub_1CF73E3B8();
          OUTLINED_FUNCTION_28_4(v48, *(uint64_t (**)(uint64_t, _QWORD))(v49 + 8));
        }
        else
        {
          sub_1CF6AA5E0();
          OUTLINED_FUNCTION_3_0();
          OUTLINED_FUNCTION_86_1();
          v52 = v59;
          v53 = v60;
          sub_1CF6ABB3C();
          v28 = (void *)OUTLINED_FUNCTION_105();
          OUTLINED_FUNCTION_3_0();
          OUTLINED_FUNCTION_87_1();
        }
        v29 = sub_1CF73F0CC();
        if (qword_1EFBA0938 != -1)
          swift_once();
        v30 = qword_1EFBA2A10;
        if (os_log_type_enabled((os_log_t)qword_1EFBA2A10, v29))
        {
          OUTLINED_FUNCTION_41();
          OUTLINED_FUNCTION_158();
          OUTLINED_FUNCTION_41();
          OUTLINED_FUNCTION_4_7();
          v59 = OUTLINED_FUNCTION_7_12();
          *(_DWORD *)v1 = 136446466;
          OUTLINED_FUNCTION_10();
          v31 = v2[2];
          v32 = v50[3];
          swift_bridgeObjectRetain();
          sub_1CF68F110(v31, v32, &v59);
          v54 = v33;
          sub_1CF73F2A0();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v1 + 12) = 2080;
          ErrorValue = swift_getErrorValue();
          v35 = *(_QWORD *)(v51 - 8);
          MEMORY[0x1E0C80A78](ErrorValue);
          OUTLINED_FUNCTION_50_2();
          (*(void (**)(uint64_t))(v35 + 16))(v1 + 4);
          v36 = sub_1CF73F720();
          v38 = v37;
          (*(void (**)(uint64_t))(v35 + 8))(v1 + 4);
          sub_1CF68F110(v36, v38, &v59);
          v54 = v39;
          sub_1CF73F2A0();
          swift_bridgeObjectRelease();

          OUTLINED_FUNCTION_22_4(&dword_1CF67E000, v30, v29, "%{public}s: Connection receive error: %s");
          swift_arrayDestroy();
          OUTLINED_FUNCTION_0_1();
        }
        v40 = (void *)v2[13];
        v41 = (_QWORD *)OUTLINED_FUNCTION_16();
        v41[2] = v46;
        v41[3] = v44;
        v41[4] = v45;
        v41[5] = v47;
        v41[6] = v28;
        v61 = sub_1CF6ECC54;
        v62 = v41;
        v59 = MEMORY[0x1E0C809B0];
        v60 = 1107296256;
        OUTLINED_FUNCTION_6_13((uint64_t)sub_1CF6CC068);
        OUTLINED_FUNCTION_41();
        v42 = v40;
        OUTLINED_FUNCTION_83();
        OUTLINED_FUNCTION_20_8();
        v54 = MEMORY[0x1E0DEE9D8];
        sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
        OUTLINED_FUNCTION_14_1();
        OUTLINED_FUNCTION_17_0((unint64_t *)&qword_1ED8F7A10);
        OUTLINED_FUNCTION_77_1();
        sub_1CF73F2F4();
        v43 = OUTLINED_FUNCTION_68_3();
        MEMORY[0x1D17D2D90](v43);
        OUTLINED_FUNCTION_54_5();
        OUTLINED_FUNCTION_51_3();
        OUTLINED_FUNCTION_16_6();

        OUTLINED_FUNCTION_29_5();
        OUTLINED_FUNCTION_4_14();
        sub_1CF6933C0(v55, v56);
LABEL_21:
        swift_release();
        goto LABEL_22;
      }
      OUTLINED_FUNCTION_79_1();
      swift_unknownObjectRelease();
    }
  }
LABEL_22:
  OUTLINED_FUNCTION_17();
}

uint64_t sub_1CF6E7C20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16))
  {
    v1 = *(_QWORD *)(*(_QWORD *)v0 + 32);
    swift_retain();
    sub_1CF6EC610(0, 1);
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1CF6E7C84(uint64_t a1, uint64_t a2, void (*a3)(void *, _QWORD, uint64_t))
{
  void *v4;

  sub_1CF6AA5E0();
  sub_1CF73F774();
  sub_1CF73F780();
  sub_1CF6ABB3C();
  v4 = (void *)swift_allocError();
  sub_1CF73E904();
  swift_bridgeObjectRelease();
  a3(v4, 0, 1);

}

void sub_1CF6E7DA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x1CF6E7ED8);
}

void sub_1CF6E7F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a1 & 0x8000000000000000) == 0)
    __asm { BR              X9 }
  __break(1u);
  JUMPOUT(0x1CF6E8048);
}

void sub_1CF6E8078()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  os_log_type_t v16;
  NSObject *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _DWORD *v23;
  void *v24;
  _QWORD *v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33[8];
  _DWORD *v34;
  uint64_t v35;
  void (*v36)();
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_167();
  v38 = v2;
  v39 = v3;
  v4 = v0;
  v30 = *(_QWORD *)(OUTLINED_FUNCTION_70_2() - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  v31 = *(_QWORD *)(OUTLINED_FUNCTION_18_10() - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  v8 = OUTLINED_FUNCTION_52_3(v7);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_34();
  OUTLINED_FUNCTION_71_3();
  if (!v0[18] || (v32 = v0[14]) == 0)
  {
LABEL_14:
    OUTLINED_FUNCTION_17();
    return;
  }
  v9 = v0[15];
  swift_getObjectType();
  swift_unknownObjectRetain();
  v28 = v9;
  sub_1CF6A3AE0(v32);
  v10 = sub_1CF73F1EC();
  if ((v10 & 0x8000000000000000) != 0)
    goto LABEL_6;
  if (!v10)
  {
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_3_0();
    sub_1CF73F774();
    v33[0] = v33[5];
    v33[1] = v33[6];
    sub_1CF73F780();
    v15 = v34;
    v14 = v35;
    v16 = sub_1CF73F0CC();
    if (qword_1EFBA0938 != -1)
      swift_once();
    v17 = qword_1EFBA2A10;
    if (os_log_type_enabled((os_log_t)qword_1EFBA2A10, v16))
    {
      swift_bridgeObjectRetain_n();
      OUTLINED_FUNCTION_12_8();
      OUTLINED_FUNCTION_4_7();
      v33[0] = OUTLINED_FUNCTION_7_12();
      *v34 = 136446466;
      OUTLINED_FUNCTION_10();
      v18 = v4[2];
      v19 = v4[3];
      swift_bridgeObjectRetain();
      sub_1CF68F110(v18, v19, v33);
      OUTLINED_FUNCTION_15_11(v20);
      OUTLINED_FUNCTION_51_3();
      swift_bridgeObjectRelease();
      *((_WORD *)v15 + 6) = 2080;
      v34 = v15;
      v35 = v14;
      sub_1CF6ABB3C();
      v21 = OUTLINED_FUNCTION_85_1();
      sub_1CF68F110(v21, v22, v33);
      v34 = v23;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_22_4(&dword_1CF67E000, v17, v16, "%{public}s: %s");
      OUTLINED_FUNCTION_53_3();
      OUTLINED_FUNCTION_0_1();
    }
    v24 = (void *)v4[13];
    v25 = (_QWORD *)OUTLINED_FUNCTION_16();
    v25[2] = v32;
    v25[3] = v28;
    v25[4] = v15;
    v25[5] = v14;
    v36 = sub_1CF6EB9A8;
    v37 = v25;
    v34 = (_DWORD *)MEMORY[0x1E0C809B0];
    v35 = 1107296256;
    v26 = OUTLINED_FUNCTION_6_13((uint64_t)sub_1CF6CC068);
    sub_1CF6A3AE0(v32);
    v27 = v24;
    sub_1CF73ED6C();
    v33[0] = MEMORY[0x1E0DEE9D8];
    sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_17_0((unint64_t *)&qword_1ED8F7A10);
    OUTLINED_FUNCTION_48_3();
    sub_1CF73F2F4();
    MEMORY[0x1D17D2D90](0, v29, v1, v26);
    _Block_release(v26);
    OUTLINED_FUNCTION_36_5();

    sub_1CF693EC8(v32);
    OUTLINED_FUNCTION_1_6(v1, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    OUTLINED_FUNCTION_28_4(v29, *(uint64_t (**)(uint64_t, _QWORD))(v31 + 8));
    swift_release();
    goto LABEL_14;
  }
  if (v10 >= 0x401)
  {
LABEL_6:
    v11 = v4 + 22;
    OUTLINED_FUNCTION_10();
    if (*(_QWORD *)(v4[22] + 16))
    {
      OUTLINED_FUNCTION_10();
      v12 = *v11;
      if (*(_QWORD *)(*v11 + 16))
      {
        v13 = *(_QWORD *)(v12 + 40);
        sub_1CF6934BC(*(_QWORD *)(v12 + 32), v13);
        OUTLINED_FUNCTION_2_4();
        sub_1CF6EC838(0, 1);
        OUTLINED_FUNCTION_41_6();
        sub_1CF73E5C8();
        __asm { BR              X10 }
      }
      __break(1u);
      JUMPOUT(0x1CF6E8D44);
    }
    sub_1CF693EC8(v32);
    OUTLINED_FUNCTION_36_5();
    goto LABEL_14;
  }
  sub_1CF693EC8(v32);
  swift_unknownObjectRelease();
}

void sub_1CF6E8D70(void (*a1)(_BYTE *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  _QWORD *v8;
  _BYTE v9[152];
  _QWORD v10[19];

  sub_1CF6ABB3C();
  v7 = (void *)OUTLINED_FUNCTION_105();
  *v8 = a3;
  v8[1] = a4;
  v10[0] = v7;
  sub_1CF6ECBEC((uint64_t)v10);
  sub_1CF6CAAD0(v10, v9);
  swift_bridgeObjectRetain();
  a1(v9);

}

void sub_1CF6E8E00(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  void *v4;

  sub_1CF6AA5E0();
  sub_1CF73F774();
  sub_1CF73F780();
  sub_1CF6ABB3C();
  v4 = (void *)swift_allocError();
  sub_1CF73E904();
  swift_bridgeObjectRelease();
  a3(v4);

}

void sub_1CF6E8F14()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  id v17;
  void *v18;
  _QWORD v19[6];

  OUTLINED_FUNCTION_167();
  v1 = OUTLINED_FUNCTION_70_2();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  OUTLINED_FUNCTION_34();
  v5 = v4 - v3;
  v6 = sub_1CF73ED84();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_34();
  v10 = v9 - v8;
  OUTLINED_FUNCTION_71_3();
  v11 = v0[11];
  if (v11 && !v0[17] && !v0[18])
  {
    v12 = v0[12];
    OUTLINED_FUNCTION_12_8();
    v13 = OUTLINED_FUNCTION_69_4();
    sub_1CF6E6A94(v13, v14);
    v15 = (void *)v0[13];
    v16 = OUTLINED_FUNCTION_16();
    *(_QWORD *)(v16 + 16) = v11;
    *(_QWORD *)(v16 + 24) = v12;
    v19[4] = sub_1CF6A3AF8;
    v19[5] = v16;
    v19[0] = MEMORY[0x1E0C809B0];
    v19[1] = 1107296256;
    v19[2] = sub_1CF6CC068;
    v19[3] = &block_descriptor_38;
    v18 = _Block_copy(v19);
    sub_1CF6A3AE0(v11);
    v17 = v15;
    sub_1CF73ED6C();
    sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_17_0((unint64_t *)&qword_1ED8F7A10);
    sub_1CF73F2F4();
    MEMORY[0x1D17D2D90](0, v10, v5, v18);
    OUTLINED_FUNCTION_83_1();

    sub_1CF693EC8(v11);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v5, v1);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    swift_release();
  }
  OUTLINED_FUNCTION_17();
}

uint64_t SecureSocketDataTransport.deinit()
{
  uint64_t v0;

  sub_1CF6EA9BC();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_1CF693EC8(*(_QWORD *)(v0 + 88));

  sub_1CF693EC8(*(_QWORD *)(v0 + 112));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1CF6933C0(*(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168));
  swift_bridgeObjectRelease();
  sub_1CF693ED8(v0 + 192, &qword_1ED8F7E60);
  return v0;
}

uint64_t SecureSocketDataTransport.__deallocating_deinit()
{
  SecureSocketDataTransport.deinit();
  return swift_deallocClassInstance();
}

void sub_1CF6E91B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v8;
  _QWORD *v9;
  uint64_t v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = v3;
  v8 = *(NSObject **)(v4 + 128);
  v9 = (_QWORD *)OUTLINED_FUNCTION_16();
  v9[2] = v4;
  v9[3] = a1;
  v9[4] = a2;
  v9[5] = a3;
  v10 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v10 + 16) = sub_1CF6EB4F0;
  *(_QWORD *)(v10 + 24) = v9;
  v11 = OUTLINED_FUNCTION_1_9((uint64_t)sub_1CF6D7584, MEMORY[0x1E0C809B0], 1107296256, v13, v14);
  OUTLINED_FUNCTION_190();
  v12 = a1;
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_2_4();
  swift_release();
  dispatch_sync(v8, v11);
  _Block_release(v11);
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_42_6();
  OUTLINED_FUNCTION_16_0();
  if ((v8 & 1) != 0)
    __break(1u);
  else
    OUTLINED_FUNCTION_26_6();
}

uint64_t sub_1CF6E92B8(uint64_t a1, id a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  os_log_type_t v20;
  NSObject *v21;
  id v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  id v37;
  char *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(char *, uint64_t);
  uint64_t v46;
  void *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  void *v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  _DWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t aBlock;
  uint64_t v75;
  uint64_t (*v76)(uint64_t);
  void *v77;
  void *v78;
  _QWORD *v79;

  v8 = sub_1CF73ED54();
  v9 = *(void (**)(char *, uint64_t))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF73ED84();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(a1 + 112);
  v69 = a4;
  v70 = v13;
  v67 = v9;
  v68 = a3;
  v66 = v17;
  if (v16 || (v39 = *(_DWORD *)(a1 + 32), v39 == -1))
  {
    v64 = a2;
    sub_1CF6AA5E0();
    sub_1CF73F774();
    v71 = aBlock;
    v72 = v75;
    sub_1CF6ABB3C();
    v18 = (void *)swift_allocError();
    sub_1CF73F780();
    v19 = v18;
    v20 = sub_1CF73F0CC();
    if (qword_1EFBA0938 != -1)
      swift_once();
    v65 = v11;
    v21 = qword_1EFBA2A10;
    if (os_log_type_enabled((os_log_t)qword_1EFBA2A10, v20))
    {
      v22 = v18;
      swift_retain();
      v23 = v18;
      v24 = swift_slowAlloc();
      v25 = swift_slowAlloc();
      v63 = v8;
      v26 = v25;
      aBlock = v25;
      *(_DWORD *)v24 = 136446466;
      swift_beginAccess();
      v27 = *(_QWORD *)(a1 + 16);
      v28 = *(_QWORD *)(a1 + 24);
      swift_bridgeObjectRetain();
      sub_1CF68F110(v27, v28, &aBlock);
      v73 = v29;
      sub_1CF73F2A0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2080;
      swift_getErrorValue();
      v30 = sub_1CF73F720();
      sub_1CF68F110(v30, v31, &aBlock);
      v73 = v32;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1CF67E000, v21, v20, "%{public}s: Unable to start transport: %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      v33 = v26;
      v8 = v63;
      MEMORY[0x1D17D3ED0](v33, -1, -1);
      MEMORY[0x1D17D3ED0](v24, -1, -1);
    }
    v34 = (_QWORD *)swift_allocObject();
    v35 = v69;
    v34[2] = v68;
    v34[3] = v35;
    v34[4] = v18;
    v78 = sub_1CF6ECE10;
    v79 = v34;
    aBlock = MEMORY[0x1E0C809B0];
    v75 = 1107296256;
    v76 = sub_1CF6CC068;
    v77 = &block_descriptor_131;
    v36 = _Block_copy(&aBlock);
    swift_retain();
    v37 = v18;
    sub_1CF73ED6C();
    v73 = MEMORY[0x1E0DEE9D8];
    sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
    sub_1CF6D23E4((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
    v38 = v65;
    sub_1CF73F2F4();
    MEMORY[0x1D17D2D90](0, v15, v38, v36);
    _Block_release(v36);

    (*((void (**)(char *, uint64_t))v67 + 1))(v38, v8);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v70);
  }
  else
  {
    v64 = a2;
    sub_1CF6E6AA0((uint64_t)v64);
    swift_retain();
    sub_1CF6E6AAC(a3, a4);
    sub_1CF6B3208(0, &qword_1EFBA3040);
    v62 = v40;
    v61 = *(_QWORD *)(a1 + 128);
    v41 = sub_1CF73F1B0();
    v60[1] = v39;
    v65 = (char *)v41;
    swift_getObjectType();
    v78 = sub_1CF6ECDA0;
    v79 = (_QWORD *)a1;
    aBlock = MEMORY[0x1E0C809B0];
    v75 = 1107296256;
    v76 = sub_1CF6F79AC;
    v77 = &block_descriptor_110;
    v42 = v8;
    v43 = _Block_copy(&aBlock);
    swift_retain();
    sub_1CF6F79D4();
    sub_1CF6F79D8();
    sub_1CF73F1D4();
    _Block_release(v43);
    v44 = (void (*)(char *, uint64_t))*((_QWORD *)v67 + 1);
    v44(v11, v42);
    v67 = v44;
    v45 = *(void (**)(char *, uint64_t))(v66 + 8);
    v46 = v70;
    v45(v15, v70);
    swift_release();
    v78 = sub_1CF6ECDA4;
    v79 = (_QWORD *)a1;
    aBlock = MEMORY[0x1E0C809B0];
    v75 = 1107296256;
    v76 = sub_1CF6F79AC;
    v77 = &block_descriptor_113;
    v47 = _Block_copy(&aBlock);
    swift_retain();
    sub_1CF73ED6C();
    sub_1CF6E9D14();
    sub_1CF73F1E0();
    _Block_release(v47);
    v44(v11, v42);
    v45(v15, v46);
    swift_release();
    v48 = swift_unknownObjectRetain();
    sub_1CF6E6AB8(v48);
    sub_1CF73F1C8();
    swift_getObjectType();
    v78 = sub_1CF6ECDAC;
    v79 = (_QWORD *)a1;
    aBlock = MEMORY[0x1E0C809B0];
    v75 = 1107296256;
    v76 = sub_1CF6F79AC;
    v77 = &block_descriptor_116;
    v49 = _Block_copy(&aBlock);
    swift_retain();
    sub_1CF6F79D4();
    sub_1CF6F79D8();
    sub_1CF73F1D4();
    _Block_release(v49);
    v50 = v42;
    v51 = v42;
    v63 = v42;
    v52 = v67;
    v67(v11, v50);
    v45(v15, v46);
    swift_release();
    v78 = sub_1CF6ECDB0;
    v79 = (_QWORD *)a1;
    aBlock = MEMORY[0x1E0C809B0];
    v75 = 1107296256;
    v76 = sub_1CF6F79AC;
    v77 = &block_descriptor_119;
    v53 = _Block_copy(&aBlock);
    swift_retain();
    sub_1CF73ED6C();
    sub_1CF6E9D14();
    sub_1CF73F1E0();
    _Block_release(v53);
    v52(v11, v51);
    v45(v15, v46);
    swift_release();
    v54 = swift_unknownObjectRetain();
    sub_1CF6E6AC4(v54);
    v55 = (_QWORD *)swift_allocObject();
    v56 = v69;
    v55[2] = v68;
    v55[3] = v56;
    v55[4] = a1;
    v78 = sub_1CF6ECDC4;
    v79 = v55;
    aBlock = MEMORY[0x1E0C809B0];
    v75 = 1107296256;
    v76 = sub_1CF6CC068;
    v77 = &block_descriptor_125;
    v57 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    sub_1CF73ED6C();
    v71 = MEMORY[0x1E0DEE9D8];
    sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
    sub_1CF6D23E4((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
    v58 = v63;
    sub_1CF73F2F4();
    MEMORY[0x1D17D2D90](0, v15, v11, v57);
    _Block_release(v57);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    v67(v11, v58);
    v45(v15, v70);
  }
  return swift_release();
}

void sub_1CF6E9C88(void (*a1)(_BYTE *), uint64_t a2, void *a3)
{
  id v5;
  _BYTE v6[152];
  _QWORD v7[19];

  v7[0] = a3;
  sub_1CF6ECBEC((uint64_t)v7);
  sub_1CF6CAAD0(v7, v6);
  v5 = a3;
  a1(v6);

}

void sub_1CF6E9CEC()
{
  sub_1CF6E6AB8(0);
  sub_1CF6E8F14();
}

uint64_t sub_1CF6E9D14()
{
  sub_1CF73ED54();
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6D23E4((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
  return sub_1CF73F2F4();
}

void sub_1CF6E9DC0()
{
  sub_1CF6E6AC4(0);
  sub_1CF6E8F14();
}

uint64_t sub_1CF6E9DE8(void (*a1)(_BYTE *), uint64_t a2)
{
  _BYTE v5[152];
  _WORD v6[76];

  sub_1CF6ECE1C(v6);
  sub_1CF6CAAD0(v6, v5);
  a1(v5);
  return sub_1CF6EFDEC((uint64_t)a1, a2);
}

void sub_1CF6E9E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = v4;
  v10 = *(NSObject **)(v5 + 128);
  v11 = (_QWORD *)OUTLINED_FUNCTION_16();
  v11[2] = v5;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a1;
  v11[6] = a2;
  v12 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v12 + 16) = sub_1CF6EB538;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = OUTLINED_FUNCTION_1_9((uint64_t)sub_1CF6D7584, MEMORY[0x1E0C809B0], 1107296256, v14, v15);
  OUTLINED_FUNCTION_350();
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_2_4();
  swift_release();
  dispatch_sync(v10, v13);
  _Block_release(v13);
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_42_6();
  OUTLINED_FUNCTION_16_0();
  if ((v10 & 1) != 0)
    __break(1u);
  else
    OUTLINED_FUNCTION_26_6();
}

uint64_t sub_1CF6E9F54(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  _QWORD *v45;
  void *v46;
  id v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t aBlock;
  unint64_t v59;
  uint64_t (*v60)(uint64_t);
  void *v61;
  void (*v62)();
  _QWORD *v63;

  v10 = sub_1CF73ED54();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CF73ED84();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[17];
  v55 = v18;
  if (!v17)
  {
    v54 = v14;
    v21 = (void *)a1[13];
    v22 = v16;
    v23 = swift_allocObject();
    *(_QWORD *)(v23 + 16) = a2;
    *(_QWORD *)(v23 + 24) = a3;
    v62 = sub_1CF6ECD58;
    v63 = (_QWORD *)v23;
    aBlock = MEMORY[0x1E0C809B0];
    v59 = 1107296256;
    v60 = sub_1CF6CC068;
    v61 = &block_descriptor_101;
    v24 = _Block_copy(&aBlock);
    v25 = v21;
    swift_retain();
    sub_1CF73ED6C();
    v57 = MEMORY[0x1E0DEE9D8];
    sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
    sub_1CF6D23E4((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
    sub_1CF73F2F4();
    MEMORY[0x1D17D2D90](0, v22, v13, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_10;
  }
  v52 = v16;
  v53 = v13;
  v19 = a1 + 19;
  swift_beginAccess();
  if (!*(_QWORD *)(a1[19] + 16))
  {
    v50 = v11;
    v51 = v10;
    v54 = v14;
    swift_beginAccess();
    v27 = a1[20];
    v26 = a1[21];
    swift_unknownObjectRetain();
    sub_1CF6934BC(v27, v26);
    v28 = sub_1CF73E5C8();
    sub_1CF6933C0(v27, v26);
    v29 = v28 < a4;
    v20 = a2;
    if (v29)
      goto LABEL_7;
    v35 = a1[20];
    v36 = a1[21];
    sub_1CF6934BC(v35, v36);
    sub_1CF6E7DA0(a5, v35, v36);
    v37 = aBlock;
    v38 = v59;
    v39 = a1[20];
    v40 = a1[21];
    sub_1CF6934BC(v39, v40);
    v41 = sub_1CF73E5C8();
    sub_1CF6E7F0C(v41, v39, v40);
    sub_1CF6E6698(aBlock, v59);
    sub_1CF6E6AD0(v42, v43);
    v44 = (void *)a1[13];
    v45 = (_QWORD *)swift_allocObject();
    v45[2] = v20;
    v45[3] = a3;
    v45[4] = v37;
    v45[5] = v38;
    v62 = sub_1CF6ECD80;
    v63 = v45;
    aBlock = MEMORY[0x1E0C809B0];
    v59 = 1107296256;
    v60 = sub_1CF6CC068;
    v61 = &block_descriptor_107;
    v46 = _Block_copy(&aBlock);
    swift_retain();
    v47 = v44;
    sub_1CF6934BC(v37, v38);
    v22 = v52;
    sub_1CF73ED6C();
    v56 = MEMORY[0x1E0DEE9D8];
    sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
    sub_1CF6D23E4((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
    v48 = v53;
    v49 = v51;
    sub_1CF73F2F4();
    MEMORY[0x1D17D2D90](0, v22, v48, v46);
    _Block_release(v46);
    swift_unknownObjectRelease();

    sub_1CF6933C0(v37, v38);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
LABEL_10:
    (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v54);
    return swift_release();
  }
  swift_unknownObjectRetain();
  v20 = a2;
LABEL_7:
  swift_beginAccess();
  swift_retain();
  sub_1CF709CCC();
  v30 = *(_QWORD *)(*v19 + 16);
  sub_1CF709DA0(v30);
  v31 = *v19;
  *(_QWORD *)(v31 + 16) = v30 + 1;
  v32 = (_QWORD *)(v31 + 32 * v30);
  v32[4] = a4;
  v32[5] = a5;
  v32[6] = v20;
  v32[7] = a3;
  v33 = *v19;
  swift_endAccess();
  if (*(_QWORD *)(v33 + 16) == 1)
  {
    swift_getObjectType();
    sub_1CF73F204();
  }
  return swift_unknownObjectRelease();
}

void sub_1CF6EA428(void (*a1)(void *, _QWORD, uint64_t))
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1CF6AA5E0();
  sub_1CF73F774();
  sub_1CF73F780();
  sub_1CF6ABB3C();
  v2 = (void *)swift_allocError();
  *v3 = v4;
  v3[1] = v5;
  a1(v2, 0, 1);

}

uint64_t sub_1CF6EA510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  NSObject *v10;
  _QWORD *v11;
  uint64_t v12;
  void *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  v5 = v4;
  v10 = *(NSObject **)(v5 + 128);
  v11 = (_QWORD *)OUTLINED_FUNCTION_16();
  v11[2] = v5;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a1;
  v11[6] = a2;
  v12 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v12 + 16) = sub_1CF6EB570;
  *(_QWORD *)(v12 + 24) = v11;
  v13 = OUTLINED_FUNCTION_1_9((uint64_t)sub_1CF6D7584, MEMORY[0x1E0C809B0], 1107296256, v15, v16);
  OUTLINED_FUNCTION_83();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_33_6(a1);
  OUTLINED_FUNCTION_2_4();
  swift_release();
  dispatch_sync(v10, v13);
  OUTLINED_FUNCTION_83_1();
  OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_42_6();
  result = OUTLINED_FUNCTION_16_0();
  if ((v10 & 1) != 0)
    __break(1u);
  return result;
}

uint64_t sub_1CF6EA63C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  id v29;
  _QWORD v30[2];
  _QWORD aBlock[6];

  v10 = sub_1CF73ED54();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1CF73ED84();
  v15 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[18])
  {
    swift_beginAccess();
    swift_retain();
    swift_unknownObjectRetain();
    sub_1CF6934BC(a4, a5);
    sub_1CF709CD8();
    v19 = *(_QWORD *)(a1[22] + 16);
    sub_1CF709DAC(v19);
    v20 = a1[22];
    *(_QWORD *)(v20 + 16) = v19 + 1;
    v21 = (_QWORD *)(v20 + 32 * v19);
    v21[4] = a4;
    v21[5] = a5;
    v21[6] = a2;
    v21[7] = a3;
    v22 = a1[22];
    swift_endAccess();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      swift_getObjectType();
      sub_1CF73F204();
    }
    return swift_unknownObjectRelease();
  }
  else
  {
    v24 = v11;
    v25 = (void *)a1[13];
    v30[0] = v15;
    v26 = v16;
    v27 = swift_allocObject();
    *(_QWORD *)(v27 + 16) = a2;
    *(_QWORD *)(v27 + 24) = a3;
    aBlock[4] = sub_1CF6ECD50;
    aBlock[5] = v27;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1CF6CC068;
    aBlock[3] = &block_descriptor_95;
    v28 = _Block_copy(aBlock);
    v29 = v25;
    swift_retain();
    sub_1CF73ED6C();
    v30[1] = MEMORY[0x1E0DEE9D8];
    sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
    sub_1CF6D23E4((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
    sub_1CF73F2F4();
    MEMORY[0x1D17D2D90](0, v18, v13, v28);
    _Block_release(v28);

    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v10);
    (*(void (**)(char *, _QWORD))(v26 + 8))(v18, v30[0]);
    return swift_release();
  }
}

void sub_1CF6EA8D8(void (*a1)(void *, _QWORD *))
{
  void *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_1CF6AA5E0();
  sub_1CF73F774();
  sub_1CF73F780();
  sub_1CF6ABB3C();
  v2 = (void *)swift_allocError();
  *v3 = v4;
  v3[1] = v5;
  a1(v2, v3);

}

uint64_t sub_1CF6EA9BC()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  void *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v1 = *(NSObject **)(v0 + 128);
  v2 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v2 + 16) = sub_1CF6EB580;
  *(_QWORD *)(v2 + 24) = v0;
  v3 = OUTLINED_FUNCTION_1_9((uint64_t)sub_1CF6D7584, MEMORY[0x1E0C809B0], 1107296256, v5, v6);
  OUTLINED_FUNCTION_2_4();
  swift_retain();
  OUTLINED_FUNCTION_260();
  dispatch_sync(v1, v3);
  OUTLINED_FUNCTION_54_5();
  LOBYTE(v1) = OUTLINED_FUNCTION_21_5();
  OUTLINED_FUNCTION_16_0();
  result = swift_release();
  if ((v1 & 1) != 0)
    __break(1u);
  return result;
}

void sub_1CF6EAAA0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  void *v25;
  _QWORD *v26;
  uint64_t v27;
  void *v28;
  id v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t aBlock;
  uint64_t v45;
  uint64_t (*v46)(uint64_t);
  void *v47;
  uint64_t (*v48)();
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = sub_1CF73ED54();
  v40 = *(_QWORD *)(v2 - 8);
  v41 = v2;
  MEMORY[0x1E0C80A78](v2);
  v39 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1CF73ED84();
  v37 = *(_QWORD *)(v4 - 8);
  v38 = v4;
  MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF6AA5E0();
  sub_1CF73F774();
  v50 = v52;
  v51 = v53;
  sub_1CF73F780();
  v35 = aBlock;
  v34 = v45;
  swift_beginAccess();
  v6 = a1[19];
  v7 = *(_QWORD *)(v6 + 16);
  v8 = MEMORY[0x1E0DEE9D8];
  v42 = a1;
  if (v7)
  {
    aBlock = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CF6A2F2C();
    v8 = aBlock;
    v9 = (uint64_t *)(v6 + 56);
    do
    {
      v10 = *(v9 - 1);
      v11 = *v9;
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v10;
      *(_QWORD *)(v12 + 24) = v11;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CF6A2F2C();
        v8 = aBlock;
      }
      v13 = *(_QWORD *)(v8 + 16);
      if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_1CF6A2F2C();
        v8 = aBlock;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      v14 = v8 + 16 * v13;
      *(_QWORD *)(v14 + 32) = sub_1CF6ECCF0;
      *(_QWORD *)(v14 + 40) = v12;
      v9 += 4;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    a1 = v42;
  }
  swift_beginAccess();
  v15 = a1[22];
  v16 = *(_QWORD *)(v15 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    aBlock = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1CF6A2EF8();
    v18 = aBlock;
    v19 = (uint64_t *)(v15 + 56);
    do
    {
      v20 = *(v19 - 1);
      v21 = *v19;
      v22 = swift_allocObject();
      *(_QWORD *)(v22 + 16) = v20;
      *(_QWORD *)(v22 + 24) = v21;
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1CF6A2EF8();
        v18 = aBlock;
      }
      v23 = *(_QWORD *)(v18 + 16);
      if (v23 >= *(_QWORD *)(v18 + 24) >> 1)
      {
        sub_1CF6A2EF8();
        v18 = aBlock;
      }
      *(_QWORD *)(v18 + 16) = v23 + 1;
      v24 = v18 + 16 * v23;
      *(_QWORD *)(v24 + 32) = sub_1CF6AA0A8;
      *(_QWORD *)(v24 + 40) = v22;
      v19 += 4;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    a1 = v42;
    v17 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v18 = MEMORY[0x1E0DEE9D8];
  }
  v25 = (void *)a1[13];
  v26 = (_QWORD *)swift_allocObject();
  v27 = v35;
  v26[2] = v8;
  v26[3] = v27;
  v26[4] = v34;
  v26[5] = v18;
  v48 = sub_1CF6ECD44;
  v49 = v26;
  aBlock = MEMORY[0x1E0C809B0];
  v45 = 1107296256;
  v46 = sub_1CF6CC068;
  v47 = &block_descriptor_89;
  v28 = _Block_copy(&aBlock);
  v29 = v25;
  v30 = v36;
  sub_1CF73ED6C();
  v43 = v17;
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6D23E4((unint64_t *)&qword_1ED8F7A10, (uint64_t *)&unk_1ED8F7A00);
  v31 = v39;
  v32 = v41;
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v30, v31, v28);
  _Block_release(v28);

  (*(void (**)(char *, uint64_t))(v40 + 8))(v31, v32);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v30, v38);
  swift_release();
  a1[19] = v17;
  swift_bridgeObjectRelease();
  a1[22] = v17;
  swift_bridgeObjectRelease();
  if (a1[17])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CF73F1F8();
    swift_unknownObjectRelease();
  }
  if (a1[18])
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1CF73F1F8();
    swift_unknownObjectRelease();
  }
  sub_1CF6E8F14();
}

uint64_t sub_1CF6EAFBC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD *);
  void *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *);
  void *v16;
  _QWORD *v17;
  _QWORD v19[2];
  char v20;

  v4 = a4;
  v7 = *(_QWORD *)(result + 16);
  if (v7)
  {
    v8 = result;
    sub_1CF6ABB3C();
    swift_bridgeObjectRetain();
    v9 = v8 + 40;
    do
    {
      v10 = *(void (**)(_QWORD *))(v9 - 8);
      v11 = (void *)swift_allocError();
      *v12 = a2;
      v12[1] = a3;
      v19[0] = v11;
      v19[1] = 0;
      v20 = 1;
      swift_retain();
      swift_bridgeObjectRetain();
      v10(v19);

      swift_release();
      v9 += 16;
      --v7;
    }
    while (v7);
    result = swift_bridgeObjectRelease();
    v4 = a4;
  }
  v13 = *(_QWORD *)(v4 + 16);
  if (v13)
  {
    sub_1CF6ABB3C();
    swift_bridgeObjectRetain();
    v14 = v4 + 40;
    do
    {
      v15 = *(void (**)(_QWORD *))(v14 - 8);
      v16 = (void *)swift_allocError();
      *v17 = a2;
      v17[1] = a3;
      v19[0] = v16;
      swift_bridgeObjectRetain();
      swift_retain();
      v15(v19);

      swift_release();
      v14 += 16;
      --v13;
    }
    while (v13);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1CF6EB144()
{
  sub_1CF73F348();
  sub_1CF73EF58();
  sub_1CF73F87C();
  sub_1CF73EF58();
  swift_bridgeObjectRelease();
  sub_1CF73EF58();
  sub_1CF73F450();
  __break(1u);
}

uint64_t sub_1CF6EB214()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10();
  return *(unsigned __int8 *)(v0 + 184);
}

uint64_t sub_1CF6EB240(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_10();
  *(_BYTE *)(v1 + 184) = a1;
  return result;
}

uint64_t SecureSocketDataTransport.networkAdvertActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 185);
}

uint64_t SecureSocketDataTransport.endpoint.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1CF6EB58C(v1 + 192, a1);
}

uint64_t SecureSocketDataTransport.endpointHasBeenUpdatedSinceInitialization.getter()
{
  return 0;
}

void sub_1CF6EB29C()
{
  sub_1CF6E69DC();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6EB2B8()
{
  return sub_1CF6EB214() & 1;
}

uint64_t sub_1CF6EB2DC()
{
  return SecureSocketDataTransport.networkAdvertActive.getter();
}

void sub_1CF6EB2FC(void *a1, uint64_t a2, uint64_t a3)
{
  sub_1CF6E91B0(a1, a2, a3);
}

uint64_t sub_1CF6EB31C()
{
  return sub_1CF6EA9BC();
}

void sub_1CF6EB33C()
{
  sub_1CF6EB144();
}

uint64_t sub_1CF6EB350@<X0>(uint64_t a1@<X8>)
{
  return SecureSocketDataTransport.endpoint.getter(a1);
}

uint64_t sub_1CF6EB370@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  uint64_t v7;

  if (a1)
  {
    if (a1 <= 14)
    {
      result = sub_1CF73E4C0();
      v6 = v7 & 0xFFFFFFFFFFFFFFLL;
    }
    else
    {
      sub_1CF73E460();
      swift_allocObject();
      v4 = sub_1CF73E424();
      if ((unint64_t)a1 >= 0x7FFFFFFF)
      {
        sub_1CF73E520();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = a1;
        v6 = v4 | 0x8000000000000000;
      }
      else
      {
        result = a1 << 32;
        v6 = v4 | 0x4000000000000000;
      }
    }
  }
  else
  {
    result = 0;
    v6 = 0xC000000000000000;
  }
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1CF6EB4CC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_176();

  OUTLINED_FUNCTION_34_6();
  OUTLINED_FUNCTION_9_7();
  return swift_deallocObject();
}

uint64_t sub_1CF6EB4F0()
{
  uint64_t v0;

  return sub_1CF6E92B8(*(_QWORD *)(v0 + 16), *(id *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t sub_1CF6EB518()
{
  OUTLINED_FUNCTION_176();
  swift_release();
  OUTLINED_FUNCTION_24_6();
  return swift_deallocObject();
}

uint64_t sub_1CF6EB538()
{
  return sub_1CF6ECC60((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CF6E9F54);
}

uint64_t sub_1CF6EB548()
{
  uint64_t v0;

  OUTLINED_FUNCTION_176();
  swift_release();
  sub_1CF6933C0(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48));
  OUTLINED_FUNCTION_24_6();
  return swift_deallocObject();
}

uint64_t sub_1CF6EB570()
{
  return sub_1CF6ECC60((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CF6EA63C);
}

void sub_1CF6EB580()
{
  _QWORD *v0;

  sub_1CF6EAAA0(v0);
}

uint64_t sub_1CF6EB58C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1CF6EB5D4(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_1CF6E69DC();
  a1[1] = v2;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6EB5FC(_BYTE *a1@<X8>)
{
  *a1 = sub_1CF6EB214() & 1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6EB624(char *a1)
{
  sub_1CF6EB240(*a1);
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for SecureSocketDataTransport()
{
  return objc_opt_self();
}

uint64_t method lookup function for SecureSocketDataTransport()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SecureSocketDataTransport.isPeerToPeer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.id.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.id.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.__allocating_init(physicallyConnected:underlyingConnectionSocket:bufferedReceiveSizeHandler:syncReceiveHandler:syncSendHandler:cleanupConnectionHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.start(withTargetQueue:eventHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.receive(minLength:maxLength:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.send(content:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.getHost()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of SecureSocketDataTransport.physicallyConnected.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t destroy for SecureSocketDataTransport.SendRequest(uint64_t a1)
{
  sub_1CF6933C0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return swift_release();
}

uint64_t *initializeWithCopy for SecureSocketDataTransport.SendRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF6934BC(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for SecureSocketDataTransport.SendRequest(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  sub_1CF6934BC(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1CF6933C0(v6, v7);
  v8 = a2[3];
  a1[2] = a2[2];
  a1[3] = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SecureSocketDataTransport.SendRequest(uint64_t a1, _OWORD *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *a2;
  sub_1CF6933C0(v4, v5);
  *(_OWORD *)(a1 + 16) = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SecureSocketDataTransport.SendRequest()
{
  return &type metadata for SecureSocketDataTransport.SendRequest;
}

uint64_t destroy for SecureSocketDataTransport.ReceiveRequest()
{
  return swift_release();
}

uint64_t initializeWithCopy for SecureSocketDataTransport.ReceiveRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SecureSocketDataTransport.ReceiveRequest(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  *a1 = *a2;
  a1[1] = a2[1];
  v3 = a2[3];
  a1[2] = a2[2];
  a1[3] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SecureSocketDataTransport.ReceiveRequest(_OWORD *a1, _OWORD *a2)
{
  __int128 v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t _s19RemotePairingDevice25SecureSocketDataTransportC14ReceiveRequestVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1CF6EB934(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureSocketDataTransport.ReceiveRequest()
{
  return &type metadata for SecureSocketDataTransport.ReceiveRequest;
}

uint64_t sub_1CF6EB984()
{
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void sub_1CF6EB9A8()
{
  uint64_t v0;

  sub_1CF6E8D70(*(void (**)(_BYTE *))(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1CF6EB9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x1E0C80C00];
  v6 = a1;
  v7 = a2;
  v8 = BYTE2(a2);
  v9 = BYTE3(a2);
  v10 = BYTE4(a2);
  v11 = BYTE5(a2);
  v4 = (*(uint64_t (**)(uint64_t *, uint64_t))(a3 + 72))(&v6, a4);
  swift_release();
  return v4;
}

uint64_t sub_1CF6EBAAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_1CF73E430();
  v7 = result;
  if (result)
  {
    result = sub_1CF73E454();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  v8 = __OFSUB__(a2, a1);
  v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  v10 = sub_1CF73E448();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  v12 = v7 + v11;
  if (v7)
    v13 = v12;
  else
    v13 = 0;
  return sub_1CF6EC390(v7, v13, a3);
}

uint64_t sub_1CF6EBB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v8 = sub_1CF73E430();
  if (v8)
  {
    v9 = v8;
    result = sub_1CF73E454();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
      goto LABEL_8;
    }
    v11 = v9 + a1 - result;
  }
  else
  {
    v11 = 0;
  }
  result = sub_1CF73E448();
  if (v11)
  {
    v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(v11, a5);
    swift_release();
    return v12;
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1CF6EBBD0()
{
  __asm { BR              X11 }
}

_QWORD *sub_1CF6EBC30@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;

  v7 = v4;
  LOWORD(v8) = a1;
  BYTE2(v8) = BYTE2(a1);
  HIBYTE(v8) = BYTE3(a1);
  v9 = BYTE4(a1);
  v10 = BYTE5(a1);
  v11 = BYTE6(a1);
  result = sub_1CF6EC304((uint64_t)&v7, v3, v2, BYTE6(a1));
  v6 = v8 | ((unint64_t)v9 << 32) | ((unint64_t)v10 << 40) | ((unint64_t)v11 << 48);
  *v1 = v7;
  v1[1] = v6;
  return result;
}

void sub_1CF6EBE70(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 8) >> 62;
  swift_retain_n();
  __asm { BR              X9 }
}

uint64_t sub_1CF6EBEDC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t *, uint64_t);
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unsigned int v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unsigned __int8 v13;

  v9 = v3;
  LOWORD(v10) = v0;
  BYTE2(v10) = BYTE2(v0);
  HIBYTE(v10) = BYTE3(v0);
  v11 = BYTE4(v0);
  v12 = BYTE5(v0);
  v13 = BYTE6(v0);
  swift_retain();
  v5 = *(uint64_t (**)(uint64_t *, uint64_t))(v1 + 56);
  swift_retain_n();
  v6 = v5(&v9, v4);
  swift_release_n();
  v7 = v10 | ((unint64_t)v11 << 32) | ((unint64_t)v12 << 40) | ((unint64_t)v13 << 48);
  *v2 = v9;
  v2[1] = v7;
  swift_release_n();
  return v6;
}

char *sub_1CF6EC1D0(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_1CF73E430();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_1CF73E454();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_1CF73E448();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_1CF6EC27C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_1CF73E430();
  if (result)
  {
    v9 = result;
    result = sub_1CF73E454();
    if (!__OFSUB__(a1, result))
    {
      v10 = v9 + a1 - result;
      sub_1CF73E448();
      v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 56))(v10, a5);
      swift_release();
      return v11;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CF6EC304(uint64_t a1, _QWORD *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  result = a2(&v6, a1, a1 + a4);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

_QWORD *sub_1CF6EC348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v5[3];
  _QWORD v6[2];

  v6[0] = a3;
  v6[1] = a4;
  v5[2] = v6;
  return sub_1CF6EC484((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1CF6ECCD4, (uint64_t)v5, a1, a2);
}

uint64_t sub_1CF6EC390@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = sub_1CF73E4C0();
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = MEMORY[0x1D17D20E8]();
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = MEMORY[0x1D17D2100]();
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1CF6EC404(uint64_t result)
{
  char v1;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_1CF73F354();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_1CF6EC484(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;

  if (a3)
  {
    v6 = a4 - a3;
    v7 = a3;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  result = a1(&v9, v7, v6);
  if (!v4)
    return (_QWORD *)v9;
  return result;
}

uint64_t sub_1CF6EC4E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 16);
  if (v9 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v10 = result;
  v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v13 > *(_QWORD *)(v8 + 24) >> 1)
  {
    if (v9 <= v13)
      v17 = v9 + v12;
    else
      v17 = v9;
    sub_1CF6C714C(isUniquelyReferenced_nonNull_native, v17, 1, v8);
    v8 = v18;
  }
  v19 = v8 + 32 + 32 * v10;
  result = swift_arrayDestroy();
  if (!v12)
    goto LABEL_16;
  v20 = *(_QWORD *)(v8 + 16);
  if (__OFSUB__(v20, a2))
    goto LABEL_22;
  result = (uint64_t)sub_1CF6C8168((char *)(v8 + 32 + 32 * a2), v20 - a2, (char *)(v19 + 32));
  v21 = *(_QWORD *)(v8 + 16);
  v22 = __OFADD__(v21, v12);
  v23 = v21 + v12;
  if (!v22)
  {
    *(_QWORD *)(v8 + 16) = v23;
LABEL_16:
    *(_QWORD *)v19 = a3;
    *(_QWORD *)(v19 + 8) = a4;
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    *v6 = v8;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1CF6EC610(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    sub_1CF6C714C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    v4 = v12;
  }
  v13 = (char *)(v4 + 32 + 32 * v6);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_16;
  v14 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v14, a2))
    goto LABEL_22;
  result = (uint64_t)sub_1CF6C8168((char *)(v4 + 32 + 32 * a2), v14 - a2, v13);
  v15 = *(_QWORD *)(v4 + 16);
  v16 = __OFADD__(v15, v8);
  v17 = v15 - v7;
  if (!v16)
  {
    *(_QWORD *)(v4 + 16) = v17;
LABEL_16:
    *v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1CF6EC70C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 16);
  if (v9 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v10 = result;
  v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v13 > *(_QWORD *)(v8 + 24) >> 1)
  {
    if (v9 <= v13)
      v17 = v9 + v12;
    else
      v17 = v9;
    sub_1CF6C7168(isUniquelyReferenced_nonNull_native, v17, 1, v8);
    v8 = v18;
  }
  v19 = v8 + 32 + 32 * v10;
  result = swift_arrayDestroy();
  if (!v12)
    goto LABEL_16;
  v20 = *(_QWORD *)(v8 + 16);
  if (__OFSUB__(v20, a2))
    goto LABEL_22;
  result = (uint64_t)sub_1CF6C8168((char *)(v8 + 32 + 32 * a2), v20 - a2, (char *)(v19 + 32));
  v21 = *(_QWORD *)(v8 + 16);
  v22 = __OFADD__(v21, v12);
  v23 = v21 + v12;
  if (!v22)
  {
    *(_QWORD *)(v8 + 16) = v23;
LABEL_16:
    *(_QWORD *)v19 = a3;
    *(_QWORD *)(v19 + 8) = a4;
    *(_QWORD *)(v19 + 16) = a5;
    *(_QWORD *)(v19 + 24) = a6;
    *v6 = v8;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1CF6EC838(uint64_t result, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v6 = result;
  v7 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v8 = result - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    sub_1CF6C7168(isUniquelyReferenced_nonNull_native, v11, 1, v4);
    v4 = v12;
  }
  v13 = (char *)(v4 + 32 + 32 * v6);
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_16;
  v14 = *(_QWORD *)(v4 + 16);
  if (__OFSUB__(v14, a2))
    goto LABEL_22;
  result = (uint64_t)sub_1CF6C8168((char *)(v4 + 32 + 32 * a2), v14 - a2, v13);
  v15 = *(_QWORD *)(v4 + 16);
  v16 = __OFADD__(v15, v8);
  v17 = v15 - v7;
  if (!v16)
  {
    *(_QWORD *)(v4 + 16) = v17;
LABEL_16:
    *v2 = v4;
    return result;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1CF6EC934()
{
  uint64_t v0;

  sub_1CF6933C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_34_6();

  OUTLINED_FUNCTION_24_6();
  return swift_deallocObject();
}

uint64_t sub_1CF6EC95C()
{
  return sub_1CF6ECC60((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CF6E8E00);
}

uint64_t sub_1CF6EC968()
{
  uint64_t v0;

  sub_1CF6933C0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  OUTLINED_FUNCTION_34_6();
  OUTLINED_FUNCTION_9_7();
  return swift_deallocObject();
}

void sub_1CF6EC988()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 32))(0);
  OUTLINED_FUNCTION_1();
}

_QWORD *sub_1CF6EC9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_1CF6EC348(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

uint64_t sub_1CF6EC9DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1CF6EC404(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1CF6ECA1C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4;
  uint64_t v5;

  v4 = __OFADD__(a1, a2);
  v5 = a1 + a2;
  if (v4)
  {
    __break(1u);
    JUMPOUT(0x1CF6ECA78);
  }
  return ((uint64_t (*)(uint64_t))((char *)&loc_1CF6ECA34 + dword_1CF6ECA7C[a4 >> 62]))(v5);
}

uint64_t sub_1CF6ECA8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v9;

  v9 = sub_1CF6ECB10(a1, a3, a4, a5);
  if (a2 <= 0)
  {
    if (v9 <= 0 && v9 > a2)
      return 0;
  }
  else if ((v9 & 0x8000000000000000) == 0 && v9 < (unint64_t)a2)
  {
    return 0;
  }
  return sub_1CF6ECA1C(a1, a2, a4, a5);
}

uint64_t sub_1CF6ECB10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return ((uint64_t (*)(void))((char *)&loc_1CF6ECB24 + dword_1CF6ECBCC[a4 >> 62]))();
}

uint64_t sub_1CF6ECB40(uint64_t a1)
{
  uint64_t v1;
  int v2;
  BOOL v3;
  BOOL v4;
  BOOL v5;

  if (v1 >= a1)
  {
    v5 = __OFSUB__(0, a1);
    v3 = a1 == 0;
    v4 = -a1 < 0;
  }
  else
  {
    v5 = 0;
    v3 = 0;
    v4 = 0;
  }
  if (!(v4 ^ v5 | v3))
  {
    __break(1u);
    JUMPOUT(0x1CF6ECBC4);
  }
  return ((uint64_t (*)(void))((char *)&loc_1CF6ECB78 + dword_1CF6ECBDC[v2]))();
}

uint64_t sub_1CF6ECBEC(uint64_t result)
{
  __int16 v1;

  v1 = *(_WORD *)(result + 144) & 0xE7FF | 0x800;
  *(_QWORD *)result &= 0xFFFFFFFFFFFFFF9uLL;
  *(_WORD *)(result + 144) = v1;
  return result;
}

uint64_t objectdestroy_40Tm()
{
  OUTLINED_FUNCTION_58();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_7();
  return swift_deallocObject();
}

uint64_t sub_1CF6ECC34()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_6();

  OUTLINED_FUNCTION_24_6();
  return swift_deallocObject();
}

uint64_t sub_1CF6ECC54()
{
  return sub_1CF6ECC60((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1CF6E7C84);
}

uint64_t sub_1CF6ECC60(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1CF6ECC74()
{
  uint64_t v0;

  OUTLINED_FUNCTION_34_6();
  sub_1CF6933C0(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  return swift_deallocObject();
}

void sub_1CF6ECC9C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_3(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  OUTLINED_FUNCTION_1();
}

_QWORD *sub_1CF6ECCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  return sub_1CF6EC9A8(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_1CF6ECCD4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CF6EC9DC(a1, a2);
}

void sub_1CF6ECCF0(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6ECD18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_7();
  return swift_deallocObject();
}

uint64_t sub_1CF6ECD44()
{
  uint64_t *v0;

  return sub_1CF6EAFBC(v0[2], v0[3], v0[4], v0[5]);
}

void sub_1CF6ECD50()
{
  uint64_t v0;

  sub_1CF6EA8D8(*(void (**)(void *, _QWORD *))(v0 + 16));
}

void sub_1CF6ECD58()
{
  uint64_t v0;

  sub_1CF6EA428(*(void (**)(void *, _QWORD, uint64_t))(v0 + 16));
}

uint64_t sub_1CF6ECD60()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58();
  sub_1CF6933C0(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_9_7();
  return swift_deallocObject();
}

void sub_1CF6ECD80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_67_3(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
  OUTLINED_FUNCTION_1();
}

void sub_1CF6ECDA4()
{
  sub_1CF6E9CEC();
}

void sub_1CF6ECDB0()
{
  sub_1CF6E9DC0();
}

uint64_t sub_1CF6ECDB8()
{
  return objectdestroy_121Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1CF6ECDC4()
{
  uint64_t v0;

  return sub_1CF6E9DE8(*(void (**)(_BYTE *))(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1CF6ECDD0()
{
  return objectdestroy_121Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

uint64_t objectdestroy_121Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_58();
  a1(*(_QWORD *)(v1 + 32));
  return swift_deallocObject();
}

void sub_1CF6ECE10()
{
  uint64_t v0;

  sub_1CF6E9C88(*(void (**)(_BYTE *))(v0 + 16), *(_QWORD *)(v0 + 24), *(void **)(v0 + 32));
}

void sub_1CF6ECE1C(_WORD *a1)
{
  bzero(a1, 0x90uLL);
  a1[72] = 4096;
}

uint64_t OUTLINED_FUNCTION_12_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_18_10()
{
  return sub_1CF73ED84();
}

uint64_t OUTLINED_FUNCTION_19_9()
{
  uint64_t v0;

  return sub_1CF693EC8(*(_QWORD *)(v0 - 240));
}

uint64_t OUTLINED_FUNCTION_20_8()
{
  return sub_1CF73ED6C();
}

uint64_t OUTLINED_FUNCTION_21_5()
{
  return swift_isEscapingClosureAtFileLocation();
}

void OUTLINED_FUNCTION_22_4(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0x16u);
}

uint64_t OUTLINED_FUNCTION_27_6@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF693EC8(a1);
}

uint64_t OUTLINED_FUNCTION_33_6(uint64_t a1)
{
  unint64_t v1;

  return sub_1CF6934BC(a1, v1);
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  uint64_t v0;

  return sub_1CF693EC8(*(_QWORD *)(v0 - 360));
}

uint64_t OUTLINED_FUNCTION_37_4()
{
  return swift_unknownObjectRelease();
}

double OUTLINED_FUNCTION_40_6()
{
  uint64_t v0;
  __int16 v1;
  double result;

  v1 = *(_WORD *)(v0 - 148);
  result = *(double *)(v0 - 160);
  *(double *)(v0 - 136) = result;
  *(_DWORD *)(v0 - 128) = *(_DWORD *)(v0 - 152);
  *(_WORD *)(v0 - 124) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_41_6()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_42_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_45_5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_1CF6EBB3C(a1, a2, a3, v4, v3);
}

uint64_t OUTLINED_FUNCTION_47_4()
{
  return sub_1CF73ED6C();
}

uint64_t OUTLINED_FUNCTION_51_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_52_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return sub_1CF73E3C4();
}

uint64_t OUTLINED_FUNCTION_53_3()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_54_5()
{
  const void *v0;

  _Block_release(v0);
}

void OUTLINED_FUNCTION_57_4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  sub_1CF6EDAC8(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_59_4(uint64_t a1)
{
  unint64_t v1;

  return sub_1CF6933C0(a1, v1);
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CF693EC8(*(_QWORD *)(v1 - 360));
  return v0;
}

void OUTLINED_FUNCTION_64_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 352) = v1;
  *(_QWORD *)(v2 - 344) = v0;
}

uint64_t OUTLINED_FUNCTION_66_2()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6933C0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_67_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, _QWORD);

  return v2(a1, a2, 0);
}

uint64_t OUTLINED_FUNCTION_68_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_69_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_70_2()
{
  return sub_1CF73ED54();
}

void OUTLINED_FUNCTION_71_3()
{
  OS_dispatch_queue.assertOnQueueHierarchy()();
}

uint64_t OUTLINED_FUNCTION_75_1()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF693FE0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_76_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  uint64_t v0;

  return sub_1CF6A3AE0(v0);
}

uint64_t OUTLINED_FUNCTION_79_1()
{
  uint64_t v0;

  return sub_1CF693EC8(v0);
}

void OUTLINED_FUNCTION_83_1()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_85_1()
{
  return sub_1CF73F720();
}

uint64_t OUTLINED_FUNCTION_86_1()
{
  return sub_1CF73F774();
}

BOOL static ControlChannelConnectionWireProtocolVersion.< infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a1 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) < *(_QWORD *)(a2 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue);
}

void sub_1CF6ED14C()
{
  objc_class *v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v1 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  v2 = (char *)OUTLINED_FUNCTION_6_14(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = 22;
  v9.receiver = v2;
  v9.super_class = v0;
  qword_1ED8F7F10 = (uint64_t)OUTLINED_FUNCTION_5_11((uint64_t)v2, sel_init, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_15();
}

id ControlChannelConnectionWireProtocolVersion.__allocating_init(rawValue:)(uint64_t a1)
{
  objc_class *v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  objc_super v11;

  v3 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v3[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = a1;
  v11.receiver = v3;
  v11.super_class = v1;
  return OUTLINED_FUNCTION_5_11((uint64_t)v3, sel_init, v4, v5, v6, v7, v8, v9, v11);
}

void static ControlChannelConnectionWireProtocolVersion.current.setter(void *a1)
{
  sub_1CF6ED3C8(a1, &qword_1ED8F7F18, (void **)&qword_1ED8F7F10);
}

void static ControlChannelConnectionWireProtocolVersion.current.modify()
{
  if (qword_1ED8F7F18 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6ED27C()
{
  objc_class *v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v1 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  v2 = (char *)OUTLINED_FUNCTION_6_14(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = 8;
  v9.receiver = v2;
  v9.super_class = v0;
  qword_1ED8F7900 = (uint64_t)OUTLINED_FUNCTION_5_11((uint64_t)v2, sel_init, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_15();
}

void static ControlChannelConnectionWireProtocolVersion.minimumSupported.setter(void *a1)
{
  sub_1CF6ED3C8(a1, &qword_1ED8F7910, (void **)&qword_1ED8F7900);
}

void static ControlChannelConnectionWireProtocolVersion.minimumSupported.modify()
{
  if (qword_1ED8F7910 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_1();
}

id sub_1CF6ED338()
{
  objc_class *v0;
  char *v1;
  id result;
  objc_super v3;

  v0 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  v1 = (char *)objc_allocWithZone(v0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = 17;
  v3.receiver = v1;
  v3.super_class = v0;
  result = objc_msgSendSuper2(&v3, sel_init);
  qword_1EFBA2C98 = (uint64_t)result;
  return result;
}

id static ControlChannelConnectionWireProtocolVersion.minimumSupportedForWirelessPairing.getter()
{
  return sub_1CF68C5CC(&qword_1EFBA0948, (id *)&qword_1EFBA2C98);
}

void static ControlChannelConnectionWireProtocolVersion.minimumSupportedForWirelessPairing.setter(void *a1)
{
  sub_1CF6ED3C8(a1, &qword_1EFBA0948, (void **)&qword_1EFBA2C98);
}

void sub_1CF6ED3C8(void *a1, _QWORD *a2, void **a3)
{
  void *v5;

  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  v5 = *a3;
  *a3 = a1;

}

void static ControlChannelConnectionWireProtocolVersion.minimumSupportedForWirelessPairing.modify()
{
  if (qword_1EFBA0948 != -1)
    swift_once();
  OUTLINED_FUNCTION_1_0();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6ED484()
{
  objc_class *v0;
  objc_class *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v1 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  v2 = (char *)OUTLINED_FUNCTION_6_14(v1);
  *(_QWORD *)&v2[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = 19;
  v9.receiver = v2;
  v9.super_class = v0;
  qword_1EFBB2018 = (uint64_t)OUTLINED_FUNCTION_5_11((uint64_t)v2, sel_init, v3, v4, v5, v6, v7, v8, v9);
  OUTLINED_FUNCTION_4_15();
}

uint64_t ControlChannelConnectionWireProtocolVersion.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue);
}

id ControlChannelConnectionWireProtocolVersion.init(rawValue:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  objc_super v9;

  *(_QWORD *)&v1[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = a1;
  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  return OUTLINED_FUNCTION_5_11((uint64_t)v9.super_class, sel_init, v2, v3, v4, v5, v6, v7, v9);
}

uint64_t ControlChannelConnectionWireProtocolVersion.__allocating_init(_:)(uint64_t result, unint64_t a2)
{
  char v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  unsigned __int8 v12;
  char v13;
  char v14;
  uint64_t v15;
  unsigned __int8 v16;
  uint64_t v17;
  unsigned __int8 v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  unsigned __int8 v23;
  uint64_t v24;
  objc_class *v25;
  char *v26;
  unsigned __int8 v27;
  uint64_t v28;
  char v29;
  objc_super v30;

  v4 = HIBYTE(a2) & 0xF;
  v5 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0)
    v6 = v4;
  else
    v6 = result & 0xFFFFFFFFFFFFLL;
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0)
        v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v7 = (unsigned __int8 *)sub_1CF73F390();
      v8 = (uint64_t)sub_1CF6EDE18(v7, v5);
      v2 = v9 & 1;
      goto LABEL_46;
    }
    if (result == 43)
    {
      if (!v4)
        goto LABEL_61;
      if (v4 == 1)
        goto LABEL_32;
      OUTLINED_FUNCTION_2_13();
      if (!v14 & v13)
        goto LABEL_32;
      v8 = v16;
      if (v15 != 2)
      {
        OUTLINED_FUNCTION_2_13();
        if (!v14 & v13)
          goto LABEL_32;
        v8 = 10 * v8 + v18;
        if (v17 != 3)
        {
          while (1)
          {
            OUTLINED_FUNCTION_7_13();
            if (!v14 & v13)
              goto LABEL_32;
            OUTLINED_FUNCTION_3_17();
            if (!v14)
              goto LABEL_32;
            v8 = v20 + v19;
            if (__OFADD__(v20, v19))
              goto LABEL_32;
            OUTLINED_FUNCTION_9_8();
            if (v14)
              goto LABEL_46;
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v4)
        {
          if (v4 != 1)
          {
            OUTLINED_FUNCTION_2_13();
            if (!(!v14 & v13))
            {
              if (v11 == 2)
              {
                v2 = 0;
                v8 = -(uint64_t)v12;
                goto LABEL_46;
              }
              if ((v10 - 48) <= 9u)
              {
                v8 = -10 * v12 - (v10 - 48);
                if (v11 == 3)
                  goto LABEL_45;
                while (1)
                {
                  OUTLINED_FUNCTION_7_13();
                  if (!v14 & v13)
                    break;
                  OUTLINED_FUNCTION_3_17();
                  if (!v14)
                    break;
                  v8 = v28 - v27;
                  if (__OFSUB__(v28, v27))
                    break;
                  OUTLINED_FUNCTION_9_8();
                  if (v14)
                    goto LABEL_46;
                }
              }
            }
          }
LABEL_32:
          v8 = 0;
          v2 = 1;
          goto LABEL_46;
        }
        __break(1u);
LABEL_61:
        __break(1u);
        return result;
      }
      if (!v4 || (result - 48) > 9u)
        goto LABEL_32;
      v8 = (result - 48);
      if (v4 != 1)
      {
        OUTLINED_FUNCTION_2_13();
        if (!v14 & v13)
          goto LABEL_32;
        v8 = 10 * v8 + v22;
        if (v21 != 2)
        {
          while (1)
          {
            OUTLINED_FUNCTION_7_13();
            if (!v14 & v13)
              goto LABEL_32;
            OUTLINED_FUNCTION_3_17();
            if (!v14)
              goto LABEL_32;
            v8 = v24 + v23;
            if (__OFADD__(v24, v23))
              goto LABEL_32;
            OUTLINED_FUNCTION_9_8();
            if (v14)
              goto LABEL_46;
          }
        }
      }
    }
LABEL_45:
    v2 = 0;
    goto LABEL_46;
  }
  v8 = sub_1CF6EDD28(result, a2, 10, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1CF6EDE18);
  v2 = v29;
LABEL_46:
  swift_bridgeObjectRelease();
  result = 0;
  if ((v2 & 1) == 0 && v8 >= 1)
  {
    v25 = (objc_class *)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
    v26 = (char *)OUTLINED_FUNCTION_6_14(v25);
    *(_QWORD *)&v26[OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue] = v8;
    v30.receiver = v26;
    v30.super_class = (Class)a2;
    return (uint64_t)objc_msgSendSuper2(&v30, sel_init);
  }
  return result;
}

BOOL sub_1CF6ED7C0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 9;
}

BOOL sub_1CF6ED7D8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 10;
}

BOOL sub_1CF6ED7F0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 11;
}

BOOL sub_1CF6ED808()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 12;
}

BOOL sub_1CF6ED820()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 13;
}

BOOL sub_1CF6ED838()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 14;
}

BOOL sub_1CF6ED850()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 15;
}

BOOL sub_1CF6ED868()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 16;
}

BOOL sub_1CF6ED880()
{
  uint64_t v0;

  return (unint64_t)(*(_QWORD *)(v0
                                      + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue)
                          - 19) < 3;
}

BOOL sub_1CF6ED89C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 19;
}

BOOL sub_1CF6ED8B4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 20;
}

BOOL sub_1CF6ED8CC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC19RemotePairingDevice43ControlChannelConnectionWireProtocolVersion_rawValue) > 21;
}

id ControlChannelConnectionWireProtocolVersion.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ControlChannelConnectionWireProtocolVersion.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id ControlChannelConnectionWireProtocolVersion.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ControlChannelConnectionWireProtocolVersion();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1CF6ED970@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  id result;

  result = ControlChannelConnectionWireProtocolVersion.__allocating_init(rawValue:)(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1CF6ED998@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = ControlChannelConnectionWireProtocolVersion.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6ED9C0()
{
  MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnectionWireProtocolVersion);
  return sub_1CF73F024();
}

uint64_t sub_1CF6EDA24()
{
  MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelConnectionWireProtocolVersion);
  return sub_1CF73F00C();
}

BOOL sub_1CF6EDA78(uint64_t *a1, uint64_t *a2)
{
  return static ControlChannelConnectionWireProtocolVersion.< infix(_:_:)(*a1, *a2);
}

uint64_t sub_1CF6EDAA4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = ControlChannelConnectionWireProtocolVersion.__allocating_init(_:)(a1, a2);
  *a3 = result;
  return result;
}

void sub_1CF6EDAC8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v4 = sub_1CF73EFA0();
    OUTLINED_FUNCTION_8_12(v4);
  }
  else
  {
    v3 = MEMORY[0x1D17D2B8C](15, a1 >> 16);
    OUTLINED_FUNCTION_8_12(v3);
  }
  OUTLINED_FUNCTION_1();
}

unsigned __int8 *sub_1CF6EDB1C(unsigned __int8 *a1, uint64_t a2)
{
  return sub_1CF6EE07C(a1, a2);
}

void sub_1CF6EDB30()
{
  sub_1CF6EDB78(&qword_1EFBA2CA8, MEMORY[0x1E0DEFD00]);
}

void sub_1CF6EDB54()
{
  sub_1CF6EDB78(&qword_1EFBA2CB0, MEMORY[0x1E0CB2120]);
}

void sub_1CF6EDB78(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
  {
    v4 = type metadata accessor for ControlChannelConnectionWireProtocolVersion();
    atomic_store(MEMORY[0x1D17D3DEC](a2, v4), a1);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t method lookup function for ControlChannelConnectionWireProtocolVersion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.__allocating_init(rawValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsReportingPairingUserConsentPrompt.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsCustomPairingRejectedReasons.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsArbitraryErrorResponses.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsRemoteUnlock.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsKVSSensitivityLevel.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsAnonymizedWirelessPairingAdverts.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsDowngradingAuthenticatedChannels.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsDeviceProvidedHardwareIdentifiersThroughPairSetup.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsQUICUDPProtocol.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsDeviceMetadataUpdates.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsUpgradingNonAutomationLockdownRecords.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of ControlChannelConnectionWireProtocolVersion.supportsMigratableTunnels.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t sub_1CF6EDD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1CF6EDD28(a1, a2, a3, (uint64_t (*)(_QWORD *, uint64_t, uint64_t))sub_1CF6EE07C);
}

uint64_t sub_1CF6EDD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, uint64_t, uint64_t))
{
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v15 = a1;
  v16 = a2;
  swift_bridgeObjectRetain();
  v7 = sub_1CF73EFC4();
  v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    v10 = HIBYTE(v8) & 0xF;
    v15 = v7;
    v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    v9 = &v15;
    goto LABEL_7;
  }
  v7 = sub_1CF6EE2E0();
  v12 = v11;
  swift_bridgeObjectRelease();
  v8 = v12;
  if ((v12 & 0x2000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    v9 = (_QWORD *)sub_1CF73F390();
  }
LABEL_7:
  v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_1CF6EDE18(unsigned __int8 *result, uint64_t a2)
{
  int v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  uint64_t v13;
  unsigned __int8 *i;
  unsigned int v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  unsigned __int8 v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 *v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  unsigned __int8 *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned __int8 v40;
  unsigned __int8 v41;
  unsigned __int8 v42;
  uint64_t v43;
  unsigned int v44;
  char v45;
  uint64_t v46;

  v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_1_14();
        if (v20 ^ v21 | v19)
          v25 = v28;
        if (v20 ^ v21 | v19)
          v26 = 65;
        if (!(v20 ^ v21 | v19))
          v27 = 58;
        if (v22)
        {
          v13 = 0;
          v29 = (unsigned __int8 *)(v22 + 1);
          do
          {
            v30 = *v29;
            if (v30 < 0x30 || v30 >= v27)
            {
              if (v30 < 0x41 || v30 >= v26)
              {
                v17 = 0;
                if (v30 < 0x61 || v30 >= v25)
                  return (unsigned __int8 *)v17;
                v31 = -87;
              }
              else
              {
                v31 = -55;
              }
            }
            else
            {
              v31 = -48;
            }
            v32 = v13 * v23;
            if ((unsigned __int128)(v13 * (__int128)v23) >> 64 != (v13 * v23) >> 63)
              return 0;
            v13 = v32 + (v30 + v31);
            if (__OFADD__(v32, (v30 + v31)))
              return 0;
            ++v29;
            --v24;
          }
          while (v24);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        OUTLINED_FUNCTION_1_14();
        if (v34 ^ v35 | v33)
          v39 = v42;
        if (v34 ^ v35 | v33)
          v40 = 65;
        if (!(v34 ^ v35 | v33))
          v41 = 58;
        if (v36)
        {
          v43 = 0;
          do
          {
            v44 = *v36;
            if (v44 < 0x30 || v44 >= v41)
            {
              if (v44 < 0x41 || v44 >= v40)
              {
                v17 = 0;
                if (v44 < 0x61 || v44 >= v39)
                  return (unsigned __int8 *)v17;
                v45 = -87;
              }
              else
              {
                v45 = -55;
              }
            }
            else
            {
              v45 = -48;
            }
            v46 = v43 * v37;
            if ((unsigned __int128)(v43 * (__int128)v37) >> 64 != (v43 * v37) >> 63)
              return 0;
            v43 = v46 + (v44 + v45);
            if (__OFADD__(v46, (v44 + v45)))
              return 0;
            ++v36;
            --v38;
          }
          while (v38);
          return (unsigned __int8 *)(v46 + (v44 + v45));
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_1_14();
        if (v4 ^ v5 | v3)
          v9 = v12;
        if (v4 ^ v5 | v3)
          v10 = 65;
        if (!(v4 ^ v5 | v3))
          v11 = 58;
        if (v6)
        {
          v13 = 0;
          for (i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                v17 = 0;
                if (v15 < 0x61 || v15 >= v9)
                  return (unsigned __int8 *)v17;
                v16 = -87;
              }
              else
              {
                v16 = -55;
              }
            }
            else
            {
              v16 = -48;
            }
            v18 = v13 * v7;
            if ((unsigned __int128)(v13 * (__int128)v7) >> 64 != (v13 * v7) >> 63)
              return 0;
            v13 = v18 - (v15 + v16);
            if (__OFSUB__(v18, (v15 + v16)))
              return 0;
            if (!--v8)
              return (unsigned __int8 *)v13;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_1CF6EE07C(unsigned __int8 *result, uint64_t a2)
{
  int v2;
  char v3;
  char v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;
  unint64_t v13;
  unsigned __int8 *i;
  unsigned int v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  BOOL v20;
  char v21;
  char v22;
  char v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  unsigned __int8 v28;
  unsigned __int8 v29;
  unsigned __int8 v30;
  unsigned __int8 *v31;
  unsigned int v32;
  char v33;
  unint64_t v34;
  unsigned __int8 v35;
  char v36;
  char v37;
  char v38;
  unsigned __int8 *v39;
  unint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  unsigned __int8 v45;
  unint64_t v46;
  unsigned int v47;
  char v48;
  unint64_t v49;
  unsigned __int8 v50;

  v2 = *result;
  if (v2 == 43)
  {
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_1_14();
        if (v22 ^ v23 | v21)
          v27 = v30;
        if (v22 ^ v23 | v21)
          v28 = 65;
        if (!(v22 ^ v23 | v21))
          v29 = 58;
        if (v24)
        {
          v13 = 0;
          v31 = (unsigned __int8 *)(v24 + 1);
          do
          {
            v32 = *v31;
            if (v32 < 0x30 || v32 >= v29)
            {
              if (v32 < 0x41 || v32 >= v28)
              {
                v17 = 0;
                if (v32 < 0x61 || v32 >= v27)
                  return (unsigned __int8 *)v17;
                v33 = -87;
              }
              else
              {
                v33 = -55;
              }
            }
            else
            {
              v33 = -48;
            }
            if (!is_mul_ok(v13, v25))
              return 0;
            v34 = v13 * v25;
            v35 = v32 + v33;
            v20 = __CFADD__(v34, v35);
            v13 = v34 + v35;
            if (v20)
              return 0;
            ++v31;
            --v26;
          }
          while (v26);
          return (unsigned __int8 *)v13;
        }
        return 0;
      }
      return 0;
    }
  }
  else
  {
    if (v2 != 45)
    {
      if (a2)
      {
        OUTLINED_FUNCTION_1_14();
        if (v37 ^ v38 | v36)
          v42 = v45;
        if (v37 ^ v38 | v36)
          v43 = 65;
        if (!(v37 ^ v38 | v36))
          v44 = 58;
        if (v39)
        {
          v46 = 0;
          do
          {
            v47 = *v39;
            if (v47 < 0x30 || v47 >= v44)
            {
              if (v47 < 0x41 || v47 >= v43)
              {
                v17 = 0;
                if (v47 < 0x61 || v47 >= v42)
                  return (unsigned __int8 *)v17;
                v48 = -87;
              }
              else
              {
                v48 = -55;
              }
            }
            else
            {
              v48 = -48;
            }
            if (!is_mul_ok(v46, v40))
              return 0;
            v49 = v46 * v40;
            v50 = v47 + v48;
            v20 = __CFADD__(v49, v50);
            v46 = v49 + v50;
            if (v20)
              return 0;
            ++v39;
            --v41;
          }
          while (v41);
          return (unsigned __int8 *)v46;
        }
        return 0;
      }
      return 0;
    }
    if (a2 >= 1)
    {
      if (a2 != 1)
      {
        OUTLINED_FUNCTION_1_14();
        if (v4 ^ v5 | v3)
          v9 = v12;
        if (v4 ^ v5 | v3)
          v10 = 65;
        if (!(v4 ^ v5 | v3))
          v11 = 58;
        if (v6)
        {
          v13 = 0;
          for (i = (unsigned __int8 *)(v6 + 1); ; ++i)
          {
            v15 = *i;
            if (v15 < 0x30 || v15 >= v11)
            {
              if (v15 < 0x41 || v15 >= v10)
              {
                v17 = 0;
                if (v15 < 0x61 || v15 >= v9)
                  return (unsigned __int8 *)v17;
                v16 = -87;
              }
              else
              {
                v16 = -55;
              }
            }
            else
            {
              v16 = -48;
            }
            if (!is_mul_ok(v13, v7))
              return 0;
            v18 = v13 * v7;
            v19 = v15 + v16;
            v20 = v18 >= v19;
            v13 = v18 - v19;
            if (!v20)
              return 0;
            if (!--v8)
              return (unsigned __int8 *)v13;
          }
        }
        return 0;
      }
      return 0;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1CF6EE2E0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_1CF6EE33C();
  v4 = sub_1CF6EE370(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1CF6EE33C()
{
  return sub_1CF73EFD0();
}

uint64_t sub_1CF6EE370(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    sub_1CF6EE4B4(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      sub_1CF68F5FC(v9, 0);
      v12 = v11;
      sub_1CF6EE5A0(v16, v11 + 32, v10, a1, a2, a3, a4);
      v14 = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v14 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v12 = MEMORY[0x1E0DEE9D8];
    }
    v15 = MEMORY[0x1D17D2B38](v12 + 32, *(_QWORD *)(v12 + 16));
    swift_release();
    return v15;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x1D17D2B38);
LABEL_9:
      sub_1CF73F390();
      goto LABEL_12;
    }
    v16[0] = a3;
    v16[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x1D17D2B38]((char *)v16 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

void sub_1CF6EE4B4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;

  v7 = a1;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    sub_1CF6EDAC8(a1, a3, a4);
    v7 = v10;
  }
  if ((a2 & 0xC) == v9)
  {
    sub_1CF6EDAC8(a2, a3, a4);
    a2 = v11;
    if ((a4 & 0x1000000000000000) == 0)
      return;
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return;
  }
  v12 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v12 = a3 & 0xFFFFFFFFFFFFLL;
  if (v12 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v12 >= a2 >> 16)
  {
    sub_1CF73EF88();
    return;
  }
  __break(1u);
}

void sub_1CF6EE5A0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v11 = a4;
    goto LABEL_33;
  }
  if (a3 < 0)
    goto LABEL_36;
  v10 = a5 >> 14;
  v29 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = a4;
LABEL_33:
    *a1 = a4;
    a1[1] = a5;
    a1[2] = a6;
    a1[3] = a7;
    a1[4] = v11;
    return;
  }
  v13 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v23 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v24 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v25 = v16;
  v28 = a3 - 1;
  v11 = a4;
  while (1)
  {
    v17 = v11;
    if ((v11 & 0xC) == v15)
      sub_1CF6EDAC8(v11, a6, a7);
    if (v17 >> 14 < v29 || v17 >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      v21 = sub_1CF73EF94();
    }
    else
    {
      v19 = v17 >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v30[0] = a6;
        v30[1] = v24;
        v21 = *((_BYTE *)v30 + v19);
      }
      else
      {
        v20 = v23;
        if ((a6 & 0x1000000000000000) == 0)
          v20 = sub_1CF73F390();
        v21 = *(_BYTE *)(v20 + v19);
      }
    }
    if ((v11 & 0xC) == v15)
    {
      sub_1CF6EDAC8(v11, a6, a7);
      v11 = v22;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v11 = (v11 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v25 <= v11 >> 16)
      goto LABEL_35;
    v11 = sub_1CF73EF70();
LABEL_31:
    *(_BYTE *)(a2 + v13) = v21;
    if (v28 != v13)
    {
      ++v13;
      if (v10 != v11 >> 14)
        continue;
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
}

id OUTLINED_FUNCTION_5_11(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2);
}

uint64_t CUPairedPeer.udid.getter()
{
  return OUTLINED_FUNCTION_1_15();
}

void CUPairingStream.decode<A>(message:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  id v13;

  sub_1CF73E3E8();
  OUTLINED_FUNCTION_21();
  sub_1CF73E3DC();
  v0 = (void *)sub_1CF73E58C();
  v7 = OUTLINED_FUNCTION_10_11((uint64_t)v0, sel_decryptData_aadData_error_, v1, v2, v3, v4, v5, v6, 0);

  v8 = v13;
  if (v7)
  {
    v9 = sub_1CF73E5A4();
    v11 = v10;

    sub_1CF73E3D0();
    sub_1CF6933C0(v9, v11);
  }
  else
  {
    v12 = v8;
    sub_1CF73E490();

    OUTLINED_FUNCTION_26_7();
  }
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_5_12();
}

void CUPairingStream.encode<A>(_:)(uint64_t *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  sub_1CF73E40C();
  OUTLINED_FUNCTION_21();
  sub_1CF73E400();
  sub_1CF73E3F4();
  if (!v1)
  {
    v3 = (void *)sub_1CF73E58C();
    v10 = OUTLINED_FUNCTION_10_11((uint64_t)v3, sel_encryptData_aadData_error_, v4, v5, v6, v7, v8, v9, 0);

    v11 = v16;
    if (v10)
    {
      v12 = sub_1CF73E5A4();
      v14 = v13;
      OUTLINED_FUNCTION_297();
      OUTLINED_FUNCTION_16_0();

      *a1 = v12;
      a1[1] = v14;
      goto LABEL_5;
    }
    v15 = v11;
    sub_1CF73E490();

    OUTLINED_FUNCTION_26_7();
    OUTLINED_FUNCTION_297();
  }
  OUTLINED_FUNCTION_16_0();
LABEL_5:
  OUTLINED_FUNCTION_5_12();
}

uint64_t CUPairedPeer.remoteUnlockKey.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_1CF6EFB38(v0, (SEL *)&selRef_info);
  if (v1
    && (v8 = OUTLINED_FUNCTION_8_13(),
        OUTLINED_FUNCTION_3_18(v8),
        OUTLINED_FUNCTION_18_11(v9),
        v1 = OUTLINED_FUNCTION_3_7(),
        v12))
  {
    if (OUTLINED_FUNCTION_0_22())
      return v11;
    else
      return 0;
  }
  else
  {
    OUTLINED_FUNCTION_19_10(v1, &qword_1ED8F7C80, v2, v3, v4, v5, v6, v7);
    return 0;
  }
}

uint64_t CUPairedPeer.remoteUnlockKey.setter(uint64_t a1, unint64_t a2)
{
  void *v2;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  _BYTE v9[40];
  uint64_t v10;

  v5 = sub_1CF6EFB38(v2, (SEL *)&selRef_info);
  if (!v5)
    v5 = sub_1CF73EE44();
  v10 = v5;
  *(_QWORD *)&v7 = 0xD00000000000001BLL;
  *((_QWORD *)&v7 + 1) = 0x80000001CF753E60;
  OUTLINED_FUNCTION_23_7();
  if (a2 >> 60 == 15)
  {
    v7 = 0u;
    v8 = 0u;
  }
  else
  {
    *((_QWORD *)&v8 + 1) = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v7 = a1;
    *((_QWORD *)&v7 + 1) = a2;
  }
  sub_1CF6A7B18(a1, a2);
  sub_1CF68E274((uint64_t)&v7, (uint64_t)v9);
  sub_1CF690F68(v10, v2);
  return sub_1CF693FE0(a1, a2);
}

void sub_1CF6EEBC4(_BYTE *a1@<X8>)
{
  void *v1;
  unsigned int v3;
  unint64_t v4;

  v3 = objc_msgSend(v1, sel_sessionType);
  if ((v3 & 0x80000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = 0x10104uLL >> (8 * v3);
    if (v3 >= 5)
      LOBYTE(v4) = 4;
    *a1 = v4;
    OUTLINED_FUNCTION_1();
  }
}

id sub_1CF6EEC14()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1CF73EEB0();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_openStreamWithName_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1CF73E490();

    OUTLINED_FUNCTION_26_7();
  }
  return v2;
}

uint64_t sub_1CF6EECD4()
{
  uint64_t result;

  sub_1CF6B3208(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA2CB8 = result;
  return result;
}

BOOL static IdentityError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void IdentityError.hash(into:)()
{
  sub_1CF73F7F8();
  OUTLINED_FUNCTION_1();
}

uint64_t IdentityError.hashValue.getter()
{
  sub_1CF73F7EC();
  sub_1CF73F7F8();
  return sub_1CF73F810();
}

uint64_t static CUPairingSession.remotePairingDefaultPin.getter()
{
  return 0x303030303030;
}

unint64_t static CUPairedPeer.udidInfoKey.getter()
{
  return OUTLINED_FUNCTION_0(18);
}

unint64_t static CUPairedPeer.ecidInfoKey.getter()
{
  return OUTLINED_FUNCTION_0(18);
}

unint64_t static CUPairedPeer.remotePairingAutomationRecordKey.getter()
{
  return OUTLINED_FUNCTION_0(29);
}

unint64_t static CUPairedPeer.remoteUnlockInfoKey.getter()
{
  return OUTLINED_FUNCTION_0(27);
}

unint64_t static CUPairedPeer.serialNumberInfoKey.getter()
{
  return OUTLINED_FUNCTION_0(27);
}

unint64_t static CUPairedPeer.initialPairingTimeInfoKey.getter()
{
  return OUTLINED_FUNCTION_0(32);
}

unint64_t static CUPairedPeer.associatedLockdownHostBUIDKey.getter()
{
  return OUTLINED_FUNCTION_0(29);
}

void CUPairedPeer.udid.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_9_9(a1, a2);
}

void CUPairedPeer.udid.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_5(a1);
  *v1 = CUPairedPeer.udid.getter();
  v1[1] = v2;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6EEED0(uint64_t a1, char a2)
{
  sub_1CF6EF3AC(a1, a2);
}

id CUPairedPeer.ecid.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v6[5];
  __int128 v7;
  __int128 v8;

  v1 = sub_1CF6EFB38(v0, (SEL *)&selRef_info);
  if (!v1)
  {
    v7 = 0u;
    v8 = 0u;
    goto LABEL_6;
  }
  v2 = v1;
  sub_1CF73F330();
  sub_1CF6AF684((uint64_t)v6, v2, (uint64_t)&v7);
  sub_1CF68E2F4((uint64_t)v6);
  OUTLINED_FUNCTION_3_7();
  if (!*((_QWORD *)&v8 + 1))
  {
LABEL_6:
    sub_1CF68DE94((uint64_t)&v7, &qword_1ED8F7C80);
    return 0;
  }
  sub_1CF6B3208(0, (unint64_t *)&unk_1ED8F7A50);
  if ((swift_dynamicCast() & 1) == 0)
    return 0;
  v3 = v6[0];
  v4 = objc_msgSend(v6[0], sel_unsignedLongLongValue);

  return v4;
}

id sub_1CF6EEFF4@<X0>(uint64_t a1@<X8>)
{
  id result;
  char v3;

  result = CUPairedPeer.ecid.getter();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_1CF6EF024(uint64_t a1)
{
  CUPairedPeer.ecid.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
}

void CUPairedPeer.ecid.setter(uint64_t a1, char a2)
{
  sub_1CF68DEDC(a1, a2, 0xD000000000000012, 0x80000001CF752900, MEMORY[0x1E0DEE190]);
}

void CUPairedPeer.ecid.modify(uint64_t a1)
{
  uint64_t v1;
  char v2;

  OUTLINED_FUNCTION_25_5(a1);
  *(_QWORD *)v1 = CUPairedPeer.ecid.getter();
  *(_BYTE *)(v1 + 8) = v2 & 1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6EF0AC(uint64_t a1)
{
  CUPairedPeer.ecid.setter(*(_QWORD *)a1, *(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_1();
}

uint64_t CUPairedPeer.btAddressString.getter()
{
  return sub_1CF6EF0E8();
}

uint64_t sub_1CF6EF0E8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v1 = sub_1CF6EFB38(v0, (SEL *)&selRef_info);
  if (v1
    && (v8 = OUTLINED_FUNCTION_8_13(),
        OUTLINED_FUNCTION_3_18(v8),
        OUTLINED_FUNCTION_18_11(v9),
        v1 = OUTLINED_FUNCTION_3_7(),
        v12))
  {
    if (OUTLINED_FUNCTION_0_22())
      return v11;
    else
      return 0;
  }
  else
  {
    OUTLINED_FUNCTION_19_10(v1, &qword_1ED8F7C80, v2, v3, v4, v5, v6, v7);
    return 0;
  }
}

uint64_t sub_1CF6EF1A0(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1CF6A7B18(*a1, v2);
  return CUPairedPeer.remoteUnlockKey.setter(v1, v2);
}

void CUPairedPeer.remoteUnlockKey.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_5(a1);
  *v1 = CUPairedPeer.remoteUnlockKey.getter();
  v1[1] = v2;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6EF20C(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    sub_1CF6A7B18(*a1, v3);
    OUTLINED_FUNCTION_17_9();
    sub_1CF693FE0(v2, v3);
  }
  else
  {
    OUTLINED_FUNCTION_17_9();
    OUTLINED_FUNCTION_40();
  }
}

uint64_t CUPairedPeer.serialNumber.getter()
{
  return OUTLINED_FUNCTION_1_15();
}

void sub_1CF6EF274()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_40();
}

void CUPairedPeer.serialNumber.setter(uint64_t a1, uint64_t a2)
{
  OUTLINED_FUNCTION_9_9(a1, a2);
}

void sub_1CF6EF2BC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = v2;
  if (!sub_1CF6EFB38(v3, (SEL *)&selRef_info))
    sub_1CF73EE44();
  v6 = MEMORY[0x1E0DEA968];
  v7 = sub_1CF73F330();
  if (a2)
    OUTLINED_FUNCTION_15_12(v7, v8, v9, v10, v11, v12, v13, v14, a1, a2, v15, v6, v16);
  else
    OUTLINED_FUNCTION_15_12(v7, v8, v9, v10, v11, v12, v13, v14, 0, 0, 0, 0, v16);
  OUTLINED_FUNCTION_27_7();
  OUTLINED_FUNCTION_13_10();
}

void CUPairedPeer.serialNumber.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_5(a1);
  *v1 = CUPairedPeer.serialNumber.getter();
  v1[1] = v2;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6EF3A0(uint64_t a1, char a2)
{
  sub_1CF6EF3AC(a1, a2);
}

void sub_1CF6EF3AC(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_12_9();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_12_9();
    OUTLINED_FUNCTION_40();
  }
}

uint64_t sub_1CF6EF3F8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD v4[5];
  __int128 v5;
  __int128 v6;

  v1 = sub_1CF6EFB38(v0, (SEL *)&selRef_info);
  if (!v1)
  {
    v5 = 0u;
    v6 = 0u;
    goto LABEL_8;
  }
  v2 = v1;
  *(_QWORD *)&v5 = 0xD000000000000020;
  *((_QWORD *)&v5 + 1) = 0x80000001CF753E80;
  sub_1CF73F330();
  sub_1CF6AF684((uint64_t)v4, v2, (uint64_t)&v5);
  sub_1CF68E2F4((uint64_t)v4);
  swift_bridgeObjectRelease();
  if (!*((_QWORD *)&v6 + 1))
  {
LABEL_8:
    sub_1CF68DE94((uint64_t)&v5, &qword_1ED8F7C80);
    return 0;
  }
  if (swift_dynamicCast())
    return v4[0];
  else
    return 0;
}

uint64_t CUPairedPeer.initialPairingTime.getter@<X0>(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  uint64_t v4;

  sub_1CF6EF3F8();
  if ((v2 & 1) != 0)
  {
    v3 = 1;
  }
  else
  {
    sub_1CF73E604();
    v3 = 0;
  }
  v4 = sub_1CF73E61C();
  return __swift_storeEnumTagSinglePayload(a1, v3, 1, v4);
}

uint64_t sub_1CF6EF540(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF68E328(a1, (uint64_t)v4);
  return CUPairedPeer.initialPairingTime.setter((uint64_t)v4);
}

void (*CUPairedPeer.initialPairingTime.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F68A0) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  CUPairedPeer.initialPairingTime.getter((uint64_t)v4);
  return sub_1CF6EF628;
}

void sub_1CF6EF628(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_1CF68E328((uint64_t)v3, (uint64_t)v2);
    CUPairedPeer.initialPairingTime.setter((uint64_t)v2);
    sub_1CF68DE94((uint64_t)v3, &qword_1ED8F68A0);
  }
  else
  {
    CUPairedPeer.initialPairingTime.setter((uint64_t)v3);
  }
  free(v3);
  free(v2);
}

uint64_t CUPairedPeer.isPairedForAutomation.getter()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  unsigned __int8 v11;
  uint64_t v12;

  v1 = sub_1CF6EFB38(v0, (SEL *)&selRef_acl);
  if (v1
    && (v8 = OUTLINED_FUNCTION_8_13(),
        OUTLINED_FUNCTION_3_18(v8),
        OUTLINED_FUNCTION_18_11(v9),
        v1 = OUTLINED_FUNCTION_3_7(),
        v12))
  {
    result = OUTLINED_FUNCTION_0_22();
    if ((_DWORD)result)
      return v11;
  }
  else
  {
    OUTLINED_FUNCTION_19_10(v1, &qword_1ED8F7C80, v2, v3, v4, v5, v6, v7);
    return 0;
  }
  return result;
}

uint64_t CUPairedPeer.associatedLockdownHostBUID.getter()
{
  return OUTLINED_FUNCTION_1_15();
}

uint64_t CUPairedPeer.verify(authTag:data:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void *v5;
  id v9;
  uint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  unsigned int v17;
  id v18;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  NSObject *v28;
  _BOOL4 v29;
  id v30;
  uint8_t *v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  void *v35;
  id v37[2];
  uint64_t v38[2];

  v38[1] = *MEMORY[0x1E0C80C00];
  if (!MEMORY[0x1E0D83940])
  {
    sub_1CF73F0D8();
    if (qword_1EFBA0958 != -1)
      swift_once();
    sub_1CF73E694();
    return 0;
  }
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D83940]), sel_init);
  v10 = sub_1CF6929EC(v5);
  if (v11 >> 60 == 15)
  {
    v12 = 0;
  }
  else
  {
    v13 = v10;
    v14 = v11;
    v12 = (void *)sub_1CF73E58C();
    sub_1CF693FE0(v13, v14);
  }
  objc_msgSend(v9, sel_setDeviceIRKData_, v12);

  v15 = (void *)sub_1CF73E58C();
  v16 = (void *)sub_1CF73E58C();
  v37[0] = 0;
  v17 = objc_msgSend(v9, sel_verifyAuthTag_data_type_error_, v15, v16, a5, v37);

  if (!v17)
  {
    v20 = v37[0];
    sub_1CF73E490();

    swift_willThrow();
    if ((_DWORD)a5 == 2
      && (CUPairedPeer.btAddressString.getter(), v21)
      && (v22 = (void *)sub_1CF73EEB0(),
          swift_bridgeObjectRelease(),
          v23 = _RPTextToMACAddress(v22),
          v22,
          v23))
    {
      v24 = sub_1CF73E5A4();
      v26 = v25;

      if ((MEMORY[0x1D17D21A8](v24, v26, a3, a4) & 1) != 0)
      {
        v27 = sub_1CF73F0C0();
        if (qword_1EFBA0958 != -1)
          swift_once();
        v28 = qword_1EFBA2CB8;
        v29 = os_log_type_enabled((os_log_t)qword_1EFBA2CB8, v27);
        v30 = v5;
        if (v29)
        {
          v31 = (uint8_t *)swift_slowAlloc();
          v38[0] = swift_slowAlloc();
          *(_DWORD *)v31 = 136315138;
          v37[0] = (id)CUPairedPeer.udid.getter();
          v37[1] = v32;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1940);
          v33 = sub_1CF73EF10();
          sub_1CF68F110(v33, v34, v38);
          v37[0] = v35;
          sub_1CF73F2A0();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CF67E000, v28, v27, "Identity verified using BT Address in pairing record instead of authTag for device with udid: %s", v31, 0xCu);
          swift_arrayDestroy();
          OUTLINED_FUNCTION_0_1();
        }

        OUTLINED_FUNCTION_6_15();
        OUTLINED_FUNCTION_234();

        return 1;
      }

      OUTLINED_FUNCTION_234();
      OUTLINED_FUNCTION_6_15();
    }
    else
    {

      OUTLINED_FUNCTION_234();
    }
    return 0;
  }
  v18 = v37[0];

  return 1;
}

uint64_t sub_1CF6EFB38(void *a1, SEL *a2)
{
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(a1, *a2);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1CF73EE2C();

  return v4;
}

unint64_t sub_1CF6EFBA0()
{
  unint64_t result;

  result = qword_1EFBA2CC0;
  if (!qword_1EFBA2CC0)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for IdentityError, &type metadata for IdentityError);
    atomic_store(result, (unint64_t *)&qword_1EFBA2CC0);
  }
  return result;
}

void sub_1CF6EFBDC(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = CUPairedPeer.udid.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6EFC00()
{
  sub_1CF6EF274();
}

void sub_1CF6EFC24(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = CUPairedPeer.remoteUnlockKey.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6EFC4C(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = CUPairedPeer.serialNumber.getter();
  a1[1] = v2;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6EFC70()
{
  sub_1CF6EF274();
}

void sub_1CF6EFC8C(uint64_t a1@<X8>)
{
  CUPairedPeer.initialPairingTime.getter(a1);
  OUTLINED_FUNCTION_1();
}

uint64_t storeEnumTagSinglePayload for IdentityError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF6EFCF8 + 4 * byte_1CF7465E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF6EFD2C + 4 * byte_1CF7465E0[v4]))();
}

uint64_t sub_1CF6EFD2C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6EFD34(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF6EFD3CLL);
  return result;
}

uint64_t sub_1CF6EFD48(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF6EFD50);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF6EFD54(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF6EFD5C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IdentityError()
{
  return &type metadata for IdentityError;
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_17_9()
{
  uint64_t v0;
  unint64_t v1;

  return CUPairedPeer.remoteUnlockKey.setter(v0, v1);
}

uint64_t OUTLINED_FUNCTION_18_11(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return sub_1CF68E2F4((uint64_t)va);
}

uint64_t OUTLINED_FUNCTION_19_10(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  return sub_1CF68DE94((uint64_t)va, a2);
}

uint64_t OUTLINED_FUNCTION_25_5(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_26_7()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_27_7()
{
  void *v0;
  uint64_t v1;

  sub_1CF690F68(*(_QWORD *)(v1 - 56), v0);
}

uint64_t RemoteXPCControlChannelTransport.__allocating_init(xpcConnection:to:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CF6F46B0((uint64_t)a1, a3, v3, *a1, a2);
}

uint64_t sub_1CF6EFDEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;

  v4 = OUTLINED_FUNCTION_16();
  swift_weakInit();
  v5 = (_QWORD *)OUTLINED_FUNCTION_16();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_121();
  sub_1CF6F3F4C((uint64_t)sub_1CF6F5620, (uint64_t)v5, (uint64_t)&unk_1E8C9E2B8, (uint64_t)sub_1CF6F5664, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))sub_1CF6E9E48);
  OUTLINED_FUNCTION_305();
  return swift_release();
}

uint64_t sub_1CF6EFE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;

  v4 = swift_allocObject();
  swift_weakInit();
  v5 = (_QWORD *)swift_allocObject();
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  swift_retain();
  swift_retain();
  sub_1CF6F3F4C((uint64_t)sub_1CF6F5428, (uint64_t)v5, (uint64_t)&unk_1E8C9E218, (uint64_t)sub_1CF6F5440, (void (*)(uint64_t, uint64_t, uint64_t, _QWORD *))sub_1CF6F3D44);
  swift_release();
  return swift_release();
}

uint64_t sub_1CF6EFF48()
{
  uint64_t result;

  sub_1CF6B3208(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA2CC8 = result;
  return result;
}

void sub_1CF6EFFBC(uint64_t a1)
{
  sub_1CF6F0CE8(a1, &qword_1ED8F6AF0);
}

void sub_1CF6EFFD0()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void RemoteXPCControlChannelTransport.xpcConnection.getter()
{
  swift_retain();
  OUTLINED_FUNCTION_1();
}

uint64_t RemoteXPCControlChannelTransport.remoteDevice.getter()
{
  return swift_retain();
}

void sub_1CF6F002C()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_3_2();
}

void sub_1CF6F0050(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10();
  *(_BYTE *)(v1 + 56) = a1;
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F0080()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6F00B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 + 48);
  if (v3)
  {
    *(_QWORD *)(a1 + 24) = sub_1CF73E6DC();
    *(_QWORD *)(a1 + 32) = &protocol witness table for RemoteDevice;
    *(_QWORD *)a1 = v3;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return swift_retain();
}

uint64_t RemoteXPCControlChannelTransport.init(xpcConnection:to:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CF6F4704((uint64_t)a1, a3, v3, *a1, a2);
}

uint64_t RemoteXPCControlChannelTransport.physicallyConnected.getter()
{
  return 1;
}

uint64_t RemoteXPCControlChannelTransport.networkAdvertActive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 59);
}

void sub_1CF6F0134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_167();
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_99();
  v9 = sub_1CF73ED84();
  v14 = *(_QWORD *)(v9 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_15();
  OUTLINED_FUNCTION_2_0();
  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
  {
    sub_1CF73E6E8();
    v13 = OUTLINED_FUNCTION_16();
    *(_QWORD *)(v13 + 16) = v7;
    *(_QWORD *)(v13 + 24) = v5;
    sub_1CF6F4824();
    sub_1CF6F4860();
    OUTLINED_FUNCTION_83();
    sub_1CF73E7D8();
    OUTLINED_FUNCTION_50_3();
    sub_1CF73E724();
  }
  v11 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v11 + 16) = v7;
  *(_QWORD *)(v11 + 24) = v5;
  OUTLINED_FUNCTION_37_5((uint64_t)sub_1CF6CC068);
  OUTLINED_FUNCTION_83();
  sub_1CF73ED6C();
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  OUTLINED_FUNCTION_35_4();
  OUTLINED_FUNCTION_17_10();
  v12 = OUTLINED_FUNCTION_68_4();
  MEMORY[0x1D17D2D90](v12);
  OUTLINED_FUNCTION_75_2();
  OUTLINED_FUNCTION_37_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v2, v9);
  swift_release();
  OUTLINED_FUNCTION_17();
}

void sub_1CF6F03E4(void (*a1)(_QWORD *))
{
  void *v2;
  _QWORD v3[19];
  _QWORD v4[19];

  sub_1CF6AA5E0();
  sub_1CF73F774();
  v3[0] = v4[0];
  v3[1] = v4[1];
  sub_1CF6ABB3C();
  v2 = (void *)swift_allocError();
  sub_1CF73F780();
  v4[0] = v2;
  sub_1CF6ECBEC((uint64_t)v4);
  sub_1CF6CAAD0(v4, v3);
  a1(v3);

}

uint64_t sub_1CF6F04E4(uint64_t a1, void (*a2)(_BYTE *))
{
  id v3;
  const void *v4;
  uint64_t v5;
  _BYTE v7[152];
  _QWORD __dst[19];
  _BYTE v9[152];
  _BYTE v10[152];
  _BYTE v11[152];

  sub_1CF6F5490(a1, (uint64_t)v10);
  sub_1CF6F5490((uint64_t)v10, (uint64_t)v11);
  if (sub_1CF6F54E4((uint64_t)v11) == 1)
  {
    __dst[0] = *(_QWORD *)nullsub_1(v11);
    sub_1CF6ECBEC((uint64_t)__dst);
    sub_1CF6CAAD0(__dst, v7);
    sub_1CF6F5490((uint64_t)v10, (uint64_t)v9);
    v3 = *(id *)nullsub_1(v9);
  }
  else
  {
    v4 = (const void *)nullsub_1(v11);
    memcpy(__dst, v4, 0x92uLL);
    sub_1CF6F5558((uint64_t)__dst);
    sub_1CF6CAAD0(__dst, v7);
    sub_1CF6F5490((uint64_t)v10, (uint64_t)v9);
    v5 = nullsub_1(v9);
    sub_1CF6F5578(v5);
  }
  a2(v7);
  return sub_1CF6F54EC((uint64_t)v10, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1CF6939F8);
}

uint64_t sub_1CF6F05D8(uint64_t (*a1)(_BYTE *))
{
  _BYTE v3[152];
  _WORD v4[76];

  sub_1CF6ECE1C(v4);
  sub_1CF6CAAD0(v4, v3);
  return a1(v3);
}

void sub_1CF6F0624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[20];

  OUTLINED_FUNCTION_167();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_70_2();
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_13();
  v7 = sub_1CF73ED84();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_28();
  memcpy(v9, v5, 0x92uLL);
  sub_1CF6F4824();
  sub_1CF6F4860();
  sub_1CF73E70C();
  v8 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v1;
  v9[4] = sub_1CF6F48D0;
  v9[5] = v8;
  v9[0] = MEMORY[0x1E0C809B0];
  v9[1] = 1107296256;
  OUTLINED_FUNCTION_61_4((uint64_t)sub_1CF6CC068);
  OUTLINED_FUNCTION_158();
  sub_1CF73ED6C();
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  OUTLINED_FUNCTION_35_4();
  OUTLINED_FUNCTION_18_12();
  OUTLINED_FUNCTION_66_3();
}

void sub_1CF6F0888()
{
  uint64_t v0;

  OUTLINED_FUNCTION_10();
  *(_BYTE *)(v0 + 56) = 1;
  sub_1CF73E718();
  OUTLINED_FUNCTION_26();
}

uint64_t sub_1CF6F08C0()
{
  sub_1CF6AA5E0();
  sub_1CF73F774();
  sub_1CF6ABB3C();
  OUTLINED_FUNCTION_105();
  sub_1CF73F780();
  return swift_willThrow();
}

uint64_t RemoteXPCControlChannelTransport.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_49_1();
  swift_release();
  return v0;
}

uint64_t RemoteXPCControlChannelTransport.__deallocating_deinit()
{
  RemoteXPCControlChannelTransport.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1CF6F09C8()
{
  return sub_1CF6EFFC8();
}

uint64_t sub_1CF6F09E8()
{
  return RemoteXPCControlChannelTransport.networkAdvertActive.getter();
}

void sub_1CF6F0A08()
{
  sub_1CF6F0134();
}

void sub_1CF6F0A28()
{
  sub_1CF6F0624();
}

void sub_1CF6F0A48()
{
  sub_1CF6F0888();
}

uint64_t sub_1CF6F0A68()
{
  return sub_1CF6F08C0();
}

uint64_t sub_1CF6F0A7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF6F00B4(a1);
}

uint64_t NWInterface.isAWDL.getter()
{
  uint64_t v0;
  char v2;

  if (sub_1CF73E9DC() == 0x306C647761 && v0 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v2 = OUTLINED_FUNCTION_25_6();
    swift_bridgeObjectRelease();
    return v2 & 1;
  }
}

uint64_t sub_1CF6F0B04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CD8);
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v3);
  OUTLINED_FUNCTION_99();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CE0);
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_16_7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2048);
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_2_4();
  sub_1CF73EA3C();
  OUTLINED_FUNCTION_16_0();
  v6 = sub_1CF73EC7C();
  if (__swift_getEnumTagSinglePayload(v2, 1, v6) == 1)
  {
    v7 = &qword_1EFBA2CD8;
    v8 = v2;
LABEL_7:
    sub_1CF6A4E24(v8, v7);
    v11 = 0;
    return v11 & 1;
  }
  sub_1CF73EC58();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
  v9 = OUTLINED_FUNCTION_45_6();
  if (OUTLINED_FUNCTION_36_6(v9) == 1)
  {
    v7 = &qword_1EFBA2CE0;
    v8 = v1;
    goto LABEL_7;
  }
  sub_1CF73E964();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v10 = sub_1CF73EA00();
  if (__swift_getEnumTagSinglePayload(v0, 1, v10) == 1)
  {
    v7 = &qword_1EFBA2048;
    v8 = v0;
    goto LABEL_7;
  }
  if (sub_1CF73E9DC() == 0x306C647761 && v13 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v11 = 1;
  }
  else
  {
    v11 = OUTLINED_FUNCTION_25_6();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_13_11(v0, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8));
  return v11 & 1;
}

void sub_1CF6F0CDC(uint64_t a1)
{
  sub_1CF6F0CE8(a1, &qword_1EFBA2CD0);
}

void sub_1CF6F0CE8(uint64_t a1, uint64_t *a2)
{
  type metadata accessor for AtomicCounter();
  OUTLINED_FUNCTION_16();
  *a2 = AtomicCounter.init()();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F0D1C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v7;

  v7 = *a1;
  v6 = a1[1];
  swift_bridgeObjectRetain();
  a5(v7, v6);
  OUTLINED_FUNCTION_40();
}

void sub_1CF6F0D54()
{
  OUTLINED_FUNCTION_2_0();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F0D88()
{
  uint64_t v0;

  v0 = swift_retain();
  sub_1CF6F0DDC(v0);
}

uint64_t sub_1CF6F0DB0()
{
  OUTLINED_FUNCTION_2_0();
  return swift_retain();
}

void sub_1CF6F0DDC(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10();
  *(_QWORD *)(v1 + 32) = a1;
  swift_release();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F0E14()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F0E4C()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_3_2();
}

void sub_1CF6F0E70(char a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10();
  *(_BYTE *)(v1 + 41) = a1;
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F0EA0()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

BOOL sub_1CF6F0ED4()
{
  uint64_t v0;
  _BOOL8 v1;
  _BYTE v3[24];
  uint64_t v4;

  OUTLINED_FUNCTION_2_0();
  sub_1CF6B3198(v0 + 48, (uint64_t)v3, &qword_1ED8F7E60);
  v1 = v4 != 0;
  sub_1CF6A4E24((uint64_t)v3, &qword_1ED8F7E60);
  return v1;
}

void sub_1CF6F0F38(uint64_t a1)
{
  _BYTE v1[40];

  sub_1CF6B3198(a1, (uint64_t)v1, &qword_1ED8F7E60);
  sub_1CF6F0FB8((uint64_t)v1);
}

void sub_1CF6F0F78(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_2_0();
  sub_1CF6B3198(v1 + 48, a1, &qword_1ED8F7E60);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F0FB8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_10();
  sub_1CF6F48F0(a1, v1 + 48);
  swift_endAccess();
  sub_1CF6A4E24(a1, &qword_1ED8F7E60);
  OUTLINED_FUNCTION_10();
  *(_BYTE *)(v1 + 41) = 1;
  OUTLINED_FUNCTION_5();
}

void sub_1CF6F1028(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F1060(uint64_t a1, char a2)
{
  uint64_t v4;

  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    v4 = *(_QWORD *)(a1 + 24);
    OUTLINED_FUNCTION_10();
    *(_BYTE *)(v4 + 41) = 1;
  }
  OUTLINED_FUNCTION_40();
}

void sub_1CF6F10A4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 96);
  *(_QWORD *)(v1 + 96) = a1;

}

void sub_1CF6F10B0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_BYTE *@<X8>);

  sub_1CF6F1194();
  if (v2)
  {
    v4 = v2;
    v5 = v3;
    v2 = swift_allocObject();
    *(_QWORD *)(v2 + 16) = v4;
    *(_QWORD *)(v2 + 24) = v5;
    v6 = sub_1CF6F534C;
  }
  else
  {
    v6 = 0;
  }
  *a1 = v6;
  a1[1] = v2;
}

void sub_1CF6F1114(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)();

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1CF6F5320;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  sub_1CF6A3AE0(v1);
  sub_1CF6F11C8((uint64_t)v4, v3);
}

void sub_1CF6F1194()
{
  uint64_t v0;

  OUTLINED_FUNCTION_2_0();
  v0 = OUTLINED_FUNCTION_69();
  sub_1CF6A3AE0(v0);
  OUTLINED_FUNCTION_69();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F11C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;

  OUTLINED_FUNCTION_10();
  v5 = *(_QWORD *)(v2 + 104);
  *(_QWORD *)(v2 + 104) = a1;
  *(_QWORD *)(v2 + 112) = a2;
  sub_1CF693EC8(v5);
  OUTLINED_FUNCTION_5();
}

void sub_1CF6F1208()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

uint64_t NWConnectionControlChannelTransport.__allocating_init(connection:endpoint:netLinkManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6;

  v6 = OUTLINED_FUNCTION_16();
  NWConnectionControlChannelTransport.init(connection:endpoint:netLinkManager:)(a1, a2, a3);
  return v6;
}

uint64_t NWConnectionControlChannelTransport.init(connection:endpoint:netLinkManager:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  id v8;

  v4 = v3;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_WORD *)(v4 + 40) = 0;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_QWORD *)(v4 + 80) = 0;
  *(_QWORD *)(v4 + 104) = 0;
  *(_QWORD *)(v4 + 112) = 0;
  *(_QWORD *)(v4 + 96) = 0;
  *(_QWORD *)(v4 + 32) = a1;
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_232();
  sub_1CF6F48F0(a2, v4 + 48);
  swift_endAccess();
  *(_QWORD *)(v4 + 88) = a3;
  v7 = qword_1EFBA0970;
  v8 = a3;
  if (v7 != -1)
    swift_once();
  sub_1CF68C4F8();
  sub_1CF73F648();
  sub_1CF73EF58();
  OUTLINED_FUNCTION_305();

  OUTLINED_FUNCTION_150();
  sub_1CF6A4E24(a2, &qword_1ED8F7E60);
  *(_QWORD *)(v4 + 16) = 762340212;
  *(_QWORD *)(v4 + 24) = 0xE400000000000000;
  return v4;
}

void sub_1CF6F13B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[10];

  OUTLINED_FUNCTION_167();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_70_2();
  v53 = *(_QWORD *)(v9 - 8);
  v54 = v9;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_14();
  v52 = v11;
  OUTLINED_FUNCTION_29_6();
  v12 = sub_1CF73ED84();
  v50 = *(_QWORD *)(v12 - 8);
  v51 = v12;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_14();
  v49 = v14;
  OUTLINED_FUNCTION_29_6();
  v45 = (void (*)(uint64_t, uint64_t))sub_1CF73ED48();
  v44 = *((_QWORD *)v45 - 1);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_14();
  v43 = v16;
  OUTLINED_FUNCTION_29_6();
  v56 = sub_1CF73EDC0();
  v42 = *(_QWORD *)(v56 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_24_0();
  v41 = v18;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v19);
  v48 = (char *)&v40 - v20;
  OUTLINED_FUNCTION_29_6();
  v21 = sub_1CF73E970();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v55 = OUTLINED_FUNCTION_28_5();
  OUTLINED_FUNCTION_2_0();
  v23 = *(_QWORD *)(v1 + 32);
  v24 = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_79_2();
  v25 = (_QWORD *)OUTLINED_FUNCTION_16();
  v25[2] = v24;
  v25[3] = v23;
  v46 = v6;
  v25[4] = v6;
  v25[5] = v4;
  v25[6] = v8;
  swift_retain_n();
  OUTLINED_FUNCTION_158();
  v47 = v4;
  OUTLINED_FUNCTION_83();
  v8;
  sub_1CF6A3AE0((uint64_t)sub_1CF6F4990);
  sub_1CF73EA78();
  OUTLINED_FUNCTION_44_5();
  swift_release_n();
  OUTLINED_FUNCTION_48_2();
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_232();
  v26 = OUTLINED_FUNCTION_52();
  sub_1CF6A3AE0(v26);
  OUTLINED_FUNCTION_52();
  sub_1CF73EA84();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_305();
  OUTLINED_FUNCTION_2_4();
  sub_1CF73EAFC();
  OUTLINED_FUNCTION_16_0();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v22 + 88))(v0, v21) == *MEMORY[0x1E0CCE288])
  {
    OUTLINED_FUNCTION_13_11(v0, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 96));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CE8);
    sub_1CF6A4E24(v0 + *(int *)(v27 + 80), &qword_1EFBA2048);
    v28 = v41;
    sub_1CF73EDB4();
    v29 = (uint64_t)v43;
    *v43 = 10;
    v30 = v44;
    (*(void (**)(uint64_t, _QWORD, void (*)(uint64_t, uint64_t)))(v44 + 104))(v29, *MEMORY[0x1E0DEF4A0], v45);
    v31 = v48;
    MEMORY[0x1D17D2A0C](v28, v29);
    OUTLINED_FUNCTION_37_0(v29, *(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
    v45 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
    v45(v28, v56);
    v32 = OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_79_2();
    v33 = *(_QWORD *)(v2 + 32);
    v34 = (_QWORD *)OUTLINED_FUNCTION_16();
    v34[2] = v32;
    v34[3] = v33;
    v35 = v46;
    v34[4] = 10;
    v34[5] = v35;
    v34[6] = v47;
    v58[4] = sub_1CF6F49D4;
    v58[5] = v34;
    v58[0] = MEMORY[0x1E0C809B0];
    v58[1] = 1107296256;
    v58[2] = sub_1CF6CC068;
    v58[3] = &block_descriptor_34;
    v36 = _Block_copy(v58);
    swift_retain_n();
    OUTLINED_FUNCTION_2_4();
    swift_retain();
    v37 = v49;
    sub_1CF73ED6C();
    v57 = MEMORY[0x1E0DEE9D8];
    sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
    OUTLINED_FUNCTION_35_4();
    v38 = v52;
    v39 = v54;
    sub_1CF73F2F4();
    MEMORY[0x1D17D2D6C](v31, v37, v38, v36);
    _Block_release(v36);
    OUTLINED_FUNCTION_50_3();
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v38, v39);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v37, v51);
    v45((uint64_t)v31, v56);
    swift_release();
    OUTLINED_FUNCTION_16_0();
  }
  else
  {
    OUTLINED_FUNCTION_13_11(v0, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  }
  OUTLINED_FUNCTION_2_4();
  sub_1CF73EACC();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_17();
}

uint64_t sub_1CF6F1864(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *), uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;
  os_log_type_t v30;
  void *v31;
  NSObject *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  char *v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  int v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  os_log_type_t v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t (*v71)(char *);
  _QWORD v72[2];
  uint64_t v73;
  int v74;
  uint64_t v75;
  os_log_t v76;
  void (*v77)(char *, uint64_t, uint64_t);
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(_QWORD *);
  char *v92;
  uint64_t v93;
  _QWORD v94[19];
  uint64_t v95[19];

  v78 = a6;
  v90 = a5;
  v91 = a4;
  v93 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CE0);
  MEMORY[0x1E0C80A78](v7);
  v80 = (char *)v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2048);
  MEMORY[0x1E0C80A78](v9);
  v82 = (uint64_t)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = sub_1CF73EA00();
  v79 = *(_QWORD *)(v84 - 8);
  MEMORY[0x1E0C80A78](v84);
  v92 = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CD8);
  MEMORY[0x1E0C80A78](v12);
  v85 = (char *)v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = sub_1CF73EC7C();
  v81 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v83 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1CF73EC88();
  v88 = *(_QWORD *)(v15 - 8);
  v89 = v15;
  MEMORY[0x1E0C80A78](v15);
  v87 = (char *)v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1CF73EAC0();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v19);
  v24 = (char *)v72 - v23;
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)v72 - v25;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v28 = (_QWORD *)result;
    v29 = result + 32;
    swift_beginAccess();
    if (v28[4] != a3)
      return swift_release();
    v75 = v29;
    v30 = sub_1CF73F0E4();
    if (qword_1EFBA0960 != -1)
      swift_once();
    v31 = &unk_1EFBA2000;
    v32 = qword_1EFBA2CC8;
    v77 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    v77(v26, v93, v17);
    v76 = v32;
    if (os_log_type_enabled(v32, v30))
    {
      swift_retain();
      v33 = swift_slowAlloc();
      v74 = v30;
      v34 = v33;
      v73 = swift_slowAlloc();
      v95[0] = v73;
      *(_DWORD *)v34 = 136446466;
      v72[1] = v34 + 4;
      swift_beginAccess();
      v36 = v28[2];
      v35 = v28[3];
      swift_bridgeObjectRetain();
      sub_1CF68F110(v36, v35, v95);
      v94[0] = v37;
      sub_1CF73F2A0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      v77(v24, (uint64_t)v26, v17);
      v38 = sub_1CF73EF10();
      sub_1CF68F110(v38, v39, v95);
      v94[0] = v40;
      v31 = &unk_1EFBA2000;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      v41 = *(void (**)(char *, uint64_t))(v18 + 8);
      v41(v26, v17);
      _os_log_impl(&dword_1CF67E000, v76, (os_log_type_t)v74, "%{public}s: Connection state changed to %s", (uint8_t *)v34, 0x16u);
      v42 = v73;
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v42, -1, -1);
      MEMORY[0x1D17D3ED0](v34, -1, -1);
    }
    else
    {
      v41 = *(void (**)(char *, uint64_t))(v18 + 8);
      v41(v26, v17);
    }
    v43 = v92;
    v77(v21, v93, v17);
    v44 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v21, v17);
    if (v44 == *MEMORY[0x1E0CCE5C8])
    {
      (*(void (**)(char *, uint64_t))(v18 + 96))(v21, v17);
      v46 = v87;
      v45 = v88;
      v47 = v89;
      (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v87, v21, v89);
      swift_retain();
      sub_1CF73EAE4();
      swift_release();
LABEL_13:
      sub_1CF6935F8((unint64_t *)&unk_1EFBA3770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CCEB10], MEMORY[0x1E0CCEB28]);
      v49 = (void *)swift_allocError();
      (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v50, v46, v47);
      v95[0] = (uint64_t)v49;
      sub_1CF6ECBEC((uint64_t)v95);
      sub_1CF6CAAD0(v95, v94);
      v91(v94);
      swift_release();

      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v46, v47);
    }
    v48 = v44;
    if (v44 == *MEMORY[0x1E0CCE5C0])
    {
      (*(void (**)(char *, uint64_t))(v18 + 96))(v21, v17);
      v46 = v87;
      v45 = v88;
      v47 = v89;
      (*(void (**)(char *, char *, uint64_t))(v88 + 32))(v87, v21, v89);
      goto LABEL_13;
    }
    if (v44 == *MEMORY[0x1E0CCE5B8] || v44 == *MEMORY[0x1E0CCE5D8])
      return swift_release();
    if (v44 == *MEMORY[0x1E0CCE5B0])
    {
      swift_retain();
      v51 = (uint64_t)v85;
      sub_1CF73EA3C();
      swift_release();
      v52 = v86;
      if (__swift_getEnumTagSinglePayload(v51, 1, v86) == 1)
      {
        sub_1CF6A4E24(v51, &qword_1EFBA2CD8);
        v53 = sub_1CF73F0CC();
        v54 = *((_QWORD *)v31 + 409);
        v55 = v53;
        if (os_log_type_enabled(v54, v53))
        {
          swift_retain();
          v56 = (uint8_t *)swift_slowAlloc();
          v57 = swift_slowAlloc();
          v95[0] = v57;
          *(_DWORD *)v56 = 136446210;
          swift_beginAccess();
          v58 = v28[2];
          v59 = v28[3];
          swift_bridgeObjectRetain();
          sub_1CF68F110(v58, v59, v95);
          v94[0] = v60;
          sub_1CF73F2A0();
          swift_release();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1CF67E000, v54, v55, "%{public}s: Transport connection in state ready but has no associated path", v56, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D17D3ED0](v57, -1, -1);
          MEMORY[0x1D17D3ED0](v56, -1, -1);
        }
        goto LABEL_28;
      }
      v62 = v81;
      v63 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v81 + 32))(v83, v51, v52);
      v64 = (uint64_t)v80;
      sub_1CF73EC58();
      v65 = sub_1CF73E970();
      if (__swift_getEnumTagSinglePayload(v64, 1, v65) == 1)
      {
        sub_1CF6A4E24(v64, &qword_1EFBA2CE0);
        v66 = v82;
        __swift_storeEnumTagSinglePayload(v82, 1, 1, v84);
      }
      else
      {
        v67 = v64;
        v66 = v82;
        sub_1CF73E964();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v67, v65);
        v68 = v84;
        if (__swift_getEnumTagSinglePayload(v66, 1, v84) != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v43, v66, v68);
          swift_beginAccess();
          v71 = (uint64_t (*)(char *))v28[13];
          if (v71)
          {
            swift_retain();
            if ((v71(v43) & 1) != 0)
            {
              sub_1CF6F384C();
              sub_1CF693EC8((uint64_t)v71);
              (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v84);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v84);
              sub_1CF693EC8((uint64_t)v71);
            }
            v63 = v83;
          }
          else
          {
            (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v68);
          }
          goto LABEL_27;
        }
      }
      sub_1CF6A4E24(v66, &qword_1EFBA2048);
LABEL_27:
      sub_1CF6F2994();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v52);
LABEL_28:
      sub_1CF6ECE1C(v95);
      sub_1CF6CAAD0(v95, v94);
      v69 = v90;
      v70 = (uint64_t)v91;
      v91(v94);
      sub_1CF6EFE90(v70, v69);
      return swift_release();
    }
    v61 = *MEMORY[0x1E0CCE5D0];
    result = swift_release();
    if (v48 != v61)
      return ((uint64_t (*)(char *, uint64_t))v41)(v21, v17);
  }
  return result;
}

void sub_1CF6F21F0(char a1, uint64_t a2)
{
  os_log_type_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  if ((a1 & 1) == 0)
  {
    v3 = sub_1CF73F0CC();
    if (qword_1EFBA0960 != -1)
      swift_once();
    v4 = qword_1EFBA2CC8;
    v5 = v3;
    if (os_log_type_enabled((os_log_t)qword_1EFBA2CC8, v3))
    {
      swift_retain();
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v10 = v7;
      *(_DWORD *)v6 = 136446210;
      swift_beginAccess();
      v8 = *(_QWORD *)(a2 + 16);
      v9 = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1CF68F110(v8, v9, &v10);
      sub_1CF73F2A0();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF67E000, v4, v5, "%{public}s: Cancelling TCP control channel transport as it is no longer viable", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v7, -1, -1);
      MEMORY[0x1D17D3ED0](v6, -1, -1);
    }
    sub_1CF6F2960();
  }
}

uint64_t sub_1CF6F2384(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  _QWORD *v15;
  char v16;
  void (*v17)(char *, uint64_t);
  os_log_type_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[19];
  uint64_t v30[19];

  v7 = sub_1CF73EAC0();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v27 - v12;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v15 = (_QWORD *)result;
    swift_beginAccess();
    if (v15[4] == a2)
    {
      swift_retain();
      sub_1CF73EAD8();
      swift_release();
      (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v11, *MEMORY[0x1E0CCE5D8], v7);
      v16 = MEMORY[0x1D17D26C4](v13, v11);
      v17 = *(void (**)(char *, uint64_t))(v8 + 8);
      v17(v11, v7);
      v17(v13, v7);
      if ((v16 & 1) != 0)
      {
        v18 = sub_1CF73F0CC();
        if (qword_1EFBA0960 != -1)
          swift_once();
        v19 = qword_1EFBA2CC8;
        v20 = v18;
        if (os_log_type_enabled((os_log_t)qword_1EFBA2CC8, v18))
        {
          swift_retain();
          v21 = swift_slowAlloc();
          v28 = swift_slowAlloc();
          v30[0] = v28;
          *(_DWORD *)v21 = 136446466;
          v27 = v21 + 4;
          swift_beginAccess();
          v23 = v15[2];
          v22 = v15[3];
          swift_bridgeObjectRetain();
          sub_1CF68F110(v23, v22, v30);
          v29[0] = v24;
          sub_1CF73F2A0();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v21 + 12) = 2048;
          v29[0] = a3;
          sub_1CF73F2A0();
          _os_log_impl(&dword_1CF67E000, v19, v20, "%{public}s: Cancelling TCP control channel transport as connection is stuck preparing after %ld seconds", (uint8_t *)v21, 0x16u);
          v25 = v28;
          swift_arrayDestroy();
          MEMORY[0x1D17D3ED0](v25, -1, -1);
          MEMORY[0x1D17D3ED0](v21, -1, -1);
        }
        sub_1CF6AA5E0();
        sub_1CF73F72C();
        v29[0] = v30[0];
        v29[1] = v30[1];
        sub_1CF6ABB3C();
        v26 = (void *)swift_allocError();
        sub_1CF73F780();
        v30[0] = (uint64_t)v26;
        sub_1CF6ECBEC((uint64_t)v30);
        sub_1CF6CAAD0(v30, v29);
        a4(v29);

        sub_1CF6F2960();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1CF6F26F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  Swift::String v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v18[4];
  char v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CD8);
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v4);
  OUTLINED_FUNCTION_15();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CE0);
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_13();
  swift_beginAccess();
  OUTLINED_FUNCTION_2_4();
  sub_1CF73EA3C();
  swift_release();
  v6 = sub_1CF73EC7C();
  if (__swift_getEnumTagSinglePayload(v2, 1, v6) == 1)
  {
    sub_1CF6A4E24(v2, &qword_1EFBA2CD8);
    v7 = sub_1CF73E970();
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v7);
LABEL_4:
    sub_1CF6A4E24(v1, &qword_1EFBA2CE0);
LABEL_5:
    v18[3] = MEMORY[0x1E0DEA968];
    v18[0] = 0xD00000000000002ELL;
    v18[1] = 0x80000001CF753F40;
    v19 = 1;
    sub_1CF692E68();
    OUTLINED_FUNCTION_105();
    v10 = v9;
    v17 = 1;
    v11 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)&v17);
    sub_1CF692EA4((uint64_t)v18);
    *(_BYTE *)v10 = 1;
    *(Swift::String *)(v10 + 8) = v11;
    *(_OWORD *)(v10 + 24) = 0u;
    *(_OWORD *)(v10 + 40) = 0u;
    *(_QWORD *)(v10 + 56) = 0;
    return swift_willThrow();
  }
  sub_1CF73EC64();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v2, v6);
  v8 = sub_1CF73E970();
  if (__swift_getEnumTagSinglePayload(v1, 1, v8) == 1)
    goto LABEL_4;
  v13 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v13 + 88))(v1, v8) != *MEMORY[0x1E0CCE290])
  {
    OUTLINED_FUNCTION_77_2(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    goto LABEL_5;
  }
  OUTLINED_FUNCTION_77_2(*(uint64_t (**)(uint64_t, uint64_t))(v13 + 96));
  v14 = v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CF0) + 48);
  v15 = sub_1CF73E94C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a1, v1, v15);
  v16 = sub_1CF73E958();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);
}

void sub_1CF6F2960()
{
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_2_4();
  sub_1CF73EAE4();
  OUTLINED_FUNCTION_16_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F2994()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, char *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  void *v28;
  os_log_type_t v29;
  NSObject *v30;
  void (*v31)(char *, void (*)(_QWORD, _QWORD), uint64_t);
  _BOOL4 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int EnumTagSinglePayload;
  void (*v42)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t);
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  id v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  void *v56;
  id v57;
  os_log_type_t v58;
  NSObject *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  os_log_type_t v69;
  NSObject *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  uint64_t v81;
  _QWORD v82[2];
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  int v87;
  NSObject *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  id v93;
  void (*v94)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t);
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void (*v98)(uint64_t, char *);
  uint64_t v99[6];
  uint64_t v100;
  uint64_t v101[2];

  OUTLINED_FUNCTION_167();
  v2 = v0;
  v4 = v3;
  v89 = v5;
  v98 = v6;
  v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CE0);
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_24_0();
  v91 = v8;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v82 - v10;
  v95 = sub_1CF73E94C();
  v12 = *(_QWORD *)(v95 - 8);
  v13 = MEMORY[0x1E0C80A78](v95);
  v15 = (char *)v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v90 = (char *)v82 - v16;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v17);
  v96 = (char *)v82 - v18;
  OUTLINED_FUNCTION_29_6();
  v19 = sub_1CF73EC7C();
  OUTLINED_FUNCTION_27_1();
  MEMORY[0x1E0C80A78](v20);
  OUTLINED_FUNCTION_24_0();
  v97 = v21;
  OUTLINED_FUNCTION_62();
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v82 - v24;
  MEMORY[0x1E0C80A78](v23);
  v27 = (char *)v82 - v26;
  v28 = (void *)v2[11];
  if (!v28)
    goto LABEL_15;
  v85 = v4;
  v84 = v15;
  v93 = v28;
  v29 = sub_1CF73F0E4();
  if (qword_1EFBA0960 != -1)
    swift_once();
  v30 = qword_1EFBA2CC8;
  v31 = *(void (**)(char *, void (*)(_QWORD, _QWORD), uint64_t))(v1 + 16);
  v31(v27, (void (*)(_QWORD, _QWORD))v98, v19);
  v88 = v30;
  v87 = v29;
  v32 = os_log_type_enabled(v30, v29);
  v86 = v12;
  v94 = (void (*)(uint64_t, void (*)(_QWORD, _QWORD), uint64_t))v31;
  if (v32)
  {
    OUTLINED_FUNCTION_158();
    v33 = OUTLINED_FUNCTION_4_7();
    v83 = OUTLINED_FUNCTION_4_7();
    v99[0] = v83;
    *(_DWORD *)v33 = 136446466;
    v82[1] = v33 + 4;
    OUTLINED_FUNCTION_2_0();
    v35 = v2[2];
    v34 = v2[3];
    swift_bridgeObjectRetain();
    sub_1CF68F110(v35, v34, v99);
    v101[0] = v36;
    sub_1CF73F2A0();
    OUTLINED_FUNCTION_44_5();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    v31(v25, (void (*)(_QWORD, _QWORD))v27, v19);
    v37 = sub_1CF73EF10();
    sub_1CF68F110(v37, v38, v99);
    v101[0] = v39;
    OUTLINED_FUNCTION_82_1();
    OUTLINED_FUNCTION_150();
    OUTLINED_FUNCTION_47_5();
    OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v88, (os_log_type_t)v87, "%{public}s: Trying to monitor reachability of path: %s", (uint8_t *)v33);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_0_1();
  }
  OUTLINED_FUNCTION_47_5();
  sub_1CF73EC64();
  v40 = OUTLINED_FUNCTION_45_6();
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v40);
  v42 = v94;
  if (EnumTagSinglePayload == 1)
  {
    sub_1CF6A4E24((uint64_t)v11, &qword_1EFBA2CE0);
LABEL_12:
    v58 = sub_1CF73F0CC();
    v59 = qword_1EFBA2CC8;
    v60 = v97;
    v42(v97, (void (*)(_QWORD, _QWORD))v98, v19);
    if (os_log_type_enabled(v59, v58))
    {
      OUTLINED_FUNCTION_158();
      v61 = OUTLINED_FUNCTION_4_7();
      v62 = OUTLINED_FUNCTION_4_7();
      v96 = (char *)v19;
      v98 = (void (*)(uint64_t, char *))v25;
      v101[0] = v62;
      *(_DWORD *)v61 = 136446466;
      OUTLINED_FUNCTION_2_0();
      v63 = v2[2];
      v64 = v2[3];
      swift_bridgeObjectRetain();
      sub_1CF68F110(v63, v64, v101);
      v100 = v65;
      OUTLINED_FUNCTION_82_1();
      OUTLINED_FUNCTION_44_5();
      OUTLINED_FUNCTION_107();
      *(_WORD *)(v61 + 12) = 2080;
      sub_1CF73EC64();
      v66 = sub_1CF73EF10();
      sub_1CF68F110(v66, v67, v101);
      v100 = v68;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      v98(v60, v96);
      OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v59, v58, "%{public}s: Unable to monitor path which does not have resolved host/port as remote endpoint: %s", (uint8_t *)v61);
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_0_1();
    }
    OUTLINED_FUNCTION_57_5();
    ((void (*)(uint64_t, uint64_t))v25)(v60, v19);
    goto LABEL_15;
  }
  v43 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v43 + 88))(v11, v40) != *MEMORY[0x1E0CCE290])
  {
    OUTLINED_FUNCTION_37_0((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v43 + 8));
    goto LABEL_12;
  }
  v44 = v2;
  OUTLINED_FUNCTION_37_0((uint64_t)v11, *(uint64_t (**)(uint64_t, uint64_t))(v43 + 96));
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2CF0);
  v45 = v86;
  v46 = v95;
  v47 = v96;
  (*(void (**)(char *, char *, uint64_t))(v86 + 32))(v96, v11, v95);
  v48 = sub_1CF73E958();
  OUTLINED_FUNCTION_63(v48);
  sub_1CF6B3208(0, &qword_1EFBA2EA8);
  v49 = *(void (**)(char *, char *, uint64_t))(v45 + 16);
  v49(v90, v47, v46);
  v50 = sub_1CF6F31BC();
  if (v50)
  {
    v51 = (uint64_t)v50;
    v52 = v50;
    sub_1CF6F10A4(v51);
    v53 = OUTLINED_FUNCTION_16();
    swift_unknownObjectWeakInit();
    v54 = (_QWORD *)OUTLINED_FUNCTION_16();
    v54[2] = v53;
    v54[3] = v44;
    v55 = v85;
    v54[4] = v89;
    v54[5] = v55;
    v99[4] = (uint64_t)sub_1CF6F52E0;
    v99[5] = (uint64_t)v54;
    v99[0] = MEMORY[0x1E0C809B0];
    v99[1] = 1107296256;
    v56 = OUTLINED_FUNCTION_37_5((uint64_t)sub_1CF6F79AC);
    OUTLINED_FUNCTION_38();
    OUTLINED_FUNCTION_158();
    OUTLINED_FUNCTION_50_3();
    objc_msgSend(v52, sel_setStateChangedHandler_, v56);
    _Block_release(v56);
    v57 = v93;
    objc_msgSend(v93, sel_addEndpoint_, v52);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v96, v95);
  }
  else
  {
    v69 = sub_1CF73F0CC();
    v70 = qword_1EFBA2CC8;
    v71 = v84;
    v49(v84, v96, v95);
    if (os_log_type_enabled(v70, v69))
    {
      OUTLINED_FUNCTION_38();
      v72 = OUTLINED_FUNCTION_4_7();
      v98 = (void (*)(uint64_t, char *))OUTLINED_FUNCTION_4_7();
      v101[0] = (uint64_t)v98;
      *(_DWORD *)v72 = 136446466;
      OUTLINED_FUNCTION_2_0();
      v73 = v44[2];
      v74 = v44[3];
      v75 = v95;
      swift_bridgeObjectRetain();
      sub_1CF68F110(v73, v74, v101);
      v100 = v76;
      OUTLINED_FUNCTION_58_4();
      OUTLINED_FUNCTION_48_2();
      OUTLINED_FUNCTION_107();
      *(_WORD *)(v72 + 12) = 2080;
      v49(v90, v71, v75);
      v77 = sub_1CF73EF10();
      sub_1CF68F110(v77, v78, v101);
      v100 = v79;
      OUTLINED_FUNCTION_58_4();
      OUTLINED_FUNCTION_107();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v71, v75);
      OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v70, v69, "%{public}s: Unable to create CUNetLinkEndpoint from connection host: %s", (uint8_t *)v72);
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_0_1();
    }
    OUTLINED_FUNCTION_57_5();
    v80 = *(void (**)(char *, uint64_t))(v86 + 8);
    v81 = v95;
    v80(v71, v95);
    v80(v96, v81);
  }
LABEL_15:
  OUTLINED_FUNCTION_17();
}

id sub_1CF6F31BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  void (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  id v20;
  sockaddr_in *v21;
  unint64_t v22;
  uint64x2_t v23;
  int8x16_t v24;
  int8x16_t v25;
  int8x16_t v26;
  int8x16_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  sockaddr_in6 *v31;
  int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_167();
  v44 = v3;
  v45 = v4;
  v6 = v5;
  v38 = sub_1CF73E9AC();
  v7 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  OUTLINED_FUNCTION_28();
  v8 = sub_1CF73E988();
  OUTLINED_FUNCTION_11_0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF73E94C();
  OUTLINED_FUNCTION_27_1();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
  v39 = v6;
  v17(v15, v6, v12);
  v18 = (*(uint64_t (**)(char *, uint64_t))(v1 + 88))(v15, v12);
  if (v18 == *MEMORY[0x1E0CCE228])
  {
    OUTLINED_FUNCTION_13_11((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    swift_bridgeObjectRelease();
    v19 = (uint64_t)&v15[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EB0) + 48)];
    sub_1CF73F0CC();
    if (qword_1EFBA0960 != -1)
      swift_once();
    sub_1CF73E694();

    OUTLINED_FUNCTION_13_11(v39, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_1CF6A4E24(v19, &qword_1EFBA2048);
    return 0;
  }
  if (v18 == *MEMORY[0x1E0CCE218])
  {
    OUTLINED_FUNCTION_13_11((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v11, v15, v8);
    v20 = v16;
    IPv4Address.copy_sockaddr_in()(v21);
    v23 = (uint64x2_t)vdupq_n_s64(v22);
    v24.i64[0] = 255;
    v24.i64[1] = 255;
    v25 = vandq_s8((int8x16_t)vshlq_u64(v23, (uint64x2_t)xmmword_1CF7466E0), v24);
    v26 = vandq_s8((int8x16_t)vshlq_u64(v23, (uint64x2_t)xmmword_1CF7466D0), v24);
    v27 = vandq_s8((int8x16_t)vshlq_u64(v23, (uint64x2_t)xmmword_1CF7466F0), v24);
    v43 = 0;
    v40 = v28;
    v41 = (v25.i64[0] << 48) | (v25.i64[1] << 40) | (v26.i64[0] << 32) | (v26.i64[1] << 24) | v22 & 0xFF00000000000000 | (v27.i64[0] << 16) | (v27.i64[1] << 8) | v22;
    v42 = 0;
    objc_msgSend(v20, sel_setIpAddr_, &v40);

    OUTLINED_FUNCTION_13_11(v39, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    (*(void (**)(char *, uint64_t))(v2 + 8))(v11, v8);
  }
  else
  {
    if (v18 != *MEMORY[0x1E0CCE220])
    {
      v36 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
      v36(v39, v12);

      v36((uint64_t)v15, v12);
      return 0;
    }
    OUTLINED_FUNCTION_13_11((uint64_t)v15, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 96));
    v29 = v38;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v0, v15, v38);
    v30 = v16;
    IPv6Address.copy_sockaddr_in6()(v31);
    v43 = v32;
    v41 = v33;
    v42 = v34;
    v40 = v35;
    objc_msgSend(v30, sel_setIpAddr_, &v40);

    OUTLINED_FUNCTION_13_11(v39, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0, v29);
  }
  return v16;
}

void sub_1CF6F353C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *))
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  os_log_type_t v8;
  NSObject *v9;
  id v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[19];
  uint64_t v25[19];

  v5 = a1 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1D17D3F84](v5);
  if (v6)
  {
    v7 = (void *)v6;
    v8 = sub_1CF73F0C0();
    if (qword_1EFBA0960 != -1)
      swift_once();
    v9 = qword_1EFBA2CC8;
    v10 = v7;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = v10;
      swift_retain();
      v12 = swift_slowAlloc();
      v23 = swift_slowAlloc();
      v25[0] = v23;
      *(_DWORD *)v12 = 136446722;
      swift_beginAccess();
      v14 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      sub_1CF68F110(v14, v13, v25);
      sub_1CF73F2A0();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      v15 = v11;
      v16 = objc_msgSend(v15, sel_description);
      v17 = sub_1CF73EED4();
      v19 = v18;

      sub_1CF68F110(v17, v19, v25);
      sub_1CF73F2A0();

      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 22) = 2080;
      objc_msgSend(v15, sel_state);
      v20 = sub_1CF73F648();
      sub_1CF68F110(v20, v21, v25);
      v24[0] = v22;
      sub_1CF73F2A0();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1CF67E000, v9, v8, "%{public}s: Control channel endpoint %s reachability state changed: %s", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      MEMORY[0x1D17D3ED0](v23, -1, -1);
      MEMORY[0x1D17D3ED0](v12, -1, -1);
    }
    else
    {

    }
    if (objc_msgSend(v10, sel_state, v23) == 3)
    {
      sub_1CF6F52EC((uint64_t)v25);
      sub_1CF6CAAD0(v25, v24);
      a3(v24);
    }

  }
}

void sub_1CF6F384C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  os_log_type_t v18;
  NSObject *v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD, _QWORD);
  uint64_t v42;
  uint64_t v43[3];

  OUTLINED_FUNCTION_167();
  v2 = v0;
  v4 = v3;
  v39 = v5;
  v40 = v6;
  v8 = v7;
  OUTLINED_FUNCTION_45_6();
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_14();
  v38 = v10;
  OUTLINED_FUNCTION_29_6();
  v11 = sub_1CF73EA00();
  OUTLINED_FUNCTION_27_1();
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  v18 = sub_1CF73F0E4();
  if (qword_1EFBA0960 != -1)
    swift_once();
  v19 = qword_1EFBA2CC8;
  v20 = *(void (**)(_QWORD, _QWORD, _QWORD))(v1 + 16);
  v37 = v8;
  v41 = v20;
  v20(v17, v8, v11);
  if (os_log_type_enabled(v19, v18))
  {
    OUTLINED_FUNCTION_121();
    v21 = OUTLINED_FUNCTION_4_7();
    v35 = OUTLINED_FUNCTION_4_7();
    v43[0] = v35;
    *(_DWORD *)v21 = 136446466;
    v36 = v4;
    OUTLINED_FUNCTION_2_0();
    v34 = v19;
    v23 = *(_QWORD *)(v2 + 16);
    v22 = *(_QWORD *)(v2 + 24);
    swift_bridgeObjectRetain();
    sub_1CF68F110(v23, v22, v43);
    v42 = v24;
    sub_1CF73F2A0();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    OUTLINED_FUNCTION_73_4((uint64_t)v15, (uint64_t)v17);
    v25 = sub_1CF73EF10();
    sub_1CF68F110(v25, v26, v43);
    v42 = v27;
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_46_4();
    OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v34, v18, "%{public}s: Network control channel started but used prohibited interface %s. Starting new connection", (uint8_t *)v21);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_0_1();
  }
  OUTLINED_FUNCTION_46_4();
  OUTLINED_FUNCTION_2_0();
  swift_retain();
  sub_1CF73EA30();
  v28 = sub_1CF73EB2C();
  if (v28)
    v29 = v28;
  else
    v29 = MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA18A0);
  v30 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_1CF742850;
  OUTLINED_FUNCTION_73_4(v31 + v30, v37);
  v42 = v29;
  sub_1CF702F34();
  sub_1CF73EB38();
  sub_1CF73EAFC();
  sub_1CF73EB14();
  swift_allocObject();
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_52();
  v32 = sub_1CF73EA9C();
  sub_1CF6F0DDC(v32);
  sub_1CF6F13B8(v39, v40, v4);
  sub_1CF73EAE4();
  OUTLINED_FUNCTION_50_3();
  OUTLINED_FUNCTION_305();
  OUTLINED_FUNCTION_17();
}

void sub_1CF6F3B7C()
{
  void (**v0)(uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_167();
  v3 = v2;
  v5 = v4;
  v6 = sub_1CF73EA6C();
  OUTLINED_FUNCTION_27_1();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_16_7();
  OUTLINED_FUNCTION_2_0();
  v8 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v8 + 16) = v5;
  *(_QWORD *)(v8 + 24) = v3;
  *v0 = sub_1CF6F49E4;
  v0[1] = (void (*)(uint64_t))v8;
  (*(void (**)(void (**)(uint64_t), _QWORD, uint64_t))(v1 + 104))(v0, *MEMORY[0x1E0CCE460], v6);
  sub_1CF73EA60();
  OUTLINED_FUNCTION_158();
  swift_retain();
  sub_1CF73EA48();
  OUTLINED_FUNCTION_52();
  sub_1CF73EAA8();
  OUTLINED_FUNCTION_44_5();
  swift_release();
  OUTLINED_FUNCTION_37_0((uint64_t)v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_17();
}

void sub_1CF6F3C6C(uint64_t a1, void (*a2)(void *))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EB8);
  OUTLINED_FUNCTION_0_17();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_16_7();
  sub_1CF6B3198(a1, v2, &qword_1EFBA2EB8);
  v6 = sub_1CF73EC88();
  v7 = 0;
  if (OUTLINED_FUNCTION_36_6(v6) != 1)
  {
    sub_1CF6935F8((unint64_t *)&unk_1EFBA3770, (uint64_t (*)(uint64_t))MEMORY[0x1E0CCEB10], MEMORY[0x1E0CCEB28]);
    v7 = (void *)OUTLINED_FUNCTION_105();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v8, v2, a1);
  }
  a2(v7);

}

uint64_t sub_1CF6F3D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;

  OUTLINED_FUNCTION_2_0();
  v7 = (_QWORD *)OUTLINED_FUNCTION_16();
  v7[2] = a1;
  v7[3] = a3;
  v7[4] = a4;
  OUTLINED_FUNCTION_2_4();
  OUTLINED_FUNCTION_121();
  OUTLINED_FUNCTION_52();
  sub_1CF73EAF0();
  OUTLINED_FUNCTION_16_0();
  return swift_release();
}

uint64_t NWConnectionControlChannelTransport.deinit()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 88);
  if (v1 && *(_QWORD *)(v0 + 96))
    objc_msgSend(v1, sel_removeEndpoint_);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_49_1();
  sub_1CF6A4E24(v0 + 48, &qword_1ED8F7E60);

  sub_1CF693EC8(*(_QWORD *)(v0 + 104));
  return v0;
}

uint64_t NWConnectionControlChannelTransport.__deallocating_deinit()
{
  NWConnectionControlChannelTransport.deinit();
  return swift_deallocClassInstance();
}

BOOL sub_1CF6F3E64()
{
  return sub_1CF6F0ED4();
}

void sub_1CF6F3E84()
{
  sub_1CF6F13B8();
}

void sub_1CF6F3EA4()
{
  sub_1CF6F2960();
}

uint64_t sub_1CF6F3EC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1CF6F26F4(a1);
}

void sub_1CF6F3EE4(uint64_t a1@<X8>)
{
  sub_1CF6F0F78(a1);
}

uint64_t sub_1CF6F3F04()
{
  char v0;

  sub_1CF6F0E4C();
  return v0 & 1;
}

uint64_t sub_1CF6F3F28()
{
  return sub_1CF6F0B04() & 1;
}

uint64_t sub_1CF6F3F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, _QWORD *))
{
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;

  if (qword_1ED8F7930 != -1)
    swift_once();
  v10 = qword_1ED8FF0F0;
  v11 = (_QWORD *)OUTLINED_FUNCTION_16();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = v5;
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_2_4();
  a5(v10, v10, a4, v11);
  return swift_release();
}

void sub_1CF6F3FF8(uint64_t a1, unint64_t a2, char a3, void (*a4)(_BYTE *))
{
  uint64_t v7;
  unint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  Swift::String v13;
  id v14;
  _BYTE v15[152];
  _QWORD v16[4];
  char v17;

  if ((a3 & 1) != 0)
  {
    OUTLINED_FUNCTION_51_4();
    swift_willThrow();
    v10 = (void *)a1;
  }
  else
  {
    sub_1CF6934BC(a1, a2);
    if (qword_1ED8F7938 != -1)
      swift_once();
    v7 = qword_1ED8FF0F8;
    v8 = qword_1ED8FF100;
    sub_1CF6934BC(qword_1ED8FF0F8, qword_1ED8FF100);
    v9 = sub_1CF69323C();
    sub_1CF6933C0(v7, v8);
    if ((v9 & 1) != 0)
    {
      sub_1CF73E5C8();
      __asm { BR              X11 }
    }
    v16[3] = MEMORY[0x1E0DEA968];
    v16[0] = 0xD00000000000001ALL;
    v16[1] = 0x80000001CF754110;
    v17 = 1;
    sub_1CF692E68();
    v10 = (void *)OUTLINED_FUNCTION_105();
    v12 = v11;
    v15[0] = 2;
    v13 = ControlChannelConnectionError.Message.format(code:)((RemotePairingDevice::ControlChannelConnectionError::Code)v15);
    sub_1CF692EA4((uint64_t)v16);
    *(_BYTE *)v12 = 2;
    *(Swift::String *)(v12 + 8) = v13;
    *(_OWORD *)(v12 + 24) = 0u;
    *(_OWORD *)(v12 + 40) = 0u;
    *(_QWORD *)(v12 + 56) = 0;
    swift_willThrow();
    OUTLINED_FUNCTION_10_12();
  }
  v16[0] = v10;
  sub_1CF6F5484((uint64_t)v16);
  sub_1CF6F5490((uint64_t)v16, (uint64_t)v15);
  v14 = v10;
  a4(v15);

}

void sub_1CF6F43C4()
{
  void (*v0)(void (*)(_QWORD), uint64_t);
  void (*v1)(void (*)(_QWORD), uint64_t);
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t *);
  void (*v5)(uint64_t *);
  uint64_t v6;
  uint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int);
  uint64_t v37;
  void (*v38)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __int16, char);
  const void *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  NSObject *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t __dst;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char v114[152];
  _BYTE v115[152];
  _BYTE v116[152];
  uint64_t v117;

  OUTLINED_FUNCTION_167();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  sub_1CF6F5490(v6, (uint64_t)v115);
  sub_1CF6F5490((uint64_t)v115, (uint64_t)&v117);
  OUTLINED_FUNCTION_2_0();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v9 = Strong;
    sub_1CF6F5490(v7, (uint64_t)v116);
    if (sub_1CF6F54E4((uint64_t)v116) == 1)
    {
      v10 = (uint64_t *)nullsub_1(v116);
      v11 = *v10;
      OUTLINED_FUNCTION_63_3((uint64_t)v10, v12, v13, v14, v15, v16, v17, v18, v57, v60, v64, v67, v70, v73, v76, v77, v78, v79, v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        __dst,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114[0]);
      nullsub_1(v114);
      OUTLINED_FUNCTION_51_4();
      v19 = sub_1CF73F0CC();
      if (qword_1ED8F78E8 != -1)
        swift_once();
      v20 = qword_1ED8F78E0;
      if (os_log_type_enabled((os_log_t)qword_1ED8F78E0, v19))
      {
        v62 = v20;
        OUTLINED_FUNCTION_78_1();
        OUTLINED_FUNCTION_78_1();
        OUTLINED_FUNCTION_232();
        v21 = OUTLINED_FUNCTION_4_7();
        __dst = OUTLINED_FUNCTION_4_7();
        *(_DWORD *)v21 = 136446466;
        OUTLINED_FUNCTION_2_0();
        v23 = *(_QWORD *)(v9 + 16);
        v22 = *(_QWORD *)(v9 + 24);
        swift_bridgeObjectRetain();
        sub_1CF68F110(v23, v22, &__dst);
        sub_1CF73F2A0();
        OUTLINED_FUNCTION_305();
        OUTLINED_FUNCTION_150();
        *(_WORD *)(v21 + 12) = 2080;
        OUTLINED_FUNCTION_51_4();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
        v24 = sub_1CF73EF10();
        sub_1CF68F110(v24, v25, &__dst);
        v76 = v26;
        sub_1CF73F2A0();
        swift_bridgeObjectRelease();
        sub_1CF6F54EC(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1CF6939F8);
        sub_1CF6F54EC(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))sub_1CF6939F8);
        OUTLINED_FUNCTION_65_0(&dword_1CF67E000, v62, v19, "%{public}s: received error reading message: %s", (uint8_t *)v21);
        OUTLINED_FUNCTION_64();
        OUTLINED_FUNCTION_0_1();
      }
      __dst = v11;
      v27 = sub_1CF6ECBEC((uint64_t)&__dst);
      OUTLINED_FUNCTION_60_2(v27, v28, v29, v30, v31, v32, v33, v34, v58, v61, v65, v68, v71, v74, v76, v77, v78, v79, v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        __dst);
      OUTLINED_FUNCTION_51_4();
      v5(&v76);
      v35 = OUTLINED_FUNCTION_69();
      sub_1CF6F54EC(v35, v36);
      OUTLINED_FUNCTION_305();
      v37 = OUTLINED_FUNCTION_69();
    }
    else
    {
      v39 = (const void *)nullsub_1(v116);
      memmove(&__dst, v39, 0x92uLL);
      v40 = sub_1CF6F5558((uint64_t)&__dst);
      v48 = OUTLINED_FUNCTION_60_2(v40, v41, v42, v43, v44, v45, v46, v47, v57, v60, v64, v67, v70, v73, v76, v77, v78, v79, v80,
              v81,
              v82,
              v83,
              v84,
              v85,
              v86,
              v87,
              v88,
              v89,
              v90,
              v91,
              v92,
              v93,
              v94,
              __dst);
      OUTLINED_FUNCTION_63_3((uint64_t)v48, v49, v50, v51, v52, v53, v54, v55, v59, v63, v66, v69, v72, v75, v76, v77, v78, v79, v80,
        v81,
        v82,
        v83,
        v84,
        v85,
        v86,
        v87,
        v88,
        v89,
        v90,
        v91,
        v92,
        v93,
        v94,
        __dst,
        v96,
        v97,
        v98,
        v99,
        v100,
        v101,
        v102,
        v103,
        v104,
        v105,
        v106,
        v107,
        v108,
        v109,
        v110,
        v111,
        v112,
        v113,
        v114[0]);
      v56 = nullsub_1(v114);
      sub_1CF6F5578(v56);
      v5(&v76);
      v1((void (*)(_QWORD))v5, v3);
      OUTLINED_FUNCTION_305();
      v38 = sub_1CF6939F8;
      v37 = v7;
    }
    sub_1CF6F54EC(v37, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))v38);
  }
  OUTLINED_FUNCTION_17();
}

uint64_t sub_1CF6F46B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;

  type metadata accessor for RemoteXPCControlChannelTransport();
  v9 = swift_allocObject();
  return sub_1CF6F4704(a1, a2, v9, a4, a5);
}

uint64_t sub_1CF6F4704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;

  *(_DWORD *)(a3 + 56) = 33619968;
  *(_QWORD *)(a3 + 32) = a1;
  *(_QWORD *)(a3 + 40) = a5;
  *(_QWORD *)(a3 + 48) = a2;
  v6 = qword_1ED8F6AF8;
  swift_retain();
  swift_retain();
  if (v6 != -1)
    swift_once();
  sub_1CF68C4F8();
  sub_1CF73F648();
  sub_1CF73EF58();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  *(_QWORD *)(a3 + 16) = 0x707865746F6D6572;
  *(_QWORD *)(a3 + 24) = 0xEA00000000002D63;
  return a3;
}

uint64_t sub_1CF6F47FC()
{
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

uint64_t sub_1CF6F481C(uint64_t a1)
{
  uint64_t v1;

  return sub_1CF6F04E4(a1, *(void (**)(_BYTE *))(v1 + 16));
}

unint64_t sub_1CF6F4824()
{
  unint64_t result;

  result = qword_1ED8F7858;
  if (!qword_1ED8F7858)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelMessageEnvelope, &type metadata for ControlChannelMessageEnvelope);
    atomic_store(result, (unint64_t *)&qword_1ED8F7858);
  }
  return result;
}

unint64_t sub_1CF6F4860()
{
  unint64_t result;

  result = qword_1ED8F7850;
  if (!qword_1ED8F7850)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for ControlChannelMessageEnvelope, &type metadata for ControlChannelMessageEnvelope);
    atomic_store(result, (unint64_t *)&qword_1ED8F7850);
  }
  return result;
}

uint64_t sub_1CF6F489C()
{
  uint64_t v0;

  return sub_1CF6F05D8(*(uint64_t (**)(_BYTE *))(v0 + 16));
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

void sub_1CF6F48BC()
{
  uint64_t v0;

  sub_1CF6F03E4(*(void (**)(_QWORD *))(v0 + 16));
}

uint64_t sub_1CF6F48C4()
{
  return objectdestroy_11Tm((void (*)(_QWORD))MEMORY[0x1E0DEEBF0]);
}

void sub_1CF6F48D0()
{
  uint64_t v0;

  (*(void (**)(_QWORD))(v0 + 16))(0);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6F48F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7E60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1CF6F4938()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CF6F495C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1CF6F4990(uint64_t a1)
{
  uint64_t v1;

  return sub_1CF6F1864(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void (**)(_QWORD *))(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_1CF6F49A0(char a1)
{
  uint64_t v1;

  sub_1CF6F21F0(a1, v1);
}

uint64_t sub_1CF6F49A8()
{
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF6F49D4()
{
  uint64_t v0;

  return sub_1CF6F2384(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(void (**)(_QWORD *))(v0 + 40));
}

void sub_1CF6F49E4(uint64_t a1)
{
  uint64_t v1;

  sub_1CF6F3C6C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_1CF6F49EC()
{
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_54();
  return swift_deallocObject();
}

void sub_1CF6F4A04()
{
  sub_1CF715844();
}

void sub_1CF6F4A10()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_239();
  *v0 = sub_1CF6EFFC8();
  v0[1] = v1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F4A30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6F0D1C(a1, a2, a3, a4, sub_1CF6EFFCC);
}

void sub_1CF6F4A4C()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_239();
  sub_1CF6F002C();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F4A70(char *a1)
{
  sub_1CF6F0050(*a1);
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F4A90(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6F0D1C(a1, a2, a3, a4, sub_1CF6EFFCC);
}

void sub_1CF6F4AAC()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_239();
  *v0 = sub_1CF6F0DB0();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F4AD0()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_239();
  sub_1CF6F0E4C();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F4AF4(char *a1)
{
  sub_1CF6F0E70(*a1);
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F4B14(uint64_t a1@<X8>)
{
  sub_1CF6F0F78(a1);
  OUTLINED_FUNCTION_1();
}

id sub_1CF6F4B3C(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned __int16 a19)
{
  int v19;

  v19 = (a19 >> 11) & 3;
  if (v19 == 1)
    return result;
  if (!v19)
    return (id)sub_1CF6CA3C4(a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0,
                 (uint64_t (*)(void))sub_1CF6CA5A4,
                 (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  return result;
}

uint64_t initializeWithCopy for ControlChannelTransportEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int16 v22;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  v14 = *(_QWORD *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 104);
  v18 = *(_QWORD *)(a2 + 112);
  v19 = *(_QWORD *)(a2 + 120);
  v20 = *(_QWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = *(_WORD *)(a2 + 144);
  sub_1CF6F4B3C(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v13;
  *(_QWORD *)(a1 + 80) = v14;
  *(_QWORD *)(a1 + 88) = v15;
  *(_QWORD *)(a1 + 96) = v16;
  *(_QWORD *)(a1 + 104) = v17;
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v19;
  *(_QWORD *)(a1 + 128) = v20;
  *(_QWORD *)(a1 + 136) = v21;
  *(_WORD *)(a1 + 144) = v22;
  return a1;
}

uint64_t assignWithCopy for ControlChannelTransportEvent(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int16 v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unsigned __int16 v37;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  v28 = *(_QWORD *)(a2 + 72);
  v29 = *(_QWORD *)(a2 + 80);
  v30 = *(_QWORD *)(a2 + 88);
  v31 = *(_QWORD *)(a2 + 96);
  v32 = *(_QWORD *)(a2 + 104);
  v33 = *(_QWORD *)(a2 + 112);
  v34 = *(_QWORD *)(a2 + 120);
  v35 = *(_QWORD *)(a2 + 128);
  v36 = *(_QWORD *)(a2 + 136);
  v37 = *(_WORD *)(a2 + 144);
  sub_1CF6F4B3C(*(id *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37);
  v12 = *(void **)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  v24 = *(_QWORD *)(a1 + 128);
  v25 = *(_QWORD *)(a1 + 136);
  v26 = *(_WORD *)(a1 + 144);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v28;
  *(_QWORD *)(a1 + 80) = v29;
  *(_QWORD *)(a1 + 88) = v30;
  *(_QWORD *)(a1 + 96) = v31;
  *(_QWORD *)(a1 + 104) = v32;
  *(_QWORD *)(a1 + 112) = v33;
  *(_QWORD *)(a1 + 120) = v34;
  *(_QWORD *)(a1 + 128) = v35;
  *(_QWORD *)(a1 + 136) = v36;
  *(_WORD *)(a1 + 144) = v37;
  sub_1CF68BFCC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, v25, v26);
  return a1;
}

void *__swift_memcpy146_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x92uLL);
}

uint64_t assignWithTake for ControlChannelTransportEvent(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int16 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v3 = *(_WORD *)(a2 + 144);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_OWORD *)(a1 + 64);
  v13 = *(_OWORD *)(a1 + 80);
  v14 = *(_OWORD *)(a1 + 96);
  v15 = *(_OWORD *)(a1 + 112);
  v16 = *(_QWORD *)(a1 + 128);
  v17 = *(_QWORD *)(a1 + 136);
  v18 = *(_WORD *)(a1 + 144);
  v19 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v19;
  v20 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v20;
  v21 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v21;
  v22 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v22;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = v3;
  sub_1CF68BFCC(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, v17, v18);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlChannelTransportEvent(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 146))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v2 = ((*(unsigned __int16 *)(a1 + 144) >> 11) & 3 | (4
                                                         * ((*(_QWORD *)a1 >> 58) & 0x3C | (*(_QWORD *)a1 >> 1) & 3))) ^ 0xFF;
      if (v2 >= 0xFD)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

void storeEnumTagSinglePayload for ControlChannelTransportEvent(uint64_t a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4;
  int v5;

  if (a2 > 0xFD)
  {
    *(_QWORD *)(a1 + 136) = 0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_WORD *)(a1 + 144) = 0;
    *(_QWORD *)a1 = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(a1 + 146) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(a1 + 146) = 0;
    if (a2)
    {
      v4 = (-(char)a2 >> 2) & 0x3F | (-(char)a2 << 6);
      v5 = (-a2 & 3) << 11;
      *(_QWORD *)a1 = ((v4 << 58) | (2 * v4)) & 0xF000000000000007;
      bzero((void *)(a1 + 8), 0x88uLL);
      *(_WORD *)(a1 + 144) = v5;
    }
  }
}

uint64_t dispatch thunk of ControlChannelTransport.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ControlChannelTransport.physicallyConnected.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ControlChannelTransport.networkAdvertActive.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ControlChannelTransport.start(withTargetQueue:eventHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of ControlChannelTransport.send(message:invokingCompletionHandlerOn:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of ControlChannelTransport.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of ControlChannelTransport.getHost()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ControlChannelTransport.endpoint.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ControlChannelTransport.endpointHasBeenUpdatedSinceInitialization.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ControlChannelTransport.isPeerToPeer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t type metadata accessor for RemoteXPCControlChannelTransport()
{
  return objc_opt_self();
}

uint64_t method lookup function for RemoteXPCControlChannelTransport()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.id.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.id.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.invalidated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.invalidated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.invalidated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.endpoint.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.__allocating_init(xpcConnection:to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.start(withTargetQueue:eventHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.send(message:invokingCompletionHandlerOn:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.getHost()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of RemoteXPCControlChannelTransport.isPeerToPeer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t type metadata accessor for NWConnectionControlChannelTransport()
{
  return objc_opt_self();
}

uint64_t method lookup function for NWConnectionControlChannelTransport()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.isPeerToPeer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.id.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.id.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.id.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.connection.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.connection.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.connection.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpointHasBeenUpdatedSinceInitialization.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpointHasBeenUpdatedSinceInitialization.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpointHasBeenUpdatedSinceInitialization.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.networkAdvertActive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpoint.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpoint.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.endpoint.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.interfaceIsProhibitedPredicate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.interfaceIsProhibitedPredicate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.interfaceIsProhibitedPredicate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.__allocating_init(connection:endpoint:netLinkManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.start(withTargetQueue:eventHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.getHost()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.send(content:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of NWConnectionControlChannelTransport.receive(minLength:maxLength:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t sub_1CF6F5290()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CF6F52B4()
{
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_58();
  swift_release();
  return swift_deallocObject();
}

void sub_1CF6F52E0()
{
  uint64_t v0;

  sub_1CF6F353C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(void (**)(_QWORD *))(v0 + 32));
}

void sub_1CF6F52EC(uint64_t a1)
{
  *(_QWORD *)a1 = 1;
  bzero((void *)(a1 + 8), 0x88uLL);
  *(_WORD *)(a1 + 144) = 4096;
}

void sub_1CF6F5320()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v1);
  OUTLINED_FUNCTION_3_2();
}

void sub_1CF6F534C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(uint64_t (**)(void))(v1 + 16))() & 1;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F5374(uint64_t a1)
{
  _BYTE v1[152];

  sub_1CF6F5490(a1, (uint64_t)v1);
  sub_1CF6F43C4();
}

void sub_1CF6F53CC(uint64_t a1)
{
  _BYTE v1[152];

  sub_1CF6F5490(a1, (uint64_t)v1);
  sub_1CF6F43C4();
}

void sub_1CF6F5428(uint64_t a1)
{
  sub_1CF6F53CC(a1);
}

uint64_t sub_1CF6F5434()
{
  return objectdestroy_11Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

void sub_1CF6F5440(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;

  sub_1CF6F3FF8(a1, a2, a3 & 1, *(void (**)(_BYTE *))(v3 + 16));
}

uint64_t sub_1CF6F5484(uint64_t result)
{
  *(_BYTE *)(result + 146) = 1;
  return result;
}

uint64_t sub_1CF6F5490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F69F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1CF6F54D8(void *a1, unint64_t a2, char a3)
{
  sub_1CF737710(a1, a2, a3 & 1);
}

uint64_t sub_1CF6F54E4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 146);
}

uint64_t sub_1CF6F54EC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int))
{
  int v4;

  BYTE2(v4) = *(_BYTE *)(a1 + 146);
  LOWORD(v4) = *(_WORD *)(a1 + 144);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), v4);
  return a1;
}

uint64_t sub_1CF6F5558(uint64_t result)
{
  __int16 v1;

  v1 = *(_WORD *)(result + 144) & 0xE7FF;
  *(_QWORD *)result &= 0xFFFFFFFFFFFFFF9uLL;
  *(_WORD *)(result + 144) = v1;
  return result;
}

uint64_t sub_1CF6F5578(uint64_t a1)
{
  sub_1CF6CA3C4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_WORD *)(a1 + 144), (uint64_t (*)(void))sub_1CF6934BC, (uint64_t (*)(void))sub_1CF6CA4D0,
    (uint64_t (*)(void))sub_1CF6CA5A4,
    (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C9F94);
  return a1;
}

uint64_t objectdestroy_73Tm()
{
  OUTLINED_FUNCTION_176();
  OUTLINED_FUNCTION_49_1();
  OUTLINED_FUNCTION_54();
  return swift_deallocObject();
}

void sub_1CF6F5620(uint64_t a1)
{
  sub_1CF6F5374(a1);
}

uint64_t sub_1CF6F562C()
{
  return objectdestroy_11Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t objectdestroy_11Tm(void (*a1)(_QWORD))
{
  uint64_t v1;

  OUTLINED_FUNCTION_58();
  a1(*(_QWORD *)(v1 + 32));
  OUTLINED_FUNCTION_54();
  return swift_deallocObject();
}

void sub_1CF6F5664(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;

  sub_1CF6F3FF8(a1, a2, a3 & 1, *(void (**)(_BYTE *))(v3 + 16));
}

uint64_t OUTLINED_FUNCTION_17_10()
{
  return sub_1CF73F2F4();
}

uint64_t OUTLINED_FUNCTION_18_12()
{
  return sub_1CF73F2F4();
}

uint64_t OUTLINED_FUNCTION_25_6()
{
  return sub_1CF73F690();
}

unint64_t OUTLINED_FUNCTION_35_4()
{
  return sub_1CF6A72FC();
}

void *OUTLINED_FUNCTION_37_5@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = a1;
  *(_QWORD *)(v2 - 128) = v1;
  return _Block_copy((const void *)(v2 - 152));
}

uint64_t OUTLINED_FUNCTION_45_6()
{
  return sub_1CF73E970();
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_48_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_1CF6E1C78(a1, a2, v3, v2);
}

id OUTLINED_FUNCTION_51_4()
{
  void *v0;

  return v0;
}

void OUTLINED_FUNCTION_57_5()
{
  uint64_t v0;

}

uint64_t OUTLINED_FUNCTION_58_4()
{
  return sub_1CF73F2A0();
}

void *OUTLINED_FUNCTION_60_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  return sub_1CF6CAAD0(&a34, &a15);
}

void *OUTLINED_FUNCTION_61_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 224) = a1;
  *(_QWORD *)(v2 - 216) = v1;
  return _Block_copy((const void *)(v2 - 240));
}

uint64_t OUTLINED_FUNCTION_63_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,char a53)
{
  uint64_t v53;

  return sub_1CF6F5490(v53 - 240, (uint64_t)&a53);
}

void OUTLINED_FUNCTION_66_3()
{
  JUMPOUT(0x1D17D2D90);
}

uint64_t OUTLINED_FUNCTION_68_4()
{
  return 0;
}

void OUTLINED_FUNCTION_75_2()
{
  const void *v0;

  _Block_release(v0);
}

uint64_t OUTLINED_FUNCTION_77_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_78_1()
{
  uint64_t v0;
  void (*v1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, int);

  return sub_1CF6F54EC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_79_2()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_82_1()
{
  return sub_1CF73F2A0();
}

void sub_1CF6F5834(id *a1)
{
  id v1;
  id v2;

  v1 = *a1;
  v2 = *a1;
  OS_dispatch_queue.parentQueue.setter(v1);
}

void OS_dispatch_queue.parentQueue.setter(void *a1)
{
  void *v1;

  OUTLINED_FUNCTION_1_16();
  objc_setAssociatedObject(v1, &unk_1EFBA2EC0, a1, (void *)1);
  swift_endAccess();

}

void (*OS_dispatch_queue.parentQueue.modify(uint64_t *a1))(id *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = OS_dispatch_queue.parentQueue.getter();
  return sub_1CF6F58F4;
}

void sub_1CF6F58F4(id *a1, char a2)
{
  id v2;

  if ((a2 & 1) != 0)
  {
    v2 = *a1;
    OUTLINED_FUNCTION_2_14();

  }
  else
  {
    OUTLINED_FUNCTION_2_14();
  }
}

uint64_t OS_dispatch_queue.childQueue(label:qos:attributes:autoreleaseFrequency:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  id v22;
  void *v27;

  v5 = sub_1CF73F174();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_34();
  v9 = v8 - v7;
  v10 = sub_1CF73F150();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  OUTLINED_FUNCTION_34();
  v14 = v13 - v12;
  v15 = sub_1CF73ED84();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_34();
  v19 = v18 - v17;
  sub_1CF68F3BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, a3, v15);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v14, a4, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v9, a5, v5);
  swift_bridgeObjectRetain();
  v20 = v27;
  v21 = sub_1CF73F18C();
  v22 = v20;
  OUTLINED_FUNCTION_2_14();
  return v21;
}

uint64_t sub_1CF6F5AAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = OS_dispatch_queue.parentQueue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1CF6F5AD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v5 = MEMORY[0x1E0DEE9D8];
    sub_1CF73F3C0();
    v4 = a1 + 32;
    do
    {
      sub_1CF6F689C(v4);
      sub_1CF73F39C();
      sub_1CF73F3CC();
      sub_1CF73F3D8();
      sub_1CF73F3A8();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v5;
  }
  return result;
}

void sub_1CF6F5B88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  v6 = sub_1CF73F660();
  if (v6)
  {
    v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  v9 = (void *)sub_1CF73E484();

  sub_1CF6F5C70(v10);
  OUTLINED_FUNCTION_34_0();
}

void sub_1CF6F5C70(uint64_t a1)
{
  id v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;

  v1 = OUTLINED_FUNCTION_1_17(a1, sel_userInfo);
  v2 = sub_1CF73EE2C();

  v3 = sub_1CF6F5D50(v2);
  swift_bridgeObjectRelease();
  v4 = sub_1CF6F6174(v3);
  v5 = swift_bridgeObjectRelease();
  v6 = OUTLINED_FUNCTION_1_17(v5, sel_domain);
  v7 = sub_1CF73EED4();
  v9 = v8;

  v11 = OUTLINED_FUNCTION_1_17(v10, sel_code);
  v12 = objc_allocWithZone(MEMORY[0x1E0CB35C8]);
  sub_1CF6CD8C4(v7, v9, (uint64_t)v11, v4);
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1CF6F5D50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;
  _OWORD v17[3];
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;
  _QWORD v21[6];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EC8);
  v20 = sub_1CF73EE44();
  sub_1CF6B315C(v21, a1);
  v2 = v21[0];
  v3 = v21[1];
  v4 = v21[3];
  v5 = v21[4];
  v6 = (unint64_t)(v21[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_3;
LABEL_2:
  v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v8 = v7 | (v4 << 6);
  while (1)
  {
    v12 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v8);
    v14 = *v12;
    v13 = v12[1];
    sub_1CF68F1EC(*(_QWORD *)(v2 + 56) + 32 * v8, (uint64_t)v19);
    *(_QWORD *)&v18 = v14;
    *((_QWORD *)&v18 + 1) = v13;
    v17[0] = v18;
    v17[1] = v19[0];
    v17[2] = v19[1];
    swift_bridgeObjectRetain();
    sub_1CF6F64A4((uint64_t)&v20, v17);
    sub_1CF68DE94((uint64_t)v17, &qword_1EFBA2ED0);
    if (v5)
      goto LABEL_2;
LABEL_3:
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v9 >= v6)
      goto LABEL_24;
    v10 = *(_QWORD *)(v3 + 8 * v9);
    if (!v10)
    {
      v11 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 3;
      if (v4 + 3 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 4;
      if (v4 + 4 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 5;
      if (v4 + 5 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
      {
LABEL_14:
        v9 = v11;
      }
      else
      {
        v9 = v4 + 6;
        if (v4 + 6 >= v6)
          goto LABEL_24;
        v10 = *(_QWORD *)(v3 + 8 * v9);
        if (!v10)
        {
          v15 = v4 + 7;
          while (v15 < v6)
          {
            v10 = *(_QWORD *)(v3 + 8 * v15++);
            if (v10)
            {
              v9 = v15 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_release();
          return v20;
        }
      }
    }
LABEL_15:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v9 << 6);
    v4 = v9;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  sub_1CF68DE94((uint64_t)v17, &qword_1EFBA2ED0);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1CF6F5F64(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  int64_t v6;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  uint64_t result;
  _BYTE __dst[72];
  _BYTE __src[72];
  uint64_t v16;
  _QWORD v17[6];

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EC8);
  v16 = sub_1CF73EE44();
  sub_1CF6B315C(v17, a1);
  v2 = v17[0];
  v3 = v17[1];
  v4 = v17[3];
  v5 = v17[4];
  v6 = (unint64_t)(v17[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  if (!v5)
    goto LABEL_3;
LABEL_2:
  v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  v8 = v7 | (v4 << 6);
  while (1)
  {
    sub_1CF68E1C4(*(_QWORD *)(v2 + 48) + 40 * v8, (uint64_t)__src);
    sub_1CF68F1EC(*(_QWORD *)(v2 + 56) + 32 * v8, (uint64_t)&__src[40]);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1CF6F6694((uint64_t)&v16, (uint64_t)__dst);
    sub_1CF68DE94((uint64_t)__dst, &qword_1EFBA2EE8);
    if (v5)
      goto LABEL_2;
LABEL_3:
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v9 >= v6)
      goto LABEL_24;
    v10 = *(_QWORD *)(v3 + 8 * v9);
    if (!v10)
    {
      v11 = v4 + 2;
      if (v4 + 2 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 3;
      if (v4 + 3 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 4;
      if (v4 + 4 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
        goto LABEL_14;
      v11 = v4 + 5;
      if (v4 + 5 >= v6)
        goto LABEL_24;
      v10 = *(_QWORD *)(v3 + 8 * v11);
      if (v10)
      {
LABEL_14:
        v9 = v11;
      }
      else
      {
        v9 = v4 + 6;
        if (v4 + 6 >= v6)
          goto LABEL_24;
        v10 = *(_QWORD *)(v3 + 8 * v9);
        if (!v10)
        {
          v12 = v4 + 7;
          while (v12 < v6)
          {
            v10 = *(_QWORD *)(v3 + 8 * v12++);
            if (v10)
            {
              v9 = v12 - 1;
              goto LABEL_15;
            }
          }
LABEL_24:
          swift_release();
          return v16;
        }
      }
    }
LABEL_15:
    v5 = (v10 - 1) & v10;
    v8 = __clz(__rbit64(v10)) + (v9 << 6);
    v4 = v9;
  }
  __break(1u);
  swift_bridgeObjectRelease();
  sub_1CF68DE94((uint64_t)__dst, &qword_1EFBA2EE8);
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1CF6F6174(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  int64_t v4;
  unint64_t v5;
  unint64_t result;
  unint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  int64_t v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  _OWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  _OWORD v27[2];
  _OWORD v28[2];
  __int128 v29;
  uint64_t v30;
  _QWORD v31[6];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7A80);
    v2 = (_QWORD *)sub_1CF73F474();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  sub_1CF6B315C(v31, a1);
  v3 = v31[0];
  v4 = v31[3];
  v5 = v31[4];
  v21 = v31[1];
  v22 = (unint64_t)(v31[2] + 64) >> 6;
  result = swift_bridgeObjectRetain();
  while (1)
  {
    while (1)
    {
      if (v5)
      {
        v7 = __clz(__rbit64(v5));
        v5 &= v5 - 1;
        v8 = v7 | (v4 << 6);
      }
      else
      {
        v9 = v4 + 1;
        if (__OFADD__(v4, 1))
          goto LABEL_31;
        if (v9 >= v22)
          goto LABEL_28;
        v10 = *(_QWORD *)(v21 + 8 * v9);
        v11 = v4 + 1;
        if (!v10)
        {
          v11 = v4 + 2;
          if (v4 + 2 >= v22)
            goto LABEL_28;
          v10 = *(_QWORD *)(v21 + 8 * v11);
          if (!v10)
          {
            v11 = v4 + 3;
            if (v4 + 3 >= v22)
              goto LABEL_28;
            v10 = *(_QWORD *)(v21 + 8 * v11);
            if (!v10)
            {
              v11 = v4 + 4;
              if (v4 + 4 >= v22)
                goto LABEL_28;
              v10 = *(_QWORD *)(v21 + 8 * v11);
              if (!v10)
              {
                v11 = v4 + 5;
                if (v4 + 5 >= v22)
                  goto LABEL_28;
                v10 = *(_QWORD *)(v21 + 8 * v11);
                if (!v10)
                {
                  v12 = v4 + 6;
                  while (v12 < v22)
                  {
                    v10 = *(_QWORD *)(v21 + 8 * v12++);
                    if (v10)
                    {
                      v11 = v12 - 1;
                      goto LABEL_22;
                    }
                  }
LABEL_28:
                  sub_1CF6F6A6C();
                  return (unint64_t)v2;
                }
              }
            }
          }
        }
LABEL_22:
        v5 = (v10 - 1) & v10;
        v8 = __clz(__rbit64(v10)) + (v11 << 6);
        v4 = v11;
      }
      sub_1CF68E1C4(*(_QWORD *)(v3 + 48) + 40 * v8, (uint64_t)&v29);
      v30 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EC8);
      swift_dynamicCast();
      sub_1CF68E2E4(&v25, v27);
      sub_1CF68E2E4(v27, v28);
      sub_1CF68E2E4(v28, &v26);
      result = sub_1CF6B0D94();
      v13 = result;
      if ((v14 & 1) == 0)
        break;
      v15 = (_QWORD *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v15 = v23;
      v15[1] = v24;
      v16 = (_OWORD *)(v2[7] + 32 * v13);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v16);
      result = (unint64_t)sub_1CF68E2E4(&v26, v16);
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v17 = (_QWORD *)(v2[6] + 16 * result);
    *v17 = v23;
    v17[1] = v24;
    result = (unint64_t)sub_1CF68E2E4(&v26, (_OWORD *)(v2[7] + 32 * result));
    v18 = v2[2];
    v19 = __OFADD__(v18, 1);
    v20 = v18 + 1;
    if (v19)
      goto LABEL_30;
    v2[2] = v20;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1CF6F64A4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  void *v16;

  v3 = a2[1];
  v4 = (uint64_t)(a2 + 2);
  *(_QWORD *)&v13 = *a2;
  *((_QWORD *)&v13 + 1) = v3;
  sub_1CF68F1EC((uint64_t)(a2 + 2), (uint64_t)&v14);
  *((_QWORD *)&v11 + 1) = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v10 = v13;
  *((_QWORD *)&v10 + 1) = v3;
  swift_bridgeObjectRetain();
  v5 = sub_1CF6F689C((uint64_t)&v10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v14);
  v6 = *a2;
  v7 = a2[1];
  *(_QWORD *)&v13 = v6;
  *((_QWORD *)&v13 + 1) = v7;
  sub_1CF68F1EC(v4, (uint64_t)&v14);
  *((_QWORD *)&v11 + 1) = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v10 = swift_allocObject();
  sub_1CF68E2E4(&v14, (_OWORD *)(v10 + 16));
  swift_bridgeObjectRetain();
  sub_1CF6F689C((uint64_t)&v10);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v10);
  swift_bridgeObjectRelease();
  v16 = v5;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EC8);
  if (swift_dynamicCast())
  {
    v13 = v10;
    v14 = v11;
    v15 = v12;
    sub_1CF6B10EC();
    swift_unknownObjectRelease();
    return sub_1CF68E2F4((uint64_t)&v13);
  }
  else
  {
    v12 = 0;
    v10 = 0u;
    v11 = 0u;
    sub_1CF68DE94((uint64_t)&v10, &qword_1EFBA2ED8);
    *(_QWORD *)&v13 = v5;
    swift_unknownObjectRetain();
    *(_QWORD *)&v10 = sub_1CF73EF10();
    *((_QWORD *)&v10 + 1) = v9;
    sub_1CF73F330();
    swift_unknownObjectRetain();
    sub_1CF6B10EC();
    sub_1CF68E2F4((uint64_t)&v13);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
}

uint64_t sub_1CF6F6694(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;

  v3 = a2 + 40;
  sub_1CF68E1C4(a2, (uint64_t)&v12);
  sub_1CF68F1EC(v3, (uint64_t)v15);
  *((_QWORD *)&v10 + 1) = MEMORY[0x1E0DEC198];
  v4 = swift_allocObject();
  *(_QWORD *)&v9 = v4;
  v5 = v13;
  *(_OWORD *)(v4 + 16) = v12;
  *(_OWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 48) = v14;
  v6 = sub_1CF6F689C(&v9);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v9);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
  sub_1CF68E1C4(a2, (uint64_t)&v12);
  sub_1CF68F1EC(v3, (uint64_t)v15);
  *((_QWORD *)&v10 + 1) = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v9 = swift_allocObject();
  sub_1CF68E2E4(v15, (_OWORD *)(v9 + 16));
  sub_1CF6F689C(&v9);
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v9);
  sub_1CF68E2F4((uint64_t)&v12);
  v16 = v6;
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EC8);
  if (swift_dynamicCast())
  {
    v12 = v9;
    v13 = v10;
    v14 = v11;
    sub_1CF6B10EC();
    swift_unknownObjectRelease();
    return sub_1CF68E2F4((uint64_t)&v12);
  }
  else
  {
    v11 = 0;
    v9 = 0u;
    v10 = 0u;
    sub_1CF68DE94((uint64_t)&v9, &qword_1EFBA2ED8);
    *(_QWORD *)&v12 = v6;
    swift_unknownObjectRetain();
    *(_QWORD *)&v9 = sub_1CF73EF10();
    *((_QWORD *)&v9 + 1) = v8;
    sub_1CF73F330();
    swift_unknownObjectRetain();
    sub_1CF6B10EC();
    sub_1CF68E2F4((uint64_t)&v12);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
}

void *sub_1CF6F689C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  void *v5;
  _BYTE v6[32];

  sub_1CF68F1EC(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EE0);
  if (swift_dynamicCast())
  {
    sub_1CF6F5F64((uint64_t)v5);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EC8);
    v2 = sub_1CF73EE14();
LABEL_10:
    v3 = v2;
    swift_bridgeObjectRelease();
    return (void *)v3;
  }
  sub_1CF68F1EC(a1, (uint64_t)v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1318);
  if (swift_dynamicCast())
  {
    sub_1CF6F5AD8((uint64_t)v5);
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EC8);
    v2 = sub_1CF73F030();
    goto LABEL_10;
  }
  sub_1CF68F1EC(a1, (uint64_t)v6);
  sub_1CF6ABB78();
  if (swift_dynamicCast())
  {
    v3 = sub_1CF6F5C70();

  }
  else
  {
    sub_1CF68F1EC(a1, (uint64_t)v6);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EC8);
    if (!swift_dynamicCast())
    {
      sub_1CF68F1EC(a1, (uint64_t)v6);
      sub_1CF73EF10();
      v2 = sub_1CF73EEB0();
      goto LABEL_10;
    }
    return v5;
  }
  return (void *)v3;
}

uint64_t sub_1CF6F6A6C()
{
  return swift_release();
}

uint64_t sub_1CF6F6A74()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CF6F6A98()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CF6F6ABC()
{
  uint64_t result;

  sub_1CF6CACDC();
  result = sub_1CF73F270();
  qword_1EFBA2EF0 = result;
  return result;
}

uint64_t CertificateUtilities.RawTLSPublicKeyInfo.identity.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t CertificateUtilities.RawTLSPublicKeyInfo.publicKeyDERData.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1CF6934BC(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

void static CertificateUtilities.createTLSRawPublicKey(with:)(uint64_t a1@<X0>, uint64_t a2@<X1>, sec_identity_t *a3@<X8>)
{
  uint64_t v3;
  __SecKey *v7;
  __SecKey *v8;
  __SecCertificate *v9;
  __SecIdentity *v10;
  __SecIdentity *v11;
  sec_identity_t v12;
  SecKeyRef v13;
  SecKeyRef v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  NSObject *v18;
  NSObject *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v7 = (__SecKey *)static P256.Signing.PrivateKey.createKeyPair()();
  if (!v3)
  {
    v8 = v7;
    v9 = (__SecCertificate *)sub_1CF6F6FDC(v7, a1, a2);
    v10 = (__SecIdentity *)SecIdentityCreate();
    if (v10 && (v11 = v10, v12 = sec_identity_create(v10), v11, v12))
    {
      v13 = SecCertificateCopyKey(v9);
      if (v13)
      {
        v14 = v13;
        v15 = SecKeyCopySubjectPublicKeyInfo();
        if (v15)
        {
          v16 = (void *)v15;
          v17 = sub_1CF73E5A4();
          v19 = v18;

          *a3 = v12;
          a3[1] = (sec_identity_t)v17;
          a3[2] = v19;
        }
        else
        {
          sub_1CF6AA5E0();
          OUTLINED_FUNCTION_3_0();
          OUTLINED_FUNCTION_4_16();
          sub_1CF73F774();
          OUTLINED_FUNCTION_3_19();
          v36 = OUTLINED_FUNCTION_3_9();
          OUTLINED_FUNCTION_1_18(v36, v37, v38, v39, v40, v41, v42, v43, v44);
          sub_1CF73F780();
          OUTLINED_FUNCTION_28_0();

          swift_unknownObjectRelease();
        }
      }
      else
      {
        sub_1CF6AA5E0();
        OUTLINED_FUNCTION_3_0();
        OUTLINED_FUNCTION_4_16();
        sub_1CF73F774();
        OUTLINED_FUNCTION_3_19();
        v28 = OUTLINED_FUNCTION_3_9();
        OUTLINED_FUNCTION_1_18(v28, v29, v30, v31, v32, v33, v34, v35, v44);
        sub_1CF73F780();
        OUTLINED_FUNCTION_28_0();

        swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_1CF6AA5E0();
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_2_15();
      OUTLINED_FUNCTION_3_19();
      v20 = OUTLINED_FUNCTION_3_9();
      OUTLINED_FUNCTION_1_18(v20, v21, v22, v23, v24, v25, v26, v27, v44);
      sub_1CF73F780();
      OUTLINED_FUNCTION_28_0();

    }
  }
}

uint64_t static P256.Signing.PrivateKey.createKeyPair()()
{
  uint64_t inited;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  const __CFDictionary *v11;
  SecKeyRef RandomKey;
  CFErrorRef v13;
  CFErrorRef *v14;
  uint64_t result;
  CFErrorRef error[12];

  error[11] = *(CFErrorRef *)MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2EF8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CF743C80;
  v1 = (void *)*MEMORY[0x1E0CD6A38];
  v2 = (void *)*MEMORY[0x1E0CD6A70];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CD6A38];
  *(_QWORD *)(inited + 40) = v2;
  v3 = (void *)*MEMORY[0x1E0CD69F8];
  v4 = (void *)*MEMORY[0x1E0CD6A00];
  *(_QWORD *)(inited + 48) = *MEMORY[0x1E0CD69F8];
  *(_QWORD *)(inited + 56) = v4;
  v5 = (void *)*MEMORY[0x1E0CD6A20];
  *(_QWORD *)(inited + 64) = *MEMORY[0x1E0CD6A20];
  v6 = v1;
  v7 = v2;
  v8 = v3;
  v9 = v4;
  v10 = v5;
  *(_QWORD *)(inited + 72) = sub_1CF73F078();
  type metadata accessor for CFString(0);
  sub_1CF6CE26C(&qword_1EFBA2F00, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1CF7409F0);
  sub_1CF73EE44();
  error[0] = 0;
  v11 = (const __CFDictionary *)sub_1CF73EE14();
  swift_bridgeObjectRelease();
  RandomKey = SecKeyCreateRandomKey(v11, error);

  v13 = error[0];
  if (error[0])
  {
    type metadata accessor for CFError(0);
    sub_1CF6CE26C(&qword_1EFBA2F08, (uint64_t (*)(uint64_t))type metadata accessor for CFError, MEMORY[0x1E0CB1C60]);
    swift_allocError();
    *v14 = v13;
    swift_willThrow();

    return (uint64_t)RandomKey;
  }
  if (RandomKey)
    return (uint64_t)RandomKey;
  result = sub_1CF73F450();
  __break(1u);
  return result;
}

uint64_t sub_1CF6F6FDC(__SecKey *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  void *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t inited;
  void *v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  void *v43;
  SecKeyRef v44;
  uint64_t SelfSignedCertificate;
  void *v48;
  uint64_t v50;
  id v52;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2F70);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1CF742680;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2F78);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1CF742850;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2F80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1CF7468C0;
  v6 = (void *)*MEMORY[0x1E0CD6F50];
  type metadata accessor for CFString(0);
  v8 = v7;
  *(_QWORD *)(v5 + 32) = v6;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 88) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v5 + 56) = v7;
  *(_QWORD *)(v5 + 64) = 21333;
  *(_QWORD *)(v5 + 72) = 0xE200000000000000;
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v3 + 32) = v4;
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1CF742850;
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1CF7468C0;
  v12 = (void *)*MEMORY[0x1E0CD6F58];
  *(_QWORD *)(v11 + 32) = *MEMORY[0x1E0CD6F58];
  *(_QWORD *)(v11 + 88) = v9;
  *(_QWORD *)(v11 + 56) = v8;
  *(_QWORD *)(v11 + 64) = 0x6E4920656C707041;
  *(_QWORD *)(v11 + 72) = 0xEA00000000002E63;
  *(_QWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v3 + 40) = v10;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1CF742850;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1CF7468C0;
  v15 = (void *)*MEMORY[0x1E0CD6F60];
  *(_QWORD *)(v14 + 32) = *MEMORY[0x1E0CD6F60];
  *(_QWORD *)(v14 + 88) = v9;
  *(_QWORD *)(v14 + 56) = v8;
  *(_QWORD *)(v14 + 64) = 0xD000000000000017;
  *(_QWORD *)(v14 + 72) = 0x80000001CF754310;
  *(_QWORD *)(v13 + 32) = v14;
  *(_QWORD *)(v3 + 48) = v13;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1CF742850;
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1CF7468C0;
  v18 = (void *)*MEMORY[0x1E0CD6F48];
  *(_QWORD *)(v17 + 32) = *MEMORY[0x1E0CD6F48];
  *(_QWORD *)(v17 + 88) = v9;
  *(_QWORD *)(v17 + 56) = v8;
  *(_QWORD *)(v17 + 64) = a2;
  *(_QWORD *)(v17 + 72) = a3;
  *(_QWORD *)(v16 + 32) = v17;
  *(_QWORD *)(v3 + 56) = v16;
  v19 = v6;
  v20 = v12;
  v21 = v15;
  v22 = v18;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2F88);
  v48 = (void *)sub_1CF73F030();
  swift_bridgeObjectRelease();
  v23 = (void *)sub_1CF73F078();
  v50 = MEMORY[0x1D17D21C0](&unk_1E8C98470, 12);
  v25 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2F90);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1CF743C80;
  v27 = (void *)*MEMORY[0x1E0CD6C90];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CD6C90];
  type metadata accessor for CFNumber(0);
  *(_QWORD *)(inited + 40) = v23;
  v28 = (void *)*MEMORY[0x1E0CD7030];
  *(_QWORD *)(inited + 64) = v29;
  *(_QWORD *)(inited + 72) = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2F98);
  v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = xmmword_1CF742850;
  v31 = (void *)*MEMORY[0x1E0CD7038];
  *(_QWORD *)(v30 + 32) = *MEMORY[0x1E0CD7038];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7EF0);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_1CF742850;
  *(_QWORD *)(v32 + 32) = a2;
  *(_QWORD *)(v32 + 40) = a3;
  *(_QWORD *)(v30 + 40) = v32;
  swift_bridgeObjectRetain();
  v33 = v27;
  v52 = v23;
  v34 = v28;
  v35 = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7E90);
  sub_1CF6CE26C(&qword_1EFBA2F00, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1CF7409F0);
  sub_1CF73EE44();
  v36 = sub_1CF73EE14();
  swift_bridgeObjectRelease();
  type metadata accessor for CFDictionary(0);
  v38 = v37;
  *(_QWORD *)(inited + 80) = v36;
  v39 = (void *)*MEMORY[0x1E0CD6C88];
  *(_QWORD *)(inited + 104) = v37;
  *(_QWORD *)(inited + 112) = v39;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA2FA0);
  v40 = swift_initStackObject();
  *(_OWORD *)(v40 + 16) = xmmword_1CF742850;
  *(_QWORD *)(v40 + 32) = 0x332E39322E352E32;
  *(_QWORD *)(v40 + 40) = 0xE900000000000037;
  *(_QWORD *)(v40 + 48) = v50;
  *(_QWORD *)(v40 + 56) = v25;
  v41 = v39;
  sub_1CF6934BC(v50, v25);
  sub_1CF73EE44();
  v42 = sub_1CF73EE14();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 144) = v38;
  *(_QWORD *)(inited + 120) = v42;
  sub_1CF73EE44();
  v43 = (void *)sub_1CF73EE14();
  swift_bridgeObjectRelease();
  v44 = SecKeyCopyPublicKey(a1);
  SelfSignedCertificate = SecGenerateSelfSignedCertificate();
  if (SelfSignedCertificate)
  {

    sub_1CF6933C0(v50, v25);
  }
  else
  {
    sub_1CF73F0CC();
    if (qword_1EFBA0978 != -1)
      swift_once();
    sub_1CF73E694();
    sub_1CF6AA5E0();
    sub_1CF73F774();
    sub_1CF6ABB3C();
    swift_allocError();
    sub_1CF73F780();
    swift_willThrow();

    sub_1CF6933C0(v50, v25);
  }
  return SelfSignedCertificate;
}

ValueMetadata *type metadata accessor for CertificateUtilities()
{
  return &type metadata for CertificateUtilities;
}

uint64_t destroy for CertificateUtilities.RawTLSPublicKeyInfo(uint64_t a1)
{
  swift_unknownObjectRelease();
  return sub_1CF6933C0(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
}

_QWORD *_s19RemotePairingDevice20CertificateUtilitiesO19RawTLSPublicKeyInfoVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  v4 = a2[2];
  swift_unknownObjectRetain();
  sub_1CF6934BC(v3, v4);
  a1[1] = v3;
  a1[2] = v4;
  return a1;
}

_QWORD *assignWithCopy for CertificateUtilities.RawTLSPublicKeyInfo(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v5 = a2[1];
  v4 = a2[2];
  sub_1CF6934BC(v5, v4);
  v6 = a1[1];
  v7 = a1[2];
  a1[1] = v5;
  a1[2] = v4;
  sub_1CF6933C0(v6, v7);
  return a1;
}

_QWORD *assignWithTake for CertificateUtilities.RawTLSPublicKeyInfo(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  *a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  v4 = a1[1];
  v5 = a1[2];
  *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 8);
  sub_1CF6933C0(v4, v5);
  return a1;
}

ValueMetadata *type metadata accessor for CertificateUtilities.RawTLSPublicKeyInfo()
{
  return &type metadata for CertificateUtilities.RawTLSPublicKeyInfo;
}

uint64_t sub_1CF6F7784(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  unint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _OWORD v11[3];
  _OWORD v12[3];
  __int128 v13[2];
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1CF6A2F7C(0, v1, 0);
  result = sub_1CF706EA8(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    v6 = result;
    if (result < 1 << *(_BYTE *)(a1 + 32))
    {
      v7 = v5;
      v8 = a1 + 64;
      while ((*(_QWORD *)(v8 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
      {
        if (v7 != *(_DWORD *)(a1 + 36))
          goto LABEL_20;
        sub_1CF6B3120(*(_QWORD *)(a1 + 56) + 48 * v6, (uint64_t)v12);
        v11[0] = v12[0];
        v11[1] = v12[1];
        v11[2] = v12[2];
        sub_1CF6ABBB4((uint64_t)v11, (uint64_t)v13);
        sub_1CF6B2D4C((uint64_t)v11);
        v2 = v14;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1CF6A2F7C(0, *(_QWORD *)(v2 + 16) + 1, 1);
          v2 = v14;
        }
        v10 = *(_QWORD *)(v2 + 16);
        v9 = *(_QWORD *)(v2 + 24);
        if (v10 >= v9 >> 1)
        {
          sub_1CF6A2F7C(v9 > 1, v10 + 1, 1);
          v2 = v14;
        }
        *(_QWORD *)(v2 + 16) = v10 + 1;
        result = sub_1CF68C850(v13, v2 + 40 * v10 + 32);
        if ((uint64_t)v6 >= -(-1 << *(_BYTE *)(a1 + 32)))
          goto LABEL_21;
        v8 = a1 + 64;
        if ((*(_QWORD *)(a1 + 64 + 8 * (v6 >> 6)) & (1 << v6)) == 0)
          goto LABEL_22;
        if (v7 != *(_DWORD *)(a1 + 36))
          goto LABEL_23;
        result = sub_1CF73F300();
        if (!--v1)
          return v2;
        v6 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v7 = *(_DWORD *)(a1 + 36);
          if (result < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_24;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

BOOL sub_1CF6F7988(uint64_t a1, uint64_t a2)
{
  return a2 >= a1;
}

BOOL sub_1CF6F7994(uint64_t a1, uint64_t a2)
{
  return a1 >= a2;
}

BOOL sub_1CF6F79A0(uint64_t a1, uint64_t a2)
{
  return a2 < a1;
}

uint64_t sub_1CF6F79AC(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = OUTLINED_FUNCTION_2_4();
  v1(v2);
  return swift_release();
}

void sub_1CF6F79D8()
{
  OUTLINED_FUNCTION_174_0();
  OUTLINED_FUNCTION_70_2();
  sub_1CF6CACA8(&qword_1ED8F79B0, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_276();
  OUTLINED_FUNCTION_240_0(&qword_1ED8F7A10);
  sub_1CF73F2F4();
  OUTLINED_FUNCTION_13_12();
}

uint64_t sub_1CF6F7A6C()
{
  uint64_t result;

  sub_1CF6B3208(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA2FB0 = result;
  return result;
}

uint64_t sub_1CF6F7AE4()
{
  uint64_t result;

  type metadata accessor for AtomicCounter();
  swift_allocObject();
  result = AtomicCounter.init()();
  qword_1EFBA2FB8 = result;
  return result;
}

uint64_t sub_1CF6F7B20(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x626174617267696DLL && a2 == 0xEA0000000000656CLL;
  if (v2 || (sub_1CF73F690() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6150656C676E6973 && a2 == 0xEA00000000006874)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_1CF73F690();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1CF6F7C1C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6150656C676E6973;
  else
    return 0x626174617267696DLL;
}

uint64_t sub_1CF6F7C58()
{
  char *v0;

  return sub_1CF6F7C1C(*v0);
}

uint64_t sub_1CF6F7C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1CF6F7B20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1CF6F7C84()
{
  sub_1CF6F7F20();
  return sub_1CF73F864();
}

uint64_t sub_1CF6F7CAC()
{
  sub_1CF6F7F20();
  return sub_1CF73F870();
}

uint64_t sub_1CF6F7CD4()
{
  sub_1CF6F7F98();
  return sub_1CF73F864();
}

uint64_t sub_1CF6F7CFC()
{
  sub_1CF6F7F98();
  return sub_1CF73F870();
}

uint64_t sub_1CF6F7D24()
{
  sub_1CF6F7F5C();
  return sub_1CF73F864();
}

uint64_t sub_1CF6F7D4C()
{
  sub_1CF6F7F5C();
  return sub_1CF73F870();
}

void TunnelConnectionType.encode(to:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_2();
  v20 = v1;
  v4 = v3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2FC0);
  v17 = *(_QWORD *)(v5 - 8);
  v18 = v5;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_28();
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2FC8);
  v15 = *(_QWORD *)(v7 - 8);
  v16 = v7;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2FD0) - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_15();
  v14 = *v0;
  v12 = *((unsigned __int8 *)v0 + 8);
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  sub_1CF6F7F20();
  sub_1CF73F858();
  if (v12 == 1)
  {
    sub_1CF6F7F98();
    OUTLINED_FUNCTION_18_9();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v16);
  }
  else
  {
    OUTLINED_FUNCTION_299_0();
    OUTLINED_FUNCTION_18_9();
    v21 = v14;
    sub_1CF6DBFD0();
    v13 = v18;
    sub_1CF73F5F4();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v2, v13);
  }
  OUTLINED_FUNCTION_161_0();
  OUTLINED_FUNCTION_0_0();
}

unint64_t sub_1CF6F7F20()
{
  unint64_t result;

  result = qword_1EFBA2FD8;
  if (!qword_1EFBA2FD8)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF747000, &type metadata for TunnelConnectionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2FD8);
  }
  return result;
}

unint64_t sub_1CF6F7F5C()
{
  unint64_t result;

  result = qword_1EFBA2FE0;
  if (!qword_1EFBA2FE0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746FB0, &type metadata for TunnelConnectionType.SinglePathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2FE0);
  }
  return result;
}

unint64_t sub_1CF6F7F98()
{
  unint64_t result;

  result = qword_1EFBA2FF0;
  if (!qword_1EFBA2FF0)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746F60, &type metadata for TunnelConnectionType.MigratableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA2FF0);
  }
  return result;
}

void TunnelConnectionType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;

  OUTLINED_FUNCTION_2();
  v4 = v3;
  v27 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2FF8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_14();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3000);
  v7 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  OUTLINED_FUNCTION_15();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3008);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_28();
  __swift_project_boxed_opaque_existential_0Tm(v4, v4[3]);
  sub_1CF6F7F20();
  sub_1CF73F840();
  if (v0)
    goto LABEL_9;
  v28 = v4;
  v10 = sub_1CF73F564();
  v11 = *(_QWORD *)(v10 + 16);
  v12 = v8;
  if (!v11)
  {
    v18 = v2;
LABEL_8:
    v19 = sub_1CF73F384();
    OUTLINED_FUNCTION_105();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1470);
    *v21 = &type metadata for TunnelConnectionType;
    sub_1CF73F4B0();
    OUTLINED_FUNCTION_3_0();
    sub_1CF73F378();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x1E0DEC450], v19);
    swift_willThrow();
    OUTLINED_FUNCTION_13_2();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v18, v12);
    v4 = v28;
LABEL_9:
    v22 = (uint64_t)v4;
    goto LABEL_10;
  }
  v13 = *(_BYTE *)(v10 + 32);
  sub_1CF6A6F50(1, v11, v10, v10 + 32, 0, (2 * v11) | 1);
  v15 = v14;
  v17 = v16;
  swift_bridgeObjectRelease();
  if (v15 != v17 >> 1)
  {
    v18 = v2;
    v12 = v8;
    goto LABEL_8;
  }
  if ((v13 & 1) != 0)
  {
    OUTLINED_FUNCTION_299_0();
    OUTLINED_FUNCTION_191_0();
    sub_1CF6DBB30();
    sub_1CF73F528();
    OUTLINED_FUNCTION_159_0();
    OUTLINED_FUNCTION_13_2();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v2, v8);
    v25 = v29;
  }
  else
  {
    sub_1CF6F7F98();
    OUTLINED_FUNCTION_191_0();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v26);
    OUTLINED_FUNCTION_13_2();
    v23 = OUTLINED_FUNCTION_298_0();
    v24(v23);
    v25 = 0;
  }
  *(_QWORD *)v27 = v25;
  *(_BYTE *)(v27 + 8) = v13 ^ 1;
  v22 = (uint64_t)v28;
LABEL_10:
  __swift_destroy_boxed_opaque_existential_0Tm(v22);
  OUTLINED_FUNCTION_0_0();
}

void sub_1CF6F833C()
{
  TunnelConnectionType.init(from:)();
}

void sub_1CF6F8350()
{
  TunnelConnectionType.encode(to:)();
}

RemotePairingDevice::TunnelConnectionPriority __swiftcall TunnelConnectionPriority.init(rawValue:)(RemotePairingDevice::TunnelConnectionPriority rawValue)
{
  RemotePairingDevice::TunnelConnectionPriority *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static TunnelConnectionPriority.default.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void static TunnelConnectionPriority.ncm.getter(_QWORD *a1@<X8>)
{
  *a1 = 100;
}

uint64_t TunnelConnectionPriority.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

BOOL static TunnelConnectionPriority.< infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return *a1 < *a2;
}

RemotePairingDevice::TunnelConnectionPriority sub_1CF6F839C@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  RemotePairingDevice::TunnelConnectionPriority result;

  result.rawValue = TunnelConnectionPriority.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_1CF6F83C4(uint64_t *a1@<X8>)
{
  *a1 = TunnelConnectionPriority.rawValue.getter();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6F83E4()
{
  sub_1CF707490();
  return sub_1CF73F024();
}

uint64_t sub_1CF6F8440()
{
  sub_1CF707490();
  return sub_1CF73F00C();
}

void sub_1CF6F8490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = OUTLINED_FUNCTION_220_0(a1, a2, a3, a4);
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_107_1();
  sub_1CF6ABBB4(a1, v4);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_368_0();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
  OUTLINED_FUNCTION_34_0();
}

void sub_1CF6F8508(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(OUTLINED_FUNCTION_328_0(a1, (uint64_t)a2, a3, a4) - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_227_0();
  v8 = *a2;
  OUTLINED_FUNCTION_325_0();
  *(_QWORD *)(v4 + 40) = v8;
  OUTLINED_FUNCTION_52();
  swift_storeEnumTagMultiPayload();
  sub_1CF6FB110();
  OUTLINED_FUNCTION_320_0(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_34_0();
}

void sub_1CF6F8574(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t);
  uint64_t *boxed_opaque_existential_0;

  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  sub_1CF73F288();
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_107_1();
  sub_1CF6F86B4();
  v7 = OUTLINED_FUNCTION_274_0();
  if (__swift_getEnumTagSinglePayload(v7, v8, v5) == 1)
  {
    v9 = OUTLINED_FUNCTION_73();
    v10(v9);
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = v5;
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(v4 + 88);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)a1);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(boxed_opaque_existential_0, v2, v5);
  }
  OUTLINED_FUNCTION_42();
}

void sub_1CF6F8630(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = sub_1CF73F288();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v6 - v3;
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)&v6 - v3, a1);
  sub_1CF6F86E8((uint64_t)v4);
}

void sub_1CF6F86B4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_225_0();
  OUTLINED_FUNCTION_10();
  v0 = OUTLINED_FUNCTION_167_0();
  OUTLINED_FUNCTION_8_9(v0);
  OUTLINED_FUNCTION_5();
}

void sub_1CF6F86E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_225_0();
  OUTLINED_FUNCTION_10();
  v3 = OUTLINED_FUNCTION_167_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_5();
}

void sub_1CF6F8734()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F8770(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA2050);
  MEMORY[0x1E0C80A78](v2);
  sub_1CF707470(a1, (uint64_t)&v4 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_1EFBA2050);
  sub_1CF6F8828();
}

void sub_1CF6F87F4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_219_0();
  v0 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_355_0(v0, v1, (uint64_t *)&unk_1EFBA2050);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F8828()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_219_0();
  v0 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_144(v0, v1, (uint64_t *)&unk_1EFBA2050);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F8860()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6F889C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;

  result = sub_1CF6F8900();
  *(_WORD *)a1 = result;
  *(_BYTE *)(a1 + 2) = BYTE2(result) & 1;
  return result;
}

void sub_1CF6F88CC(unsigned __int16 *a1)
{
  sub_1CF6F8948(*a1 | (*((unsigned __int8 *)a1 + 2) << 16));
}

uint64_t sub_1CF6F8900()
{
  uint64_t v0;
  unsigned __int16 *v1;

  v1 = (unsigned __int16 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 120));
  OUTLINED_FUNCTION_10();
  return *v1 | (*((unsigned __int8 *)v1 + 2) << 16);
}

void sub_1CF6F8948(int a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 120);
  OUTLINED_FUNCTION_10();
  *(_WORD *)v3 = a1;
  *(_BYTE *)(v3 + 2) = BYTE2(a1) & 1;
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F898C()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6F89C8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1CF6F8A64(v1, v2);
}

void sub_1CF6F8A04()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (_QWORD *)((char *)v0 + *(_QWORD *)(*v0 + 128));
  if (!v1[1])
  {
    v2 = v0[2];
    v3 = v0[3];
    *v1 = v2;
    v1[1] = v3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6F8A64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 128));
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_1CF6F8A80(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  sub_1CF6F8A04();
  *a1 = v3;
  a1[1] = v4;
  OUTLINED_FUNCTION_1();
}

void sub_1CF6F8AB0(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_327_0();
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_327_0();
    OUTLINED_FUNCTION_40();
  }
}

void sub_1CF6F8AF8(uint64_t a1@<X8>)
{
  uint64_t v1;

  OUTLINED_FUNCTION_218_0();
  OUTLINED_FUNCTION_10();
  sub_1CF6ABBB4(v1, a1);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F8B2C(__int128 *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_218_0();
  OUTLINED_FUNCTION_10();
  __swift_destroy_boxed_opaque_existential_0Tm(v1);
  sub_1CF68C850(a1, v1);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F8B6C(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  v3 = *v2;
  LOBYTE(v2) = *((_BYTE *)v2 + 8);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = (_BYTE)v2;
}

uint64_t sub_1CF6F8B8C(uint64_t result)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 144);
  *(_QWORD *)v3 = *(_QWORD *)result;
  *(_BYTE *)(v3 + 8) = v2;
  return result;
}

void sub_1CF6F8BAC()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_380_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F8BE4()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_380_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F8C1C()
{
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_380_0();
  OUTLINED_FUNCTION_26();
}

id sub_1CF6F8C54()
{
  uint64_t v0;

  return *(id *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176));
}

uint64_t sub_1CF6F8C64()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184));
}

uint64_t sub_1CF6F8C74(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = result;
  return result;
}

void sub_1CF6F8C84()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_217();
  v0 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_355_0(v0, v1, &qword_1EFBA3030);
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F8CB8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_217();
  v0 = OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_144(v0, v1, &qword_1EFBA3030);
  OUTLINED_FUNCTION_27_0();
  OUTLINED_FUNCTION_26();
}

void sub_1CF6F8CF0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_213_0(*(_QWORD *)(*(_QWORD *)v0 + 200));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6F8D10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_101_1(a1, a2, *(_QWORD *)(*(_QWORD *)v2 + 200));
}

void sub_1CF6F8D1C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_213_0(*(_QWORD *)(*(_QWORD *)v0 + 208));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF6F8D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_101_1(a1, a2, *(_QWORD *)(*(_QWORD *)v2 + 208));
}

uint64_t sub_1CF6F8D48()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1CF6F8D58(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 216)) = a1;
  return swift_unknownObjectRelease();
}

uint64_t sub_1CF6F8D70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 224)) = a1;
  return swift_release();
}

void TunnelEndpoint.__allocating_init(connection:workQueue:)()
{
  uint64_t v0;
  void *v1;

  OUTLINED_FUNCTION_130_0();
  v0 = OUTLINED_FUNCTION_28_3();
  TunnelEndpoint.init(connection:workQueue:)(v0, v1);
  OUTLINED_FUNCTION_40();
}

_QWORD *TunnelEndpoint.init(connection:workQueue:)(uint64_t a1, void *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;

  v3 = v2;
  __swift_storeEnumTagSinglePayload((uint64_t)v3 + *(_QWORD *)(*v3 + 104), 1, 1, *(_QWORD *)(*v3 + 80));
  v6 = (uint64_t)v3 + *(_QWORD *)(*v3 + 112);
  v7 = OUTLINED_FUNCTION_148_0();
  OUTLINED_FUNCTION_235(v6, v8, v9, v7);
  *(_BYTE *)(v10 + 2) = 1;
  OUTLINED_FUNCTION_190_0();
  v12 = (char *)v3 + v11;
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = *(_QWORD *)(*v3 + 152);
  OUTLINED_FUNCTION_276();
  OUTLINED_FUNCTION_240_0(qword_1EFBA3010);
  *(_QWORD *)((char *)v3 + v13) = OUTLINED_FUNCTION_180_0();
  v14 = *(_QWORD *)(*v3 + 160);
  *(_QWORD *)((char *)v3 + v14) = OUTLINED_FUNCTION_180_0();
  v15 = *(_QWORD *)(*v3 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
  *(_QWORD *)((char *)v3 + v15) = sub_1CF73EE44();
  v16 = (uint64_t)v3 + *(_QWORD *)(*v3 + 192);
  v17 = OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_24_7(v16, v18, v19, v17);
  *(_QWORD *)v12 = 0;
  v12[8] = 0;
  *(_QWORD *)((char *)v3 + *(_QWORD *)(*v3 + 176)) = a2;
  OUTLINED_FUNCTION_366_0();
  v20 = a2;
  sub_1CF73F348();
  swift_bridgeObjectRelease();
  if (qword_1EFBA0988 != -1)
    swift_once();
  sub_1CF68C4F8();
  sub_1CF73F648();
  sub_1CF73EF58();

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v3[2] = 0x6E656C656E6E7574;
  v3[3] = 0xEF2D746E696F7064;
  return v3;
}

void TunnelEndpoint.__allocating_init(id:connection:workQueue:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_130_0();
  v6 = OUTLINED_FUNCTION_52();
  TunnelEndpoint.init(id:connection:workQueue:)(v6, v7, a3, a4);
  OUTLINED_FUNCTION_34_0();
}

_QWORD *TunnelEndpoint.init(id:connection:workQueue:)(uint64_t a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_storeEnumTagSinglePayload((uint64_t)v4 + *(_QWORD *)(*v4 + 104), 1, 1, *(_QWORD *)(*v4 + 80));
  v8 = OUTLINED_FUNCTION_148_0();
  OUTLINED_FUNCTION_302_0(v8);
  v10 = (char *)v4 + *(_QWORD *)(v9 + 120);
  *(_WORD *)v10 = 0;
  v10[2] = 1;
  OUTLINED_FUNCTION_214_0(*(_QWORD *)(*v4 + 128));
  v12 = (char *)v4 + *(_QWORD *)(v11 + 144);
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = *(_QWORD *)(*v4 + 152);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1D10);
  sub_1CF6CA380(qword_1EFBA3010, (uint64_t *)&unk_1EFBA1D10);
  *(_QWORD *)((char *)v4 + v13) = OUTLINED_FUNCTION_171_0();
  v14 = *(_QWORD *)(*v4 + 160);
  *(_QWORD *)((char *)v4 + v14) = OUTLINED_FUNCTION_171_0();
  v15 = *(_QWORD *)(*v4 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
  *(_QWORD *)((char *)v4 + v15) = sub_1CF73EE44();
  v16 = OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_302_0(v16);
  OUTLINED_FUNCTION_214_0(*(_QWORD *)(v17 + 200));
  OUTLINED_FUNCTION_214_0(*(_QWORD *)(v18 + 208));
  *(_QWORD *)((char *)v4 + *(_QWORD *)(v19 + 216)) = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 224)) = 0;
  sub_1CF68C850(a3, (uint64_t)v4 + *(_QWORD *)(*v4 + 136));
  *(_QWORD *)v12 = 0;
  v12[8] = 0;
  *(_QWORD *)((char *)v4 + *(_QWORD *)(*v4 + 176)) = a4;
  *((_BYTE *)v4 + *(_QWORD *)(*v4 + 184)) = 64;
  v4[2] = a1;
  v4[3] = a2;
  return v4;
}

void TunnelEndpoint.__allocating_init(id:connectionObject:workQueue:priority:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t *a5)
{
  OUTLINED_FUNCTION_130_0();
  TunnelEndpoint.init(id:connectionObject:workQueue:priority:)(a1, a2, a3, a4, a5);
  OUTLINED_FUNCTION_34_0();
}

_QWORD *TunnelEndpoint.init(id:connectionObject:workQueue:priority:)(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t *a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t inited;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v29;

  v6 = v5;
  v8 = *a5;
  v29 = *((unsigned __int8 *)a5 + 8);
  __swift_storeEnumTagSinglePayload((uint64_t)v5 + *(_QWORD *)(*v5 + 104), 1, 1, *(_QWORD *)(*v5 + 80));
  v9 = (uint64_t)v5 + *(_QWORD *)(*v5 + 112);
  v10 = OUTLINED_FUNCTION_148_0();
  OUTLINED_FUNCTION_235(v9, v11, v12, v10);
  *(_BYTE *)(v13 + 2) = 1;
  OUTLINED_FUNCTION_190_0();
  v15 = (char *)v6 + v14;
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v16 = (_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 152));
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_311_0(qword_1EFBA3010);
  *v16 = OUTLINED_FUNCTION_186_0();
  v17 = *(_QWORD *)(*v6 + 160);
  *(_QWORD *)((char *)v6 + v17) = OUTLINED_FUNCTION_186_0();
  v18 = *(_QWORD *)(*v6 + 168);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
  *(_QWORD *)((char *)v6 + v18) = OUTLINED_FUNCTION_378_0();
  v19 = a3;
  v20 = (uint64_t)v6 + *(_QWORD *)(*v6 + 192);
  v21 = OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_24_7(v20, v22, v23, v21);
  *(_QWORD *)v15 = v8;
  v15[8] = v29;
  if (v29 != 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3020);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1CF742850;
    v26 = a3[3];
    v25 = a3[4];
    __swift_project_boxed_opaque_existential_0Tm(v19, v19[3]);
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v26, v25);
    sub_1CF6ABBB4((uint64_t)v19, inited + 48);
    *(_QWORD *)(inited + 88) = v8;
  }
  v27 = OUTLINED_FUNCTION_378_0();
  OUTLINED_FUNCTION_10();
  *v16 = v27;
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)v6 + *(_QWORD *)(*v6 + 176)) = a4;
  OUTLINED_FUNCTION_366_0();
  v6[2] = a1;
  v6[3] = a2;
  __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v19);
  return v6;
}

void sub_1CF6F9464()
{
  uint64_t v0;
  void (*v1)(_QWORD);
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  NSObject *v11;
  uint64_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  os_log_type_t v24;
  NSObject *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  os_log_type_t v37;
  NSObject *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  __int16 v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(_QWORD);
  uint64_t v54;
  unsigned __int16 *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD v59[2];
  unsigned __int16 *v60;
  void (*v61)(_QWORD);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  OUTLINED_FUNCTION_167();
  v61 = v1;
  v62 = v2;
  LODWORD(v63) = v3;
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v6 = type metadata accessor for TunnelEndpoint.Event(0, v4, *(_QWORD *)(*(_QWORD *)v0 + 88), v5);
  v7 = *(_QWORD *)(v6 - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v8);
  v60 = (unsigned __int16 *)((char *)v59 - v9);
  v10 = (void *)sub_1CF73F0E4();
  if (qword_1EFBA0980 != -1)
    swift_once();
  v11 = qword_1EFBA2FB0;
  if (os_log_type_enabled((os_log_t)qword_1EFBA2FB0, (os_log_type_t)v10))
  {
    v12 = OUTLINED_FUNCTION_4_7();
    v59[1] = v6;
    v13 = (uint8_t *)v12;
    v14 = OUTLINED_FUNCTION_4_7();
    *(_DWORD *)v13 = 136446210;
    v65 = v14;
    v59[0] = v4;
    LOWORD(v64) = v63;
    BYTE2(v64) = BYTE2(v63) & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3028);
    v15 = sub_1CF73EF10();
    sub_1CF68F110(v15, v16, &v65);
    OUTLINED_FUNCTION_372_0(v17);
    sub_1CF73F2A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1CF67E000, v11, (os_log_type_t)v10, "TunnelEndpoint: Establishing a client tunnel with MTU = %{public}s", v13, 0xCu);
    swift_arrayDestroy();
    OUTLINED_FUNCTION_0_1();
  }
  v18 = sub_1CF6F99D0(*(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184)));
  if ((v18 & 1) == 0)
  {
    __break(1u);
LABEL_22:
    v56 = v18;
    v57 = v19;
    v58 = OUTLINED_FUNCTION_9();
    *(_QWORD *)(v58 + 16) = v56;
    *(_QWORD *)(v58 + 24) = v57;
    v23 = sub_1CF693EC8((uint64_t)sub_1CF6A3AF8);
    __break(1u);
    goto LABEL_23;
  }
  v20 = v63;
  if ((v63 & 0x10000) != 0)
  {
    v21 = OUTLINED_FUNCTION_52();
    v20 = v22(v21);
  }
  sub_1CF6F8CF0();
  if (v18)
    goto LABEL_22;
  OUTLINED_FUNCTION_269_0(0);
  sub_1CF6F8D1C();
  if (!v23)
  {
    if (v20 >= (unsigned __int16)OUTLINED_FUNCTION_83_2())
    {
      if ((unsigned __int16)OUTLINED_FUNCTION_83_2() >= v20)
      {
        v50 = OUTLINED_FUNCTION_83();
        sub_1CF6F8D70(v50);
        v51 = OUTLINED_FUNCTION_9();
        v53 = v61;
        v52 = v62;
        *(_QWORD *)(v51 + 16) = v61;
        *(_QWORD *)(v51 + 24) = v52;
        OUTLINED_FUNCTION_112_0();
        sub_1CF6F8D10((uint64_t)sub_1CF6F48D0, v51);
        v54 = OUTLINED_FUNCTION_9();
        *(_QWORD *)(v54 + 16) = v53;
        *(_QWORD *)(v54 + 24) = v52;
        OUTLINED_FUNCTION_112_0();
        sub_1CF6F8D3C((uint64_t)sub_1CF6A3AF8, v54);
        v55 = v60;
        *v60 = v20;
        swift_storeEnumTagMultiPayload();
        sub_1CF6FB110();
        (*(void (**)(unsigned __int16 *, uint64_t))(v7 + 8))(v55, v6);
        goto LABEL_20;
      }
      v37 = sub_1CF73F0CC();
      v38 = qword_1EFBA2FB0;
      if (OUTLINED_FUNCTION_265_0(v37))
      {
        OUTLINED_FUNCTION_20();
        v39 = OUTLINED_FUNCTION_4_7();
        v63 = OUTLINED_FUNCTION_4_7();
        v65 = v63;
        OUTLINED_FUNCTION_262_0(4.8754e-34);
        OUTLINED_FUNCTION_17_11(v40, v41);
        OUTLINED_FUNCTION_23_8(v42);
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_11_3();
        OUTLINED_FUNCTION_349_0();
        v43 = OUTLINED_FUNCTION_347_0();
        OUTLINED_FUNCTION_17_11(v43, v44);
        OUTLINED_FUNCTION_23_8(v45);
        OUTLINED_FUNCTION_11_3();
        *(_WORD *)(v39 + 22) = v0;
        v46 = OUTLINED_FUNCTION_83_2();
        OUTLINED_FUNCTION_346_0(v46);
        v47 = sub_1CF73F648();
        OUTLINED_FUNCTION_17_11(v47, v48);
        v64 = v49;
        OUTLINED_FUNCTION_38_4();
        OUTLINED_FUNCTION_11_3();
        OUTLINED_FUNCTION_178_0(&dword_1CF67E000, v38, (os_log_type_t)v7, "%{public}s: the client tunnel MTU = %{public}s is more than the maximum supported MTU = %{public}s", (uint8_t *)v39);
        OUTLINED_FUNCTION_154_0();
        OUTLINED_FUNCTION_0_1();
      }
      sub_1CF6ABB3C();
      OUTLINED_FUNCTION_82_2();
      OUTLINED_FUNCTION_134_0();
      OUTLINED_FUNCTION_361_0();
    }
    else
    {
      v24 = sub_1CF73F0CC();
      v25 = qword_1EFBA2FB0;
      if (OUTLINED_FUNCTION_265_0(v24))
      {
        OUTLINED_FUNCTION_20();
        v26 = OUTLINED_FUNCTION_4_7();
        v63 = OUTLINED_FUNCTION_4_7();
        v65 = v63;
        OUTLINED_FUNCTION_262_0(4.8754e-34);
        OUTLINED_FUNCTION_17_11(v27, v28);
        OUTLINED_FUNCTION_23_8(v29);
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_11_3();
        OUTLINED_FUNCTION_349_0();
        v30 = OUTLINED_FUNCTION_347_0();
        OUTLINED_FUNCTION_17_11(v30, v31);
        OUTLINED_FUNCTION_23_8(v32);
        OUTLINED_FUNCTION_11_3();
        *(_WORD *)(v26 + 22) = v0;
        v33 = OUTLINED_FUNCTION_83_2();
        OUTLINED_FUNCTION_346_0(v33);
        v34 = sub_1CF73F648();
        OUTLINED_FUNCTION_17_11(v34, v35);
        v64 = v36;
        OUTLINED_FUNCTION_38_4();
        OUTLINED_FUNCTION_11_3();
        OUTLINED_FUNCTION_178_0(&dword_1CF67E000, v25, (os_log_type_t)v7, "%{public}s: the client tunnel MTU = %{public}s is less than the minimum supported MTU = %{public}s", (uint8_t *)v26);
        OUTLINED_FUNCTION_154_0();
        OUTLINED_FUNCTION_0_1();
      }
      sub_1CF6ABB3C();
      OUTLINED_FUNCTION_82_2();
      OUTLINED_FUNCTION_134_0();
      OUTLINED_FUNCTION_362_0();
    }
    OUTLINED_FUNCTION_125_1();
    v61(v10);

LABEL_20:
    OUTLINED_FUNCTION_17();
    return;
  }
LABEL_23:
  sub_1CF693EC8(v23);
  __break(1u);
}

uint64_t sub_1CF6F99D0(unsigned __int8 a1)
{
  return ((uint64_t (*)(void))((char *)sub_1CF6F99F4 + 4 * byte_1CF746980[a1 >> 5]))();
}

uint64_t sub_1CF6F99F4@<X0>(unsigned int a1@<W8>)
{
  char v1;
  char v2;

  if (a1 < 0x20)
    v2 = ((v1 & 1) == 0) ^ a1;
  else
    v2 = 0;
  return v2 & 1;
}

void sub_1CF6F9AA8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  void (*v4)(_QWORD);
  void (*v5)(char *, NSObject *, uint64_t);
  void (*v6)(char *, NSObject *, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  _BOOL8 v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  NSObject *v49;
  _BOOL8 v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  void (*v62)(char *);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(_QWORD);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, NSObject *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  void (*v87)(_QWORD);
  NSObject *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  NSObject *v92;

  OUTLINED_FUNCTION_167();
  v2 = v1;
  v87 = v4;
  v88 = v3;
  v6 = v5;
  v7 = *v0;
  v8 = *(_QWORD *)(*v0 + 80);
  v9 = *(_QWORD *)(*v0 + 88);
  v10 = type metadata accessor for TunnelEndpoint.Event(0, v8, v9, v1);
  v83 = *(_QWORD *)(v10 - 8);
  v84 = v10;
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v11);
  v82 = (char *)&v77 - v12;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA2050);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_14();
  v80 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3030);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_14();
  v79 = v16;
  v17 = OUTLINED_FUNCTION_148_0();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_24_0();
  v81 = v22;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_47_6();
  v85 = v24;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v77 - v26;
  v28 = *(_QWORD *)(v7 + 184);
  v89 = v0;
  v29 = v8;
  v30 = v9;
  if ((sub_1CF6F99D0(*((_BYTE *)v0 + v28)) & 1) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  v86 = v2;
  v9 = (uint64_t)v6;
  sub_1CF6DFC54((uint64_t)v6, (uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
  v6 = *(void (**)(char *, NSObject *, uint64_t))(v18 + 16);
  v6(v20, v88, v17);
  sub_1CF6CACA8(&qword_1EFBA3038, (void (*)(uint64_t))MEMORY[0x1E0CCE338]);
  OUTLINED_FUNCTION_28_3();
  v31 = sub_1CF73EEA4();
  OUTLINED_FUNCTION_30_3((uint64_t)v20, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
  sub_1CF6A3724((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
  if ((v31 & 1) != 0)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v78 = (void (*)(uint64_t, NSObject *, uint64_t))v6;
  sub_1CF6F8CF0();
  if (v32)
  {
    v74 = v32;
    v75 = v33;
    v76 = OUTLINED_FUNCTION_9();
    *(_QWORD *)(v76 + 16) = v74;
    *(_QWORD *)(v76 + 24) = v75;
    v34 = sub_1CF693EC8((uint64_t)sub_1CF6CAF4C);
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_269_0(0);
    sub_1CF6F8D1C();
    if (!v34)
    {
      v6 = (void (*)(char *, NSObject *, uint64_t))v30;
      LODWORD(v27) = *(unsigned __int16 *)(v9 + *(int *)(v90 + 24));
      v20 = *(char **)(v30 + 16);
      v30 = v29;
      v35 = OUTLINED_FUNCTION_73();
      if (v27 >= ((unsigned __int16 (*)(uint64_t))v20)(v35))
      {
        if (v27 <= (unsigned __int16)OUTLINED_FUNCTION_211_0())
        {
          v63 = OUTLINED_FUNCTION_2_4();
          sub_1CF6F8D70(v63);
          v64 = OUTLINED_FUNCTION_9();
          v65 = v86;
          v66 = v87;
          *(_QWORD *)(v64 + 16) = v87;
          *(_QWORD *)(v64 + 24) = v65;
          OUTLINED_FUNCTION_112_0();
          sub_1CF6F8D10((uint64_t)sub_1CF707798, v64);
          v67 = OUTLINED_FUNCTION_9();
          *(_QWORD *)(v67 + 16) = v66;
          *(_QWORD *)(v67 + 24) = v65;
          OUTLINED_FUNCTION_112_0();
          sub_1CF6F8D3C((uint64_t)sub_1CF6CAF4C, v67);
          sub_1CF6DFC54(v9, v79, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
          v68 = OUTLINED_FUNCTION_158_0();
          __swift_storeEnumTagSinglePayload(v68, v69, v70, v90);
          sub_1CF6F8CB8();
          v78(v80, v88, v17);
          v71 = OUTLINED_FUNCTION_158_0();
          __swift_storeEnumTagSinglePayload(v71, v72, v73, v17);
          sub_1CF6F8828();
          swift_storeEnumTagMultiPayload();
          OUTLINED_FUNCTION_323_0();
          OUTLINED_FUNCTION_93(*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8));
LABEL_18:
          OUTLINED_FUNCTION_17();
          return;
        }
        v20 = (char *)sub_1CF73F0CC();
        if (qword_1EFBA0980 != -1)
          swift_once();
        v49 = qword_1EFBA2FB0;
        sub_1CF6DFC54(v9, v81, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
        v50 = os_log_type_enabled(v49, (os_log_type_t)v20);
        if (v50)
        {
          OUTLINED_FUNCTION_20();
          v51 = OUTLINED_FUNCTION_4_7();
          v88 = OUTLINED_FUNCTION_4_7();
          v92 = v88;
          *(_DWORD *)v51 = 136446722;
          sub_1CF6F8A04();
          OUTLINED_FUNCTION_17_11(v52, v53);
          OUTLINED_FUNCTION_23_8(v54);
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_11_3();
          *(_WORD *)(v51 + 12) = 2082;
          OUTLINED_FUNCTION_300_0();
          v55 = sub_1CF73F648();
          OUTLINED_FUNCTION_17_11(v55, v56);
          v91 = v57;
          OUTLINED_FUNCTION_38_4();
          v58 = OUTLINED_FUNCTION_11_3();
          OUTLINED_FUNCTION_209_0(v58, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
          *(_WORD *)(v51 + 22) = 2082;
          LOWORD(v91) = OUTLINED_FUNCTION_211_0();
          v59 = sub_1CF73F648();
          OUTLINED_FUNCTION_17_11(v59, v60);
          v91 = v61;
          OUTLINED_FUNCTION_38_4();
          OUTLINED_FUNCTION_11_3();
          OUTLINED_FUNCTION_178_0(&dword_1CF67E000, v49, (os_log_type_t)v20, "%{public}s: the server tunnel MTU = %{public}s is more than the maximum supported MTU = %{public}s", (uint8_t *)v51);
          OUTLINED_FUNCTION_154_0();
          OUTLINED_FUNCTION_0_1();
        }
        OUTLINED_FUNCTION_209_0(v50, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
        sub_1CF6ABB3C();
        OUTLINED_FUNCTION_82_2();
        OUTLINED_FUNCTION_134_0();
        OUTLINED_FUNCTION_361_0();
        OUTLINED_FUNCTION_125_1();
        v87(v20);
LABEL_17:

        goto LABEL_18;
      }
      sub_1CF73F0CC();
      if (qword_1EFBA0980 == -1)
      {
LABEL_7:
        v36 = qword_1EFBA2FB0;
        sub_1CF6DFC54(v9, v85, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
        v37 = OUTLINED_FUNCTION_216();
        if (v37)
        {
          OUTLINED_FUNCTION_20();
          v38 = OUTLINED_FUNCTION_4_7();
          v92 = OUTLINED_FUNCTION_4_7();
          *(_DWORD *)v38 = 136446722;
          v88 = v36;
          sub_1CF6F8A04();
          OUTLINED_FUNCTION_17_11(v39, v40);
          OUTLINED_FUNCTION_372_0(v41);
          OUTLINED_FUNCTION_280_0();
          OUTLINED_FUNCTION_13_0();
          OUTLINED_FUNCTION_11_3();
          *(_WORD *)(v38 + 12) = 2082;
          OUTLINED_FUNCTION_300_0();
          v42 = sub_1CF73F648();
          OUTLINED_FUNCTION_17_11(v42, v43);
          v91 = v44;
          OUTLINED_FUNCTION_374_0();
          v45 = OUTLINED_FUNCTION_11_3();
          OUTLINED_FUNCTION_209_0(v45, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
          *(_WORD *)(v38 + 22) = 2082;
          LOWORD(v91) = ((uint64_t (*)(uint64_t, void (*)(char *, NSObject *, uint64_t)))v20)(v30, v6);
          v46 = sub_1CF73F648();
          OUTLINED_FUNCTION_17_11(v46, v47);
          v91 = v48;
          OUTLINED_FUNCTION_374_0();
          OUTLINED_FUNCTION_11_3();
          OUTLINED_FUNCTION_178_0(&dword_1CF67E000, v88, (os_log_type_t)v27, "%{public}s: the server tunnel MTU = %{public}s is less than the minimum supported MTU = %{public}s", (uint8_t *)v38);
          OUTLINED_FUNCTION_154_0();
          OUTLINED_FUNCTION_0_1();
        }
        OUTLINED_FUNCTION_209_0(v37, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
        v62 = (void (*)(char *))v87;
        sub_1CF6ABB3C();
        OUTLINED_FUNCTION_82_2();
        OUTLINED_FUNCTION_134_0();
        OUTLINED_FUNCTION_362_0();
        OUTLINED_FUNCTION_125_1();
        v62(v20);
        goto LABEL_17;
      }
LABEL_21:
      swift_once();
      goto LABEL_7;
    }
  }
  sub_1CF693EC8(v34);
  __break(1u);
}

void sub_1CF6FA204()
{
  uint64_t *v0;
  _WORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_167();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = *v0;
  v10 = *(_QWORD *)(type metadata accessor for TunnelEndpoint.Event(0, *(_QWORD *)(*v0 + 80), *(_QWORD *)(*v0 + 88), v9)- 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_107_1();
  v12 = sub_1CF6F99D0(*((_BYTE *)v0 + *(_QWORD *)(v8 + 184)));
  if ((v12 & 1) == 0)
    goto LABEL_6;
  if (!v7)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1CF6F8CF0();
  if (v12)
  {
LABEL_8:
    v17 = v12;
    v18 = v13;
    v19 = OUTLINED_FUNCTION_9();
    *(_QWORD *)(v19 + 16) = v17;
    *(_QWORD *)(v19 + 24) = v18;
    v14 = sub_1CF693EC8((uint64_t)sub_1CF6CAF4C);
    __break(1u);
    goto LABEL_9;
  }
  OUTLINED_FUNCTION_269_0(0);
  sub_1CF6F8D1C();
  if (!v14)
  {
    v15 = OUTLINED_FUNCTION_9();
    *(_QWORD *)(v15 + 16) = v5;
    *(_QWORD *)(v15 + 24) = v3;
    OUTLINED_FUNCTION_350();
    sub_1CF6F8D10((uint64_t)sub_1CF707798, v15);
    v16 = OUTLINED_FUNCTION_9();
    *(_QWORD *)(v16 + 16) = v5;
    *(_QWORD *)(v16 + 24) = v3;
    OUTLINED_FUNCTION_350();
    sub_1CF6F8D3C((uint64_t)sub_1CF6CAF4C, v16);
    *v1 = v7;
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_368_0();
    OUTLINED_FUNCTION_3_5(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
LABEL_6:
    OUTLINED_FUNCTION_17();
    return;
  }
LABEL_9:
  sub_1CF693EC8(v14);
  __break(1u);
}

void sub_1CF6FA34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, _QWORD, uint64_t);
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  void (*v63)(uint64_t, _QWORD, uint64_t);
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(uint64_t, _QWORD, uint64_t);
  _QWORD v99[10];

  OUTLINED_FUNCTION_167();
  a19 = v22;
  a20 = v23;
  v24 = v20;
  v26 = v25;
  v98 = v27;
  v28 = (_QWORD *)*v20;
  v29 = OUTLINED_FUNCTION_70_2();
  v93 = *(_QWORD *)(v29 - 8);
  v94 = v29;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v30);
  OUTLINED_FUNCTION_14();
  v92 = v31;
  v32 = OUTLINED_FUNCTION_291_0();
  v90 = *(_QWORD *)(v32 - 8);
  v91 = v32;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_14();
  v89 = v34;
  OUTLINED_FUNCTION_29_6();
  v35 = sub_1CF73EDC0();
  OUTLINED_FUNCTION_375_0(v35, (uint64_t)&a18);
  v85 = v36;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_14();
  v84 = v38;
  OUTLINED_FUNCTION_29_6();
  v39 = sub_1CF73F1A4();
  v95 = *(_QWORD *)(v39 - 8);
  v96 = v39;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v40);
  OUTLINED_FUNCTION_12();
  v97 = sub_1CF73ED48();
  v41 = *(_QWORD *)(v97 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v42);
  OUTLINED_FUNCTION_24_0();
  v83 = v43;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v44);
  v46 = (uint64_t *)((char *)&v83 - v45);
  v47 = v28[10];
  v87 = v28[11];
  v88 = v47;
  type metadata accessor for TunnelEndpoint.Event(0, v47, v87, v48);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_227_0();
  if (*((unsigned __int8 *)v24 + v28[23]) > 0x1Fu)
    goto LABEL_17;
  sub_1CF6F8CF0();
  if (v50)
  {
    v80 = v50;
    v81 = v51;
    v82 = OUTLINED_FUNCTION_9();
    *(_QWORD *)(v82 + 16) = v80;
    *(_QWORD *)(v82 + 24) = v81;
    v52 = sub_1CF693EC8((uint64_t)sub_1CF6CAF4C);
    __break(1u);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_269_0(0);
  sub_1CF6F8D1C();
  if (v52)
  {
LABEL_16:
    sub_1CF693EC8(v52);
    __break(1u);
LABEL_17:
    OUTLINED_FUNCTION_249_0();
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_83();
  sub_1CF6F8D3C((uint64_t)v98, v26);
  OUTLINED_FUNCTION_259();
  swift_storeEnumTagMultiPayload();
  sub_1CF6FB110();
  v53 = OUTLINED_FUNCTION_259();
  v54(v53);
  if (qword_1EFBA08A0 != -1)
    swift_once();
  OUTLINED_FUNCTION_10();
  v55 = qword_1EFBA1258;
  v56 = unk_1EFBA1260;
  v57 = byte_1EFBA1268;
  OUTLINED_FUNCTION_54_0();
  sub_1CF695C88(v55, v56, v57);
  v59 = v58;
  swift_bridgeObjectRelease();
  if (v59 >= 1)
  {
    *v46 = v59;
    v60 = *MEMORY[0x1E0DEF4A0];
    v61 = v46;
    v62 = v41;
    v63 = *(void (**)(uint64_t, _QWORD, uint64_t))(v41 + 104);
    v64 = v97;
    v98 = v63;
    v63((uint64_t)v61, v60, v97);
    sub_1CF6B3208(0, &qword_1EFBA3040);
    v65 = sub_1CF6F8C54();
    v99[0] = MEMORY[0x1E0DEE9D8];
    sub_1CF6CACA8(&qword_1EFBA3048, (void (*)(uint64_t))MEMORY[0x1E0DEF938]);
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_311_0(&qword_1EFBA3058);
    v66 = v96;
    sub_1CF73F2F4();
    v67 = sub_1CF73F1BC();

    v68 = v66;
    v69 = v64;
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v21, v68);
    sub_1CF6F8D58(v67);
    if (sub_1CF6F8D48())
    {
      v70 = OUTLINED_FUNCTION_247_0();
      v71 = v84;
      sub_1CF73EDB4();
      v72 = (uint64_t)v83;
      *v83 = 500;
      v98(v72, *MEMORY[0x1E0DEF490], v69);
      MEMORY[0x1D17D2E38](v71, v61, v72, v70);
      OUTLINED_FUNCTION_66();
      OUTLINED_FUNCTION_30_3(v72, *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8));
      (*(void (**)(uint64_t, uint64_t))(v85 + 8))(v71, v86);
    }
    v73 = (uint64_t)v61;
    if (sub_1CF6F8D48())
    {
      OUTLINED_FUNCTION_247_0();
      v74 = OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_345_0();
      v75 = (_QWORD *)OUTLINED_FUNCTION_16();
      v76 = v87;
      v75[2] = v88;
      v75[3] = v76;
      v75[4] = v74;
      v99[4] = sub_1CF704C3C;
      v99[5] = v75;
      v99[0] = MEMORY[0x1E0C809B0];
      v99[1] = 1107296256;
      v99[2] = sub_1CF6F79AC;
      v99[3] = &block_descriptor_9;
      v77 = _Block_copy(v99);
      OUTLINED_FUNCTION_112_0();
      v78 = v89;
      sub_1CF73ED6C();
      v79 = v92;
      sub_1CF6F79D8();
      sub_1CF73F1D4();
      _Block_release(v77);
      OUTLINED_FUNCTION_66();
      (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v79, v94);
      (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v78, v91);
      swift_release();
      OUTLINED_FUNCTION_16_0();
    }
    if (sub_1CF6F8D48())
    {
      OUTLINED_FUNCTION_247_0();
      sub_1CF73F204();
      OUTLINED_FUNCTION_66();
    }
    OUTLINED_FUNCTION_30_3(v73, *(uint64_t (**)(uint64_t, uint64_t))(v62 + 8));
  }
  OUTLINED_FUNCTION_17();
}

uint64_t sub_1CF6FA8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t result;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  int v23;
  os_log_type_t v24;
  NSObject *v25;
  void (*v26)(_BYTE *, _BYTE *, uint64_t);
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_BYTE *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(_BYTE *, uint64_t);
  _BYTE v49[12];
  int v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  os_log_t v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  uint64_t v68[2];
  uint64_t v69;
  unsigned __int8 v70;
  uint64_t v71;
  unsigned __int8 v72;
  uint64_t v73;
  unsigned __int8 v74;
  uint64_t v75;
  unsigned __int8 v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  unsigned __int8 v80;

  v5 = sub_1CF73F288();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = &v49[-v8];
  v10 = *(_QWORD *)(a2 - 8);
  v11 = MEMORY[0x1E0C80A78](v7);
  v13 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = &v49[-v15];
  MEMORY[0x1E0C80A78](v14);
  v18 = &v49[-v17];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v67 = v13;
    v20 = result;
    sub_1CF6F86B4();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, a2) == 1)
    {
      swift_release();
      return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v9, v5);
    }
    else
    {
      v66 = v20;
      v21 = v18;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v18, v9, a2);
      v22 = a3;
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a3 + 80))(&v69, a2, a3);
      v58 = v69;
      v57 = v70;
      v60 = v71;
      v59 = v72;
      v54 = v73;
      v53 = v74;
      v56 = v75;
      v55 = v76;
      v62 = v77;
      v61 = v78;
      v63 = v79;
      v23 = v80;
      v24 = sub_1CF73F0E4();
      if (qword_1EFBA0980 != -1)
        swift_once();
      v25 = qword_1EFBA2FB0;
      v26 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16);
      v26(v16, v21, a2);
      v27 = v67;
      v26(v67, v21, a2);
      v64 = v25;
      if (os_log_type_enabled(v25, v24))
      {
        v52 = v24;
        swift_retain_n();
        v28 = swift_slowAlloc();
        v65 = v21;
        v29 = v28;
        v51 = swift_slowAlloc();
        v68[0] = v51;
        *(_DWORD *)v29 = 136448258;
        sub_1CF6F8A04();
        sub_1CF68F110(v30, v31, v68);
        v69 = v32;
        v50 = v23;
        sub_1CF73F2A0();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v29 + 12) = 2080;
        v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 40))(a2, v22);
        sub_1CF68F110(v33, v34, v68);
        v69 = v35;
        sub_1CF73F2A0();
        swift_bridgeObjectRelease();
        v36 = v22;
        v37 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
        v37(v16, a2);
        *(_WORD *)(v29 + 22) = 2080;
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v36 + 48))(&v69, a2, v36);
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1F38);
        v38 = sub_1CF73EF10();
        sub_1CF68F110(v38, v39, v68);
        v69 = v40;
        sub_1CF73F2A0();
        swift_bridgeObjectRelease();
        v37(v27, a2);
        *(_WORD *)(v29 + 32) = 2048;
        v41 = v54;
        if (v53)
          v41 = -1;
        v69 = v41;
        sub_1CF73F2A0();
        *(_WORD *)(v29 + 42) = 2048;
        v42 = v56;
        if (v55)
          v42 = -1;
        v69 = v42;
        sub_1CF73F2A0();
        *(_WORD *)(v29 + 52) = 2048;
        v43 = v58;
        if (v57)
          v43 = -1;
        v69 = v43;
        sub_1CF73F2A0();
        *(_WORD *)(v29 + 62) = 2048;
        v44 = v60;
        if (v59)
          v44 = -1;
        v69 = v44;
        sub_1CF73F2A0();
        *(_WORD *)(v29 + 72) = 2048;
        v45 = v62;
        if (v61)
          v45 = -1;
        v69 = v45;
        sub_1CF73F2A0();
        *(_WORD *)(v29 + 82) = 2048;
        v46 = v63;
        if (v50)
          v46 = -1;
        v69 = v46;
        sub_1CF73F2A0();
        _os_log_impl(&dword_1CF67E000, v64, (os_log_type_t)v52, "%{public}s: Stats for %s/%s: packets in/out=%lld/%lld, bytes in/out=%lld/%lld, errors in/out=%lld/%lld, ", (uint8_t *)v29, 0x5Cu);
        v47 = v51;
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v47, -1, -1);
        MEMORY[0x1D17D3ED0](v29, -1, -1);
        swift_release();
        return ((uint64_t (*)(_BYTE *, uint64_t))v37)(v65, a2);
      }
      else
      {
        swift_release();
        v48 = *(void (**)(_BYTE *, uint64_t))(v10 + 8);
        v48(v16, a2);
        v48(v27, a2);
        return ((uint64_t (*)(_BYTE *, uint64_t))v48)(v21, a2);
      }
    }
  }
  return result;
}

void sub_1CF6FB0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(OUTLINED_FUNCTION_220_0(a1, a2, a3, a4) - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_232_0();
  OUTLINED_FUNCTION_28_3();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_323_0();
  OUTLINED_FUNCTION_93(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_40();
}

uint64_t sub_1CF6FB0FC(unsigned __int8 *a1)
{
  return sub_1CF6F99D0(*a1);
}

void sub_1CF6FB110()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  char *v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void (*v23)(uint64_t);
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[6];

  OUTLINED_FUNCTION_167();
  v3 = v2;
  v4 = *v0;
  v27 = OUTLINED_FUNCTION_70_2();
  v30 = *(_QWORD *)(v27 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v5);
  OUTLINED_FUNCTION_14();
  v26 = v6;
  v7 = OUTLINED_FUNCTION_291_0();
  v28 = *(_QWORD *)(v7 - 8);
  v29 = v7;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_13();
  v10 = *(_QWORD *)(v4 + 80);
  v9 = *(_QWORD *)(v4 + 88);
  v12 = type metadata accessor for TunnelEndpoint.Event(0, v10, v9, v11);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v24 - v14;
  v25 = sub_1CF6F8C54();
  v16 = OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_346();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v3, v12);
  v17 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = v10;
  *((_QWORD *)v18 + 3) = v9;
  *((_QWORD *)v18 + 4) = v16;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v17], v15, v12);
  v32[4] = sub_1CF707604;
  v32[5] = v18;
  v32[0] = MEMORY[0x1E0C809B0];
  v32[1] = 1107296256;
  v32[2] = sub_1CF6CC068;
  v32[3] = &block_descriptor_583;
  v19 = _Block_copy(v32);
  OUTLINED_FUNCTION_83();
  sub_1CF73ED6C();
  v31 = MEMORY[0x1E0DEE9D8];
  sub_1CF6CACA8(&qword_1ED8F79B0, (void (*)(uint64_t))MEMORY[0x1E0DEF4F8]);
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_311_0(&qword_1ED8F7A10);
  v20 = v26;
  sub_1CF73F2F4();
  v21 = v25;
  MEMORY[0x1D17D2D90](0, v1, v20, v19);
  _Block_release(v19);

  OUTLINED_FUNCTION_93(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  v22 = OUTLINED_FUNCTION_210_0();
  v23(v22);
  swift_release();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_17();
}

uint64_t sub_1CF6FB34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v5 = type metadata accessor for TunnelEndpoint.Event(0, a3, a4, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - v7;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1CF6FB490();
    return swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      (*((void (**)(void))v8 + 1))();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

void sub_1CF6FB490()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  _BYTE *v93;
  _QWORD v94[42];
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  _BYTE *v102;
  void (*v103)(_BYTE *, uint64_t, uint64_t);
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;

  OUTLINED_FUNCTION_2();
  v1 = v0;
  v106 = v2;
  v3 = *v0;
  v4 = *(_QWORD *)(*v0 + 80);
  v5 = *(_BYTE **)(v3 + 88);
  v7 = type metadata accessor for TunnelEndpoint.Event(0, v4, (uint64_t)v5, v6);
  v108 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v108 + 64);
  MEMORY[0x1E0C80A78](v7);
  v100 = (char *)v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v9);
  OUTLINED_FUNCTION_106_1();
  v97 = v10;
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_106_1();
  v99 = v12;
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v13);
  OUTLINED_FUNCTION_106_1();
  v94[34] = v14;
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v15);
  OUTLINED_FUNCTION_106_1();
  v94[10] = v16;
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v17);
  OUTLINED_FUNCTION_106_1();
  v94[11] = v18;
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v19);
  OUTLINED_FUNCTION_106_1();
  v94[8] = v20;
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v21);
  OUTLINED_FUNCTION_106_1();
  v94[7] = v22;
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v23);
  OUTLINED_FUNCTION_106_1();
  v101 = v24;
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v25);
  OUTLINED_FUNCTION_106_1();
  v94[33] = v26;
  OUTLINED_FUNCTION_89_1();
  MEMORY[0x1E0C80A78](v27);
  v94[32] = (char *)v94 - v28;
  OUTLINED_FUNCTION_29_6();
  sub_1CF73F288();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_24_0();
  v94[9] = v30;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v31);
  OUTLINED_FUNCTION_47_6();
  v94[26] = v32;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v33);
  OUTLINED_FUNCTION_110_1();
  v94[6] = v34;
  v94[28] = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_14();
  v94[15] = v36;
  v95 = OUTLINED_FUNCTION_292_0();
  v94[38] = *(_QWORD *)(v95 - 8);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_24_0();
  v94[5] = v38;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_47_6();
  v94[29] = v40;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_110_1();
  v94[22] = v42;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3030);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_24_0();
  v94[27] = v44;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v45);
  OUTLINED_FUNCTION_47_6();
  v94[4] = v46;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_47_6();
  v94[25] = v48;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v49);
  OUTLINED_FUNCTION_47_6();
  v94[24] = v50;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_47_6();
  v94[19] = v52;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v53);
  OUTLINED_FUNCTION_47_6();
  v94[20] = v54;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v55);
  OUTLINED_FUNCTION_110_1();
  v94[31] = v56;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA2050);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v57);
  OUTLINED_FUNCTION_24_0();
  v94[16] = v58;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v59);
  OUTLINED_FUNCTION_110_1();
  v94[30] = v60;
  v96 = OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v61);
  OUTLINED_FUNCTION_14();
  v94[41] = v62;
  v94[37] = __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v63);
  OUTLINED_FUNCTION_24_0();
  v94[2] = v64;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v65);
  OUTLINED_FUNCTION_47_6();
  v94[3] = v66;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v67);
  OUTLINED_FUNCTION_47_6();
  v94[1] = v68;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v69);
  OUTLINED_FUNCTION_47_6();
  v94[12] = v70;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v71);
  OUTLINED_FUNCTION_47_6();
  v94[18] = v72;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v73);
  OUTLINED_FUNCTION_47_6();
  v94[23] = v74;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v75);
  OUTLINED_FUNCTION_47_6();
  v94[17] = v76;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v77);
  OUTLINED_FUNCTION_110_1();
  v94[21] = v78;
  OUTLINED_FUNCTION_29_6();
  v94[35] = type metadata accessor for TunnelMessage();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v79);
  OUTLINED_FUNCTION_24_0();
  v94[0] = v80;
  OUTLINED_FUNCTION_62();
  v82 = MEMORY[0x1E0C80A78](v81);
  MEMORY[0x1E0C80A78](v82);
  OUTLINED_FUNCTION_47_6();
  v94[14] = v83;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v84);
  OUTLINED_FUNCTION_47_6();
  v94[13] = v85;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v86);
  OUTLINED_FUNCTION_110_1();
  v94[36] = v87;
  v104 = v4;
  v102 = v5;
  v98 = type metadata accessor for TunnelEndpoint.State(255, v4, (uint64_t)v5, v88);
  v89 = OUTLINED_FUNCTION_237_0();
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v90);
  OUTLINED_FUNCTION_107_1();
  v91 = sub_1CF6F8C54();
  OS_dispatch_queue.assertOnQueueHierarchy()();

  v92 = *(_QWORD *)(*v1 + 184);
  v107 = v1;
  LODWORD(v1) = *((unsigned __int8 *)v1 + v92);
  v93 = &v5[*(int *)(v89 + 48)];
  *v5 = (_BYTE)v1;
  v103 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v108 + 16);
  v103(v93, v106, v7);
  v105 = (int)v1;
  __asm { BR              X10 }
}

void sub_1CF7006F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v5 = *(_QWORD *)(type metadata accessor for TunnelEndpoint.Event(0, a3, a4, a4) - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v6);
  OUTLINED_FUNCTION_232_0();
  OUTLINED_FUNCTION_10();
  if (swift_weakLoadStrong())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178);
    sub_1CF6F8AF8(v4);
    v7 = OUTLINED_FUNCTION_73();
    sub_1CF707470(v7, v8, v9);
    OUTLINED_FUNCTION_244_0();
    OUTLINED_FUNCTION_323_0();
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_93(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  }
  OUTLINED_FUNCTION_34_0();
}

void sub_1CF7007B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(type metadata accessor for TunnelEndpoint.Event(0, a3, a4, a4) - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v7);
  OUTLINED_FUNCTION_107_1();
  OUTLINED_FUNCTION_10();
  if (swift_weakLoadStrong())
  {
    sub_1CF6F8AF8(v4);
    *(_QWORD *)(v4 + 40) = a1;
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_41();
    OUTLINED_FUNCTION_368_0();
    OUTLINED_FUNCTION_16_0();
    OUTLINED_FUNCTION_3_5(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  }
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_1CF700860(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v1 = *a1;
  v2 = *(_QWORD *)(*a1 + 80);
  v3 = sub_1CF73F288();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - v4;
  sub_1CF6F86B4();
  result = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v2);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v7 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v1 + 88) + 40))(v2);
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v5, v2);
    return v7;
  }
  return result;
}

uint64_t sub_1CF700920()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3030);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1CF6F8C84();
  v3 = type metadata accessor for TunnelInterfaceParameters();
  result = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v3);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    v5 = *(unsigned __int16 *)&v2[*(int *)(v3 + 24)];
    sub_1CF6A3724((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
    return v5;
  }
  return result;
}

uint64_t sub_1CF7009C4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v13;

  v5 = type metadata accessor for TunnelEndpoint.Event(0, a3, a4, a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (uint64_t *)((char *)&v13 - v7);
  v9 = *a1;
  v10 = (uint64_t (*)(void))a1[1];
  v11 = a1[2];
  swift_beginAccess();
  if (!swift_weakLoadStrong())
    return v10();
  *v8 = v9;
  v8[1] = v10;
  v8[2] = v11;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1CF6FB110();
  swift_release();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_1CF700AC4(void *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  id v17;
  _QWORD v18[3];

  v9 = type metadata accessor for TunnelEndpoint.Event(0, a5, a6, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v18 - v14;
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_1CF6ABBB4(a4, (uint64_t)v15);
    if ((a2 & 1) != 0)
    {
      v18[0] = a1;
      v16 = a1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
      swift_willThrowTypedImpl();
      swift_release();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v15);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        sub_1CF6ABBB4(a4, (uint64_t)v13);
        *((_QWORD *)v13 + 5) = a1;
        swift_storeEnumTagMultiPayload();
        v17 = a1;
        sub_1CF6FB110();
        swift_release();
        sub_1CF6A736C(a1, 1);
        (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
      }
      else
      {
        sub_1CF6A736C(a1, 1);
      }
    }
    else
    {
      *((_QWORD *)v15 + 5) = a1;
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRetain();
      sub_1CF6FB110();
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
  }
}

uint64_t sub_1CF700CAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  id v12;
  uint64_t v13;

  v7 = type metadata accessor for TunnelEndpoint.Event(0, a4, a5, a4);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - v9;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1CF6ABBB4(a3, (uint64_t)v10);
    *((_QWORD *)v10 + 5) = a1;
    swift_storeEnumTagMultiPayload();
    v12 = a1;
    sub_1CF6FB110();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

void sub_1CF700D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;

  v7 = *(_QWORD *)(type metadata accessor for TunnelEndpoint.Event(0, a4, a5, a4) - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_232_0();
  OUTLINED_FUNCTION_10();
  if (swift_weakLoadStrong())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178);
    sub_1CF6ABBB4(a3, v5);
    v9 = OUTLINED_FUNCTION_353_0();
    sub_1CF707470(v9, v10, v11);
    OUTLINED_FUNCTION_244_0();
    sub_1CF6FB110();
    swift_release();
    OUTLINED_FUNCTION_93(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  }
  OUTLINED_FUNCTION_42();
}

uint64_t sub_1CF700E70(void *a1)
{
  id v1;

  v1 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
  return sub_1CF73EF10();
}

void sub_1CF700EA8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_0Tm(a1, v1);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  OUTLINED_FUNCTION_40();
}

uint64_t sub_1CF700EE8()
{
  uint64_t v0;
  uint64_t v1;

  sub_1CF6F8BAC();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1CF700F14(uint64_t a1)
{
  _BYTE v2[40];

  sub_1CF6ABBB4(a1, (uint64_t)v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
  return sub_1CF73EF10();
}

void sub_1CF700F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);

  v4 = type metadata accessor for TunnelEndpoint.Event(0, a2, a3, a4);
  MEMORY[0x1E0C80A78](v4);
  v5 = OUTLINED_FUNCTION_28_3();
  v6(v5);
  sub_1CF73EF10();
  OUTLINED_FUNCTION_40();
}

uint64_t sub_1CF700FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for TunnelEndpoint.State(0, *(_QWORD *)(*(_QWORD *)a1 + 80), *(_QWORD *)(*(_QWORD *)a1 + 88), a4);
  return sub_1CF73EF10();
}

uint64_t sub_1CF700FFC@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  sub_1CF6F8BAC();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1CF703F4C(v2);
  OUTLINED_FUNCTION_11_3();
  v5 = v3;
  sub_1CF703EE4(&v5);
  OUTLINED_FUNCTION_11_3();
  sub_1CF6E0B8C(v5, a1);
  return swift_release();
}

void sub_1CF701078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  uint64_t v62;
  unsigned int v63;
  uint64_t *v64;
  unsigned int v65;
  uint64_t v66;
  os_log_type_t v67;
  NSObject *v68;
  uint8_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unsigned __int16 v73;
  _QWORD *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  os_log_type_t v98;
  NSObject *v99;
  uint8_t *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  uint64_t v107;
  unsigned __int16 v108;
  uint64_t v109;
  unsigned int v110;
  uint64_t v111;
  unsigned __int16 v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  unsigned int v117;
  uint64_t v118;
  _QWORD *v119;
  __int16 v120;
  uint64_t v121;
  uint64_t v122;
  _BYTE *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  _BYTE *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  uint64_t v165;

  OUTLINED_FUNCTION_2();
  a19 = v23;
  a20 = v24;
  v155 = v21;
  v26 = v25;
  v154 = v27;
  v28 = (_QWORD *)*v20;
  type metadata accessor for TunnelMessage();
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v29);
  OUTLINED_FUNCTION_13();
  v31 = v28[10];
  v30 = v28[11];
  v33 = type metadata accessor for TunnelEndpoint.Event(0, v31, v30, v32);
  OUTLINED_FUNCTION_375_0(v33, (uint64_t)&v165);
  v146 = v34;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v35);
  OUTLINED_FUNCTION_24_0();
  v144 = v36;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v37);
  OUTLINED_FUNCTION_110_1();
  v143 = v38;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA2050);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v39);
  OUTLINED_FUNCTION_14();
  v142 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3030);
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v41);
  OUTLINED_FUNCTION_24_0();
  v145 = v42;
  OUTLINED_FUNCTION_62();
  MEMORY[0x1E0C80A78](v43);
  OUTLINED_FUNCTION_110_1();
  v141 = v44;
  v45 = OUTLINED_FUNCTION_292_0();
  OUTLINED_FUNCTION_375_0(v45, (uint64_t)&a11);
  v151 = v46;
  OUTLINED_FUNCTION_3();
  MEMORY[0x1E0C80A78](v47);
  OUTLINED_FUNCTION_14();
  v150 = v48;
  v49 = OUTLINED_FUNCTION_15_8();
  OUTLINED_FUNCTION_375_0(v49, (uint64_t)&a9);
  OUTLINED_FUNCTION_3();
  v51 = MEMORY[0x1E0C80A78](v50);
  v53 = (char *)&v140 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v51);
  OUTLINED_FUNCTION_110_1();
  v148 = v54;
  v152 = v31;
  v153 = v30;
  type metadata accessor for TunnelEndpoint.State(255, v31, v30, v55);
  v56 = OUTLINED_FUNCTION_237_0();
  v57 = *(_QWORD *)(v56 - 8);
  OUTLINED_FUNCTION_68();
  v59 = MEMORY[0x1E0C80A78](v58);
  v61 = (char *)&v140 - v60;
  v62 = v28[23];
  a10 = v20;
  v63 = *((unsigned __int8 *)v20 + v62);
  v64 = (uint64_t *)&v61[*(int *)(v59 + 48)];
  *v61 = v63;
  sub_1CF6DFC54(v26, (uint64_t)v64, (uint64_t (*)(_QWORD))type metadata accessor for TunnelMessage);
  if (v63 >> 5 == 1)
  {
    v75 = OUTLINED_FUNCTION_96_1();
    if ((v63 & 1) != 0)
    {
      if (v75 == 2)
      {
        v78 = *v64;
        v79 = v154;
        __swift_project_boxed_opaque_existential_0Tm(v154, v154[3]);
        OUTLINED_FUNCTION_20_9();
        v80 = v157;
        v81 = v158;
        OUTLINED_FUNCTION_2_3();
        sub_1CF703E04(v80, v81, v82, v83, v84, v85, v86, v87, v140, v141);
        swift_endAccess();
        OUTLINED_FUNCTION_19();
        v88 = *((_QWORD *)&v163 + 1);
        sub_1CF6A4E24((uint64_t)&v162, (uint64_t *)&unk_1EFBA3260);
        if (v88)
        {
          __swift_project_boxed_opaque_existential_0Tm(v79, v79[3]);
          v89 = OUTLINED_FUNCTION_20_9();
          OUTLINED_FUNCTION_315_0(v89, (uint64_t)&v162);
          *((_QWORD *)&v164 + 1) = v78;
          OUTLINED_FUNCTION_2_3();
          OUTLINED_FUNCTION_223_0();
          swift_endAccess();
          swift_storeEnumTagMultiPayload();
          OUTLINED_FUNCTION_74_2(v79);
          OUTLINED_FUNCTION_16();
          v90 = OUTLINED_FUNCTION_61_5();
          OUTLINED_FUNCTION_315_0(v90, (uint64_t)&v162);
          v91 = (_QWORD *)OUTLINED_FUNCTION_16();
          v92 = v153;
          v91[2] = v152;
          v91[3] = v92;
          v91[4] = &v162;
          sub_1CF68C850(&v162, (uint64_t)(v91 + 5));
          OUTLINED_FUNCTION_190();
          OUTLINED_FUNCTION_126_1(v22, (uint64_t)sub_1CF706F98, (uint64_t)v91);
          v93 = OUTLINED_FUNCTION_357();
          OUTLINED_FUNCTION_284_0(v93, (uint64_t (*)(_QWORD))type metadata accessor for TunnelMessage);
          OUTLINED_FUNCTION_298();
        }
        goto LABEL_27;
      }
    }
    else if (v75 == 3)
    {
      __swift_project_boxed_opaque_existential_0Tm(v154, v154[3]);
      OUTLINED_FUNCTION_248_0();
      sub_1CF6F8BE4();
      sub_1CF6AF790(v76, &v159);
      OUTLINED_FUNCTION_19();
      v77 = OUTLINED_FUNCTION_40_0();
      if (*((_QWORD *)&v160 + 1))
      {
        v162 = v159;
        v163 = v160;
        v164 = v161;
        sub_1CF7022A4();
        sub_1CF6B2D4C((uint64_t)&v162);
      }
      else
      {
        OUTLINED_FUNCTION_278_0(v77, (uint64_t *)&unk_1EFBA1D00);
      }
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  if (v63 >> 5 != 3)
    goto LABEL_26;
  if (v63 == 96)
  {
    if (OUTLINED_FUNCTION_96_1() == 1)
    {
      v94 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
      v95 = (uint64_t)v64 + *(int *)(v94 + 48);
      LODWORD(v154) = *(unsigned __int16 *)((char *)v64 + *(int *)(v94 + 64));
      v96 = v148;
      sub_1CF6A348C((uint64_t)v64, v148, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
      v97 = v149;
      OUTLINED_FUNCTION_314(v150, v95, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v151 + 32));
      v98 = sub_1CF73F0E4();
      if (qword_1EFBA0980 != -1)
        swift_once();
      v99 = qword_1EFBA2FB0;
      if (os_log_type_enabled((os_log_t)qword_1EFBA2FB0, v98))
      {
        OUTLINED_FUNCTION_20();
        v100 = (uint8_t *)OUTLINED_FUNCTION_4_7();
        *(_QWORD *)&v162 = OUTLINED_FUNCTION_4_7();
        *(_DWORD *)v100 = 136446210;
        OUTLINED_FUNCTION_142();
        OUTLINED_FUNCTION_339_0(v101, v102);
        OUTLINED_FUNCTION_271_0(v103);
        sub_1CF73F2A0();
        OUTLINED_FUNCTION_13_0();
        OUTLINED_FUNCTION_11_3();
        OUTLINED_FUNCTION_33(&dword_1CF67E000, v99, v98, "%{public}s: Client received handshake response", v100);
        OUTLINED_FUNCTION_41_4();
        OUTLINED_FUNCTION_0_1();
      }
      v104 = v147;
      v105 = *(int *)(v147 + 24);
      v106 = *(unsigned __int16 *)(v96 + v105);
      v107 = v153;
      v108 = OUTLINED_FUNCTION_288_0(*(uint64_t (**)(uint64_t, uint64_t))(v153 + 16));
      sub_1CF6DFC54(v96, (uint64_t)v53, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
      if (v106 >= v108)
      {
        v110 = *(unsigned __int16 *)&v53[*(int *)(v104 + 24)];
        v111 = OUTLINED_FUNCTION_288_0(*(uint64_t (**)(uint64_t, uint64_t))(v107 + 24));
        v112 = v111;
        OUTLINED_FUNCTION_284_0(v111, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
        if (v110 <= v112)
        {
          v124 = sub_1CF73E994();
          OUTLINED_FUNCTION_329_0(v124, v125);
          OUTLINED_FUNCTION_206_0();
          v126 = v150;
          if ((v110 & 0x1FF) == 0xFD)
          {
            v127 = sub_1CF73E994();
            OUTLINED_FUNCTION_329_0(v127, v128);
            OUTLINED_FUNCTION_206_0();
            sub_1CF6DFC54(v96, v141, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
            v129 = OUTLINED_FUNCTION_158_0();
            __swift_storeEnumTagSinglePayload(v129, v130, v131, v147);
            v132 = a10;
            sub_1CF6F8CB8();
            v133 = v151;
            v134 = v142;
            OUTLINED_FUNCTION_314(v142, v126, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v151 + 16));
            v135 = OUTLINED_FUNCTION_158_0();
            __swift_storeEnumTagSinglePayload(v135, v136, v137, v97);
            sub_1CF6F8828();
            sub_1CF6F8948((int)v154);
            *((_BYTE *)v132 + *(_QWORD *)(*v132 + 184)) = -96;
            *v143 = 0;
            OUTLINED_FUNCTION_185_0();
            sub_1CF6FB490();
            v138 = OUTLINED_FUNCTION_210_0();
            v139(v138, v134);
            (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v126, v97);
          }
          else
          {
            *(_QWORD *)&v162 = 0;
            *((_QWORD *)&v162 + 1) = 0xE000000000000000;
            sub_1CF73F348();
            OUTLINED_FUNCTION_157_0();
            OUTLINED_FUNCTION_129_0();
            OUTLINED_FUNCTION_238_0();
            sub_1CF73EF58();
            OUTLINED_FUNCTION_238_0();
            OUTLINED_FUNCTION_23_4();
            OUTLINED_FUNCTION_351_0();
            OUTLINED_FUNCTION_3_0();
            OUTLINED_FUNCTION_60_3();
            OUTLINED_FUNCTION_188_0();
            OUTLINED_FUNCTION_105();
            OUTLINED_FUNCTION_45_7();
            OUTLINED_FUNCTION_263_0();
            (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v126, v97);
          }
          goto LABEL_41;
        }
      }
      else
      {
        OUTLINED_FUNCTION_284_0(v109, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
      }
      OUTLINED_FUNCTION_183_0();
      OUTLINED_FUNCTION_157_0();
      OUTLINED_FUNCTION_129_0();
      LOWORD(v159) = *(_WORD *)(v96 + v105);
      sub_1CF73F648();
      OUTLINED_FUNCTION_334_0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_351_0();
      OUTLINED_FUNCTION_3_0();
      OUTLINED_FUNCTION_60_3();
      OUTLINED_FUNCTION_188_0();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_45_7();
      OUTLINED_FUNCTION_263_0();
      (*(void (**)(uint64_t, uint64_t))(v151 + 8))(v150, v97);
LABEL_41:
      sub_1CF6A3724(v96, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
      goto LABEL_27;
    }
LABEL_26:
    sub_1CF6AA5E0();
    OUTLINED_FUNCTION_3_0();
    sub_1CF73F774();
    v159 = v162;
    v157 = 0;
    v158 = 0xE000000000000000;
    sub_1CF73F348();
    OUTLINED_FUNCTION_129_0();
    sub_1CF73F408();
    OUTLINED_FUNCTION_23_4();
    sub_1CF6ABB3C();
    OUTLINED_FUNCTION_105();
    sub_1CF73F780();
    OUTLINED_FUNCTION_263_0();
    (*(void (**)(_BYTE *, uint64_t))(v57 + 8))(v61, v56);
    goto LABEL_27;
  }
  if (v63 != 97 || OUTLINED_FUNCTION_96_1())
    goto LABEL_26;
  v65 = *(unsigned __int16 *)v64;
  v66 = v64[1];
  v67 = sub_1CF73F0E4();
  if (qword_1EFBA0980 != -1)
    swift_once();
  v68 = qword_1EFBA2FB0;
  if (OUTLINED_FUNCTION_205_0(qword_1EFBA2FB0))
  {
    OUTLINED_FUNCTION_20();
    v69 = (uint8_t *)OUTLINED_FUNCTION_4_7();
    *(_QWORD *)&v162 = OUTLINED_FUNCTION_4_7();
    v151 = v66;
    *(_DWORD *)v69 = 136446210;
    OUTLINED_FUNCTION_142();
    OUTLINED_FUNCTION_339_0(v70, v71);
    OUTLINED_FUNCTION_271_0(v72);
    sub_1CF73F2A0();
    OUTLINED_FUNCTION_25_7();
    OUTLINED_FUNCTION_11_3();
    OUTLINED_FUNCTION_33(&dword_1CF67E000, v68, v67, "%{public}s: Server received handshake request", v69);
    OUTLINED_FUNCTION_41_4();
    OUTLINED_FUNCTION_0_1();
  }
  v73 = (*(uint64_t (**)(void))(v153 + 16))();
  v74 = a10;
  if (v65 < v73)
  {
    OUTLINED_FUNCTION_183_0();
    OUTLINED_FUNCTION_157_0();
    OUTLINED_FUNCTION_129_0();
    LOWORD(v159) = v65;
    sub_1CF73F648();
    OUTLINED_FUNCTION_334_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_23_4();
    OUTLINED_FUNCTION_351_0();
    OUTLINED_FUNCTION_3_0();
    OUTLINED_FUNCTION_60_3();
    OUTLINED_FUNCTION_188_0();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_45_7();
    OUTLINED_FUNCTION_263_0();
LABEL_27:
    OUTLINED_FUNCTION_0_0();
    return;
  }
  v113 = v145;
  sub_1CF6F8C84();
  v114 = v147;
  v115 = OUTLINED_FUNCTION_88_0(v113, 1, v147);
  if (v116)
  {
    __break(1u);
  }
  else
  {
    v117 = *(unsigned __int16 *)(v113 + *(int *)(v114 + 24));
    OUTLINED_FUNCTION_284_0(v115, (uint64_t (*)(_QWORD))type metadata accessor for TunnelInterfaceParameters);
    v118 = (uint64_t)v74 + *(_QWORD *)(*v74 + 192);
    swift_beginAccess();
    OUTLINED_FUNCTION_88_0(v118, 1, v114);
    v119 = v154;
    if (!v116)
    {
      if (v117 >= v65)
        v120 = v65;
      else
        v120 = v117;
      *(_WORD *)(v118 + *(int *)(v114 + 24)) = v120;
      v121 = (uint64_t)v74 + *(_QWORD *)(*v74 + 144);
      *(_QWORD *)v121 = v66;
      *(_BYTE *)(v121 + 8) = 0;
      OUTLINED_FUNCTION_164_0();
      __swift_project_boxed_opaque_existential_0Tm(&v159, *((uint64_t *)&v160 + 1));
      OUTLINED_FUNCTION_248_0();
      v122 = v156;
      sub_1CF6ABBB4((uint64_t)v119, (uint64_t)&v162);
      *((_QWORD *)&v164 + 1) = v66;
      OUTLINED_FUNCTION_2_3();
      sub_1CF6AEBC0();
      swift_endAccess();
      OUTLINED_FUNCTION_195();
      *((_BYTE *)v74 + *(_QWORD *)(*v74 + 184)) = -96;
      v123 = v144;
      *v144 = 0x80;
      OUTLINED_FUNCTION_185_0();
      sub_1CF6FB490();
      (*(void (**)(_BYTE *, uint64_t))(v146 + 8))(v123, v122);
      goto LABEL_27;
    }
  }
  __break(1u);
}

void sub_1CF701D88()
{
  uint64_t v0;
  id *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(_QWORD);
  void (*v22)(uint64_t, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  void (*v25)(_QWORD);
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_167();
  v2 = v0;
  v4 = v3;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v23 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  v24 = v5;
  v7 = *(_QWORD *)(type metadata accessor for TunnelEndpoint.Event(0, v5, v23, v6) - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v23 - v9;
  v11 = sub_1CF73EDF0();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  OUTLINED_FUNCTION_12();
  v13 = *v4;
  v25 = (void (*)(_QWORD))v4[1];
  v14 = v4[2];
  *v1 = sub_1CF6F8C54();
  (*(void (**)(id *, _QWORD, uint64_t))(v12 + 104))(v1, *MEMORY[0x1E0DEF740], v11);
  LOBYTE(v4) = sub_1CF73EE08();
  v15 = (*(uint64_t (**)(id *, uint64_t))(v12 + 8))(v1, v11);
  if ((v4 & 1) != 0)
  {
    if (*(_QWORD *)(v13 + 16))
    {
      sub_1CF6F8AF8((uint64_t)v26);
      v16 = v27;
      v17 = v28;
      __swift_project_boxed_opaque_existential_0Tm(v26, v27);
      v18 = OUTLINED_FUNCTION_16();
      OUTLINED_FUNCTION_345_0();
      v19 = (_QWORD *)OUTLINED_FUNCTION_16();
      v20 = v23;
      v19[2] = v24;
      v19[3] = v20;
      v21 = v25;
      v19[4] = v13;
      v19[5] = v21;
      v19[6] = v14;
      v19[7] = v18;
      v22 = *(void (**)(uint64_t, uint64_t (*)(void *), _QWORD *, uint64_t, uint64_t))(v17 + 16);
      OUTLINED_FUNCTION_54_0();
      OUTLINED_FUNCTION_190();
      OUTLINED_FUNCTION_38();
      v22(v13, sub_1CF706F84, v19, v16, v17);
      swift_release();
      OUTLINED_FUNCTION_96();
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v26);
    }
    else
    {
      v25(v15);
      swift_storeEnumTagMultiPayload();
      sub_1CF6FB110();
      OUTLINED_FUNCTION_30_3((uint64_t)v10, *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
    }
    OUTLINED_FUNCTION_17();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1CF701F54(void *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t result;
  id v15;
  uint64_t v16;

  v9 = type metadata accessor for TunnelEndpoint.Event(0, a6, a7, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v16 - v12;
  a3(v11);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    if (a1)
    {
      sub_1CF6F8AF8((uint64_t)v13);
      *((_QWORD *)v13 + 5) = a1;
      swift_storeEnumTagMultiPayload();
      v15 = a1;
      sub_1CF6FB110();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
    swift_storeEnumTagMultiPayload();
    sub_1CF6FB110();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  return result;
}

void sub_1CF702078()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21[2];

  OUTLINED_FUNCTION_2();
  v2 = v1;
  v4 = v3;
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v7 = type metadata accessor for TunnelEndpoint.Event(0, v5, *(_QWORD *)(*(_QWORD *)v0 + 88), v6);
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - v10;
  sub_1CF73F288();
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v20 - v13;
  if (!*(_QWORD *)(v4 + 16))
  {
    sub_1CF6ABBB4(v2, (uint64_t)v11);
    swift_storeEnumTagMultiPayload();
    sub_1CF6FB110();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    goto LABEL_5;
  }
  sub_1CF6F86B4();
  v15 = OUTLINED_FUNCTION_294_0();
  v17 = OUTLINED_FUNCTION_88_0(v15, v16, v5);
  if (!v18)
  {
    OUTLINED_FUNCTION_315_0(v17, (uint64_t)v21);
    v19 = OUTLINED_FUNCTION_16();
    *(_QWORD *)(v19 + 16) = v0;
    sub_1CF68C850(v21, v19 + 24);
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_126_1(v4, (uint64_t)sub_1CF706F4C, v19);
    OUTLINED_FUNCTION_44_5();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v14, v5);
LABEL_5:
    OUTLINED_FUNCTION_0_0();
    return;
  }
  __break(1u);
}

uint64_t sub_1CF7021D8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  id v10;
  uint64_t v12;

  v6 = type metadata accessor for TunnelEndpoint.Event(0, *(_QWORD *)(*(_QWORD *)a2 + 80), *(_QWORD *)(*(_QWORD *)a2 + 88), a4);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v12 - v8);
  if (a1)
  {
    *v9 = a1;
    swift_storeEnumTagMultiPayload();
    v10 = a1;
  }
  else
  {
    sub_1CF6ABBB4(a3, (uint64_t)&v12 - v8);
    swift_storeEnumTagMultiPayload();
  }
  sub_1CF6FB110();
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1CF7022A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  NSObject *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  os_log_type_t v33;
  NSObject *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58[5];
  uint64_t v59;
  _QWORD v60[6];
  __int128 v61[3];

  OUTLINED_FUNCTION_167();
  v2 = v0;
  v7 = *(_QWORD *)(OUTLINED_FUNCTION_328_0(v3, v4, v5, v6) - 8);
  OUTLINED_FUNCTION_68();
  MEMORY[0x1E0C80A78](v8);
  OUTLINED_FUNCTION_227_0();
  OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_10();
  v9 = OUTLINED_FUNCTION_353_0();
  sub_1CF703D28(v9, v10, v11, v12, v13, v14, v15, v16, v56, v57);
  sub_1CF6A4E24((uint64_t)v61, (uint64_t *)&unk_1EFBA1D00);
  swift_endAccess();
  swift_bridgeObjectRelease();
  v17 = OUTLINED_FUNCTION_102_1();
  OUTLINED_FUNCTION_245_0(v17, (uint64_t)v61);
  OUTLINED_FUNCTION_10();
  sub_1CF6AEBC0();
  swift_endAccess();
  v18 = sub_1CF73F0E4();
  v19 = v18;
  if (qword_1EFBA0980 != -1)
    v18 = swift_once();
  v20 = qword_1EFBA2FB0;
  OUTLINED_FUNCTION_245_0(v18, (uint64_t)v61);
  OUTLINED_FUNCTION_20();
  if (os_log_type_enabled(v20, v19))
  {
    OUTLINED_FUNCTION_20();
    v21 = OUTLINED_FUNCTION_4_7();
    v58[0] = OUTLINED_FUNCTION_4_7();
    *(_DWORD *)v21 = 136446722;
    OUTLINED_FUNCTION_189_0();
    sub_1CF68F110(v22, v23, v58);
    v60[0] = v24;
    OUTLINED_FUNCTION_280_0();
    OUTLINED_FUNCTION_39_4();
    OUTLINED_FUNCTION_11_3();
    *(_WORD *)(v21 + 12) = 2080;
    sub_1CF6ABBB4((uint64_t)v61, (uint64_t)v60);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
    v25 = sub_1CF73EF10();
    sub_1CF68F110(v25, v26, v58);
    v60[0] = v27;
    OUTLINED_FUNCTION_243();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_143();
    *(_WORD *)(v21 + 22) = 2048;
    sub_1CF6F8BAC();
    v29 = *(_QWORD *)(v28 + 16);
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_11_3();
    v60[0] = v29;
    OUTLINED_FUNCTION_280_0();
    OUTLINED_FUNCTION_96();
    OUTLINED_FUNCTION_178_0(&dword_1CF67E000, v20, v19, "%{public}s: Starting packet transfer on new connection %s. Current connection pool count = %ld", (uint8_t *)v21);
    OUTLINED_FUNCTION_64();
    OUTLINED_FUNCTION_0_1();
  }
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_325_0();
  OUTLINED_FUNCTION_52();
  swift_storeEnumTagMultiPayload();
  sub_1CF6FB110();
  OUTLINED_FUNCTION_320_0(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
  v30 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 144);
  if ((*(_BYTE *)(v30 + 8) & 1) != 0)
  {
    OUTLINED_FUNCTION_249_0();
    __break(1u);
  }
  else
  {
    v31 = *(_QWORD *)v30;
    v32 = *(_QWORD *)(v1 + 40);
    v33 = sub_1CF73F0E4();
    v34 = qword_1EFBA2FB0;
    if (v31 >= v32)
    {
      v45 = sub_1CF6B3120(v1, (uint64_t)v61);
      OUTLINED_FUNCTION_245_0(v45, (uint64_t)v60);
      OUTLINED_FUNCTION_20();
      if (OUTLINED_FUNCTION_216())
      {
        OUTLINED_FUNCTION_20();
        v46 = OUTLINED_FUNCTION_4_7();
        v59 = OUTLINED_FUNCTION_4_7();
        *(_DWORD *)v46 = 136447234;
        OUTLINED_FUNCTION_189_0();
        OUTLINED_FUNCTION_57_6(v47, v48);
        OUTLINED_FUNCTION_136_0(v49);
        OUTLINED_FUNCTION_39_4();
        OUTLINED_FUNCTION_11_3();
        *(_WORD *)(v46 + 12) = 2080;
        OUTLINED_FUNCTION_312_0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
        v50 = OUTLINED_FUNCTION_131_0();
        sub_1CF68F110(v50, v51, &v59);
        OUTLINED_FUNCTION_136_0(v52);
        OUTLINED_FUNCTION_39_4();
        swift_bridgeObjectRelease();
        *(_WORD *)(v46 + 22) = 2080;
        OUTLINED_FUNCTION_283_0();
        v53 = OUTLINED_FUNCTION_131_0();
        OUTLINED_FUNCTION_57_6(v53, v54);
        OUTLINED_FUNCTION_287_0();
        OUTLINED_FUNCTION_11_3();
        OUTLINED_FUNCTION_143();
        *(_WORD *)(v46 + 32) = 2048;
        OUTLINED_FUNCTION_207();
        OUTLINED_FUNCTION_287_0();
        *(_WORD *)(v46 + 42) = 2048;
        v58[0] = v31;
        sub_1CF73F2A0();
        _os_log_impl(&dword_1CF67E000, v34, (os_log_type_t)v1, "%{public}s: Not migrating from %s to new connection %s because priority %ld is lower than %ld", (uint8_t *)v46, 0x34u);
        OUTLINED_FUNCTION_154_0();
        OUTLINED_FUNCTION_0_1();
      }
      OUTLINED_FUNCTION_207();
      OUTLINED_FUNCTION_39_4();
      OUTLINED_FUNCTION_143();
    }
    else
    {
      v35 = sub_1CF6B3120(v1, (uint64_t)v61);
      OUTLINED_FUNCTION_245_0(v35, (uint64_t)v60);
      OUTLINED_FUNCTION_20();
      if (os_log_type_enabled(v34, v33))
      {
        OUTLINED_FUNCTION_20();
        v36 = OUTLINED_FUNCTION_4_7();
        v59 = OUTLINED_FUNCTION_4_7();
        *(_DWORD *)v36 = 136447234;
        OUTLINED_FUNCTION_189_0();
        OUTLINED_FUNCTION_57_6(v37, v38);
        OUTLINED_FUNCTION_137(v39);
        OUTLINED_FUNCTION_39_4();
        OUTLINED_FUNCTION_11_3();
        *(_WORD *)(v36 + 12) = 2080;
        OUTLINED_FUNCTION_312_0();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
        v40 = OUTLINED_FUNCTION_131_0();
        sub_1CF68F110(v40, v41, &v59);
        OUTLINED_FUNCTION_137(v42);
        OUTLINED_FUNCTION_39_4();
        swift_bridgeObjectRelease();
        *(_WORD *)(v36 + 22) = 2080;
        OUTLINED_FUNCTION_283_0();
        v43 = OUTLINED_FUNCTION_131_0();
        OUTLINED_FUNCTION_57_6(v43, v44);
        sub_1CF73F2A0();
        OUTLINED_FUNCTION_11_3();
        OUTLINED_FUNCTION_143();
        *(_WORD *)(v36 + 32) = 2048;
        OUTLINED_FUNCTION_207();
        OUTLINED_FUNCTION_243();
        *(_WORD *)(v36 + 42) = 2048;
        v58[0] = v31;
        sub_1CF73F2A0();
        _os_log_impl(&dword_1CF67E000, v34, v33, "%{public}s: Migrating tunnel connection from %s to new connection %s because priority %ld is higher than %ld", (uint8_t *)v36, 0x34u);
        OUTLINED_FUNCTION_154_0();
        OUTLINED_FUNCTION_0_1();
      }
      OUTLINED_FUNCTION_207();
      OUTLINED_FUNCTION_39_4();
      OUTLINED_FUNCTION_143();
      sub_1CF6ABBB4(v1, (uint64_t)v61);
      sub_1CF6F8B2C(v61);
      v55 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 144);
      *(_QWORD *)v55 = *(_QWORD *)(v1 + 40);
      *(_BYTE *)(v55 + 8) = 0;
    }
    OUTLINED_FUNCTION_17();
  }
}

uint64_t sub_1CF70293C(uint64_t a1)
{
  NSObject *v1;
  os_log_type_t v3;
  char v4;
  uint64_t v5;
  uint64_t isa;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  void (*v19)(uint64_t);
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  os_log_type_t v30;
  NSObject *v31;
  _DWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t);
  uint64_t v49[4];
  uint64_t v50;

  if (a1)
  {
    OUTLINED_FUNCTION_41();
    v3 = sub_1CF73F0CC();
    OUTLINED_FUNCTION_350_0();
    if (!v4)
      swift_once();
    if (OUTLINED_FUNCTION_184_0())
    {
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_121();
      v5 = OUTLINED_FUNCTION_4_7();
      v49[0] = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v5 = 136446466;
      isa = (uint64_t)v1[2].isa;
      v7 = (unint64_t)v1[3].isa;
      swift_bridgeObjectRetain();
      sub_1CF68F110(isa, v7, v49);
      OUTLINED_FUNCTION_156_0();
      sub_1CF73F2A0();
      OUTLINED_FUNCTION_96();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2082;
      v50 = a1;
      OUTLINED_FUNCTION_41();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
      v8 = sub_1CF73EF10();
      OUTLINED_FUNCTION_51_2(v8, v9, v10);
      v50 = v11;
      sub_1CF73F2A0();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_44_0();
      _os_log_impl(&dword_1CF67E000, v1, v3, "%{public}s: Cancelling TunnelEndpoint due to error %{public}s", (uint8_t *)v5, 0x16u);
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_0_1();
    }
    OUTLINED_FUNCTION_44_0();
  }
  else
  {
    sub_1CF73F0E4();
    OUTLINED_FUNCTION_350_0();
    if (!v4)
      swift_once();
    if (OUTLINED_FUNCTION_184_0())
    {
      OUTLINED_FUNCTION_121();
      v12 = (_DWORD *)OUTLINED_FUNCTION_4_7();
      v49[0] = OUTLINED_FUNCTION_4_7();
      *v12 = 136446210;
      v13 = (uint64_t)v1[2].isa;
      v14 = (unint64_t)v1[3].isa;
      swift_bridgeObjectRetain();
      sub_1CF68F110(v13, v14, v49);
      OUTLINED_FUNCTION_260_0();
      sub_1CF73F2A0();
      OUTLINED_FUNCTION_96();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_204_0(&dword_1CF67E000, v1, v15, "%{public}s: Cancelling TunnelEndpoint");
      OUTLINED_FUNCTION_259_0();
      OUTLINED_FUNCTION_0_1();
    }
  }
  *((_BYTE *)&v1->isa + *((_QWORD *)v1->isa + 23)) = -95;
  sub_1CF6F8D70(0);
  v16 = OUTLINED_FUNCTION_69_4();
  sub_1CF6F8D10(v16, v17);
  if (sub_1CF6F8D48())
  {
    OUTLINED_FUNCTION_247_0();
    sub_1CF73F1F8();
    OUTLINED_FUNCTION_66();
  }
  sub_1CF6F8D58(0);
  if (a1 && (sub_1CF6F8D1C(), v18))
  {
    v19 = v18;
    OUTLINED_FUNCTION_41();
    v20 = sub_1CF73F0CC();
    OUTLINED_FUNCTION_350_0();
    if (!v4)
      swift_once();
    v21 = qword_1EFBA2FB0;
    if (os_log_type_enabled((os_log_t)qword_1EFBA2FB0, v20))
    {
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_121();
      OUTLINED_FUNCTION_41();
      OUTLINED_FUNCTION_121();
      v22 = OUTLINED_FUNCTION_4_7();
      v49[0] = OUTLINED_FUNCTION_4_7();
      *(_DWORD *)v22 = 136446466;
      OUTLINED_FUNCTION_189_0();
      OUTLINED_FUNCTION_51_2(v23, v24, v25);
      OUTLINED_FUNCTION_156_0();
      OUTLINED_FUNCTION_280_0();
      OUTLINED_FUNCTION_39_4();
      OUTLINED_FUNCTION_11_3();
      *(_WORD *)(v22 + 12) = 2080;
      v50 = a1;
      OUTLINED_FUNCTION_41();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
      v26 = sub_1CF73EF10();
      OUTLINED_FUNCTION_51_2(v26, v27, v28);
      OUTLINED_FUNCTION_156_0();
      OUTLINED_FUNCTION_243();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_44_0();
      _os_log_impl(&dword_1CF67E000, v21, v20, "%{public}s: failed with error: %s", (uint8_t *)v22, 0x16u);
      OUTLINED_FUNCTION_64();
      OUTLINED_FUNCTION_0_1();
    }
    v19(a1);
    v29 = OUTLINED_FUNCTION_73();
    sub_1CF693EC8(v29);
    OUTLINED_FUNCTION_44_0();
  }
  else
  {
    v30 = sub_1CF73F0E4();
    OUTLINED_FUNCTION_350_0();
    if (!v4)
      swift_once();
    v31 = qword_1EFBA2FB0;
    if (os_log_type_enabled((os_log_t)qword_1EFBA2FB0, v30))
    {
      OUTLINED_FUNCTION_20();
      v32 = (_DWORD *)OUTLINED_FUNCTION_4_7();
      v49[0] = OUTLINED_FUNCTION_4_7();
      *v32 = 136446210;
      OUTLINED_FUNCTION_189_0();
      OUTLINED_FUNCTION_51_2(v33, v34, v35);
      OUTLINED_FUNCTION_260_0();
      sub_1CF73F2A0();
      OUTLINED_FUNCTION_39_4();
      OUTLINED_FUNCTION_11_3();
      OUTLINED_FUNCTION_204_0(&dword_1CF67E000, v31, v36, "%{public}s: cancelled");
      OUTLINED_FUNCTION_259_0();
      OUTLINED_FUNCTION_0_1();
    }
  }
  v37 = OUTLINED_FUNCTION_69_4();
  sub_1CF6F8D3C(v37, v38);
  v50 = MEMORY[0x1E0DEE9D8];
  sub_1CF6F8BAC();
  v40 = sub_1CF6F7784(v39);
  OUTLINED_FUNCTION_11_3();
  sub_1CF703044(v40);
  sub_1CF6F8BE4();
  v42 = sub_1CF6F7784(v41);
  OUTLINED_FUNCTION_11_3();
  sub_1CF703044(v42);
  sub_1CF6F8C1C();
  sub_1CF703120(v43);
  v44 = *(_QWORD *)(v50 + 16);
  if (v44)
  {
    v45 = v50 + 32;
    do
    {
      sub_1CF6ABBB4(v45, (uint64_t)v49);
      __swift_project_boxed_opaque_existential_0Tm(v49, v49[3]);
      v46 = OUTLINED_FUNCTION_73();
      v47(v46);
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)v49);
      v45 += 40;
      --v44;
    }
    while (v44);
  }
  return swift_bridgeObjectRelease();
}

void sub_1CF702F18()
{
  sub_1CF702F50();
}

void sub_1CF702F34()
{
  sub_1CF702F50();
}

void sub_1CF702F50()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  void (*v3)(unint64_t, uint64_t, unint64_t);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  void (*v9)(unint64_t, uint64_t, unint64_t);
  uint64_t (*v10)(void);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  OUTLINED_FUNCTION_167();
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *v0;
  v7 = *(_QWORD *)(*v0 + 16);
  if (__OFADD__(v7, v5))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v8 = v4;
  v9 = v3;
  v10 = v2;
  v11 = v1;
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 + v5 > *(_QWORD *)(v6 + 24) >> 1)
    v6 = v10();
  if (!*(_QWORD *)(v11 + 16))
  {
    if (!v5)
      goto LABEL_11;
    goto LABEL_13;
  }
  v12 = *(_QWORD *)(v6 + 16);
  v13 = (*(_QWORD *)(v6 + 24) >> 1) - v12;
  v14 = v8(0);
  if (v13 < v5)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v15 = *(_QWORD *)(v14 - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v9(v11 + v16, v5, v6 + v16 + *(_QWORD *)(v15 + 72) * v12);
  if (!v5)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v0 = v6;
    OUTLINED_FUNCTION_17();
    return;
  }
  v17 = *(_QWORD *)(v6 + 16);
  v18 = __OFADD__(v17, v5);
  v19 = v17 + v5;
  if (!v18)
  {
    *(_QWORD *)(v6 + 16) = v19;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1CF703044(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v4 + v2 > *(_QWORD *)(v3 + 24) >> 1)
  {
    sub_1CF6C7408();
    v3 = v6;
  }
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v3 + 24) >> 1) - *(_QWORD *)(v3 + 16) < v2)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1CF6C8704(a1 + 32, v2);
  if (!v2)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v3;
    return;
  }
  v7 = *(_QWORD *)(v3 + 16);
  v8 = __OFADD__(v7, v2);
  v9 = v7 + v2;
  if (!v8)
  {
    *(_QWORD *)(v3 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_1CF703120(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  unint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  unint64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  int64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = (_QWORD *)*v1;
  v5 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  v6 = a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = (uint64_t)v4;
  if (!isUniquelyReferenced_nonNull_native || (v8 = v4[3] >> 1, v8 < v5 + v3))
  {
    sub_1CF6C7408();
    v4 = v9;
    *v1 = (uint64_t)v9;
    v8 = v9[3] >> 1;
  }
  v10 = v4[2];
  v11 = v8 - v10;
  v12 = sub_1CF706C88((uint64_t)&v46, (uint64_t)&v4[5 * v10 + 4], v8 - v10, v6);
  if (v12 < v3)
    goto LABEL_12;
  if (v12)
  {
    v14 = v4[2];
    v15 = __OFADD__(v14, v12);
    v16 = v14 + v12;
    if (v15)
    {
      __break(1u);
      goto LABEL_17;
    }
    v4[2] = v16;
  }
  if (v12 != v11)
  {
    sub_1CF6F6A6C();
    return;
  }
LABEL_13:
  v2 = v4[2];
  v4 = v46;
  v13 = v47;
  v6 = v49;
  v38 = v47;
  if (!v50)
  {
LABEL_17:
    v20 = v6 + 1;
    if (__OFADD__(v6, 1))
      goto LABEL_70;
    v21 = (unint64_t)(v48 + 64) >> 6;
    v19 = v6;
    if (v20 < v21)
    {
      v22 = *(_QWORD *)(v13 + 8 * v20);
      if (v22)
      {
LABEL_20:
        v17 = (v22 - 1) & v22;
        v18 = __clz(__rbit64(v22)) + (v20 << 6);
        v6 = v20;
        goto LABEL_15;
      }
      v23 = v6 + 2;
      v19 = v6 + 1;
      if (v6 + 2 < v21)
      {
        v22 = *(_QWORD *)(v13 + 8 * v23);
        if (v22)
        {
LABEL_23:
          v20 = v23;
          goto LABEL_20;
        }
        v19 = v6 + 2;
        if (v6 + 3 < v21)
        {
          v22 = *(_QWORD *)(v38 + 8 * (v6 + 3));
          if (v22)
          {
            v20 = v6 + 3;
            goto LABEL_20;
          }
          v23 = v6 + 4;
          v19 = v6 + 3;
          if (v6 + 4 < v21)
          {
            v22 = *(_QWORD *)(v38 + 8 * v23);
            if (v22)
              goto LABEL_23;
            v20 = v6 + 5;
            v19 = v6 + 4;
            if (v6 + 5 < v21)
            {
              v22 = *(_QWORD *)(v38 + 8 * v20);
              if (v22)
                goto LABEL_20;
              v19 = v21 - 1;
              v24 = v6 + 6;
              while (v24 < v21)
              {
                v22 = *(_QWORD *)(v38 + 8 * v24++);
                if (v22)
                {
                  v20 = v24 - 1;
                  goto LABEL_20;
                }
              }
            }
          }
        }
      }
    }
    v17 = 0;
    v45 = 0;
    v43 = 0u;
    v44 = 0u;
    goto LABEL_36;
  }
  v17 = (v50 - 1) & v50;
  v18 = __clz(__rbit64(v50)) | (v49 << 6);
LABEL_15:
  sub_1CF6ABBB4(v4[7] + 40 * v18, (uint64_t)&v43);
  v19 = v6;
LABEL_36:
  v49 = v19;
  v50 = v17;
  sub_1CF707470((uint64_t)&v43, (uint64_t)&v41, (uint64_t *)&unk_1EFBA3260);
  if (!v42)
  {
LABEL_68:
    sub_1CF6A4E24((uint64_t)&v43, (uint64_t *)&unk_1EFBA3260);
    sub_1CF6F6A6C();
    sub_1CF6A4E24((uint64_t)&v41, (uint64_t *)&unk_1EFBA3260);
    return;
  }
  while (1)
  {
    sub_1CF6A4E24((uint64_t)&v41, (uint64_t *)&unk_1EFBA3260);
    v25 = *v1;
    v26 = *(_QWORD *)(*v1 + 24) >> 1;
    if (v26 < v2 + 1)
    {
      sub_1CF6C7408();
      v25 = v37;
      *v1 = v37;
      v26 = *(_QWORD *)(v37 + 24) >> 1;
    }
    sub_1CF707470((uint64_t)&v43, (uint64_t)&v39, (uint64_t *)&unk_1EFBA3260);
    if (v40)
      break;
LABEL_65:
    sub_1CF6A4E24((uint64_t)&v39, (uint64_t *)&unk_1EFBA3260);
LABEL_67:
    *(_QWORD *)(*v1 + 16) = v2;
    sub_1CF707470((uint64_t)&v43, (uint64_t)&v41, (uint64_t *)&unk_1EFBA3260);
    if (!v42)
      goto LABEL_68;
  }
  v27 = v25 + 32;
  while (1)
  {
    sub_1CF68C850(&v39, (uint64_t)&v41);
    if (v2 >= v26)
    {
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)&v41);
      goto LABEL_67;
    }
    sub_1CF6A4E24((uint64_t)&v43, (uint64_t *)&unk_1EFBA3260);
    sub_1CF68C850(&v41, v27 + 40 * v2);
    v28 = v49;
    if (!v50)
      break;
    v29 = (v50 - 1) & v50;
    v30 = __clz(__rbit64(v50)) | (v49 << 6);
LABEL_44:
    sub_1CF6ABBB4(v46[7] + 40 * v30, (uint64_t)&v43);
    v31 = v28;
LABEL_64:
    ++v2;
    v49 = v31;
    v50 = v29;
    sub_1CF707470((uint64_t)&v43, (uint64_t)&v39, (uint64_t *)&unk_1EFBA3260);
    if (!v40)
      goto LABEL_65;
  }
  v32 = v49 + 1;
  if (!__OFADD__(v49, 1))
  {
    v33 = (unint64_t)(v48 + 64) >> 6;
    v31 = v49;
    if (v32 >= v33)
      goto LABEL_63;
    v34 = *(_QWORD *)(v47 + 8 * v32);
    if (v34)
      goto LABEL_48;
    v35 = v49 + 2;
    v31 = v49 + 1;
    if (v49 + 2 >= v33)
      goto LABEL_63;
    v34 = *(_QWORD *)(v47 + 8 * v35);
    if (!v34)
    {
      v31 = v49 + 2;
      if (v49 + 3 >= v33)
        goto LABEL_63;
      v34 = *(_QWORD *)(v47 + 8 * (v49 + 3));
      if (v34)
      {
        v32 = v49 + 3;
        goto LABEL_48;
      }
      v35 = v49 + 4;
      v31 = v49 + 3;
      if (v49 + 4 >= v33)
        goto LABEL_63;
      v34 = *(_QWORD *)(v47 + 8 * v35);
      if (!v34)
      {
        v32 = v49 + 5;
        v31 = v49 + 4;
        if (v49 + 5 >= v33)
          goto LABEL_63;
        v34 = *(_QWORD *)(v47 + 8 * v32);
        if (!v34)
        {
          v31 = v33 - 1;
          v36 = v49 + 6;
          while (v36 < v33)
          {
            v34 = *(_QWORD *)(v47 + 8 * v36++);
            if (v34)
            {
              v32 = v36 - 1;
              goto LABEL_48;
            }
          }
LABEL_63:
          v29 = 0;
          v45 = 0;
          v43 = 0u;
          v44 = 0u;
          goto LABEL_64;
        }
        goto LABEL_48;
      }
    }
    v32 = v35;
LABEL_48:
    v29 = (v34 - 1) & v34;
    v30 = __clz(__rbit64(v34)) + (v32 << 6);
    v28 = v32;
    goto LABEL_44;
  }
  __break(1u);
LABEL_70:
  __break(1u);
}

void TunnelEndpoint.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_bridgeObjectRelease();
  v1 = OUTLINED_FUNCTION_167_0();
  OUTLINED_FUNCTION_63(v1);
  sub_1CF6A4E24(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112), (uint64_t *)&unk_1EFBA2050);
  OUTLINED_FUNCTION_162_0();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + *(_QWORD *)(*(_QWORD *)v0 + 136));
  OUTLINED_FUNCTION_379_0();
  OUTLINED_FUNCTION_379_0();
  OUTLINED_FUNCTION_379_0();

  sub_1CF6A4E24(v0 + *(_QWORD *)(*(_QWORD *)v0 + 192), &qword_1EFBA3030);
  sub_1CF693EC8(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 200)));
  sub_1CF693EC8(*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 208)));
  swift_unknownObjectRelease();
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 224);
  v3 = *(_QWORD *)(v0 + v2);
  *(_QWORD *)(v0 + v2) = 0;
  if (v3)
  {
    do
    {
      if (!swift_isUniquelyReferenced_native())
        break;
      v4 = *(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 224));
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_96();
      v3 = v4;
    }
    while (v4);
  }
  OUTLINED_FUNCTION_96();
  OUTLINED_FUNCTION_40();
}

uint64_t TunnelEndpoint.__deallocating_deinit()
{
  TunnelEndpoint.deinit();
  return swift_deallocClassInstance();
}

void sub_1CF70375C(uint64_t a1@<X8>)
{
  sub_1CF6F8574(a1);
}

void sub_1CF70377C()
{
  sub_1CF6F87F4();
}

uint64_t sub_1CF70379C()
{
  return sub_1CF6F8900() & 0x1FFFF;
}

#error "1CF7037D8: call analysis failed (funcsize=8)"

void sub_1CF7037E8()
{
  sub_1CF6F9AA8();
}

void sub_1CF703808()
{
  sub_1CF6FA204();
}

void sub_1CF703828()
{
  sub_1CF6F9464();
}

void sub_1CF703854(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6F8508(a1, a2, a3, a4);
}

void sub_1CF703874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6F8490(a1, a2, a3, a4);
}

void sub_1CF703894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1CF6FB0A4(a1, a2, a3, a4);
}

uint64_t sub_1CF7038B4(void (*a1)(uint64_t *__return_ptr))
{
  uint64_t v2;

  a1(&v2);
  swift_bridgeObjectRetain();
  sub_1CF73EF58();
  swift_bridgeObjectRelease_n();
  return 0x5F6E6F6374;
}

uint64_t sub_1CF703928()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F6A08);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

void sub_1CF703978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  unint64_t v15;

  OUTLINED_FUNCTION_174_0();
  v12 = v11;
  v14 = v13;
  OUTLINED_FUNCTION_66_4();
  v15 = sub_1CF6B0DD0(v12);
  OUTLINED_FUNCTION_73_5();
  if ((v10 & 1) != 0)
  {
    OUTLINED_FUNCTION_135_0();
    OUTLINED_FUNCTION_11_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA32A0);
    OUTLINED_FUNCTION_22_5();

    sub_1CF68E2E4((_OWORD *)(*(_QWORD *)(a10 + 56) + 32 * v15), v14);
    type metadata accessor for RPTrustedHostInfoKey(0);
    sub_1CF6CACA8(&qword_1EFBA0EC0, type metadata accessor for RPTrustedHostInfoKey);
    sub_1CF73F438();
    OUTLINED_FUNCTION_201_0();
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    *v14 = 0u;
    v14[1] = 0u;
    OUTLINED_FUNCTION_13_12();
  }
}

void sub_1CF703A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  __int128 v16;

  OUTLINED_FUNCTION_174_0();
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_66_4();
  v14 = OUTLINED_FUNCTION_275_0();
  OUTLINED_FUNCTION_73_5();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_135_0();
    OUTLINED_FUNCTION_11_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F69C8);
    OUTLINED_FUNCTION_22_5();
    OUTLINED_FUNCTION_162_0();
    v15 = *(_QWORD *)(a10 + 56) + 40 * v14;
    v16 = *(_OWORD *)(v15 + 16);
    *(_OWORD *)v13 = *(_OWORD *)v15;
    *(_OWORD *)(v13 + 16) = v16;
    *(_BYTE *)(v13 + 32) = *(_BYTE *)(v15 + 32);
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_201_0();
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    *(_BYTE *)(v13 + 32) = 0;
    *(_OWORD *)v13 = 0u;
    *(_OWORD *)(v13 + 16) = 0u;
    OUTLINED_FUNCTION_13_12();
  }
}

void sub_1CF703B08()
{
  char v0;
  char v1;
  _OWORD *v2;
  _OWORD *v3;

  OUTLINED_FUNCTION_174_0();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_66_4();
  OUTLINED_FUNCTION_275_0();
  OUTLINED_FUNCTION_73_5();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_135_0();
    OUTLINED_FUNCTION_11_8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA1CE0);
    OUTLINED_FUNCTION_22_5();
    OUTLINED_FUNCTION_162_0();
    OUTLINED_FUNCTION_224_0();
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_201_0();
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    *v3 = 0u;
    v3[1] = 0u;
    OUTLINED_FUNCTION_13_12();
  }
}

uint64_t sub_1CF703BA8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  OUTLINED_FUNCTION_174_0();
  v1 = v0;
  v3 = sub_1CF6B0E48(v2);
  if ((v4 & 1) == 0)
    return 0;
  v5 = v3;
  OUTLINED_FUNCTION_135_0();
  v8 = *v0;
  *v0 = 0x8000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1DB0);
  sub_1CF73F420();
  v6 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F6A00);
  sub_1CF73F438();
  *v1 = v8;
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1CF703C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  unint64_t v15;

  OUTLINED_FUNCTION_174_0();
  v12 = v11;
  v14 = v13;
  OUTLINED_FUNCTION_66_4();
  v15 = sub_1CF68E0D0(v12);
  OUTLINED_FUNCTION_73_5();
  if ((v10 & 1) != 0)
  {
    OUTLINED_FUNCTION_135_0();
    OUTLINED_FUNCTION_11_8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F69E0);
    OUTLINED_FUNCTION_22_5();
    sub_1CF68E2F4(*(_QWORD *)(a10 + 48) + 40 * v15);
    OUTLINED_FUNCTION_224_0();
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_201_0();
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    *v14 = 0u;
    v14[1] = 0u;
    OUTLINED_FUNCTION_13_12();
  }
}

void sub_1CF703D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v10;
  char v11;
  _OWORD *v12;
  _OWORD *v13;
  unint64_t v14;
  _OWORD *v15;
  __int128 v16;

  OUTLINED_FUNCTION_174_0();
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_66_4();
  v14 = OUTLINED_FUNCTION_243_0();
  OUTLINED_FUNCTION_73_5();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_135_0();
    OUTLINED_FUNCTION_11_8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFBA3270);
    OUTLINED_FUNCTION_22_5();
    OUTLINED_FUNCTION_162_0();
    v15 = (_OWORD *)(*(_QWORD *)(a10 + 56) + 48 * v14);
    v16 = v15[1];
    *v13 = *v15;
    v13[1] = v16;
    v13[2] = v15[2];
    OUTLINED_FUNCTION_276();
    OUTLINED_FUNCTION_240_0(qword_1EFBA3010);
    sub_1CF73F438();
    OUTLINED_FUNCTION_201_0();
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    v13[1] = 0u;
    v13[2] = 0u;
    *v13 = 0u;
    OUTLINED_FUNCTION_13_12();
  }
}

void sub_1CF703E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;

  OUTLINED_FUNCTION_174_0();
  v11 = v10;
  v13 = v12;
  OUTLINED_FUNCTION_66_4();
  v14 = OUTLINED_FUNCTION_243_0();
  OUTLINED_FUNCTION_73_5();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_135_0();
    OUTLINED_FUNCTION_11_8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1D20);
    OUTLINED_FUNCTION_22_5();
    OUTLINED_FUNCTION_162_0();
    sub_1CF68C850((__int128 *)(*(_QWORD *)(a10 + 56) + 40 * v14), v13);
    OUTLINED_FUNCTION_276();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1E80);
    OUTLINED_FUNCTION_240_0(qword_1EFBA3010);
    sub_1CF73F438();
    OUTLINED_FUNCTION_201_0();
    OUTLINED_FUNCTION_7_3();
  }
  else
  {
    *(_QWORD *)(v13 + 32) = 0;
    *(_OWORD *)v13 = 0u;
    *(_OWORD *)(v13 + 16) = 0u;
    OUTLINED_FUNCTION_13_12();
  }
}

uint64_t sub_1CF703EE4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD v6[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1CF706E94(v2);
    v2 = v3;
  }
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  result = sub_1CF7040DC(v6);
  *a1 = v2;
  return result;
}

uint64_t sub_1CF703F4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3280);
  v3 = swift_allocObject();
  v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 48);
  v5 = sub_1CF706A84((uint64_t)&v7, (_OWORD *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1CF6F6A6C();
  if (v5 != v1)
  {
    __break(1u);
    return MEMORY[0x1E0DEE9D8];
  }
  return v3;
}

void sub_1CF70402C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  _QWORD *v7;
  size_t v8;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (!v5)
      goto LABEL_8;
    if (v5 > 0)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1ED8);
      v7 = (_QWORD *)OUTLINED_FUNCTION_16();
      v8 = _swift_stdlib_malloc_size(v7);
      v7[2] = v5;
      v7[3] = 2 * ((uint64_t)(v8 - 32) / 96);
    }
    if (v4 != a3)
    {
      sub_1CF6C8474();
LABEL_8:
      OUTLINED_FUNCTION_34_0();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1CF7040DC(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BOOL4 v14;
  __int128 *v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  _BYTE v108[40];
  uint64_t v109;
  _BYTE v110[40];
  uint64_t v111;
  uint64_t v112;

  v2 = a1;
  v3 = a1[1];
  result = sub_1CF73F63C();
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v3)
        return sub_1CF7047B4(0, v3, 1, v2);
      return result;
    }
    goto LABEL_127;
  }
  v5 = result;
  v112 = v1;
  result = sub_1CF6E0910(v3 / 2);
  v103 = result;
  v104 = v3;
  v107 = v6;
  if (v3 <= 0)
  {
    v8 = MEMORY[0x1E0DEE9D8];
    v38 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_92:
    result = v8;
    if (v38 < 2)
    {
LABEL_103:
      result = swift_bridgeObjectRelease();
      if (v104 >= -1)
      {
        *(_QWORD *)(v103 + 16) = 0;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_132;
    }
    v92 = *v2;
    while (1)
    {
      v93 = v38 - 2;
      if (v38 < 2)
        break;
      if (!v92)
        goto LABEL_136;
      v94 = result;
      v95 = *(_QWORD *)(result + 32 + 16 * v93);
      v96 = *(_QWORD *)(result + 32 + 16 * (v38 - 1) + 8);
      v97 = v112;
      result = sub_1CF7048B4((char *)(v92 + 48 * v95), (char *)(v92 + 48 * *(_QWORD *)(result + 32 + 16 * (v38 - 1))), v92 + 48 * v96, v107);
      v112 = v97;
      if (v97)
        goto LABEL_89;
      if (v96 < v95)
        goto LABEL_122;
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_1CF704BB4(v94);
        v94 = result;
      }
      if (v93 >= *(_QWORD *)(v94 + 16))
        goto LABEL_123;
      v98 = (_QWORD *)(v94 + 32 + 16 * v93);
      *v98 = v95;
      v98[1] = v96;
      v99 = *(_QWORD *)(v94 + 16);
      if (v38 > v99)
        goto LABEL_124;
      memmove((void *)(v94 + 32 + 16 * (v38 - 1)), (const void *)(v94 + 32 + 16 * v38), 16 * (v99 - v38));
      result = v94;
      *(_QWORD *)(v94 + 16) = v99 - 1;
      v38 = v99 - 1;
      if (v99 <= 2)
        goto LABEL_103;
    }
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
LABEL_126:
    __break(1u);
LABEL_127:
    __break(1u);
LABEL_128:
    __break(1u);
LABEL_129:
    __break(1u);
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
    return result;
  }
  v102 = v5;
  v7 = 0;
  v8 = MEMORY[0x1E0DEE9D8];
  while (1)
  {
    v9 = v7++;
    v105 = v9;
    if (v7 < v3)
    {
      v10 = *v2;
      sub_1CF6B3120(*v2 + 48 * v7, (uint64_t)v110);
      sub_1CF6B3120(v10 + 48 * v9, (uint64_t)v108);
      v11 = v111;
      v12 = v109;
      sub_1CF6B2D4C((uint64_t)v108);
      result = sub_1CF6B2D4C((uint64_t)v110);
      v7 = v9 + 2;
      if (v9 + 2 < v3)
      {
        v100 = v8;
        v13 = v10 + 48 * v9 + 48;
        while (1)
        {
          sub_1CF6B3120(v13 + 48, (uint64_t)v110);
          sub_1CF6B3120(v13, (uint64_t)v108);
          v14 = v109 >= v111;
          sub_1CF6B2D4C((uint64_t)v108);
          result = sub_1CF6B2D4C((uint64_t)v110);
          if (v12 < v11 == v14)
            break;
          ++v7;
          v13 += 48;
          if (v7 >= v3)
          {
            v7 = v3;
            break;
          }
        }
        v8 = v100;
        v9 = v105;
      }
      if (v12 < v11)
      {
        if (v7 < v9)
          goto LABEL_129;
        if (v9 < v7)
        {
          v15 = (__int128 *)(v10 + 48 * v7 - 48);
          v16 = (__int128 *)(v10 + 48 * v9);
          v17 = v7;
          v18 = v9;
          do
          {
            if (v18 != --v17)
            {
              if (!v10)
                goto LABEL_135;
              v19 = *v16;
              v20 = v16[1];
              v21 = v16[2];
              v23 = v15[1];
              v22 = v15[2];
              *v16 = *v15;
              v16[1] = v23;
              v16[2] = v22;
              v15[1] = v20;
              v15[2] = v21;
              *v15 = v19;
            }
            ++v18;
            v15 -= 3;
            v16 += 3;
          }
          while (v18 < v17);
        }
      }
    }
    if (v7 < v3)
    {
      if (__OFSUB__(v7, v9))
        goto LABEL_126;
      if (v7 - v9 < v102)
      {
        if (__OFADD__(v9, v102))
          goto LABEL_130;
        if (v9 + v102 >= v3)
          v24 = v3;
        else
          v24 = v9 + v102;
        if (v24 < v9)
          goto LABEL_131;
        if (v7 != v24)
        {
          v101 = v8;
          v25 = 48 * v7;
          do
          {
            v26 = v9;
            v27 = v25;
            do
            {
              v28 = *v2 + v27;
              sub_1CF6B3120(v28, (uint64_t)v110);
              sub_1CF6B3120(v28 - 48, (uint64_t)v108);
              v29 = v111;
              v30 = v109;
              sub_1CF6B2D4C((uint64_t)v108);
              result = sub_1CF6B2D4C((uint64_t)v110);
              if (v30 >= v29)
                break;
              if (!*v2)
                goto LABEL_133;
              v31 = (__int128 *)(*v2 + v27);
              v33 = v31[1];
              v32 = v31[2];
              v34 = *v31;
              v35 = *(v31 - 2);
              *v31 = *(v31 - 3);
              v31[1] = v35;
              v31[2] = *(v31 - 1);
              *(v31 - 3) = v34;
              *(v31 - 2) = v33;
              *(v31 - 1) = v32;
              v27 -= 48;
              ++v26;
            }
            while (v7 != v26);
            ++v7;
            v25 += 48;
            v9 = v105;
          }
          while (v7 != v24);
          v7 = v24;
          v8 = v101;
        }
      }
    }
    if (v7 < v9)
      goto LABEL_125;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_1CF704AC0(0, *(_QWORD *)(v8 + 16) + 1, 1, (char *)v8);
      v8 = result;
    }
    v37 = *(_QWORD *)(v8 + 16);
    v36 = *(_QWORD *)(v8 + 24);
    v38 = v37 + 1;
    if (v37 >= v36 >> 1)
    {
      result = (uint64_t)sub_1CF704AC0((char *)(v36 > 1), v37 + 1, 1, (char *)v8);
      v8 = result;
    }
    *(_QWORD *)(v8 + 16) = v38;
    v39 = v8 + 32;
    v40 = (uint64_t *)(v8 + 32 + 16 * v37);
    *v40 = v9;
    v40[1] = v7;
    if (v37)
      break;
    v38 = 1;
LABEL_84:
    v3 = v2[1];
    if (v7 >= v3)
      goto LABEL_92;
  }
  v106 = v7;
  while (1)
  {
    v41 = v38 - 1;
    if (v38 >= 4)
    {
      v46 = v39 + 16 * v38;
      v47 = *(_QWORD *)(v46 - 64);
      v48 = *(_QWORD *)(v46 - 56);
      v52 = __OFSUB__(v48, v47);
      v49 = v48 - v47;
      if (v52)
        goto LABEL_110;
      v51 = *(_QWORD *)(v46 - 48);
      v50 = *(_QWORD *)(v46 - 40);
      v52 = __OFSUB__(v50, v51);
      v44 = v50 - v51;
      v45 = v52;
      if (v52)
        goto LABEL_111;
      v53 = v38 - 2;
      v54 = (uint64_t *)(v39 + 16 * (v38 - 2));
      v56 = *v54;
      v55 = v54[1];
      v52 = __OFSUB__(v55, v56);
      v57 = v55 - v56;
      if (v52)
        goto LABEL_112;
      v52 = __OFADD__(v44, v57);
      v58 = v44 + v57;
      if (v52)
        goto LABEL_114;
      if (v58 >= v49)
      {
        v76 = (uint64_t *)(v39 + 16 * v41);
        v78 = *v76;
        v77 = v76[1];
        v52 = __OFSUB__(v77, v78);
        v79 = v77 - v78;
        if (v52)
          goto LABEL_120;
        v69 = v44 < v79;
        goto LABEL_73;
      }
    }
    else
    {
      if (v38 != 3)
      {
        v70 = *(_QWORD *)(v8 + 32);
        v71 = *(_QWORD *)(v8 + 40);
        v52 = __OFSUB__(v71, v70);
        v63 = v71 - v70;
        v64 = v52;
        goto LABEL_67;
      }
      v43 = *(_QWORD *)(v8 + 32);
      v42 = *(_QWORD *)(v8 + 40);
      v52 = __OFSUB__(v42, v43);
      v44 = v42 - v43;
      v45 = v52;
    }
    if ((v45 & 1) != 0)
      goto LABEL_113;
    v53 = v38 - 2;
    v59 = (uint64_t *)(v39 + 16 * (v38 - 2));
    v61 = *v59;
    v60 = v59[1];
    v62 = __OFSUB__(v60, v61);
    v63 = v60 - v61;
    v64 = v62;
    if (v62)
      goto LABEL_115;
    v65 = (uint64_t *)(v39 + 16 * v41);
    v67 = *v65;
    v66 = v65[1];
    v52 = __OFSUB__(v66, v67);
    v68 = v66 - v67;
    if (v52)
      goto LABEL_117;
    if (__OFADD__(v63, v68))
      goto LABEL_119;
    if (v63 + v68 >= v44)
    {
      v69 = v44 < v68;
LABEL_73:
      if (v69)
        v41 = v53;
      goto LABEL_75;
    }
LABEL_67:
    if ((v64 & 1) != 0)
      goto LABEL_116;
    v72 = (uint64_t *)(v39 + 16 * v41);
    v74 = *v72;
    v73 = v72[1];
    v52 = __OFSUB__(v73, v74);
    v75 = v73 - v74;
    if (v52)
      goto LABEL_118;
    if (v75 < v63)
      goto LABEL_84;
LABEL_75:
    v80 = v41 - 1;
    if (v41 - 1 >= v38)
    {
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      __break(1u);
LABEL_110:
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
      goto LABEL_121;
    }
    v81 = *v2;
    if (!*v2)
      goto LABEL_134;
    v82 = v8;
    v83 = v2;
    v84 = (uint64_t *)(v39 + 16 * v80);
    v85 = *v84;
    v86 = v39;
    v87 = v41;
    v88 = (_QWORD *)(v39 + 16 * v41);
    v89 = v88[1];
    v90 = v112;
    result = sub_1CF7048B4((char *)(v81 + 48 * *v84), (char *)(v81 + 48 * *v88), v81 + 48 * v89, v107);
    v112 = v90;
    if (v90)
      break;
    if (v89 < v85)
      goto LABEL_107;
    if (v87 > *(_QWORD *)(v82 + 16))
      goto LABEL_108;
    *v84 = v85;
    *(_QWORD *)(v86 + 16 * v80 + 8) = v89;
    v91 = *(_QWORD *)(v82 + 16);
    if (v87 >= v91)
      goto LABEL_109;
    v8 = v82;
    v38 = v91 - 1;
    result = (uint64_t)memmove(v88, v88 + 2, 16 * (v91 - 1 - v87));
    v39 = v86;
    *(_QWORD *)(v82 + 16) = v91 - 1;
    v2 = v83;
    v7 = v106;
    if (v91 <= 2)
      goto LABEL_84;
  }
LABEL_89:
  result = swift_bridgeObjectRelease();
  if (v104 < -1)
    goto LABEL_128;
  *(_QWORD *)(v103 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1CF7047B4(uint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _BYTE v19[40];
  uint64_t v20;
  _BYTE v21[40];
  uint64_t v22;

  if (a3 != a2)
  {
    v5 = a3;
    v7 = result;
    v8 = 48 * a3;
    while (2)
    {
      v9 = v7;
      v10 = v8;
      do
      {
        v11 = *a4 + v10;
        sub_1CF6B3120(v11, (uint64_t)v21);
        sub_1CF6B3120(v11 - 48, (uint64_t)v19);
        v12 = v22;
        v13 = v20;
        sub_1CF6B2D4C((uint64_t)v19);
        result = sub_1CF6B2D4C((uint64_t)v21);
        if (v13 >= v12)
          break;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        v14 = (__int128 *)(*a4 + v10);
        v16 = v14[1];
        v15 = v14[2];
        v17 = *v14;
        v18 = *(v14 - 2);
        *v14 = *(v14 - 3);
        v14[1] = v18;
        v14[2] = *(v14 - 1);
        *(v14 - 3) = v17;
        *(v14 - 2) = v16;
        *(v14 - 1) = v15;
        v10 -= 48;
        ++v9;
      }
      while (v5 != v9);
      ++v5;
      v8 += 48;
      if (v5 != a2)
        continue;
      break;
    }
  }
  return result;
}

uint64_t sub_1CF7048B4(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  char *v16;
  __int128 v19;
  __int128 v20;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  BOOL v29;
  __int128 v30;
  __int128 v31;
  _BYTE v34[40];
  uint64_t v35;
  _BYTE v36[40];
  uint64_t v37;
  char *v38;

  v4 = a4;
  v6 = a2;
  v7 = a1;
  v8 = a2 - a1;
  v9 = (a2 - a1) / 48;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 48;
  if (v9 >= v11)
  {
    sub_1CF6C8288(a2, (uint64_t)(a3 - (_QWORD)a2) / 48, a4);
    v12 = &v4[48 * v11];
    if (v7 < v6 && v10 >= 48)
    {
      v22 = (char *)(a3 - 48);
      v38 = v4;
      do
      {
        v23 = v22 + 48;
        v24 = v12 - 48;
        sub_1CF6B3120((uint64_t)(v12 - 48), (uint64_t)v36);
        v25 = v6 - 48;
        sub_1CF6B3120((uint64_t)(v6 - 48), (uint64_t)v34);
        v26 = v37;
        v27 = (unint64_t)v12;
        v28 = v35;
        sub_1CF6B2D4C((uint64_t)v34);
        sub_1CF6B2D4C((uint64_t)v36);
        if (v28 >= v26)
        {
          v29 = v23 != (char *)v27 || (unint64_t)v22 >= v27;
          v25 = v24;
          v12 = v24;
        }
        else
        {
          v29 = v23 != v6 || v22 >= v6;
          v6 -= 48;
          v12 = (char *)v27;
        }
        v4 = v38;
        if (v29)
        {
          v30 = *(_OWORD *)v25;
          v31 = *((_OWORD *)v25 + 2);
          *((_OWORD *)v22 + 1) = *((_OWORD *)v25 + 1);
          *((_OWORD *)v22 + 2) = v31;
          *(_OWORD *)v22 = v30;
        }
        v22 -= 48;
      }
      while (v12 > v4 && v6 > v7);
    }
  }
  else
  {
    sub_1CF6C8288(a1, (a2 - a1) / 48, a4);
    v12 = &v4[48 * v9];
    if ((unint64_t)v6 < a3 && v8 >= 48)
    {
      do
      {
        sub_1CF6B3120((uint64_t)v6, (uint64_t)v36);
        sub_1CF6B3120((uint64_t)v4, (uint64_t)v34);
        v13 = v37;
        v14 = v35;
        sub_1CF6B2D4C((uint64_t)v34);
        sub_1CF6B2D4C((uint64_t)v36);
        if (v14 >= v13)
        {
          v15 = v7 == v4;
          v16 = v4;
          v4 += 48;
          if (v15 && v7 < v4)
            goto LABEL_16;
        }
        else
        {
          v15 = v7 == v6;
          v16 = v6;
          v6 += 48;
          if (v15 && v7 < v6)
            goto LABEL_16;
        }
        v19 = *(_OWORD *)v16;
        v20 = *((_OWORD *)v16 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v16 + 1);
        *((_OWORD *)v7 + 2) = v20;
        *(_OWORD *)v7 = v19;
LABEL_16:
        v7 += 48;
      }
      while (v4 < v12 && (unint64_t)v6 < a3);
    }
    v6 = v7;
  }
  sub_1CF6C8288(v4, (v12 - v4) / 48, v6);
  return 1;
}

char *sub_1CF704AC0(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3288);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1CF704BB4(uint64_t a1)
{
  return sub_1CF704AC0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t type metadata accessor for TunnelEndpoint.Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TunnelEndpoint.Event);
}

uint64_t sub_1CF704BD4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1CF704BF8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1CF704C1C()
{
  OUTLINED_FUNCTION_49_1();
  return swift_deallocObject();
}

uint64_t sub_1CF704C3C()
{
  uint64_t *v0;

  return sub_1CF6FA8AC(v0[4], v0[2], v0[3]);
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

unint64_t sub_1CF704C64()
{
  unint64_t result;

  result = qword_1EFBA3060[0];
  if (!qword_1EFBA3060[0])
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for TunnelConnectionPriority, &type metadata for TunnelConnectionPriority);
    atomic_store(result, qword_1EFBA3060);
  }
  return result;
}

void sub_1CF704CA0()
{
  sub_1CF6F86B4();
  OUTLINED_FUNCTION_1();
}

void sub_1CF704CC8()
{
  sub_1CF6F87F4();
  OUTLINED_FUNCTION_1();
}

void sub_1CF704D00(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  sub_1CF6F8A04();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_1();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TunnelConnectionType(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for TunnelConnectionType(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_1CF704D94(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1CF704DB0(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

void type metadata accessor for TunnelConnectionType()
{
  OUTLINED_FUNCTION_31();
}

void type metadata accessor for TunnelConnectionPriority()
{
  OUTLINED_FUNCTION_31();
}

uint64_t dispatch thunk of AnyTunnelEndpoint.localTunnelInterface.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AnyTunnelEndpoint.remoteAddress.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AnyTunnelEndpoint.serverRSDPort.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))() & 0x1FFFF;
}

uint64_t dispatch thunk of AnyTunnelEndpoint.startPacketTransfer(errorHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of AnyTunnelEndpoint.establishServerTunnel(localParameters:remoteAddress:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 40))();
}

uint64_t dispatch thunk of AnyTunnelEndpoint.finishEstablishingServerTunnel(serverRSDPort:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of AnyTunnelEndpoint.establishClientTunnel(mtu:completion:)(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(_QWORD))(a5 + 56))(a1 & 0x1FFFF);
}

uint64_t dispatch thunk of AnyTunnelEndpoint.clientInjectAdditionalConnection(_:priority:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of AnyTunnelEndpoint.serverInjectAdditionalConnection(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of AnyTunnelEndpoint.cancel()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

void sub_1CF704E60()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1CF73F288();
  if (v0 <= 0x3F)
  {
    sub_1CF7050E4(319, &qword_1EFBA30E8, (void (*)(uint64_t))MEMORY[0x1E0CCE338]);
    if (v1 <= 0x3F)
    {
      sub_1CF7050E4(319, qword_1EFBA30F0, (void (*)(uint64_t))type metadata accessor for TunnelInterfaceParameters);
      if (v2 <= 0x3F)
        swift_initClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for TunnelEndpoint(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TunnelEndpoint);
}

uint64_t method lookup function for TunnelEndpoint()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TunnelEndpoint.serverInjectAdditionalConnection(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of TunnelEndpoint.clientInjectAdditionalConnection(_:priority:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of TunnelEndpoint.localTunnelInterface.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of TunnelEndpoint.localInterface.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of TunnelEndpoint.localInterface.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of TunnelEndpoint.localInterface.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of TunnelEndpoint.remoteAddress.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of TunnelEndpoint.remoteAddress.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of TunnelEndpoint.remoteAddress.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of TunnelEndpoint.serverRSDPort.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))() & 0x1FFFF;
}

uint64_t dispatch thunk of TunnelEndpoint.serverRSDPort.setter(int a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v1 + 312))(a1 & 0x1FFFF);
}

uint64_t dispatch thunk of TunnelEndpoint.serverRSDPort.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of TunnelEndpoint.loggingPrefix.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of TunnelEndpoint.loggingPrefix.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of TunnelEndpoint.loggingPrefix.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of TunnelEndpoint.__allocating_init(connection:workQueue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 640))();
}

uint64_t dispatch thunk of TunnelEndpoint.__allocating_init(id:connection:workQueue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 648))();
}

uint64_t dispatch thunk of TunnelEndpoint.__allocating_init(id:connectionObject:workQueue:priority:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 656))();
}

uint64_t dispatch thunk of TunnelEndpoint.establishClientTunnel(mtu:completion:)(int a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)v1 + 664))(a1 & 0x1FFFF);
}

uint64_t dispatch thunk of TunnelEndpoint.establishServerTunnel(localParameters:remoteAddress:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of TunnelEndpoint.finishEstablishingServerTunnel(serverRSDPort:completion:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of TunnelEndpoint.startPacketTransfer(errorHandler:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of TunnelEndpoint.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

void sub_1CF7050E4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1CF73F288();
    if (!v5)
      atomic_store(v4, a2);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF70512C(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v5;

  if (!a2)
  {
    v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x7B)
  {
    if (a2 + 133 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 133) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 134;
    return v5 + 1;
  }
LABEL_17:
  v5 = ((*a1 >> 5) & 0xFFFFFF87 | (8 * ((*a1 >> 1) & 0xF))) ^ 0x7F;
  if (v5 >= 0x7A)
    v5 = -1;
  return v5 + 1;
}

uint64_t sub_1CF7051C4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 133 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 133) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x7B)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x7A)
    return ((uint64_t (*)(void))((char *)&loc_1CF705210 + 4 * byte_1CF74698B[v4]))();
  *a1 = a2 - 123;
  return ((uint64_t (*)(void))((char *)sub_1CF705244 + 4 * byte_1CF746986[v4]))();
}

uint64_t sub_1CF705244(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF70524C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF705254);
  return result;
}

uint64_t sub_1CF70526C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF705274);
  *(_BYTE *)result = 2 * (((-a2 >> 3) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1CF705278(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF705280(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF70528C(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 <= 0x3F)
    return v1 >> 5;
  else
    return (v1 | 0xFFFFFFFE) + 2 * (v1 >> 5);
}

_BYTE *sub_1CF7052A8(_BYTE *result)
{
  *result &= 0x1Fu;
  return result;
}

_BYTE *sub_1CF7052B8(_BYTE *result, unsigned int a2)
{
  int v2;

  if (a2 < 2)
    LOBYTE(v2) = *result & 1 | (32 * a2);
  else
    v2 = (a2 & 1 | (32 * (a2 >> 1))) + 32;
  *result = v2;
  return result;
}

uint64_t type metadata accessor for TunnelEndpoint.State(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TunnelEndpoint.State);
}

uint64_t sub_1CF7052F8(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t *sub_1CF70533C(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  a1[5] = a2[5];
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_1CF7054E8(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  return a1;
}

uint64_t sub_1CF705520(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1CF705560(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RankedTunnelConnection()
{
  OUTLINED_FUNCTION_31();
}

void sub_1CF7055B8()
{
  unint64_t v0;
  _QWORD v1[16];

  v1[4] = MEMORY[0x1E0DE9D28] + 64;
  v1[5] = MEMORY[0x1E0DE9D28] + 64;
  v1[6] = "0";
  sub_1CF70669C();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[7] = v1;
    v1[8] = &unk_1CF746C58;
    v1[9] = &unk_1CF746CE8;
    v1[10] = &unk_1CF746C28;
    v1[11] = "0";
    v1[12] = "0";
    v1[13] = &unk_1CF746C28;
    v1[14] = "0";
    v1[15] = &unk_1CF746D00;
    swift_initEnumMetadataMultiPayload();
  }
}

char *sub_1CF705680(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  __int128 v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  void **v16;
  void *v17;
  id v18;
  __int128 v19;
  __int128 v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, void **, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 0xAu:
        v7 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v7;
        (**(void (***)(void *, char **))(v7 - 8))(a1, a2);
        v8 = a2[5];
        v9 = v8;
        *((_QWORD *)a1 + 5) = v8;
        goto LABEL_17;
      case 3u:
        v13 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v13;
        (**(void (***)(void *, char **))(v13 - 8))(a1, a2);
        v14 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178) + 48);
        v15 = &a1[v14];
        v16 = (void **)((char *)a2 + v14);
        __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v17 = *v16;
          v18 = v17;
          *(_QWORD *)v15 = v17;
        }
        else
        {
          v23 = type metadata accessor for TunnelMessage();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v24 = sub_1CF73E9AC();
            v25 = *(void (**)(char *, void **, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
            v25(v15, v16, v24);
            v26 = type metadata accessor for TunnelInterfaceParameters();
            v25(&v15[*(int *)(v26 + 20)], (void **)((char *)v16 + *(int *)(v26 + 20)), v24);
            *(_WORD *)&v15[*(int *)(v26 + 24)] = *(_WORD *)((char *)v16 + *(int *)(v26 + 24));
            v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
            v25(&v15[*(int *)(v27 + 48)], (void **)((char *)v16 + *(int *)(v27 + 48)), v24);
            *(_WORD *)&v15[*(int *)(v27 + 64)] = *(_WORD *)((char *)v16 + *(int *)(v27 + 64));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          }
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      case 5u:
        v11 = a2[2];
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = v11;
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_17;
      case 6u:
      case 9u:
        v19 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v19;
        (**(void (***)(void *, char **))(v19 - 8))(a1, a2);
        goto LABEL_17;
      case 7u:
        v20 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v20;
        (**(void (***)(void *, char **))(v20 - 8))(a1, a2);
        *((_QWORD *)a1 + 5) = a2[5];
        swift_bridgeObjectRetain();
        goto LABEL_17;
      case 8u:
        v12 = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 24) = v12;
        (**(void (***)(void *, char **))(v12 - 8))(a1, a2);
        *((_QWORD *)a1 + 5) = a2[5];
        goto LABEL_17;
      case 0xBu:
        v21 = *a2;
        v22 = *a2;
        *(_QWORD *)a1 = v21;
LABEL_17:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void sub_1CF705A38(void **a1)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void **v5;
  void (*v6)(void **, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 0xAu:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
      v2 = a1[5];
      goto LABEL_6;
    case 3u:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
      a1 = (void **)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178) + 48));
      __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
      if (swift_getEnumCaseMultiPayload() == 1)
        goto LABEL_5;
      type metadata accessor for TunnelMessage();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v3 = sub_1CF73E9AC();
        v6 = *(void (**)(void **, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
        v6(a1, v3);
        v4 = type metadata accessor for TunnelInterfaceParameters();
        v6((void **)((char *)a1 + *(int *)(v4 + 20)), v3);
        v5 = (void **)((char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8) + 48));
        v6(v5, v3);
      }
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_release();
      return;
    case 6u:
    case 8u:
    case 9u:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
      return;
    case 7u:
      __swift_destroy_boxed_opaque_existential_0Tm((uint64_t)a1);
      swift_bridgeObjectRelease();
      return;
    case 0xBu:
LABEL_5:
      v2 = *a1;
LABEL_6:

      break;
    default:
      return;
  }
}

char *sub_1CF705BBC(char *a1, uint64_t *a2, uint64_t a3)
{
  __int128 v6;
  void *v7;
  id v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  void **v14;
  void *v15;
  id v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, void **, uint64_t);
  uint64_t v24;
  uint64_t v25;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 0xAu:
      v6 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v6;
      (**(void (***)(void *, uint64_t *))(v6 - 8))(a1, a2);
      v7 = (void *)a2[5];
      v8 = v7;
      *((_QWORD *)a1 + 5) = v7;
      goto LABEL_15;
    case 3u:
      v11 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v11;
      (**(void (***)(void *, uint64_t *))(v11 - 8))(a1, a2);
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178) + 48);
      v13 = &a1[v12];
      v14 = (void **)((char *)a2 + v12);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = *v14;
        v16 = v15;
        *(_QWORD *)v13 = v15;
      }
      else
      {
        v21 = type metadata accessor for TunnelMessage();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v22 = sub_1CF73E9AC();
          v23 = *(void (**)(char *, void **, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
          v23(v13, v14, v22);
          v24 = type metadata accessor for TunnelInterfaceParameters();
          v23(&v13[*(int *)(v24 + 20)], (void **)((char *)v14 + *(int *)(v24 + 20)), v22);
          *(_WORD *)&v13[*(int *)(v24 + 24)] = *(_WORD *)((char *)v14 + *(int *)(v24 + 24));
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
          v23(&v13[*(int *)(v25 + 48)], (void **)((char *)v14 + *(int *)(v25 + 48)), v22);
          *(_WORD *)&v13[*(int *)(v25 + 64)] = *(_WORD *)((char *)v14 + *(int *)(v25 + 64));
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_15;
    case 5u:
      v9 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = v9;
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_15;
    case 6u:
    case 9u:
      v17 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v17;
      (**(void (***)(void *, uint64_t *))(v17 - 8))(a1, a2);
      goto LABEL_15;
    case 7u:
      v18 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v18;
      (**(void (***)(void *, uint64_t *))(v18 - 8))(a1, a2);
      *((_QWORD *)a1 + 5) = a2[5];
      swift_bridgeObjectRetain();
      goto LABEL_15;
    case 8u:
      v10 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v10;
      (**(void (***)(void *, uint64_t *))(v10 - 8))(a1, a2);
      *((_QWORD *)a1 + 5) = a2[5];
      goto LABEL_15;
    case 0xBu:
      v19 = *a2;
      v20 = (id)*a2;
      *(_QWORD *)a1 = v19;
LABEL_15:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1CF705F4C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void **v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(_QWORD *, void **, uint64_t);
  uint64_t v25;
  uint64_t v26;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(_QWORD *, uint64_t))(v5 + 8))(a1, a3);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 0xAu:
        v6 = a2[3];
        a1[3] = v6;
        a1[4] = a2[4];
        (**(void (***)(_QWORD *, _QWORD *))(v6 - 8))(a1, a2);
        v7 = (void *)a2[5];
        v8 = v7;
        a1[5] = v7;
        goto LABEL_16;
      case 3u:
        v12 = a2[3];
        a1[3] = v12;
        a1[4] = a2[4];
        (**(void (***)(_QWORD *, _QWORD *))(v12 - 8))(a1, a2);
        v13 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178) + 48);
        v14 = (_QWORD *)((char *)a1 + v13);
        v15 = (void **)((char *)a2 + v13);
        __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v16 = *v15;
          v17 = v16;
          *v14 = v16;
        }
        else
        {
          v22 = type metadata accessor for TunnelMessage();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            v23 = sub_1CF73E9AC();
            v24 = *(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
            v24(v14, v15, v23);
            v25 = type metadata accessor for TunnelInterfaceParameters();
            v24((_QWORD *)((char *)v14 + *(int *)(v25 + 20)), (void **)((char *)v15 + *(int *)(v25 + 20)), v23);
            *(_WORD *)((char *)v14 + *(int *)(v25 + 24)) = *(_WORD *)((char *)v15 + *(int *)(v25 + 24));
            v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
            v24((_QWORD *)((char *)v14 + *(int *)(v26 + 48)), (void **)((char *)v15 + *(int *)(v26 + 48)), v23);
            *(_WORD *)((char *)v14 + *(int *)(v26 + 64)) = *(_WORD *)((char *)v15 + *(int *)(v26 + 64));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
          }
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_16;
      case 5u:
        *a1 = *a2;
        v9 = a2[1];
        v10 = a2[2];
        a1[1] = v9;
        a1[2] = v10;
        swift_bridgeObjectRetain();
        swift_retain();
        goto LABEL_16;
      case 6u:
      case 9u:
        v18 = a2[3];
        a1[3] = v18;
        a1[4] = a2[4];
        (**(void (***)(_QWORD *, _QWORD *))(v18 - 8))(a1, a2);
        goto LABEL_16;
      case 7u:
        v19 = a2[3];
        a1[3] = v19;
        a1[4] = a2[4];
        (**(void (***)(_QWORD *, _QWORD *))(v19 - 8))(a1, a2);
        a1[5] = a2[5];
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 8u:
        v11 = a2[3];
        a1[3] = v11;
        a1[4] = a2[4];
        (**(void (***)(_QWORD *, _QWORD *))(v11 - 8))(a1, a2);
        a1[5] = a2[5];
        goto LABEL_16;
      case 0xBu:
        v20 = (void *)*a2;
        v21 = v20;
        *a1 = v20;
LABEL_16:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1CF70630C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178) + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v11 = type metadata accessor for TunnelMessage();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v12 = sub_1CF73E9AC();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
        v13(v8, v9, v12);
        v14 = type metadata accessor for TunnelInterfaceParameters();
        v13(&v8[*(int *)(v14 + 20)], &v9[*(int *)(v14 + 20)], v12);
        *(_WORD *)&v8[*(int *)(v14 + 24)] = *(_WORD *)&v9[*(int *)(v14 + 24)];
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
        v13(&v8[*(int *)(v15 + 48)], &v9[*(int *)(v15 + 48)], v12);
        *(_WORD *)&v8[*(int *)(v15 + 64)] = *(_WORD *)&v9[*(int *)(v15 + 64)];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1CF7064C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 - 8);
    (*(void (**)(_OWORD *, uint64_t))(v5 + 8))(a1, a3);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178) + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        v11 = type metadata accessor for TunnelMessage();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v12 = sub_1CF73E9AC();
          v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32);
          v13(v8, v9, v12);
          v14 = type metadata accessor for TunnelInterfaceParameters();
          v13(&v8[*(int *)(v14 + 20)], &v9[*(int *)(v14 + 20)], v12);
          *(_WORD *)&v8[*(int *)(v14 + 24)] = *(_WORD *)&v9[*(int *)(v14 + 24)];
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
          v13(&v8[*(int *)(v15 + 48)], &v9[*(int *)(v15 + 48)], v12);
          *(_WORD *)&v8[*(int *)(v15 + 64)] = *(_WORD *)&v9[*(int *)(v15 + 64)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
        }
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
  }
  return a1;
}

void sub_1CF70669C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFBA3210)
  {
    type metadata accessor for TunnelMessage();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED8F7C70);
    v0 = sub_1CF73F828();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFBA3210);
  }
}

uint64_t storeEnumTagSinglePayload for TunnelConnectionType.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1CF706758 + 4 * byte_1CF7469BD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1CF70678C + 4 * byte_1CF7469B8[v4]))();
}

uint64_t sub_1CF70678C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF706794(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1CF70679CLL);
  return result;
}

uint64_t sub_1CF7067A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1CF7067B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1CF7067B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1CF7067BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TunnelConnectionType.CodingKeys()
{
  return &type metadata for TunnelConnectionType.CodingKeys;
}

ValueMetadata *type metadata accessor for TunnelConnectionType.MigratableCodingKeys()
{
  return &type metadata for TunnelConnectionType.MigratableCodingKeys;
}

uint64_t storeEnumTagSinglePayload for TunnelConnectionType.SinglePathCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1CF706828 + 4 * byte_1CF7469C2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1CF706848 + 4 * byte_1CF7469C7[v4]))();
}

_BYTE *sub_1CF706828(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1CF706848(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF706850(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF706858(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1CF706860(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1CF706868(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TunnelConnectionType.SinglePathCodingKeys()
{
  return &type metadata for TunnelConnectionType.SinglePathCodingKeys;
}

unint64_t sub_1CF706888()
{
  unint64_t result;

  result = qword_1EFBA3220;
  if (!qword_1EFBA3220)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746E08, &type metadata for TunnelConnectionType.SinglePathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA3220);
  }
  return result;
}

unint64_t sub_1CF7068C8()
{
  unint64_t result;

  result = qword_1EFBA3228;
  if (!qword_1EFBA3228)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746F10, &type metadata for TunnelConnectionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA3228);
  }
  return result;
}

unint64_t sub_1CF706908()
{
  unint64_t result;

  result = qword_1EFBA3230;
  if (!qword_1EFBA3230)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746E30, &type metadata for TunnelConnectionType.MigratableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA3230);
  }
  return result;
}

unint64_t sub_1CF706948()
{
  unint64_t result;

  result = qword_1EFBA3238;
  if (!qword_1EFBA3238)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746E58, &type metadata for TunnelConnectionType.MigratableCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA3238);
  }
  return result;
}

unint64_t sub_1CF706988()
{
  unint64_t result;

  result = qword_1EFBA3240;
  if (!qword_1EFBA3240)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746D78, &type metadata for TunnelConnectionType.SinglePathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA3240);
  }
  return result;
}

unint64_t sub_1CF7069C8()
{
  unint64_t result;

  result = qword_1EFBA3248;
  if (!qword_1EFBA3248)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746DA0, &type metadata for TunnelConnectionType.SinglePathCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA3248);
  }
  return result;
}

unint64_t sub_1CF706A08()
{
  unint64_t result;

  result = qword_1EFBA3250;
  if (!qword_1EFBA3250)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746E80, &type metadata for TunnelConnectionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA3250);
  }
  return result;
}

unint64_t sub_1CF706A48()
{
  unint64_t result;

  result = qword_1EFBA3258;
  if (!qword_1EFBA3258)
  {
    result = MEMORY[0x1D17D3DEC](&unk_1CF746EA8, &type metadata for TunnelConnectionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFBA3258);
  }
  return result;
}

uint64_t sub_1CF706A84(uint64_t result, _OWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _OWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD v23[3];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v22 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_23:
    ++v13;
    result = sub_1CF6B3120(*(_QWORD *)(a4 + 56) + 48 * v16, (uint64_t)v23);
    v21 = v23[1];
    v20 = v23[2];
    *v11 = v23[0];
    v11[1] = v21;
    v11[2] = v20;
    v11 += 3;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v22;
      goto LABEL_36;
    }
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
    goto LABEL_22;
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_22;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_22;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v17 = v19;
LABEL_22:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1CF706C88(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21[2];
  __int128 v22[2];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_23:
    ++v13;
    sub_1CF6ABBB4(*(_QWORD *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_1CF68C850(v21, (uint64_t)v22);
    result = sub_1CF68C850(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v20;
      goto LABEL_36;
    }
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
    goto LABEL_22;
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_22;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_22;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v17 = v19;
LABEL_22:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1CF706E94(uint64_t a1)
{
  sub_1CF6A3290(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_1CF706EA8(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  uint64_t i;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v2 = 64;
  for (i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    v1 = *(_QWORD *)(a1 + 8 * i);
    v2 += 64;
    if (v1)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

uint64_t sub_1CF706F28()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 24);
  OUTLINED_FUNCTION_266_0();
  return swift_deallocObject();
}

uint64_t sub_1CF706F4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1CF7021D8(a1, *(_QWORD *)(v4 + 16), v4 + 24, a4);
}

uint64_t sub_1CF706F58()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_266_0();
  return swift_deallocObject();
}

uint64_t sub_1CF706F84(void *a1)
{
  uint64_t v1;

  return sub_1CF701F54(a1, *(_QWORD *)(v1 + 32), *(void (**)(uint64_t))(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1CF706F98(void *a1)
{
  uint64_t *v1;

  return sub_1CF700CAC(a1, v1[4], (uint64_t)(v1 + 5), v1[2], v1[3]);
}

_BYTE **sub_1CF706FB8(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1CF6C8B78(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1CF706FC4(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1CF6C8830(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t objectdestroy_62Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_381_0(a1, a2, a3, a4) - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = v4 + v6;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 0xAu:
      __swift_destroy_boxed_opaque_existential_0Tm(v4 + v6);
      v8 = *(void **)(v7 + 40);
      goto LABEL_6;
    case 3u:
      OUTLINED_FUNCTION_71_2();
      v7 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178) + 48);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
      if (OUTLINED_FUNCTION_120_0() == 1)
        goto LABEL_5;
      type metadata accessor for TunnelMessage();
      if (OUTLINED_FUNCTION_120_0() == 1)
      {
        v9 = OUTLINED_FUNCTION_148_0();
        OUTLINED_FUNCTION_147_0(v9);
        v10 = OUTLINED_FUNCTION_149_0();
        OUTLINED_FUNCTION_123_1(*(int *)(v10 + 20));
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
        OUTLINED_FUNCTION_123_1(*(int *)(v11 + 48));
      }
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_release();
      return OUTLINED_FUNCTION_111_0();
    case 6u:
    case 8u:
    case 9u:
      OUTLINED_FUNCTION_71_2();
      return OUTLINED_FUNCTION_111_0();
    case 7u:
      __swift_destroy_boxed_opaque_existential_0Tm(v4 + v6);
      swift_bridgeObjectRelease();
      return OUTLINED_FUNCTION_111_0();
    case 0xBu:
LABEL_5:
      v8 = *(void **)v7;
LABEL_6:

      break;
    default:
      return OUTLINED_FUNCTION_111_0();
  }
  return OUTLINED_FUNCTION_111_0();
}

void sub_1CF707108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_252_0(a1, a2, a3, a4);
  sub_1CF700F4C(v5 + ((v7 + 32) & ~v7), v4, v6, v8);
  OUTLINED_FUNCTION_40();
}

uint64_t sub_1CF70713C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1CF700FBC(v4, a2, a3, a4);
}

uint64_t sub_1CF70715C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1CF707180()
{
  uint64_t v0;

  return sub_1CF700F14(v0 + 16);
}

uint64_t sub_1CF707198()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1CF7071BC()
{
  uint64_t v0;

  return sub_1CF700E70(*(void **)(v0 + 16));
}

uint64_t sub_1CF7071E4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 16);
  OUTLINED_FUNCTION_266_0();
  return swift_deallocObject();
}

uint64_t sub_1CF707200()
{
  uint64_t v0;

  return sub_1CF700F14(v0 + 16);
}

uint64_t sub_1CF707220()
{
  uint64_t v0;

  return sub_1CF7038B4(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

uint64_t sub_1CF707228()
{
  return sub_1CF700EE8();
}

void sub_1CF707248(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1CF71F864(*(uint64_t (**)(void))(v1 + 16), a1);
}

void sub_1CF707250(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1CF71F68C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_1CF707268()
{
  uint64_t v0;

  sub_1CF700EA8((_QWORD *)(v0 + 16));
}

uint64_t sub_1CF707294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1CF7072E0(uint64_t a1)
{
  uint64_t *v1;

  sub_1CF700D98(a1, v1[4], (uint64_t)(v1 + 5), v1[2], v1[3]);
}

uint64_t sub_1CF707300()
{
  return objectdestroy_59Tm_0();
}

uint64_t objectdestroy_59Tm_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_49_1();
  __swift_destroy_boxed_opaque_existential_0Tm(v0 + 40);
  return swift_deallocObject();
}

void sub_1CF707340(void *a1, char a2)
{
  uint64_t *v2;

  sub_1CF700AC4(a1, a2 & 1, v2[4], (uint64_t)(v2 + 5), v2[2], v2[3]);
}

uint64_t sub_1CF707354(uint64_t *a1)
{
  uint64_t *v1;

  return sub_1CF7009C4(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1CF707360()
{
  uint64_t *v0;

  return sub_1CF700860(v0);
}

uint64_t sub_1CF707368()
{
  return sub_1CF700920();
}

uint64_t sub_1CF707370()
{
  return swift_deallocObject();
}

uint64_t sub_1CF707380()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)(v0 + 24) + 32))();
}

void sub_1CF7073C0()
{
  _WORD *v0;

  *v0 = OUTLINED_FUNCTION_335_0();
  OUTLINED_FUNCTION_1();
}

void sub_1CF7073DC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1CF71F6D8(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_1CF7073EC()
{
  _DWORD *v0;

  *v0 = OUTLINED_FUNCTION_335_0();
  OUTLINED_FUNCTION_1();
}

void sub_1CF707408(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1CF71F724(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

void sub_1CF707428(uint64_t a1)
{
  uint64_t *v1;

  sub_1CF7007B0(a1, v1[4], v1[2], v1[3]);
}

void sub_1CF70744C(uint64_t a1)
{
  uint64_t *v1;

  sub_1CF7006F0(a1, v1[4], v1[2], v1[3]);
}

void sub_1CF707470(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_278(a1, a2, a3);
  OUTLINED_FUNCTION_8_9(v3);
  OUTLINED_FUNCTION_1();
}

unint64_t sub_1CF707490()
{
  unint64_t result;

  result = qword_1EFBA3290;
  if (!qword_1EFBA3290)
  {
    result = MEMORY[0x1D17D3DEC](&protocol conformance descriptor for TunnelConnectionPriority, &type metadata for TunnelConnectionPriority);
    atomic_store(result, (unint64_t *)&qword_1EFBA3290);
  }
  return result;
}

uint64_t sub_1CF7074CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(OUTLINED_FUNCTION_381_0(a1, a2, a3, a4) - 8) + 80);
  v6 = (v5 + 40) & ~v5;
  OUTLINED_FUNCTION_49_1();
  v7 = v4 + v6;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 0xAu:
      __swift_destroy_boxed_opaque_existential_0Tm(v4 + v6);
      v8 = *(void **)(v7 + 40);
      goto LABEL_6;
    case 3u:
      OUTLINED_FUNCTION_71_2();
      v7 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA3178) + 48);
      __swift_instantiateConcreteTypeFromMangledName(qword_1EFBA3180);
      if (OUTLINED_FUNCTION_120_0() == 1)
        goto LABEL_5;
      type metadata accessor for TunnelMessage();
      if (OUTLINED_FUNCTION_120_0() == 1)
      {
        v9 = OUTLINED_FUNCTION_148_0();
        OUTLINED_FUNCTION_147_0(v9);
        v10 = OUTLINED_FUNCTION_149_0();
        OUTLINED_FUNCTION_123_1(*(int *)(v10 + 20));
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA24F8);
        OUTLINED_FUNCTION_123_1(*(int *)(v11 + 48));
      }
      break;
    case 5u:
      swift_bridgeObjectRelease();
      swift_release();
      return OUTLINED_FUNCTION_111_0();
    case 6u:
    case 8u:
    case 9u:
      OUTLINED_FUNCTION_71_2();
      return OUTLINED_FUNCTION_111_0();
    case 7u:
      __swift_destroy_boxed_opaque_existential_0Tm(v4 + v6);
      swift_bridgeObjectRelease();
      return OUTLINED_FUNCTION_111_0();
    case 0xBu:
LABEL_5:
      v8 = *(void **)v7;
LABEL_6:

      break;
    default:
      return OUTLINED_FUNCTION_111_0();
  }
  return OUTLINED_FUNCTION_111_0();
}

uint64_t sub_1CF707604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_252_0(a1, a2, a3, a4);
  return sub_1CF6FB34C(*(_QWORD *)(v5 + 32), v5 + ((v7 + 40) & ~v7), v4, v6);
}

void OUTLINED_FUNCTION_17_11(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 - 88));
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_22_5()
{
  return sub_1CF73F420();
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_27_8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 408))(a1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_37_6()
{
  uint64_t v0;

  return sub_1CF6ABBB4(v0 - 192, v0 - 240);
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  return sub_1CF73F780();
}

uint64_t OUTLINED_FUNCTION_48_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_52_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_53_4()
{
  return sub_1CF73F72C();
}

uint64_t OUTLINED_FUNCTION_54_6()
{
  return swift_release();
}

void OUTLINED_FUNCTION_57_6(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 - 192));
}

uint64_t OUTLINED_FUNCTION_58_5()
{
  return objectdestroy_59Tm_0();
}

uint64_t OUTLINED_FUNCTION_59_5()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1CF68C850(v1, v2 - 192);
  v3 = *(_QWORD *)(v0 + 712);
  v4 = *(_QWORD *)(v0 + 720);
  __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v2 - 192), v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
}

uint64_t OUTLINED_FUNCTION_60_3()
{
  return sub_1CF73F774();
}

uint64_t OUTLINED_FUNCTION_61_5()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_63_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_64_6(uint64_t result)
{
  *(_BYTE *)(result + 16) = 34;
  return result;
}

uint64_t OUTLINED_FUNCTION_66_4()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_69_5()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_70_3()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_71_4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 408))();
}

_QWORD *OUTLINED_FUNCTION_74_2(_QWORD *a1)
{
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_0Tm(a1, v1);
}

void OUTLINED_FUNCTION_76_2(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 - 192));
}

uint64_t OUTLINED_FUNCTION_77_3()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_81_1(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return v1(a1, v4, v2, v3);
}

uint64_t OUTLINED_FUNCTION_82_2()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_83_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_88_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_90_1()
{
  return sub_1CF73F690();
}

uint64_t OUTLINED_FUNCTION_91_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v2 - 240), v0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_96_1()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_97_1()
{
  return swift_arrayDestroy();
}

uint64_t OUTLINED_FUNCTION_98_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = v0;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_101_1@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(v3 + a3);
  v5 = *(_QWORD *)(v3 + a3);
  *v4 = a1;
  v4[1] = a2;
  return sub_1CF693EC8(v5);
}

uint64_t OUTLINED_FUNCTION_102_1()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = v0[4];
  __swift_project_boxed_opaque_existential_0Tm(v0, v1);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
}

uint64_t OUTLINED_FUNCTION_105_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_109_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_111_0()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_114_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_115_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_116_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v1 - 240), v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
}

uint64_t OUTLINED_FUNCTION_119_1()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_120_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_121_1()
{
  uint64_t v0;

  return sub_1CF6ABBB4(v0 - 136, v0 - 192);
}

uint64_t OUTLINED_FUNCTION_123_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  return v3(v1 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_125_1()
{
  return sub_1CF73F774();
}

uint64_t OUTLINED_FUNCTION_126_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  return v3(a1, a2, a3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_127_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_130_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_131_0()
{
  return sub_1CF73EF10();
}

__n128 OUTLINED_FUNCTION_132_0(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_133()
{
  return 16;
}

unint64_t OUTLINED_FUNCTION_134_0()
{
  return sub_1CF6AA5E0();
}

uint64_t OUTLINED_FUNCTION_135_0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_136_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 232) = a1;
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_137(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 232) = a1;
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_138_0(uint64_t result)
{
  *(_BYTE *)(result + 16) = 8;
  return result;
}

uint64_t OUTLINED_FUNCTION_139()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_142()
{
  sub_1CF6F8A04();
}

uint64_t OUTLINED_FUNCTION_143()
{
  uint64_t v0;

  return sub_1CF6B2D4C(v0 - 136);
}

uint64_t OUTLINED_FUNCTION_147_0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_148_0()
{
  return sub_1CF73E9AC();
}

uint64_t OUTLINED_FUNCTION_149_0()
{
  return type metadata accessor for TunnelInterfaceParameters();
}

void OUTLINED_FUNCTION_150_0(__int16 a1@<W8>)
{
  uint64_t v1;

  *(_WORD *)v1 = a1;
  *(_BYTE *)(v1 + 2) = 34;
}

uint64_t OUTLINED_FUNCTION_151_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_152_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_153()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_154_0()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_157_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 136);
  *(_QWORD *)(v0 - 144) = *(_QWORD *)(v0 - 144);
  *(_QWORD *)(v0 - 136) = v1;
}

uint64_t OUTLINED_FUNCTION_158_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_161_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_162_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_163_0()
{
  return sub_1CF73F774();
}

void OUTLINED_FUNCTION_164_0()
{
  uint64_t v0;

  sub_1CF6F8AF8(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_165_0(uint64_t a1)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_167_0()
{
  return sub_1CF73F288();
}

void OUTLINED_FUNCTION_168_0(uint64_t a1@<X8>)
{
  sub_1CF6F8AF8(a1);
}

uint64_t OUTLINED_FUNCTION_171_0()
{
  return sub_1CF73EE44();
}

void OUTLINED_FUNCTION_172_0()
{
  uint64_t v0;
  int v1;

  *(_DWORD *)(v0 + 288) = v1;
  sub_1CF6F8A04();
}

void OUTLINED_FUNCTION_175_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 + 512));
}

void OUTLINED_FUNCTION_176_0(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  uint64_t v4;
  uint8_t *v5;

  _os_log_impl(a1, *(os_log_t *)(v4 + 360), (os_log_type_t)*(_DWORD *)(v4 + 288), a4, v5, 0x16u);
}

uint64_t OUTLINED_FUNCTION_177_0()
{
  return swift_willThrow();
}

void OUTLINED_FUNCTION_178_0(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x20u);
}

uint64_t OUTLINED_FUNCTION_180_0()
{
  return sub_1CF73EE44();
}

uint64_t OUTLINED_FUNCTION_183_0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 144) = 0;
  *(_QWORD *)(v0 - 136) = 0xE000000000000000;
  return sub_1CF73F348();
}

BOOL OUTLINED_FUNCTION_184_0()
{
  os_log_type_t v0;
  uint64_t v1;

  return os_log_type_enabled(*(os_log_t *)(v1 + 4016), v0);
}

uint64_t OUTLINED_FUNCTION_185_0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_186_0()
{
  return sub_1CF73EE44();
}

uint64_t OUTLINED_FUNCTION_187_0()
{
  return swift_arrayDestroy();
}

unint64_t OUTLINED_FUNCTION_188_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 - 136);
  *(_QWORD *)(v0 - 192) = *(_QWORD *)(v0 - 144);
  *(_QWORD *)(v0 - 184) = v1;
  return sub_1CF6ABB3C();
}

void OUTLINED_FUNCTION_189_0()
{
  sub_1CF6F8A04();
}

void OUTLINED_FUNCTION_190_0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  *v1 = 0;
  v1[1] = 0;
}

uint64_t OUTLINED_FUNCTION_191_0()
{
  return sub_1CF73F4A4();
}

uint64_t OUTLINED_FUNCTION_192()
{
  return sub_1CF73F438();
}

uint64_t OUTLINED_FUNCTION_195()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_0Tm(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_196_0()
{
  uint64_t v0;

  return sub_1CF6B3120(v0 - 192, v0 - 240);
}

_QWORD *OUTLINED_FUNCTION_197_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v1 - 192), v0);
}

uint64_t OUTLINED_FUNCTION_201_0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t result;

  result = *v0;
  *v0 = v1;
  return result;
}

void OUTLINED_FUNCTION_203_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _QWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_1CF701078(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
}

void OUTLINED_FUNCTION_204_0(void *a1, NSObject *a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  uint8_t *v5;

  _os_log_impl(a1, a2, v4, a4, v5, 0xCu);
}

BOOL OUTLINED_FUNCTION_205_0(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

uint64_t OUTLINED_FUNCTION_206_0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_1CF6933C0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_207()
{
  uint64_t v0;

  return sub_1CF6B2D4C(v0 - 184);
}

uint64_t OUTLINED_FUNCTION_208()
{
  return sub_1CF73EF58();
}

void OUTLINED_FUNCTION_209_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1CF6A3724(v2, a2);
}

uint64_t OUTLINED_FUNCTION_210_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_211_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_213_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + a1);
  sub_1CF6A3AE0(v2);
  return v2;
}

void OUTLINED_FUNCTION_214_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

uint64_t OUTLINED_FUNCTION_215_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 640) = a1;
  return v2 - 240;
}

BOOL OUTLINED_FUNCTION_216()
{
  os_log_type_t v0;
  NSObject *v1;

  return os_log_type_enabled(v1, v0);
}

uint64_t OUTLINED_FUNCTION_217()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 192);
}

uint64_t OUTLINED_FUNCTION_218_0()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 136);
}

uint64_t OUTLINED_FUNCTION_219_0()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 112);
}

uint64_t OUTLINED_FUNCTION_220_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for TunnelEndpoint.Event(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
}

uint64_t OUTLINED_FUNCTION_221()
{
  return swift_release();
}

void OUTLINED_FUNCTION_222_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_1CF707470(a1, v3, a3);
}

void OUTLINED_FUNCTION_223_0()
{
  sub_1CF6AEBC0();
}

_OWORD *OUTLINED_FUNCTION_224_0()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;

  return sub_1CF68E2E4((_OWORD *)(*(_QWORD *)(v0 + 56) + 32 * v2), v1);
}

uint64_t OUTLINED_FUNCTION_225_0()
{
  uint64_t v0;

  return v0 + *(_QWORD *)(*(_QWORD *)v0 + 104);
}

uint64_t OUTLINED_FUNCTION_233_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_234_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_235(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t result;

  result = __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
  *(_WORD *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 120)) = 0;
  return result;
}

uint64_t OUTLINED_FUNCTION_237_0()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_238_0()
{
  return sub_1CF73F408();
}

void OUTLINED_FUNCTION_240_0(_QWORD *a1)
{
  uint64_t *v1;

  sub_1CF6CA380(a1, v1);
}

unint64_t OUTLINED_FUNCTION_243_0()
{
  return sub_1CF6B0E78();
}

uint64_t OUTLINED_FUNCTION_244_0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_245_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CF6B3120(v2, a2);
}

uint64_t OUTLINED_FUNCTION_246_0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_247_0()
{
  return swift_getObjectType();
}

uint64_t OUTLINED_FUNCTION_248_0()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_249_0()
{
  return sub_1CF73F450();
}

uint64_t OUTLINED_FUNCTION_252_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for TunnelEndpoint.Event(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t OUTLINED_FUNCTION_253_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_254_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_255_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_256_0()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_259_0()
{
  return swift_arrayDestroy();
}

void OUTLINED_FUNCTION_262_0(float a1)
{
  float *v1;

  *v1 = a1;
  sub_1CF6F8A04();
}

uint64_t OUTLINED_FUNCTION_263_0()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_264_0(uint64_t a1)
{
  uint64_t v1;

  __swift_destroy_boxed_opaque_existential_0Tm(a1);
  return *(_QWORD *)(v1 + 432);
}

BOOL OUTLINED_FUNCTION_265_0(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t OUTLINED_FUNCTION_266_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_269_0(uint64_t result)
{
  return sub_1CF693EC8(result);
}

_QWORD *OUTLINED_FUNCTION_270_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v1 - 136), *(_QWORD *)(v0 + 176));
}

uint64_t OUTLINED_FUNCTION_271_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 192) = a1;
  return v1 - 192;
}

uint64_t OUTLINED_FUNCTION_273_0()
{
  return sub_1CF73E904();
}

uint64_t OUTLINED_FUNCTION_274_0()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_275_0()
{
  return sub_1CF6B0D94();
}

uint64_t OUTLINED_FUNCTION_276()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_277_0()
{
  uint64_t v0;

  return sub_1CF6B2D4C(v0 - 192);
}

void OUTLINED_FUNCTION_278_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_1CF6A4E24(v2 - 192, a2);
}

uint64_t OUTLINED_FUNCTION_279_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CF68C850((__int128 *)(v2 - 192), a2);
}

uint64_t OUTLINED_FUNCTION_280_0()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_281_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_282_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);
  uint64_t v3;

  sub_1CF6F8D10(a1, a2);
  v3 = sub_1CF6F8D3C(0, 0);
  return v2(v3);
}

uint64_t OUTLINED_FUNCTION_283_0()
{
  uint64_t v0;

  return sub_1CF6ABBB4(v0 - 136, v0 - 232);
}

void OUTLINED_FUNCTION_284_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1CF6A3724(v2, a2);
}

uint64_t OUTLINED_FUNCTION_287_0()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_288_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_289_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 64) = a2;
  *(_QWORD *)(a1 + 72) = v2;
  return swift_setDeallocating();
}

uint64_t OUTLINED_FUNCTION_291_0()
{
  return sub_1CF73ED84();
}

uint64_t OUTLINED_FUNCTION_292_0()
{
  return sub_1CF73E9AC();
}

uint64_t OUTLINED_FUNCTION_293_0()
{
  return sub_1CF73F780();
}

uint64_t OUTLINED_FUNCTION_294_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_297_0()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_298_0()
{
  uint64_t v0;

  return v0;
}

unint64_t OUTLINED_FUNCTION_299_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_1CF6F7F5C();
}

void OUTLINED_FUNCTION_300_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_WORD *)(v1 - 96) = *(_WORD *)(v0 + *(int *)(*(_QWORD *)(v1 - 104) + 24));
}

BOOL OUTLINED_FUNCTION_301_0()
{
  NSObject *v0;
  os_log_type_t v1;

  return os_log_type_enabled(v0, v1);
}

uint64_t OUTLINED_FUNCTION_302_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

void OUTLINED_FUNCTION_303_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 + 552));
}

void OUTLINED_FUNCTION_304_0()
{
  uint64_t v0;

  sub_1CF6F8AF8(v0 - 192);
}

uint64_t OUTLINED_FUNCTION_306_0()
{
  return sub_1CF73EF10();
}

void OUTLINED_FUNCTION_308_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 + 504));
}

void OUTLINED_FUNCTION_309_0()
{
  sub_1CF6F8A04();
}

void OUTLINED_FUNCTION_311_0(_QWORD *a1)
{
  uint64_t *v1;

  sub_1CF6CA380(a1, v1);
}

void OUTLINED_FUNCTION_312_0()
{
  uint64_t v0;

  sub_1CF6F8AF8(v0 - 232);
}

uint64_t OUTLINED_FUNCTION_314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_315_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1CF6ABBB4(v2, a2);
}

void OUTLINED_FUNCTION_316_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_1CF6A348C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_317_0()
{
  return swift_endAccess();
}

_QWORD *OUTLINED_FUNCTION_318_0()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_0Tm((_QWORD *)(v1 - 240), v0);
}

uint64_t OUTLINED_FUNCTION_319_0()
{
  uint64_t v0;

  return sub_1CF693EC8(v0);
}

uint64_t OUTLINED_FUNCTION_320_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_321_0(uint64_t a1, uint64_t a2)
{
  __int128 *v2;

  return sub_1CF68C850(v2, a2);
}

uint64_t OUTLINED_FUNCTION_322_0()
{
  uint64_t v0;

  return v0 - 240;
}

void OUTLINED_FUNCTION_323_0()
{
  sub_1CF6FB110();
}

uint64_t OUTLINED_FUNCTION_324_0()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_325_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1CF6ABBB4(v0, v1);
}

uint64_t OUTLINED_FUNCTION_327_0()
{
  uint64_t v0;
  uint64_t v1;

  return sub_1CF6F8A64(v1, v0);
}

uint64_t OUTLINED_FUNCTION_328_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for TunnelEndpoint.Event(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
}

void OUTLINED_FUNCTION_329_0(uint64_t a1, uint64_t a2)
{
  sub_1CF6E09C4(a1, a2);
}

void OUTLINED_FUNCTION_330_0()
{
  sub_1CF6F8A04();
}

uint64_t OUTLINED_FUNCTION_333()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_334_0()
{
  return sub_1CF73EF58();
}

uint64_t OUTLINED_FUNCTION_335_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t OUTLINED_FUNCTION_336_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_337_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(a1 + 16) = *(_QWORD *)(v1 + 416);
  *(_QWORD *)(a1 + 24) = v3;
  return a1 + v2;
}

void OUTLINED_FUNCTION_338_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 - 240));
}

void OUTLINED_FUNCTION_339_0(uint64_t a1, unint64_t a2)
{
  uint64_t v2;

  sub_1CF68F110(a1, a2, (uint64_t *)(v2 - 144));
}

uint64_t OUTLINED_FUNCTION_341_0()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_342_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_344_0()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_345_0()
{
  return swift_weakInit();
}

uint64_t OUTLINED_FUNCTION_346_0(__int16 a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v2 - 96) = a1;
  return v1;
}

uint64_t OUTLINED_FUNCTION_347_0()
{
  return sub_1CF73F648();
}

uint64_t OUTLINED_FUNCTION_348_0()
{
  return sub_1CF73EF10();
}

void OUTLINED_FUNCTION_349_0()
{
  __int16 v0;
  uint64_t v1;
  uint64_t v2;

  *(_WORD *)(v1 + 12) = 2082;
  *(_WORD *)(v2 - 96) = v0;
}

unint64_t OUTLINED_FUNCTION_351_0()
{
  return sub_1CF6AA5E0();
}

uint64_t OUTLINED_FUNCTION_353_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_354_0()
{
  return swift_setDeallocating();
}

void OUTLINED_FUNCTION_355_0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_1CF707470(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_359_0(uint64_t a1)
{
  uint64_t v1;

  return sub_1CF6ABBB4(a1, *(_QWORD *)(v1 + 384));
}

uint64_t OUTLINED_FUNCTION_360_0()
{
  uint64_t v0;

  return v0 - 136;
}

uint64_t OUTLINED_FUNCTION_361_0()
{
  return 1030;
}

uint64_t OUTLINED_FUNCTION_362_0()
{
  return 1029;
}

unint64_t OUTLINED_FUNCTION_363_0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[7];
  *v0 = v0[6];
  v0[1] = v1;
  return sub_1CF6ABB3C();
}

char *OUTLINED_FUNCTION_364_0(uint64_t a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  __int128 *v4;
  char *v5;

  v3 = *(int *)(a1 + 48);
  v4 = v1;
  v5 = (char *)v1 + v3;
  sub_1CF68C850(v4, v2 - 192);
  return v5;
}

void OUTLINED_FUNCTION_365_0()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[1];
  v0[19] = *v0;
  v0[20] = v1;
}

void OUTLINED_FUNCTION_366_0()
{
  uint64_t v0;

  *(_BYTE *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 184)) = 64;
}

void OUTLINED_FUNCTION_367_0()
{
  sub_1CF6F8BE4();
}

void OUTLINED_FUNCTION_368_0()
{
  sub_1CF6FB110();
}

uint64_t OUTLINED_FUNCTION_369_0(uint64_t a1, uint64_t a2)
{
  __int128 *v2;

  return sub_1CF68C850(v2, a2);
}

void OUTLINED_FUNCTION_370_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_1CF6A3724(v2, a2);
}

uint64_t OUTLINED_FUNCTION_372_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return v1 - 96;
}

unint64_t OUTLINED_FUNCTION_373()
{
  return sub_1CF6B0E78();
}

uint64_t OUTLINED_FUNCTION_374_0()
{
  return sub_1CF73F2A0();
}

uint64_t OUTLINED_FUNCTION_375_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_378_0()
{
  return sub_1CF73EE44();
}

uint64_t OUTLINED_FUNCTION_379_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_380_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_381_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for TunnelEndpoint.Event(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

void sub_1CF708618(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  id v4;

  if (a1)
    v3 = sub_1CF73E484();
  else
    v3 = 0;
  v4 = (id)v3;
  (*(void (**)(uint64_t))(a2 + 16))(a2);

}

void sub_1CF708664(_QWORD *a1, void (*a2)(_QWORD))
{
  a2(*a1);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF708684()
{
  uint64_t result;

  sub_1CF6AA174(0, (unint64_t *)&qword_1ED8F7A60);
  result = sub_1CF73F270();
  qword_1EFBA32A8 = result;
  return result;
}

uint64_t RPPairableHostBrowser.state.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  void *v3;

  sub_1CF6AE5B8();
  sub_1CF6AE9F4(v3);
  sub_1CF6D31DC(v3);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

id sub_1CF708764()
{
  void *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  objc_super v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA32F0);
  OUTLINED_FUNCTION_16();
  v1 = v0;
  *(_QWORD *)&v1[OBJC_IVAR___RPPairableHostBrowser__stateStorage] = sub_1CF6AE90C(1, MEMORY[0x1E0DEE9D8], MEMORY[0x1E0DEE9D8]);
  sub_1CF73E850();
  sub_1CF73E838();
  sub_1CF73E868();
  v2 = swift_dynamicCastClassUnconditional();
  v3 = MEMORY[0x1E0D4D330];
  v4 = (uint64_t *)&v1[OBJC_IVAR___RPPairableHostBrowser_connection];
  *v4 = v2;
  v4[1] = v3;

  v6.receiver = v1;
  v6.super_class = (Class)RPPairableHostBrowser;
  return objc_msgSendSuper2(&v6, sel_init);
}

uint64_t RPPairableHostBrowser.registerInvalidationHandler(onQueue:handler:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  id v11;
  id v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;

  if (a1)
  {
    v7 = a1;
  }
  else
  {
    if (qword_1EFBA09F0 != -1)
      swift_once();
    v7 = (id)qword_1EFBA41D8;
  }
  v8 = (_QWORD *)OUTLINED_FUNCTION_16();
  v8[2] = v7;
  v8[3] = a2;
  v8[4] = a3;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR___RPPairableHostBrowser__stateStorage);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  v11 = v7;
  swift_retain_n();
  v12 = v11;
  swift_retain();
  v13 = a1;
  os_unfair_lock_lock(v10);
  swift_beginAccess();
  v14 = *(char **)(v9 + 24);
  v15 = *(_QWORD *)(v9 + 32);
  v16 = *(_QWORD *)(v9 + 40);
  if ((unint64_t)(v14 - 1) >= 2)
  {
    sub_1CF6AE9F4(*(id *)(v9 + 24));
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_211();
    sub_1CF6AE9F4(v14);
    sub_1CF708AB4(v14, (uint64_t)v12, a2, a3);
    sub_1CF6D31DC(v14);
  }
  else
  {
    v17 = OUTLINED_FUNCTION_16();
    *(_QWORD *)(v17 + 16) = sub_1CF709D48;
    *(_QWORD *)(v17 + 24) = v8;
    swift_retain();
    sub_1CF6AE9F4(v14);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_211();
    v24 = v10;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_9_10();
      v16 = v22;
    }
    v18 = *(_QWORD *)(v16 + 16);
    if (v18 >= *(_QWORD *)(v16 + 24) >> 1)
    {
      OUTLINED_FUNCTION_9_10();
      v16 = v23;
    }
    *(_QWORD *)(v16 + 16) = v18 + 1;
    v19 = v16 + 16 * v18;
    *(_QWORD *)(v19 + 32) = sub_1CF709D74;
    *(_QWORD *)(v19 + 40) = v17;
    v10 = v24;
  }
  v20 = *(void **)(v9 + 24);
  *(_QWORD *)(v9 + 24) = v14;
  *(_QWORD *)(v9 + 32) = v15;
  *(_QWORD *)(v9 + 40) = v16;
  sub_1CF6D31DC(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v10);
  swift_release();

  return swift_release_n();
}

uint64_t sub_1CF708AB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v20[0] = a2;
  v7 = sub_1CF73ED54();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF73ED84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a1;
  aBlock[4] = sub_1CF6DFE2C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CC068;
  aBlock[3] = &block_descriptor_27;
  v17 = _Block_copy(aBlock);
  swift_retain();
  v18 = a1;
  sub_1CF73ED6C();
  v20[1] = MEMORY[0x1E0DEE9D8];
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, v8, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6A72FC();
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

void RPPairableHostBrowser.registerHostDiscoveredHandler(on:handler:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  id v7;
  _QWORD *v8;
  uint64_t v9;
  id v10;
  id v11;

  if (a1)
  {
    v7 = a1;
  }
  else
  {
    if (qword_1EFBA09F0 != -1)
      swift_once();
    v7 = (id)qword_1EFBA41D8;
  }
  v8 = (_QWORD *)OUTLINED_FUNCTION_16();
  v8[2] = v7;
  v8[3] = a2;
  v8[4] = a3;
  v9 = *(_QWORD *)(v3 + OBJC_IVAR___RPPairableHostBrowser__stateStorage);
  swift_retain();
  v10 = a1;
  v11 = v7;
  swift_retain();
  sub_1CF6D2BB8(v9, (uint64_t)sub_1CF709E20, (uint64_t)v8);
  swift_release();

}

uint64_t sub_1CF708D98(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  void *v17;
  id v18;
  _QWORD v20[2];
  _QWORD aBlock[6];

  v20[0] = a2;
  v7 = sub_1CF73ED54();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1CF73ED84();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a4;
  v16[4] = a1;
  aBlock[4] = sub_1CF6DFE2C;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1CF6CC068;
  aBlock[3] = &block_descriptor_10;
  v17 = _Block_copy(aBlock);
  swift_retain();
  v18 = a1;
  sub_1CF73ED6C();
  v20[1] = MEMORY[0x1E0DEE9D8];
  sub_1CF6935F8((unint64_t *)&qword_1ED8F79B0, v8, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED8F7A00);
  sub_1CF6A72FC();
  sub_1CF73F2F4();
  MEMORY[0x1D17D2D90](0, v15, v11, v17);
  _Block_release(v17);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1CF708F94(void *a1, int a2, void *a3, void *aBlock, uint64_t a5, uint64_t a6, void (*a7)(void *, uint64_t, uint64_t))
{
  void *v11;
  uint64_t v12;
  id v13;
  id v14;

  v11 = _Block_copy(aBlock);
  v12 = OUTLINED_FUNCTION_16();
  *(_QWORD *)(v12 + 16) = v11;
  v13 = a3;
  v14 = a1;
  a7(a3, a6, v12);

  return swift_release();
}

Swift::Void __swiftcall RPPairableHostBrowser.startBrowsing()()
{
  char *v0;
  _QWORD *v1;
  char *v2;
  char *v3;

  swift_getObjectType();
  v1 = *(_QWORD **)&v0[OBJC_IVAR___RPPairableHostBrowser__stateStorage];
  v2 = v0;
  sub_1CF6D2CC4(v1, v2);
  *(_QWORD *)(OUTLINED_FUNCTION_16() + 16) = v2;
  v3 = v2;
  sub_1CF6A1A4C();
  swift_release();
}

void sub_1CF7090BC(id *a1)
{
  if (*a1 == (id)1)
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for DeviceServiceEvent(0);
    sub_1CF6935F8(&qword_1EFBA26F0, type metadata accessor for DeviceServiceEvent, (uint64_t)&protocol conformance descriptor for DeviceServiceEvent);
    sub_1CF6935F8(&qword_1EFBA26F8, type metadata accessor for DeviceServiceEvent, (uint64_t)&protocol conformance descriptor for DeviceServiceEvent);
    sub_1CF73E7D8();
    swift_release();
    sub_1CF73E724();
    sub_1CF6D31DC(*a1);
    *a1 = (id)2;
  }
  else
  {
    sub_1CF73F348();
    sub_1CF73EF58();
    sub_1CF73F87C();
    sub_1CF73EF58();
    swift_bridgeObjectRelease();
    sub_1CF73EF58();
    sub_1CF73EF58();
    sub_1CF73EF58();
    sub_1CF73F450();
    __break(1u);
  }
}

void sub_1CF7092CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  void *v20;
  void *v21;
  os_log_type_t v22;
  NSObject *v23;
  id v24;
  id v25;
  uint8_t *v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unint64_t v30;
  void *v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;
  uint64_t v40;

  v4 = type metadata accessor for PairableHostInfo(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DeviceServiceEvent(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v38 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v38 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2700);
  MEMORY[0x1E0C80A78](v16);
  v18 = (void **)((char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v19 = MEMORY[0x1D17D3F84](a2 + 16);
  if (v19)
  {
    v20 = (void *)v19;
    sub_1CF709FB0(a1, (uint64_t)v18);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v21 = *v18;
      v22 = sub_1CF73F0E4();
      if (qword_1EFBA0990 != -1)
        swift_once();
      v23 = qword_1EFBA32A8;
      if (os_log_type_enabled((os_log_t)qword_1EFBA32A8, v22))
      {
        v24 = v21;
        v25 = v21;
        v26 = (uint8_t *)swift_slowAlloc();
        v27 = swift_slowAlloc();
        v39 = v21;
        v40 = v27;
        *(_DWORD *)v26 = 136446210;
        v28 = v21;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
        v29 = sub_1CF73EF10();
        sub_1CF68F110(v29, v30, &v40);
        v39 = v31;
        sub_1CF73F2A0();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1CF67E000, v23, v22, "Receieved XPC error from service: %{public}s", v26, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D17D3ED0](v27, -1, -1);
        MEMORY[0x1D17D3ED0](v26, -1, -1);
      }
      v32 = v21;
      sub_1CF709728(v21);

    }
    else
    {
      sub_1CF6A348C((uint64_t)v18, (uint64_t)v15, type metadata accessor for DeviceServiceEvent);
      sub_1CF709FF8((uint64_t)v15, (uint64_t)v13, type metadata accessor for DeviceServiceEvent);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1CF73F0CC();
        if (qword_1EFBA0990 != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EB0);
        v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_1CF742850;
        sub_1CF709FF8((uint64_t)v15, (uint64_t)v10, type metadata accessor for DeviceServiceEvent);
        v34 = sub_1CF73EF10();
        v36 = v35;
        *(_QWORD *)(v33 + 56) = MEMORY[0x1E0DEA968];
        *(_QWORD *)(v33 + 64) = sub_1CF6C9F38();
        *(_QWORD *)(v33 + 32) = v34;
        *(_QWORD *)(v33 + 40) = v36;
        sub_1CF73E694();
        swift_bridgeObjectRelease();

        sub_1CF6DC3F0((uint64_t)v15, type metadata accessor for DeviceServiceEvent);
        v37 = (uint64_t)v13;
      }
      else
      {
        sub_1CF6A348C((uint64_t)v13, (uint64_t)v6, type metadata accessor for PairableHostInfo);
        sub_1CF70977C((uint64_t)v6);

        sub_1CF6DC3F0((uint64_t)v6, type metadata accessor for PairableHostInfo);
        v37 = (uint64_t)v15;
      }
      sub_1CF6DC3F0(v37, type metadata accessor for DeviceServiceEvent);
    }
  }
}

void sub_1CF709728(void *a1)
{
  char *v1;
  uint64_t v3;
  id v4;

  v3 = *(_QWORD *)&v1[OBJC_IVAR___RPPairableHostBrowser__stateStorage];
  v4 = a1;
  sub_1CF6D2DA0(v3, a1, v1);
}

void sub_1CF70977C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  id v8;
  id v9;
  _QWORD *v10;
  os_unfair_lock_s *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  _QWORD v18[3];

  v2 = v1;
  v4 = type metadata accessor for PairableHostInfo(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 24;
  sub_1CF709FF8(a1, (uint64_t)v6, v7);
  v8 = objc_allocWithZone((Class)RPPairableHost);
  v9 = sub_1CF6DD338((uint64_t)v6);
  v10 = *(_QWORD **)(v2 + OBJC_IVAR___RPPairableHostBrowser__stateStorage);
  v11 = (os_unfair_lock_s *)v10[2];
  v12 = v9;
  os_unfair_lock_lock(v11);
  swift_beginAccess();
  v14 = (void *)v10[3];
  v13 = v10[4];
  v15 = v10[5];
  v18[0] = v14;
  v18[1] = v13;
  v18[2] = v15;
  sub_1CF6AE9F4(v14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1CF709B18((uint64_t)v18, (uint64_t)v12);
  v16 = (void *)v10[3];
  v10[3] = v14;
  v10[4] = v13;
  v10[5] = v15;
  sub_1CF6D31DC(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v11);

}

void sub_1CF7098E4(uint64_t a1)
{
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  if (*(_BYTE *)(a1 + 8) == 1)
  {
    v1 = *(id *)a1;
    v2 = *(id *)a1;
    sub_1CF73F0CC();
    if (qword_1EFBA0990 != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EB0);
    v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1CF742850;
    v4 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED8F7C70);
    v5 = sub_1CF73EF10();
    v7 = v6;
    *(_QWORD *)(v3 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v3 + 64) = sub_1CF6C9F38();
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v7;
    sub_1CF73E694();
    swift_bridgeObjectRelease();
    v8 = v1;
    sub_1CF709728(v1);
    sub_1CF6A7274(v1, 1);
    sub_1CF6A7274(v1, 1);
  }
}

Swift::Void __swiftcall RPPairableHostBrowser.cancel()()
{
  sub_1CF73F0E4();
  if (qword_1EFBA0990 != -1)
    swift_once();
  sub_1CF73E694();
  sub_1CF709728(0);
}

uint64_t sub_1CF709B18(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  void (*v6)(uint64_t *);
  uint64_t v7;

  v2 = *(_QWORD *)(result + 8);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v5 = v2 + 40;
    do
    {
      v6 = *(void (**)(uint64_t *))(v5 - 8);
      v7 = a2;
      swift_retain();
      v6(&v7);
      swift_release();
      v5 += 16;
      --v3;
    }
    while (v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1CF709BA0(uint64_t a1, id a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(id *);
  uint64_t v10;
  id v12;

  v4 = *(void **)a1;
  v5 = a2;
  sub_1CF6D31DC(v4);
  *(_QWORD *)a1 = a2;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    OUTLINED_FUNCTION_211();
    v8 = v6 + 40;
    do
    {
      v9 = *(void (**)(id *))(v8 - 8);
      v12 = a2;
      swift_retain();
      v9(&v12);
      swift_release();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v10 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a1 + 16) = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v10;
  return sub_1CF73E718();
}

uint64_t sub_1CF709CB4()
{
  return sub_1CF709CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C6D14);
}

uint64_t sub_1CF709CC0()
{
  return sub_1CF709CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C6FE4);
}

uint64_t sub_1CF709CCC()
{
  return sub_1CF709CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C714C);
}

uint64_t sub_1CF709CD8()
{
  return sub_1CF709CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1CF6C7168);
}

uint64_t sub_1CF709CE4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_1CF709D38(uint64_t a1)
{
  return sub_1CF709DB8(a1, (uint64_t (*)(BOOL))sub_1CF6C6D14);
}

uint64_t sub_1CF709D48(void *a1)
{
  uint64_t *v1;

  return sub_1CF708AB4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1CF709D54()
{
  OUTLINED_FUNCTION_58();
  return swift_deallocObject();
}

void sub_1CF709D74(_QWORD *a1)
{
  uint64_t v1;

  (*(void (**)(_QWORD))(v1 + 16))(*a1);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF709D94(uint64_t a1)
{
  return sub_1CF709DB8(a1, (uint64_t (*)(BOOL))sub_1CF6C6FE4);
}

uint64_t sub_1CF709DA0(uint64_t a1)
{
  return sub_1CF709DB8(a1, (uint64_t (*)(BOOL))sub_1CF6C714C);
}

uint64_t sub_1CF709DAC(uint64_t a1)
{
  return sub_1CF709DB8(a1, (uint64_t (*)(BOOL))sub_1CF6C7168);
}

uint64_t sub_1CF709DB8(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t objectdestroyTm_0()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_54();
  return swift_deallocObject();
}

uint64_t sub_1CF709E20(void *a1)
{
  uint64_t *v1;

  return sub_1CF708D98(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1CF709E2C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_14_0();
  return swift_deallocObject();
}

void sub_1CF709E48(uint64_t a1)
{
  sub_1CF7098E4(a1);
}

void sub_1CF709E54(_QWORD *a1, void **a2)
{
  void *v3;
  void *v4;
  id v5;

  v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF)
    v4 = *a2;
  if (((_DWORD)v4 + 1) <= 1)
    v5 = v3;
  *a1 = v3;
  OUTLINED_FUNCTION_1();
}

uint64_t _s5StateOwet_0(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  if ((v3 + 1) < 2)
    LODWORD(v3) = 0;
  if (v3 >= 3)
    return (v3 - 2);
  else
    return 0;
}

uint64_t _s5StateOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for RPPairableHostBrowser.State()
{
  return &type metadata for RPPairableHostBrowser.State;
}

uint64_t type metadata accessor for RPPairableHostBrowser(uint64_t a1)
{
  return sub_1CF6AA174(a1, &qword_1EFBA32E8);
}

uint64_t sub_1CF709F70()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));
  OUTLINED_FUNCTION_14_0();
  return swift_deallocObject();
}

uint64_t sub_1CF709F8C()
{
  swift_unknownObjectWeakDestroy();
  OUTLINED_FUNCTION_14_0();
  return swift_deallocObject();
}

void sub_1CF709FA8(uint64_t a1)
{
  uint64_t v1;

  sub_1CF7092CC(a1, v1);
}

uint64_t sub_1CF709FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA2700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1CF709FF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_87(a1, a2, a3);
  OUTLINED_FUNCTION_122(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_1();
}

uint64_t sub_1CF70A024()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58();

  OUTLINED_FUNCTION_54();
  return swift_deallocObject();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t sub_1CF70A05C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_58();

  OUTLINED_FUNCTION_54();
  return swift_deallocObject();
}

uint64_t _s19MutableStateStorageVwxx(void **a1)
{
  char *v1;

  v1 = (char *)*a1;
  if ((unint64_t)(v1 - 1) >= 2)

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s19MutableStateStorageVwCP_0(_QWORD *a1, uint64_t a2)
{
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(void **)a2;
  if ((unint64_t)(*(_QWORD *)a2 - 1) >= 2)
    v5 = v4;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_QWORD *)(a2 + 16);
  *a1 = v4;
  a1[1] = v6;
  a1[2] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **_s19MutableStateStorageVwca(void **a1, uint64_t a2)
{
  void *v4;
  void *v5;
  unint64_t v6;
  id v7;
  id v8;

  v4 = *a1;
  v5 = *(void **)a2;
  v6 = *(_QWORD *)a2 - 1;
  if ((char *)*a1 - 1 >= (char *)2)
  {
    if (v6 >= 2)
    {
      v8 = v5;
      *a1 = v5;

    }
    else
    {
      sub_1CF70A1D4((uint64_t)a1);
      *a1 = *(void **)a2;
    }
  }
  else
  {
    if (v6 >= 2)
      v7 = v5;
    *a1 = v5;
  }
  a1[1] = *(void **)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = *(void **)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1CF70A1D4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFBA1EA0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char **_s19MutableStateStorageVwta(char **a1, char **a2)
{
  char *v4;
  char *v5;

  v4 = *a1;
  v5 = *a2;
  if ((unint64_t)(v4 - 1) >= 2)
  {
    if ((unint64_t)(*a2 - 1) >= 2)
    {
      *a1 = v5;

      goto LABEL_6;
    }
    sub_1CF70A1D4((uint64_t)a1);
  }
  *a1 = v5;
LABEL_6:
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *_s19MutableStateStorageVMa()
{
  return &_s19MutableStateStorageVN;
}

BOOL NWInterface.isValidForNetworkControlChannel.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  uint64_t v6;

  if (qword_1EFBA0858 != -1)
    swift_once();
  swift_beginAccess();
  v0 = qword_1EFBA1158;
  v1 = unk_1EFBA1160;
  v2 = byte_1EFBA1168;
  swift_bridgeObjectRetain();
  sub_1CF68DC58(v0, v1, v2);
  v4 = v3;
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    return 1;
  v6 = sub_1CF73E9F4();
  return !InterfaceIndexCorrespondsToAppleNCMInterface(v6);
}

uint64_t TunnelPacket.init(data:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;

  sub_1CF6934BC(a1, a2);
  if (sub_1CF73E5C8() < 40)
  {
    sub_1CF6AA5E0();
    sub_1CF73F738();
    v23 = v25;
    v24 = v26;
    sub_1CF6ABB3C();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_3_0();
    sub_1CF73F780();
    swift_willThrow();
LABEL_4:
    OUTLINED_FUNCTION_27_9();
    return OUTLINED_FUNCTION_27_9();
  }
  OUTLINED_FUNCTION_47_7();
  IPv6Header.init(_:)(a1, a2);
  if (v3)
    goto LABEL_4;
  v22 = v26;
  v21 = v27;
  v8 = v28;
  v9 = v29;
  v11 = v30;
  v10 = v31;
  OUTLINED_FUNCTION_75_3();
  OUTLINED_FUNCTION_45_8();
  if (qword_1EFBA0998 != -1)
    swift_once();
  v20 = v25;
  if (byte_1EFBB2020 == 1)
  {
    OUTLINED_FUNCTION_47_7();
    OUTLINED_FUNCTION_75_3();
    OUTLINED_FUNCTION_45_8();
    sub_1CF70C83C((uint64_t)&v25, a1, a2, &v23);
    v13 = v23;
    v12 = v24;
    v14 = v8;
    v15 = v9;
  }
  else
  {
    v13 = 0;
    v14 = v28;
    v15 = v29;
    v12 = 0xF000000000000000;
  }
  v32 = v12;
  v16 = v14;
  sub_1CF6934BC(v14, v15);
  OUTLINED_FUNCTION_45_8();
  v19 = v13;
  sub_1CF6D233C(v13, v32);
  OUTLINED_FUNCTION_47_7();
  OUTLINED_FUNCTION_27_9();
  OUTLINED_FUNCTION_67_2();
  OUTLINED_FUNCTION_73_6();
  OUTLINED_FUNCTION_67_2();
  OUTLINED_FUNCTION_73_6();
  v17 = v13;
  v18 = v32;
  sub_1CF6D2368(v17, v32);
  result = OUTLINED_FUNCTION_27_9();
  *(_DWORD *)a3 = 30;
  *(_QWORD *)(a3 + 8) = v20;
  *(_QWORD *)(a3 + 16) = v22;
  *(_BYTE *)(a3 + 24) = v21;
  *(_QWORD *)(a3 + 32) = v16;
  *(_QWORD *)(a3 + 40) = v15;
  *(_QWORD *)(a3 + 48) = v11;
  *(_QWORD *)(a3 + 56) = v10;
  *(_QWORD *)(a3 + 64) = v19;
  *(_QWORD *)(a3 + 72) = v18;
  *(_QWORD *)(a3 + 80) = a1;
  *(_QWORD *)(a3 + 88) = a2;
  return result;
}

void sub_1CF70A5C0(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE v58[24];
  uint64_t v59;

  OUTLINED_FUNCTION_39_5((uint64_t)v58);
  if (v59)
  {
    OUTLINED_FUNCTION_2_16();
    OUTLINED_FUNCTION_59_6();
    v56 = v7;
    v9 = v8 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_36_7(v2, &qword_1ED8F7C80, v3, v4, v5, v6);
    v56 = 0;
    v9 = 1;
  }
  v55 = v9;
  OUTLINED_FUNCTION_39_5((uint64_t)v58);
  if (v59)
  {
    OUTLINED_FUNCTION_2_16();
    OUTLINED_FUNCTION_59_6();
    v54 = v15;
    v17 = v16 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_36_7(v10, &qword_1ED8F7C80, v11, v12, v13, v14);
    v54 = 0;
    v17 = 1;
  }
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_39_5(v18);
  if (v59)
  {
    v24 = OUTLINED_FUNCTION_2_16();
    if (v24)
      v25 = v57;
    else
      v25 = 0;
    v26 = v24 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_36_7(v19, &qword_1ED8F7C80, v20, v21, v22, v23);
    v25 = 0;
    v26 = 1;
  }
  OUTLINED_FUNCTION_86_2();
  OUTLINED_FUNCTION_39_5(v27);
  if (v59)
  {
    v33 = OUTLINED_FUNCTION_2_16();
    if (v33)
      v34 = v57;
    else
      v34 = 0;
    v35 = v33 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_36_7(v28, &qword_1ED8F7C80, v29, v30, v31, v32);
    v34 = 0;
    v35 = 1;
  }
  OUTLINED_FUNCTION_85_2();
  OUTLINED_FUNCTION_39_5(v36);
  if (v59)
  {
    v42 = OUTLINED_FUNCTION_2_16();
    if (v42)
      v43 = v57;
    else
      v43 = 0;
    v44 = v42 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_36_7(v37, &qword_1ED8F7C80, v38, v39, v40, v41);
    v43 = 0;
    v44 = 1;
  }
  OUTLINED_FUNCTION_85_2();
  OUTLINED_FUNCTION_39_5(v45);
  v46 = swift_bridgeObjectRelease();
  if (v59)
  {
    OUTLINED_FUNCTION_2_16();
    OUTLINED_FUNCTION_59_6();
    v53 = v52 ^ 1;
  }
  else
  {
    OUTLINED_FUNCTION_36_7(v46, &qword_1ED8F7C80, v47, v48, v49, v50);
    v51 = 0;
    v53 = 1;
  }
  *(_QWORD *)a1 = v56;
  *(_BYTE *)(a1 + 8) = v55;
  *(_QWORD *)(a1 + 16) = v54;
  *(_BYTE *)(a1 + 24) = v17;
  *(_QWORD *)(a1 + 32) = v25;
  *(_BYTE *)(a1 + 40) = v26;
  *(_QWORD *)(a1 + 48) = v34;
  *(_BYTE *)(a1 + 56) = v35;
  *(_QWORD *)(a1 + 64) = v43;
  *(_BYTE *)(a1 + 72) = v44;
  *(_QWORD *)(a1 + 80) = v51;
  *(_BYTE *)(a1 + 88) = v53;
}

