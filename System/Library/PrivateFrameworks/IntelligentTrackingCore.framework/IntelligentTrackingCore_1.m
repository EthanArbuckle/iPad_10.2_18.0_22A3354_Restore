uint64_t DKHandTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKHandTrackerState.init(from:));
}

uint64_t DKHandTrackerState.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(uint64_t, char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  char v56;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v3);
  v40 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24015434C();
  v41 = *(_QWORD *)(v5 - 8);
  v42 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_240154310();
  v43 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v45 = (char *)&v36 - v10;
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB148);
  v11 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion;
  v15 = type metadata accessor for DKMotion3();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v52 = v14;
  v16(v14, 1, 1, v15);
  v49 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation;
  v50 = a1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation) = 0;
  v17 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality;
  v53 = v1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7388();
  v48 = v13;
  v18 = v51;
  sub_240155024();
  if (v18)
  {
    v34 = v53;
    sub_2400E7240(v52);
    v25 = (uint64_t)v50;
    swift_release();
    type metadata accessor for DKHandTrackerState(0);
    swift_deallocPartialClassInstance();
    v35 = v25;
  }
  else
  {
    v19 = v44;
    v38 = v8;
    v39 = v15;
    v37 = v17;
    v51 = v11;
    LOBYTE(v54) = 0;
    v20 = sub_2400B3490(&qword_256FB67F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v21 = v45;
    v22 = v47;
    sub_240154DFC();
    v36 = v20;
    v23 = *(void (**)(uint64_t, char *, uint64_t))(v43 + 32);
    v23(v53 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, v21, v22);
    LOBYTE(v54) = 1;
    sub_2400B3490(&qword_256FB8D10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v24 = v42;
    sub_240154DFC();
    v45 = (char *)v23;
    v27 = v53;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v53 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, v19, v24);
    type metadata accessor for CGRect(0);
    v56 = 2;
    sub_2400B3490(&qword_256FB6880, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    v28 = (_OWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
    v29 = v55;
    *v28 = v54;
    v28[1] = v29;
    v56 = 3;
    sub_2400C2FF0();
    sub_240154DFC();
    v30 = *((_QWORD *)&v54 + 1);
    v31 = (_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
    *v31 = v54;
    v31[1] = v30;
    LOBYTE(v54) = 4;
    *(_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = sub_240154DF0();
    LOBYTE(v54) = 5;
    *(_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = sub_240154DF0();
    LOBYTE(v54) = 6;
    *(_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = sub_240154DF0();
    LOBYTE(v54) = 7;
    sub_2400B3490(&qword_256FB50D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    v32 = (uint64_t)v40;
    sub_240154DCC();
    sub_2400E71F8(v32, v52);
    LOBYTE(v54) = 8;
    v33 = v38;
    sub_240154DFC();
    ((void (*)(uint64_t, char *, uint64_t))v45)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, v33, v47);
    LOBYTE(v54) = 9;
    *(_QWORD *)(v53 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = sub_240154DF0();
    type metadata accessor for DKHandObservation(0);
    v56 = 10;
    sub_2400B3490(&qword_256FB6828, 255, type metadata accessor for DKHandObservation, (uint64_t)&protocol conformance descriptor for DKHandObservation);
    sub_240154DCC();
    *(_QWORD *)(v53 + v49) = v54;
    swift_release();
    v56 = 11;
    sub_2400C3268();
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v46);
    v34 = v53;
    *(_BYTE *)(v53 + v37) = v54;
    v35 = (uint64_t)v50;
  }
  __swift_destroy_boxed_opaque_existential_1(v35);
  return v34;
}

uint64_t sub_2400E14F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400E150C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400E1520())()
{
  return nullsub_1;
}

double sub_2400E153C(uint64_t a1, uint64_t a2)
{
  return sub_2400C2270(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
}

void sub_2400E1548(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_2400C2294(a3, a4, a5, a6, a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
}

uint64_t (*sub_2400E1554())()
{
  return nullsub_1;
}

double sub_2400E1570@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  double result;

  v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400E1594(uint64_t a1)
{
  _QWORD *v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400E15B8())()
{
  return nullsub_1;
}

uint64_t sub_2400E15D4()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId);
}

uint64_t sub_2400E15E8(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400E15FC())()
{
  return nullsub_1;
}

uint64_t sub_2400E1618()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId);
}

uint64_t sub_2400E162C(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400E1640())()
{
  return nullsub_1;
}

uint64_t sub_2400E165C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId);
}

uint64_t sub_2400E1670(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400E1684())()
{
  return nullsub_1;
}

uint64_t sub_2400E16A0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2400E71B0(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion, a1);
}

uint64_t sub_2400E16B8(uint64_t a1)
{
  _QWORD *v1;

  return sub_2400E71F8(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
}

uint64_t (*sub_2400E16CC())()
{
  return nullsub_1;
}

uint64_t sub_2400E16E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400E16FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400E1710())()
{
  return nullsub_1;
}

uint64_t sub_2400E172C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400E1740(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400E1754())()
{
  return nullsub_1;
}

uint64_t sub_2400E1770@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKHandTrackerState, (uint64_t (*)(uint64_t))DKHandTrackerState.init(from:), a2);
}

uint64_t sub_2400E1794(_QWORD *a1)
{
  return sub_2400E06FC(a1);
}

uint64_t sub_2400E17B4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400E17C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400E17DC())()
{
  return nullsub_1;
}

uint64_t sub_2400E17F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKHandTrackerState(0);
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400E1838()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400E1840(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t DKBodyKeyPointList.__allocating_init(keypoints:)(uint64_t a1)
{
  swift_allocObject();
  return DKBodyKeyPointList.init(keypoints:)(a1);
}

uint64_t DKBodyKeyPointList.init(keypoints:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  unint64_t v9;
  __int128 v10;
  __int128 v12;
  _BYTE v13[40];
  _OWORD v14[2];
  char v15;

  v2 = v1;
  *(_QWORD *)(v1 + 16) = a1;
  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    *(_QWORD *)&v14[0] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2400E5918(0, v3, 0);
    v4 = *(_QWORD *)&v14[0];
    v6 = *(_QWORD *)(*(_QWORD *)&v14[0] + 16);
    v7 = 32;
    do
    {
      v8 = *(_OWORD *)(a1 + v7);
      *(_QWORD *)&v14[0] = v4;
      v9 = *(_QWORD *)(v4 + 24);
      if (v6 >= v9 >> 1)
      {
        v12 = v8;
        sub_2400E5918(v9 > 1, v6 + 1, 1);
        v8 = v12;
        v4 = *(_QWORD *)&v14[0];
      }
      *(_QWORD *)(v4 + 16) = v6 + 1;
      *(_OWORD *)(v4 + 16 * v6 + 32) = v8;
      v7 += 24;
      ++v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  sub_2400767D4(v4, (uint64_t)v13);
  swift_bridgeObjectRelease();
  sub_24008BADC((uint64_t)v13, (uint64_t)v14);
  if ((v15 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DKBodyKeyPointList();
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    v10 = v14[1];
    *(_OWORD *)(v2 + 24) = v14[0];
    *(_OWORD *)(v2 + 40) = v10;
  }
  return v2;
}

uint64_t sub_2400E19D0(void *a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v4;
  int v6;
  id v7;
  void *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  CGFloat v12;
  int v13;
  id v14;
  void *v15;
  double v16;
  double v17;
  double v18;
  double v19;
  float v20;
  float v21;
  double v22;
  double v23;
  unint64_t v24;
  unint64_t v25;
  double *v26;
  int64_t v27;
  CGFloat v28;
  unint64_t v29;
  uint64_t v30;
  __int128 v31;
  unint64_t v32;
  __int128 v34;
  char v35;
  uint64_t v36;
  __int128 v37;
  int v38;
  unsigned __int8 v39;
  _BYTE v40[40];
  _BYTE v41[40];
  _OWORD v42[2];
  char v43;
  CGFloat v44[4];
  char v45;

  v4 = v3;
  v38 = *a2;
  v6 = *a3;
  v7 = objc_msgSend(a1, sel_keypoints);
  if (!v7)
  {

    goto LABEL_37;
  }
  v8 = v7;
  sub_2400EB438();
  v9 = sub_2401547A8();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    v10 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (v10)
      goto LABEL_4;
  }
  else
  {
    v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_4:
      *(_QWORD *)&v44[0] = MEMORY[0x24BEE4AF8];
      sub_2400E5934(0, v10 & ~(v10 >> 63), 0);
      if (v10 < 0)
      {
        __break(1u);
        JUMPOUT(0x2400E1DE0);
      }
      v36 = v4;
      v11 = 0;
      v12 = v44[0];
      v35 = v6;
      v13 = v6 - 1;
      do
      {
        if ((v9 & 0xC000000000000001) != 0)
          v14 = (id)MEMORY[0x24267D4E0](v11, v9);
        else
          v14 = *(id *)(v9 + 8 * v11 + 32);
        v15 = v14;
        objc_msgSend(v14, sel_location);
        v17 = v16;
        v19 = 1.0 - v18;
        objc_msgSend(v15, sel_confidence);
        v21 = v20;

        if (v38 == 1)
        {
          v22 = v17;
          v23 = v19;
          switch(v13)
          {
            case 0:
              break;
            case 1:
              v23 = 1.0 - v19;
              v22 = 1.0 - v17;
              break;
            case 2:
              v22 = 1.0 - v19;
              v23 = v17;
              break;
            case 3:
              v23 = 1.0 - v17;
              v22 = v19;
              break;
            case 6:
              v22 = v19;
              v23 = v17;
              break;
            default:
              goto LABEL_14;
          }
        }
        else
        {
          v22 = v19;
          v23 = v17;
          switch(v13)
          {
            case 0:
              v23 = 1.0 - v19;
              v22 = v17;
              break;
            case 1:
              v22 = 1.0 - v17;
              v23 = v19;
              break;
            case 2:
            case 6:
              break;
            case 3:
              v23 = 1.0 - v17;
              v22 = 1.0 - v19;
              break;
            default:
LABEL_14:
              v22 = 0.0;
              v23 = 0.0;
              break;
          }
        }
        v44[0] = v12;
        v25 = *(_QWORD *)(*(_QWORD *)&v12 + 16);
        v24 = *(_QWORD *)(*(_QWORD *)&v12 + 24);
        if (v25 >= v24 >> 1)
        {
          sub_2400E5934(v24 > 1, v25 + 1, 1);
          v12 = v44[0];
        }
        ++v11;
        *(_QWORD *)(*(_QWORD *)&v12 + 16) = v25 + 1;
        v26 = (double *)(*(_QWORD *)&v12 + 24 * v25);
        v26[4] = v23;
        v26[5] = v22;
        v26[6] = v21;
      }
      while (v10 != v11);
      swift_bridgeObjectRelease();
      v4 = v36;
      LOBYTE(v6) = v35;
      goto LABEL_27;
    }
  }
  swift_bridgeObjectRelease();
  v12 = MEMORY[0x24BEE4AF8];
LABEL_27:
  *(CGFloat *)(v4 + 16) = v12;
  v27 = *(_QWORD *)(*(_QWORD *)&v12 + 16);
  v28 = MEMORY[0x24BEE4AF8];
  if (v27)
  {
    *(_QWORD *)&v44[0] = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2400E5918(0, v27, 0);
    v28 = v44[0];
    v29 = *(_QWORD *)(*(_QWORD *)&v44[0] + 16);
    v30 = 32;
    do
    {
      v31 = *(_OWORD *)(*(_QWORD *)&v12 + v30);
      v44[0] = v28;
      v32 = *(_QWORD *)(*(_QWORD *)&v28 + 24);
      if (v29 >= v32 >> 1)
      {
        v37 = v31;
        sub_2400E5918(v32 > 1, v29 + 1, 1);
        v31 = v37;
        v28 = v44[0];
      }
      *(_QWORD *)(*(_QWORD *)&v28 + 16) = v29 + 1;
      *(_OWORD *)(*(_QWORD *)&v28 + 16 * v29 + 32) = v31;
      v30 += 24;
      ++v29;
      --v27;
    }
    while (v27);
    swift_bridgeObjectRelease();
  }
  sub_2400767D4(*(uint64_t *)&v28, (uint64_t)v40);
  swift_bridgeObjectRelease();
  sub_24008BADC((uint64_t)v40, (uint64_t)v44);
  if ((v45 & 1) != 0)
  {

  }
  else
  {
    LOBYTE(v42[0]) = v6;
    v39 = v38;
    sub_24007C92C(v42, &v39, (uint64_t)v41, v44[0], v44[1], v44[2], v44[3]);

    sub_24008BADC((uint64_t)v41, (uint64_t)v42);
    if ((v43 & 1) == 0)
    {
      v34 = v42[1];
      *(_OWORD *)(v4 + 24) = v42[0];
      *(_OWORD *)(v4 + 40) = v34;
      return v4;
    }
  }
  swift_bridgeObjectRelease();
LABEL_37:
  type metadata accessor for DKBodyKeyPointList();
  swift_deallocPartialClassInstance();
  return 0;
}

IntelligentTrackingCore::DKBodyKeyPoint __swiftcall DKBodyKeyPoint.init(location:confidence:port:orientation:)(CGPoint location, Swift::Double confidence, IntelligentTrackingCore::DKCameraPort port, IntelligentTrackingCore::DKCameraOrientation orientation)
{
  double *v4;
  double *v6;
  char v7;
  double v8;
  double v9;
  double v10;
  double v11;
  char v12;
  double v13;
  char v14;
  char v15;
  IntelligentTrackingCore::DKBodyKeyPoint result;

  v6 = v4;
  v7 = *(_BYTE *)port;
  v15 = *(_BYTE *)orientation;
  v14 = v7;
  sub_24007CD94(&v15, &v14, location.x);
  v9 = v8;
  v11 = v10;
  v13 = 0.0;
  if ((v12 & 1) != 0)
  {
    v11 = 0.0;
    v9 = 0.0;
  }
  *v6 = v9;
  v6[1] = v11;
  v6[2] = confidence;
  result.confidence = v13;
  result.location.y = v11;
  result.location.x = v9;
  return result;
}

uint64_t sub_2400E1E84()
{
  _BYTE *v0;

  if (*v0)
    return 1952671090;
  else
    return 0x746E696F7079656BLL;
}

uint64_t sub_2400E1EBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400EB200(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400E1EE0()
{
  sub_2400E7D60();
  return sub_240155048();
}

uint64_t sub_2400E1F08()
{
  sub_2400E7D60();
  return sub_240155054();
}

uint64_t DKBodyKeyPointList.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKBodyKeyPointList.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2400E1F70(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  _OWORD v11[2];
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB150);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7D60();
  sub_240155030();
  *(_QWORD *)&v11[0] = *(_QWORD *)(v3 + 16);
  v12 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB160);
  sub_2400E7DE8(&qword_256FBB168, (uint64_t (*)(void))sub_2400E7DA4, MEMORY[0x24BEE12A0]);
  sub_240154E80();
  if (!v2)
  {
    v9 = *(_OWORD *)(v3 + 40);
    v11[0] = *(_OWORD *)(v3 + 24);
    v11[1] = v9;
    v12 = 1;
    type metadata accessor for CGRect(0);
    sub_2400B3490(&qword_256FB67A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_240154E80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DKBodyKeyPointList.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKBodyKeyPointList.init(from:)(a1);
  return v2;
}

uint64_t DKBodyKeyPointList.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  __int128 v9;
  _OWORD v10[2];
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB178);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7D60();
  sub_240155024();
  if (v2)
  {
    type metadata accessor for DKBodyKeyPointList();
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB160);
    v11 = 0;
    sub_2400E7DE8(&qword_256FBB180, (uint64_t (*)(void))sub_2400E7E50, MEMORY[0x24BEE12D0]);
    sub_240154DFC();
    *(_QWORD *)(v1 + 16) = *(_QWORD *)&v10[0];
    type metadata accessor for CGRect(0);
    v11 = 1;
    sub_2400B3490(&qword_256FB6880, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v9 = v10[1];
    *(_OWORD *)(v1 + 24) = v10[0];
    *(_OWORD *)(v1 + 40) = v9;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t sub_2400E2350@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for DKBodyKeyPointList();
  v5 = swift_allocObject();
  result = DKBodyKeyPointList.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_2400E23A4(_QWORD *a1)
{
  return sub_2400E1F70(a1);
}

double DKBodyKeyPoint.location.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void DKBodyKeyPoint.location.setter(double a1, double a2)
{
  double *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*DKBodyKeyPoint.location.modify())()
{
  return nullsub_1;
}

double DKBodyKeyPoint.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void DKBodyKeyPoint.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*DKBodyKeyPoint.confidence.modify())()
{
  return nullsub_1;
}

uint64_t sub_2400E2404()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E656469666E6F63;
  else
    return 0x6E6F697461636F6CLL;
}

uint64_t sub_2400E2444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400EB2EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400E2468()
{
  sub_2400E7E94();
  return sub_240155048();
}

uint64_t sub_2400E2490()
{
  sub_2400E7E94();
  return sub_240155054();
}

uint64_t DKBodyKeyPoint.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB190);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7E94();
  sub_240155030();
  v11[0] = v8;
  v11[1] = v9;
  v12 = 0;
  type metadata accessor for CGPoint(0);
  sub_2400B3490(&qword_256FB5098, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDBD878]);
  sub_240154E80();
  if (!v2)
  {
    LOBYTE(v11[0]) = 1;
    sub_240154E68();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DKBodyKeyPoint.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB1A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7E94();
  sub_240155024();
  if (!v2)
  {
    type metadata accessor for CGPoint(0);
    v14[15] = 0;
    sub_2400B3490(&qword_256FB50D0, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDBD888]);
    sub_240154DFC();
    v9 = v15;
    v10 = v16;
    LOBYTE(v15) = 1;
    sub_240154DE4();
    v12 = v11;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2400E27B4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DKBodyKeyPoint.init(from:)(a1, a2);
}

uint64_t sub_2400E27C8(_QWORD *a1)
{
  return DKBodyKeyPoint.encode(to:)(a1);
}

uint64_t sub_2400E27DC@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400E27F0(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400E2804())()
{
  return nullsub_1;
}

uint64_t sub_2400E281C@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400E2830(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400E2844())()
{
  return nullsub_1;
}

double sub_2400E285C()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
}

_QWORD *sub_2400E2868(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2400E2874())()
{
  return nullsub_1;
}

double sub_2400E288C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity + 8);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400E28AC(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400E28CC())()
{
  return nullsub_1;
}

uint64_t sub_2400E28E4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId);
}

uint64_t sub_2400E28F4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400E2904())()
{
  return nullsub_1;
}

uint64_t sub_2400E291C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
}

uint64_t sub_2400E292C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400E293C())()
{
  return nullsub_1;
}

uint64_t sub_2400E2954()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId);
}

uint64_t sub_2400E2964(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400E2974())()
{
  return nullsub_1;
}

uint64_t sub_2400E298C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2400E71B0(a1, (uint64_t)v10);
  return sub_2400E71F8((uint64_t)v10, *a2 + *a5);
}

uint64_t sub_2400E2A14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2400E71B0(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, a1);
}

uint64_t sub_2400E2A28(uint64_t a1)
{
  uint64_t v1;

  return sub_2400E71F8(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion);
}

uint64_t (*sub_2400E2A38())()
{
  return nullsub_1;
}

uint64_t sub_2400E2A50@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400E2A64(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400E2A78())()
{
  return nullsub_1;
}

uint64_t sub_2400E2A90()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400E2AA0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400E2AB0())()
{
  return nullsub_1;
}

uint64_t sub_2400E2AC8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw);
}

uint64_t sub_2400E2AE0(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400E2AFC())()
{
  return nullsub_1;
}

uint64_t sub_2400E2B14()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch);
}

uint64_t sub_2400E2B2C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400E2B48())()
{
  return nullsub_1;
}

uint64_t sub_2400E2B60()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll);
}

uint64_t sub_2400E2B78(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400E2B94())()
{
  return nullsub_1;
}

uint64_t sub_2400E2BAC()
{
  return swift_retain();
}

uint64_t sub_2400E2BBC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker) = a1;
  return swift_release();
}

uint64_t (*sub_2400E2BD4())()
{
  return nullsub_1;
}

uint64_t sub_2400E2BEC()
{
  return swift_retain();
}

uint64_t sub_2400E2BFC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker) = a1;
  return swift_release();
}

uint64_t (*sub_2400E2C14())()
{
  return nullsub_1;
}

uint64_t sub_2400E2C2C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400E2C3C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400E2C54())()
{
  return nullsub_1;
}

uint64_t sub_2400E2C6C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
  v3 = v2[1];
  v4 = v2[2];
  v5 = v2[3];
  *a2 = *v2;
  a2[1] = v3;
  a2[2] = v4;
  a2[3] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_2400E2CB4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = (_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
  *v5 = *a1;
  v5[1] = v2;
  v5[2] = v3;
  v5[3] = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_2400E2D30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 8);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 16);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 24);
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_2400E2D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation;
  *(_OWORD *)v4 = *(_OWORD *)a1;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t (*sub_2400E2DC4())()
{
  return nullsub_1;
}

uint64_t sub_2400E2DDC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = type metadata accessor for DKPersonGroup(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2400E7ED8(a1, (uint64_t)v6);
  return sub_2400E7F1C((uint64_t)v6, *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
}

uint64_t sub_2400E2E60@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2400E7ED8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group, a1);
}

uint64_t sub_2400E2E74(uint64_t a1)
{
  uint64_t v1;

  return sub_2400E7F1C(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
}

uint64_t (*sub_2400E2E84())()
{
  return nullsub_1;
}

double sub_2400E2E9C()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect);
}

_QWORD *sub_2400E2EA8(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect, a1, a2, a3, a4);
}

uint64_t (*sub_2400E2EB4())()
{
  return nullsub_1;
}

uint64_t sub_2400E2ECC()
{
  return swift_retain();
}

uint64_t sub_2400E2EDC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints) = a1;
  return swift_release();
}

uint64_t (*sub_2400E2EF4())()
{
  return nullsub_1;
}

uint64_t sub_2400E2F0C()
{
  return swift_retain();
}

uint64_t sub_2400E2F1C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2400E2F34())()
{
  return nullsub_1;
}

uint64_t sub_2400E2F4C()
{
  return swift_retain();
}

uint64_t sub_2400E2F5C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2400E2F74())()
{
  return nullsub_1;
}

uint64_t sub_2400E2F8C()
{
  return swift_retain();
}

uint64_t sub_2400E2F9C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2400E2FB4())()
{
  return nullsub_1;
}

uint64_t sub_2400E2FCC()
{
  return swift_retain();
}

uint64_t sub_2400E2FDC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2400E2FF4())()
{
  return nullsub_1;
}

uint64_t sub_2400E300C()
{
  return swift_retain();
}

uint64_t sub_2400E301C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence) = a1;
  return swift_release();
}

uint64_t (*sub_2400E3034())()
{
  return nullsub_1;
}

void sub_2400E304C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type);
}

_BYTE *sub_2400E3060(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type) = *result;
  return result;
}

uint64_t (*sub_2400E3074())()
{
  return nullsub_1;
}

void sub_2400E308C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification);
}

_BYTE *sub_2400E30A0(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification) = *result;
  return result;
}

uint64_t (*sub_2400E30B4())()
{
  return nullsub_1;
}

void sub_2400E30CC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection);
}

_BYTE *sub_2400E30E0(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection) = *result;
  return result;
}

uint64_t (*sub_2400E30F4())()
{
  return nullsub_1;
}

uint64_t sub_2400E310C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400E3138 + 4 * byte_24015C10A[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400E3138()
{
  return 1684632949;
}

uint64_t sub_2400E3144()
{
  return 1952671090;
}

uint64_t sub_2400E3150()
{
  return 0x797469746E656469;
}

uint64_t sub_2400E3168()
{
  return 0x644974736E61;
}

uint64_t sub_2400E317C()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400E3198()
{
  return 0x644970756F7267;
}

uint64_t sub_2400E31B0()
{
  return 0x6E6F69746F6DLL;
}

uint64_t sub_2400E31C4()
{
  return 0x616470557473616CLL;
}

unint64_t sub_2400E31E4()
{
  return 0xD000000000000015;
}

uint64_t sub_2400E3364()
{
  return 0x6572694465636166;
}

uint64_t sub_2400E3388(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400E003C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_2400E310C);
}

uint64_t sub_2400E3394(uint64_t a1, uint64_t a2)
{
  return sub_2400E00D4(a1, a2, (void (*)(uint64_t))sub_2400E310C);
}

uint64_t sub_2400E33A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400E0144(a1, a2, a3, (void (*)(_QWORD))sub_2400E310C);
}

uint64_t sub_2400E33AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400E0190(a1, a2, a3, (void (*)(uint64_t))sub_2400E310C);
}

uint64_t sub_2400E33B8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB3E8();
  *a1 = result;
  return result;
}

uint64_t sub_2400E33E4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2400E310C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2400E340C()
{
  unsigned __int8 *v0;

  return sub_2400E310C(*v0);
}

uint64_t sub_2400E3414@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB3E8();
  *a1 = result;
  return result;
}

void sub_2400E3438(_BYTE *a1@<X8>)
{
  *a1 = 25;
}

uint64_t sub_2400E3444()
{
  sub_2400E7F9C();
  return sub_240155048();
}

uint64_t sub_2400E346C()
{
  sub_2400E7F9C();
  return sub_240155054();
}

uint64_t sub_2400E3494(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,__int128 *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char *a35,char *a36,char *a37)
{
  uint64_t v37;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  double *v59;
  _QWORD *v60;
  uint64_t v61;
  double *v62;
  uint64_t v64;
  uint64_t v66;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  char v80;
  char v81;
  char v82;

  v66 = *a3;
  v45 = a3[1];
  v78 = *a27;
  v76 = *((_QWORD *)a27 + 3);
  v77 = *((_QWORD *)a27 + 2);
  v81 = *a36;
  v82 = *a35;
  v80 = *a37;
  v46 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion;
  v64 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion;
  v47 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 1, 1, v47);
  v48 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw;
  *(_QWORD *)v48 = 0;
  *(_BYTE *)(v48 + 8) = 1;
  v49 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch;
  *(_QWORD *)v49 = 0;
  *(_BYTE *)(v49 + 8) = 1;
  v50 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll;
  *(_QWORD *)v50 = 0;
  *(_BYTE *)(v50 + 8) = 1;
  v51 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker) = 0;
  v52 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker) = 0;
  v53 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers) = MEMORY[0x24BEE4AF8];
  v68 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints) = 0;
  v71 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type;
  *(_BYTE *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type) = 0;
  v70 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification;
  *(_BYTE *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification) = 2;
  v69 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection;
  *(_BYTE *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection) = 3;
  v54 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time;
  v55 = sub_240154310();
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 32);
  v56(v54, a1, v55);
  v57 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid;
  v58 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 32))(v57, a2, v58);
  v59 = (double *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
  *v59 = a9;
  v59[1] = a10;
  v59[2] = a11;
  v59[3] = a12;
  v60 = (_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
  *v60 = v66;
  v60[1] = v45;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = a4;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = a5;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = a6;
  sub_2400E71F8(a7, v64);
  v56(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, a8, v55);
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = a17;
  *(_QWORD *)v48 = a18;
  *(_BYTE *)(v48 + 8) = a19 & 1;
  *(_QWORD *)v49 = a20;
  *(_BYTE *)(v49 + 8) = a21 & 1;
  *(_QWORD *)v50 = a22;
  *(_BYTE *)(v50 + 8) = a23 & 1;
  *(_QWORD *)(v37 + v51) = a24;
  swift_release();
  *(_QWORD *)(v37 + v52) = a25;
  swift_release();
  *(_QWORD *)(v37 + v53) = a26;
  swift_bridgeObjectRelease();
  v61 = v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation;
  *(_OWORD *)v61 = v78;
  *(_QWORD *)(v61 + 16) = v77;
  *(_QWORD *)(v61 + 24) = v76;
  sub_2400E80C0(a28, v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
  v62 = (double *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect);
  *v62 = a13;
  v62[1] = a14;
  v62[2] = a15;
  v62[3] = a16;
  *(_QWORD *)(v37 + v68) = a29;
  swift_release();
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence) = a30;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence) = a31;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence) = a32;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence) = a33;
  *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence) = a34;
  *(_BYTE *)(v37 + v71) = v82;
  *(_BYTE *)(v37 + v70) = v81;
  *(_BYTE *)(v37 + v69) = v80;
  return v37;
}

uint64_t DKPersonTrackerState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_2400E7240(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_2400E7F60(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKPersonTrackerState.__deallocating_deinit()
{
  DKPersonTrackerState.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2400E3A88(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  char v49;

  v36 = type metadata accessor for DKPersonGroup(0);
  MEMORY[0x24BDAC7A8](v36);
  v37 = (uint64_t)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v3);
  v39 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_24015434C();
  v42 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v41 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v38 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB1A8);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7F9C();
  sub_240155030();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v11, v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, v6);
  LOBYTE(v47) = 0;
  sub_2400B3490(&qword_256FB66E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v44 = v15;
  v45 = v12;
  v17 = v43;
  sub_240154E80();
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v44, v45);
  }
  else
  {
    v43 = v13;
    v18 = *(void (**)(char *, uint64_t))(v7 + 8);
    v18(v11, v6);
    v19 = v46;
    v20 = v40;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v40);
    LOBYTE(v47) = 1;
    sub_2400B3490(&qword_256FB8CE8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    v35 = v18;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v41, v20);
    v21 = *(_OWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 16);
    v47 = *(_OWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
    v48 = v21;
    v49 = 2;
    type metadata accessor for CGRect(0);
    v23 = v22;
    v24 = sub_2400B3490(&qword_256FB67A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_240154E80();
    v41 = (char *)v24;
    v42 = v23;
    v26 = *(_QWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity + 8);
    *(_QWORD *)&v47 = *(_QWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
    *((_QWORD *)&v47 + 1) = v26;
    v49 = 3;
    sub_2400C2FAC();
    sub_240154E80();
    LOBYTE(v47) = 4;
    sub_240154E74();
    LOBYTE(v47) = 5;
    sub_240154E74();
    LOBYTE(v47) = 6;
    sub_240154E74();
    v27 = v39;
    sub_2400E71B0(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, v39);
    LOBYTE(v47) = 7;
    v40 = type metadata accessor for DKMotion3();
    sub_2400B3490(&qword_256FB50A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    sub_240154E50();
    sub_2400E7240(v27);
    v28 = v38;
    v16(v38, v19 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, v6);
    LOBYTE(v47) = 8;
    sub_240154E80();
    v35(v28, v6);
    LOBYTE(v47) = 9;
    sub_240154E74();
    LOBYTE(v47) = 10;
    sub_240154E38();
    LOBYTE(v47) = 11;
    sub_240154E38();
    LOBYTE(v47) = 12;
    sub_240154E38();
    v29 = *(_QWORD *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 16);
    v30 = *(_QWORD *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation + 24);
    v47 = *(_OWORD *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
    *(_QWORD *)&v48 = v29;
    *((_QWORD *)&v48 + 1) = v30;
    v49 = 13;
    sub_24009C474();
    sub_240154E80();
    sub_2400E7ED8(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group, v37);
    LOBYTE(v47) = 14;
    sub_2400B3490(&qword_256FBB1B8, 255, type metadata accessor for DKPersonGroup, (uint64_t)&protocol conformance descriptor for DKPersonGroup);
    sub_240154E80();
    sub_2400E7F60(v37);
    v31 = *(_OWORD *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect + 16);
    v47 = *(_OWORD *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect);
    v48 = v31;
    v49 = 15;
    sub_240154E80();
    *(_QWORD *)&v47 = *(_QWORD *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints);
    v49 = 16;
    type metadata accessor for DKBodyKeyPointList();
    sub_2400B3490(&qword_256FB7A38, v32, (uint64_t (*)(uint64_t))type metadata accessor for DKBodyKeyPointList, (uint64_t)&protocol conformance descriptor for DKBodyKeyPointList);
    sub_240154E50();
    *(_QWORD *)&v47 = *(_QWORD *)(v46
                                + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence);
    v49 = 17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6068);
    sub_2400E8104(&qword_256FBB1C0, &qword_256FB6068, (uint64_t)&protocol conformance descriptor for DKProbabilityValue<A>);
    sub_240154E80();
    *(_QWORD *)&v47 = *(_QWORD *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence);
    v49 = 18;
    sub_240154E80();
    *(_QWORD *)&v47 = *(_QWORD *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
    v49 = 19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6228);
    sub_2400E8104(&qword_256FBB1C8, &qword_256FB6228, (uint64_t)&protocol conformance descriptor for DKProbabilityValue<A>);
    sub_240154E80();
    *(_QWORD *)&v47 = *(_QWORD *)(v46
                                + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence);
    v49 = 20;
    sub_240154E80();
    *(_QWORD *)&v47 = *(_QWORD *)(v46
                                + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence);
    v49 = 21;
    sub_240154E80();
    LOBYTE(v47) = *(_BYTE *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type);
    v49 = 22;
    sub_2400E7FE0();
    sub_240154E80();
    LOBYTE(v47) = *(_BYTE *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification);
    v49 = 23;
    sub_2400E8024();
    sub_240154E80();
    LOBYTE(v47) = *(_BYTE *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection);
    v49 = 24;
    sub_2400E8068();
    v34 = v44;
    v33 = v45;
    sub_240154E80();
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v34, v33);
  }
}

uint64_t DKPersonTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKPersonTrackerState.init(from:));
}

uint64_t DKPersonTrackerState.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, char *, uint64_t);
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  char *v33;
  char *v34;
  uint64_t v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  char v45;
  uint64_t v46;
  uint64_t *v47;
  char v48;
  uint64_t v49;
  uint64_t *v50;
  char v51;
  __int128 v52;
  _OWORD *v53;
  _OWORD *v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  __int128 v85;
  __int128 v86;
  char v87;

  v84 = a1;
  v62 = type metadata accessor for DKPersonGroup(0);
  MEMORY[0x24BDAC7A8](v62);
  v63 = (uint64_t)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v3);
  v67 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v71 = sub_24015434C();
  v68 = *(_QWORD *)(v71 - 8);
  MEMORY[0x24BDAC7A8](v71);
  v69 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_240154310();
  v70 = *(_QWORD *)(v74 - 8);
  MEMORY[0x24BDAC7A8](v74);
  v65 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v72 = (char *)&v57 - v8;
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB1E8);
  v73 = *(_QWORD *)(v76 - 8);
  MEMORY[0x24BDAC7A8](v76);
  v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion;
  v12 = type metadata accessor for DKMotion3();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v83 = v11;
  v66 = v12;
  v13(v11, 1, 1);
  v14 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw;
  *(_QWORD *)v14 = 0;
  v64 = (uint64_t *)v14;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll;
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  v78 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker) = 0;
  v79 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker) = 0;
  v17 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers) = MEMORY[0x24BEE4AF8];
  v80 = v17;
  v81 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints) = 0;
  v18 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type) = 0;
  v19 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification) = 2;
  v20 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection;
  v82 = v1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection) = 3;
  __swift_project_boxed_opaque_existential_1(v84, v84[3]);
  sub_2400E7F9C();
  v75 = v10;
  v21 = v77;
  sub_240155024();
  if (v21)
  {
    v22 = v82;
    sub_2400E7240(v83);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v30 = v84;
    type metadata accessor for DKPersonTrackerState(0);
    swift_deallocPartialClassInstance();
    v31 = v30;
  }
  else
  {
    v77 = (uint64_t *)v15;
    v61 = (uint64_t *)v16;
    v58 = v18;
    v59 = v19;
    v60 = v20;
    LOBYTE(v85) = 0;
    v23 = sub_2400B3490(&qword_256FB67F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v24 = v72;
    v25 = v74;
    sub_240154DFC();
    v57 = v23;
    v26 = v82;
    v27 = *(void (**)(uint64_t, char *, uint64_t))(v70 + 32);
    v27(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, v24, v25);
    LOBYTE(v85) = 1;
    sub_2400B3490(&qword_256FB8D10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v28 = v69;
    v29 = v71;
    sub_240154DFC();
    (*(void (**)(uint64_t, char *, uint64_t))(v68 + 32))(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v28, v29);
    type metadata accessor for CGRect(0);
    v34 = v33;
    v87 = 2;
    v35 = sub_2400B3490(&qword_256FB6880, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    v72 = (char *)v35;
    v36 = (_OWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
    v37 = v86;
    *v36 = v85;
    v36[1] = v37;
    v87 = 3;
    sub_2400C2FF0();
    sub_240154DFC();
    v38 = *((_QWORD *)&v85 + 1);
    v39 = (_QWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
    *v39 = v85;
    v39[1] = v38;
    LOBYTE(v85) = 4;
    *(_QWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = sub_240154DF0();
    LOBYTE(v85) = 5;
    *(_QWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = sub_240154DF0();
    LOBYTE(v85) = 6;
    v40 = sub_240154DF0();
    v69 = v34;
    *(_QWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = v40;
    LOBYTE(v85) = 7;
    sub_2400B3490(&qword_256FB50D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    v41 = (uint64_t)v67;
    sub_240154DCC();
    sub_2400E71F8(v41, v83);
    LOBYTE(v85) = 8;
    v42 = v65;
    sub_240154DFC();
    v27(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, v42, v74);
    LOBYTE(v85) = 9;
    *(_QWORD *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = sub_240154DF0();
    LOBYTE(v85) = 10;
    v43 = sub_240154DB4();
    v44 = v64;
    *v64 = v43;
    *((_BYTE *)v44 + 8) = v45 & 1;
    LOBYTE(v85) = 11;
    v46 = sub_240154DB4();
    v47 = v77;
    *v77 = v46;
    *((_BYTE *)v47 + 8) = v48 & 1;
    LOBYTE(v85) = 12;
    v49 = sub_240154DB4();
    v50 = v61;
    *v61 = v49;
    *((_BYTE *)v50 + 8) = v51 & 1;
    v87 = 13;
    sub_24009CA30();
    sub_240154DFC();
    v52 = v86;
    v53 = (_OWORD *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastObservation);
    *v53 = v85;
    v53[1] = v52;
    LOBYTE(v85) = 14;
    sub_2400B3490(&qword_256FBB1F0, 255, type metadata accessor for DKPersonGroup, (uint64_t)&protocol conformance descriptor for DKPersonGroup);
    sub_240154DFC();
    sub_2400E80C0(v63, v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group);
    v87 = 15;
    sub_240154DFC();
    v54 = (_OWORD *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect);
    v55 = v86;
    *v54 = v85;
    v54[1] = v55;
    type metadata accessor for DKBodyKeyPointList();
    v87 = 16;
    sub_2400B3490(&qword_256FB7A48, v56, (uint64_t (*)(uint64_t))type metadata accessor for DKBodyKeyPointList, (uint64_t)&protocol conformance descriptor for DKBodyKeyPointList);
    sub_240154DCC();
    *(_QWORD *)(v82 + v81) = v85;
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6068);
    v87 = 17;
    sub_2400E8104(&qword_256FBB1F8, &qword_256FB6068, (uint64_t)&protocol conformance descriptor for DKProbabilityValue<A>);
    sub_240154DFC();
    *(_QWORD *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence) = v85;
    v87 = 18;
    sub_240154DFC();
    *(_QWORD *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence) = v85;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6228);
    v87 = 19;
    sub_2400E8104(&qword_256FBB200, &qword_256FB6228, (uint64_t)&protocol conformance descriptor for DKProbabilityValue<A>);
    sub_240154DFC();
    *(_QWORD *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence) = v85;
    v87 = 20;
    sub_240154DFC();
    *(_QWORD *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence) = v85;
    v87 = 21;
    sub_240154DFC();
    *(_QWORD *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence) = v85;
    v87 = 22;
    sub_2400E8144();
    sub_240154DFC();
    *(_BYTE *)(v82 + v58) = v85;
    v87 = 23;
    sub_2400E8188();
    sub_240154DFC();
    *(_BYTE *)(v82 + v59) = v85;
    v87 = 24;
    sub_2400E81CC();
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v75, v76);
    v22 = v82;
    *(_BYTE *)(v82 + v60) = v85;
    v31 = v84;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return v22;
}

uint64_t sub_2400E53E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400E53F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400E540C())()
{
  return nullsub_1;
}

uint64_t sub_2400E5428@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400E543C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400E5450())()
{
  return nullsub_1;
}

double sub_2400E546C(uint64_t a1, uint64_t a2)
{
  return sub_2400C2270(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
}

void sub_2400E5478(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_2400C2294(a3, a4, a5, a6, a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
}

uint64_t (*sub_2400E5484())()
{
  return nullsub_1;
}

double sub_2400E54A0@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  double result;

  v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400E54C4(uint64_t a1)
{
  _QWORD *v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400E54E8())()
{
  return nullsub_1;
}

uint64_t sub_2400E5504()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId);
}

uint64_t sub_2400E5518(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400E552C())()
{
  return nullsub_1;
}

uint64_t sub_2400E5548()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
}

uint64_t sub_2400E555C(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400E5570())()
{
  return nullsub_1;
}

uint64_t sub_2400E558C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId);
}

uint64_t sub_2400E55A0(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400E55B4())()
{
  return nullsub_1;
}

uint64_t sub_2400E55D0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2400E71B0(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, a1);
}

uint64_t sub_2400E55E8(uint64_t a1)
{
  _QWORD *v1;

  return sub_2400E71F8(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion);
}

uint64_t (*sub_2400E55FC())()
{
  return nullsub_1;
}

uint64_t sub_2400E5618@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400E562C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400E5640())()
{
  return nullsub_1;
}

uint64_t sub_2400E565C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400E5670(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400E5684())()
{
  return nullsub_1;
}

uint64_t sub_2400E56A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKPersonTrackerState, (uint64_t (*)(uint64_t))DKPersonTrackerState.init(from:), a2);
}

uint64_t sub_2400E56C4(_QWORD *a1)
{
  return sub_2400E3A88(a1);
}

uint64_t sub_2400E56E4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKPersonTrackerState(0);
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400E5724(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2400E5A30(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2400E5740(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2400E6FAC(a1, a2, a3, *v3, &qword_256FB4EF0);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2400E5764(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E5BA4(a1, a2, a3, (_QWORD *)*v3, &qword_256FB4F50, &qword_256FB4F58);
  *v3 = result;
  return result;
}

uint64_t sub_2400E5790(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E6958(a1, a2, a3, (_QWORD *)*v3, &qword_256FBC1B0, &qword_256FB6610);
  *v3 = result;
  return result;
}

uint64_t sub_2400E57BC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E6958(a1, a2, a3, (_QWORD *)*v3, &qword_256FBC1A8, &qword_256FB6608);
  *v3 = result;
  return result;
}

uint64_t sub_2400E57E8(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E6958(a1, a2, a3, (_QWORD *)*v3, &qword_256FBC1A0, &qword_256FB6600);
  *v3 = result;
  return result;
}

uint64_t sub_2400E5814(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E6778(a1, a2, a3, (_QWORD *)*v3, &qword_256FBC190, &qword_256FB65E0);
  *v3 = result;
  return result;
}

uint64_t sub_2400E5840(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E6DCC(a1, a2, a3, (_QWORD *)*v3, &qword_256FB4F10, type metadata accessor for DKPersonGroupFilter.Track);
  *v3 = result;
  return result;
}

uint64_t sub_2400E586C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E6DCC(a1, a2, a3, (_QWORD *)*v3, &qword_256FB4ED8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
  *v3 = result;
  return result;
}

uint64_t sub_2400E5898(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E5BA4(a1, a2, a3, (_QWORD *)*v3, &qword_256FB4F80, &qword_256FB4F88);
  *v3 = result;
  return result;
}

uint64_t sub_2400E58C4(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2400E603C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2400E58E0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2400E6198(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2400E58FC(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E631C(a1, a2, a3, (_QWORD *)*v3);
  *v3 = result;
  return result;
}

uint64_t sub_2400E5918(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2400E64A4(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2400E5934(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2400E6600(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2400E5950(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E6778(a1, a2, a3, (_QWORD *)*v3, &qword_256FBC138, &qword_256FBC140);
  *v3 = result;
  return result;
}

uint64_t sub_2400E597C(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E6958(a1, a2, a3, (_QWORD *)*v3, &qword_256FBC148, &qword_256FB65D8);
  *v3 = result;
  return result;
}

uint64_t sub_2400E59A8(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2400E6B00(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2400E59C4(char a1, int64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t result;

  result = sub_2400E6DCC(a1, a2, a3, (_QWORD *)*v3, &qword_256FB4F90, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
  *v3 = result;
  return result;
}

uint64_t sub_2400E59F0(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2400E6C5C(a1, a2, a3, *v3);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2400E5A0C(char a1, int64_t a2, char a3)
{
  char **v3;
  uint64_t result;

  result = sub_2400E6FAC(a1, a2, a3, *v3, &qword_256FBC130);
  *v3 = (char *)result;
  return result;
}

uint64_t sub_2400E5A30(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E5B8C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2400E6FAC(a1, a2, a3, a4, &qword_256FB4EF0);
}

uint64_t sub_2400E5B98(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2400E5EC8(a1, a2, a3, a4, &qword_256FB4F08);
}

uint64_t sub_2400E5BA4(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E5D48(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E38);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 1;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8])
      memmove(v13, v14, 32 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E5EB0(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2400E5EC8(a1, a2, a3, a4, &qword_256FB4E40);
}

uint64_t sub_2400E5EBC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_2400E5EC8(a1, a2, a3, a4, &qword_256FB4E48);
}

uint64_t sub_2400E5EC8(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v11 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v13 >= &v14[24 * v9])
      memmove(v13, v14, 24 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[24 * v9] || v13 >= &v14[24 * v9])
  {
    memcpy(v13, v14, 24 * v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E603C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC160);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 25;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8])
      memmove(v13, v14, 8 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E6198(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC168);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E631C(char a1, int64_t a2, char a3, _QWORD *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC170);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v13 = (unint64_t)(v10 + 4);
  v14 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8)
      memmove(v10 + 4, a4 + 4, 16 * v8);
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC178);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E64A4(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC198);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E6600(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC158);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8])
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E6778(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E6958(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v15 = (unint64_t)(v13 + 4);
  v16 = (unint64_t)(a4 + 4);
  if ((a1 & 1) != 0)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11)
      memmove(v13 + 4, a4 + 4, 24 * v11);
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E6B00(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC180);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E6C5C(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EF8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 29;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8])
      memmove(v13, v14, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E6DB8(char a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2400E6DCC(a1, a2, a3, a4, &qword_256FBC188, (uint64_t (*)(_QWORD))MEMORY[0x24BDCDAC0]);
}

uint64_t sub_2400E6DCC(char a1, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1)
    goto LABEL_34;
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if ((a1 & 1) != 0)
  {
    if (v16 < a4 || v21 >= &v22[*(_QWORD *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  v23 = *(_QWORD *)(v19 + 72) * v11;
  v24 = &v21[v23];
  v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E6FAC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v7 = *((_QWORD *)a4 + 3);
    v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v8 = a2;
    }
  }
  else
  {
    v8 = a2;
  }
  v9 = *((_QWORD *)a4 + 2);
  if (v8 <= v9)
    v10 = *((_QWORD *)a4 + 2);
  else
    v10 = v8;
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    v11 = (char *)swift_allocObject();
    v12 = _swift_stdlib_malloc_size(v11);
    v13 = v12 - 32;
    if (v12 < 32)
      v13 = v12 - 25;
    *((_QWORD *)v11 + 2) = v9;
    *((_QWORD *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    v11 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v11 + 32;
  v15 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9])
      memmove(v14, v15, 8 * v9);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400E7104(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_240135794(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_2400E7400(v5);
  *a1 = v2;
  return result;
}

unint64_t sub_2400E716C()
{
  unint64_t result;

  result = qword_256FBB0E0;
  if (!qword_256FBB0E0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D16C, &type metadata for DKIdentityConfidence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBB0E0);
  }
  return result;
}

uint64_t sub_2400E71B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400E71F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400E7240(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2400E7280()
{
  unint64_t result;

  result = qword_256FBB0F8;
  if (!qword_256FBB0F8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D11C, &type metadata for DKFaceTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBB0F8);
  }
  return result;
}

uint64_t type metadata accessor for DKFaceTrackerState(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FBB288);
}

unint64_t sub_2400E72D8()
{
  unint64_t result;

  result = qword_256FBB110;
  if (!qword_256FBB110)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D0CC, &type metadata for DKBodyTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBB110);
  }
  return result;
}

uint64_t type metadata accessor for DKBodyTrackerState(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBB508);
}

unint64_t sub_2400E7330()
{
  unint64_t result;

  result = qword_256FBB128;
  if (!qword_256FBB128)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D07C, &type metadata for DKObjectTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBB128);
  }
  return result;
}

uint64_t type metadata accessor for DKObjectTrackerState(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBB720);
}

unint64_t sub_2400E7388()
{
  unint64_t result;

  result = qword_256FBB140;
  if (!qword_256FBB140)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D02C, &type metadata for DKHandTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBB140);
  }
  return result;
}

uint64_t type metadata accessor for DKHandTrackerState(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBB938);
}

uint64_t type metadata accessor for DKBodyKeyPointList()
{
  return objc_opt_self();
}

uint64_t sub_2400E7400(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double *v28;
  double v29;
  uint64_t v30;
  double *v31;
  double v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t i;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  double *__dst;

  v3 = a1[1];
  result = sub_240154EB0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = *a1 + 8;
      v86 = -1;
      for (i = 1; i != v3; ++i)
      {
        v88 = *(double *)(v84 + 16 * i + 8);
        v89 = v86;
        v90 = v85;
        do
        {
          if (v88 >= *(double *)v90)
            break;
          if (!v84)
            goto LABEL_141;
          v91 = *(_QWORD *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(_QWORD *)(v90 - 8) = v91;
          *(double *)v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v101 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v93 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        v94 = *v101;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v94)
            goto LABEL_145;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_2400E7AD8((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_2401356E0((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_134;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_135;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v103 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_2401547FC();
    *(_QWORD *)(v8 + 16) = v7;
    v103 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v102 = *a1 + 40;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v104 = v6;
  v105 = v3;
  v106 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 16 * v10 + 8);
      v16 = *(double *)(v11 + 16 * v14 + 8);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v102 + 16 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 16 * v10;
          v21 = 16 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v20;
              v25 = *(_QWORD *)(v11 + v21);
              v26 = *(_QWORD *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(_QWORD *)(v24 - 16) = v25;
              *(_QWORD *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = (double *)(v11 + 16 * v10);
      do
      {
        v29 = *(double *)(v11 + 16 * v10 + 8);
        v30 = v14;
        v31 = v28;
        do
        {
          if (v29 >= *(v31 - 1))
            break;
          if (!v11)
            goto LABEL_142;
          v32 = *v31;
          *(_OWORD *)v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_240135220(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v106;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_240135220((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v106;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_120;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_121;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_123;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_126;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_130;
            v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_77;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_122;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_125;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_128;
        if (__OFADD__(v59, v64))
          goto LABEL_129;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_83:
          if (v65)
            v37 = v49;
          goto LABEL_85;
        }
LABEL_77:
        if ((v60 & 1) != 0)
          goto LABEL_124;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_127;
        if (v71 < v59)
          goto LABEL_15;
LABEL_85:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_2400E7AD8((double *)(v11 + 16 * *(_QWORD *)v78), (double *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_93;
        if (v81 < v79)
          goto LABEL_117;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_118;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_119;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v106;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v104;
    v3 = v105;
    if (v10 >= v105)
    {
      v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_2400E7AD8(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double *v20;
  double *v21;
  uint64_t result;
  char *v23;
  double *v24;
  double *v25;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v25 = __src;
  v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v18 = &v4[2 * v13];
      v23 = (char *)v18;
      v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v19 = (double *)(a3 - 16);
        do
        {
          v20 = v19 + 2;
          if (*(v18 - 1) >= *(v6 - 1))
          {
            v23 = (char *)(v18 - 2);
            if (v20 < v18 || v19 >= v18 || v20 != v18)
              *(_OWORD *)v19 = *((_OWORD *)v18 - 1);
            v21 = v6;
            v18 -= 2;
            if (v6 <= v7)
              break;
          }
          else
          {
            v21 = v6 - 2;
            if (v20 != v6 || v19 >= v6)
              *(_OWORD *)v19 = *(_OWORD *)v21;
            v25 = v6 - 2;
            if (v21 <= v7)
              break;
          }
          v19 -= 2;
          v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_24013552C((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[2 * v10];
    v23 = (char *)v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      v15 = v4;
      while (1)
      {
        if (v6[1] >= v15[1])
        {
          v4 = v15 + 2;
          v17 = v15;
          v16 = v6;
          if (v7 == v15)
          {
            v15 += 2;
            if (v7 < v4)
              goto LABEL_22;
          }
          else
          {
            v15 += 2;
          }
        }
        else
        {
          v16 = v6 + 2;
          v17 = v6;
          if (v7 == v6 && v7 < v16)
            goto LABEL_22;
        }
        *(_OWORD *)v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 2;
        if (v15 < v14)
        {
          v6 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v24 = v4;
        v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

unint64_t sub_2400E7D60()
{
  unint64_t result;

  result = qword_256FBB158;
  if (!qword_256FBB158)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CFDC, &type metadata for DKBodyKeyPointList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBB158);
  }
  return result;
}

unint64_t sub_2400E7DA4()
{
  unint64_t result;

  result = qword_256FBB170;
  if (!qword_256FBB170)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKBodyKeyPoint, &type metadata for DKBodyKeyPoint);
    atomic_store(result, (unint64_t *)&qword_256FBB170);
  }
  return result;
}

uint64_t sub_2400E7DE8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FBB160);
    v8 = a2();
    result = MEMORY[0x24267E0BC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2400E7E50()
{
  unint64_t result;

  result = qword_256FBB188;
  if (!qword_256FBB188)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKBodyKeyPoint, &type metadata for DKBodyKeyPoint);
    atomic_store(result, (unint64_t *)&qword_256FBB188);
  }
  return result;
}

unint64_t sub_2400E7E94()
{
  unint64_t result;

  result = qword_256FBB198;
  if (!qword_256FBB198)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CF8C, &type metadata for DKBodyKeyPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBB198);
  }
  return result;
}

uint64_t sub_2400E7ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKPersonGroup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400E7F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKPersonGroup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400E7F60(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DKPersonGroup(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2400E7F9C()
{
  unint64_t result;

  result = qword_256FBB1B0;
  if (!qword_256FBB1B0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CF3C, &type metadata for DKPersonTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBB1B0);
  }
  return result;
}

unint64_t sub_2400E7FE0()
{
  unint64_t result;

  result = qword_256FBB1D0;
  if (!qword_256FBB1D0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKObservationType, &type metadata for DKObservationType);
    atomic_store(result, (unint64_t *)&qword_256FBB1D0);
  }
  return result;
}

unint64_t sub_2400E8024()
{
  unint64_t result;

  result = qword_256FBB1D8;
  if (!qword_256FBB1D8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKMotionClassification, &type metadata for DKMotionClassification);
    atomic_store(result, (unint64_t *)&qword_256FBB1D8);
  }
  return result;
}

unint64_t sub_2400E8068()
{
  unint64_t result;

  result = qword_256FBB1E0;
  if (!qword_256FBB1E0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFaceDirection, &type metadata for DKFaceDirection);
    atomic_store(result, (unint64_t *)&qword_256FBB1E0);
  }
  return result;
}

uint64_t type metadata accessor for DKPersonTrackerState(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBBC60);
}

uint64_t sub_2400E80C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKPersonGroup(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400E8104(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24267E0BC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2400E8144()
{
  unint64_t result;

  result = qword_256FBB208;
  if (!qword_256FBB208)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKObservationType, &type metadata for DKObservationType);
    atomic_store(result, (unint64_t *)&qword_256FBB208);
  }
  return result;
}

unint64_t sub_2400E8188()
{
  unint64_t result;

  result = qword_256FBB210;
  if (!qword_256FBB210)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKMotionClassification, &type metadata for DKMotionClassification);
    atomic_store(result, (unint64_t *)&qword_256FBB210);
  }
  return result;
}

unint64_t sub_2400E81CC()
{
  unint64_t result;

  result = qword_256FBB218;
  if (!qword_256FBB218)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFaceDirection, &type metadata for DKFaceDirection);
    atomic_store(result, (unint64_t *)&qword_256FBB218);
  }
  return result;
}

unint64_t sub_2400E8214()
{
  unint64_t result;

  result = qword_256FBB220;
  if (!qword_256FBB220)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIdentityConfidence, &type metadata for DKIdentityConfidence);
    atomic_store(result, (unint64_t *)&qword_256FBB220);
  }
  return result;
}

uint64_t sub_2400E8258(_QWORD *a1)
{
  uint64_t result;

  a1[2] = sub_2400B3490(&qword_256FB6848, 255, type metadata accessor for DKFaceTrackerState, (uint64_t)&protocol conformance descriptor for DKFaceTrackerState);
  a1[3] = sub_2400B3490(&qword_256FB6760, 255, type metadata accessor for DKFaceTrackerState, (uint64_t)&protocol conformance descriptor for DKFaceTrackerState);
  result = sub_2400B3490(&qword_256FBB228, 255, type metadata accessor for DKFaceTrackerState, (uint64_t)&protocol conformance descriptor for DKFaceTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2400E82DC(_QWORD *a1)
{
  uint64_t result;

  a1[2] = sub_2400B3490(&qword_256FB6858, 255, type metadata accessor for DKBodyTrackerState, (uint64_t)&protocol conformance descriptor for DKBodyTrackerState);
  a1[3] = sub_2400B3490(&qword_256FB6778, 255, type metadata accessor for DKBodyTrackerState, (uint64_t)&protocol conformance descriptor for DKBodyTrackerState);
  result = sub_2400B3490(&qword_256FBB230, 255, type metadata accessor for DKBodyTrackerState, (uint64_t)&protocol conformance descriptor for DKBodyTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2400E8360(_QWORD *a1)
{
  uint64_t result;

  a1[2] = sub_2400B3490(&qword_256FBB238, 255, type metadata accessor for DKObjectTrackerState, (uint64_t)&protocol conformance descriptor for DKObjectTrackerState);
  a1[3] = sub_2400B3490(&qword_256FBB240, 255, type metadata accessor for DKObjectTrackerState, (uint64_t)&protocol conformance descriptor for DKObjectTrackerState);
  result = sub_2400B3490(&qword_256FBB248, 255, type metadata accessor for DKObjectTrackerState, (uint64_t)&protocol conformance descriptor for DKObjectTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2400E83E4(_QWORD *a1)
{
  uint64_t result;

  a1[2] = sub_2400B3490(&qword_256FB6868, 255, type metadata accessor for DKHandTrackerState, (uint64_t)&protocol conformance descriptor for DKHandTrackerState);
  a1[3] = sub_2400B3490(&qword_256FB6790, 255, type metadata accessor for DKHandTrackerState, (uint64_t)&protocol conformance descriptor for DKHandTrackerState);
  result = sub_2400B3490(&qword_256FBB250, 255, type metadata accessor for DKHandTrackerState, (uint64_t)&protocol conformance descriptor for DKHandTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2400E8468(_QWORD *a1)
{
  uint64_t result;

  a1[2] = sub_2400B3490(&qword_256FB6878, 255, type metadata accessor for DKPersonTrackerState, (uint64_t)&protocol conformance descriptor for DKPersonTrackerState);
  a1[3] = sub_2400B3490(&qword_256FB67A0, 255, type metadata accessor for DKPersonTrackerState, (uint64_t)&protocol conformance descriptor for DKPersonTrackerState);
  result = sub_2400B3490(&qword_256FBB258, 255, type metadata accessor for DKPersonTrackerState, (uint64_t)&protocol conformance descriptor for DKPersonTrackerState);
  a1[4] = result;
  return result;
}

uint64_t sub_2400E84EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E8500(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time);
}

uint64_t sub_2400E8524@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_2400E8538(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid);
}

__n128 sub_2400E855C@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400E8578(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2400E8584@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2400E85A8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
}

_QWORD *sub_2400E85B4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId);
  return result;
}

_QWORD *sub_2400E85CC(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = *result;
  return result;
}

_QWORD *sub_2400E85E4@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId);
  return result;
}

_QWORD *sub_2400E85FC(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = *result;
  return result;
}

_QWORD *sub_2400E8614@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId);
  return result;
}

_QWORD *sub_2400E862C(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2400E8644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2400E71B0(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion, a2);
}

uint64_t sub_2400E865C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400E298C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
}

uint64_t sub_2400E8678@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E868C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated);
}

_QWORD *sub_2400E86B0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate);
  return result;
}

_QWORD *sub_2400E86C8(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2400E86E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation, a2);
}

uint64_t sub_2400E86EC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation);
}

_QWORD *sub_2400E86F8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400E871C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw);
}

_QWORD *sub_2400E8728@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400E874C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch);
}

_QWORD *sub_2400E8758@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400E877C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll);
}

uint64_t sub_2400E8788@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E879C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time);
}

uint64_t sub_2400E87C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_2400E87D4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid);
}

__n128 sub_2400E87F8@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400E8814(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2400E8820@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2400E8844(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
}

_QWORD *sub_2400E8850@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId);
  return result;
}

_QWORD *sub_2400E8868(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = *result;
  return result;
}

_QWORD *sub_2400E8880@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId);
  return result;
}

_QWORD *sub_2400E8898(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = *result;
  return result;
}

_QWORD *sub_2400E88B0@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId);
  return result;
}

_QWORD *sub_2400E88C8(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2400E88E0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2400E71B0(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion, a2);
}

uint64_t sub_2400E88F8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400E298C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
}

uint64_t sub_2400E8914@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E8928(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated);
}

_QWORD *sub_2400E894C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate);
  return result;
}

_QWORD *sub_2400E8964(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2400E897C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation, a2);
}

uint64_t sub_2400E8988(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation);
}

uint64_t sub_2400E8994@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E89A8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time);
}

uint64_t sub_2400E89CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_2400E89E0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid);
}

__n128 sub_2400E8A04@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400E8A20(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2400E8A2C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2400E8A50(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
}

_QWORD *sub_2400E8A5C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId);
  return result;
}

_QWORD *sub_2400E8A74(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = *result;
  return result;
}

_QWORD *sub_2400E8A8C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId);
  return result;
}

_QWORD *sub_2400E8AA4(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = *result;
  return result;
}

_QWORD *sub_2400E8ABC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId);
  return result;
}

_QWORD *sub_2400E8AD4(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2400E8AEC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2400E71B0(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion, a2);
}

uint64_t sub_2400E8B04(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400E298C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
}

uint64_t sub_2400E8B20@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E8B34(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated);
}

_QWORD *sub_2400E8B58@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate);
  return result;
}

_QWORD *sub_2400E8B70(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2400E8B88@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation, a2);
}

uint64_t sub_2400E8B94(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation);
}

uint64_t sub_2400E8BA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E8BB4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time);
}

uint64_t sub_2400E8BD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_2400E8BEC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid);
}

__n128 sub_2400E8C10@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400E8C2C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2400E8C38@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2400E8C5C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
}

_QWORD *sub_2400E8C68@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId);
  return result;
}

_QWORD *sub_2400E8C80(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = *result;
  return result;
}

_QWORD *sub_2400E8C98@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId);
  return result;
}

_QWORD *sub_2400E8CB0(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = *result;
  return result;
}

_QWORD *sub_2400E8CC8@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId);
  return result;
}

_QWORD *sub_2400E8CE0(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2400E8CF8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2400E71B0(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion, a2);
}

uint64_t sub_2400E8D10(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400E298C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
}

uint64_t sub_2400E8D2C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E8D40(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated);
}

_QWORD *sub_2400E8D64@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate);
  return result;
}

_QWORD *sub_2400E8D7C(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2400E8D94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation, a2);
}

uint64_t sub_2400E8DA0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation);
}

_QWORD *sub_2400E8DAC@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality);
  return result;
}

_BYTE *sub_2400E8DC4(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality) = *result;
  return result;
}

uint64_t sub_2400E8DDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400E8DEC(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

__n128 sub_2400E8E1C@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(*(_QWORD *)a1 + 24);
  v3 = *(_OWORD *)(*(_QWORD *)a1 + 40);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

__n128 sub_2400E8E30(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a2;
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 40) = v4;
  return result;
}

uint64_t sub_2400E8E44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E8E58(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time);
}

uint64_t sub_2400E8E7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_2400E8E90(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid);
}

__n128 sub_2400E8EB4@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400E8ED0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect).n128_u64[0];
  return result;
}

double sub_2400E8EDC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_2400E8F00(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_6Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_identity);
}

double keypath_set_6Tm(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  double result;
  uint64_t v6;

  result = *(double *)(a1 + 8);
  v6 = *a2 + *a5;
  *(_QWORD *)v6 = *(_QWORD *)a1;
  *(double *)(v6 + 8) = result;
  return result;
}

_QWORD *sub_2400E8F2C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId);
  return result;
}

_QWORD *sub_2400E8F44(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_anstId) = *result;
  return result;
}

_QWORD *sub_2400E8F5C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
  return result;
}

_QWORD *sub_2400E8F74(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId) = *result;
  return result;
}

_QWORD *sub_2400E8F8C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId);
  return result;
}

_QWORD *sub_2400E8FA4(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_groupId) = *result;
  return result;
}

uint64_t sub_2400E8FBC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2400E71B0(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, a2);
}

uint64_t sub_2400E8FD4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400E298C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion);
}

uint64_t sub_2400E8FF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400E9004(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lastUpdated);
}

_QWORD *sub_2400E9028@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate);
  return result;
}

_QWORD *sub_2400E9040(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_framesSinceLastUpdate) = *result;
  return result;
}

_QWORD *sub_2400E9058@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400E907C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceYaw);
}

_QWORD *sub_2400E9088@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400E90AC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_facePitch);
}

_QWORD *sub_2400E90B8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400E90DC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceRoll);
}

uint64_t sub_2400E90E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker, a2);
}

uint64_t sub_2400E90F4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceTracker);
}

uint64_t sub_2400E9100@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker, a2);
}

uint64_t sub_2400E910C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyTracker);
}

uint64_t sub_2400E9118@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400E9130(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_handTrackers) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2400E9170@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2400E7ED8(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_group, a2);
}

__n128 sub_2400E918C@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400E91A8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyRect).n128_u64[0];
  return result;
}

uint64_t sub_2400E91B4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints, a2);
}

uint64_t keypath_get_19Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  *a3 = *(_QWORD *)(*a1 + *a2);
  return swift_retain();
}

uint64_t sub_2400E91D4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_bodyKeypoints);
}

uint64_t sub_2400E91E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence);
  return swift_retain();
}

uint64_t sub_2400E91F8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence);
}

uint64_t sub_2400E9204@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence);
  return swift_retain();
}

uint64_t sub_2400E921C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence);
}

uint64_t sub_2400E9228@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
  return swift_retain();
}

uint64_t sub_2400E9240(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
}

uint64_t sub_2400E924C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence);
  return swift_retain();
}

uint64_t sub_2400E9264(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence);
}

uint64_t sub_2400E9270@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence);
  return swift_retain();
}

uint64_t sub_2400E9288(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_selectionConfidence);
}

_QWORD *sub_2400E9294@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type);
  return result;
}

_BYTE *sub_2400E92AC(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type) = *result;
  return result;
}

_QWORD *sub_2400E92C4@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification);
  return result;
}

_BYTE *sub_2400E92DC(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification) = *result;
  return result;
}

_QWORD *sub_2400E92F4@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection);
  return result;
}

_BYTE *sub_2400E930C(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection) = *result;
  return result;
}

ValueMetadata *type metadata accessor for DKIdentityConfidence()
{
  return &type metadata for DKIdentityConfidence;
}

uint64_t dispatch thunk of DKTrackerState.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DKTrackerState.uuid.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DKTrackerState.uuid.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of DKTrackerState.rect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DKTrackerState.rect.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of DKTrackerState.rect.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of DKTrackerState.identity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of DKTrackerState.identity.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of DKTrackerState.identity.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of DKTrackerState.anstId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of DKTrackerState.anstId.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of DKTrackerState.anstId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of DKTrackerState.trackerId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of DKTrackerState.trackerId.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of DKTrackerState.trackerId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of DKTrackerState.groupId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of DKTrackerState.groupId.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of DKTrackerState.groupId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of DKTrackerState.motion.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of DKTrackerState.motion.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of DKTrackerState.motion.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of DKTrackerState.lastUpdated.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of DKTrackerState.lastUpdated.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 216))();
}

uint64_t dispatch thunk of DKTrackerState.lastUpdated.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 224))();
}

uint64_t dispatch thunk of DKTrackerState.framesSinceLastUpdate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of DKTrackerState.framesSinceLastUpdate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 240))();
}

uint64_t dispatch thunk of DKTrackerState.framesSinceLastUpdate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 248))();
}

uint64_t sub_2400E940C()
{
  return type metadata accessor for DKFaceTrackerState(0);
}

void sub_2400E9414()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_240154310();
  if (v0 <= 0x3F)
  {
    sub_24015434C();
    if (v1 <= 0x3F)
    {
      sub_2400E96F0();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DKFaceTrackerState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKFaceTrackerState.uuid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKFaceTrackerState.uuid.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKFaceTrackerState.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKFaceTrackerState.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKFaceTrackerState.identity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKFaceTrackerState.identity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKFaceTrackerState.groupId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKFaceTrackerState.groupId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastObservation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastObservation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKFaceTrackerState.lastObservation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKFaceTrackerState.faceYaw.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKFaceTrackerState.faceYaw.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 464))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceTrackerState.faceYaw.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKFaceTrackerState.facePitch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKFaceTrackerState.facePitch.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 488))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceTrackerState.facePitch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of DKFaceTrackerState.faceRoll.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of DKFaceTrackerState.faceRoll.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 512))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceTrackerState.faceRoll.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKFaceTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 528))(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of DKFaceTrackerState.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of DKFaceTrackerState.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 544))();
}

void sub_2400E96F0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256FBB298[0])
  {
    type metadata accessor for DKMotion3();
    v0 = sub_240154A30();
    if (!v1)
      atomic_store(v0, qword_256FBB298);
  }
}

uint64_t sub_2400E9744()
{
  return type metadata accessor for DKBodyTrackerState(0);
}

uint64_t method lookup function for DKBodyTrackerState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKBodyTrackerState.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKBodyTrackerState.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKBodyTrackerState.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKBodyTrackerState.uuid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKBodyTrackerState.uuid.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKBodyTrackerState.uuid.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKBodyTrackerState.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKBodyTrackerState.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKBodyTrackerState.identity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKBodyTrackerState.identity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKBodyTrackerState.identity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKBodyTrackerState.anstId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKBodyTrackerState.anstId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKBodyTrackerState.anstId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKBodyTrackerState.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKBodyTrackerState.trackerId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKBodyTrackerState.trackerId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKBodyTrackerState.groupId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKBodyTrackerState.groupId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKBodyTrackerState.groupId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKBodyTrackerState.motion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKBodyTrackerState.motion.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKBodyTrackerState.motion.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKBodyTrackerState.framesSinceLastUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKBodyTrackerState.framesSinceLastUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKBodyTrackerState.framesSinceLastUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastObservation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastObservation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKBodyTrackerState.lastObservation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKBodyTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 432))();
}

uint64_t dispatch thunk of DKBodyTrackerState.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKBodyTrackerState.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t sub_2400E9924()
{
  return type metadata accessor for DKObjectTrackerState(0);
}

void sub_2400E992C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_240154310();
  if (v0 <= 0x3F)
  {
    sub_24015434C();
    if (v1 <= 0x3F)
    {
      sub_2400E96F0();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DKObjectTrackerState()
{
  return swift_lookUpClassMethod();
}

uint64_t _s23IntelligentTrackingCore18DKBodyTrackerStateC4rectSo6CGRectVvgTj_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_2400E9A20()
{
  return type metadata accessor for DKHandTrackerState(0);
}

void sub_2400E9A28()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_240154310();
  if (v0 <= 0x3F)
  {
    sub_24015434C();
    if (v1 <= 0x3F)
    {
      sub_2400E96F0();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DKHandTrackerState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKHandTrackerState.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKHandTrackerState.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKHandTrackerState.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKHandTrackerState.uuid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKHandTrackerState.uuid.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKHandTrackerState.uuid.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKHandTrackerState.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKHandTrackerState.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKHandTrackerState.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKHandTrackerState.identity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKHandTrackerState.identity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKHandTrackerState.identity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKHandTrackerState.anstId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKHandTrackerState.anstId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKHandTrackerState.anstId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKHandTrackerState.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKHandTrackerState.trackerId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKHandTrackerState.trackerId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKHandTrackerState.groupId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKHandTrackerState.groupId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKHandTrackerState.groupId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKHandTrackerState.motion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKHandTrackerState.motion.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKHandTrackerState.motion.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKHandTrackerState.framesSinceLastUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKHandTrackerState.framesSinceLastUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKHandTrackerState.framesSinceLastUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastObservation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastObservation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKHandTrackerState.lastObservation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKHandTrackerState.chirality.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKHandTrackerState.chirality.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKHandTrackerState.chirality.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKHandTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t dispatch thunk of DKHandTrackerState.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKHandTrackerState.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t method lookup function for DKBodyKeyPointList()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKBodyKeyPointList.keypoints.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.keypoints.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.keypoints.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.__allocating_init(keypoints:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKBodyKeyPointList.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for DKBodyKeyPoint()
{
  return &type metadata for DKBodyKeyPoint;
}

uint64_t sub_2400E9DB4()
{
  return type metadata accessor for DKPersonTrackerState(0);
}

void sub_2400E9DBC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_240154310();
  if (v0 <= 0x3F)
  {
    sub_24015434C();
    if (v1 <= 0x3F)
    {
      sub_2400E96F0();
      if (v2 <= 0x3F)
      {
        type metadata accessor for DKPersonGroup(319);
        if (v3 <= 0x3F)
          swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for DKPersonTrackerState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKPersonTrackerState.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKPersonTrackerState.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKPersonTrackerState.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKPersonTrackerState.uuid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKPersonTrackerState.uuid.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKPersonTrackerState.uuid.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKPersonTrackerState.identity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKPersonTrackerState.identity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKPersonTrackerState.identity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKPersonTrackerState.anstId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKPersonTrackerState.anstId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKPersonTrackerState.anstId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKPersonTrackerState.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKPersonTrackerState.trackerId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKPersonTrackerState.trackerId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKPersonTrackerState.groupId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKPersonTrackerState.groupId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKPersonTrackerState.groupId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motion.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motion.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of DKPersonTrackerState.framesSinceLastUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKPersonTrackerState.framesSinceLastUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKPersonTrackerState.framesSinceLastUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceYaw.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceYaw.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 552))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonTrackerState.faceYaw.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of DKPersonTrackerState.facePitch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of DKPersonTrackerState.facePitch.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 576))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonTrackerState.facePitch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceRoll.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceRoll.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 600))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonTrackerState.faceRoll.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of DKPersonTrackerState.handTrackers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of DKPersonTrackerState.handTrackers.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of DKPersonTrackerState.handTrackers.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastObservation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastObservation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lastObservation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of DKPersonTrackerState.group.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of DKPersonTrackerState.group.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of DKPersonTrackerState.group.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyRect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyRect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyRect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyKeypoints.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyKeypoints.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of DKPersonTrackerState.bodyKeypoints.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of DKPersonTrackerState.speakingConfidence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of DKPersonTrackerState.speakingConfidence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of DKPersonTrackerState.speakingConfidence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lookingConfidence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lookingConfidence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of DKPersonTrackerState.lookingConfidence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rankConfidence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rankConfidence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of DKPersonTrackerState.rankConfidence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of DKPersonTrackerState.saliencyConfidence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of DKPersonTrackerState.saliencyConfidence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of DKPersonTrackerState.saliencyConfidence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of DKPersonTrackerState.selectionConfidence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 880))();
}

uint64_t dispatch thunk of DKPersonTrackerState.selectionConfidence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t dispatch thunk of DKPersonTrackerState.selectionConfidence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of DKPersonTrackerState.type.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t dispatch thunk of DKPersonTrackerState.type.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t dispatch thunk of DKPersonTrackerState.type.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motionClassification.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motionClassification.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 936))();
}

uint64_t dispatch thunk of DKPersonTrackerState.motionClassification.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 944))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceDirection.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceDirection.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t dispatch thunk of DKPersonTrackerState.faceDirection.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 968))();
}

uint64_t dispatch thunk of DKPersonTrackerState.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t dispatch thunk of DKPersonTrackerState.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 992))();
}

uint64_t getEnumTagSinglePayload for DKPersonTrackerState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE8)
    goto LABEL_17;
  if (a2 + 24 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 24) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 24;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 24;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 24;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x19;
  v8 = v6 - 25;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKPersonTrackerState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 24 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 24) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE7)
    return ((uint64_t (*)(void))((char *)&loc_2400EA47C + 4 * byte_24015C128[v4]))();
  *a1 = a2 + 24;
  return ((uint64_t (*)(void))((char *)sub_2400EA4B0 + 4 * byte_24015C123[v4]))();
}

uint64_t sub_2400EA4B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA4B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400EA4C0);
  return result;
}

uint64_t sub_2400EA4CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400EA4D4);
  *(_BYTE *)result = a2 + 24;
  return result;
}

uint64_t sub_2400EA4D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA4E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKPersonTrackerState.CodingKeys()
{
  return &type metadata for DKPersonTrackerState.CodingKeys;
}

ValueMetadata *type metadata accessor for DKBodyKeyPoint.CodingKeys()
{
  return &type metadata for DKBodyKeyPoint.CodingKeys;
}

ValueMetadata *type metadata accessor for DKBodyKeyPointList.CodingKeys()
{
  return &type metadata for DKBodyKeyPointList.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKHandTrackerState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF5)
    goto LABEL_17;
  if (a2 + 11 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 11) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 11;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 11;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 11;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xC;
  v8 = v6 - 12;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKHandTrackerState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_2400EA5FC + 4 * byte_24015C132[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_2400EA630 + 4 * byte_24015C12D[v4]))();
}

uint64_t sub_2400EA630(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA638(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400EA640);
  return result;
}

uint64_t sub_2400EA64C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400EA654);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_2400EA658(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA660(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKHandTrackerState.CodingKeys()
{
  return &type metadata for DKHandTrackerState.CodingKeys;
}

ValueMetadata *type metadata accessor for DKObjectTrackerState.CodingKeys()
{
  return &type metadata for DKObjectTrackerState.CodingKeys;
}

uint64_t _s23IntelligentTrackingCore20DKObjectTrackerStateC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_2400EA6E0 + 4 * byte_24015C13C[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2400EA714 + 4 * byte_24015C137[v4]))();
}

uint64_t sub_2400EA714(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA71C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400EA724);
  return result;
}

uint64_t sub_2400EA730(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400EA738);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_2400EA73C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA744(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKBodyTrackerState.CodingKeys()
{
  return &type metadata for DKBodyTrackerState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKFaceTrackerState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF3)
    goto LABEL_17;
  if (a2 + 13 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 13) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 13;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 13;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 13;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v8 = v6 - 14;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKFaceTrackerState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_2400EA83C + 4 * byte_24015C146[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_2400EA870 + 4 * byte_24015C141[v4]))();
}

uint64_t sub_2400EA870(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA878(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400EA880);
  return result;
}

uint64_t sub_2400EA88C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400EA894);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_2400EA898(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA8A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKFaceTrackerState.CodingKeys()
{
  return &type metadata for DKFaceTrackerState.CodingKeys;
}

uint64_t _s23IntelligentTrackingCore14DKBodyKeyPointV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2400EA908 + 4 * byte_24015C150[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2400EA93C + 4 * byte_24015C14B[v4]))();
}

uint64_t sub_2400EA93C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA944(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400EA94CLL);
  return result;
}

uint64_t sub_2400EA958(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400EA960);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2400EA964(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400EA96C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKIdentityConfidence.CodingKeys()
{
  return &type metadata for DKIdentityConfidence.CodingKeys;
}

unint64_t sub_2400EA98C()
{
  unint64_t result;

  result = qword_256FBC070;
  if (!qword_256FBC070)
  {
    result = MEMORY[0x24267E0BC](&unk_24015C8F4, &type metadata for DKIdentityConfidence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC070);
  }
  return result;
}

unint64_t sub_2400EA9D4()
{
  unint64_t result;

  result = qword_256FBC078;
  if (!qword_256FBC078)
  {
    result = MEMORY[0x24267E0BC](&unk_24015C9E4, &type metadata for DKFaceTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC078);
  }
  return result;
}

unint64_t sub_2400EAA1C()
{
  unint64_t result;

  result = qword_256FBC080;
  if (!qword_256FBC080)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CAD4, &type metadata for DKBodyTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC080);
  }
  return result;
}

unint64_t sub_2400EAA64()
{
  unint64_t result;

  result = qword_256FBC088;
  if (!qword_256FBC088)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CBC4, &type metadata for DKObjectTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC088);
  }
  return result;
}

unint64_t sub_2400EAAAC()
{
  unint64_t result;

  result = qword_256FBC090;
  if (!qword_256FBC090)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CCB4, &type metadata for DKHandTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC090);
  }
  return result;
}

unint64_t sub_2400EAAF4()
{
  unint64_t result;

  result = qword_256FBC098;
  if (!qword_256FBC098)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CD6C, &type metadata for DKBodyKeyPointList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC098);
  }
  return result;
}

unint64_t sub_2400EAB3C()
{
  unint64_t result;

  result = qword_256FBC0A0;
  if (!qword_256FBC0A0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CE24, &type metadata for DKBodyKeyPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0A0);
  }
  return result;
}

unint64_t sub_2400EAB84()
{
  unint64_t result;

  result = qword_256FBC0A8;
  if (!qword_256FBC0A8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CF14, &type metadata for DKPersonTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0A8);
  }
  return result;
}

unint64_t sub_2400EABCC()
{
  unint64_t result;

  result = qword_256FBC0B0;
  if (!qword_256FBC0B0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CE4C, &type metadata for DKPersonTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0B0);
  }
  return result;
}

unint64_t sub_2400EAC14()
{
  unint64_t result;

  result = qword_256FBC0B8;
  if (!qword_256FBC0B8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CE74, &type metadata for DKPersonTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0B8);
  }
  return result;
}

unint64_t sub_2400EAC5C()
{
  unint64_t result;

  result = qword_256FBC0C0;
  if (!qword_256FBC0C0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CD94, &type metadata for DKBodyKeyPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0C0);
  }
  return result;
}

unint64_t sub_2400EACA4()
{
  unint64_t result;

  result = qword_256FBC0C8;
  if (!qword_256FBC0C8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CDBC, &type metadata for DKBodyKeyPoint.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0C8);
  }
  return result;
}

unint64_t sub_2400EACEC()
{
  unint64_t result;

  result = qword_256FBC0D0;
  if (!qword_256FBC0D0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CCDC, &type metadata for DKBodyKeyPointList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0D0);
  }
  return result;
}

unint64_t sub_2400EAD34()
{
  unint64_t result;

  result = qword_256FBC0D8;
  if (!qword_256FBC0D8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CD04, &type metadata for DKBodyKeyPointList.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0D8);
  }
  return result;
}

unint64_t sub_2400EAD7C()
{
  unint64_t result;

  result = qword_256FBC0E0;
  if (!qword_256FBC0E0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CBEC, &type metadata for DKHandTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0E0);
  }
  return result;
}

unint64_t sub_2400EADC4()
{
  unint64_t result;

  result = qword_256FBC0E8;
  if (!qword_256FBC0E8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CC14, &type metadata for DKHandTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0E8);
  }
  return result;
}

unint64_t sub_2400EAE0C()
{
  unint64_t result;

  result = qword_256FBC0F0;
  if (!qword_256FBC0F0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CAFC, &type metadata for DKObjectTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0F0);
  }
  return result;
}

unint64_t sub_2400EAE54()
{
  unint64_t result;

  result = qword_256FBC0F8;
  if (!qword_256FBC0F8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CB24, &type metadata for DKObjectTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC0F8);
  }
  return result;
}

unint64_t sub_2400EAE9C()
{
  unint64_t result;

  result = qword_256FBC100;
  if (!qword_256FBC100)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CA0C, &type metadata for DKBodyTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC100);
  }
  return result;
}

unint64_t sub_2400EAEE4()
{
  unint64_t result;

  result = qword_256FBC108;
  if (!qword_256FBC108)
  {
    result = MEMORY[0x24267E0BC](&unk_24015CA34, &type metadata for DKBodyTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC108);
  }
  return result;
}

unint64_t sub_2400EAF2C()
{
  unint64_t result;

  result = qword_256FBC110;
  if (!qword_256FBC110)
  {
    result = MEMORY[0x24267E0BC](&unk_24015C91C, &type metadata for DKFaceTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC110);
  }
  return result;
}

unint64_t sub_2400EAF74()
{
  unint64_t result;

  result = qword_256FBC118;
  if (!qword_256FBC118)
  {
    result = MEMORY[0x24267E0BC](&unk_24015C944, &type metadata for DKFaceTrackerState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC118);
  }
  return result;
}

unint64_t sub_2400EAFBC()
{
  unint64_t result;

  result = qword_256FBC120;
  if (!qword_256FBC120)
  {
    result = MEMORY[0x24267E0BC](&unk_24015C864, &type metadata for DKIdentityConfidence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC120);
  }
  return result;
}

unint64_t sub_2400EB004()
{
  unint64_t result;

  result = qword_256FBC128;
  if (!qword_256FBC128)
  {
    result = MEMORY[0x24267E0BC](&unk_24015C88C, &type metadata for DKIdentityConfidence.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC128);
  }
  return result;
}

uint64_t sub_2400EB048(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2400EB12C()
{
  unint64_t v0;

  v0 = sub_240154D84();
  swift_bridgeObjectRelease();
  if (v0 >= 0xE)
    return 14;
  else
    return v0;
}

uint64_t sub_2400EB174()
{
  unint64_t v0;

  v0 = sub_240154D84();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_2400EB1B8()
{
  unint64_t v0;

  v0 = sub_240154D84();
  swift_bridgeObjectRelease();
  if (v0 >= 0xC)
    return 12;
  else
    return v0;
}

uint64_t sub_2400EB200(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E696F7079656BLL && a2 == 0xE900000000000073;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1952671090 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2400EB2EC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2400EB3E8()
{
  unint64_t v0;

  v0 = sub_240154F1C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x19)
    return 25;
  else
    return v0;
}

unint64_t sub_2400EB438()
{
  unint64_t result;

  result = qword_256FBC150;
  if (!qword_256FBC150)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FBC150);
  }
  return result;
}

uint64_t dispatch thunk of DKObjectTrackerState.__allocating_init(from:)()
{
  return dispatch thunk of DKBodyTrackerState.__allocating_init(from:)();
}

uint64_t dispatch thunk of DKObjectTrackerState.encode(to:)()
{
  return dispatch thunk of DKBodyTrackerState.encode(to:)();
}

uint64_t dispatch thunk of DKObjectTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)()
{
  return dispatch thunk of DKBodyTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)();
}

uint64_t sub_2400EB580(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = sub_240077844(0, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  if (v5 >= v4 >> 1)
    v3 = sub_240077844(v4 > 1, v5 + 1, 1, v3);
  *(_QWORD *)(v3 + 16) = v5 + 1;
  v6 = sub_24015434C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v5, a1, v6);
  *v1 = v3;
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_2400EB648()
{
  sub_2401547B4();
}

uint64_t sub_2400EB67C(unint64_t a1)
{
  uint64_t v2;

  if (!(a1 >> 62))
    return *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v2 = sub_240154D30();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2400EB6D8(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_2400EB6E0(uint64_t a1)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = a1 + 64;
  v3 = *(_BYTE *)(a1 + 32);
  v4 = 1 << v3;
  v5 = -1;
  if (1 << v3 < 64)
    v5 = ~(-1 << (1 << v3));
  v6 = v5 & *(_QWORD *)(a1 + 64);
  if (v6)
  {
    v7 = 0;
    v8 = __clz(__rbit64(v6));
    v9 = (v6 - 1) & v6;
    v10 = (unint64_t)(v4 + 63) >> 6;
  }
  else
  {
    v14 = v3 & 0x3F;
    if (v14 <= 6)
      return 0;
    v10 = (unint64_t)(v4 + 63) >> 6;
    v24 = *(_QWORD *)(a1 + 72);
    if (v24)
    {
      v7 = 1;
    }
    else
    {
      if (v14 < 8)
        return 0;
      v24 = *(_QWORD *)(a1 + 80);
      if (v24)
      {
        v7 = 2;
      }
      else
      {
        v24 = *(_QWORD *)(a1 + 88);
        if (v24)
        {
          v7 = 3;
        }
        else
        {
LABEL_48:
          if (v14 < 9)
            return 0;
          v24 = *(_QWORD *)(a1 + 96);
          if (v24)
          {
            v7 = 4;
          }
          else
          {
            v24 = *(_QWORD *)(a1 + 104);
            if (!v24)
              goto LABEL_54;
            v7 = 5;
          }
        }
      }
    }
LABEL_41:
    v9 = (v24 - 1) & v24;
    v8 = __clz(__rbit64(v24)) + (v7 << 6);
  }
  v11 = 8 * v8;
  v12 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + v11);
  v13 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v7 << 6);
LABEL_25:
    v20 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v16);
    if (*(_BYTE *)(v13 + 33) == 1)
    {
      if ((*(_BYTE *)(v13 + 32) & 1) != 0)
        v21 = atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56));
      else
        v21 = *(double *)(v13 + 40);
      if (*(_BYTE *)(v20 + 33) == 1)
      {
        if (*(_BYTE *)(v20 + 32) != 1)
        {
LABEL_34:
          v22 = *(double *)(v20 + 40);
          goto LABEL_35;
        }
LABEL_30:
        v22 = atan2(*(long double *)(v20 + 48), *(long double *)(v20 + 56));
LABEL_35:
        if (v21 < v22)
        {
LABEL_36:
          v23 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v16);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_release();
          swift_bridgeObjectRelease();
          v13 = v20;
          v12 = v23;
        }
      }
      else if (v21 < 0.0)
      {
        goto LABEL_36;
      }
    }
    else if ((*(_BYTE *)(v20 + 33) & 1) != 0)
    {
      v21 = 0.0;
      if ((*(_BYTE *)(v20 + 32) & 1) == 0)
        goto LABEL_34;
      goto LABEL_30;
    }
  }
  v17 = v7 + 1;
  if (__OFADD__(v7, 1))
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v17 >= v10)
    goto LABEL_37;
  v18 = *(_QWORD *)(v2 + 8 * v17);
  ++v7;
  if (v18)
    goto LABEL_24;
  v7 = v17 + 1;
  if (v17 + 1 >= v10)
    goto LABEL_37;
  v18 = *(_QWORD *)(v2 + 8 * v7);
  if (v18)
    goto LABEL_24;
  v7 = v17 + 2;
  if (v17 + 2 >= v10)
    goto LABEL_37;
  v18 = *(_QWORD *)(v2 + 8 * v7);
  if (v18)
    goto LABEL_24;
  v7 = v17 + 3;
  if (v17 + 3 >= v10)
    goto LABEL_37;
  v18 = *(_QWORD *)(v2 + 8 * v7);
  if (v18)
  {
LABEL_24:
    v14 = v18 - 1;
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v7 << 6);
    goto LABEL_25;
  }
  v19 = v17 + 4;
  if (v19 >= v10)
  {
LABEL_37:
    swift_release();
    return v12;
  }
  v18 = *(_QWORD *)(v2 + 8 * v19);
  if (v18)
  {
    v7 = v19;
    goto LABEL_24;
  }
  while (1)
  {
    v7 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v7 >= v10)
      goto LABEL_37;
    v18 = *(_QWORD *)(v2 + 8 * v7);
    ++v19;
    if (v18)
      goto LABEL_24;
  }
  __break(1u);
LABEL_54:
  v25 = 0;
  v26 = 6;
  if (v10 > 6)
    v26 = v10;
  v27 = v26 - 6;
  while (v27 != v25)
  {
    v24 = *(_QWORD *)(a1 + 112 + 8 * v25++);
    if (v24)
    {
      v7 = v25 + 5;
      goto LABEL_41;
    }
  }
  return 0;
}

uint64_t sub_2400EBA00(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(_QWORD, double), void (*a5)(char *, uint64_t, uint64_t), void (*a6)(void))
{
  uint64_t *v6;
  uint64_t *v11;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v11 = v6;
  v14 = __swift_instantiateConcreteTypeFromMangledName(a3);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = a4(0, v15);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v27 - v20;
  if ((*(unsigned int (**)(uint64_t, uint64_t, double))(v22 + 48))(a1, 1, v19) == 1)
  {
    sub_240070BD4(a1, a3);
    sub_2400F7000(a2, (uint64_t (*)(_QWORD))a4, a6, (uint64_t)v17);
    v23 = sub_24015434C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 8))(a2, v23);
    return sub_240070BD4((uint64_t)v17, a3);
  }
  else
  {
    sub_2400A0E74(a1, (uint64_t)v21, (uint64_t (*)(_QWORD))a4);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v11;
    *v11 = 0x8000000000000000;
    a5(v21, a2, isUniquelyReferenced_nonNull_native);
    *v11 = v28;
    swift_bridgeObjectRelease();
    v26 = sub_24015434C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(a2, v26);
  }
}

uint64_t sub_2400EBB94(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_240154310();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_240070BD4(a1, &qword_256FB4CC8);
    v13 = sub_24013EF5C(a2);
    if ((v14 & 1) != 0)
    {
      v15 = v13;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v17 = *v3;
      v22 = *v3;
      *v3 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_2400AF258();
        v17 = v22;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 32))(v8, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v10 + 72) * v15, v9);
      sub_2400F79EC(v15, v17);
      *v3 = v17;
      swift_bridgeObjectRelease();
      v18 = 0;
    }
    else
    {
      v18 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v18, 1, v9);
    return sub_240070BD4((uint64_t)v8, &qword_256FB4CC8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    v22 = *v3;
    *v3 = 0x8000000000000000;
    sub_240072340((uint64_t)v12, a2, v19);
    *v3 = v22;
    return swift_bridgeObjectRelease();
  }
}

double DKPersonGroupConfiguration.__allocating_init()()
{
  _OWORD *v0;
  double result;

  v0 = (_OWORD *)swift_allocObject();
  v0[1] = xmmword_2401572F0;
  v0[2] = xmmword_240157300;
  result = 0.75;
  v0[3] = xmmword_240157310;
  return result;
}

_QWORD *DKPersonGroupFilter.__allocating_init(configuration:)(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = (_QWORD *)swift_allocObject();
  v3 = MEMORY[0x24BEE4B00];
  v4 = MEMORY[0x24BEE4B08];
  result[4] = MEMORY[0x24BEE4B00];
  result[5] = v4;
  v5 = MEMORY[0x24BEE4AF8];
  result[6] = v3;
  result[7] = v5;
  result[8] = v4;
  result[9] = v4;
  result[10] = v4;
  result[2] = a1;
  result[3] = v3;
  return result;
}

double DKPersonGroupConfiguration.init()()
{
  _OWORD *v0;
  double result;

  v0[1] = xmmword_2401572F0;
  v0[2] = xmmword_240157300;
  result = 0.75;
  v0[3] = xmmword_240157310;
  return result;
}

_OWORD *DKPersonGroupConfiguration.__allocating_init(configuration:)(_OWORD *a1)
{
  _OWORD *v2;
  __int128 v3;

  v2 = (_OWORD *)swift_allocObject();
  v3 = a1[2];
  v2[1] = a1[1];
  v2[2] = v3;
  v2[3] = a1[3];
  swift_release();
  return v2;
}

_QWORD *DKPersonGroupConfiguration.init(configuration:)(_QWORD *a1)
{
  _QWORD *v1;

  v1 = sub_2400FBEB4(a1);
  swift_release();
  return v1;
}

uint64_t DKPersonGroupConfiguration.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DKPersonGroupConfiguration.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t DKPersonGroup.groupId.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DKPersonGroup.groupId.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*DKPersonGroup.groupId.modify())()
{
  return nullsub_1;
}

double DKPersonGroup.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void DKPersonGroup.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*DKPersonGroup.confidence.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroup.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DKPersonGroup(0) + 24);
  v4 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DKPersonGroup.creationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DKPersonGroup(0) + 24);
  v4 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DKPersonGroup.creationDate.modify())()
{
  type metadata accessor for DKPersonGroup(0);
  return nullsub_1;
}

uint64_t DKPersonGroup.personUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DKPersonGroup(0);
  return sub_240070B90(v1 + *(int *)(v3 + 28), a1, &qword_256FB5DE8);
}

uint64_t DKPersonGroup.personUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DKPersonGroup(0);
  return sub_24009C218(a1, v1 + *(int *)(v3 + 28), &qword_256FB5DE8);
}

uint64_t (*DKPersonGroup.personUUID.modify())()
{
  type metadata accessor for DKPersonGroup(0);
  return nullsub_1;
}

uint64_t DKPersonGroup.faceUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DKPersonGroup(0);
  return sub_240070B90(v1 + *(int *)(v3 + 32), a1, &qword_256FB5DE8);
}

uint64_t DKPersonGroup.faceUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DKPersonGroup(0);
  return sub_24009C218(a1, v1 + *(int *)(v3 + 32), &qword_256FB5DE8);
}

uint64_t (*DKPersonGroup.faceUUID.modify())()
{
  type metadata accessor for DKPersonGroup(0);
  return nullsub_1;
}

uint64_t DKPersonGroup.bodyUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DKPersonGroup(0);
  return sub_240070B90(v1 + *(int *)(v3 + 36), a1, &qword_256FB5DE8);
}

uint64_t DKPersonGroup.bodyUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DKPersonGroup(0);
  return sub_24009C218(a1, v1 + *(int *)(v3 + 36), &qword_256FB5DE8);
}

uint64_t (*DKPersonGroup.bodyUUID.modify())()
{
  type metadata accessor for DKPersonGroup(0);
  return nullsub_1;
}

uint64_t DKPersonGroup.handUUIDs.getter()
{
  type metadata accessor for DKPersonGroup(0);
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroup.handUUIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for DKPersonGroup(0) + 40);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*DKPersonGroup.handUUIDs.modify())()
{
  type metadata accessor for DKPersonGroup(0);
  return nullsub_1;
}

uint64_t sub_2400EC21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, double a8@<D0>)
{
  int *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;

  v13 = (int *)type metadata accessor for DKPersonGroup(0);
  v14 = a7 + v13[7];
  v15 = sub_24015434C();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v14, 1, 1, v15);
  v17 = a7 + v13[8];
  v16(v17, 1, 1, v15);
  v18 = a7 + v13[9];
  v16(v18, 1, 1, v15);
  v19 = v13[10];
  *(_QWORD *)(a7 + v19) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a7 = a1;
  *(double *)(a7 + 8) = a8;
  v20 = a7 + v13[6];
  v21 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v20, a2, v21);
  sub_24009C218(a3, v14, &qword_256FB5DE8);
  sub_24009C218(a4, v17, &qword_256FB5DE8);
  sub_24009C218(a5, v18, &qword_256FB5DE8);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a7 + v19) = a6;
  return result;
}

unint64_t DKPersonGroup.getUUIDs()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  unint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  char *v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unint64_t v43;

  v35 = sub_24015434C();
  v1 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v42 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v34 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v34 - v11;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC1B8);
  v13 = *(_QWORD *)(v7 + 72);
  v14 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240155A40;
  v37 = v15;
  v16 = v15 + v14;
  v17 = type metadata accessor for DKPersonGroup(0);
  sub_240070B90(v0 + *(int *)(v17 + 32), v16, &qword_256FB5DE8);
  v39 = v17;
  v18 = v0 + *(int *)(v17 + 36);
  v36 = v16 + v13;
  sub_240070B90(v18, v16 + v13, &qword_256FB5DE8);
  v38 = v16;
  v19 = v16;
  v20 = v35;
  sub_240070B90(v19, (uint64_t)v12, &qword_256FB5DE8);
  sub_24007CD50((uint64_t)v12, (uint64_t)v9, &qword_256FB5DE8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 48);
  v22 = v21(v9, 1, v20);
  v40 = v1;
  v41 = v6;
  if (v22 == 1)
  {
    sub_240070BD4((uint64_t)v9, &qword_256FB5DE8);
    v23 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v34 = v0;
    v24 = *(void (**)(char *, char *, uint64_t))(v1 + 32);
    v24(v5, v9, v20);
    v24(v42, v5, v20);
    v23 = MEMORY[0x24BEE4AF8];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_240077844(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
    v26 = *(_QWORD *)(v23 + 16);
    v25 = *(_QWORD *)(v23 + 24);
    if (v26 >= v25 >> 1)
      v23 = sub_240077844(v25 > 1, v26 + 1, 1, v23);
    *(_QWORD *)(v23 + 16) = v26 + 1;
    v24((char *)(v23+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(_QWORD *)(v40 + 72) * v26), v42, v20);
  }
  sub_240070B90(v36, (uint64_t)v12, &qword_256FB5DE8);
  sub_24007CD50((uint64_t)v12, (uint64_t)v9, &qword_256FB5DE8);
  if (v21(v9, 1, v20) == 1)
  {
    sub_240070BD4((uint64_t)v9, &qword_256FB5DE8);
  }
  else
  {
    v27 = v40;
    v28 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
    v28(v5, v9, v20);
    v29 = v42;
    v28(v42, v5, v20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v23 = sub_240077844(0, *(_QWORD *)(v23 + 16) + 1, 1, v23);
    v31 = *(_QWORD *)(v23 + 16);
    v30 = *(_QWORD *)(v23 + 24);
    if (v31 >= v30 >> 1)
      v23 = sub_240077844(v30 > 1, v31 + 1, 1, v23);
    *(_QWORD *)(v23 + 16) = v31 + 1;
    v28((char *)(v23+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(_QWORD *)(v27 + 72) * v31), v29, v20);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v43 = v23;
  v32 = swift_bridgeObjectRetain();
  sub_240095098(v32);
  return v43;
}

uint64_t DKPersonGroup.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  int *v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v18;

  v2 = v1;
  v4 = sub_24015434C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v18 - v12;
  v14 = (int *)type metadata accessor for DKPersonGroup(0);
  sub_240070B90(v2 + v14[8], (uint64_t)v13, &qword_256FB5DE8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  if (v15(v13, 1, v4) == 1)
  {
    sub_240155000();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v13, v4);
    sub_240155000();
    sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_2401545C8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_240070B90(v2 + v14[9], (uint64_t)v10, &qword_256FB5DE8);
  if (v15(v10, 1, v4) == 1)
  {
    sub_240155000();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_240155000();
    sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_2401545C8();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v16 = *(_QWORD *)(v2 + v14[10]);
  swift_bridgeObjectRetain();
  sub_2400FA7A0(a1, v16);
  return swift_bridgeObjectRelease();
}

uint64_t static DKPersonGroup.== infix(_:_:)()
{
  unint64_t v0;
  unint64_t v1;
  char v2;

  v0 = DKPersonGroup.getUUIDs()();
  v1 = DKPersonGroup.getUUIDs()();
  v2 = sub_2400ECA6C(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

BOOL sub_2400ECA00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  uint64_t v5;
  _BOOL8 result;
  double v7;
  double v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return 0;
  v3 = (double *)(a1 + 40);
  v4 = (double *)(a2 + 40);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_2400ECA6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void (*v19)(char *, uint64_t);
  BOOL v21;
  uint64_t v23;
  uint64_t v24;

  v4 = sub_24015434C();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9.n128_f64[0] = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v23 - v10;
  v12 = *(_QWORD *)(a1 + 16);
  if (v12 == *(_QWORD *)(a2 + 16))
  {
    if (!v12 || a1 == a2)
    {
      v18 = 1;
    }
    else
    {
      v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      v23 = *(_QWORD *)(v8 + 72);
      v24 = v8;
      v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16);
      v15 = v12 - 1;
      do
      {
        v16 = a1;
        v14(v11, a1 + v13, v4, v9);
        v17 = a2;
        ((void (*)(char *, unint64_t, uint64_t))v14)(v6, a2 + v13, v4);
        sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v18 = sub_240154610();
        v19 = *(void (**)(char *, uint64_t))(v24 + 8);
        v19(v6, v4);
        v19(v11, v4);
        v21 = v15-- != 0;
        if ((v18 & 1) == 0)
          break;
        v13 += v23;
        a2 = v17;
        a1 = v16;
      }
      while (v21);
    }
  }
  else
  {
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_2400ECBF0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400ECC20 + 4 * byte_24015D1C0[*v0]))(0x644970756F7267, 0xE700000000000000);
}

uint64_t sub_2400ECC20()
{
  return 0x6E656469666E6F63;
}

uint64_t sub_2400ECC3C()
{
  return 0x6E6F697461657263;
}

uint64_t sub_2400ECC5C()
{
  return 0x55556E6F73726570;
}

uint64_t sub_2400ECC78()
{
  return 0x4449555565636166;
}

uint64_t sub_2400ECCA0()
{
  return 0x44495555646E6168;
}

uint64_t sub_2400ECCBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400FDF94(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400ECCE0()
{
  sub_2400FBF00();
  return sub_240155048();
}

uint64_t sub_2400ECD08()
{
  sub_2400FBF00();
  return sub_240155054();
}

uint64_t DKPersonGroup.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD v11[2];
  char v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC1C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400FBF00();
  sub_240155030();
  v18 = 0;
  sub_240154E74();
  if (!v2)
  {
    v17 = 1;
    sub_240154E68();
    v9 = type metadata accessor for DKPersonGroup(0);
    v16 = 2;
    sub_240154310();
    sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
    sub_240154E80();
    v15 = 3;
    sub_24015434C();
    sub_2400707A8(&qword_256FB8CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E50();
    v14 = 4;
    sub_240154E50();
    v13 = 5;
    sub_240154E50();
    v11[1] = *(_QWORD *)(v3 + *(int *)(v9 + 40));
    v12 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC1D0);
    sub_2400FBF44(&qword_256FBC1D8, &qword_256FB8CE8, MEMORY[0x24BDCEA70], MEMORY[0x24BEE12A0]);
    sub_240154E80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DKPersonGroup.hashValue.getter()
{
  _BYTE v1[72];

  sub_240154FE8();
  DKPersonGroup.hash(into:)((uint64_t)v1);
  return sub_240155018();
}

uint64_t DKPersonGroup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t *v49;
  uint64_t v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;

  v36 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v38 = (char *)&v35 - v6;
  MEMORY[0x24BDAC7A8](v7);
  v39 = (char *)&v35 - v8;
  v9 = sub_240154310();
  v40 = *(_QWORD *)(v9 - 8);
  v41 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC1E0);
  v12 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for DKPersonGroup(0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = (uint64_t)v17 + *(int *)(v18 + 28);
  v20 = sub_24015434C();
  v21 = *(void (**)(void))(*(_QWORD *)(v20 - 8) + 56);
  v46 = v19;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v21)(v19, 1, 1, v20);
  v48 = (char *)v17 + v15[8];
  v21();
  v45 = (char *)v17 + v15[9];
  v21();
  v44 = v15[10];
  v49 = v17;
  *(uint64_t *)((char *)v17 + v44) = MEMORY[0x24BEE4AF8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400FBF00();
  v43 = v14;
  v22 = (uint64_t)v47;
  sub_240155024();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v26 = (uint64_t)v45;
    sub_240070BD4(v46, &qword_256FB5DE8);
    sub_240070BD4((uint64_t)v48, &qword_256FB5DE8);
    sub_240070BD4(v26, &qword_256FB5DE8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v23 = v12;
    v47 = a1;
    v57 = 0;
    v24 = sub_240154DF0();
    v25 = (uint64_t)v49;
    *v49 = v24;
    v56 = 1;
    sub_240154DE4();
    *(_QWORD *)(v25 + 8) = v27;
    v55 = 2;
    sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v28 = v41;
    sub_240154DFC();
    v35 = v15;
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v25 + v15[6], v11, v28);
    v54 = 3;
    sub_2400707A8(&qword_256FB8D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v29 = (uint64_t)v39;
    sub_240154DCC();
    sub_24009C218(v29, v46, &qword_256FB5DE8);
    v53 = 4;
    v30 = (uint64_t)v38;
    sub_240154DCC();
    sub_24009C218(v30, (uint64_t)v48, &qword_256FB5DE8);
    v52 = 5;
    v31 = (uint64_t)v37;
    sub_240154DCC();
    sub_24009C218(v31, (uint64_t)v45, &qword_256FB5DE8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC1D0);
    v51 = 6;
    sub_2400FBF44(&qword_256FBC1E8, &qword_256FB8D10, MEMORY[0x24BDCEAA8], MEMORY[0x24BEE12D0]);
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v43, v42);
    v32 = v50;
    v33 = v44;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v25 + v33) = v32;
    sub_240080084(v25, v36, type metadata accessor for DKPersonGroup);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    return sub_2400800C8(v25, type metadata accessor for DKPersonGroup);
  }
}

uint64_t sub_2400ED5EC()
{
  _BYTE v1[72];

  sub_240154FE8();
  DKPersonGroup.hash(into:)((uint64_t)v1);
  return sub_240155018();
}

uint64_t sub_2400ED62C()
{
  _BYTE v1[72];

  sub_240154FE8();
  DKPersonGroup.hash(into:)((uint64_t)v1);
  return sub_240155018();
}

uint64_t sub_2400ED664@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKPersonGroup.init(from:)(a1, a2);
}

uint64_t sub_2400ED678(_QWORD *a1)
{
  return DKPersonGroup.encode(to:)(a1);
}

uint64_t sub_2400ED68C()
{
  unint64_t v0;
  unint64_t v1;
  char v2;

  v0 = DKPersonGroup.getUUIDs()();
  v1 = DKPersonGroup.getUUIDs()();
  v2 = sub_2400ECA6C(v0, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2 & 1;
}

uint64_t DKPersonGroupFilter.StampedPerson.hash(into:)()
{
  sub_240154310();
  sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_2401545C8();
  type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_2401545C8();
}

uint64_t static DKPersonGroupFilter.StampedPerson.== infix(_:_:)()
{
  if ((sub_2401542EC() & 1) == 0)
    return 0;
  type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  return sub_240154328();
}

uint64_t DKPersonGroupFilter.StampedPerson.hashValue.getter()
{
  sub_240154FE8();
  sub_240154310();
  sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_2401545C8();
  type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  return sub_240155018();
}

uint64_t sub_2400ED890()
{
  sub_240154FE8();
  sub_240154310();
  sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_2401545C8();
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  return sub_240155018();
}

uint64_t sub_2400ED948()
{
  sub_240154310();
  sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_2401545C8();
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  return sub_2401545C8();
}

uint64_t sub_2400ED9E8()
{
  sub_240154FE8();
  sub_240154310();
  sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_2401545C8();
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  return sub_240155018();
}

uint64_t sub_2400EDA9C()
{
  if ((sub_2401542EC() & 1) != 0)
    return sub_240154328();
  else
    return 0;
}

uint64_t DKPersonGroupFilter.Track.lastGroupId.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DKPersonGroupFilter.Track.lastGroupId.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*DKPersonGroupFilter.Track.lastGroupId.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.Track.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DKPersonGroupFilter.Track(0) + 20);
  v4 = sub_24015434C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t DKPersonGroupFilter.Track.uuid.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for DKPersonGroupFilter.Track(0) + 20);
  v4 = sub_24015434C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*DKPersonGroupFilter.Track.uuid.modify())()
{
  type metadata accessor for DKPersonGroupFilter.Track(0);
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.Track.identity.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for DKPersonGroupFilter.Track(0) + 24));
}

uint64_t DKPersonGroupFilter.Track.identity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for DKPersonGroupFilter.Track(0);
  *(_QWORD *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.Track.identity.modify())()
{
  type metadata accessor for DKPersonGroupFilter.Track(0);
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.Track.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_240155000();
  }
  else
  {
    sub_240155000();
    sub_240154FF4();
  }
  type metadata accessor for DKPersonGroupFilter.Track(0);
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  return sub_240154FF4();
}

uint64_t sub_2400EDD0C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1684632949;
  if (*v0 != 1)
    v1 = 0x797469746E656469;
  if (*v0)
    return v1;
  else
    return 0x756F72477473616CLL;
}

uint64_t sub_2400EDD68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400FE2B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400EDD8C()
{
  sub_2400FBFF0();
  return sub_240155048();
}

uint64_t sub_2400EDDB4()
{
  sub_2400FBFF0();
  return sub_240155054();
}

uint64_t DKPersonGroupFilter.Track.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC1F0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400FBFF0();
  sub_240155030();
  v8[15] = 0;
  sub_240154E44();
  if (!v1)
  {
    type metadata accessor for DKPersonGroupFilter.Track(0);
    v8[14] = 1;
    sub_24015434C();
    sub_2400707A8(&qword_256FB8CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    v8[13] = 2;
    sub_240154E74();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKPersonGroupFilter.Track.hashValue.getter()
{
  uint64_t v0;

  sub_240154FE8();
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_240155000();
  }
  else
  {
    sub_240155000();
    sub_240154FF4();
  }
  type metadata accessor for DKPersonGroupFilter.Track(0);
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t DKPersonGroupFilter.Track.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char v25;
  char v26;
  char v27;

  v19 = a2;
  v3 = sub_24015434C();
  v21 = *(_QWORD *)(v3 - 8);
  v22 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v20 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC200);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DKPersonGroupFilter.Track(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400FBFF0();
  v11 = v7;
  v12 = (uint64_t)v24;
  sub_240155024();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v24 = a1;
  v13 = v20;
  v14 = v21;
  v15 = v22;
  v27 = 0;
  *(_QWORD *)v10 = sub_240154DC0();
  v10[8] = v16 & 1;
  v26 = 1;
  sub_2400707A8(&qword_256FB8D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
  sub_240154DFC();
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v10[*(int *)(v8 + 20)], v13, v15);
  v25 = 2;
  v17 = sub_240154DF0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v23);
  *(_QWORD *)&v10[*(int *)(v8 + 24)] = v17;
  sub_240080084((uint64_t)v10, v19, type metadata accessor for DKPersonGroupFilter.Track);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
  return sub_2400800C8((uint64_t)v10, type metadata accessor for DKPersonGroupFilter.Track);
}

uint64_t sub_2400EE2D4()
{
  uint64_t v0;

  sub_240154FE8();
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_240155000();
  }
  else
  {
    sub_240155000();
    sub_240154FF4();
  }
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t sub_2400EE3A0()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_240155000();
  }
  else
  {
    sub_240155000();
    sub_240154FF4();
  }
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  return sub_240154FF4();
}

uint64_t sub_2400EE458()
{
  uint64_t v0;

  sub_240154FE8();
  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_240155000();
  }
  else
  {
    sub_240155000();
    sub_240154FF4();
  }
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t sub_2400EE520@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKPersonGroupFilter.Track.init(from:)(a1, a2);
}

uint64_t sub_2400EE534(_QWORD *a1)
{
  return DKPersonGroupFilter.Track.encode(to:)(a1);
}

uint64_t DKPersonGroupFilter.State.activeGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroupFilter.State.activeGroups.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.State.activeGroups.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.State.activeIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroupFilter.State.activeIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.State.activeIDs.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.State.createdIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroupFilter.State.createdIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.State.createdIDs.modify())()
{
  return nullsub_1;
}

uint64_t DKPersonGroupFilter.State.killedIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKPersonGroupFilter.State.killedIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*DKPersonGroupFilter.State.killedIDs.modify())()
{
  return nullsub_1;
}

_QWORD *DKPersonGroupFilter.init(configuration:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = MEMORY[0x24BEE4B00];
  v3 = MEMORY[0x24BEE4AF8];
  v1[6] = MEMORY[0x24BEE4B00];
  v1[7] = v3;
  v4 = MEMORY[0x24BEE4B08];
  v1[4] = v2;
  v1[5] = v4;
  v1[8] = v4;
  v1[9] = v4;
  v1[10] = v4;
  v1[2] = a1;
  v1[3] = v2;
  return v1;
}

uint64_t sub_2400EE680()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  v1 = MEMORY[0x24BEE4B00];
  v0[6] = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v0[3] = v1;
  swift_bridgeObjectRelease();
  v0[4] = v1;
  v2 = MEMORY[0x24BEE4B08];
  v0[7] = MEMORY[0x24BEE4AF8];
  v0[8] = v2;
  v0[9] = v2;
  v0[10] = v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2400EE704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  _QWORD *v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  _QWORD *v125;
  unint64_t v126;
  unint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  _QWORD *v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  char *v142;
  uint64_t v143;
  int64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  _QWORD *v152;
  uint64_t v153;
  unint64_t v154;
  unint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  char *v160;
  unint64_t v161;
  unint64_t v162;
  char *v163;
  int64_t v164;
  unint64_t v165;
  uint64_t v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  _QWORD *v173;
  unint64_t v174;
  unint64_t v175;
  _QWORD *v176;
  uint64_t v177;
  char *v178;
  unint64_t v179;
  uint64_t v180;
  unint64_t v181;
  unint64_t v182;
  int64_t v183;
  unint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  _QWORD *v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  _QWORD *v196;
  _QWORD *v197;
  char *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  unint64_t v202;
  unint64_t v203;
  unint64_t v204;
  char *v205;
  char *v206;
  int64_t v207;
  unint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  void (**v212)(uint64_t, char *, uint64_t);
  uint64_t v213;
  char *v214;
  _QWORD *v215;
  uint64_t v216;
  unint64_t v217;
  unint64_t v218;
  _QWORD *v219;
  void (**v220)(uint64_t, char *, uint64_t);
  char *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  _QWORD *v227;
  uint64_t v228;
  unint64_t v229;
  unint64_t v230;
  _QWORD *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  void (**v235)(uint64_t, char *, uint64_t);
  uint64_t v236;
  uint64_t v237;
  char *v238;
  _QWORD *v239;
  uint64_t v240;
  unint64_t v241;
  unint64_t v242;
  _QWORD *v243;
  uint64_t inited;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  char *v248;
  char *v249;
  char *v250;
  unint64_t v251;
  char *v252;
  unint64_t v253;
  BOOL v254;
  uint64_t v255;
  unint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  void (*v260)(uint64_t, char *, uint64_t);
  unint64_t v261;
  uint64_t v262;
  char *v263;
  unint64_t v264;
  char *v265;
  unint64_t v266;
  uint64_t v267;
  uint64_t (*v268)(uint64_t);
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  char *v274;
  void (*v275)(uint64_t, char *, uint64_t);
  char *v276;
  uint64_t v277;
  uint64_t v278;
  void (*v279)(uint64_t, uint64_t);
  uint64_t v280;
  char *v281;
  uint64_t v282;
  char *v283;
  _QWORD *v284;
  _QWORD *v285;
  unint64_t v286;
  unint64_t v287;
  char *v288;
  char v289;
  char v290;
  _QWORD *v291;
  _QWORD *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  void (*v299)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v305;
  char v306;
  unint64_t v307;
  uint64_t v308;
  _BOOL8 v309;
  uint64_t v310;
  char v311;
  unint64_t v312;
  char v313;
  _QWORD *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  BOOL v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  _QWORD *v323;
  unint64_t v324;
  char *v325;
  char *v326;
  unint64_t v327;
  unint64_t v328;
  uint64_t v329;
  unint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  unint64_t v337;
  uint64_t v338;
  unint64_t v339;
  uint64_t v340;
  unint64_t v341;
  unint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t (*v345)(void);
  unint64_t v346;
  uint64_t v347;
  char *v348;
  char *v349;
  char *v350;
  uint64_t (*v351)(uint64_t);
  _QWORD *v352;
  int v353;
  uint64_t v354;
  int v355;
  uint64_t v356;
  uint64_t v357;
  unint64_t v358;
  uint64_t v359;
  unint64_t v360;
  uint64_t v361;
  uint64_t v362;
  char v363;
  void (*v364)(uint64_t, char *, uint64_t);
  int v365;
  _QWORD *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  char v372;
  uint64_t v373;
  uint64_t v374;
  char v375;
  char v376;
  _QWORD *v377;
  _QWORD *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  void (*v385)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  char v390;
  _QWORD *v391;
  char v392;
  unint64_t v393;
  uint64_t v394;
  _BOOL8 v395;
  uint64_t v396;
  char v397;
  unint64_t v398;
  char v399;
  int v400;
  _QWORD *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  char v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  unint64_t v412;
  int64_t v413;
  int64_t v414;
  _QWORD **v415;
  unint64_t v416;
  unint64_t i;
  unint64_t v418;
  int64_t v419;
  uint64_t v420;
  uint64_t v421;
  unint64_t v422;
  char v423;
  char v424;
  char v425;
  _QWORD *v426;
  char *v427;
  uint64_t v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  unint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  unint64_t v437;
  unint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  char v446;
  char v447;
  uint64_t v448;
  char v449;
  char v450;
  double v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  double v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  char v459;
  char v460;
  uint64_t v461;
  uint64_t v462;
  double v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  double v476;
  uint64_t v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  unsigned int (*v481)(char *, uint64_t, uint64_t);
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  void (**v493)(uint64_t, uint64_t);
  void (*v494)(void);
  char *v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  unsigned int (*v499)(uint64_t, uint64_t, uint64_t);
  uint64_t v500;
  uint64_t v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  uint64_t v516;
  _QWORD *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t v525;
  unint64_t v526;
  uint64_t *v527;
  uint64_t v528;
  void (**v529)(uint64_t, unint64_t, uint64_t);
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  uint64_t v541;
  unint64_t v542;
  uint64_t v543;
  void (*v544)(uint64_t, unint64_t, uint64_t);
  uint64_t v545;
  uint64_t v546;
  void (*v547)(uint64_t, unint64_t, uint64_t);
  uint64_t *v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  unint64_t v553;
  uint64_t v554;
  uint64_t v555;
  void (*v556)(char *, unint64_t, uint64_t);
  uint64_t v557;
  char v558;
  void (*v559)(uint64_t, uint64_t);
  uint64_t v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  void (*v564)(uint64_t, unint64_t, uint64_t);
  char *v565;
  void (*v566)(_QWORD *);
  uint64_t v567;
  void (*v568)(uint64_t, unint64_t, uint64_t);
  uint64_t v569;
  char *v570;
  char *v571;
  void (*v572)(_QWORD *);
  uint64_t v573;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  void (*v577)(uint64_t, unint64_t, uint64_t);
  unint64_t v578;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  unint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  _QWORD *v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  _QWORD *v593;
  uint64_t result;
  uint64_t v595;
  _QWORD *v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  char *v604;
  char *v605;
  uint64_t v606;
  uint64_t v607;
  char *v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  unint64_t v617;
  uint64_t v618;
  char *v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  unint64_t v628;
  uint64_t v629;
  char *v630;
  char *v631;
  uint64_t v632;
  uint64_t v633;
  char *v634;
  uint64_t v635;
  unsigned int (*v636)(char *, uint64_t, uint64_t);
  uint64_t v637;
  char *v638;
  uint64_t v639;
  unint64_t v640;
  uint64_t v641;
  char *v642;
  char *v643;
  uint64_t v644;
  unint64_t v645;
  char *v646;
  uint64_t v647;
  char *v648;
  char *v649;
  char *v650;
  char *v651;
  unint64_t v652;
  uint64_t v653;
  uint64_t v654;
  __int128 v655;
  uint64_t v656;
  char *v657;
  uint64_t v658;
  char *v659;
  uint64_t v660;
  char *v661;
  uint64_t v662;
  uint64_t v663;
  uint64_t v664;
  __int128 v665;
  char *v666;
  char *v667;
  char *v668;
  uint64_t v669;
  _QWORD *v670;
  uint64_t v671;
  char *v672;
  uint64_t v673;
  _QWORD *v674;
  char *v675;
  char *v676;
  char *v677;
  char *v678;
  void (*v679)(uint64_t, char *, uint64_t);
  char *v680;
  uint64_t v681;
  uint64_t v682;
  char *v683;
  unint64_t v684;
  char *v685;
  char *v686;
  uint64_t v687;
  _QWORD *v688;
  uint64_t v689;
  uint64_t v690;
  _QWORD *v691;

  v633 = a4;
  v663 = a1;
  v596 = a5;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC208);
  MEMORY[0x24BDAC7A8](v8);
  v648 = (char *)&v595 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v638 = (char *)&v595 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC210);
  MEMORY[0x24BDAC7A8](v12);
  v613 = (uint64_t)&v595 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC218);
  MEMORY[0x24BDAC7A8](v14);
  v612 = (uint64_t)&v595 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v611 = (uint64_t)&v595 - v17;
  v627 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  v626 = *(_QWORD *)(v627 - 8);
  MEMORY[0x24BDAC7A8](v627);
  v599 = (uint64_t)&v595 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v629 = (uint64_t)&v595 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v21);
  v610 = (uint64_t)&v595 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v23);
  v609 = (uint64_t)&v595 - v24;
  MEMORY[0x24BDAC7A8](v25);
  v608 = (char *)&v595 - v26;
  MEMORY[0x24BDAC7A8](v27);
  v607 = (uint64_t)&v595 - v28;
  MEMORY[0x24BDAC7A8](v29);
  v632 = (uint64_t)&v595 - v30;
  MEMORY[0x24BDAC7A8](v31);
  v636 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v595 - v32);
  v615 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E0);
  v595 = *(_QWORD *)(v615 - 8);
  MEMORY[0x24BDAC7A8](v615);
  v606 = (uint64_t)&v595 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v34);
  v625 = (uint64_t)&v595 - v35;
  MEMORY[0x24BDAC7A8](v36);
  v614 = (uint64_t)&v595 - v37;
  v664 = sub_240154310();
  v662 = *(_QWORD *)(v664 - 8);
  MEMORY[0x24BDAC7A8](v664);
  v624 = (uint64_t)&v595 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  v631 = (char *)&v595 - v40;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v41);
  v630 = (char *)&v595 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v43);
  v661 = (char *)&v595 - v44;
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v45);
  v646 = (char *)&v595 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v47);
  v647 = (uint64_t)&v595 - v48;
  MEMORY[0x24BDAC7A8](v49);
  v605 = (char *)&v595 - v50;
  MEMORY[0x24BDAC7A8](v51);
  v623 = (uint64_t)&v595 - v52;
  MEMORY[0x24BDAC7A8](v53);
  v622 = (uint64_t)&v595 - v54;
  MEMORY[0x24BDAC7A8](v55);
  v675 = (char *)&v595 - v56;
  MEMORY[0x24BDAC7A8](v57);
  v651 = (char *)&v595 - v58;
  MEMORY[0x24BDAC7A8](v59);
  v604 = (char *)&v595 - v60;
  MEMORY[0x24BDAC7A8](v61);
  v666 = (char *)&v595 - v62;
  MEMORY[0x24BDAC7A8](v63);
  v667 = (char *)&v595 - v64;
  MEMORY[0x24BDAC7A8](v65);
  v642 = (char *)&v595 - v66;
  v660 = type metadata accessor for DKPersonGroup(0);
  v654 = *(_QWORD *)(v660 - 8);
  MEMORY[0x24BDAC7A8](v660);
  v658 = (uint64_t)&v595 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v68);
  v621 = (uint64_t)&v595 - v69;
  MEMORY[0x24BDAC7A8](v70);
  v644 = (uint64_t)&v595 - v71;
  v656 = type metadata accessor for DKPersonGroupFilter.Track(0);
  v72 = *(_QWORD *)(v656 - 8);
  MEMORY[0x24BDAC7A8](v656);
  v635 = (uint64_t)&v595 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v74);
  v598 = (uint64_t)&v595 - v75;
  MEMORY[0x24BDAC7A8](v76);
  v597 = (uint64_t)&v595 - v77;
  MEMORY[0x24BDAC7A8](v78);
  v679 = (void (*)(uint64_t, char *, uint64_t))((char *)&v595 - v79);
  MEMORY[0x24BDAC7A8](v80);
  v681 = (uint64_t)&v595 - v81;
  MEMORY[0x24BDAC7A8](v82);
  v84 = (char *)&v595 - v83;
  MEMORY[0x24BDAC7A8](v85);
  v686 = (char *)&v595 - v86;
  v687 = sub_24015434C();
  v87 = *(char **)(v687 - 8);
  MEMORY[0x24BDAC7A8](v687);
  v634 = (char *)&v595 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v89);
  v643 = (char *)&v595 - v90;
  MEMORY[0x24BDAC7A8](v91);
  v619 = (char *)&v595 - v92;
  MEMORY[0x24BDAC7A8](v93);
  v672 = (char *)&v595 - v94;
  MEMORY[0x24BDAC7A8](v95);
  v657 = (char *)&v595 - v96;
  MEMORY[0x24BDAC7A8](v97);
  v682 = (uint64_t)&v595 - v98;
  MEMORY[0x24BDAC7A8](v99);
  v684 = (unint64_t)&v595 - v100;
  MEMORY[0x24BDAC7A8](v101);
  v650 = (char *)&v595 - v102;
  MEMORY[0x24BDAC7A8](v103);
  v649 = (char *)&v595 - v104;
  MEMORY[0x24BDAC7A8](v105);
  v659 = (char *)&v595 - v106;
  MEMORY[0x24BDAC7A8](v107);
  v680 = (char *)&v595 - v108;
  MEMORY[0x24BDAC7A8](v109);
  v668 = (char *)&v595 - v110;
  MEMORY[0x24BDAC7A8](v111);
  v113 = (char *)&v595 - v112;
  v618 = sub_2400FADA4(a2, a3, a4);
  v114 = *(char **)(a2 + 16);
  v115 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v639 = v72;
  v601 = a3;
  v600 = a2;
  v683 = v84;
  v685 = v113;
  v677 = v114;
  if (v114)
  {
    v688 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_2400F3F28((int64_t)v114);
    v116 = v114;
    v117 = a2 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
    v118 = v87;
    v119 = *(_QWORD *)(v72 + 72);
    v120 = v113;
    v121 = v116;
    v122 = v656;
    v123 = v687;
    do
    {
      v124 = v686;
      sub_240080084(v117, (uint64_t)v686, type metadata accessor for DKPersonGroupFilter.Track);
      (*((void (**)(char *, char *, uint64_t))v118 + 2))(v120, &v124[*(int *)(v122 + 20)], v123);
      sub_2400800C8((uint64_t)v124, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E586C);
      v125 = v688;
      v127 = v688[2];
      v126 = v688[3];
      if (v127 >= v126 >> 1)
      {
        sub_2400E586C(v126 > 1, v127 + 1, 1);
        v125 = v688;
      }
      v125[2] = v127 + 1;
      (*((void (**)(unint64_t, char *, uint64_t))v118 + 4))((unint64_t)v125+ ((v118[80] + 32) & ~(unint64_t)v118[80])+ *((_QWORD *)v118 + 9) * v127, v120, v123);
      v117 += v119;
      --v121;
      v122 = v656;
    }
    while (v121);
    v128 = (char *)v688;
    v87 = v118;
    a3 = v601;
    a2 = v600;
    v115 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v84 = v683;
  }
  else
  {
    v128 = (char *)sub_2400958EC(0);
  }
  v129 = *(char **)(a3 + 16);
  v678 = v129;
  if (v129)
  {
    v676 = v128;
    v688 = v115;
    sub_2400F3F28((int64_t)v129);
    v130 = a3 + ((*(unsigned __int8 *)(v639 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v639 + 80));
    v131 = v87;
    v132 = *(_QWORD *)(v639 + 72);
    v133 = v656;
    v134 = v687;
    v135 = (uint64_t)v685;
    do
    {
      v136 = v686;
      sub_240080084(v130, (uint64_t)v686, type metadata accessor for DKPersonGroupFilter.Track);
      (*((void (**)(uint64_t, char *, uint64_t))v131 + 2))(v135, &v136[*(int *)(v133 + 20)], v134);
      sub_2400800C8((uint64_t)v136, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E586C);
      v137 = v688;
      v138 = v135;
      v140 = v688[2];
      v139 = v688[3];
      if (v140 >= v139 >> 1)
      {
        sub_2400E586C(v139 > 1, v140 + 1, 1);
        v137 = v688;
      }
      v137[2] = v140 + 1;
      (*((void (**)(unint64_t, uint64_t, uint64_t))v131 + 4))((unint64_t)v137+ ((v131[80] + 32) & ~(unint64_t)v131[80])+ *((_QWORD *)v131 + 9) * v140, v138, v134);
      v130 += v132;
      --v129;
      v133 = v656;
      v135 = v138;
    }
    while (v129);
    v141 = v688;
    v87 = v131;
    a3 = v601;
    a2 = v600;
    v115 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v84 = v683;
    v128 = v676;
  }
  else
  {
    v141 = (_QWORD *)sub_2400958EC(0);
  }
  v688 = v128;
  sub_240095098((uint64_t)v141);
  v142 = (char *)v688;
  v143 = v633;
  v144 = *(_QWORD *)(v633 + 16);
  if (v144)
  {
    v676 = (char *)v688;
    v688 = v115;
    sub_2400F3F28(v144);
    v145 = v143 + ((*(unsigned __int8 *)(v639 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v639 + 80));
    v146 = v87;
    v147 = *(_QWORD *)(v639 + 72);
    v148 = v656;
    v149 = v687;
    v150 = (uint64_t)v685;
    do
    {
      v151 = v686;
      sub_240080084(v145, (uint64_t)v686, type metadata accessor for DKPersonGroupFilter.Track);
      (*((void (**)(uint64_t, char *, uint64_t))v146 + 2))(v150, &v151[*(int *)(v148 + 20)], v149);
      sub_2400800C8((uint64_t)v151, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E586C);
      v152 = v688;
      v153 = v150;
      v155 = v688[2];
      v154 = v688[3];
      if (v155 >= v154 >> 1)
      {
        sub_2400E586C(v154 > 1, v155 + 1, 1);
        v152 = v688;
      }
      v152[2] = v155 + 1;
      (*((void (**)(unint64_t, uint64_t, uint64_t))v146 + 4))((unint64_t)v152+ ((v146[80] + 32) & ~(unint64_t)v146[80])+ *((_QWORD *)v146 + 9) * v155, v153, v149);
      v145 += v147;
      --v144;
      v148 = v656;
      v150 = v153;
    }
    while (v144);
    v156 = v688;
    v87 = v146;
    a3 = v601;
    a2 = v600;
    v115 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v84 = v683;
    v142 = v676;
  }
  else
  {
    v156 = (_QWORD *)sub_2400958EC(0);
  }
  v688 = v142;
  sub_240095098((uint64_t)v156);
  v603 = sub_2400960A4((uint64_t)v688);
  swift_bridgeObjectRelease();
  v688 = v115;
  v157 = sub_240141FD8(a2);
  swift_bridgeObjectRetain();
  v683 = v87;
  if (v157)
  {
    v158 = 0;
    v159 = v639;
    v160 = v686;
    do
    {
      if (*(_QWORD *)(a2 + 16) <= v158)
        goto LABEL_377;
      sub_240080084(a2+ ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80))+ *(_QWORD *)(v159 + 72) * v158, (uint64_t)v84, type metadata accessor for DKPersonGroupFilter.Track);
      if ((v84[8] & 1) != 0)
      {
        sub_2400800C8((uint64_t)v84, type metadata accessor for DKPersonGroupFilter.Track);
      }
      else
      {
        sub_2400A0E74((uint64_t)v84, (uint64_t)v160, type metadata accessor for DKPersonGroupFilter.Track);
        sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E5840);
        v162 = v688[2];
        v161 = v688[3];
        if (v162 >= v161 >> 1)
          sub_2400E5840(v161 > 1, v162 + 1, 1);
        sub_2400F6F98(v162, (uint64_t)v160);
        v159 = v639;
      }
      ++v158;
    }
    while (v157 != v158);
    v163 = (char *)v688;
    v87 = v683;
    v115 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v163 = (char *)v115;
    v159 = v639;
  }
  swift_bridgeObjectRelease();
  v164 = *((_QWORD *)v163 + 2);
  if (v164)
  {
    v688 = v115;
    sub_2400F3F28(v164);
    v165 = (*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80);
    v676 = v163;
    v166 = (uint64_t)&v163[v165];
    v167 = v87;
    v168 = *(_QWORD *)(v159 + 72);
    v169 = v656;
    v170 = v687;
    v171 = (uint64_t)v685;
    do
    {
      v172 = v686;
      sub_240080084(v166, (uint64_t)v686, type metadata accessor for DKPersonGroupFilter.Track);
      (*((void (**)(uint64_t, char *, uint64_t))v167 + 2))(v171, &v172[*(int *)(v169 + 20)], v170);
      sub_2400800C8((uint64_t)v172, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E586C);
      v173 = v688;
      v175 = v688[2];
      v174 = v688[3];
      if (v175 >= v174 >> 1)
      {
        sub_2400E586C(v174 > 1, v175 + 1, 1);
        v173 = v688;
      }
      v173[2] = v175 + 1;
      (*((void (**)(unint64_t, uint64_t, uint64_t))v167 + 4))((unint64_t)v173+ ((v167[80] + 32) & ~(unint64_t)v167[80])+ *((_QWORD *)v167 + 9) * v175, v171, v170);
      v166 += v168;
      --v164;
      v169 = v656;
    }
    while (v164);
    swift_release();
    v176 = v688;
    v159 = v639;
    v87 = v167;
    a3 = v601;
    v115 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v176 = (_QWORD *)sub_2400958EC(0);
    swift_release();
  }
  v688 = v115;
  v177 = sub_240141FD8(a3);
  swift_bridgeObjectRetain();
  v178 = v686;
  if (v177)
  {
    v179 = 0;
    v180 = v681;
    do
    {
      if (*(_QWORD *)(a3 + 16) <= v179)
        goto LABEL_378;
      sub_240080084(a3+ ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80))+ *(_QWORD *)(v159 + 72) * v179, v180, type metadata accessor for DKPersonGroupFilter.Track);
      if ((*(_BYTE *)(v180 + 8) & 1) != 0)
      {
        sub_2400800C8(v180, type metadata accessor for DKPersonGroupFilter.Track);
      }
      else
      {
        sub_2400A0E74(v180, (uint64_t)v178, type metadata accessor for DKPersonGroupFilter.Track);
        sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E5840);
        v182 = v688[2];
        v181 = v688[3];
        if (v182 >= v181 >> 1)
          sub_2400E5840(v181 > 1, v182 + 1, 1);
        sub_2400F6F98(v182, (uint64_t)v178);
        v159 = v639;
        v180 = v681;
      }
      ++v179;
    }
    while (v177 != v179);
    v115 = v688;
  }
  swift_bridgeObjectRelease();
  v183 = v115[2];
  if (v183)
  {
    v681 = (uint64_t)v176;
    v688 = (_QWORD *)MEMORY[0x24BEE4AF8];
    sub_2400F3F28(v183);
    v184 = (*(unsigned __int8 *)(v639 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v639 + 80);
    v676 = (char *)v115;
    v185 = (uint64_t)v115 + v184;
    v186 = v87;
    v187 = *(_QWORD *)(v639 + 72);
    v188 = v656;
    v189 = v687;
    v190 = (uint64_t)v685;
    do
    {
      v191 = v686;
      sub_240080084(v185, (uint64_t)v686, type metadata accessor for DKPersonGroupFilter.Track);
      (*((void (**)(uint64_t, char *, uint64_t))v186 + 2))(v190, &v191[*(int *)(v188 + 20)], v189);
      sub_2400800C8((uint64_t)v191, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E586C);
      v192 = v688;
      v193 = v189;
      v195 = v688[2];
      v194 = v688[3];
      if (v195 >= v194 >> 1)
      {
        sub_2400E586C(v194 > 1, v195 + 1, 1);
        v192 = v688;
      }
      v192[2] = v195 + 1;
      (*((void (**)(unint64_t, uint64_t, uint64_t))v186 + 4))((unint64_t)v192+ ((v186[80] + 32) & ~(unint64_t)v186[80])+ *((_QWORD *)v186 + 9) * v195, v190, v193);
      v185 += v187;
      --v183;
      v188 = v656;
      v189 = v193;
    }
    while (v183);
    swift_release();
    v196 = v688;
    v178 = v686;
    v176 = (_QWORD *)v681;
  }
  else
  {
    v196 = (_QWORD *)sub_2400958EC(0);
    swift_release();
    v189 = v687;
  }
  v688 = v176;
  sub_240095098((uint64_t)v196);
  v197 = v688;
  v198 = (char *)MEMORY[0x24BEE4AF8];
  v688 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v199 = v633;
  v200 = sub_240141FD8(v633);
  swift_bridgeObjectRetain();
  v637 = v200;
  v201 = (uint64_t)v679;
  if (v200)
  {
    v202 = 0;
    do
    {
      if (*(_QWORD *)(v199 + 16) <= v202)
        goto LABEL_379;
      sub_240080084(v199+ ((*(unsigned __int8 *)(v639 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v639 + 80))+ *(_QWORD *)(v639 + 72) * v202, v201, type metadata accessor for DKPersonGroupFilter.Track);
      if ((*(_BYTE *)(v201 + 8) & 1) != 0)
      {
        sub_2400800C8(v201, type metadata accessor for DKPersonGroupFilter.Track);
      }
      else
      {
        sub_2400A0E74(v201, (uint64_t)v178, type metadata accessor for DKPersonGroupFilter.Track);
        sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E5840);
        v204 = v688[2];
        v203 = v688[3];
        if (v204 >= v203 >> 1)
          sub_2400E5840(v203 > 1, v204 + 1, 1);
        sub_2400F6F98(v204, (uint64_t)v178);
        v199 = v633;
      }
      ++v202;
    }
    while (v637 != v202);
    v205 = (char *)v688;
    v206 = (char *)MEMORY[0x24BEE4AF8];
  }
  else
  {
    v205 = v198;
    v206 = v198;
  }
  swift_bridgeObjectRelease();
  v207 = *((_QWORD *)v205 + 2);
  if (v207)
  {
    v681 = (uint64_t)v197;
    v688 = v206;
    sub_2400F3F28(v207);
    v208 = (*(unsigned __int8 *)(v639 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v639 + 80);
    v679 = (void (*)(uint64_t, char *, uint64_t))v205;
    v209 = (uint64_t)&v205[v208];
    v210 = *(_QWORD *)(v639 + 72);
    v211 = v656;
    v212 = (void (**)(uint64_t, char *, uint64_t))v683;
    v213 = (uint64_t)v685;
    do
    {
      v214 = v686;
      sub_240080084(v209, (uint64_t)v686, type metadata accessor for DKPersonGroupFilter.Track);
      v212[2](v213, &v214[*(int *)(v211 + 20)], v189);
      sub_2400800C8((uint64_t)v214, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E586C);
      v215 = v688;
      v216 = v189;
      v218 = v688[2];
      v217 = v688[3];
      if (v218 >= v217 >> 1)
      {
        sub_2400E586C(v217 > 1, v218 + 1, 1);
        v215 = v688;
      }
      v215[2] = v218 + 1;
      v212[4]((uint64_t)v215+ ((*((unsigned __int8 *)v212 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v212 + 80))+ (_QWORD)v212[9] * v218, (char *)v213, v216);
      v209 += v210;
      --v207;
      v211 = v656;
      v189 = v216;
    }
    while (v207);
    swift_release();
    v219 = v688;
    v197 = (_QWORD *)v681;
  }
  else
  {
    v219 = (_QWORD *)sub_2400958EC(0);
    swift_release();
  }
  v688 = v197;
  sub_240095098((uint64_t)v219);
  v653 = sub_2400960A4((uint64_t)v688);
  swift_bridgeObjectRelease();
  v220 = (void (**)(uint64_t, char *, uint64_t))v683;
  if (v677)
  {
    v688 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v221 = v677;
    sub_2400F3F28((int64_t)v677);
    v222 = v600 + ((*(unsigned __int8 *)(v639 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v639 + 80));
    v223 = *(_QWORD *)(v639 + 72);
    v224 = v656;
    v225 = (uint64_t)v685;
    do
    {
      v226 = v686;
      sub_240080084(v222, (uint64_t)v686, type metadata accessor for DKPersonGroupFilter.Track);
      v220[2](v225, &v226[*(int *)(v224 + 20)], v189);
      sub_2400800C8((uint64_t)v226, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E586C);
      v227 = v688;
      v228 = v189;
      v230 = v688[2];
      v229 = v688[3];
      if (v230 >= v229 >> 1)
      {
        sub_2400E586C(v229 > 1, v230 + 1, 1);
        v227 = v688;
      }
      v227[2] = v230 + 1;
      v220[4]((uint64_t)v227+ ((*((unsigned __int8 *)v220 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v220 + 80))+ (_QWORD)v220[9] * v230, (char *)v225, v228);
      v222 += v223;
      --v221;
      v224 = v656;
      v189 = v228;
    }
    while (v221);
    v620 = 0;
    v231 = v688;
  }
  else
  {
    v231 = (_QWORD *)sub_2400958EC(0);
    v620 = 0;
  }
  if (v678)
  {
    v681 = (uint64_t)v231;
    v688 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v232 = v678;
    sub_2400F3F28((int64_t)v678);
    v233 = v601 + ((*(unsigned __int8 *)(v639 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v639 + 80));
    v234 = (uint64_t)v685;
    v235 = v220;
    v236 = *(_QWORD *)(v639 + 72);
    v237 = v656;
    do
    {
      v238 = v686;
      sub_240080084(v233, (uint64_t)v686, type metadata accessor for DKPersonGroupFilter.Track);
      v235[2](v234, &v238[*(int *)(v237 + 20)], v189);
      sub_2400800C8((uint64_t)v238, type metadata accessor for DKPersonGroupFilter.Track);
      sub_2400F6F10((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_2400E586C);
      v239 = v688;
      v240 = v189;
      v242 = v688[2];
      v241 = v688[3];
      if (v242 >= v241 >> 1)
      {
        sub_2400E586C(v241 > 1, v242 + 1, 1);
        v239 = v688;
      }
      v239[2] = v242 + 1;
      v235[4]((uint64_t)v239+ ((*((unsigned __int8 *)v235 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v235 + 80))+ (_QWORD)v235[9] * v242, (char *)v234, v240);
      v233 += v236;
      --v232;
      v237 = v656;
      v189 = v240;
    }
    while (v232);
    v243 = v688;
    v220 = v235;
    v231 = (_QWORD *)v681;
  }
  else
  {
    v243 = (_QWORD *)sub_2400958EC(0);
  }
  v688 = v231;
  sub_240095098((uint64_t)v243);
  v602 = sub_2400960A4((uint64_t)v688);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EB8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_QWORD *)(inited + 32) = MEMORY[0x24BEE4B08];
  v691 = (_QWORD *)inited;
  v245 = v618;
  v246 = sub_240141FD8(v618);
  v247 = v651;
  v248 = v650;
  v249 = v649;
  v250 = v668;
  v616 = v246;
  if (v246)
  {
    v251 = 0;
    v617 = v245 + ((*(unsigned __int8 *)(v654 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v654 + 80));
    v665 = xmmword_240155A40;
    v655 = xmmword_240157220;
    v252 = v667;
    do
    {
      if (*(_QWORD *)(v245 + 16) <= v251)
        goto LABEL_383;
      v255 = *(_QWORD *)(v654 + 72);
      v628 = v251;
      sub_240080084(v617 + v255 * v251, v644, type metadata accessor for DKPersonGroup);
      v256 = DKPersonGroup.getUUIDs()();
      v257 = sub_2400EB6D8(v256);
      v645 = v256;
      v641 = v257;
      if (v257)
      {
        v258 = 0;
        v259 = *((unsigned __int8 *)v220 + 80);
        v671 = (v259 + 32) & ~v259;
        v640 = v256 + v671;
        v669 = v259 | 7;
        while (1)
        {
          if (*(_QWORD *)(v645 + 16) <= v258)
            goto LABEL_373;
          v262 = (uint64_t)v220[9];
          v652 = v258;
          v673 = v262;
          v263 = v642;
          v686 = (char *)v220[2];
          ((void (*)(char *, unint64_t, uint64_t))v686)(v642, v640 + v262 * v258, v189);
          v679 = v220[7];
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v679)(v263, 0, 1, v189);
          v681 = (uint64_t)v220[6];
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v681)(v263, 1, v189) == 1)
            break;
          v678 = (char *)v220[4];
          ((void (*)(char *, char *, uint64_t))v678)(v250, v263, v189);
          v264 = DKPersonGroup.getUUIDs()();
          v677 = (char *)sub_2400EB6D8(v264);
          if (v677)
          {
            v265 = 0;
            v266 = v264 + v671;
            v267 = v673;
            v670 = (_QWORD *)(v671 + 2 * v673);
            v268 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
            v260 = v679;
            v676 = (char *)v264;
            while (1)
            {
              if (*(_QWORD *)(v264 + 16) <= (unint64_t)v265)
              {
                __break(1u);
LABEL_215:
                __break(1u);
LABEL_216:
                swift_release();
                v323 = v670;
                goto LABEL_218;
              }
              ((void (*)(char *, unint64_t, uint64_t))v686)(v252, v266, v189);
              ((void (*)(char *, _QWORD, uint64_t, uint64_t))v260)(v252, 0, 1, v189);
              if (((unsigned int (*)(char *, uint64_t, uint64_t))v681)(v252, 1, v189) == 1)
                goto LABEL_99;
              v269 = v680;
              ((void (*)(char *, char *, uint64_t))v678)(v680, v252, v189);
              sub_2400707A8((unint64_t *)&qword_256FB5A68, v268, MEMORY[0x24BDCEA98]);
              if ((sub_240154610() & 1) != 0)
              {
                (*((void (**)(char *, uint64_t))v683 + 1))(v269, v189);
              }
              else
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4ED8);
                v270 = swift_allocObject();
                *(_OWORD *)(v270 + 16) = v665;
                v271 = v270 + v671;
                v272 = v686;
                ((void (*)(uint64_t, char *, uint64_t))v686)(v270 + v671, v250, v189);
                v273 = v271 + v267;
                ((void (*)(uint64_t, char *, uint64_t))v272)(v271 + v267, v269, v189);
                sub_2400707A8(&qword_256FB5A60, v268, MEMORY[0x24BDCEA88]);
                v688 = (_QWORD *)sub_2401548D4();
                v274 = v666;
                ((void (*)(char *, uint64_t, uint64_t))v272)(v666, v271, v189);
                v275 = v679;
                ((void (*)(char *, _QWORD, uint64_t, uint64_t))v679)(v274, 0, 1, v189);
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v681)(v274, 1, v189) != 1)
                {
                  v276 = v659;
                  ((void (*)(char *, char *, uint64_t))v678)(v659, v274, v189);
                  v277 = v189;
                  v278 = (uint64_t)v685;
                  sub_2400848A4((uint64_t)v685, v276);
                  v279 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v683 + 1);
                  v280 = v278;
                  v189 = v277;
                  v267 = v673;
                  v279(v280, v189);
                  ((void (*)(char *, uint64_t, uint64_t))v686)(v274, v273, v189);
                  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v275)(v274, 0, 1, v189);
                  if (((unsigned int (*)(char *, uint64_t, uint64_t))v681)(v274, 1, v189) != 1)
                  {
                    v281 = v659;
                    ((void (*)(char *, char *, uint64_t))v678)(v659, v274, v189);
                    v282 = (uint64_t)v685;
                    v283 = v281;
                    v267 = v673;
                    sub_2400848A4((uint64_t)v685, v283);
                    v279(v282, v189);
                    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v275)(v274, 1, 1, v189);
                  }
                }
                swift_bridgeObjectRelease();
                v284 = v688;
                swift_bridgeObjectRetain();
                sub_2400F3FC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24007850C);
                v285 = v691;
                v287 = v691[2];
                v286 = v691[3];
                if (v287 >= v286 >> 1)
                {
                  v285 = sub_24007850C((_QWORD *)(v286 > 1), v287 + 1, 1, v691);
                  v691 = v285;
                }
                v268 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
                v264 = (unint64_t)v676;
                v288 = v680;
                v285[2] = v287 + 1;
                v285[v287 + 4] = v284;
                if (*(_QWORD *)(v674[6] + 16)
                  && (swift_bridgeObjectRetain(),
                      swift_bridgeObjectRetain(),
                      sub_24013F1E4((uint64_t)v284),
                      v290 = v289,
                      swift_bridgeObjectRelease(),
                      swift_bridgeObjectRelease(),
                      (v290 & 1) != 0))
                {
                  (*((void (**)(char *, uint64_t))v683 + 1))(v288, v189);
                  swift_bridgeObjectRelease();
                  v252 = v667;
                  v250 = v668;
                }
                else
                {
                  v291 = v674;
                  v292 = (_QWORD *)v674[2];
                  v293 = v292[6];
                  v294 = v292[3];
                  v295 = v292[4];
                  v296 = v662;
                  v297 = (uint64_t)v661;
                  v298 = v664;
                  (*(void (**)(char *, uint64_t, uint64_t))(v662 + 16))(v661, v663, v664);
                  v299 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v296 + 56);
                  v299(v297, 0, 1, v298);
                  type metadata accessor for DKSmoothingFilter();
                  v300 = swift_allocObject();
                  *(_OWORD *)(v300 + 48) = v655;
                  v301 = v300 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
                  v299(v300 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v298);
                  v302 = v300 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
                  *(_QWORD *)v302 = 0;
                  *(_BYTE *)(v302 + 8) = 1;
                  v303 = v300 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
                  *(_QWORD *)v303 = 0;
                  *(_BYTE *)(v303 + 8) = 1;
                  *(_BYTE *)(v300 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
                  *(_QWORD *)(v300 + 16) = v294;
                  *(_QWORD *)(v300 + 24) = v295;
                  *(_WORD *)(v300 + 32) = 256;
                  *(_QWORD *)(v300 + 40) = v293;
                  sub_24009C218(v297, v301, &qword_256FB4CC8);
                  *(_QWORD *)v302 = 0;
                  *(_BYTE *)(v302 + 8) = 1;
                  *(_QWORD *)v303 = 0;
                  *(_BYTE *)(v303 + 8) = 1;
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v688 = (_QWORD *)v291[6];
                  v305 = v688;
                  v291[6] = 0x8000000000000000;
                  v307 = sub_24013F1E4((uint64_t)v284);
                  v308 = v305[2];
                  v309 = (v306 & 1) == 0;
                  v310 = v308 + v309;
                  if (__OFADD__(v308, v309))
                  {
                    __break(1u);
LABEL_372:
                    __break(1u);
LABEL_373:
                    __break(1u);
LABEL_374:
                    __break(1u);
LABEL_375:
                    __break(1u);
LABEL_376:
                    __break(1u);
LABEL_377:
                    __break(1u);
LABEL_378:
                    __break(1u);
LABEL_379:
                    __break(1u);
LABEL_380:
                    __break(1u);
LABEL_381:
                    __break(1u);
                    goto LABEL_382;
                  }
                  v311 = v306;
                  if (v305[3] >= v310)
                  {
                    v189 = v687;
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                      sub_2400AEBB4();
                  }
                  else
                  {
                    sub_2400AB8E8(v310, isUniquelyReferenced_nonNull_native);
                    v312 = sub_24013F1E4((uint64_t)v284);
                    v189 = v687;
                    if ((v311 & 1) != (v313 & 1))
                      goto LABEL_394;
                    v307 = v312;
                  }
                  v264 = (unint64_t)v676;
                  v314 = v688;
                  if ((v311 & 1) != 0)
                  {
                    v315 = v688[7];
                    swift_release();
                    *(_QWORD *)(v315 + 8 * v307) = v300;
                  }
                  else
                  {
                    v688[(v307 >> 6) + 8] |= 1 << v307;
                    v316 = 8 * v307;
                    *(_QWORD *)(v314[6] + v316) = v284;
                    *(_QWORD *)(v314[7] + v316) = v300;
                    v317 = v314[2];
                    v318 = __OFADD__(v317, 1);
                    v319 = v317 + 1;
                    if (v318)
                      goto LABEL_372;
                    v314[2] = v319;
                    swift_bridgeObjectRetain();
                  }
                  v674[6] = v314;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  (*((void (**)(char *, uint64_t))v683 + 1))(v680, v189);
                  v252 = v667;
                  v250 = v668;
                  v268 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
                  v267 = v673;
                }
              }
              ++v265;
              v266 += v267;
              v260 = v679;
              if (v677 == v265)
                goto LABEL_98;
            }
          }
          v260 = v679;
LABEL_98:
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v260)(v252, 1, 1, v189);
LABEL_99:
          swift_bridgeObjectRelease();
          v261 = v652 + 1;
          v220 = (void (**)(uint64_t, char *, uint64_t))v683;
          (*((void (**)(char *, uint64_t))v683 + 1))(v250, v189);
          v258 = v261;
          v247 = v651;
          v248 = v650;
          v249 = v649;
          if (v261 == v641)
            goto LABEL_92;
        }
      }
      else
      {
        v679 = v220[7];
LABEL_92:
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v679)(v642, 1, 1, v189);
      }
      swift_bridgeObjectRelease();
      v253 = v628 + 1;
      sub_2400800C8(v644, type metadata accessor for DKPersonGroup);
      v251 = v253;
      v254 = v253 == v616;
      v245 = v618;
    }
    while (!v254);
  }
  swift_bridgeObjectRelease();
  v320 = *(_QWORD *)(v653 + 56);
  v667 = (char *)(v653 + 56);
  v321 = 1 << *(_BYTE *)(v653 + 32);
  if (v321 < 64)
    v322 = ~(-1 << v321);
  else
    v322 = -1;
  v652 = v322 & v320;
  v323 = v674 + 6;
  v644 = (unint64_t)(v321 + 63) >> 6;
  swift_bridgeObjectRetain();
  v324 = 0;
  v665 = xmmword_240155A40;
  v655 = xmmword_240157220;
  v325 = v675;
  v670 = v323;
LABEL_134:
  v326 = v604;
  if (v652)
  {
    v327 = __clz(__rbit64(v652));
    v652 &= v652 - 1;
    v645 = v324;
    v328 = v327 | (v324 << 6);
LABEL_147:
    v332 = v653;
    v333 = (uint64_t)v220[9];
    v334 = *(_QWORD *)(v653 + 48) + v333 * v328;
    v686 = (char *)v220[2];
    ((void (*)(char *, unint64_t, uint64_t))v686)(v604, v334, v189);
    v678 = (char *)v220[7];
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v678)(v326, 0, 1, v189);
    v677 = (char *)v220[6];
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v677)(v326, 1, v189) == 1)
      goto LABEL_216;
    v680 = (char *)v220[4];
    ((void (*)(char *, char *, uint64_t))v680)(v249, v326, v189);
    v335 = 1 << *(_BYTE *)(v332 + 32);
    if (v335 < 64)
      v336 = ~(-1 << v335);
    else
      v336 = -1;
    v337 = v336 & *(_QWORD *)(v332 + 56);
    v668 = (char *)((unint64_t)(v335 + 63) >> 6);
    v666 = (char *)(2 * v333);
    swift_bridgeObjectRetain();
    v338 = 0;
    while (1)
    {
      if (v337)
      {
        v339 = __clz(__rbit64(v337));
        v340 = (v337 - 1) & v337;
        v341 = v339 | (v338 << 6);
      }
      else
      {
        v318 = __OFADD__(v338++, 1);
        if (v318)
          goto LABEL_375;
        if (v338 >= (uint64_t)v668)
        {
LABEL_132:
          ((void (*)(char *, uint64_t, uint64_t, uint64_t))v678)(v247, 1, 1, v189);
LABEL_133:
          swift_release();
          v323 = v670;
          ((void (*)(char *, uint64_t))v220[1])(v249, v189);
          v324 = v645;
          goto LABEL_134;
        }
        v342 = *(_QWORD *)&v667[8 * v338];
        if (!v342)
        {
          v343 = v338 + 1;
          if (v338 + 1 >= (uint64_t)v668)
            goto LABEL_132;
          v342 = *(_QWORD *)&v667[8 * v343];
          if (!v342)
          {
            v343 = v338 + 2;
            if (v338 + 2 >= (uint64_t)v668)
              goto LABEL_132;
            v342 = *(_QWORD *)&v667[8 * v343];
            if (!v342)
            {
              v343 = v338 + 3;
              if (v338 + 3 >= (uint64_t)v668)
                goto LABEL_132;
              v342 = *(_QWORD *)&v667[8 * v343];
              if (!v342)
              {
                while (1)
                {
                  v338 = v343 + 1;
                  if (__OFADD__(v343, 1))
                    goto LABEL_381;
                  if (v338 >= (uint64_t)v668)
                    goto LABEL_132;
                  v342 = *(_QWORD *)&v667[8 * v338];
                  ++v343;
                  if (v342)
                    goto LABEL_166;
                }
              }
            }
          }
          v338 = v343;
        }
LABEL_166:
        v340 = (v342 - 1) & v342;
        v341 = __clz(__rbit64(v342)) + (v338 << 6);
      }
      ((void (*)(char *, unint64_t, uint64_t))v686)(v247, *(_QWORD *)(v653 + 48) + v341 * v333, v189);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v678)(v247, 0, 1, v189);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v677)(v247, 1, v189) == 1)
        goto LABEL_133;
      v671 = v340;
      v673 = v338;
      v344 = v333;
      ((void (*)(char *, char *, uint64_t))v680)(v248, v247, v189);
      v345 = MEMORY[0x24BDCEA58];
      sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      if ((sub_240154610() & 1) != 0)
      {
        ((void (*)(char *, uint64_t))v220[1])(v248, v189);
        v333 = v344;
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4ED8);
        v346 = (*((unsigned __int8 *)v220 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v220 + 80);
        v347 = swift_allocObject();
        *(_OWORD *)(v347 + 16) = v665;
        v669 = v347;
        v348 = v249;
        v349 = (char *)(v347 + v346);
        v350 = v686;
        ((void (*)(unint64_t, char *, uint64_t))v686)(v347 + v346, v348, v189);
        v676 = v349;
        ((void (*)(char *, char *, uint64_t))v350)(&v349[v344], v248, v189);
        v351 = (uint64_t (*)(uint64_t))v345;
        v333 = v344;
        v679 = (void (*)(uint64_t, char *, uint64_t))sub_2400707A8(&qword_256FB5A60, v351, MEMORY[0x24BDCEA88]);
        v352 = (_QWORD *)sub_2401548D4();
        v353 = 0;
        v354 = 0;
        while (1)
        {
          v355 = v353;
          ((void (*)(char *, char *, uint64_t))v686)(v325, &v676[v354 * v333], v189);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v678)(v325, 0, 1, v189);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v677)(v325, 1, v189) == 1)
            break;
          LODWORD(v681) = v355;
          ((void (*)(unint64_t, char *, uint64_t))v680)(v684, v325, v189);
          swift_bridgeObjectRetain();
          v356 = sub_2401545BC();
          v357 = -1 << *((_BYTE *)v352 + 32);
          v358 = v356 & ~v357;
          if (((*(_QWORD *)((char *)v352 + ((v358 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v358) & 1) != 0)
          {
            v359 = ~v357;
            while (1)
            {
              v360 = v352[6] + v358 * v333;
              v361 = (uint64_t)v685;
              v362 = v687;
              ((void (*)(char *, unint64_t, uint64_t))v686)(v685, v360, v687);
              v363 = sub_240154610();
              v364 = v220[1];
              ((void (*)(uint64_t, uint64_t))v364)(v361, v362);
              if ((v363 & 1) != 0)
                break;
              v358 = (v358 + 1) & v359;
              v220 = (void (**)(uint64_t, char *, uint64_t))v683;
              v333 = v344;
              if (((*(_QWORD *)((char *)v352 + ((v358 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v358) & 1) == 0)
                goto LABEL_177;
            }
            swift_bridgeObjectRelease();
            v189 = v687;
            v333 = v344;
            ((void (*)(unint64_t, uint64_t))v364)(v684, v687);
          }
          else
          {
LABEL_177:
            swift_bridgeObjectRelease();
            v365 = swift_isUniquelyReferenced_nonNull_native();
            ((void (*)(uint64_t, unint64_t, uint64_t))v686)(v682, v684, v687);
            v688 = v352;
            if (v352[3] <= v352[2])
            {
              if (v365)
                sub_2400F4A08();
              else
                sub_2400F6978();
              v366 = v688;
              v367 = sub_2401545BC();
              v368 = -1 << *((_BYTE *)v366 + 32);
              v358 = v367 & ~v368;
              if (((*(_QWORD *)((char *)v366 + ((v358 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v358) & 1) != 0)
              {
                v369 = ~v368;
                do
                {
                  v370 = (uint64_t)v685;
                  v371 = v687;
                  ((void (*)(char *, unint64_t, uint64_t))v686)(v685, v366[6] + v358 * v333, v687);
                  v372 = sub_240154610();
                  ((void (*)(uint64_t, uint64_t))v220[1])(v370, v371);
                  if ((v372 & 1) != 0)
                    goto LABEL_393;
                  v358 = (v358 + 1) & v369;
                  v333 = v344;
                }
                while (((*(_QWORD *)((char *)v366 + ((v358 >> 3) & 0xFFFFFFFFFFFFF8) + 56) >> v358) & 1) != 0);
              }
            }
            else if ((v365 & 1) == 0)
            {
              sub_2400F5D60();
            }
            v189 = v687;
            v352 = v688;
            *(_QWORD *)((char *)v688 + ((v358 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v358;
            ((void (*)(unint64_t, uint64_t, uint64_t))v680)(v352[6] + v358 * v333, v682, v189);
            v373 = v352[2];
            v318 = __OFADD__(v373, 1);
            v374 = v373 + 1;
            if (v318)
              goto LABEL_215;
            v352[2] = v374;
            swift_bridgeObjectRelease();
            ((void (*)(unint64_t, uint64_t))v220[1])(v684, v189);
          }
          v353 = 1;
          v354 = 1;
          v220 = (void (**)(uint64_t, char *, uint64_t))v683;
          v325 = v675;
          if ((v681 & 1) != 0)
          {
            ((void (*)(char *, uint64_t, uint64_t, uint64_t))v678)(v675, 1, 1, v189);
            break;
          }
        }
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(*v670 + 16)
          && (swift_bridgeObjectRetain(),
              swift_bridgeObjectRetain(),
              sub_24013F1E4((uint64_t)v352),
              v376 = v375,
              swift_bridgeObjectRelease(),
              swift_bridgeObjectRelease(),
              (v376 & 1) != 0))
        {
          v248 = v650;
          ((void (*)(char *, uint64_t))v220[1])(v650, v189);
          swift_bridgeObjectRelease();
        }
        else
        {
          v377 = v674;
          v378 = (_QWORD *)v674[2];
          v380 = v378[4];
          v379 = v378[5];
          v381 = v378[3];
          v382 = v662;
          v383 = (uint64_t)v661;
          v384 = v664;
          (*(void (**)(char *, uint64_t, uint64_t))(v662 + 16))(v661, v663, v664);
          v385 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v382 + 56);
          v385(v383, 0, 1, v384);
          type metadata accessor for DKSmoothingFilter();
          v386 = swift_allocObject();
          *(_OWORD *)(v386 + 48) = v655;
          v387 = v386 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
          v385(v386 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v384);
          v388 = v386 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
          *(_QWORD *)v388 = 0;
          *(_BYTE *)(v388 + 8) = 1;
          v389 = v386 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
          *(_QWORD *)v389 = 0;
          *(_BYTE *)(v389 + 8) = 1;
          *(_BYTE *)(v386 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
          *(_QWORD *)(v386 + 16) = v381;
          *(_QWORD *)(v386 + 24) = v380;
          *(_WORD *)(v386 + 32) = 256;
          *(_QWORD *)(v386 + 40) = v379;
          sub_24009C218(v383, v387, &qword_256FB4CC8);
          *(_QWORD *)v388 = 0;
          *(_BYTE *)(v388 + 8) = 1;
          *(_QWORD *)v389 = 0;
          *(_BYTE *)(v389 + 8) = 1;
          v390 = swift_isUniquelyReferenced_nonNull_native();
          v688 = (_QWORD *)v377[6];
          v391 = v688;
          v377[6] = 0x8000000000000000;
          v393 = sub_24013F1E4((uint64_t)v352);
          v394 = v391[2];
          v395 = (v392 & 1) == 0;
          v396 = v394 + v395;
          if (__OFADD__(v394, v395))
            goto LABEL_376;
          if (v391[3] >= v396)
          {
            v189 = v687;
            v325 = v675;
            v333 = v344;
            if ((v390 & 1) == 0)
            {
              v406 = v392;
              sub_2400AEBB4();
              v392 = v406;
            }
          }
          else
          {
            v397 = v392;
            sub_2400AB8E8(v396, v390);
            v398 = sub_24013F1E4((uint64_t)v352);
            v400 = v399 & 1;
            v392 = v397;
            v254 = (v397 & 1) == v400;
            v189 = v687;
            v325 = v675;
            if (!v254)
              goto LABEL_394;
            v393 = v398;
            v333 = v344;
          }
          v401 = v688;
          v402 = 8 * v393;
          if ((v392 & 1) != 0)
          {
            v403 = v688[7];
            swift_release();
            *(_QWORD *)(v403 + v402) = v386;
          }
          else
          {
            v688[(v393 >> 6) + 8] |= 1 << v393;
            *(_QWORD *)(v401[6] + 8 * v393) = v352;
            *(_QWORD *)(v401[7] + 8 * v393) = v386;
            v404 = v401[2];
            v318 = __OFADD__(v404, 1);
            v405 = v404 + 1;
            if (v318)
              goto LABEL_380;
            v401[2] = v405;
            swift_bridgeObjectRetain();
          }
          *v670 = v401;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v248 = v650;
          ((void (*)(char *, uint64_t))v220[1])(v650, v189);
        }
        v247 = v651;
        v249 = v649;
      }
      v338 = v673;
      v337 = v671;
    }
  }
  v318 = __OFADD__(v324, 1);
  v329 = v324 + 1;
  if (v318)
    goto LABEL_387;
  if (v329 >= v644)
    goto LABEL_217;
  v330 = *(_QWORD *)&v667[8 * v329];
  if (v330)
  {
LABEL_146:
    v652 = (v330 - 1) & v330;
    v645 = v329;
    v328 = __clz(__rbit64(v330)) + (v329 << 6);
    goto LABEL_147;
  }
  v331 = v329 + 1;
  if (v329 + 1 >= v644)
    goto LABEL_217;
  v330 = *(_QWORD *)&v667[8 * v331];
  if (v330)
    goto LABEL_145;
  v331 = v329 + 2;
  if (v329 + 2 >= v644)
    goto LABEL_217;
  v330 = *(_QWORD *)&v667[8 * v331];
  if (v330)
    goto LABEL_145;
  v331 = v329 + 3;
  if (v329 + 3 >= v644)
    goto LABEL_217;
  v330 = *(_QWORD *)&v667[8 * v331];
  if (v330)
  {
LABEL_145:
    v329 = v331;
    goto LABEL_146;
  }
  while (1)
  {
    v329 = v331 + 1;
    if (__OFADD__(v331, 1))
      goto LABEL_391;
    if (v329 >= v644)
      break;
    v330 = *(_QWORD *)&v667[8 * v329];
    ++v331;
    if (v330)
      goto LABEL_146;
  }
LABEL_217:
  v678 = (char *)v220[7];
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v678)(v604, 1, 1, v189);
  swift_release();
LABEL_218:
  v407 = v603;
  v408 = *v323;
  v409 = *(_QWORD *)(v408 + 64);
  v686 = (char *)(v408 + 64);
  v410 = 1 << *(_BYTE *)(v408 + 32);
  v411 = -1;
  if (v410 < 64)
    v411 = ~(-1 << v410);
  v412 = v411 & v409;
  v413 = (unint64_t)(v410 + 63) >> 6;
  swift_bridgeObjectRetain();
  v414 = 0;
  v415 = (_QWORD **)v670;
  if (!v412)
    goto LABEL_222;
LABEL_221:
  v416 = __clz(__rbit64(v412));
  v412 &= v412 - 1;
  for (i = v416 | (v414 << 6); ; i = __clz(__rbit64(v418)) + (v414 << 6))
  {
    v420 = *(_QWORD *)(*(_QWORD *)(v408 + 48) + 8 * i);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v421 = *(_QWORD *)(sub_2400F9F68(v420, v407) + 16);
    swift_release();
    if (v421)
    {
      swift_bridgeObjectRelease();
      if (v412)
        goto LABEL_221;
    }
    else
    {
      swift_bridgeObjectRetain();
      v422 = sub_24013F1E4(v420);
      v424 = v423;
      swift_bridgeObjectRelease();
      if ((v424 & 1) != 0)
      {
        v425 = swift_isUniquelyReferenced_nonNull_native();
        v426 = *v415;
        v688 = *v415;
        *v415 = (_QWORD *)0x8000000000000000;
        if ((v425 & 1) == 0)
        {
          sub_2400AEBB4();
          v426 = v688;
        }
        swift_bridgeObjectRelease();
        sub_2400F7820(v422, (uint64_t)v426);
        *v415 = v426;
        swift_bridgeObjectRelease();
        swift_release();
      }
      swift_bridgeObjectRelease();
      v407 = v603;
      if (v412)
        goto LABEL_221;
    }
LABEL_222:
    v318 = __OFADD__(v414++, 1);
    if (v318)
      goto LABEL_384;
    if (v414 >= v413)
      break;
    v418 = *(_QWORD *)&v686[8 * v414];
    if (!v418)
    {
      v419 = v414 + 1;
      if (v414 + 1 >= v413)
        break;
      v418 = *(_QWORD *)&v686[8 * v419];
      if (!v418)
      {
        v419 = v414 + 2;
        if (v414 + 2 >= v413)
          break;
        v418 = *(_QWORD *)&v686[8 * v419];
        if (!v418)
        {
          v419 = v414 + 3;
          if (v414 + 3 >= v413)
            break;
          v418 = *(_QWORD *)&v686[8 * v419];
          if (!v418)
          {
            while (1)
            {
              v414 = v419 + 1;
              if (__OFADD__(v419, 1))
                goto LABEL_388;
              if (v414 >= v413)
                goto LABEL_246;
              v418 = *(_QWORD *)&v686[8 * v414];
              ++v419;
              if (v418)
                goto LABEL_232;
            }
          }
        }
      }
      v414 = v419;
    }
LABEL_232:
    v412 = (v418 - 1) & v418;
  }
LABEL_246:
  v427 = v631;
  v428 = (uint64_t)v630;
  swift_bridgeObjectRelease();
  swift_release();
  v429 = (char *)*v670;
  v430 = *(_QWORD *)(*v670 + 64);
  v681 = *v670 + 64;
  v431 = 1 << v429[32];
  v432 = -1;
  if (v431 < 64)
    v432 = ~(-1 << v431);
  v433 = v432 & v430;
  v682 = (unint64_t)(v431 + 63) >> 6;
  v684 = (unint64_t)v429;
  swift_bridgeObjectRetain();
  v434 = 0;
  v435 = v664;
  v436 = v662;
  if (v433)
    goto LABEL_251;
  while (2)
  {
    v318 = __OFADD__(v434++, 1);
    if (v318)
      goto LABEL_386;
    if (v434 >= v682)
      goto LABEL_293;
    v438 = *(_QWORD *)(v681 + 8 * v434);
    if (v438)
      goto LABEL_262;
    v439 = v434 + 1;
    if (v434 + 1 >= v682)
      goto LABEL_293;
    v438 = *(_QWORD *)(v681 + 8 * v439);
    if (v438)
      goto LABEL_261;
    v439 = v434 + 2;
    if (v434 + 2 >= v682)
      goto LABEL_293;
    v438 = *(_QWORD *)(v681 + 8 * v439);
    if (v438)
      goto LABEL_261;
    v439 = v434 + 3;
    if (v434 + 3 >= v682)
    {
LABEL_293:
      swift_bridgeObjectRelease();
      swift_release();
      v461 = MEMORY[0x24BEE4B08];
      v462 = (uint64_t)v674;
      v463 = *(double *)(v674[2] + 56);
      swift_retain();
      v464 = sub_2400C9E30(v600, v601, v462, v463);
      v689 = v461;
      v690 = MEMORY[0x24BEE4B00];
      v465 = sub_2400958F8(0);
      if (sub_240141FD8(v465))
        v461 = sub_2400FBB0C(v465);
      swift_bridgeObjectRelease();
      v674[5] = v461;
      swift_bridgeObjectRelease();
      v466 = sub_240141FD8(v464);
      v676 = (char *)v464;
      if (v466)
      {
        if (v466 < 1)
          goto LABEL_392;
        v682 = v614 + *(int *)(v615 + 48);
        v679 = (void (*)(uint64_t, char *, uint64_t))(v674 + 3);
        v677 = (char *)(v674 + 4);
        v467 = v464 + ((*(unsigned __int8 *)(v595 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v595 + 80));
        v681 = *(int *)(v615 + 64);
        v680 = *(char **)(v595 + 72);
        do
        {
          v686 = (char *)v466;
          v684 = v467;
          v472 = v614;
          sub_240070B90(v467, v614, &qword_256FB65E0);
          v473 = v615;
          v474 = v625;
          v475 = v625 + *(int *)(v615 + 48);
          v476 = *(double *)(v472 + v681);
          v477 = *(int *)(v615 + 64);
          sub_24007CD50(v472, v625, &qword_256FB65E8);
          sub_24007CD50(v682, v475, &qword_256FB65E8);
          *(double *)(v474 + v477) = v476;
          v478 = v606;
          v479 = v606 + *(int *)(v473 + 48);
          v480 = *(int *)(v473 + 64);
          sub_240070B90(v474, v606, &qword_256FB65E8);
          sub_240070B90(v475, v479, &qword_256FB65E8);
          *(double *)(v478 + v480) = v476;
          v481 = v636;
          sub_24007CD50(v478, (uint64_t)v636, &qword_256FB65E8);
          sub_240070BD4(v479, &qword_256FB65E8);
          v482 = v478 + *(int *)(v473 + 48);
          v483 = *(int *)(v473 + 64);
          sub_240070B90(v474, v478, &qword_256FB65E8);
          sub_240070B90(v475, v482, &qword_256FB65E8);
          *(double *)(v478 + v483) = v476;
          v484 = v632;
          sub_24007CD50(v482, v632, &qword_256FB65E8);
          sub_240070BD4(v478, &qword_256FB65E8);
          v485 = v611;
          sub_2400F3288(v481, v484, v611);
          v486 = v627;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v626 + 48))(v485, 1, v627) == 1)
          {
            sub_240070BD4(v485, &qword_256FBC218);
            v487 = v662;
            v488 = v629;
            v489 = v664;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v662 + 16))(v629, v663, v664);
            sub_240154340();
          }
          else
          {
            v490 = v485;
            v491 = v599;
            sub_2400A0E74(v490, v599, type metadata accessor for DKPersonGroupFilter.StampedPerson);
            v488 = v629;
            sub_2400A0E74(v491, v629, type metadata accessor for DKPersonGroupFilter.StampedPerson);
            v489 = v664;
            v487 = v662;
          }
          v492 = v488 + *(int *)(v486 + 20);
          v493 = (void (**)(uint64_t, uint64_t))v683;
          v494 = (void (*)(void))*((_QWORD *)v683 + 2);
          v495 = v659;
          ((void (*)(char *, uint64_t, uint64_t))v494)(v659, v492, v189);
          v496 = (uint64_t)v685;
          sub_2400848A4((uint64_t)v685, v495);
          v493[1](v496, v189);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v487 + 16))(v624, v488, v489);
          v497 = v622;
          ((void (*)(uint64_t, uint64_t, uint64_t))v494)(v622, v492, v189);
          ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v678)(v497, 0, 1, v189);
          v498 = v607;
          sub_240070B90((uint64_t)v636, v607, &qword_256FB65E8);
          v499 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v639 + 48);
          v500 = v656;
          if (v499(v498, 1, v656) == 1)
          {
            sub_240070BD4(v498, &qword_256FB65E8);
            v501 = 1;
            v502 = (uint64_t)v608;
            v503 = (uint64_t)v605;
            v504 = v623;
          }
          else
          {
            v504 = v623;
            ((void (*)(uint64_t, uint64_t, uint64_t))v494)(v623, v498 + *(int *)(v500 + 20), v189);
            sub_2400800C8(v498, type metadata accessor for DKPersonGroupFilter.Track);
            v501 = 0;
            v502 = (uint64_t)v608;
            v503 = (uint64_t)v605;
          }
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v678)(v504, v501, 1, v189);
          sub_240070B90(v632, v502, &qword_256FB65E8);
          if (v499(v502, 1, v500) == 1)
          {
            sub_240070BD4(v502, &qword_256FB65E8);
            v505 = 1;
          }
          else
          {
            ((void (*)(uint64_t, uint64_t, uint64_t))v494)(v503, v502 + *(int *)(v500 + 20), v189);
            sub_2400800C8(v502, type metadata accessor for DKPersonGroupFilter.Track);
            v505 = 0;
          }
          v506 = v189;
          v507 = v500;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v678)(v503, v505, 1, v506);
          v508 = sub_2400958EC(0);
          v509 = v621;
          sub_2400EC21C(-1, v624, v622, v623, v503, v508, v621, 1.0 - v476);
          v510 = (uint64_t)v685;
          v494();
          v511 = v613;
          sub_240080084(v509, v613, type metadata accessor for DKPersonGroup);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v654 + 56))(v511, 0, 1, v660);
          sub_2400EBA00(v511, v510, &qword_256FBC210, (uint64_t (*)(_QWORD, double))type metadata accessor for DKPersonGroup, (void (*)(char *, uint64_t, uint64_t))sub_24007206C, (void (*)(void))sub_2400AE8C8);
          v512 = v609;
          sub_240070B90((uint64_t)v636, v609, &qword_256FB65E8);
          if (v499(v512, 1, v507) == 1)
          {
            sub_240070BD4(v512, &qword_256FB65E8);
          }
          else
          {
            v513 = v597;
            sub_2400A0E74(v512, v597, type metadata accessor for DKPersonGroupFilter.Track);
            ((void (*)(uint64_t, uint64_t, uint64_t))v494)(v510, v513 + *(int *)(v507 + 20), v506);
            v514 = v612;
            sub_240080084(v629, v612, type metadata accessor for DKPersonGroupFilter.StampedPerson);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v626 + 56))(v514, 0, 1, v627);
            sub_2400EBA00(v514, v510, &qword_256FBC218, (uint64_t (*)(_QWORD, double))type metadata accessor for DKPersonGroupFilter.StampedPerson, (void (*)(char *, uint64_t, uint64_t))sub_240072048, (void (*)(void))sub_2400AE8DC);
            v507 = v656;
            sub_2400800C8(v513, type metadata accessor for DKPersonGroupFilter.Track);
          }
          v515 = v610;
          v516 = v632;
          sub_240070B90(v632, v610, &qword_256FB65E8);
          if (v499(v515, 1, v507) == 1)
          {
            sub_2400800C8(v621, type metadata accessor for DKPersonGroup);
            sub_2400800C8(v629, type metadata accessor for DKPersonGroupFilter.StampedPerson);
            sub_240070BD4(v516, &qword_256FB65E8);
            sub_240070BD4((uint64_t)v636, &qword_256FB65E8);
            sub_240070BD4(v625, &qword_256FB65E0);
            sub_240070BD4(v515, &qword_256FB65E8);
            v189 = v687;
          }
          else
          {
            v468 = v598;
            sub_2400A0E74(v515, v598, type metadata accessor for DKPersonGroupFilter.Track);
            v469 = v468 + *(int *)(v507 + 20);
            v189 = v687;
            ((void (*)(uint64_t, uint64_t, uint64_t))v494)(v510, v469, v687);
            v470 = v629;
            v471 = v612;
            sub_240080084(v629, v612, type metadata accessor for DKPersonGroupFilter.StampedPerson);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v626 + 56))(v471, 0, 1, v627);
            sub_2400EBA00(v471, v510, &qword_256FBC218, (uint64_t (*)(_QWORD, double))type metadata accessor for DKPersonGroupFilter.StampedPerson, (void (*)(char *, uint64_t, uint64_t))sub_240072048, (void (*)(void))sub_2400AE8DC);
            sub_2400800C8(v468, type metadata accessor for DKPersonGroupFilter.Track);
            sub_2400800C8(v621, type metadata accessor for DKPersonGroup);
            sub_2400800C8(v470, type metadata accessor for DKPersonGroupFilter.StampedPerson);
            sub_240070BD4(v516, &qword_256FB65E8);
            sub_240070BD4((uint64_t)v636, &qword_256FB65E8);
            sub_240070BD4(v625, &qword_256FB65E0);
          }
          v467 = (uint64_t)&v680[v684];
          v466 = (uint64_t)(v686 - 1);
        }
        while (v686 != (char *)1);
      }
      swift_bridgeObjectRelease();
      v517 = v674;
      v518 = v674[8];
      v519 = v689;
      swift_bridgeObjectRetain();
      v520 = swift_bridgeObjectRetain();
      v521 = sub_2400F2F74(v520, v518);
      swift_bridgeObjectRelease();
      v517[10] = v521;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v522 = swift_bridgeObjectRetain();
      v523 = sub_2400F2F74(v522, v519);
      swift_bridgeObjectRelease();
      v517[9] = v523;
      swift_bridgeObjectRelease();
      v517[8] = v519;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (!v637)
      {
        swift_bridgeObjectRelease();
        goto LABEL_370;
      }
      v524 = v639;
      v677 = (char *)(v633
                    + ((*(unsigned __int8 *)(v524 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v524 + 80)));
      v525 = swift_bridgeObjectRetain();
      v526 = 0;
      v527 = (uint64_t *)&unk_256FBC220;
      v528 = (uint64_t)v648;
      v529 = (void (**)(uint64_t, unint64_t, uint64_t))v683;
      while (1)
      {
        if (*(_QWORD *)(v525 + 16) <= v526)
          goto LABEL_385;
        v530 = *(_QWORD *)(v524 + 72);
        v678 = (char *)v526;
        v531 = v635;
        v532 = sub_240080084((uint64_t)&v677[v530 * v526], v635, type metadata accessor for DKPersonGroupFilter.Track);
        v533 = *v670;
        MEMORY[0x24BDAC7A8](v532);
        v534 = v602;
        *(&v595 - 2) = v531;
        *(&v595 - 1) = v534;
        swift_bridgeObjectRetain();
        v535 = v620;
        v536 = sub_2400F85AC((uint64_t)sub_2400FC034, (uint64_t)(&v595 - 4), v533);
        swift_bridgeObjectRelease();
        v537 = sub_2400EB6E0(v536);
        v620 = v535;
        v538 = (uint64_t)v638;
        swift_release();
        if (v537)
          break;
LABEL_316:
        v526 = (unint64_t)(v678 + 1);
        sub_2400800C8(v635, type metadata accessor for DKPersonGroupFilter.Track);
        v525 = v633;
        v524 = v639;
        if (v526 == v637)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_370:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v587 = swift_bridgeObjectRetain();
          v588 = sub_24013FC98(v587);
          swift_bridgeObjectRelease();
          v589 = v674;
          v674[7] = v588;
          swift_bridgeObjectRelease();
          v590 = v589[8];
          v591 = v589[9];
          v592 = v589[10];
          v593 = v596;
          *v596 = v589[7];
          v593[1] = v590;
          v593[2] = v591;
          v593[3] = v592;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_release();
          return swift_bridgeObjectRelease();
        }
      }
      swift_release();
      v539 = *(_QWORD *)(v690 + 64);
      v679 = (void (*)(uint64_t, char *, uint64_t))(v690 + 64);
      v540 = 1 << *(_BYTE *)(v690 + 32);
      if (v540 < 64)
        v541 = ~(-1 << v540);
      else
        v541 = -1;
      v542 = v541 & v539;
      v686 = (char *)(v537 + 56);
      v687 = v537;
      v680 = (char *)((unint64_t)(v540 + 63) >> 6);
      v676 = v680 - 1;
      v681 = v690;
      swift_bridgeObjectRetain();
      v682 = 0;
      if (!v542)
      {
LABEL_348:
        v582 = v682 + 1;
        if (__OFADD__(v682, 1))
          goto LABEL_374;
        if (v582 < (uint64_t)v680)
        {
          v583 = *((_QWORD *)v679 + v582);
          if (v583)
          {
LABEL_351:
            v684 = (v583 - 1) & v583;
            v578 = __clz(__rbit64(v583)) + (v582 << 6);
            v682 = v582;
            goto LABEL_347;
          }
          v584 = v682 + 2;
          ++v682;
          if (v582 + 1 < (uint64_t)v680)
          {
            v583 = *((_QWORD *)v679 + v584);
            if (v583)
            {
LABEL_354:
              v582 = v584;
              goto LABEL_351;
            }
            v682 = v582 + 1;
            if (v582 + 2 < (uint64_t)v680)
            {
              v583 = *((_QWORD *)v679 + v582 + 2);
              if (v583)
              {
                v582 += 2;
                goto LABEL_351;
              }
              v584 = v582 + 3;
              v682 = v582 + 2;
              if (v582 + 3 < (uint64_t)v680)
              {
                v583 = *((_QWORD *)v679 + v584);
                if (v583)
                  goto LABEL_354;
                while (1)
                {
                  v582 = v584 + 1;
                  if (__OFADD__(v584, 1))
                    goto LABEL_390;
                  if (v582 >= (uint64_t)v680)
                    break;
                  v583 = *((_QWORD *)v679 + v582);
                  ++v584;
                  if (v583)
                    goto LABEL_351;
                }
                v682 = (uint64_t)v676;
              }
            }
          }
        }
        v585 = __swift_instantiateConcreteTypeFromMangledName(v527);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v585 - 8) + 56))(v528, 1, 1, v585);
        v684 = 0;
        goto LABEL_366;
      }
      while (1)
      {
        v684 = (v542 - 1) & v542;
        v578 = __clz(__rbit64(v542)) | (v682 << 6);
LABEL_347:
        v579 = v681;
        v529[2](v528, *(_QWORD *)(v681 + 48) + (_QWORD)v529[9] * v578, v189);
        v580 = *(_QWORD *)(v579 + 56) + *(_QWORD *)(v654 + 72) * v578;
        v581 = __swift_instantiateConcreteTypeFromMangledName(v527);
        sub_240080084(v580, v528 + *(int *)(v581 + 48), type metadata accessor for DKPersonGroup);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v581 - 8) + 56))(v528, 0, 1, v581);
LABEL_366:
        sub_24007CD50(v528, v538, &qword_256FBC208);
        v586 = __swift_instantiateConcreteTypeFromMangledName(v527);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v586 - 8) + 48))(v538, 1, v586) == 1)
        {
          swift_bridgeObjectRelease();
          swift_release();
          goto LABEL_316;
        }
        v543 = v538 + *(int *)(v586 + 48);
        v544 = v529[4];
        v544((uint64_t)v657, v538, v189);
        v545 = v658;
        sub_2400A0E74(v543, v658, type metadata accessor for DKPersonGroup);
        v546 = v647;
        sub_240070B90(v545 + *(int *)(v660 + 32), v647, &qword_256FB5DE8);
        v547 = v529[6];
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v547)(v546, 1, v189) == 1)
          break;
        v544((uint64_t)v672, v546, v189);
        v550 = v687;
        if (*(_QWORD *)(v687 + 16)
          && (sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
              v551 = sub_2401545BC(),
              v552 = -1 << *(_BYTE *)(v550 + 32),
              v553 = v551 & ~v552,
              ((*(_QWORD *)&v686[(v553 >> 3) & 0xFFFFFFFFFFFFF8] >> v553) & 1) != 0))
        {
          v554 = ~v552;
          v555 = *((_QWORD *)v683 + 9);
          v556 = (void (*)(_QWORD, _QWORD, _QWORD))*((_QWORD *)v683 + 2);
          while (1)
          {
            v557 = (uint64_t)v685;
            v556(v685, *(_QWORD *)(v550 + 48) + v555 * v553, v189);
            sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            v558 = sub_240154610();
            v559 = (void (*)(_QWORD, _QWORD))*((_QWORD *)v683 + 1);
            v559(v557, v189);
            if ((v558 & 1) != 0)
              break;
            v553 = (v553 + 1) & v554;
            v550 = v687;
            if (((*(_QWORD *)&v686[(v553 >> 3) & 0xFFFFFFFFFFFFF8] >> v553) & 1) == 0)
              goto LABEL_331;
          }
          v569 = v189;
          v570 = v619;
          v571 = v657;
          v556(v619, v657, v569);
          v572 = sub_2400F31A4(&v688);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v654 + 48))(v573, 1, v660))
          {
            v574 = (uint64_t)v685;
            v556(v685, v635 + *(int *)(v656 + 20), v569);
            sub_2400EB580(v574);
          }
          ((void (*)(_QWORD **, _QWORD))v572)(&v688, 0);
          v559(v570, v569);
          v559(v672, v569);
          sub_2400800C8(v658, type metadata accessor for DKPersonGroup);
          v559(v571, v569);
          v528 = (uint64_t)v648;
          v538 = (uint64_t)v638;
          v529 = (void (**)(uint64_t, unint64_t, uint64_t))v683;
          v189 = v569;
          v527 = (uint64_t *)&unk_256FBC220;
          v542 = v684;
          if (!v684)
            goto LABEL_348;
        }
        else
        {
LABEL_331:
          v529 = (void (**)(uint64_t, unint64_t, uint64_t))v683;
          (*((void (**)(char *, uint64_t))v683 + 1))(v672, v189);
          v538 = (uint64_t)v638;
          v549 = (uint64_t)v646;
          v548 = (uint64_t *)&unk_256FBC220;
LABEL_332:
          v560 = v658;
          v561 = v549;
          sub_240070B90(v658 + *(int *)(v660 + 36), v549, &qword_256FB5DE8);
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v547)(v561, 1, v189) == 1)
          {
            sub_2400800C8(v560, type metadata accessor for DKPersonGroup);
            ((void (*)(char *, uint64_t))v529[1])(v657, v189);
            sub_240070BD4(v561, &qword_256FB5DE8);
          }
          else
          {
            v562 = v189;
            v563 = (uint64_t)v643;
            v544((uint64_t)v643, v561, v562);
            if ((sub_24013ECAC(v563, v687) & 1) != 0)
            {
              v564 = v529[2];
              v565 = v634;
              v564((uint64_t)v634, (unint64_t)v657, v562);
              v566 = sub_2400F31A4(&v688);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v654 + 48))(v567, 1, v660))
              {
                v527 = v548;
              }
              else
              {
                v575 = (uint64_t)v685;
                v564((uint64_t)v685, v635 + *(int *)(v656 + 20), v562);
                v576 = v575;
                v527 = (uint64_t *)&unk_256FBC220;
                sub_2400EB580(v576);
              }
              ((void (*)(_QWORD **, _QWORD))v566)(&v688, 0);
              v577 = v529[1];
              ((void (*)(char *, uint64_t))v577)(v565, v562);
              ((void (*)(char *, uint64_t))v577)(v643, v562);
              sub_2400800C8(v658, type metadata accessor for DKPersonGroup);
              ((void (*)(char *, uint64_t))v577)(v657, v562);
              v189 = v562;
              goto LABEL_345;
            }
            v568 = v529[1];
            ((void (*)(uint64_t, uint64_t))v568)(v563, v562);
            sub_2400800C8(v560, type metadata accessor for DKPersonGroup);
            ((void (*)(char *, uint64_t))v568)(v657, v562);
            v189 = v562;
          }
          v527 = v548;
LABEL_345:
          v528 = (uint64_t)v648;
          v542 = v684;
          if (!v684)
            goto LABEL_348;
        }
      }
      v548 = v527;
      sub_240070BD4(v546, &qword_256FB5DE8);
      v549 = (uint64_t)v646;
      goto LABEL_332;
    }
    v438 = *(_QWORD *)(v681 + 8 * v439);
    if (!v438)
    {
      while (1)
      {
        v434 = v439 + 1;
        if (__OFADD__(v439, 1))
          goto LABEL_389;
        if (v434 >= v682)
          goto LABEL_293;
        v438 = *(_QWORD *)(v681 + 8 * v434);
        ++v439;
        if (v438)
          goto LABEL_262;
      }
    }
LABEL_261:
    v434 = v439;
LABEL_262:
    v686 = (char *)((v438 - 1) & v438);
    v437 = __clz(__rbit64(v438)) + (v434 << 6);
LABEL_263:
    v440 = 8 * v437;
    v441 = *(_QWORD *)(*(_QWORD *)(v684 + 48) + v440);
    v442 = *(_QWORD *)(*(_QWORD *)(v684 + 56) + v440);
    v443 = sub_240141FD8((uint64_t)v691);
    if (!v443)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_278;
    }
    v444 = v443;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v445 = swift_bridgeObjectRetain();
    sub_2400FA944(v445, v441);
    v447 = v446;
    swift_bridgeObjectRelease();
    if ((v447 & 1) != 0)
      goto LABEL_269;
    if (v444 == 1)
    {
      swift_bridgeObjectRelease();
      v435 = v664;
      goto LABEL_277;
    }
    v448 = swift_bridgeObjectRetain();
    sub_2400FA944(v448, v441);
    v450 = v449;
    swift_bridgeObjectRelease();
    if ((v450 & 1) != 0)
    {
LABEL_269:
      v435 = v664;
LABEL_270:
      swift_bridgeObjectRelease();
      v451 = 1.0;
      v427 = v631;
      v428 = (uint64_t)v630;
LABEL_280:
      v454 = (uint64_t)v661;
      (*(void (**)(char *, uint64_t, uint64_t))(v436 + 16))(v661, v663, v435);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v436 + 56))(v454, 0, 1, v435);
      sub_240148324(0, 1, v454, v451);
      sub_240070BD4(v454, &qword_256FB4CC8);
LABEL_281:
      sub_240070B90(v442 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, v428, &qword_256FB4CC8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v436 + 48))(v428, 1, v435) == 1)
      {
        swift_release();
        swift_bridgeObjectRelease();
        sub_240070BD4(v428, &qword_256FB4CC8);
        v433 = (unint64_t)v686;
        if (!v686)
          continue;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v436 + 32))(v427, v428, v435);
        sub_24015428C();
        if (*(double *)(v674[2] + 16) >= v455)
        {
          (*(void (**)(char *, uint64_t))(v436 + 8))(v427, v435);
          swift_release();
        }
        else
        {
          sub_2400F7144(v441);
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v436 + 8))(v427, v435);
        }
        swift_bridgeObjectRelease();
        v433 = (unint64_t)v686;
        if (!v686)
          continue;
      }
LABEL_251:
      v686 = (char *)((v433 - 1) & v433);
      v437 = __clz(__rbit64(v433)) | (v434 << 6);
      goto LABEL_263;
    }
    break;
  }
  v435 = v664;
  if (v444 == 2)
  {
    swift_bridgeObjectRelease();
LABEL_277:
    v427 = v631;
    v428 = (uint64_t)v630;
LABEL_278:
    v452 = v653;
    swift_bridgeObjectRetain();
    v453 = *(_QWORD *)(sub_2400F9F68(v441, v452) + 16);
    swift_release();
    v451 = 0.0;
    v254 = v453 == 2;
    v436 = v662;
    if (v254)
      goto LABEL_280;
    goto LABEL_281;
  }
  v456 = 6;
  while (1)
  {
    v457 = v456 - 3;
    if (__OFADD__(v456 - 4, 1))
      break;
    v458 = swift_bridgeObjectRetain();
    sub_2400FA944(v458, v441);
    v460 = v459;
    swift_bridgeObjectRelease();
    if ((v460 & 1) != 0)
    {
      v189 = v687;
      v435 = v664;
      v436 = v662;
      goto LABEL_270;
    }
    ++v456;
    v435 = v664;
    v427 = v631;
    v428 = (uint64_t)v630;
    if (v457 == v444)
    {
      swift_bridgeObjectRelease();
      v189 = v687;
      goto LABEL_278;
    }
  }
LABEL_382:
  __break(1u);
LABEL_383:
  __break(1u);
LABEL_384:
  __break(1u);
LABEL_385:
  __break(1u);
LABEL_386:
  __break(1u);
LABEL_387:
  __break(1u);
LABEL_388:
  __break(1u);
LABEL_389:
  __break(1u);
LABEL_390:
  __break(1u);
LABEL_391:
  __break(1u);
LABEL_392:
  __break(1u);
LABEL_393:
  sub_240154F64();
  __break(1u);
LABEL_394:
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EC0);
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_2400F2F74(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) > *(_QWORD *)(a2 + 16) >> 3)
    return sub_2400F7FF0(a1, a2);
  sub_2400F7D3C(a1);
  return a2;
}

BOOL sub_2400F2FC4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *a1;
  v7 = type metadata accessor for DKPersonGroupFilter.Track(0);
  if ((sub_24013ECAC(a3 + *(int *)(v7 + 20), v6) & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  v8 = *(_QWORD *)(sub_2400F9F68(a4, v6) + 16);
  swift_release();
  return v8 != 0;
}

uint64_t (*sub_2400F3040(_QWORD *a1, char a2))()
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2400F8898(v4, a2 & 1);
  return sub_2400F308C;
}

uint64_t (*sub_2400F3090(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2400F881C(v4, a2);
  return sub_2400F308C;
}

uint64_t (*sub_2400F30DC(_QWORD *a1, char a2))()
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2400F879C(v4, a2 & 1);
  return sub_2400F308C;
}

uint64_t (*sub_2400F3128(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_2400F871C(v4, a2);
  return sub_2400F308C;
}

void sub_2400F3174(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 32))(*a1, 0);
  free(v1);
}

void (*sub_2400F31A4(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = malloc(0x40uLL);
  *a1 = v2;
  v3 = sub_24015434C();
  v2[4] = v3;
  v4 = *(_QWORD *)(v3 - 8);
  v2[5] = v4;
  v5 = malloc(*(_QWORD *)(v4 + 64));
  v2[6] = v5;
  (*(void (**)(void))(v4 + 16))();
  v2[7] = sub_2400F8954(v2, (uint64_t)v5);
  return sub_2400F3234;
}

void sub_2400F3234(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;

  v1 = (void *)*a1;
  v2 = *(void **)(*a1 + 48);
  v3 = *(_QWORD *)(*a1 + 32);
  v4 = *(_QWORD *)(*a1 + 40);
  (*(void (**)(_QWORD, _QWORD))(*a1 + 56))(*a1, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v2, v3);
  free(v2);
  free(v1);
}

uint64_t sub_2400F3288@<X0>(unsigned int (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  void (*v54)(double);
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(double);
  uint64_t v60;
  void (*v61)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(uint64_t, uint64_t, uint64_t);
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(char *, uint64_t, uint64_t);
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  uint64_t v128;
  _QWORD *v129;

  v123 = a2;
  v119 = a3;
  v120 = a1;
  v3 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v109 = (char *)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v111 = (char *)&v105 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v117 = (uint64_t)&v105 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v118 = (uint64_t)&v105 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v127 = (char *)&v105 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v126 = (char *)&v105 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v108 = (char *)&v105 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v106 = (uint64_t)&v105 - v19;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v20);
  v121 = (uint64_t)&v105 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v105 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v25);
  v122 = (char *)&v105 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&v105 - v28;
  v30 = sub_24015434C();
  v31 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v113 = (char *)&v105 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v33);
  v112 = (char *)&v105 - v34;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC218);
  MEMORY[0x24BDAC7A8](v35);
  v116 = (char *)&v105 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v37);
  v115 = (uint64_t)&v105 - v38;
  MEMORY[0x24BDAC7A8](v39);
  v114 = (uint64_t)&v105 - v40;
  MEMORY[0x24BDAC7A8](v41);
  v124 = (uint64_t)&v105 - v42;
  MEMORY[0x24BDAC7A8](v43);
  v110 = (uint64_t)&v105 - v44;
  MEMORY[0x24BDAC7A8](v45);
  v47 = (char *)&v105 - v46;
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)&v105 - v49;
  v52 = MEMORY[0x24BDAC7A8](v51);
  v53 = v4;
  v54 = *(void (**)(double))(v4 + 56);
  v128 = (uint64_t)&v105 - v55;
  v54(v52);
  v125 = v50;
  v56 = v50;
  v57 = v3;
  v58 = v3;
  v59 = v54;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v54)(v56, 1, 1, v58);
  sub_240070B90((uint64_t)v120, (uint64_t)v24, &qword_256FB65E8);
  v60 = type metadata accessor for DKPersonGroupFilter.Track(0);
  v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48);
  if (v120(v24, 1, v60) == 1)
  {
    sub_240070BD4((uint64_t)v24, &qword_256FB65E8);
    v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
    v61(v29, 1, 1, v30);
LABEL_4:
    v62 = v53;
    sub_240070BD4((uint64_t)v29, &qword_256FB5DE8);
    v63 = (uint64_t)v126;
    v64 = (uint64_t)v122;
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v29, &v24[*(int *)(v60 + 20)], v30);
  sub_2400800C8((uint64_t)v24, type metadata accessor for DKPersonGroupFilter.Track);
  v61 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56);
  v61(v29, 0, 1, v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30) == 1)
    goto LABEL_4;
  v107 = v31;
  v70 = (uint64_t)v112;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v112, v29, v30);
  v71 = v129[3];
  v72 = v53;
  if (!*(_QWORD *)(v71 + 16))
  {
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v47, 1, 1, v57);
    v64 = (uint64_t)v122;
    v62 = v72;
    v63 = (uint64_t)v126;
LABEL_19:
    v31 = v107;
    (*(void (**)(char *, uint64_t))(v107 + 8))(v112, v30);
    sub_240070BD4((uint64_t)v47, &qword_256FBC218);
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  v73 = sub_24013F178(v70);
  v64 = (uint64_t)v122;
  if ((v74 & 1) != 0)
  {
    v62 = v72;
    sub_240080084(*(_QWORD *)(v71 + 56) + *(_QWORD *)(v72 + 72) * v73, (uint64_t)v47, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    v75 = 0;
  }
  else
  {
    v75 = 1;
    v62 = v72;
  }
  v63 = (uint64_t)v126;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v59)(v47, v75, 1, v57);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v47, 1, v57) == 1)
    goto LABEL_19;
  v100 = v106;
  sub_2400A0E74((uint64_t)v47, v106, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  v101 = v129[5];
  swift_bridgeObjectRetain();
  LODWORD(v126) = sub_24013EAE4(v100, v101);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v112, v30);
  if ((v126 & 1) != 0)
  {
    sub_2400800C8(v100, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  }
  else
  {
    v104 = v128;
    sub_240070BD4(v128, &qword_256FBC218);
    sub_2400A0E74(v100, v104, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v59)(v104, 0, 1, v57);
  }
  v31 = v107;
LABEL_5:
  v65 = v121;
  sub_240070B90(v123, v121, &qword_256FB65E8);
  if (v120((char *)v65, 1, v60) == 1)
  {
    sub_240070BD4(v65, &qword_256FB65E8);
    v61((char *)v64, 1, 1, v30);
    v66 = v128;
LABEL_8:
    sub_240070BD4(v64, &qword_256FB5DE8);
    v68 = (uint64_t)v127;
    v69 = (uint64_t)v125;
    goto LABEL_24;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v64, v65 + *(int *)(v60 + 20), v30);
  sub_2400800C8(v65, type metadata accessor for DKPersonGroupFilter.Track);
  v61((char *)v64, 0, 1, v30);
  v67 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v64, 1, v30);
  v66 = v128;
  if (v67 == 1)
    goto LABEL_8;
  v107 = v31;
  v76 = (uint64_t)v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v113, v64, v30);
  v77 = v129[4];
  v69 = (uint64_t)v125;
  if (*(_QWORD *)(v77 + 16))
  {
    swift_bridgeObjectRetain();
    v78 = sub_24013F178(v76);
    if ((v79 & 1) != 0)
    {
      v80 = v110;
      sub_240080084(*(_QWORD *)(v77 + 56) + *(_QWORD *)(v62 + 72) * v78, v110, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      v81 = 0;
      v82 = (uint64_t)v108;
    }
    else
    {
      v81 = 1;
      v82 = (uint64_t)v108;
      v80 = v110;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v59)(v80, v81, 1, v57);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v80, 1, v57) != 1)
    {
      sub_2400A0E74(v80, v82, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      v102 = v129[5];
      swift_bridgeObjectRetain();
      v103 = sub_24013EAE4(v82, v102);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v113, v30);
      if ((v103 & 1) != 0)
      {
        sub_2400800C8(v82, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      }
      else
      {
        sub_240070BD4(v69, &qword_256FBC218);
        sub_2400A0E74(v82, v69, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v59)(v69, 0, 1, v57);
      }
      goto LABEL_23;
    }
  }
  else
  {
    v80 = v110;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v59)(v110, 1, 1, v57);
  }
  (*(void (**)(char *, uint64_t))(v107 + 8))(v113, v30);
  sub_240070BD4(v80, &qword_256FBC218);
LABEL_23:
  v68 = (uint64_t)v127;
LABEL_24:
  v83 = v124;
  sub_240070B90(v66, v124, &qword_256FBC218);
  v84 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  if (v84(v83, 1, v57) != 1)
  {
    sub_2400A0E74(v83, v63, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    v83 = v114;
    sub_240070B90(v69, v114, &qword_256FBC218);
    if (v84(v83, 1, v57) != 1)
    {
      sub_2400A0E74(v83, v68, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      if ((sub_2401542B0() & 1) != 0)
      {
        v91 = v117;
        sub_240080084(v63, v117, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        v92 = v118;
        sub_24008461C(v118, v91);
        sub_2400800C8(v92, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_2400800C8(v68, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_240070BD4(v69, &qword_256FBC218);
        sub_240070BD4(v66, &qword_256FBC218);
        v93 = v63;
LABEL_36:
        v89 = v119;
        sub_2400A0E74(v93, v119, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        v88 = 0;
        return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v59)(v89, v88, 1, v57);
      }
      v98 = v117;
      sub_240080084(v68, v117, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      v99 = v118;
      sub_24008461C(v118, v98);
      sub_2400800C8(v99, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      v96 = v63;
LABEL_35:
      sub_2400800C8(v96, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      sub_240070BD4(v69, &qword_256FBC218);
      sub_240070BD4(v66, &qword_256FBC218);
      v93 = v68;
      goto LABEL_36;
    }
    sub_2400800C8(v63, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  }
  sub_240070BD4(v83, &qword_256FBC218);
  v85 = v115;
  sub_240070B90(v66, v115, &qword_256FBC218);
  v86 = v84(v85, 1, v57);
  v87 = (uint64_t)v116;
  if (v86 != 1)
  {
    v90 = v85;
    v68 = (uint64_t)v111;
LABEL_34:
    sub_2400A0E74(v90, v68, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    v94 = v117;
    sub_240080084(v68, v117, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    v95 = v118;
    sub_24008461C(v118, v94);
    v96 = v95;
    goto LABEL_35;
  }
  sub_240070BD4(v85, &qword_256FBC218);
  sub_240070B90(v69, v87, &qword_256FBC218);
  if (v84(v87, 1, v57) != 1)
  {
    v90 = v87;
    v68 = (uint64_t)v109;
    goto LABEL_34;
  }
  sub_240070BD4(v69, &qword_256FBC218);
  sub_240070BD4(v66, &qword_256FBC218);
  sub_240070BD4(v87, &qword_256FBC218);
  v88 = 1;
  v89 = v119;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v59)(v89, v88, 1, v57);
}

uint64_t DKPersonGroupFilter.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKPersonGroupFilter.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2400F3F28(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  int64_t v5;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result || a1 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (*(_QWORD *)(v3 + 16) <= a1)
      v5 = a1;
    else
      v5 = *(_QWORD *)(v3 + 16);
    return sub_2400E586C(result, v5, 0);
  }
  return result;
}

uint64_t sub_2400F3F8C(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = (2 * a2) | 1;
  return result;
}

uint64_t sub_2400F3FA0()
{
  return sub_2400F3FC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240078640);
}

uint64_t sub_2400F3FAC()
{
  return sub_2400F3FC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_240078534);
}

uint64_t sub_2400F3FB8()
{
  return sub_2400F3FC4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24007876C);
}

uint64_t sub_2400F3FC4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(result, *(_QWORD *)(v3 + 16) + 1, 1, v3);
    *v1 = result;
  }
  return result;
}

uint64_t sub_2400F4018(uint64_t a1)
{
  return sub_2400F6F6C(a1, (uint64_t (*)(BOOL))MEMORY[0x24BEE1160]);
}

uint64_t sub_2400F4024(uint64_t a1)
{
  return sub_2400F4048(a1, (uint64_t (*)(BOOL))sub_240078640);
}

uint64_t sub_2400F4030(uint64_t a1)
{
  return sub_2400F4048(a1, (uint64_t (*)(BOOL))sub_240078534);
}

uint64_t sub_2400F403C(uint64_t a1)
{
  return sub_2400F4048(a1, (uint64_t (*)(BOOL))sub_24007876C);
}

uint64_t sub_2400F4048(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_2400F408C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *v5;
  *(_QWORD *)(v6 + 16) = result + 1;
  v7 = (_QWORD *)(v6 + 32 * result);
  v7[4] = a2;
  v7[5] = a3;
  v7[6] = a4;
  v7[7] = a5;
  return result;
}

uint64_t sub_2400F40A8(uint64_t result, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v5 = *v4;
  *(_QWORD *)(v5 + 16) = result + 1;
  v6 = v5 + 24 * result;
  *(_QWORD *)(v6 + 32) = a2;
  *(_QWORD *)(v6 + 40) = a3;
  *(double *)(v6 + 48) = a4;
  return result;
}

unint64_t sub_2400F40CC(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

unint64_t sub_2400F40F4(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2400F4114()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC700);
  result = sub_240154B14();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    v27 = v1;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_240154FDC();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2400F4394()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC720);
  result = sub_240154B14();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 0;
    v6 = (_QWORD *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                v26 = 1 << *(_BYTE *)(v2 + 32);
                if (v26 > 63)
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v6 = -1 << v26;
                v1 = v0;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      sub_240154FE8();
      sub_240154FF4();
      result = sub_240155018();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2400F463C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  int64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  v2 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  v33 = *(_QWORD *)(v2 - 8);
  v34 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC718);
  v6 = sub_240154B14();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v32 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v30 = v0;
    v31 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v31)
          goto LABEL_33;
        v19 = v32[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v31)
            goto LABEL_33;
          v19 = v32[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v31)
              goto LABEL_33;
            v19 = v32[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v31)
              {
LABEL_33:
                swift_release();
                v1 = v30;
                v29 = 1 << *(_BYTE *)(v5 + 32);
                if (v29 > 63)
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v32 = -1 << v29;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v31)
                    goto LABEL_33;
                  v19 = v32[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(v33 + 72);
      sub_2400A0E74(*(_QWORD *)(v5 + 48) + v21 * v17, (uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      sub_240154FE8();
      sub_240154310();
      sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
      sub_2401545C8();
      sub_24015434C();
      sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_2401545C8();
      result = sub_240155018();
      v22 = -1 << *(_BYTE *)(v7 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = sub_2400A0E74((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v21, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_2400F4A08()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_24015434C();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC710);
  v6 = sub_240154B14();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v11)
      {
        v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v34)
          goto LABEL_33;
        v19 = v35[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v34)
            goto LABEL_33;
          v19 = v35[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v34)
              goto LABEL_33;
            v19 = v35[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v34)
              {
LABEL_33:
                swift_release();
                v1 = v33;
                v32 = 1 << *(_BYTE *)(v5 + 32);
                if (v32 > 63)
                  bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v35 = -1 << v32;
                *(_QWORD *)(v5 + 16) = 0;
                break;
              }
              v19 = v35[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v34)
                    goto LABEL_33;
                  v19 = v35[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v11 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = v5;
      v22 = *(_QWORD *)(v5 + 48);
      v23 = *(_QWORD *)(v36 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v24(v4, v22 + v23 * v17, v2);
      sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      result = sub_2401545BC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v24)(*(_QWORD *)(v7 + 48) + v15 * v23, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v21;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_2400F4D74()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC708);
  result = sub_240154B14();
  v4 = result;
  if (*(_QWORD *)(v2 + 16))
  {
    v27 = v1;
    v5 = 0;
    v6 = (uint64_t *)(v2 + 56);
    v7 = 1 << *(_BYTE *)(v2 + 32);
    v26 = -1 << v7;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v9 = v8 & *(_QWORD *)(v2 + 56);
    v28 = 1 << *(_BYTE *)(v2 + 32);
    v10 = (unint64_t)(v7 + 63) >> 6;
    v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        v14 = v13 | (v5 << 6);
      }
      else
      {
        v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10)
          goto LABEL_33;
        v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          v5 = v15 + 1;
          if (v15 + 1 >= v10)
            goto LABEL_33;
          v16 = v6[v5];
          if (!v16)
          {
            v5 = v15 + 2;
            if (v15 + 2 >= v10)
              goto LABEL_33;
            v16 = v6[v5];
            if (!v16)
            {
              v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64)
                  bzero((void *)(v2 + 56), 8 * v10);
                else
                  *v6 = v26;
                v1 = v27;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  v5 = v17 + 1;
                  if (__OFADD__(v17, 1))
                    goto LABEL_39;
                  if (v5 >= v10)
                    goto LABEL_33;
                  v16 = v6[v5];
                  ++v17;
                  if (v16)
                    goto LABEL_23;
                }
              }
              v5 = v17;
            }
          }
        }
LABEL_23:
        v9 = (v16 - 1) & v16;
        v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
      result = sub_240154FDC();
      v19 = -1 << *(_BYTE *)(v4 + 32);
      v20 = result & ~v19;
      v21 = v20 >> 6;
      if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v22 = 0;
        v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v24 = v21 == v23;
          if (v21 == v23)
            v21 = 0;
          v22 |= v24;
          v25 = *(_QWORD *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_2400F5008(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2400F4114();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2400F5818();
      goto LABEL_14;
    }
    sub_2400F6118();
  }
  v8 = *v3;
  result = sub_240154FDC();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_240154F64();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_2400F5128(uint64_t result, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v5 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2400F4394();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2400F59AC();
      goto LABEL_14;
    }
    sub_2400F6378();
  }
  v8 = *v3;
  sub_240154FE8();
  sub_240154FF4();
  result = sub_240155018();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  a2 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(_QWORD *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      result = sub_240154F64();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        if (*(_QWORD *)(v10 + 8 * a2) == v5)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v12 + 48) + 8 * a2) = v5;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

uint64_t sub_2400F5274(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;

  v7 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  v24 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v23 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_2400F463C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_2400F5B40();
      goto LABEL_14;
    }
    sub_2400F65F0();
  }
  v12 = *v3;
  sub_240154FE8();
  sub_240154310();
  sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_2401545C8();
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  v13 = sub_240155018();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v24 + 72);
    while (1)
    {
      sub_240080084(*(_QWORD *)(v12 + 48) + v16 * a2, (uint64_t)v9, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      if ((sub_2401542EC() & 1) != 0 && (sub_240154328() & 1) != 0)
        break;
      sub_2400800C8((uint64_t)v9, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      a2 = (a2 + 1) & v15;
      if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
        goto LABEL_14;
    }
    sub_2400800C8((uint64_t)v9, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    sub_240154F64();
    __break(1u);
  }
LABEL_14:
  v17 = *v23;
  *(_QWORD *)(*v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = sub_2400A0E74(a1, *(_QWORD *)(v17 + 48) + *(_QWORD *)(v24 + 72) * a2, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  v19 = *(_QWORD *)(v17 + 16);
  v20 = __OFADD__(v19, 1);
  v21 = v19 + 1;
  if (v20)
    __break(1u);
  else
    *(_QWORD *)(v17 + 16) = v21;
  return result;
}

uint64_t sub_2400F54E4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_24015434C();
  v7 = *(_QWORD *)(v6 - 8);
  v8.n128_f64[0] = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(*v3 + 16);
  v12 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v12 > v11 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_2400F4A08();
  }
  else
  {
    if (v12 > v11)
    {
      sub_2400F5D60();
      goto LABEL_12;
    }
    sub_2400F6978();
  }
  v13 = *v3;
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v14 = sub_2401545BC();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v10, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_240154610();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6, v8);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_240154F64();
  __break(1u);
  return result;
}

uint64_t sub_2400F56E8(uint64_t result, char a2, double a3)
{
  uint64_t *v3;
  unint64_t v4;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v4 = result;
  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a2 & 1) != 0)
    goto LABEL_14;
  if ((a2 & 1) != 0)
  {
    sub_2400F4D74();
  }
  else
  {
    if (v7 > v6)
    {
      result = (uint64_t)sub_2400F5F84();
      goto LABEL_14;
    }
    sub_2400F6CA0();
  }
  v8 = *v3;
  result = sub_240154FDC();
  v9 = -1 << *(_BYTE *)(v8 + 32);
  v4 = result & ~v9;
  if (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v10 = *(_QWORD *)(v8 + 48);
    if (*(double *)(v10 + 8 * v4) == a3)
    {
LABEL_13:
      result = sub_240154F64();
      __break(1u);
    }
    else
    {
      v11 = ~v9;
      while (1)
      {
        v4 = (v4 + 1) & v11;
        if (((*(_QWORD *)(v8 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) == 0)
          break;
        if (*(double *)(v10 + 8 * v4) == a3)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v12 = *v3;
  *(_QWORD *)(*v3 + 8 * (v4 >> 6) + 56) |= 1 << v4;
  *(double *)(*(_QWORD *)(v12 + 48) + 8 * v4) = a3;
  v13 = *(_QWORD *)(v12 + 16);
  v14 = __OFADD__(v13, 1);
  v15 = v13 + 1;
  if (v14)
    __break(1u);
  else
    *(_QWORD *)(v12 + 16) = v15;
  return result;
}

void *sub_2400F5818()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC700);
  v2 = *v0;
  v3 = sub_240154B08();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2400F59AC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC720);
  v2 = *v0;
  v3 = sub_240154B08();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2400F5B40()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC718);
  v6 = *v0;
  v7 = sub_240154B08();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    sub_240080084(*(_QWORD *)(v6 + 48) + v20, (uint64_t)v5, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    result = (void *)sub_2400A0E74((uint64_t)v5, *(_QWORD *)(v8 + 48) + v20, type metadata accessor for DKPersonGroupFilter.StampedPerson);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_2400F5D60()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;

  v1 = v0;
  v2 = sub_24015434C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC710);
  v6 = *v0;
  v7 = sub_240154B08();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(v6 + 56);
  v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v17)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v17)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_27:
    v16 = (v22 - 1) & v22;
    v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    v20 = *(_QWORD *)(v3 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v20, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v20, v5, v2);
  }
  v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v17)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_2400F5F84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC708);
  v2 = *v0;
  v3 = sub_240154B08();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      v9 = v16 + 1;
      if (v16 + 1 >= v13)
        goto LABEL_28;
      v17 = *(_QWORD *)(v6 + 8 * v9);
      if (!v17)
      {
        v9 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_28;
        v17 = *(_QWORD *)(v6 + 8 * v9);
        if (!v17)
          break;
      }
    }
LABEL_27:
    v12 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v15) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
  }
  v18 = v16 + 3;
  if (v18 >= v13)
    goto LABEL_28;
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v17 = *(_QWORD *)(v6 + 8 * v9);
    ++v18;
    if (v17)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2400F6118()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC700);
  result = sub_240154B14();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_240154FDC();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2400F6378()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC720);
  result = sub_240154B14();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    sub_240154FE8();
    sub_240154FF4();
    result = sub_240155018();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v0;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2400F65F0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;

  v1 = v0;
  v2 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  v32 = *(_QWORD *)(v2 - 8);
  v33 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC718);
  v6 = sub_240154B14();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v7;
    return result;
  }
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v9 = *(_QWORD *)(v5 + 56);
  v29 = v0;
  v30 = v5 + 56;
  if (v8 < 64)
    v10 = ~(-1 << v8);
  else
    v10 = -1;
  v11 = v10 & v9;
  v31 = (unint64_t)(v8 + 63) >> 6;
  v12 = v6 + 56;
  result = swift_retain();
  v14 = 0;
  while (1)
  {
    if (v11)
    {
      v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31)
      goto LABEL_33;
    v19 = *(_QWORD *)(v30 + 8 * v18);
    ++v14;
    if (!v19)
    {
      v14 = v18 + 1;
      if (v18 + 1 >= v31)
        goto LABEL_33;
      v19 = *(_QWORD *)(v30 + 8 * v14);
      if (!v19)
      {
        v14 = v18 + 2;
        if (v18 + 2 >= v31)
          goto LABEL_33;
        v19 = *(_QWORD *)(v30 + 8 * v14);
        if (!v19)
          break;
      }
    }
LABEL_23:
    v11 = (v19 - 1) & v19;
    v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    v21 = *(_QWORD *)(v32 + 72);
    sub_240080084(*(_QWORD *)(v5 + 48) + v21 * v17, (uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    sub_240154FE8();
    sub_240154310();
    sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
    sub_2401545C8();
    sub_24015434C();
    sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    sub_2401545C8();
    result = sub_240155018();
    v22 = -1 << *(_BYTE *)(v7 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    result = sub_2400A0E74((uint64_t)v4, *(_QWORD *)(v7 + 48) + v15 * v21, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    ++*(_QWORD *)(v7 + 16);
  }
  v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v29;
    goto LABEL_35;
  }
  v19 = *(_QWORD *)(v30 + 8 * v20);
  if (v19)
  {
    v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    v14 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v14 >= v31)
      goto LABEL_33;
    v19 = *(_QWORD *)(v30 + 8 * v14);
    ++v20;
    if (v19)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2400F6978()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_24015434C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC710);
  v7 = sub_240154B14();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  while (1)
  {
    if (v12)
    {
      v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v19);
    ++v15;
    if (!v20)
    {
      v15 = v19 + 1;
      if (v19 + 1 >= v33)
        goto LABEL_33;
      v20 = *(_QWORD *)(v32 + 8 * v15);
      if (!v20)
      {
        v15 = v19 + 2;
        if (v19 + 2 >= v33)
          goto LABEL_33;
        v20 = *(_QWORD *)(v32 + 8 * v15);
        if (!v20)
          break;
      }
    }
LABEL_23:
    v12 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    v22 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v22 * v18, v2);
    sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_2401545BC();
    v23 = -1 << *(_BYTE *)(v8 + 32);
    v24 = result & ~v23;
    v25 = v24 >> 6;
    if (((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      v16 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v28 = v25 == v27;
        if (v25 == v27)
          v25 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(_QWORD *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v16 * v22, v5, v2);
    ++*(_QWORD *)(v8 + 16);
  }
  v21 = v19 + 3;
  if (v21 >= v33)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_35;
  }
  v20 = *(_QWORD *)(v32 + 8 * v21);
  if (v20)
  {
    v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    v15 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v15 >= v33)
      goto LABEL_33;
    v20 = *(_QWORD *)(v32 + 8 * v15);
    ++v21;
    if (v20)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2400F6CA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC708);
  result = sub_240154B14();
  v4 = result;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v26 = v1;
  v5 = 0;
  v6 = v2 + 56;
  v7 = 1 << *(_BYTE *)(v2 + 32);
  if (v7 < 64)
    v8 = ~(-1 << v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(v2 + 56);
  v10 = (unint64_t)(v7 + 63) >> 6;
  v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      v5 = v15 + 1;
      if (v15 + 1 >= v10)
        goto LABEL_33;
      v16 = *(_QWORD *)(v6 + 8 * v5);
      if (!v16)
      {
        v5 = v15 + 2;
        if (v15 + 2 >= v10)
          goto LABEL_33;
        v16 = *(_QWORD *)(v6 + 8 * v5);
        if (!v16)
          break;
      }
    }
LABEL_23:
    v9 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    v18 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v14);
    result = sub_240154FDC();
    v19 = -1 << *(_BYTE *)(v4 + 32);
    v20 = result & ~v19;
    v21 = v20 >> 6;
    if (((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v20) & ~*(_QWORD *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v22 = 0;
      v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v24 = v21 == v23;
        if (v21 == v23)
          v21 = 0;
        v22 |= v24;
        v25 = *(_QWORD *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(_QWORD *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v12) = v18;
    ++*(_QWORD *)(v4 + 16);
  }
  v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    result = swift_release();
    v1 = v26;
    goto LABEL_35;
  }
  v16 = *(_QWORD *)(v6 + 8 * v17);
  if (v16)
  {
    v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    v5 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v5 >= v10)
      goto LABEL_33;
    v16 = *(_QWORD *)(v6 + 8 * v5);
    ++v17;
    if (v16)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2400F6F10(uint64_t (*a1)(_QWORD, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((result & 1) == 0)
    return a1(0, *(_QWORD *)(v2 + 16) + 1, 1);
  return result;
}

uint64_t sub_2400F6F6C(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
    return a2(v3 > 1);
  return result;
}

uint64_t sub_2400F6F98(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;

  v5 = *v2;
  *(_QWORD *)(v5 + 16) = a1 + 1;
  v6 = type metadata accessor for DKPersonGroupFilter.Track(0);
  return sub_2400A0E74(a2, v5+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * a1, type metadata accessor for DKPersonGroupFilter.Track);
}

uint64_t sub_2400F7000@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v7;
  unint64_t v10;
  char v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v7 = v4;
  swift_bridgeObjectRetain();
  v10 = sub_24013F178(a1);
  LOBYTE(a1) = v11;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v7;
    v21 = *v7;
    *v7 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a3();
      v13 = v21;
    }
    v14 = *(_QWORD *)(v13 + 48);
    v15 = sub_24015434C();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * v10, v15);
    v16 = *(_QWORD *)(v13 + 56);
    v17 = a2(0);
    v18 = *(_QWORD *)(v17 - 8);
    sub_2400A0E74(v16 + *(_QWORD *)(v18 + 72) * v10, a4, a2);
    sub_2400F7578(v10, v13, a2);
    *v7 = v13;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v18 + 56))(a4, 0, 1, v17);
  }
  else
  {
    v20 = a2(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
}

uint64_t sub_2400F7144(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_24013F1E4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v7 = *v2;
  v10 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2400AEBB4();
    v7 = v10;
  }
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v4);
  sub_2400F7820(v4, v7);
  *v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_2400F7208(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_240154ACC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_240154FE8();
        sub_240154FF4();
        result = sub_240155018();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2400F73C0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_240154ACC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_240154FE8();
        sub_240154FF4();
        result = sub_240155018();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8)
            goto LABEL_5;
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          v10 = *(_QWORD *)(a2 + 48);
          v11 = (_BYTE *)(v10 + v3);
          v12 = (_BYTE *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1)
            *v11 = *v12;
          v13 = *(_QWORD *)(a2 + 56);
          v14 = (_QWORD *)(v13 + 8 * v3);
          v15 = (_QWORD *)(v13 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v14 >= v15 + 1))
          {
            *v14 = *v15;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_2400F7578(int64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  void (*v34)(char *, unint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;

  v33 = a3;
  v5 = sub_24015434C();
  v35 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v36 = a2 + 64;
    v11 = sub_240154ACC();
    v12 = v36;
    if ((*(_QWORD *)(v36 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v13 = (v11 + 1) & v10;
      v14 = *(_QWORD *)(v35 + 72);
      v34 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      do
      {
        v15 = v14 * v9;
        v34(v7, *(_QWORD *)(a2 + 48) + v14 * v9, v5);
        sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v16 = sub_2401545BC();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v7, v5);
        v17 = v16 & v10;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        if (v14 * a1 < v15 || *(_QWORD *)(a2 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v14 * a1 != v15)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        v20 = *(_QWORD *)(a2 + 56);
        v21 = *(_QWORD *)(*(_QWORD *)(v33(0) - 8) + 72);
        v22 = v21 * a1;
        v23 = v20 + v21 * a1;
        v24 = v21 * v9;
        v25 = v20 + v21 * v9 + v21;
        if (v22 < v24 || v23 >= v25)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v22 == v24)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
        v12 = v36;
      }
      while (((*(_QWORD *)(v36 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v27 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v27;
    v29 = (-1 << a1) - 1;
  }
  else
  {
    v27 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v29 = *v27;
    v28 = (-1 << a1) - 1;
  }
  *v27 = v29 & v28;
  v30 = *(_QWORD *)(a2 + 16);
  v31 = __OFSUB__(v30, 1);
  v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_2400F7820(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  __int128 v24[4];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_240154ACC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * v6);
        sub_240154FE8();
        swift_bridgeObjectRetain();
        sub_2400B086C(v24, v9);
        v10 = sub_240155018();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_QWORD *)(v12 + 8 * v3);
          v14 = (_QWORD *)(v12 + 8 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_QWORD *)(v15 + 8 * v3);
          v17 = (_QWORD *)(v15 + 8 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
          {
            *v16 = *v17;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2400F79EC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  int64_t v18;
  unint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_240154ACC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_240154FDC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        v16 = *(_QWORD *)(*(_QWORD *)(sub_240154310() - 8) + 72);
        v17 = v16 * v3;
        result = v15 + v16 * v3;
        v18 = v16 * v6;
        v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v17 == v18)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v22 = *v21;
    v23 = (-1 << v3) - 1;
  }
  else
  {
    v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    v23 = *v21;
    v22 = (-1 << result) - 1;
  }
  *v21 = v23 & v22;
  v24 = *(_QWORD *)(a2 + 16);
  v25 = __OFSUB__(v24, 1);
  v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_2400F7BA8(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_240154ACC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_240154FDC();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_2400F7D3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;

  v3 = sub_24015434C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v23 - v11;
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16))
    return;
  v13 = a1 + 56;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  v17 = 0;
  if (!v16)
    goto LABEL_6;
LABEL_5:
  v18 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v18 | (v17 << 6); ; i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v4 + 72) * i, v3);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v12, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3) == 1)
      goto LABEL_26;
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v3);
    sub_2400B011C((uint64_t)v6, (uint64_t)v9);
    sub_240070BD4((uint64_t)v9, &qword_256FB5DE8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v16)
      goto LABEL_5;
LABEL_6:
    v20 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v20 >= v24)
      goto LABEL_25;
    v21 = *(_QWORD *)(v13 + 8 * v20);
    ++v17;
    if (!v21)
    {
      v17 = v20 + 1;
      if (v20 + 1 >= v24)
        goto LABEL_25;
      v21 = *(_QWORD *)(v13 + 8 * v17);
      if (!v21)
      {
        v17 = v20 + 2;
        if (v20 + 2 >= v24)
          goto LABEL_25;
        v21 = *(_QWORD *)(v13 + 8 * v17);
        if (!v21)
        {
          v17 = v20 + 3;
          if (v20 + 3 >= v24)
            goto LABEL_25;
          v21 = *(_QWORD *)(v13 + 8 * v17);
          if (!v21)
            break;
        }
      }
    }
LABEL_21:
    v16 = (v21 - 1) & v21;
  }
  v22 = v20 + 4;
  if (v22 >= v24)
  {
LABEL_25:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
LABEL_26:
    swift_release();
    return;
  }
  v21 = *(_QWORD *)(v13 + 8 * v22);
  if (v21)
  {
    v17 = v22;
    goto LABEL_21;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v24)
      goto LABEL_25;
    v21 = *(_QWORD *)(v13 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_21;
  }
LABEL_29:
  __break(1u);
}

uint64_t sub_2400F7FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, unint64_t, uint64_t);
  char v40;
  void (*v41)(char *, uint64_t);
  uint64_t isStackAllocationSafe;
  char v43;
  unint64_t v44;
  size_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  unint64_t v53;
  int64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  unint64_t v62;
  uint64_t v63;

  v63 = *MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_24015434C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v57 = (char *)&v51 - v12;
  if (!*(_QWORD *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  v13 = -1 << *(_BYTE *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 56);
  v15 = ~v13;
  v16 = -v13;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v58 = a1;
  v59 = a1 + 56;
  v18 = a1;
  v19 = a1 + 56;
  v20 = v17 & v14;
  v21 = v15;
  v60 = v15;
  v61 = 0;
  v62 = v17 & v14;
  v56 = (char *)(a2 + 56);
  v22 = v18;
  swift_bridgeObjectRetain();
  v23 = 0;
  v52 = v6;
  v55 = a2;
  v53 = v20;
  v54 = 0;
  if (!v20)
    goto LABEL_8;
LABEL_6:
  v24 = (v20 - 1) & v20;
  v25 = __clz(__rbit64(v20)) | (v23 << 6);
  v26 = v23;
  v27 = v19;
LABEL_7:
  (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, *(_QWORD *)(v22 + 48) + *(_QWORD *)(v8 + 72) * v25, v7);
  v28 = 0;
  while (1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v28, 1, v7);
    v58 = v22;
    v59 = v27;
    v60 = v21;
    v61 = v26;
    v62 = v24;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_24008FD1C();
      sub_240070BD4((uint64_t)v6, &qword_256FB5DE8);
      return v55;
    }
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v57, v6, v7);
    v32 = v55;
    sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v33 = sub_2401545BC();
    v34 = -1 << *(_BYTE *)(v32 + 32);
    v35 = v33 & ~v34;
    if (((*(_QWORD *)&v56[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) != 0)
      break;
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
LABEL_34:
    v41(v57, v7);
    v23 = v61;
    v20 = v62;
    v22 = v58;
    v19 = v59;
    v21 = v60;
    v6 = v52;
    v53 = v62;
    v54 = v61;
    if (v62)
      goto LABEL_6;
LABEL_8:
    v26 = v23 + 1;
    if (__OFADD__(v23, 1))
      __break(1u);
    v27 = v19;
    v29 = (unint64_t)(v21 + 64) >> 6;
    if (v26 >= v29)
      goto LABEL_26;
    v30 = *(_QWORD *)(v19 + 8 * v26);
    if (v30)
      goto LABEL_11;
    v23 += 2;
    if (v26 + 1 >= v29)
      goto LABEL_36;
    v30 = *(_QWORD *)(v19 + 8 * v23);
    if (v30)
      goto LABEL_14;
    if (v26 + 2 >= v29)
    {
LABEL_26:
      v24 = 0;
      v28 = 1;
      v26 = v23;
    }
    else
    {
      v30 = *(_QWORD *)(v19 + 8 * (v26 + 2));
      if (v30)
      {
        v26 += 2;
        goto LABEL_11;
      }
      v23 = v26 + 3;
      if (v26 + 3 >= v29)
      {
        v24 = 0;
        v28 = 1;
        v26 += 2;
      }
      else
      {
        v30 = *(_QWORD *)(v19 + 8 * v23);
        if (v30)
        {
LABEL_14:
          v26 = v23;
LABEL_11:
          v24 = (v30 - 1) & v30;
          v25 = __clz(__rbit64(v30)) + (v26 << 6);
          goto LABEL_7;
        }
        v26 += 4;
        if (v26 >= v29)
          goto LABEL_26;
        v30 = *(_QWORD *)(v19 + 8 * v26);
        if (v30)
          goto LABEL_11;
        v26 = v29 - 1;
        v31 = v54 + 6;
        while (v29 != v31)
        {
          v30 = *(_QWORD *)(v19 + 8 * v31++);
          if (v30)
          {
            v26 = v31 - 1;
            goto LABEL_11;
          }
        }
LABEL_36:
        v24 = 0;
        v28 = 1;
      }
    }
  }
  v36 = v32;
  v37 = ~v34;
  v38 = *(_QWORD *)(v8 + 72);
  v39 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  while (1)
  {
    v39(v10, *(_QWORD *)(v36 + 48) + v38 * v35, v7);
    sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
    v40 = sub_240154610();
    v41 = *(void (**)(char *, uint64_t))(v8 + 8);
    v41(v10, v7);
    if ((v40 & 1) != 0)
      break;
    v35 = (v35 + 1) & v37;
    if (((*(_QWORD *)&v56[(v35 >> 3) & 0xFFFFFFFFFFFFF8] >> v35) & 1) == 0)
      goto LABEL_34;
  }
  isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v41)(v57, v7);
  v43 = *(_BYTE *)(v36 + 32);
  v44 = (unint64_t)((1 << v43) + 63) >> 6;
  v45 = 8 * v44;
  if ((v43 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (_DWORD)isStackAllocationSafe))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    memcpy((char *)&v51 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0), v56, v45);
    sub_2400F9824((unint64_t *)((char *)&v51 - ((v45 + 15) & 0x3FFFFFFFFFFFFFF0)), v44, v36, v35, &v58);
    v47 = v46;
    swift_release();
    sub_24008FD1C();
  }
  else
  {
    v49 = (void *)swift_slowAlloc();
    memcpy(v49, v56, v45);
    sub_2400F9824((unint64_t *)v49, v44, v36, v35, &v58);
    v47 = v50;
    swift_release();
    sub_24008FD1C();
    MEMORY[0x24267E17C](v49, -1, -1);
  }
  return v47;
}

uint64_t sub_2400F85AC(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(uint64_t *, uint64_t *);
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  _QWORD v13[2];

  v6 = (uint64_t (*)(uint64_t *, uint64_t *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x24BDAC8D0];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    v10 = sub_2400F93FC((uint64_t)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_2400F93FC((uint64_t)v11, v8, a3, v6);
    MEMORY[0x24267E17C](v11, -1, -1);
  }
  return a2;
}

uint64_t (*sub_2400F871C(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2400F91A0(v4);
  v4[9] = sub_2400F8A80(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_2400F8798;
}

uint64_t (*sub_2400F879C(_QWORD *a1, char a2))()
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2400F91A0(v4);
  v4[9] = sub_2400F8BAC((uint64_t)(v4 + 4), a2 & 1, isUniquelyReferenced_nonNull_native);
  return sub_2400F8798;
}

uint64_t (*sub_2400F881C(_QWORD *a1, uint64_t a2))()
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2400F91A0(v4);
  v4[9] = sub_2400F8CC8(v4 + 4, a2, isUniquelyReferenced_nonNull_native);
  return sub_2400F8798;
}

uint64_t (*sub_2400F8898(_QWORD *a1, char a2))()
{
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x50uLL);
  *a1 = v4;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_2400F91A0(v4);
  v4[9] = sub_2400F8E54((uint64_t)(v4 + 4), a2 & 1, isUniquelyReferenced_nonNull_native);
  return sub_2400F8798;
}

void sub_2400F8918(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 72))(*(_QWORD *)a1 + 32, 0);
  v2(v1, 0);
  free(v1);
}

void (*sub_2400F8954(_QWORD *a1, uint64_t a2))(uint64_t a1)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char isUniquelyReferenced_nonNull_native;

  v4 = malloc(0x68uLL);
  *a1 = v4;
  v5 = sub_24015434C();
  v4[8] = v5;
  v6 = *(_QWORD *)(v5 - 8);
  v4[9] = v6;
  v7 = malloc(*(_QWORD *)(v6 + 64));
  v4[10] = v7;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  (*(void (**)(void *, uint64_t, uint64_t))(v6 + 16))(v7, a2, v5);
  v4[11] = sub_2400F91C0(v4);
  v4[12] = sub_2400F8FD0(v4 + 4, (uint64_t)v7, isUniquelyReferenced_nonNull_native);
  return sub_2400F8A14;
}

void sub_2400F8A14(uint64_t a1)
{
  void *v1;
  void (*v2)(void *, _QWORD);
  void *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(void **)a1;
  v2 = *(void (**)(void *, _QWORD))(*(_QWORD *)a1 + 88);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 72);
  v3 = *(void **)(*(_QWORD *)a1 + 80);
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)a1 + 96))(*(_QWORD *)a1 + 32, 0);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v5);
  v2(v1, 0);
  free(v3);
  free(v1);
}

void (*sub_2400F8A80(_QWORD *a1, uint64_t a2, char a3))(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  void (*result)(unsigned __int8 **, uint64_t);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[3] = v4;
  *((_BYTE *)v8 + 17) = a2;
  v9 = *v4;
  v11 = sub_24013F0E0(a2);
  *((_BYTE *)v8 + 18) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = v10 ^ 1;
  v14 = v12 + ((v10 ^ 1) & 1);
  if (__OFADD__(v12, (v10 ^ 1) & 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  v15 = v10;
  v16 = *(_QWORD *)(v9 + 24);
  if (v16 < v14 || (a3 & 1) == 0)
  {
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_2400AE330();
      goto LABEL_9;
    }
    sub_2400AABD0(v14, a3 & 1);
    v17 = sub_24013F0E0(a2);
    if ((v15 & 1) == (v18 & 1))
    {
      v11 = v17;
      goto LABEL_9;
    }
LABEL_13:
    result = (void (*)(unsigned __int8 **, uint64_t))sub_240154F70();
    __break(1u);
    return result;
  }
LABEL_9:
  v8[4] = v11;
  v19 = 0uLL;
  if ((v15 & 1) != 0)
    v19 = *(_OWORD *)(*(_QWORD *)(*v4 + 56) + 16 * v11);
  *(_OWORD *)v8 = v19;
  *((_BYTE *)v8 + 16) = v13 & 1;
  return sub_2400F8BA0;
}

void sub_2400F8BA0(unsigned __int8 **a1, uint64_t a2)
{
  sub_2400F8DE8(a1, a2, (void (*)(uint64_t, _QWORD, uint64_t, __n128, double))sub_2400ADCA8);
}

unint64_t (*sub_2400F8BAC(uint64_t a1, char a2, char a3))(unint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t (*result)(unint64_t, uint64_t);

  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 24) = a2;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_24013EF58(v7);
  *(_BYTE *)(a1 + 25) = v9 & 1;
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = *(_QWORD *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(_QWORD *)(a1 + 16) = v10;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(_QWORD *)a1 = v16;
        return sub_2400F8CBC;
      }
LABEL_11:
      v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2400AE33C();
      goto LABEL_7;
    }
    sub_2400AABDC(v13, a3 & 1);
    v17 = sub_24013EF58(v7);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      *(_QWORD *)(a1 + 16) = v17;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (unint64_t (*)(unint64_t, uint64_t))sub_240154F70();
  __break(1u);
  return result;
}

unint64_t sub_2400F8CBC(unint64_t a1, uint64_t a2)
{
  return sub_2400F8F64(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_2400ADCAC);
}

void (*sub_2400F8CC8(_QWORD *a1, uint64_t a2, char a3))(unsigned __int8 **a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t *v4;
  _QWORD *v8;
  uint64_t v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  __int128 v19;
  void (*result)(unsigned __int8 **, uint64_t);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[3] = v4;
  *((_BYTE *)v8 + 17) = a2;
  v9 = *v4;
  v11 = sub_24013F0E0(a2);
  *((_BYTE *)v8 + 18) = v10 & 1;
  v12 = *(_QWORD *)(v9 + 16);
  v13 = v10 ^ 1;
  v14 = v12 + ((v10 ^ 1) & 1);
  if (__OFADD__(v12, (v10 ^ 1) & 1))
  {
    __break(1u);
    goto LABEL_13;
  }
  v15 = v10;
  v16 = *(_QWORD *)(v9 + 24);
  if (v16 < v14 || (a3 & 1) == 0)
  {
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_2400AE348();
      goto LABEL_9;
    }
    sub_2400AABE8(v14, a3 & 1);
    v17 = sub_24013F0E0(a2);
    if ((v15 & 1) == (v18 & 1))
    {
      v11 = v17;
      goto LABEL_9;
    }
LABEL_13:
    result = (void (*)(unsigned __int8 **, uint64_t))sub_240154F70();
    __break(1u);
    return result;
  }
LABEL_9:
  v8[4] = v11;
  v19 = 0uLL;
  if ((v15 & 1) != 0)
    v19 = *(_OWORD *)(*(_QWORD *)(*v4 + 56) + 16 * v11);
  *(_OWORD *)v8 = v19;
  *((_BYTE *)v8 + 16) = v13 & 1;
  return sub_2400F8BA0;
}

void sub_2400F8DE8(unsigned __int8 **a1, uint64_t a2, void (*a3)(uint64_t, _QWORD, uint64_t, __n128, double))
{
  unsigned __int8 *v4;
  unsigned __int8 v5;
  __n128 v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a1;
  v5 = (*a1)[18];
  if (((*a1)[16] & 1) != 0)
  {
    if (((*a1)[18] & 1) != 0)
      sub_2400F7208(*((_QWORD *)v4 + 4), **((_QWORD **)v4 + 3));
  }
  else
  {
    v6 = *(__n128 *)v4;
    v7 = *((_QWORD *)v4 + 4);
    v8 = **((_QWORD **)v4 + 3);
    if ((v5 & 1) != 0)
      *(__n128 *)(*(_QWORD *)(v8 + 56) + 16 * v7) = v6;
    else
      a3(v7, v4[17], v8, v6, v6.n128_f64[1]);
  }
  free(v4);
}

unint64_t (*sub_2400F8E54(uint64_t a1, char a2, char a3))(unint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unint64_t (*result)(unint64_t, uint64_t);

  v4 = v3;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 24) = a2;
  v7 = a2 & 1;
  v8 = *v3;
  v10 = sub_24013EF58(v7);
  *(_BYTE *)(a1 + 25) = v9 & 1;
  v11 = *(_QWORD *)(v8 + 16);
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = *(_QWORD *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(_QWORD *)(a1 + 16) = v10;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v16 = *(_QWORD *)(*(_QWORD *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(_QWORD *)a1 = v16;
        return sub_2400F8CBC;
      }
LABEL_11:
      v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2400AE4D8();
      goto LABEL_7;
    }
    sub_2400AAEC0(v13, a3 & 1);
    v17 = sub_24013EF58(v7);
    if ((v14 & 1) == (v18 & 1))
    {
      v10 = v17;
      *(_QWORD *)(a1 + 16) = v17;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  result = (unint64_t (*)(unint64_t, uint64_t))sub_240154F70();
  __break(1u);
  return result;
}

unint64_t sub_2400F8F64(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  if (*(_QWORD *)result)
  {
    if ((*(_BYTE *)(result + 25) & 1) != 0)
      *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(result + 8) + 56) + 8 * *(_QWORD *)(result + 16)) = *(_QWORD *)result;
    else
      return a3(*(_QWORD *)(result + 16), *(_BYTE *)(result + 24) & 1);
  }
  else if ((*(_BYTE *)(result + 25) & 1) != 0)
  {
    return sub_2400F73C0(*(_QWORD *)(result + 16), **(_QWORD **)(result + 8));
  }
  return result;
}

void (*sub_2400F8FD0(_QWORD *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  uint64_t v14;
  _BOOL8 v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  void (*result)(uint64_t **);

  v4 = v3;
  v8 = malloc(0x28uLL);
  *a1 = v8;
  *v8 = a2;
  v8[1] = v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC210);
  v10 = malloc(*(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  v8[2] = v10;
  v11 = *v3;
  v13 = sub_24013F178(a2);
  *((_BYTE *)v8 + 32) = v12 & 1;
  v14 = *(_QWORD *)(v11 + 16);
  v15 = (v12 & 1) == 0;
  v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    v17 = v12;
    v18 = *(_QWORD *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if ((v17 & 1) != 0)
      {
LABEL_8:
        v19 = *(_QWORD *)(*v4 + 56);
        v20 = type metadata accessor for DKPersonGroup(0);
        v21 = *(_QWORD *)(v20 - 8);
        sub_2400A0E74(v19 + *(_QWORD *)(v21 + 72) * v13, (uint64_t)v10, type metadata accessor for DKPersonGroup);
        v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_2400F9154;
      }
LABEL_11:
      v20 = type metadata accessor for DKPersonGroup(0);
      v21 = *(_QWORD *)(v20 - 8);
      v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_2400AE8C8();
      goto LABEL_7;
    }
    sub_2400AB4C8(v16, a3 & 1);
    v23 = sub_24013F178(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      v13 = v23;
      v8[3] = v23;
      if ((v17 & 1) != 0)
        goto LABEL_8;
      goto LABEL_11;
    }
  }
  sub_24015434C();
  result = (void (*)(uint64_t **))sub_240154F70();
  __break(1u);
  return result;
}

void sub_2400F9154(uint64_t **a1)
{
  uint64_t *v1;
  void *v2;

  v1 = *a1;
  v2 = (void *)(*a1)[2];
  sub_2400F91EC((uint64_t)v2, *((unsigned __int8 *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_240070BD4((uint64_t)v2, &qword_256FBC210);
  free(v2);
  free(v1);
}

uint64_t (*sub_2400F91A0(_QWORD *a1))()
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2400FE410;
}

uint64_t (*sub_2400F91C0(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  *v1 = 0x8000000000000000;
  return sub_2400F91E0;
}

uint64_t sub_2400F91E0(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

void sub_2400F91EC(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  int v25;

  v22 = a5;
  v24 = a4;
  v25 = a2;
  v23 = sub_24015434C();
  v7 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC210);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DKPersonGroup(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v22 - v18;
  sub_240070B90(a1, (uint64_t)v12, &qword_256FBC210);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_240070BD4((uint64_t)v12, &qword_256FBC210);
    if ((v25 & 1) != 0)
    {
      v20 = v24;
      swift_arrayDestroy();
      sub_2400F7578(v20, *a3, type metadata accessor for DKPersonGroup);
    }
  }
  else
  {
    sub_2400A0E74((uint64_t)v12, (uint64_t)v19, type metadata accessor for DKPersonGroup);
    v21 = (_QWORD *)*a3;
    if ((v25 & 1) != 0)
    {
      sub_2400A0E74((uint64_t)v19, v21[7] + *(_QWORD *)(v14 + 72) * v24, type metadata accessor for DKPersonGroup);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v22, v23);
      sub_2400A0E74((uint64_t)v19, (uint64_t)v16, type metadata accessor for DKPersonGroup);
      sub_2400ADD40(v24, (uint64_t)v9, (uint64_t)v16, v21);
    }
  }
}

uint64_t sub_2400F93FC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t *, uint64_t *))
{
  uint64_t v4;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  BOOL v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  char v16;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v23;
  uint64_t v24;

  v18 = (unint64_t *)result;
  v6 = 0;
  v19 = 0;
  v20 = a3 + 64;
  v7 = 1 << *(_BYTE *)(a3 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(a3 + 64);
  v21 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v11 = v10 | (v6 << 6);
LABEL_17:
    v15 = *(_QWORD *)(a3 + 56);
    v24 = *(_QWORD *)(*(_QWORD *)(a3 + 48) + 8 * v11);
    v23 = *(_QWORD *)(v15 + 8 * v11);
    swift_bridgeObjectRetain();
    swift_retain();
    v16 = a4(&v24, &v23);
    swift_bridgeObjectRelease();
    result = swift_release();
    if (v4)
      return result;
    if ((v16 & 1) != 0)
    {
      *(unint64_t *)((char *)v18 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      v12 = __OFADD__(v19++, 1);
      if (v12)
        goto LABEL_30;
    }
  }
  v12 = __OFADD__(v6++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v6 >= v21)
    return sub_2400F9608(v18, a2, v19, a3);
  v13 = *(_QWORD *)(v20 + 8 * v6);
  if (v13)
  {
LABEL_16:
    v9 = (v13 - 1) & v13;
    v11 = __clz(__rbit64(v13)) + (v6 << 6);
    goto LABEL_17;
  }
  v14 = v6 + 1;
  if (v6 + 1 >= v21)
    return sub_2400F9608(v18, a2, v19, a3);
  v13 = *(_QWORD *)(v20 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v6 + 2;
  if (v6 + 2 >= v21)
    return sub_2400F9608(v18, a2, v19, a3);
  v13 = *(_QWORD *)(v20 + 8 * v14);
  if (v13)
    goto LABEL_15;
  v14 = v6 + 3;
  if (v6 + 3 >= v21)
    return sub_2400F9608(v18, a2, v19, a3);
  v13 = *(_QWORD *)(v20 + 8 * v14);
  if (v13)
  {
LABEL_15:
    v6 = v14;
    goto LABEL_16;
  }
  while (1)
  {
    v6 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v6 >= v21)
      return sub_2400F9608(v18, a2, v19, a3);
    v13 = *(_QWORD *)(v20 + 8 * v6);
    ++v14;
    if (v13)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

unint64_t sub_2400F9608(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t *v23;
  __int128 v24[4];

  if (!a3)
    return MEMORY[0x24BEE4B00];
  v4 = a4;
  v5 = a3;
  if (*(_QWORD *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84A0);
  result = sub_240154D54();
  v9 = (_QWORD *)result;
  v23 = a1;
  if (a2 < 1)
    v10 = 0;
  else
    v10 = *a1;
  v11 = 0;
  v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
    }
    else
    {
      v15 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_30;
      if (v15 >= a2)
        return (unint64_t)v9;
      v16 = v23[v15];
      ++v11;
      if (!v16)
      {
        v11 = v15 + 1;
        if (v15 + 1 >= a2)
          return (unint64_t)v9;
        v16 = v23[v11];
        if (!v16)
        {
          v11 = v15 + 2;
          if (v15 + 2 >= a2)
            return (unint64_t)v9;
          v16 = v23[v11];
          if (!v16)
          {
            v17 = v15 + 3;
            if (v17 >= a2)
              return (unint64_t)v9;
            v16 = v23[v17];
            if (!v16)
            {
              while (1)
              {
                v11 = v17 + 1;
                if (__OFADD__(v17, 1))
                  goto LABEL_31;
                if (v11 >= a2)
                  return (unint64_t)v9;
                v16 = v23[v11];
                ++v17;
                if (v16)
                  goto LABEL_24;
              }
            }
            v11 = v17;
          }
        }
      }
LABEL_24:
      v10 = (v16 - 1) & v16;
      v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    v18 = 8 * v14;
    v19 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + v18);
    v20 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + v18);
    sub_240154FE8();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2400B086C(v24, v19);
    sub_240155018();
    result = sub_240154AD8();
    *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v21 = 8 * result;
    *(_QWORD *)(v9[6] + v21) = v19;
    *(_QWORD *)(v9[7] + v21) = v20;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
      break;
    if (!v5)
      return (unint64_t)v9;
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void sub_2400F9824(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, _QWORD *a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __n128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, unint64_t, uint64_t);
  char v39;
  int64_t v40;
  int64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t *v50;
  char *v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;

  v48 = a2;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24015434C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17.n128_f64[0] = MEMORY[0x24BDAC7A8](v16);
  v56 = (char *)&v47 - v18;
  v19 = *(_QWORD *)(a3 + 16);
  v20 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  v21 = *(unint64_t *)((char *)a1 + v20) & ((-1 << a4) - 1);
  v50 = a1;
  v51 = v11;
  *(unint64_t *)((char *)a1 + v20) = v21;
  v22 = v19 - 1;
  v54 = a3 + 56;
  v55 = a3;
  v52 = a5;
  while (2)
  {
    v49 = v22;
    do
    {
      while (1)
      {
        v24 = *a5;
        v25 = a5[1];
        v27 = a5[2];
        v26 = a5[3];
        v28 = a5[4];
        v53 = v27;
        if (v28)
        {
          v29 = (v28 - 1) & v28;
          v30 = __clz(__rbit64(v28)) | (v26 << 6);
LABEL_7:
          (*(void (**)(char *, unint64_t, uint64_t, __n128))(v13 + 16))(v11, *(_QWORD *)(v24 + 48) + *(_QWORD *)(v13 + 72) * v30, v12, v17);
          v31 = 0;
          goto LABEL_8;
        }
        v40 = v26 + 1;
        if (__OFADD__(v26, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        v41 = (unint64_t)(v27 + 64) >> 6;
        if (v40 >= v41)
        {
          v29 = 0;
          v31 = 1;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v25 + 8 * v40);
        if (v42)
          goto LABEL_17;
        if (v26 + 2 >= v41)
          goto LABEL_34;
        v42 = *(_QWORD *)(v25 + 8 * (v26 + 2));
        if (v42)
        {
          v40 = v26 + 2;
LABEL_17:
          v29 = (v42 - 1) & v42;
          v30 = __clz(__rbit64(v42)) + (v40 << 6);
          v26 = v40;
          goto LABEL_7;
        }
        if (v26 + 3 >= v41)
        {
          v29 = 0;
          v31 = 1;
          v26 += 2;
          goto LABEL_8;
        }
        v42 = *(_QWORD *)(v25 + 8 * (v26 + 3));
        if (v42)
        {
          v40 = v26 + 3;
          goto LABEL_17;
        }
        v40 = v26 + 4;
        if (v26 + 4 < v41)
        {
          v42 = *(_QWORD *)(v25 + 8 * v40);
          if (v42)
            goto LABEL_17;
          v40 = v41 - 1;
          v45 = v26 + 5;
          while (v41 != v45)
          {
            v42 = *(_QWORD *)(v25 + 8 * v45++);
            if (v42)
            {
              v40 = v45 - 1;
              goto LABEL_17;
            }
          }
LABEL_34:
          v29 = 0;
          v31 = 1;
          v26 = v40;
          goto LABEL_8;
        }
        v29 = 0;
        v31 = 1;
        v26 += 3;
LABEL_8:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, v31, 1, v12);
        *a5 = v24;
        a5[1] = v25;
        a5[2] = v53;
        a5[3] = v26;
        a5[4] = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
        {
          sub_240070BD4((uint64_t)v11, &qword_256FB5DE8);
          v46 = v55;
          swift_retain();
          sub_2400F9C68(v50, v48, v49, v46);
          return;
        }
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v56, v11, v12);
        v32 = v55;
        sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v33 = sub_2401545BC();
        v34 = -1 << *(_BYTE *)(v32 + 32);
        v35 = v33 & ~v34;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) != 0)
          break;
        v23 = *(void (**)(char *, uint64_t))(v13 + 8);
LABEL_4:
        v23(v56, v12);
        v11 = v51;
        a5 = v52;
      }
      v36 = ~v34;
      v37 = *(_QWORD *)(v13 + 72);
      v38 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
      while (1)
      {
        v38(v15, *(_QWORD *)(v55 + 48) + v37 * v35, v12);
        sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v39 = sub_240154610();
        v23 = *(void (**)(char *, uint64_t))(v13 + 8);
        v23(v15, v12);
        if ((v39 & 1) != 0)
          break;
        v35 = (v35 + 1) & v36;
        if (((*(_QWORD *)(v54 + ((v35 >> 3) & 0xFFFFFFFFFFFFF8)) >> v35) & 1) == 0)
          goto LABEL_4;
      }
      v23(v56, v12);
      v43 = (v35 >> 3) & 0x1FFFFFFFFFFFFFF8;
      v11 = v51;
      v44 = *(unint64_t *)((char *)v50 + v43);
      *(unint64_t *)((char *)v50 + v43) = v44 & ~(1 << v35);
      a5 = v52;
    }
    while ((v44 & (1 << v35)) == 0);
    v22 = v49 - 1;
    if (__OFSUB__(v49, 1))
    {
LABEL_41:
      __break(1u);
      return;
    }
    if (v49 != 1)
      continue;
    break;
  }
}

uint64_t sub_2400F9C68(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v35;
  unint64_t *v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_24015434C();
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return MEMORY[0x24BEE4B08];
  }
  if (*(_QWORD *)(a4 + 16) == a3)
    return a4;
  v38 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC710);
  result = sub_240154B20();
  v12 = result;
  v36 = a1;
  v37 = a2;
  if (a2 < 1)
    v14 = 0;
  else
    v14 = *a1;
  v15 = 0;
  v16 = result + 56;
  v17 = v38;
  while (1)
  {
    if (v14)
    {
      v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v19 = v18 | (v15 << 6);
    }
    else
    {
      v20 = v15 + 1;
      if (__OFADD__(v15, 1))
        goto LABEL_40;
      if (v20 >= v37)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      v21 = v36[v20];
      ++v15;
      if (!v21)
      {
        v15 = v20 + 1;
        if (v20 + 1 >= v37)
          goto LABEL_37;
        v21 = v36[v15];
        if (!v21)
        {
          v15 = v20 + 2;
          if (v20 + 2 >= v37)
            goto LABEL_37;
          v21 = v36[v15];
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v37)
              goto LABEL_37;
            v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                v15 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v15 >= v37)
                  goto LABEL_37;
                v21 = v36[v15];
                ++v22;
                if (v21)
                  goto LABEL_24;
              }
            }
            v15 = v22;
          }
        }
      }
LABEL_24:
      v14 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v15 << 6);
    }
    v23 = a4;
    v24 = *(_QWORD *)(a4 + 48);
    v25 = *(_QWORD *)(v17 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v11, v24 + v25 * v19, v8);
    sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_2401545BC();
    v26 = -1 << *(_BYTE *)(v12 + 32);
    v27 = result & ~v26;
    v28 = v27 >> 6;
    if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      v29 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      v17 = v38;
    }
    else
    {
      v30 = 0;
      v31 = (unint64_t)(63 - v26) >> 6;
      v17 = v38;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        v32 = v28 == v31;
        if (v28 == v31)
          v28 = 0;
        v30 |= v32;
        v33 = *(_QWORD *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(_QWORD *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v17 + 32))(*(_QWORD *)(v12 + 48) + v29 * v25, v11, v8);
    ++*(_QWORD *)(v12 + 16);
    if (__OFSUB__(a3--, 1))
      break;
    a4 = v23;
    if (!a3)
      goto LABEL_37;
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2400F9F68(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3;
  char v4;
  unint64_t v5;
  size_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  _QWORD v12[2];

  v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x24BDAC8D0];
  v4 = *(_BYTE *)(a2 + 32);
  v5 = (unint64_t)((1 << v4) + 63) >> 6;
  v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x24BDAC7A8](isStackAllocationSafe);
    bzero((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_2400FA0E8((_QWORD *)((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    v8 = v7;
    swift_release();
  }
  else
  {
    v9 = (void *)swift_slowAlloc();
    bzero(v9, v6);
    sub_2400FA0E8((unint64_t *)v9, v5, a2, v3);
    v8 = v10;
    swift_release();
    MEMORY[0x24267E17C](v9, -1, -1);
  }
  return v8;
}

void sub_2400FA0E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  BOOL v26;
  unint64_t v27;
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(unint64_t, unint64_t, uint64_t, __n128);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char v41;
  void (*v42)(char *, uint64_t);
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t i;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(char *, unint64_t, uint64_t, __n128);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  char v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int64_t v68;
  unint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v66 = a2;
  v69 = a1;
  v6 = sub_24015434C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v66 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v66 - v14;
  v18.n128_f64[0] = MEMORY[0x24BDAC7A8](v16);
  v19 = *(_QWORD *)(a3 + 16);
  v20 = *(_QWORD *)(a4 + 16);
  v75 = a4;
  v76 = a3;
  v77 = v7;
  if (v20 >= v19)
  {
    v71 = 0;
    v43 = 0;
    v44 = *(_QWORD *)(a3 + 56);
    v67 = a3 + 56;
    v45 = 1 << *(_BYTE *)(a3 + 32);
    if (v45 < 64)
      v46 = ~(-1 << v45);
    else
      v46 = -1;
    v47 = v46 & v44;
    v68 = (unint64_t)(v45 + 63) >> 6;
    v74 = a4 + 56;
    if (v47)
      goto LABEL_38;
LABEL_39:
    v49 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    if (v49 < v68)
    {
      v50 = *(_QWORD *)(v67 + 8 * v49);
      v51 = v43 + 1;
      if (v50)
        goto LABEL_52;
      v51 = v43 + 2;
      if (v43 + 2 < v68)
      {
        v50 = *(_QWORD *)(v67 + 8 * v51);
        if (v50)
          goto LABEL_52;
        v51 = v43 + 3;
        if (v43 + 3 < v68)
        {
          v50 = *(_QWORD *)(v67 + 8 * v51);
          if (v50)
            goto LABEL_52;
          v52 = v43 + 4;
          if (v43 + 4 < v68)
          {
            v50 = *(_QWORD *)(v67 + 8 * v52);
            if (!v50)
            {
              while (1)
              {
                v51 = v52 + 1;
                if (__OFADD__(v52, 1))
                  goto LABEL_67;
                if (v51 >= v68)
                  goto LABEL_61;
                v50 = *(_QWORD *)(v67 + 8 * v51);
                ++v52;
                if (v50)
                  goto LABEL_52;
              }
            }
            v51 = v43 + 4;
LABEL_52:
            v72 = (v50 - 1) & v50;
            v73 = v51;
            for (i = __clz(__rbit64(v50)) + (v51 << 6); ; i = __clz(__rbit64(v47)) | (v43 << 6))
            {
              v53 = *(_QWORD *)(a3 + 48);
              v54 = *(_QWORD *)(v7 + 72);
              v70 = i;
              v55 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
              v55(v9, v53 + v54 * i, v6, v18);
              sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
              v56 = v7;
              v57 = v9;
              v58 = sub_2401545BC();
              v59 = -1 << *(_BYTE *)(a4 + 32);
              v60 = v58 & ~v59;
              if (((*(_QWORD *)(v74 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) != 0)
              {
                v61 = ~v59;
                while (1)
                {
                  ((void (*)(char *, unint64_t, uint64_t))v55)(v12, *(_QWORD *)(v75 + 48) + v60 * v54, v6);
                  sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
                  v62 = sub_240154610();
                  v63 = *(void (**)(char *, uint64_t))(v77 + 8);
                  v63(v12, v6);
                  if ((v62 & 1) != 0)
                    break;
                  v60 = (v60 + 1) & v61;
                  if (((*(_QWORD *)(v74 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
                    goto LABEL_59;
                }
                v9 = v57;
                v63(v57, v6);
                *(unint64_t *)((char *)v69 + ((v70 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v70;
                v47 = v72;
                v26 = __OFADD__(v71++, 1);
                a4 = v75;
                a3 = v76;
                v7 = v77;
                v43 = v73;
                if (v26)
                  goto LABEL_65;
                if (!v72)
                  goto LABEL_39;
              }
              else
              {
                v63 = *(void (**)(char *, uint64_t))(v56 + 8);
LABEL_59:
                v9 = v57;
                v63(v57, v6);
                a4 = v75;
                a3 = v76;
                v7 = v77;
                v47 = v72;
                v43 = v73;
                if (!v72)
                  goto LABEL_39;
              }
LABEL_38:
              v72 = (v47 - 1) & v47;
              v73 = v43;
            }
          }
        }
      }
    }
LABEL_61:
    v64 = v66;
    v65 = v71;
    swift_retain();
    sub_2400F9C68(v69, v64, v65, a3);
    return;
  }
  v70 = (unint64_t)&v66 - v17;
  v71 = 0;
  v21 = 0;
  v22 = *(_QWORD *)(a4 + 56);
  v67 = a4 + 56;
  v23 = 1 << *(_BYTE *)(a4 + 32);
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v25 = v24 & v22;
  v68 = (unint64_t)(v23 + 63) >> 6;
  v74 = a3 + 56;
  do
  {
    v27 = v70;
    if (v25)
    {
LABEL_8:
      v72 = (v25 - 1) & v25;
      v73 = v21;
      v28 = __clz(__rbit64(v25)) | (v21 << 6);
      goto LABEL_23;
    }
    while (1)
    {
      v29 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_63;
      }
      if (v29 >= v68)
        goto LABEL_61;
      v30 = *(_QWORD *)(v67 + 8 * v29);
      v31 = v21 + 1;
      if (!v30)
      {
        v31 = v21 + 2;
        if (v21 + 2 >= v68)
          goto LABEL_61;
        v30 = *(_QWORD *)(v67 + 8 * v31);
        if (!v30)
        {
          v31 = v21 + 3;
          if (v21 + 3 >= v68)
            goto LABEL_61;
          v30 = *(_QWORD *)(v67 + 8 * v31);
          if (!v30)
          {
            v32 = v21 + 4;
            if (v21 + 4 >= v68)
              goto LABEL_61;
            v30 = *(_QWORD *)(v67 + 8 * v32);
            if (!v30)
            {
              while (1)
              {
                v31 = v32 + 1;
                if (__OFADD__(v32, 1))
                  goto LABEL_66;
                if (v31 >= v68)
                  goto LABEL_61;
                v30 = *(_QWORD *)(v67 + 8 * v31);
                ++v32;
                if (v30)
                  goto LABEL_22;
              }
            }
            v31 = v21 + 4;
          }
        }
      }
LABEL_22:
      v72 = (v30 - 1) & v30;
      v73 = v31;
      v28 = __clz(__rbit64(v30)) + (v31 << 6);
LABEL_23:
      v33 = *(_QWORD *)(v7 + 72);
      v34 = *(void (**)(unint64_t, unint64_t, uint64_t, __n128))(v7 + 16);
      v34(v27, *(_QWORD *)(a4 + 48) + v33 * v28, v6, v18);
      (*(void (**)(char *, unint64_t, uint64_t))(v7 + 32))(v15, v27, v6);
      sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v35 = v7;
      v36 = v15;
      v37 = sub_2401545BC();
      a3 = v76;
      v38 = -1 << *(_BYTE *)(v76 + 32);
      v39 = v37 & ~v38;
      if (((*(_QWORD *)(v74 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) != 0)
        break;
      v42 = *(void (**)(char *, uint64_t))(v35 + 8);
LABEL_29:
      v15 = v36;
      v42(v36, v6);
      a4 = v75;
      v7 = v77;
      v27 = v70;
      v25 = v72;
      v21 = v73;
      if (v72)
        goto LABEL_8;
    }
    v40 = ~v38;
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v34)(v12, *(_QWORD *)(a3 + 48) + v39 * v33, v6);
      sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v41 = sub_240154610();
      v42 = *(void (**)(char *, uint64_t))(v77 + 8);
      v42(v12, v6);
      if ((v41 & 1) != 0)
        break;
      v39 = (v39 + 1) & v40;
      a3 = v76;
      if (((*(_QWORD *)(v74 + ((v39 >> 3) & 0xFFFFFFFFFFFFF8)) >> v39) & 1) == 0)
        goto LABEL_29;
    }
    v15 = v36;
    v42(v36, v6);
    *(unint64_t *)((char *)v69 + ((v39 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v39;
    v25 = v72;
    v26 = __OFADD__(v71++, 1);
    a4 = v75;
    a3 = v76;
    v7 = v77;
    v21 = v73;
  }
  while (!v26);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
}

uint64_t sub_2400FA7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v17[2];

  v4 = sub_24015434C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a2 + 16);
  v17[1] = a1;
  sub_240154FF4();
  if (v11)
  {
    v12 = a2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(_QWORD *)(v5 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    while (1)
    {
      v14(v10, v12, v4);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v15(v10, 0, 1, v4);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_2401545C8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 += v13;
      if (!--v11)
        return v15(v10, 1, 1, v4);
    }
  }
  else
  {
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v15(v10, 1, 1, v4);
  }
  return result;
}

void sub_2400FA944(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  void (*v24)(char *, unint64_t, uint64_t, __n128);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v4 = sub_24015434C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v39 = (char *)&v32 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  v11.n128_f64[0] = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 != a2 && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
  {
    v14 = 0;
    v15 = *(_QWORD *)(a1 + 56);
    v33 = a1;
    v34 = a1 + 56;
    v16 = 1 << *(_BYTE *)(a1 + 32);
    if (v16 < 64)
      v17 = ~(-1 << v16);
    else
      v17 = -1;
    v18 = v17 & v15;
    v35 = (unint64_t)(v16 + 63) >> 6;
    v38 = a2 + 56;
    v32 = v13;
    if (!v18)
      goto LABEL_8;
LABEL_7:
    v37 = (v18 - 1) & v18;
    for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v14 << 6))
    {
      v23 = *(_QWORD *)(v5 + 72);
      v24 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
      v24(v13, *(_QWORD *)(a1 + 48) + v23 * i, v4, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v13, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
        return;
      v36 = v14;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v39, v13, v4);
      sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      v25 = sub_2401545BC();
      v26 = -1 << *(_BYTE *)(a2 + 32);
      v27 = v25 & ~v26;
      if (((*(_QWORD *)(v38 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
        break;
      v28 = a2;
      v29 = ~v26;
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v24)(v7, *(_QWORD *)(v28 + 48) + v27 * v23, v4);
        sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
        v30 = sub_240154610();
        v31 = *(void (**)(char *, uint64_t))(v5 + 8);
        v31(v7, v4);
        if ((v30 & 1) != 0)
          break;
        v27 = (v27 + 1) & v29;
        if (((*(_QWORD *)(v38 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
          goto LABEL_32;
      }
      v31(v39, v4);
      a2 = v28;
      v13 = v32;
      a1 = v33;
      v14 = v36;
      v18 = v37;
      if (v37)
        goto LABEL_7;
LABEL_8:
      v20 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
LABEL_36:
        __break(1u);
        return;
      }
      if (v20 >= v35)
        goto LABEL_34;
      v21 = *(_QWORD *)(v34 + 8 * v20);
      ++v14;
      if (!v21)
      {
        v14 = v20 + 1;
        if (v20 + 1 >= v35)
          goto LABEL_34;
        v21 = *(_QWORD *)(v34 + 8 * v14);
        if (!v21)
        {
          v14 = v20 + 2;
          if (v20 + 2 >= v35)
            goto LABEL_34;
          v21 = *(_QWORD *)(v34 + 8 * v14);
          if (!v21)
          {
            v22 = v20 + 3;
            if (v22 >= v35)
            {
LABEL_34:
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v13, 1, 1, v4, v11);
              return;
            }
            v21 = *(_QWORD *)(v34 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                v14 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_36;
                if (v14 >= v35)
                  goto LABEL_34;
                v21 = *(_QWORD *)(v34 + 8 * v14);
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v14 = v22;
          }
        }
      }
LABEL_21:
      v37 = (v21 - 1) & v21;
    }
    v31 = *(void (**)(char *, uint64_t))(v5 + 8);
LABEL_32:
    v31(v39, v4);
  }
}

BOOL _s23IntelligentTrackingCore19DKPersonGroupFilterC5TrackV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;

  v4 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(_QWORD *)a1 != *(_QWORD *)a2)
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  v5 = type metadata accessor for DKPersonGroupFilter.Track(0);
  if ((sub_240154328() & 1) != 0)
    return *(_QWORD *)(a1 + *(int *)(v5 + 24)) == *(_QWORD *)(a2 + *(int *)(v5 + 24));
  return 0;
}

uint64_t sub_2400FADA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t, uint64_t);
  int v43;
  char v44;
  unint64_t v45;
  uint64_t v46;
  _BOOL8 v47;
  uint64_t v48;
  char v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  int *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  int isUniquelyReferenced_nonNull_native;
  char v72;
  unint64_t v73;
  uint64_t v74;
  _BOOL8 v75;
  uint64_t v76;
  char v77;
  unint64_t v78;
  char v79;
  uint64_t v80;
  int *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  char v97;
  unint64_t v98;
  uint64_t v99;
  _BOOL8 v100;
  uint64_t v101;
  char v102;
  unint64_t v103;
  char v104;
  void (*v105)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v106;
  int *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  char v121;
  unint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t result;
  _QWORD v127[2];
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  char *v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  int *v150;
  uint64_t v151;
  _QWORD *v152;

  v129 = a3;
  v130 = a2;
  v4 = sub_24015434C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v142 = (char *)v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_240154310();
  v138 = *(_QWORD *)(v7 - 8);
  v139 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v147 = (char *)v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DKPersonGroup(0);
  v149 = *(_QWORD *)(v9 - 8);
  v150 = (int *)v9;
  MEMORY[0x24BDAC7A8](v9);
  v137 = (char *)v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v136 = (uint64_t)v127 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v146 = (char *)v127 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v145 = (char *)v127 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v144 = (char *)v127 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v127 - v23;
  v148 = type metadata accessor for DKPersonGroupFilter.Track(0);
  MEMORY[0x24BDAC7A8](v148);
  v135 = (char *)v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v127 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v133 = v15;
  v134 = (char *)v127 - v31;
  v32 = *(_QWORD *)(a1 + 16);
  v151 = v4;
  v143 = v5;
  v132 = v28;
  v128 = v30;
  if (!v32)
  {
    v34 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_18:
    v64 = *(_QWORD *)(v130 + 16);
    if (v64)
    {
      v65 = v130 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      v66 = *(_QWORD *)(v30 + 72);
      swift_bridgeObjectRetain();
      v141 = v66;
      do
      {
        sub_240080084(v65, (uint64_t)v28, type metadata accessor for DKPersonGroupFilter.Track);
        if ((v28[8] & 1) == 0)
        {
          v68 = *(_QWORD *)v28;
          v69 = v151;
          (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v15, &v28[*(int *)(v148 + 20)], v151);
          v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
          v70(v15, 0, 1, v69);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v152 = v34;
          v73 = sub_24013EF5C(v68);
          v74 = v34[2];
          v75 = (v72 & 1) == 0;
          v76 = v74 + v75;
          if (__OFADD__(v74, v75))
            goto LABEL_56;
          v77 = v72;
          if (v34[3] >= v76)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              sub_2400AE69C();
          }
          else
          {
            sub_2400AB198(v76, isUniquelyReferenced_nonNull_native);
            v78 = sub_24013EF5C(v68);
            if ((v77 & 1) != (v79 & 1))
              goto LABEL_61;
            v73 = v78;
          }
          v34 = v152;
          swift_bridgeObjectRelease();
          if ((v77 & 1) != 0)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            v140 = v68;
            v80 = v151;
            v70(v144, 1, 1, v151);
            v70(v145, 1, 1, v80);
            v70(v146, 1, 1, v80);
            swift_bridgeObjectRetain();
            sub_240154274();
            v81 = v150;
            v82 = v137;
            v83 = (uint64_t)&v137[v150[7]];
            v70((char *)v83, 1, 1, v80);
            v84 = (uint64_t)&v82[v81[8]];
            v70((char *)v84, 1, 1, v80);
            v85 = v80;
            v86 = (uint64_t)&v82[v81[9]];
            v70((char *)v86, 1, 1, v85);
            v87 = v81[10];
            *(_QWORD *)&v82[v87] = MEMORY[0x24BEE4AF8];
            *(_QWORD *)v82 = -1;
            *((_QWORD *)v82 + 1) = 0;
            (*(void (**)(char *, char *, uint64_t))(v138 + 32))(&v82[v81[6]], v147, v139);
            sub_240070BD4(v83, &qword_256FB5DE8);
            sub_24007CD50((uint64_t)v144, v83, &qword_256FB5DE8);
            sub_240070BD4(v84, &qword_256FB5DE8);
            sub_24007CD50((uint64_t)v145, v84, &qword_256FB5DE8);
            sub_240070BD4(v86, &qword_256FB5DE8);
            sub_24007CD50((uint64_t)v146, v86, &qword_256FB5DE8);
            swift_bridgeObjectRelease();
            *(_QWORD *)&v82[v87] = MEMORY[0x24BEE4AF8];
            v88 = v136;
            sub_2400A0E74((uint64_t)v82, v136, type metadata accessor for DKPersonGroup);
            v34[(v73 >> 6) + 8] |= 1 << v73;
            *(_QWORD *)(v34[6] + 8 * v73) = v140;
            sub_2400A0E74(v88, v34[7] + *(_QWORD *)(v149 + 72) * v73, type metadata accessor for DKPersonGroup);
            v89 = v34[2];
            v62 = __OFADD__(v89, 1);
            v90 = v89 + 1;
            if (v62)
              goto LABEL_59;
            v34[2] = v90;
            v28 = v132;
            v15 = v133;
          }
          v67 = v34[7];
          swift_bridgeObjectRelease();
          sub_24009C218((uint64_t)v15, v67 + *(_QWORD *)(v149 + 72) * v73 + v150[9], &qword_256FB5DE8);
          v5 = v143;
          v66 = v141;
        }
        sub_2400800C8((uint64_t)v28, type metadata accessor for DKPersonGroupFilter.Track);
        v65 += v66;
        --v64;
      }
      while (v64);
      swift_bridgeObjectRelease();
      v30 = v128;
    }
    v91 = *(_QWORD *)(v129 + 16);
    v92 = (uint64_t)v135;
    if (v91)
    {
      v93 = v129 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
      v94 = *(_QWORD *)(v30 + 72);
      swift_bridgeObjectRetain();
      v141 = v94;
      do
      {
        sub_240080084(v93, v92, type metadata accessor for DKPersonGroupFilter.Track);
        if ((*(_BYTE *)(v92 + 8) & 1) == 0)
        {
          v95 = *(_QWORD *)v92;
          (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v142, v92 + *(int *)(v148 + 20), v151);
          v96 = swift_isUniquelyReferenced_nonNull_native();
          v152 = v34;
          v98 = sub_24013EF5C(v95);
          v99 = v34[2];
          v100 = (v97 & 1) == 0;
          v101 = v99 + v100;
          if (__OFADD__(v99, v100))
            goto LABEL_57;
          v102 = v97;
          if (v34[3] >= v101)
          {
            if ((v96 & 1) == 0)
              sub_2400AE69C();
          }
          else
          {
            sub_2400AB198(v101, v96);
            v103 = sub_24013EF5C(v95);
            if ((v102 & 1) != (v104 & 1))
              goto LABEL_61;
            v98 = v103;
          }
          v34 = v152;
          swift_bridgeObjectRelease();
          if ((v102 & 1) != 0)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            v105 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
            v140 = v95;
            v106 = v151;
            v105((uint64_t)v144, 1, 1, v151);
            v105((uint64_t)v145, 1, 1, v106);
            v105((uint64_t)v146, 1, 1, v106);
            swift_bridgeObjectRetain();
            sub_240154274();
            v107 = v150;
            v108 = v137;
            v109 = (uint64_t)&v137[v150[7]];
            v105(v109, 1, 1, v106);
            v110 = (uint64_t)&v108[v107[8]];
            v105(v110, 1, 1, v106);
            v111 = v106;
            v112 = (uint64_t)&v108[v107[9]];
            v105(v112, 1, 1, v111);
            v113 = v107[10];
            *(_QWORD *)&v108[v113] = MEMORY[0x24BEE4AF8];
            *(_QWORD *)v108 = -1;
            *((_QWORD *)v108 + 1) = 0;
            (*(void (**)(char *, char *, uint64_t))(v138 + 32))(&v108[v107[6]], v147, v139);
            sub_240070BD4(v109, &qword_256FB5DE8);
            sub_24007CD50((uint64_t)v144, v109, &qword_256FB5DE8);
            sub_240070BD4(v110, &qword_256FB5DE8);
            sub_24007CD50((uint64_t)v145, v110, &qword_256FB5DE8);
            sub_240070BD4(v112, &qword_256FB5DE8);
            sub_24007CD50((uint64_t)v146, v112, &qword_256FB5DE8);
            swift_bridgeObjectRelease();
            *(_QWORD *)&v108[v113] = MEMORY[0x24BEE4AF8];
            v114 = v136;
            sub_2400A0E74((uint64_t)v108, v136, type metadata accessor for DKPersonGroup);
            v34[(v98 >> 6) + 8] |= 1 << v98;
            *(_QWORD *)(v34[6] + 8 * v98) = v140;
            sub_2400A0E74(v114, v34[7] + *(_QWORD *)(v149 + 72) * v98, type metadata accessor for DKPersonGroup);
            v115 = v34[2];
            v62 = __OFADD__(v115, 1);
            v116 = v115 + 1;
            if (v62)
              goto LABEL_60;
            v34[2] = v116;
            v5 = v143;
          }
          v117 = v34[7];
          swift_bridgeObjectRelease();
          v118 = v117 + *(_QWORD *)(v149 + 72) * v98;
          v119 = v150[10];
          v120 = *(_QWORD *)(v118 + v119);
          v121 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v118 + v119) = v120;
          if ((v121 & 1) == 0)
          {
            v120 = sub_240077844(0, *(_QWORD *)(v120 + 16) + 1, 1, v120);
            *(_QWORD *)(v118 + v119) = v120;
          }
          v123 = *(_QWORD *)(v120 + 16);
          v122 = *(_QWORD *)(v120 + 24);
          if (v123 >= v122 >> 1)
          {
            v120 = sub_240077844(v122 > 1, v123 + 1, 1, v120);
            *(_QWORD *)(v118 + v119) = v120;
          }
          v92 = (uint64_t)v135;
          *(_QWORD *)(v120 + 16) = v123 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v120+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v123, v142, v151);
          v94 = v141;
        }
        sub_2400800C8(v92, type metadata accessor for DKPersonGroupFilter.Track);
        v93 += v94;
        --v91;
      }
      while (v91);
      swift_bridgeObjectRelease();
    }
    v124 = swift_bridgeObjectRetain();
    v125 = sub_24013FC98(v124);
    swift_bridgeObjectRelease_n();
    return v125;
  }
  v33 = a1 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  v141 = *(_QWORD *)(v30 + 72);
  v127[1] = a1;
  swift_bridgeObjectRetain();
  v34 = (_QWORD *)MEMORY[0x24BEE4B00];
  v35 = (uint64_t)v134;
  v131 = v24;
  while (1)
  {
    sub_240080084(v33, v35, type metadata accessor for DKPersonGroupFilter.Track);
    if ((*(_BYTE *)(v35 + 8) & 1) != 0)
      goto LABEL_5;
    v38 = v15;
    v39 = *(_QWORD *)v35;
    v40 = v35 + *(int *)(v148 + 20);
    v41 = v151;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v24, v40, v151);
    v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v42(v24, 0, 1, v41);
    v43 = swift_isUniquelyReferenced_nonNull_native();
    v152 = v34;
    v140 = v39;
    v45 = sub_24013EF5C(v39);
    v46 = v34[2];
    v47 = (v44 & 1) == 0;
    v48 = v46 + v47;
    if (__OFADD__(v46, v47))
      break;
    v49 = v44;
    if (v34[3] >= v48)
    {
      v15 = v38;
      if ((v43 & 1) == 0)
        sub_2400AE69C();
    }
    else
    {
      sub_2400AB198(v48, v43);
      v50 = sub_24013EF5C(v140);
      if ((v49 & 1) != (v51 & 1))
        goto LABEL_61;
      v45 = v50;
      v15 = v38;
    }
    v34 = v152;
    swift_bridgeObjectRelease();
    if ((v49 & 1) != 0)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v52 = v151;
      v42(v144, 1, 1, v151);
      v42(v145, 1, 1, v52);
      v42(v146, 1, 1, v52);
      swift_bridgeObjectRetain();
      sub_240154274();
      v53 = v150;
      v54 = v137;
      v55 = (uint64_t)&v137[v150[7]];
      v42((char *)v55, 1, 1, v52);
      v56 = (uint64_t)&v54[v53[8]];
      v42((char *)v56, 1, 1, v52);
      v57 = v52;
      v58 = (uint64_t)&v54[v53[9]];
      v42((char *)v58, 1, 1, v57);
      v59 = v53[10];
      *(_QWORD *)&v54[v59] = MEMORY[0x24BEE4AF8];
      *(_QWORD *)v54 = -1;
      *((_QWORD *)v54 + 1) = 0;
      (*(void (**)(char *, char *, uint64_t))(v138 + 32))(&v54[v53[6]], v147, v139);
      sub_240070BD4(v55, &qword_256FB5DE8);
      sub_24007CD50((uint64_t)v144, v55, &qword_256FB5DE8);
      sub_240070BD4(v56, &qword_256FB5DE8);
      sub_24007CD50((uint64_t)v145, v56, &qword_256FB5DE8);
      sub_240070BD4(v58, &qword_256FB5DE8);
      sub_24007CD50((uint64_t)v146, v58, &qword_256FB5DE8);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v54[v59] = MEMORY[0x24BEE4AF8];
      v60 = v136;
      sub_2400A0E74((uint64_t)v54, v136, type metadata accessor for DKPersonGroup);
      v34[(v45 >> 6) + 8] |= 1 << v45;
      *(_QWORD *)(v34[6] + 8 * v45) = v140;
      sub_2400A0E74(v60, v34[7] + *(_QWORD *)(v149 + 72) * v45, type metadata accessor for DKPersonGroup);
      v61 = v34[2];
      v62 = __OFADD__(v61, 1);
      v63 = v61 + 1;
      if (v62)
        goto LABEL_58;
      v34[2] = v63;
      v28 = v132;
      v15 = v133;
    }
    v36 = v34[7];
    swift_bridgeObjectRelease();
    v37 = v36 + *(_QWORD *)(v149 + 72) * v45 + v150[8];
    v24 = v131;
    sub_24009C218((uint64_t)v131, v37, &qword_256FB5DE8);
    v5 = v143;
    v35 = (uint64_t)v134;
LABEL_5:
    sub_2400800C8(v35, type metadata accessor for DKPersonGroupFilter.Track);
    v33 += v141;
    if (!--v32)
    {
      swift_bridgeObjectRelease();
      v30 = v128;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_2400FBB0C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  v2 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v26 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC718);
    v9 = sub_240154B20();
    v10 = 0;
    v11 = v9 + 56;
    v12 = *(unsigned __int8 *)(v2 + 80);
    v26 = v8;
    v27 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v2 + 72);
    while (1)
    {
      sub_240080084(v27 + v13 * v10, (uint64_t)v7, type metadata accessor for DKPersonGroupFilter.StampedPerson);
      sub_240154FE8();
      sub_240154310();
      sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
      sub_2401545C8();
      sub_24015434C();
      sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
      sub_2401545C8();
      v14 = sub_240155018();
      v15 = -1 << *(_BYTE *)(v9 + 32);
      v16 = v14 & ~v15;
      v17 = v16 >> 6;
      v18 = *(_QWORD *)(v11 + 8 * (v16 >> 6));
      v19 = 1 << v16;
      if (((1 << v16) & v18) != 0)
      {
        v20 = ~v15;
        while (1)
        {
          sub_240080084(*(_QWORD *)(v9 + 48) + v16 * v13, (uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
          if ((sub_2401542EC() & 1) != 0 && (sub_240154328() & 1) != 0)
            break;
          sub_2400800C8((uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
          v16 = (v16 + 1) & v20;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v11 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          if ((v18 & (1 << v16)) == 0)
            goto LABEL_10;
        }
        sub_2400800C8((uint64_t)v4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        sub_2400800C8((uint64_t)v7, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        v21 = v26;
      }
      else
      {
LABEL_10:
        v21 = v26;
        *(_QWORD *)(v11 + 8 * v17) = v19 | v18;
        result = sub_2400A0E74((uint64_t)v7, *(_QWORD *)(v9 + 48) + v16 * v13, type metadata accessor for DKPersonGroupFilter.StampedPerson);
        v23 = *(_QWORD *)(v9 + 16);
        v24 = __OFADD__(v23, 1);
        v25 = v23 + 1;
        if (v24)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v9 + 16) = v25;
      }
      if (++v10 == v21)
        return v9;
    }
  }
  return MEMORY[0x24BEE4B08];
}

uint64_t sub_2400FBDA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC700);
    v3 = sub_240154B20();
    v4 = 0;
    v5 = v3 + 56;
    v6 = a1 + 32;
    v7 = ~(-1 << *(_BYTE *)(v3 + 32));
    while (1)
    {
      v8 = *(_QWORD *)(v6 + 8 * v4);
      result = sub_240154FDC();
      v10 = result & v7;
      v11 = (result & (unint64_t)v7) >> 6;
      v12 = *(_QWORD *)(v5 + 8 * v11);
      v13 = 1 << (result & v7);
      v14 = *(_QWORD *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(_QWORD *)(v14 + 8 * v10) != v8)
        {
          v10 = (v10 + 1) & v7;
          v11 = v10 >> 6;
          v12 = *(_QWORD *)(v5 + 8 * (v10 >> 6));
          v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0)
            goto LABEL_7;
        }
      }
      else
      {
LABEL_7:
        *(_QWORD *)(v5 + 8 * v11) = v13 | v12;
        *(_QWORD *)(v14 + 8 * v10) = v8;
        v15 = *(_QWORD *)(v3 + 16);
        v16 = __OFADD__(v15, 1);
        v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(_QWORD *)(v3 + 16) = v17;
      }
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x24BEE4B08];
}

_QWORD *sub_2400FBEB4(_QWORD *a1)
{
  _QWORD *v1;

  v1[2] = a1[2];
  v1[3] = a1[3];
  v1[4] = a1[4];
  v1[5] = a1[5];
  v1[6] = a1[6];
  v1[7] = a1[7];
  return v1;
}

uint64_t type metadata accessor for DKPersonGroup(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBC3F8);
}

unint64_t sub_2400FBF00()
{
  unint64_t result;

  result = qword_256FBC1C8;
  if (!qword_256FBC1C8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D6DC, &type metadata for DKPersonGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC1C8);
  }
  return result;
}

uint64_t sub_2400FBF44(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FBC1D0);
    v10 = sub_2400707A8(a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], a3);
    result = MEMORY[0x24267E0BC](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DKPersonGroupFilter.StampedPerson(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBC600);
}

uint64_t type metadata accessor for DKPersonGroupFilter.Track(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBC690);
}

unint64_t sub_2400FBFF0()
{
  unint64_t result;

  result = qword_256FBC1F8;
  if (!qword_256FBC1F8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D68C, &type metadata for DKPersonGroupFilter.Track.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC1F8);
  }
  return result;
}

BOOL sub_2400FC034(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_2400F2FC4(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_2400FC050()
{
  return sub_2400707A8(&qword_256FBC228, type metadata accessor for DKPersonGroup, (uint64_t)&protocol conformance descriptor for DKPersonGroup);
}

uint64_t sub_2400FC07C()
{
  return sub_2400707A8(&qword_256FBC230, type metadata accessor for DKPersonGroupFilter.StampedPerson, (uint64_t)&protocol conformance descriptor for DKPersonGroupFilter.StampedPerson);
}

uint64_t sub_2400FC0A8()
{
  return sub_2400707A8(&qword_256FBC238, type metadata accessor for DKPersonGroupFilter.Track, (uint64_t)&protocol conformance descriptor for DKPersonGroupFilter.Track);
}

double sub_2400FC0D4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 16);
  *a2 = result;
  return result;
}

double sub_2400FC0E4(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 16) = *a1;
  return result;
}

double sub_2400FC0F4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 24);
  *a2 = result;
  return result;
}

double sub_2400FC104(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 24) = *a1;
  return result;
}

double sub_2400FC114@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 32);
  *a2 = result;
  return result;
}

double sub_2400FC124(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 32) = *a1;
  return result;
}

double sub_2400FC134@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 40);
  *a2 = result;
  return result;
}

double sub_2400FC144(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 40) = *a1;
  return result;
}

double sub_2400FC154@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 48);
  *a2 = result;
  return result;
}

double sub_2400FC164(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 48) = *a1;
  return result;
}

double sub_2400FC174@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 56);
  *a2 = result;
  return result;
}

double sub_2400FC184(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 56) = *a1;
  return result;
}

uint64_t type metadata accessor for DKPersonGroupConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKPersonGroupConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.groupTimeout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.groupTimeout.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.groupTimeout.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityAlpha.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityAlpha.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityAlpha.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityBeta.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityBeta.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.updateProbabilityBeta.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialLowConfidence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialLowConfidence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialLowConfidence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialHighConfidence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialHighConfidence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.initialHighConfidence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.associationCostThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.associationCostThreshold.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.associationCostThreshold.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t dispatch thunk of DKPersonGroupConfiguration.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DKPersonGroup(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a3[6];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240154310();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    v12 = (char *)v4 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_24015434C();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    if (v16(v13, 1, v14))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    v19 = a3[8];
    v20 = (char *)v4 + v19;
    v21 = (char *)a2 + v19;
    if (v16((char *)a2 + v19, 1, v14))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v20, v21, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v20, 0, 1, v14);
    }
    v23 = a3[9];
    v24 = (char *)v4 + v23;
    v25 = (char *)a2 + v23;
    if (v16((char *)a2 + v23, 1, v14))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v24, v25, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v14);
    }
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for DKPersonGroup(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  v4 = a1 + a2[6];
  v5 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[7];
  v7 = sub_24015434C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = a1 + a2[8];
  if (!v9(v10, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  v11 = a1 + a2[9];
  if (!v9(v11, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for DKPersonGroup(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  *a1 = *(_OWORD *)a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_240154310();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = &a2[v10];
  v13 = sub_24015434C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = &a2[v17];
  if (v15(&a2[v17], 1, v13))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v18, v19, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  v21 = a3[9];
  v22 = (char *)a1 + v21;
  v23 = &a2[v21];
  if (v15(&a2[v21], 1, v13))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v22, v23, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
  }
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for DKPersonGroup(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_240154310();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = sub_24015434C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
LABEL_7:
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = (char *)a2 + v19;
  v22 = v15(&a1[v19], 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v20, v21, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v20, v21, v13);
LABEL_13:
  v25 = a3[9];
  v26 = &a1[v25];
  v27 = (char *)a2 + v25;
  v28 = v15(&a1[v25], 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v26, v27, v13);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v26, v27, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
LABEL_19:
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for DKPersonGroup(_OWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  *a1 = *(_OWORD *)a2;
  v6 = a3[6];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_240154310();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  v11 = (char *)a1 + v10;
  v12 = &a2[v10];
  v13 = sub_24015434C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  v17 = a3[8];
  v18 = (char *)a1 + v17;
  v19 = &a2[v17];
  if (v15(&a2[v17], 1, v13))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v19, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v18, 0, 1, v13);
  }
  v21 = a3[9];
  v22 = (char *)a1 + v21;
  v23 = &a2[v21];
  if (v15(&a2[v21], 1, v13))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v22, v23, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v22, 0, 1, v13);
  }
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)&a2[a3[10]];
  return a1;
}

char *assignWithTake for DKPersonGroup(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  v6 = a3[6];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_240154310();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = sub_24015434C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = a3[8];
  v20 = &a1[v19];
  v21 = (char *)a2 + v19;
  v22 = v15(&a1[v19], 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v21, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v20, v21, v13);
LABEL_13:
  v25 = a3[9];
  v26 = &a1[v25];
  v27 = (char *)a2 + v25;
  v28 = v15(&a1[v25], 1, v13);
  v29 = v15(v27, 1, v13);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v26, v27, v13);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
    goto LABEL_18;
  }
  if (v29)
  {
LABEL_18:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v26, v27, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
LABEL_19:
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPersonGroup()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2400FCF20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v12 = *(_QWORD *)(a1 + a3[10]);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

uint64_t storeEnumTagSinglePayload for DKPersonGroup()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2400FCFD4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  v8 = sub_240154310();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[6];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[7];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
  }
  *(_QWORD *)(a1 + a4[10]) = (a2 - 1);
  return result;
}

void sub_2400FD078()
{
  unint64_t v0;
  unint64_t v1;

  sub_240154310();
  if (v0 <= 0x3F)
  {
    sub_2400FD11C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_2400FD11C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256FB69D8)
  {
    sub_24015434C();
    v0 = sub_240154A30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256FB69D8);
  }
}

uint64_t type metadata accessor for DKPersonGroupFilter()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKPersonGroupFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKPersonGroupFilter.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of DKPersonGroupFilter.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonGroupFilter.updateGroups(time:faceTracks:bodyTracks:handTracks:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKPersonGroupFilter.getDetectedGroups(faceTracks:bodyTracks:handTracks:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DKPersonGroupFilter.StampedPerson(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_240154310();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_24015434C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_24015434C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t initializeWithTake for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for DKPersonGroupFilter.StampedPerson(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPersonGroupFilter.StampedPerson()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2400FD4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;

  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    v8 = sub_24015434C();
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for DKPersonGroupFilter.StampedPerson()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2400FD548(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v8 = sub_240154310();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v10 = sub_24015434C();
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_2400FD5C4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = sub_24015434C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for DKPersonGroupFilter.Track(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_24015434C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t destroy for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_24015434C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithCopy for DKPersonGroupFilter.Track(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t initializeWithTake for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for DKPersonGroupFilter.Track(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 24)) = *(_QWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPersonGroupFilter.Track()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2400FD938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = sub_24015434C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for DKPersonGroupFilter.Track()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2400FD984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = sub_24015434C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v5, a2, a2, v6);
}

uint64_t sub_2400FD9C8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24015434C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for DKPersonGroupFilter.State()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DKPersonGroupFilter.State(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DKPersonGroupFilter.State(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for DKPersonGroupFilter.State(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPersonGroupFilter.State(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKPersonGroupFilter.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKPersonGroupFilter.State()
{
  return &type metadata for DKPersonGroupFilter.State;
}

uint64_t storeEnumTagSinglePayload for DKPersonGroupFilter.Track.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2400FDC98 + 4 * byte_24015D1CC[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2400FDCCC + 4 * byte_24015D1C7[v4]))();
}

uint64_t sub_2400FDCCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400FDCD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400FDCDCLL);
  return result;
}

uint64_t sub_2400FDCE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400FDCF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2400FDCF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400FDCFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKPersonGroupFilter.Track.CodingKeys()
{
  return &type metadata for DKPersonGroupFilter.Track.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DKPersonGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2400FDD64 + 4 * byte_24015D1D6[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2400FDD98 + 4 * byte_24015D1D1[v4]))();
}

uint64_t sub_2400FDD98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400FDDA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400FDDA8);
  return result;
}

uint64_t sub_2400FDDB4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400FDDBCLL);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2400FDDC0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400FDDC8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKPersonGroup.CodingKeys()
{
  return &type metadata for DKPersonGroup.CodingKeys;
}

unint64_t sub_2400FDDE8()
{
  unint64_t result;

  result = qword_256FBC6D0;
  if (!qword_256FBC6D0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D5AC, &type metadata for DKPersonGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC6D0);
  }
  return result;
}

unint64_t sub_2400FDE30()
{
  unint64_t result;

  result = qword_256FBC6D8;
  if (!qword_256FBC6D8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D664, &type metadata for DKPersonGroupFilter.Track.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC6D8);
  }
  return result;
}

unint64_t sub_2400FDE78()
{
  unint64_t result;

  result = qword_256FBC6E0;
  if (!qword_256FBC6E0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D5D4, &type metadata for DKPersonGroupFilter.Track.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC6E0);
  }
  return result;
}

unint64_t sub_2400FDEC0()
{
  unint64_t result;

  result = qword_256FBC6E8;
  if (!qword_256FBC6E8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D5FC, &type metadata for DKPersonGroupFilter.Track.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC6E8);
  }
  return result;
}

unint64_t sub_2400FDF08()
{
  unint64_t result;

  result = qword_256FBC6F0;
  if (!qword_256FBC6F0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D51C, &type metadata for DKPersonGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC6F0);
  }
  return result;
}

unint64_t sub_2400FDF50()
{
  unint64_t result;

  result = qword_256FBC6F8;
  if (!qword_256FBC6F8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015D544, &type metadata for DKPersonGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBC6F8);
  }
  return result;
}

uint64_t sub_2400FDF94(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x644970756F7267 && a2 == 0xE700000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656469666E6F63 && a2 == 0xEA00000000006563 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x55556E6F73726570 && a2 == 0xEA00000000004449 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4449555565636166 && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4449555579646F62 && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x44495555646E6168 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

uint64_t sub_2400FE2B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756F72477473616CLL && a2 == 0xEB00000000644970;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469746E656469 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t DKLockActor.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  swift_defaultActor_initialize();
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 112) = 1;
  *(_QWORD *)(v0 + 120) = v1;
  return v0;
}

uint64_t sub_2400FE45C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore11DKLockActor19ContinuationWrapper_continuation;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC748);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t DKLockActor.init()()
{
  uint64_t v0;
  uint64_t v1;

  swift_defaultActor_initialize();
  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 112) = 1;
  *(_QWORD *)(v0 + 120) = v1;
  return v0;
}

uint64_t sub_2400FE4DC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_240154310();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  return swift_task_switch();
}

void sub_2400FE54C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  _QWORD *v5;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      sub_2401542F8();
      sub_2400FE7EC();
      v5 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 56) = v5;
      *v5 = v0;
      v5[1] = sub_2400FE62C;
      sub_240154ED4();
    }
    else
    {
      swift_task_dealloc();
      swift_task_dealloc();
      (*(void (**)(void))(v0 + 8))();
    }
  }
}

uint64_t sub_2400FE62C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2400FE684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_log_type_t v13;
  unint64_t v15;
  unint64_t v16;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v0 + 32);
  sub_2401542F8();
  sub_24015428C();
  v5 = v4;
  v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v6(v1, v2);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 24);
  if (v5 > 0.05)
  {
    sub_240154B38();
    swift_bridgeObjectRelease();
    v15 = 0xD000000000000016;
    v16 = 0x80000002401643C0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6070);
    v9 = swift_allocObject();
    v10 = MEMORY[0x24BEE13C8];
    *(_OWORD *)(v9 + 16) = xmmword_240156510;
    v11 = MEMORY[0x24BEE1448];
    *(_QWORD *)(v9 + 56) = v10;
    *(_QWORD *)(v9 + 64) = v11;
    *(double *)(v9 + 32) = v5;
    sub_240154670();
    sub_2401546D0();
    swift_bridgeObjectRelease();
    v12 = v15;
    LOBYTE(v15) = 0;
    v13 = sub_240154964();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v15, v12, v16, v13);
    swift_bridgeObjectRelease();
  }
  v6(v7, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_2400FE7EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FBC730[0];
  if (!qword_256FBC730[0])
  {
    v1 = type metadata accessor for DKLockActor();
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKLockActor, v1);
    atomic_store(result, qword_256FBC730);
  }
  return result;
}

uint64_t type metadata accessor for DKLockActor()
{
  return objc_opt_self();
}

uint64_t sub_2400FE850(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC748);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  type metadata accessor for DKLockActor.ContinuationWrapper();
  v8 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v8 + OBJC_IVAR____TtCC23IntelligentTrackingCore11DKLockActor19ContinuationWrapper_continuation, v7, v4);
  v9 = swift_retain();
  MEMORY[0x24267D0CC](v9);
  if (*(_QWORD *)((*(_QWORD *)(a2 + 120) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 120) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_2401547D8();
  sub_240154814();
  sub_2401547B4();
  return swift_release();
}

uint64_t sub_2400FE95C(uint64_t a1)
{
  uint64_t v1;

  return sub_2400FE850(a1, v1);
}

uint64_t sub_2400FE964(unint64_t a1)
{
  unint64_t *v1;
  unint64_t v3;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v3 = *v1;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v3 & 0x8000000000000000) != 0
    || (v3 & 0x4000000000000000) != 0)
  {
    sub_24014CDF4(v3);
  }
  v5 = v3 & 0xFFFFFFFFFFFFFF8;
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    v7 = v6 - 1;
    v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      v9 = v5 + 8 * a1;
      v10 = *(_QWORD *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(_QWORD *)(v5 + 16) = v7;
      sub_2401547B4();
      return v10;
    }
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400FEA44(double a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  return swift_task_switch();
}

void sub_2400FEA60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 112);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v4;
    if (v4 < 0)
    {
      v5 = *(_QWORD *)(v0 + 24);
      v6 = *(_QWORD *)(v0 + 16);
      sub_2400FE7EC();
      v7 = swift_task_alloc();
      *(_QWORD *)(v0 + 32) = v7;
      *(_QWORD *)(v7 + 16) = v5;
      *(_QWORD *)(v7 + 24) = v6;
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 40) = v8;
      *v8 = v0;
      v8[1] = sub_2400FEB64;
      sub_240154ED4();
    }
    else
    {
      (*(void (**)(uint64_t))(v0 + 8))(1);
    }
  }
}

uint64_t sub_2400FEB64()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2400FEBC4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 48));
}

uint64_t sub_2400FEBD0(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBCAA8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC748);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16))(v13, a1, v9, v11);
  type metadata accessor for DKLockActor.ContinuationWrapper();
  v14 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v14 + OBJC_IVAR____TtCC23IntelligentTrackingCore11DKLockActor19ContinuationWrapper_continuation, v13, v9);
  v15 = swift_retain();
  MEMORY[0x24267D0CC](v15);
  if (*(_QWORD *)((*(_QWORD *)(a2 + 120) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*(_QWORD *)(a2 + 120) & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
    sub_2401547D8();
  sub_240154814();
  sub_2401547B4();
  v16 = sub_2401548A4();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v8, 1, 1, v16);
  v17 = sub_2400FE7EC();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = a2;
  *(_QWORD *)(v18 + 24) = v17;
  *(double *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a2;
  *(_QWORD *)(v18 + 48) = v14;
  swift_retain_n();
  sub_2400FEF94((uint64_t)v8, (uint64_t)&unk_256FBCAB8, v18);
  return swift_release();
}

uint64_t sub_2400FED94(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;

  *(_QWORD *)(v6 + 24) = a5;
  *(_QWORD *)(v6 + 32) = a6;
  *(double *)(v6 + 16) = a1;
  return swift_task_switch();
}

void sub_2400FEDB0()
{
  uint64_t v0;
  double v1;
  _QWORD *v2;

  v1 = *(double *)(v0 + 16);
  if ((~*(_QWORD *)&v1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v1 <= -1.0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v1 >= 1.84467441e19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (is_mul_ok((unint64_t)v1, 0x3B9ACA00uLL))
  {
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 40) = v2;
    *v2 = v0;
    v2[1] = sub_2400FEE58;
    sub_2401548B0();
    return;
  }
LABEL_9:
  __break(1u);
}

uint64_t sub_2400FEE58()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 48) = v0;
  swift_task_dealloc();
  if (v0)
    return (*(uint64_t (**)(void))(v2 + 8))();
  else
    return swift_task_switch();
}

uint64_t sub_2400FEEC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 32);
  swift_retain();
  v2 = swift_bridgeObjectRetain();
  v3 = sub_2400FFDFC(v2, v1);
  v5 = v4;
  swift_release();
  result = swift_bridgeObjectRelease();
  if ((v5 & 1) != 0)
    return (*(uint64_t (**)(void))(v0 + 8))();
  v7 = *(_QWORD *)(v0 + 24);
  v8 = *(_QWORD *)(v7 + 112);
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (!v9)
  {
    *(_QWORD *)(v7 + 112) = v10;
    sub_2400FE964(v3);
    swift_release();
    *(_BYTE *)(v0 + 56) = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC748);
    sub_240154868();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  __break(1u);
  return result;
}

uint64_t sub_2400FEF94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  v5 = sub_2401548A4();
  v6 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_240154898();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(_QWORD *)(a3 + 16))
      return swift_task_create();
    goto LABEL_3;
  }
  sub_240100A94(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24015485C();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_2400FF0C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2400FF0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 112);
  if (v2 >= 1)
    *(_QWORD *)(v1 + 112) = v2 - 1;
  return (*(uint64_t (**)(BOOL))(v0 + 8))(v2 > 0);
}

void sub_2400FF0FC()
{
  uint64_t *v0;
  uint64_t v1;
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0[14];
  v2 = __OFADD__(v1, 1);
  v3 = v1 + 1;
  if (v2)
  {
    __break(1u);
  }
  else
  {
    v5 = v0[15];
    v0 += 15;
    v4 = v5;
    *(v0 - 1) = v3;
    if (!(v5 >> 62))
    {
      if (!*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
        return;
LABEL_4:
      v6 = *v0;
      if ((unint64_t)*v0 >> 62)
      {
        swift_bridgeObjectRetain();
        v8 = sub_240154D30();
        swift_bridgeObjectRelease();
        if (v8)
        {
LABEL_6:
          v6 = *v0;
          if (!((unint64_t)*v0 >> 62))
          {
            if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_8;
            goto LABEL_21;
          }
LABEL_20:
          swift_bridgeObjectRetain();
          v9 = sub_240154D30();
          swift_bridgeObjectRelease();
          if (v9)
          {
LABEL_8:
            if ((v6 & 0xC000000000000001) == 0)
            {
              if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
                goto LABEL_24;
              }
              swift_retain();
LABEL_11:
              if (!((unint64_t)*v0 >> 62))
              {
                if (*(_QWORD *)((*v0 & 0xFFFFFFFFFFFFF8) + 0x10))
                {
LABEL_13:
                  sub_240079FB8(0, 1);
                  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC748);
                  sub_240154868();
                  swift_release();
                  return;
                }
LABEL_25:
                __break(1u);
                return;
              }
LABEL_24:
              swift_bridgeObjectRetain();
              v10 = sub_240154D30();
              swift_bridgeObjectRelease();
              if (v10)
                goto LABEL_13;
              goto LABEL_25;
            }
LABEL_22:
            MEMORY[0x24267D4E0](0, v6);
            goto LABEL_11;
          }
LABEL_21:
          __break(1u);
          goto LABEL_22;
        }
      }
      else if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_6;
      }
      __break(1u);
      goto LABEL_20;
    }
  }
  swift_bridgeObjectRetain();
  v7 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (v7)
    goto LABEL_4;
}

uint64_t DKLockActor.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t DKLockActor.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

uint64_t DKLockActor.unownedExecutor.getter()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2400FF324@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 88));
}

uint64_t sub_2400FF340(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 40))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), a1);
}

uint64_t sub_2400FF35C()
{
  uint64_t v0;

  return v0;
}

uint64_t DKLockProtected.__allocating_init(_:)(uint64_t a1)
{
  return sub_2400FF744(a1, (void (*)(uint64_t))DKLockProtected.init(_:));
}

uint64_t *DKLockProtected.init(_:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 96);
  *(uint64_t *)((char *)v1 + v4) = (uint64_t)objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 80) - 8) + 32))((uint64_t)v1 + *(_QWORD *)(*v1 + 88), a1);
  return v1;
}

id sub_2400FF3E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  objc_msgSend(*(id *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96)), sel_lock);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 88));
  return objc_msgSend(*(id *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96)), sel_unlock);
}

id sub_2400FF444(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void **)(v1 + *(_QWORD *)(v8 + 96));
  objc_msgSend(v9, sel_lock, v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 40))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 88), v7);
  return objc_msgSend(v9, sel_unlock);
}

uint64_t DKLockProtected.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));

  return v0;
}

uint64_t DKLockProtected.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 88));

  return swift_deallocClassInstance();
}

uint64_t sub_2400FF584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = sub_240154A30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2400FF5CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 96);
  v4 = sub_240154A30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

id sub_2400FF614()
{
  uint64_t v0;
  id v1;

  v1 = objc_msgSend(*(id *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104)), sel_tryLock);
  if ((_DWORD)v1)
    objc_msgSend(*(id *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104)), sel_unlock);
  return v1;
}

uint64_t DKLazy.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  DKLazy.init(_:)(a1, a2);
  return v4;
}

char *DKLazy.init(_:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_QWORD *)v2;
  *((_QWORD *)v2 + 2) = 0;
  *((_QWORD *)v2 + 3) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 56))(&v2[*(_QWORD *)(v5 + 96)], 1, 1);
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  *(_QWORD *)&v2[v6] = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v7 = *((_QWORD *)v2 + 2);
  *((_QWORD *)v2 + 2) = a1;
  *((_QWORD *)v2 + 3) = a2;
  sub_240071094(v7);
  return v2;
}

uint64_t DKLazy.__allocating_init(wrappedValue:)(uint64_t a1)
{
  return sub_2400FF744(a1, (void (*)(uint64_t))DKLazy.init(wrappedValue:));
}

uint64_t sub_2400FF744(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  a2(a1);
  return v4;
}

_QWORD *DKLazy.init(wrappedValue:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  v3 = *v1;
  v1[2] = 0;
  v1[3] = 0;
  v4 = (char *)v1 + *(_QWORD *)(v3 + 96);
  v5 = *(_QWORD *)(v3 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v7(v4, 1, 1, v5);
  v8 = *(_QWORD *)(*v1 + 104);
  *(_QWORD *)((char *)v1 + v8) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v9 = sub_240154A30();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v4, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(v4, a1, v5);
  v7(v4, 0, 1, v5);
  return v1;
}

id sub_2400FF860@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(char *, uint64_t, uint64_t);
  id result;
  void (*v22)(uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = sub_240154A30();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v28 - v11;
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v28 - v15;
  objc_msgSend(*(id *)((char *)v2 + *(_QWORD *)(v4 + 104)), sel_lock, v14);
  v17 = (char *)v2 + *(_QWORD *)(*v2 + 96);
  v18 = sub_240154A30();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  v19 = *(_QWORD *)(v5 - 8);
  v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v16, 1, v5) != 1)
    goto LABEL_4;
  result = (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v16, v6);
  v22 = (void (*)(uint64_t))v2[2];
  if (v22)
  {
    v23 = swift_retain();
    v22(v23);
    sub_240071094((uint64_t)v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v5);
    v24 = (char *)v2 + *(_QWORD *)(*v2 + 96);
    v25 = sub_240154A30();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v24, v12, v25);
    v26 = (char *)v2 + *(_QWORD *)(*v2 + 96);
    v27 = sub_240154A30();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v9, v26, v27);
    result = (id)((uint64_t (*)(char *, uint64_t, uint64_t))v20)(v9, 1, v5);
    v16 = v9;
    if ((_DWORD)result != 1)
    {
LABEL_4:
      (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(a1, v16, v5);
      return objc_msgSend(*(id *)((char *)v2 + *(_QWORD *)(*v2 + 104)), sel_unlock);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t *DKLazy.deinit()
{
  uint64_t *v0;
  char *v1;
  uint64_t v2;

  sub_240071094(v0[2]);
  v1 = (char *)v0 + *(_QWORD *)(*v0 + 96);
  v2 = sub_240154A30();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t DKLazy.__deallocating_deinit()
{
  DKLazy.deinit();
  return swift_deallocClassInstance();
}

uint64_t DKThreadSafe.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;

  *a3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  v8 = (char *)a3 + *(int *)(type metadata accessor for DKThreadSafe(0, a2, v6, v7) + 28);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(v8, a1, a2);
}

id DKThreadSafe.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id *v2;

  objc_msgSend(*v2, sel_lock);
  (*(void (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, (char *)v2 + *(int *)(a1 + 28));
  return objc_msgSend(*v2, sel_unlock);
}

uint64_t DKThreadSafe.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_2400FFEF4(a1, a2);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(a1);
}

void (*DKThreadSafe.wrappedValue.modify(_QWORD *a1, uint64_t a2))(void **a1, char a2)
{
  id *v2;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  char *v10;
  void (*v11)(void *, char *, uint64_t);

  v5 = malloc(0x38uLL);
  *a1 = v5;
  *v5 = a2;
  v5[1] = v2;
  v6 = *(_QWORD *)(a2 + 16);
  v5[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v5[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v5[4] = malloc(v8);
  v9 = malloc(v8);
  v5[5] = v9;
  objc_msgSend(*v2, sel_lock);
  v10 = (char *)v2 + *(int *)(a2 + 28);
  v11 = *(void (**)(void *, char *, uint64_t))(v7 + 16);
  v5[6] = v11;
  v11(v9, v10, v6);
  objc_msgSend(*v2, sel_unlock);
  return sub_2400FFCD8;
}

void sub_2400FFCD8(void **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  void (*v9)(void *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;

  v2 = (uint64_t *)*a1;
  if ((a2 & 1) != 0)
  {
    v3 = (void *)v2[5];
    v5 = v2[3];
    v4 = (void *)v2[4];
    v7 = (id *)v2[1];
    v6 = v2[2];
    v8 = *v2;
    ((void (*)(void *, void *, uint64_t))v2[6])(v4, v3, v6);
    objc_msgSend(*v7, sel_lock);
    (*(void (**)(char *, void *, uint64_t))(v5 + 24))((char *)v7 + *(int *)(v8 + 28), v4, v6);
    objc_msgSend(*v7, sel_unlock);
    v9 = *(void (**)(void *, uint64_t))(v5 + 8);
    v9(v4, v6);
    v9(v3, v6);
  }
  else
  {
    v4 = (void *)v2[4];
    v3 = (void *)v2[5];
    v10 = v2[2];
    v11 = v2[3];
    v13 = *v2;
    v12 = (id *)v2[1];
    objc_msgSend(*v12, sel_lock);
    (*(void (**)(char *, void *, uint64_t))(v11 + 24))((char *)v12 + *(int *)(v13 + 28), v3, v10);
    objc_msgSend(*v12, sel_unlock);
    (*(void (**)(void *, uint64_t))(v11 + 8))(v3, v10);
  }
  free(v3);
  free(v4);
  free(v2);
}

uint64_t sub_2400FFDF0(uint64_t a1)
{
  uint64_t v1;

  return sub_2400FEBD0(a1, *(_QWORD *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_2400FFDFC(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a1 >> 62)
    goto LABEL_13;
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    v5 = 0;
    while (1)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x24267D4E0](v5, a1);
        swift_unknownObjectRelease();
        if (v6 == a2)
          return v5;
      }
      else if (*(_QWORD *)(a1 + 8 * v5 + 32) == a2)
      {
        return v5;
      }
      if (__OFADD__(v5, 1))
        break;
      if (++v5 == v4)
        return 0;
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
    v4 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t type metadata accessor for DKThreadSafe(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DKThreadSafe);
}

id sub_2400FFEF4(uint64_t a1, uint64_t a2)
{
  id *v2;

  objc_msgSend(*v2, sel_lock);
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 24))((char *)v2 + *(int *)(a2 + 28), a1);
  return objc_msgSend(*v2, sel_unlock);
}

id sub_2400FFF54@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for DKThreadSafe(0, *(_QWORD *)(a2 + a1 - 8), a2, a3);
  return DKThreadSafe.wrappedValue.getter(v5, a4);
}

id sub_2400FFF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;

  v5 = type metadata accessor for DKThreadSafe(0, *(_QWORD *)(a4 + a3 - 8), a3, a4);
  return sub_2400FFEF4(a1, v5);
}

uint64_t sub_2400FFFC8()
{
  return 8;
}

_QWORD *sub_2400FFFD4(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t method lookup function for DKLockActor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKLockActor.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DKLockActor.lock()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 160) + *(_QWORD *)(*(_QWORD *)v0 + 160));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_24008670C;
  return v4();
}

uint64_t dispatch thunk of DKLockActor.lock(timeout:)(double a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(double);

  v6 = (uint64_t (*)(double))(**(int **)(*(_QWORD *)v1 + 176) + *(_QWORD *)(*(_QWORD *)v1 + 176));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086C6C;
  return v6(a1);
}

uint64_t dispatch thunk of DKLockActor.lockIfAvailable()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 184) + *(_QWORD *)(*(_QWORD *)v0 + 184));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240086AD4;
  return v4();
}

uint64_t dispatch thunk of DKLockActor.unlock()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t sub_240100118()
{
  return type metadata accessor for DKLockActor.ContinuationWrapper();
}

uint64_t type metadata accessor for DKLockActor.ContinuationWrapper()
{
  uint64_t result;

  result = qword_256FBC898;
  if (!qword_256FBC898)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24010015C()
{
  unint64_t v0;

  sub_2401001C8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_2401001C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256FBC8A8[0])
  {
    v0 = sub_240154874();
    if (!v1)
      atomic_store(v0, qword_256FBC8A8);
  }
}

uint64_t sub_24010022C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DKLockProtected(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DKLockProtected);
}

uint64_t method lookup function for DKLockProtected()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKLockProtected.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t dispatch thunk of DKLockProtected.get()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKLockProtected.set(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t sub_2401002E0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154A30();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for DKLazy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DKLazy);
}

uint64_t method lookup function for DKLazy()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKLazy.projectedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKLazy.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of DKLazy.__allocating_init(wrappedValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DKLazy.wrappedValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_2401003A8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2401003B0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_24010042C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  char *v9;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  char *v15;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 8) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain();
  }
  else
  {
    v12 = ((unint64_t)a1 + v6 + 8) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 8) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v15 = v9;
    v14(v12, v13, v4);
  }
  return a1;
}

uint64_t sub_2401004E8(id *a1, uint64_t a2)
{

  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))(((unint64_t)a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
}

void **sub_24010052C(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  id v11;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v11 = v4;
  v10(v8, v9, v5);
  return a1;
}

void **sub_24010059C(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

_QWORD *sub_240100608(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void **sub_240100658(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2401006C0(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  char v10;
  int v11;
  unsigned int v13;
  int v14;
  uint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(unsigned __int8 *)(v4 + 80);
  v8 = a2 - v6;
  if (a2 <= v6)
    goto LABEL_22;
  v9 = ((v7 + 8) & ~v7) + *(_QWORD *)(v4 + 64);
  v10 = 8 * v9;
  if (v9 <= 3)
  {
    v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11)
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(_WORD *)((char *)a1 + v9))
        goto LABEL_22;
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_22:
      if ((v5 & 0x80000000) != 0)
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v7 + 8) & ~v7);
      v15 = *a1;
      if (*a1 >= 0xFFFFFFFFuLL)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
  }
  v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((_BYTE *)a1 + v9))
    goto LABEL_22;
LABEL_15:
  v14 = (v11 - 1) << v10;
  if (v9 > 3)
    v14 = 0;
  if (!(_DWORD)v9)
    return v6 + v14 + 1;
  if (v9 > 3)
    LODWORD(v9) = 4;
  return ((uint64_t (*)(void))((char *)&loc_240100794 + 4 * byte_24015D740[(v9 - 1)]))();
}

void sub_240100804(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  unsigned int v10;
  int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((*(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)) + *(_QWORD *)(v5 + 64);
  if (a3 > v6)
  {
    if (v7 <= 3)
    {
      v10 = ((a3 - v6 + ~(-1 << (8 * v7))) >> (8 * v7)) + 1;
      if (HIWORD(v10))
      {
        v8 = 4u;
      }
      else if (v10 >= 0x100)
      {
        v8 = 2;
      }
      else
      {
        v8 = v10 > 1;
      }
    }
    else
    {
      v8 = 1u;
    }
  }
  else
  {
    v8 = 0;
  }
  if (v6 < a2)
  {
    v9 = ~v6 + a2;
    if (v7 < 4)
    {
      if ((_DWORD)v7)
      {
        v11 = v9 & ~(-1 << (8 * v7));
        bzero(a1, v7);
        if ((_DWORD)v7 == 3)
        {
          *a1 = v11;
          *((_BYTE *)a1 + 2) = BYTE2(v11);
        }
        else if ((_DWORD)v7 == 2)
        {
          *a1 = v11;
        }
        else
        {
          *(_BYTE *)a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v7);
      *(_DWORD *)a1 = v9;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_2401009F8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_240100A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = swift_task_alloc();
  v4 = *(_OWORD *)(v0 + 40);
  *(_QWORD *)(v1 + 16) = v3;
  *(_QWORD *)v3 = v1;
  *(_QWORD *)(v3 + 8) = sub_24008670C;
  *(_OWORD *)(v3 + 24) = v4;
  *(_QWORD *)(v3 + 16) = v2;
  return swift_task_switch();
}

uint64_t sub_240100A94(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBCAA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DKFaceTrackerConfiguration.__allocating_init()()
{
  *(_OWORD *)(swift_allocObject() + 176) = xmmword_2401572E0;
  return DKTrackerConfiguration.init()();
}

uint64_t DKFaceTracker.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_allocObject();
  return DKFaceTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_240100B88(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, uint64_t))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v5 = v3;
  v6 = v3 + qword_256FC48A0;
  v7 = swift_retain();
  MEMORY[0x24267D0CC](v7);
  if (*(_QWORD *)(*(_QWORD *)v6 + 16) >= *(_QWORD *)(*(_QWORD *)v6 + 24) >> 1)
LABEL_8:
    sub_2401547D8();
  sub_240154814();
  result = sub_2401547B4();
  v9 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  v10 = qword_256FC4888;
  while (*(_QWORD *)(*(_QWORD *)(v5 + v10) + 72) < v9)
  {
    if (!v9)
    {
      __break(1u);
      goto LABEL_8;
    }
    result = a3(0, 1);
    v9 = *(_QWORD *)(*(_QWORD *)v6 + 16);
  }
  return result;
}

uint64_t sub_240100C54(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  _QWORD *v13;

  v2 = v1;
  v4 = a1[2];
  swift_retain();
  if (v4)
    v5 = a1;
  else
    v5 = &unk_251062078;
  sub_24008FBE4((uint64_t)v5);
  swift_release();
  swift_retain();
  sub_2400B5B8C();
  v7 = v6;
  v9 = v8;
  v11 = v10;
  result = swift_release();
  if ((v11 & 1) == 0)
  {
    v13 = (_QWORD *)(v2 + qword_256FC4868);
    *v13 = v7;
    v13[1] = v9;
  }
  return result;
}

uint64_t sub_240100D0C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  _QWORD *v13;

  v2 = v1;
  v4 = a1[2];
  swift_retain();
  if (v4)
    v5 = a1;
  else
    v5 = &unk_2510620A8;
  sub_24008FBE4((uint64_t)v5);
  swift_release();
  swift_retain();
  sub_2400B5B8C();
  v7 = v6;
  v9 = v8;
  v11 = v10;
  result = swift_release();
  if ((v11 & 1) == 0)
  {
    v13 = (_QWORD *)(v2 + qword_256FC4868);
    *v13 = v7;
    v13[1] = v9;
  }
  return result;
}

uint64_t sub_240100DC4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  _QWORD *v13;

  v2 = v1;
  v4 = a1[2];
  swift_retain();
  if (v4)
    v5 = a1;
  else
    v5 = &unk_2510620D8;
  sub_24008FBE4((uint64_t)v5);
  swift_release();
  swift_retain();
  sub_2400B5B8C();
  v7 = v6;
  v9 = v8;
  v11 = v10;
  result = swift_release();
  if ((v11 & 1) == 0)
  {
    v13 = (_QWORD *)(v2 + qword_256FC4868);
    *v13 = v7;
    v13[1] = v9;
  }
  return result;
}

uint64_t sub_240100E7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;
  double v39;
  CGFloat v40;
  CGFloat v41;
  __int128 v42;
  CGFloat v43;
  CGFloat v44;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  __int128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  CGRect v51;

  v3 = v2;
  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)&v48 = v9;
    *(_BYTE *)(v3 + qword_256FC4898) = 1;
    v13 = a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect;
    v14 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    v15 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
    v16 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
    v17 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
    swift_retain();
    swift_retain();
    sub_240147D8C(v14, v15, v16, v17);
    swift_release();
    v18 = (_QWORD *)swift_bridgeObjectRetain();
    sub_240100C54(v18);
    swift_bridgeObjectRelease();
    v19 = v3 + qword_256FC4890;
    v49 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v49(v3 + qword_256FC4890, v6);
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v46(v19, a1, v6);
    v20 = *(_QWORD *)(*(_QWORD *)v3 + 200);
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + v20) = a2;
    v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
    v50 = a1;
    v22 = *(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId + 8);
    v23 = v3 + qword_256FC4858;
    v24 = type metadata accessor for DKPersonGroupFilter.Track(0);
    v25 = *(int *)(v24 + 20);
    v47 = v6;
    v26 = &v12[v25];
    v27 = sub_24015434C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v26, v23, v27);
    v28 = *(_QWORD *)(v3 + qword_256FC4868);
    *(_QWORD *)v12 = v21;
    v12[8] = v22;
    v29 = v50;
    *(_QWORD *)&v12[*(int *)(v24 + 24)] = v28;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 0, 1, v24);
    sub_24009C218((uint64_t)v12, v3 + *(_QWORD *)(*(_QWORD *)v3 + 232), &qword_256FB65E8);
    if (*(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8))
      v30 = -1;
    else
      v30 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
    *(_QWORD *)(v3 + qword_256FC4870) = v30;
    if (*(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 216)))
    {
      v31 = v48;
      v32 = v7;
      v33 = v47;
      v46(v48, v29, v47);
      type metadata accessor for DKSphericalMotionFilter.Measurement(0);
      v34 = swift_allocObject();
      v35 = v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
      v36 = v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v31, v33);
      v38 = *(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance + 8);
      *(_QWORD *)v36 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
      *(_BYTE *)(v36 + 8) = v38;
      if (*(_BYTE *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 224)) == 1)
      {
        v39 = *(double *)v13;
        *(_QWORD *)&v37 = *(_QWORD *)(v13 + 8);
        v48 = v37;
        v40 = *(double *)(v13 + 16);
        v41 = *(double *)(v13 + 24);
        swift_retain();
        v51.origin.x = v39;
        *(_QWORD *)&v51.origin.y = v48;
        v51.size.width = v40;
        v51.size.height = v41;
        *(double *)&v42 = 1.0 - v39 - CGRectGetWidth(v51);
        *((_QWORD *)&v42 + 1) = v48;
        v43 = v40;
        v44 = v41;
      }
      else
      {
        v48 = *(_OWORD *)v13;
        v43 = *(double *)(v13 + 16);
        v44 = *(double *)(v13 + 24);
        swift_retain();
        v42 = v48;
      }
      *(_OWORD *)v35 = v42;
      *(CGFloat *)(v35 + 16) = v43;
      *(CGFloat *)(v35 + 24) = v44;
      *(_BYTE *)(v35 + 32) = 0;
      sub_240115C48(v34);
      swift_setDeallocating();
      v49(v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v33);
      swift_deallocClassInstance();
      swift_release();
      v29 = v50;
    }
    swift_retain();
    sub_240100B88(v29, a2, sub_240079FD0);
    return swift_release_n();
  }
  else
  {
    *(_BYTE *)(v3 + qword_256FC4898) = 0;
    return sub_240100B88(a1, 0, sub_240079FD0);
  }
}

uint64_t sub_2401012F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;
  double v39;
  CGFloat v40;
  CGFloat v41;
  __int128 v42;
  CGFloat v43;
  CGFloat v44;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  __int128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  CGRect v51;

  v3 = v2;
  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)&v48 = v9;
    *(_BYTE *)(v3 + qword_256FC4898) = 1;
    v13 = a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect;
    v14 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
    v15 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
    v16 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
    v17 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
    swift_retain();
    swift_retain();
    sub_240147D8C(v14, v15, v16, v17);
    swift_release();
    v18 = (_QWORD *)swift_bridgeObjectRetain();
    sub_240100D0C(v18);
    swift_bridgeObjectRelease();
    v19 = v3 + qword_256FC4890;
    v49 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v49(v3 + qword_256FC4890, v6);
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v46(v19, a1, v6);
    v20 = *(_QWORD *)(*(_QWORD *)v3 + 200);
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + v20) = a2;
    v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
    v50 = a1;
    v22 = *(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId + 8);
    v23 = v3 + qword_256FC4858;
    v24 = type metadata accessor for DKPersonGroupFilter.Track(0);
    v25 = *(int *)(v24 + 20);
    v47 = v6;
    v26 = &v12[v25];
    v27 = sub_24015434C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v26, v23, v27);
    v28 = *(_QWORD *)(v3 + qword_256FC4868);
    *(_QWORD *)v12 = v21;
    v12[8] = v22;
    v29 = v50;
    *(_QWORD *)&v12[*(int *)(v24 + 24)] = v28;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 0, 1, v24);
    sub_24009C218((uint64_t)v12, v3 + *(_QWORD *)(*(_QWORD *)v3 + 232), &qword_256FB65E8);
    if (*(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8))
      v30 = -1;
    else
      v30 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
    *(_QWORD *)(v3 + qword_256FC4870) = v30;
    if (*(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 216)))
    {
      v31 = v48;
      v32 = v7;
      v33 = v47;
      v46(v48, v29, v47);
      type metadata accessor for DKSphericalMotionFilter.Measurement(0);
      v34 = swift_allocObject();
      v35 = v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
      v36 = v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v31, v33);
      v38 = *(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance + 8);
      *(_QWORD *)v36 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
      *(_BYTE *)(v36 + 8) = v38;
      if (*(_BYTE *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 224)) == 1)
      {
        v39 = *(double *)v13;
        *(_QWORD *)&v37 = *(_QWORD *)(v13 + 8);
        v48 = v37;
        v40 = *(double *)(v13 + 16);
        v41 = *(double *)(v13 + 24);
        swift_retain();
        v51.origin.x = v39;
        *(_QWORD *)&v51.origin.y = v48;
        v51.size.width = v40;
        v51.size.height = v41;
        *(double *)&v42 = 1.0 - v39 - CGRectGetWidth(v51);
        *((_QWORD *)&v42 + 1) = v48;
        v43 = v40;
        v44 = v41;
      }
      else
      {
        v48 = *(_OWORD *)v13;
        v43 = *(double *)(v13 + 16);
        v44 = *(double *)(v13 + 24);
        swift_retain();
        v42 = v48;
      }
      *(_OWORD *)v35 = v42;
      *(CGFloat *)(v35 + 16) = v43;
      *(CGFloat *)(v35 + 24) = v44;
      *(_BYTE *)(v35 + 32) = 0;
      sub_240115C48(v34);
      swift_setDeallocating();
      v49(v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v33);
      swift_deallocClassInstance();
      swift_release();
      v29 = v50;
    }
    swift_retain();
    sub_240100B88(v29, a2, sub_240079FDC);
    return swift_release_n();
  }
  else
  {
    *(_BYTE *)(v3 + qword_256FC4898) = 0;
    return sub_240100B88(a1, 0, sub_240079FDC);
  }
}

uint64_t sub_240101774(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;
  double v39;
  CGFloat v40;
  CGFloat v41;
  __int128 v42;
  CGFloat v43;
  CGFloat v44;
  void (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  __int128 v48;
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  CGRect v51;

  v3 = v2;
  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *(_QWORD *)&v48 = v9;
    *(_BYTE *)(v3 + qword_256FC4898) = 1;
    v13 = a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect;
    v14 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
    v15 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 8);
    v16 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 16);
    v17 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 24);
    swift_retain();
    swift_retain();
    sub_240147D8C(v14, v15, v16, v17);
    swift_release();
    v18 = (_QWORD *)swift_bridgeObjectRetain();
    sub_240100DC4(v18);
    swift_bridgeObjectRelease();
    v19 = v3 + qword_256FC4890;
    v49 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v49(v3 + qword_256FC4890, v6);
    v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v46(v19, a1, v6);
    v20 = *(_QWORD *)(*(_QWORD *)v3 + 200);
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + v20) = a2;
    v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
    v50 = a1;
    v22 = *(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId + 8);
    v23 = v3 + qword_256FC4858;
    v24 = type metadata accessor for DKPersonGroupFilter.Track(0);
    v25 = *(int *)(v24 + 20);
    v47 = v6;
    v26 = &v12[v25];
    v27 = sub_24015434C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v26, v23, v27);
    v28 = *(_QWORD *)(v3 + qword_256FC4868);
    *(_QWORD *)v12 = v21;
    v12[8] = v22;
    v29 = v50;
    *(_QWORD *)&v12[*(int *)(v24 + 24)] = v28;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v12, 0, 1, v24);
    sub_24009C218((uint64_t)v12, v3 + *(_QWORD *)(*(_QWORD *)v3 + 232), &qword_256FB65E8);
    if (*(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId + 8))
      v30 = -1;
    else
      v30 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
    *(_QWORD *)(v3 + qword_256FC4870) = v30;
    if (*(_QWORD *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 216)))
    {
      v31 = v48;
      v32 = v7;
      v33 = v47;
      v46(v48, v29, v47);
      type metadata accessor for DKSphericalMotionFilter.Measurement(0);
      v34 = swift_allocObject();
      v35 = v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
      v36 = v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v31, v33);
      v38 = *(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance + 8);
      *(_QWORD *)v36 = *(_QWORD *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance);
      *(_BYTE *)(v36 + 8) = v38;
      if (*(_BYTE *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 224)) == 1)
      {
        v39 = *(double *)v13;
        *(_QWORD *)&v37 = *(_QWORD *)(v13 + 8);
        v48 = v37;
        v40 = *(double *)(v13 + 16);
        v41 = *(double *)(v13 + 24);
        swift_retain();
        v51.origin.x = v39;
        *(_QWORD *)&v51.origin.y = v48;
        v51.size.width = v40;
        v51.size.height = v41;
        *(double *)&v42 = 1.0 - v39 - CGRectGetWidth(v51);
        *((_QWORD *)&v42 + 1) = v48;
        v43 = v40;
        v44 = v41;
      }
      else
      {
        v48 = *(_OWORD *)v13;
        v43 = *(double *)(v13 + 16);
        v44 = *(double *)(v13 + 24);
        swift_retain();
        v42 = v48;
      }
      *(_OWORD *)v35 = v42;
      *(CGFloat *)(v35 + 16) = v43;
      *(CGFloat *)(v35 + 24) = v44;
      *(_BYTE *)(v35 + 32) = 0;
      sub_240115C48(v34);
      swift_setDeallocating();
      v49(v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v33);
      swift_deallocClassInstance();
      swift_release();
      v29 = v50;
    }
    swift_retain();
    sub_240100B88(v29, a2, sub_240079FE8);
    return swift_release_n();
  }
  else
  {
    *(_BYTE *)(v3 + qword_256FC4898) = 0;
    return sub_240100B88(a1, 0, sub_240079FE8);
  }
}

double sub_240101BF0()
{
  uint64_t v0;

  return *(double *)(v0 + 176);
}

void sub_240101BF8(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 176) = a1;
}

uint64_t (*sub_240101C00())()
{
  return nullsub_1;
}

double sub_240101C10()
{
  uint64_t v0;

  return *(double *)(v0 + 184);
}

void sub_240101C18(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 184) = a1;
}

uint64_t (*sub_240101C20())()
{
  return nullsub_1;
}

uint64_t DKFaceTrackerConfiguration.init()()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 176) = xmmword_2401572E0;
  return DKTrackerConfiguration.init()();
}

void DKFaceTrackerConfiguration.__allocating_init(configuration:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DKFaceTrackerConfiguration.init(configuration:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t DKFaceTrackerConfiguration.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKFaceTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_240101CF8()
{
  return swift_retain();
}

uint64_t sub_240101D08(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_256FC4E20) = a1;
  return swift_release();
}

uint64_t (*sub_240101D20())()
{
  return nullsub_1;
}

uint64_t sub_240101D38()
{
  return swift_retain();
}

uint64_t sub_240101D48(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_256FC4E28) = a1;
  return swift_release();
}

uint64_t (*sub_240101D60())()
{
  return nullsub_1;
}

uint64_t sub_240101D78()
{
  return swift_retain();
}

uint64_t sub_240101D88(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_256FC4E30) = a1;
  return swift_release();
}

uint64_t (*sub_240101DA0())()
{
  return nullsub_1;
}

uint64_t DKFaceTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v55 = a6;
  v56 = a4;
  v57 = a5;
  v58 = a2;
  v53 = a1;
  v54 = a3;
  v7 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v7);
  v52 = (uint64_t)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_24015434C();
  v50 = *(_QWORD *)(v9 - 8);
  v51 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v49 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_240154310();
  v59 = *(_QWORD *)(v11 - 8);
  v12 = v59;
  MEMORY[0x24BDAC7A8](v11);
  v48 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v15 = MEMORY[0x24BDAC7A8](v14);
  v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a2 + 176);
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v12 + 56);
  v19(v17, 1, 1, v11, v15);
  type metadata accessor for DKSmoothingFilter();
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 33) = 0;
  *(_QWORD *)(v20 + 40) = 0;
  *(_QWORD *)(v20 + 48) = 0;
  *(_QWORD *)(v20 + 56) = 0x3FF0000000000000;
  v21 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v11);
  v22 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  v23 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  *(_BYTE *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v20 + 16) = v18;
  *(_QWORD *)(v20 + 24) = v18;
  *(_BYTE *)(v20 + 32) = 1;
  v24 = v60;
  swift_retain();
  sub_24009C218((uint64_t)v17, v21, &qword_256FB4CC8);
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  *(_QWORD *)(v24 + qword_256FC4E20) = v20;
  v25 = v58;
  v26 = *(_QWORD *)(v58 + 176);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v19)(v17, 1, 1, v11);
  v27 = swift_allocObject();
  *(_BYTE *)(v27 + 33) = 0;
  *(_QWORD *)(v27 + 40) = 0;
  *(_QWORD *)(v27 + 48) = 0;
  *(_QWORD *)(v27 + 56) = 0x3FF0000000000000;
  v28 = v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v11);
  v29 = v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  v30 = v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v30 = 0;
  *(_BYTE *)(v30 + 8) = 1;
  *(_BYTE *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v27 + 16) = v26;
  *(_QWORD *)(v27 + 24) = v26;
  *(_BYTE *)(v27 + 32) = 1;
  sub_24009C218((uint64_t)v17, v28, &qword_256FB4CC8);
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  *(_QWORD *)v30 = 0;
  *(_BYTE *)(v30 + 8) = 1;
  v31 = v60;
  *(_QWORD *)(v60 + qword_256FC4E28) = v27;
  v32 = *(_QWORD *)(v25 + 176);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v19)(v17, 1, 1, v11);
  v33 = swift_allocObject();
  *(_BYTE *)(v33 + 33) = 0;
  *(_QWORD *)(v33 + 40) = 0;
  *(_QWORD *)(v33 + 48) = 0;
  *(_QWORD *)(v33 + 56) = 0x3FF0000000000000;
  v34 = v33 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v33 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v11);
  v35 = v33 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v35 = 0;
  *(_BYTE *)(v35 + 8) = 1;
  v36 = v33 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v36 = 0;
  *(_BYTE *)(v36 + 8) = 1;
  *(_BYTE *)(v33 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v33 + 16) = v32;
  *(_QWORD *)(v33 + 24) = v32;
  *(_BYTE *)(v33 + 32) = 1;
  sub_24009C218((uint64_t)v17, v34, &qword_256FB4CC8);
  *(_QWORD *)v35 = 0;
  *(_BYTE *)(v35 + 8) = 1;
  *(_QWORD *)v36 = 0;
  *(_BYTE *)(v36 + 8) = 1;
  *(_QWORD *)(v31 + qword_256FC4E30) = v33;
  swift_release();
  v37 = v48;
  v38 = v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v48, v53, v11);
  v40 = v49;
  v39 = v50;
  v41 = v54;
  v42 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, v54, v51);
  v43 = v55;
  v44 = v52;
  sub_240080084(v55, v52, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v45 = sub_24014EA48(v37, v58, v40, v56, v57, v44);
  sub_2400800C8(v43, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v42);
  (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v38, v11);
  return v45;
}

uint64_t sub_24010226C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v25;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw + 8) & 1) != 0)
    {
      v9 = *(_QWORD *)(v2 + qword_256FC4E20);
      *(_BYTE *)(v9 + 33) = 0;
      v10 = v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      swift_retain();
      swift_retain();
      sub_240070BD4(v10, &qword_256FB4CC8);
      v11 = sub_240154310();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
      swift_release();
    }
    else
    {
      v12 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
      v13 = sub_240154310();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 1, 1, v13);
      swift_retain();
      swift_retain();
      sub_240148324(0, 1, (uint64_t)v8, v12);
      swift_release();
      sub_240070BD4((uint64_t)v8, &qword_256FB4CC8);
    }
    if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch + 8) & 1) != 0)
    {
      v14 = *(_QWORD *)(v3 + qword_256FC4E28);
      *(_BYTE *)(v14 + 33) = 0;
      v15 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      swift_retain();
      sub_240070BD4(v15, &qword_256FB4CC8);
      v16 = sub_240154310();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
      swift_release();
    }
    else
    {
      v17 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
      v18 = sub_240154310();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v8, 1, 1, v18);
      swift_retain();
      sub_240148324(0, 1, (uint64_t)v8, v17);
      swift_release();
      sub_240070BD4((uint64_t)v8, &qword_256FB4CC8);
    }
    if ((*(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll + 8) & 1) != 0)
    {
      v19 = *(_QWORD *)(v3 + qword_256FC4E30);
      *(_BYTE *)(v19 + 33) = 0;
      v20 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      swift_retain();
      sub_240070BD4(v20, &qword_256FB4CC8);
      v21 = sub_240154310();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
      swift_release();
      swift_release();
    }
    else
    {
      v22 = *(double *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
      v23 = sub_240154310();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v8, 1, 1, v23);
      swift_retain();
      sub_240148324(0, 1, (uint64_t)v8, v22);
      swift_release();
      swift_release();
      sub_240070BD4((uint64_t)v8, &qword_256FB4CC8);
    }
  }
  return sub_240100E7C(a1, a2);
}

BOOL sub_2401025C8()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + qword_256FC48A0) + 16) >= *(_QWORD *)(*(_QWORD *)(v0 + qword_256FC4888) + 80);
}

uint64_t sub_2401025FC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v40;
  uint64_t v41;
  int *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, uint64_t, uint64_t);
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  void (*v58)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  BOOL v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  char v70;
  uint64_t v71;
  int v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  char *v79;
  void (*v80)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  int *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96[2];
  _BYTE v97[40];
  _QWORD v98[4];
  char v99;

  v90 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v2);
  v91 = (uint64_t *)((char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_24015434C();
  v92 = *(_QWORD *)(v4 - 8);
  v93 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v95 = (uint64_t)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v89 = sub_240154310();
  v87 = *(_QWORD *)(v89 - 8);
  MEMORY[0x24BDAC7A8](v89);
  v94 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v79 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v79 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v79 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v79 - v20;
  v22 = type metadata accessor for DKMotion3();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = v1;
  sub_2401478A8((uint64_t)v97);
  sub_24008BADC((uint64_t)v97, (uint64_t)v98);
  v27 = 0;
  if ((v99 & 1) != 0)
    return v27;
  v81 = v23;
  v83 = v21;
  v79 = v12;
  v82 = v15;
  v85 = (int *)v22;
  v28 = v89;
  v86 = v25;
  v84 = v18;
  v88 = v9;
  v29 = *(double *)v98;
  v30 = *(double *)&v98[1];
  v31 = *(double *)&v98[2];
  v32 = *(double *)&v98[3];
  v33 = *(_QWORD *)(v26 + *(_QWORD *)(*(_QWORD *)v26 + 216));
  v34 = v90;
  v35 = v26;
  if (!v33)
    goto LABEL_5;
  swift_retain();
  swift_retain();
  sub_240071824(v34);
  swift_release();
  swift_retain();
  sub_240071824(v34);
  swift_release();
  swift_retain();
  sub_240071824(v34);
  swift_release();
  sub_2401161D8(v34);
  v36 = *(_QWORD *)(v33 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState);
  swift_retain();
  swift_release();
  if (v36)
  {
    v37 = (uint64_t)v83;
    sub_240080084(v36 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t)v83, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
    swift_release();
    v38 = v81;
    v39 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v81 + 56);
    v40 = v37;
    v41 = 0;
  }
  else
  {
LABEL_5:
    v38 = v81;
    v39 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v81 + 56);
    v37 = (uint64_t)v83;
    v40 = (uint64_t)v83;
    v41 = 1;
  }
  v42 = v85;
  v80 = v39;
  v39(v40, v41, 1, v85);
  v43 = (uint64_t)v86;
  v44 = v28;
  v45 = v87;
  v46 = v82;
  v47 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
  v47(v82, v34, v44);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v38 + 48))(v37, 1, v42) == 1)
  {
    v48 = v79;
    v47(v79, (uint64_t)v46, v44);
    v49 = v43;
    v47((char *)v43, (uint64_t)v48, v44);
    *(_QWORD *)(v43 + v42[5]) = &unk_251061B98;
    *(_QWORD *)(v43 + v42[6]) = &unk_251061BD0;
    v50 = *(void (**)(char *, uint64_t))(v45 + 8);
    v50(v48, v44);
    *(_QWORD *)(v43 + v42[7]) = &unk_251061C08;
    v50(v46, v44);
    sub_240070BD4((uint64_t)v83, &qword_256FB4438);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v44);
    v49 = v43;
    sub_2400A4FB4(v37, v43);
  }
  v52 = v92;
  v51 = v93;
  v47(v88, v34, v44);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v95, v35 + qword_256FC4858, v51);
  v53 = *(_QWORD *)(v35 + qword_256FC4868 + 8);
  v96[0] = *(_QWORD *)(v35 + qword_256FC4868);
  v96[1] = v53;
  v54 = *(_QWORD *)(v35 + qword_256FC4870);
  v55 = *(_QWORD *)(v35 + qword_256FC4860);
  v56 = v91;
  sub_2400B8D80(v35 + *(_QWORD *)(*(_QWORD *)v35 + 232), (uint64_t)v91);
  v57 = type metadata accessor for DKPersonGroupFilter.Track(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 48))(v56, 1, v57))
  {
    sub_240070BD4((uint64_t)v56, &qword_256FB65E8);
    v58 = v80;
    v59 = (uint64_t)v84;
  }
  else
  {
    v60 = (uint64_t)v56;
    v61 = *v56;
    v62 = *(unsigned __int8 *)(v60 + 8);
    sub_240070BD4(v60, &qword_256FB65E8);
    v63 = v62 == 1;
    v58 = v80;
    v59 = (uint64_t)v84;
    if (!v63)
      goto LABEL_14;
  }
  v61 = -1;
LABEL_14:
  sub_240080084(v49, v59, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  v58(v59, 0, 1, v85);
  v47(v94, v35 + qword_256FC4890, v44);
  v64 = *(_QWORD *)(v35 + qword_256FC48A0);
  v65 = *(_QWORD *)(v64 + 16);
  if (v65)
  {
    v66 = *(_QWORD *)(v64 + 8 * v65 + 24);
    swift_retain();
  }
  else
  {
    v66 = 0;
  }
  v67 = *(_QWORD *)(v35 + qword_256FC4E20);
  v68 = *(unsigned __int8 *)(v67 + 33);
  if (v68 == 1)
  {
    if (*(_BYTE *)(v67 + 32) == 1)
      v69 = atan2(*(long double *)(v67 + 48), *(long double *)(v67 + 56));
    else
      v69 = *(_QWORD *)(v67 + 40);
  }
  else
  {
    v69 = 0;
  }
  v70 = v68 ^ 1;
  v71 = *(_QWORD *)(v35 + qword_256FC4E28);
  v72 = *(unsigned __int8 *)(v71 + 33);
  if (v72 == 1)
  {
    if (*(_BYTE *)(v71 + 32) == 1)
      v73 = atan2(*(long double *)(v71 + 48), *(long double *)(v71 + 56));
    else
      v73 = *(_QWORD *)(v71 + 40);
  }
  else
  {
    v73 = 0;
  }
  v74 = v72 ^ 1;
  v75 = *(_QWORD *)(v35 + qword_256FC4E30);
  v76 = *(unsigned __int8 *)(v75 + 33);
  if (v76 == 1)
  {
    if (*(_BYTE *)(v75 + 32) == 1)
      v77 = atan2(*(long double *)(v75 + 48), *(long double *)(v75 + 56));
    else
      v77 = *(_QWORD *)(v75 + 40);
  }
  else
  {
    v77 = 0;
  }
  type metadata accessor for DKFaceTrackerState(0);
  swift_allocObject();
  v27 = DKFaceTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)((uint64_t)v88, v95, v96, v54, v55, v61, (uint64_t)v84, (uint64_t)v94, v29, v30, v31, v32, 0, v66, v69, v70, v73, v74, v77,
          v76 ^ 1u);
  sub_2400800C8((uint64_t)v86, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  return v27;
}

uint64_t sub_240102DA4()
{
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t DKFaceTracker.deinit()
{
  uint64_t v0;

  v0 = _s23IntelligentTrackingCore13DKBodyTrackerCfd_0();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKFaceTracker.__deallocating_deinit()
{
  _s23IntelligentTrackingCore13DKBodyTrackerCfd_0();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_240102E94@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_2401025FC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_240102EB8(uint64_t a1, uint64_t *a2)
{
  return sub_24010226C(a1, *a2);
}

double sub_240102EC0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 176);
  *a2 = result;
  return result;
}

double sub_240102ED0(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 176) = *a1;
  return result;
}

double sub_240102EE0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 184);
  *a2 = result;
  return result;
}

double sub_240102EF0(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 184) = *a1;
  return result;
}

uint64_t sub_240102F00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + qword_256FC4E20);
  return swift_retain();
}

uint64_t sub_240102F18(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &qword_256FC4E20);
}

uint64_t sub_240102F24@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + qword_256FC4E28);
  return swift_retain();
}

uint64_t sub_240102F3C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &qword_256FC4E28);
}

uint64_t sub_240102F48@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + qword_256FC4E30);
  return swift_retain();
}

uint64_t sub_240102F60(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &qword_256FC4E30);
}

uint64_t type metadata accessor for DKFaceTrackerConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKFaceTrackerConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleAlpha.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleAlpha.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleAlpha.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleBeta.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleBeta.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of DKFaceTrackerConfiguration.faceAngleBeta.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t type metadata accessor for DKFaceTracker()
{
  uint64_t result;

  result = qword_256FBCE48;
  if (!qword_256FBCE48)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24010301C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DKFaceTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKFaceTracker.faceYawFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of DKFaceTracker.faceYawFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of DKFaceTracker.faceYawFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of DKFaceTracker.facePitchFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of DKFaceTracker.facePitchFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of DKFaceTracker.facePitchFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of DKFaceTracker.faceRollFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of DKFaceTracker.faceRollFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of DKFaceTracker.faceRollFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t sub_2401030DC()
{
  uint64_t result;

  result = os_variant_allows_internal_security_policies();
  byte_256FBD198 = result;
  return result;
}

uint64_t sub_240103100()
{
  uint64_t v0;
  _QWORD *v1;

  v1[2] = v0;
  v1[3] = type metadata accessor for DKDataLogStamped(0);
  v1[4] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24010315C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 40)
                            + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_config)
                + 72) != 1)
    goto LABEL_6;
  if (qword_256FB3FE8 != -1)
    swift_once();
  if (byte_256FBD198 == 1)
  {
    v2 = *(_QWORD *)(v0 + 24);
    v1 = *(_QWORD *)(v0 + 32);
    v3 = *(_QWORD *)(v0 + 16);
    v4 = *(_QWORD *)(v3 + 48);
    v5 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    v6 = sub_240154310();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v1, v5, v6);
    *(_QWORD *)(v1 + *(int *)(v2 + 20)) = v4;
    *(_QWORD *)(v0 + 40) = *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLoggingTask_logRecorder);
    swift_retain();
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 48) = v7;
    *v7 = v0;
    v7[1] = sub_24010329C;
    return sub_24011AC40(*(_QWORD *)(v0 + 32));
  }
  else
  {
LABEL_6:
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
}

uint64_t sub_24010329C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *v0;
  v4 = *v0;
  swift_task_dealloc();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 56) = v2;
  *v2 = v4;
  v2[1] = sub_240103300;
  return sub_240119C5C();
}

uint64_t sub_240103300()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240103354()
{
  uint64_t v0;

  sub_2401034AC(*(_QWORD *)(v0 + 32));
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_240103390()
{
  return swift_release();
}

uint64_t sub_2401033A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_240103424()
{
  return type metadata accessor for DKLoggingTask();
}

uint64_t type metadata accessor for DKLoggingTask()
{
  uint64_t result;

  result = qword_256FBD1C8;
  if (!qword_256FBD1C8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240103468()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_2401034AC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DKDataLogStamped(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2401034E8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_240154310();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240103548()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t result;
  uint64_t i;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v2 = v0[2];
  v1 = v0[3];
  v3 = *(_QWORD *)(v2 + 48);
  v6 = v0 + 4;
  v4 = v0[4];
  v5 = v6[1];
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v7(v5, v3 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
  swift_retain();
  swift_retain();
  v8 = sub_2400909B4(v5);
  swift_release();
  v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(v5, v1);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = v8;
  swift_release();
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v2 + 48);
  v7(v5, v10 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
  swift_retain();
  swift_retain();
  v11 = sub_2400909D0(v5);
  swift_release();
  v9(v5, v1);
  *(_QWORD *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = v11;
  swift_release();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v2 + 48);
  v7(v5, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
  swift_retain();
  swift_retain();
  v13 = sub_240090C40(v5);
  swift_release();
  v9(v5, v1);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = v13;
  swift_release();
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v2 + 48);
  v15 = *(_QWORD *)(*(_QWORD *)(v2 + 40)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker);
  v7(v5, v14 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v1);
  v16 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers;
  v17 = *(_QWORD *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  v18 = (_QWORD *)swift_task_alloc();
  v18[2] = v5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v19 = sub_2400900EC((uint64_t (*)(uint64_t *))sub_240103A94, v18, v17);
  swift_task_dealloc();
  *(_QWORD *)(v15 + v16) = v19;
  swift_bridgeObjectRelease();
  v20 = *(_QWORD *)(v15 + v16);
  v21 = swift_task_alloc();
  *(_QWORD *)(v21 + 16) = v5;
  swift_bridgeObjectRetain();
  v22 = sub_24008FF2C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_240103AB0, v21, v20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  v9(v5, v1);
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = v22;
  swift_release();
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(v2 + 48);
  v24 = *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
  if (v24)
  {
    if (v24 >> 62)
    {
      swift_bridgeObjectRetain();
      v34 = sub_240154D30();
      swift_bridgeObjectRelease();
      v23 = *(_QWORD *)(v2 + 48);
      if (v34 < 1)
        goto LABEL_5;
      goto LABEL_4;
    }
    if (*(uint64_t *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
    {
LABEL_4:
      (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v35 + 32) + 24))(*(_QWORD *)(v2 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime, v23 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, *(_QWORD *)(v35 + 24));
      v23 = *(_QWORD *)(v2 + 48);
    }
  }
LABEL_5:
  v25 = *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (!v25)
    goto LABEL_24;
  v26 = *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
  if (!v26)
    goto LABEL_24;
  if (!(v26 >> 62))
  {
    v27 = *(_QWORD *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
    if (v27)
      goto LABEL_9;
LABEL_23:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_24:
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v35 + 8))(1);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_240154D30();
  v27 = result;
  if (!result)
    goto LABEL_23;
LABEL_9:
  if (v27 >= 1)
  {
    for (i = 0; i != v27; ++i)
    {
      if ((v26 & 0xC000000000000001) != 0)
      {
        v30 = MEMORY[0x24267D4E0](i, v26);
      }
      else
      {
        v30 = *(_QWORD *)(v26 + 8 * i + 32);
        swift_retain();
      }
      swift_bridgeObjectRetain();
      swift_retain();
      v31 = sub_240103AC8(v25, v30);
      swift_release();
      swift_bridgeObjectRelease();
      if (v31 >> 62)
        v32 = sub_240154D30();
      else
        v32 = *(_QWORD *)((v31 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (!v32)
      {
        v33 = *(_QWORD *)(v30 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
        swift_retain();
        swift_release();
        *(_QWORD *)(v33 + 16) = 0;
      }
      swift_release();
    }
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

uint64_t sub_240103A1C()
{
  return type metadata accessor for DKUpdateStatesTask();
}

uint64_t type metadata accessor for DKUpdateStatesTask()
{
  uint64_t result;

  result = qword_256FBD318;
  if (!qword_256FBD318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240103A60()
{
  return swift_updateClassMetadata2();
}

BOOL sub_240103A94()
{
  return sub_240090CFC();
}

uint64_t sub_240103AB0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;

  return sub_240090D30(*(_QWORD *)(v1 + 16), a1);
}

uint64_t sub_240103AC8(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v26 = sub_24015434C();
  v29 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8.n128_f64[0] = MEMORY[0x24BDAC7A8](v7);
  v27 = (char *)v21 - v9;
  v30 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_16:
    v10 = sub_240154D30();
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_3:
      v21[1] = v3;
      v11 = 0;
      v22 = a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid;
      v23 = v10;
      v24 = a1 & 0xFFFFFFFFFFFFFF8;
      v25 = a1 & 0xC000000000000001;
      v13 = v26;
      v12 = v27;
      v14 = v28;
      while (1)
      {
        if (v25)
        {
          a2 = MEMORY[0x24267D4E0](v11, a1, v8);
          v15 = v11 + 1;
          if (__OFADD__(v11, 1))
          {
LABEL_13:
            __break(1u);
            return v30;
          }
        }
        else
        {
          if (v11 >= *(_QWORD *)(v24 + 16))
          {
            __break(1u);
            goto LABEL_16;
          }
          a2 = *(_QWORD *)(a1 + 8 * v11 + 32);
          swift_retain();
          v15 = v11 + 1;
          if (__OFADD__(v11, 1))
            goto LABEL_13;
        }
        v16 = a1;
        v17 = v29;
        v18 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
        v18(v12, a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v13);
        v18(v14, v22, v13);
        v3 = sub_240154328();
        v19 = *(void (**)(char *, uint64_t))(v17 + 8);
        v19(v14, v13);
        v19(v12, v13);
        if ((v3 & 1) != 0)
        {
          v3 = (uint64_t)&v30;
          sub_240154BE0();
          sub_240154C10();
          sub_240154C1C();
          sub_240154BEC();
        }
        else
        {
          swift_release();
        }
        a1 = v16;
        ++v11;
        if (v15 == v23)
          return v30;
      }
    }
  }
  return MEMORY[0x24BEE4AF8];
}

void DKStateMachine.Transition.init(from:to:event:)(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1, a2);
  type metadata accessor for DKStateMachine.Transition();
}

uint64_t sub_240103D5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);

  v6(v5 + *(int *)(a1 + 52), v4, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v5 + *(int *)(a1 + 56), v3, v1);
}

void type metadata accessor for DKStateMachine.Transition()
{
  JUMPOUT(0x24267E050);
}

void DKStateMachine.__allocating_init(initialState:transitions:)(uint64_t a1)
{
  swift_allocObject();
  sub_2401046BC(a1);
}

uint64_t sub_240103E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
}

uint64_t sub_240103E44(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 40))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112), a1);
}

void DKStateMachine.init(initialState:transitions:)(uint64_t a1)
{
  sub_2401046BC(a1);
}

id sub_240103EAC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  objc_msgSend(v1, sel_lock);
  sub_240103F10(v0);
  return objc_msgSend(v1, sel_unlock);
}

uint64_t sub_240103F10(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  MEMORY[0x24BDAC7A8]();
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  return (*(uint64_t (**)(uint64_t, char *))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 80) - 8) + 40))(a1 + *(_QWORD *)(*(_QWORD *)a1 + 112), v3);
}

id sub_240103FA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
  sub_240104C9C();
  objc_msgSend(v3, sel_lock);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
  return objc_msgSend(v3, sel_unlock);
}

void sub_240104014(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 88);
  sub_240104510(v4, v4);
  v5 = *(_QWORD *)(v4 - 8);
  swift_allocObject();
  sub_2401547C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v6, a1, v4);
  v7 = sub_240154844();
  nullsub_1(v7);
  sub_2401040E0();
}

void sub_2401040E0()
{
  uint64_t v0;

  objc_msgSend(*(id *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128)), sel_lock);
  sub_240104150();
}

void sub_240104150()
{
  type metadata accessor for DKStateMachine.Transition();
}

uint64_t DKStateMachine.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t DKStateMachine.__deallocating_deinit()
{
  DKStateMachine.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_240104510(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (swift_isClassType())
    v3 = a2;
  else
    v3 = 0;
  if (v3)
    return __swift_instantiateConcreteTypeFromMangledName(&qword_256FB9BC0);
  else
    return sub_240154EC8();
}

unint64_t sub_24010455C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_2401545BC();
  return sub_2401045A4(a1, v6, a2, a3);
}

unint64_t sub_2401045A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t, __n128);
  char v17;
  _QWORD v19[2];

  v5 = v4;
  v19[0] = a1;
  v19[1] = a4;
  v7 = *(_QWORD *)(a3 - 8);
  v8.n128_f64[0] = MEMORY[0x24BDAC7A8](a1);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = -1 << *(_BYTE *)(v5 + 32);
  v13 = v12 & ~v11;
  if (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v14 = ~v11;
    v15 = *(_QWORD *)(v7 + 72);
    v16 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v7 + 16);
    do
    {
      v16(v10, *(_QWORD *)(v5 + 48) + v15 * v13, a3, v8);
      v17 = sub_240154610();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a3);
      if ((v17 & 1) != 0)
        break;
      v13 = (v13 + 1) & v14;
    }
    while (((*(_QWORD *)(v5 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

void sub_2401046BC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v9[30];

  v9[23] = a1;
  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  MEMORY[0x24BDAC7A8](a1);
  v9[4] = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v6 = v2[11];
  v7 = v2[12];
  v8 = v2[13];
  v9[25] = v3;
  v9[26] = v6;
  v9[8] = v8;
  v9[9] = v6;
  v9[27] = v7;
  v9[28] = v8;
  type metadata accessor for DKStateMachine.Transition();
}

unint64_t sub_240104C9C()
{
  unint64_t result;

  result = qword_256FBD430[0];
  if (!qword_256FBD430[0])
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, qword_256FBD430);
  }
  return result;
}

uint64_t sub_240104CD8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for DKStateMachine()
{
  JUMPOUT(0x24267E050);
}

uint64_t method lookup function for DKStateMachine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKStateMachine.__allocating_init(initialState:transitions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DKStateMachine.reset(state:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKStateMachine.currentState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKStateMachine.execute(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_240104DB4()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_240104DBC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_240104E48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v19;
  uint64_t v21;

  v4 = a1;
  v6 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_DWORD *)(v7 + 80);
  v10 = v8 + v9;
  v11 = *(_QWORD *)(v5 - 8);
  v12 = *(_DWORD *)(v11 + 80);
  v13 = v8 + v12;
  if ((v12 | v9) > 7
    || ((*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || ((v8 + v12 + ((v8 + v9) & ~v9)) & ~v12) + *(_QWORD *)(v11 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + (((v12 | v9) + 16) & ~(v12 | v9)));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    v21 = ~v12;
    v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16);
    v18(a1, a2, v6);
    v19 = ((unint64_t)a2 + v10) & v17;
    v18((uint64_t *)(((unint64_t)v4 + v10) & v17), (uint64_t *)v19, v6);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((((unint64_t)v4 + v10) & v17) + v13) & v21, (v19 + v13) & v21, v5);
  }
  return v4;
}

uint64_t sub_240104F68(unint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(unint64_t, uint64_t);
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = (v7 + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v6(v8, v4);
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((v8 + v7 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_240104FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v9 + v10 + a1) & ~v10;
  v12 = (v9 + v10 + a2) & ~v10;
  v8(v11, v12, v6);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))((v9 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v9 + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_240105090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v9 + v10 + a1) & ~v10;
  v12 = (v9 + v10 + a2) & ~v10;
  v8(v11, v12, v6);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 24))((v9 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v9 + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_240105138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v9 + v10 + a1) & ~v10;
  v12 = (v9 + v10 + a2) & ~v10;
  v8(v11, v12, v6);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 32))((v9 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v9 + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_2401051E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(unsigned __int8 *)(v7 + 80);
  v11 = (v9 + v10 + a1) & ~v10;
  v12 = (v9 + v10 + a2) & ~v10;
  v8(v11, v12, v6);
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))((v9 + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (v9 + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_240105288(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  char v15;
  int v16;
  unsigned int v17;
  int v18;
  int v19;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(_QWORD *)(v4 + 64);
  v10 = *(unsigned __int8 *)(v4 + 80);
  v11 = v9 + v10;
  v12 = *(unsigned __int8 *)(v6 + 80);
  v13 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v14 = ((v9 + v12 + (v11 & ~v10)) & ~v12) + *(_QWORD *)(v6 + 64);
  v15 = 8 * v14;
  if (v14 <= 3)
  {
    v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      v16 = *(_DWORD *)(a1 + v14);
      if (!v16)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      v16 = *(unsigned __int16 *)(a1 + v14);
      if (!*(_WORD *)(a1 + v14))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((((v11 + a1) & ~v10) + v9 + v12) & ~v12);
      }
      return 0;
    }
  }
  v16 = *(unsigned __int8 *)(a1 + v14);
  if (!*(_BYTE *)(a1 + v14))
    goto LABEL_23;
LABEL_14:
  v18 = (v16 - 1) << v15;
  if (v14 > 3)
    v18 = 0;
  if (!(_DWORD)v14)
    return v8 + v18 + 1;
  if (v14 <= 3)
    v19 = ((v9 + v12 + (v11 & ~(_DWORD)v10)) & ~(_DWORD)v12) + *(_DWORD *)(v6 + 64);
  else
    v19 = 4;
  return ((uint64_t (*)(void))((char *)&loc_24010536C + 4 * byte_24015D8F0[v19 - 1]))();
}

void sub_2401053F8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64)
       + *(unsigned __int8 *)(v6 + 80)
       + ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

uint64_t sub_240105610()
{
  return swift_deallocObject();
}

void sub_240105620()
{
  type metadata accessor for DKStateMachine.Transition();
}

uint64_t sub_240105640()
{
  return sub_2401547F0();
}

uint64_t sub_240105658()
{
  return swift_deallocObject();
}

uint64_t sub_240105668@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 48))();
  *a1 = result;
  return result;
}

uint64_t static DKLog.beginSignpost(_:_:)()
{
  return 0;
}

IntelligentTrackingCore::DKLog::Category_optional __swiftcall DKLog.Category.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  IntelligentTrackingCore::DKLog::Category_optional result;
  char v5;

  v2 = v1;
  v3 = sub_240154D84();
  result.value = swift_bridgeObjectRelease();
  v5 = 14;
  if (v3 < 0xE)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t DKLog.Category.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_240105734 + 4 * byte_24015D960[*v0]))(0x6F67657461636E55, 0xED000064657A6972);
}

unint64_t sub_240105734()
{
  return 0xD000000000000013;
}

uint64_t sub_240105884()
{
  return sub_2400CCD34();
}

uint64_t sub_240105890()
{
  sub_240154FE8();
  DKLog.Category.rawValue.getter();
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2401058F4()
{
  DKLog.Category.rawValue.getter();
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240105944()
{
  sub_240154FE8();
  DKLog.Category.rawValue.getter();
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

IntelligentTrackingCore::DKLog::Category_optional sub_2401059A4(Swift::String *a1)
{
  return DKLog.Category.init(rawValue:)(*a1);
}

uint64_t sub_2401059B0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = DKLog.Category.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t DKLog.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DKLog.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(_BYTE *a1, uint64_t a2, unint64_t a3, os_log_type_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = sub_2401544C0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v22) = *a1;
  DKLog.Category.rawValue.getter();
  sub_2401544B4();
  swift_bridgeObjectRetain_n();
  v12 = sub_2401544A8();
  v13 = a4;
  if (os_log_type_enabled(v12, a4))
  {
    v14 = (uint8_t *)swift_slowAlloc();
    v15 = swift_slowAlloc();
    v20 = v8;
    v16 = a2;
    v17 = v15;
    v22 = v15;
    *(_DWORD *)v14 = 136315138;
    swift_bridgeObjectRetain();
    v21 = sub_240112D54(v16, a3, &v22);
    sub_240154A6C();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_24006B000, v12, v13, "%s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24267E17C](v17, -1, -1);
    MEMORY[0x24267E17C](v14, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v20);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

unint64_t sub_240105BEC()
{
  unint64_t result;

  result = qword_256FBD538;
  if (!qword_256FBD538)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKLog.Category, &type metadata for DKLog.Category);
    atomic_store(result, (unint64_t *)&qword_256FBD538);
  }
  return result;
}

uint64_t type metadata accessor for DKLog()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKLog()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for DKLog.Category(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_240105CA8 + 4 * byte_24015D973[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_240105CDC + 4 * byte_24015D96E[v4]))();
}

uint64_t sub_240105CDC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240105CE4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240105CECLL);
  return result;
}

uint64_t sub_240105CF8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240105D00);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_240105D04(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240105D0C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKLog.Category()
{
  return &type metadata for DKLog.Category;
}

unint64_t sub_240105D28(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  id *v4;
  int v5;
  id v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBD730);
  v2 = (_QWORD *)sub_240154D54();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (id *)(a1 + 40);
  while (1)
  {
    v5 = *(_DWORD *)v4;
    v6 = *(v4 - 1);
    result = sub_24013EF8C((uint64_t)v6);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v2[6] + 8 * result) = v6;
    *(_DWORD *)(v2[7] + 4 * result) = v5;
    v9 = v2[2];
    v10 = __OFADD__(v9, 1);
    v11 = v9 + 1;
    if (v10)
      goto LABEL_11;
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_240105E2C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  _OWORD v15[2];
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBD760);
  v2 = sub_240154D54();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_240070B90(v6, (uint64_t)v15, &qword_256FBD768);
    result = sub_24013F148((uint64_t)v15);
    if ((v8 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v9 = v3[6] + 40 * result;
    v10 = v15[0];
    v11 = v15[1];
    *(_QWORD *)(v9 + 32) = v16;
    *(_OWORD *)v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    result = (unint64_t)sub_240107DB0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_240105F6C(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  void **v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8498);
  v2 = (_QWORD *)sub_240154D54();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (void **)(a1 + 48);
  while (1)
  {
    v5 = (uint64_t)*(v4 - 2);
    v6 = (uint64_t)*(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    v8 = v7;
    result = sub_24013F014(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v8;
    v12 = v2[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_240106084(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  _QWORD *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBD750);
  v2 = (_QWORD *)sub_240154D54();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    v5 = *(v4 - 3);
    v6 = *(v4 - 2);
    v8 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_24013F014(v5, v6);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v11 = (uint64_t *)(v2[6] + 16 * result);
    *v11 = v5;
    v11[1] = v6;
    v12 = (_QWORD *)(v2[7] + 16 * result);
    *v12 = v8;
    v12[1] = v7;
    v13 = v2[2];
    v14 = __OFADD__(v13, 1);
    v15 = v13 + 1;
    if (v14)
      goto LABEL_11;
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2401061A4(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t *v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  if (!*(_QWORD *)(a1 + 16))
  {
    v2 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBD748);
  v2 = (_QWORD *)sub_240154D54();
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    v5 = *(v4 - 2);
    v6 = *(v4 - 1);
    v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_24013F014(v5, v6);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v10 = (uint64_t *)(v2[6] + 16 * result);
    *v10 = v5;
    v10[1] = v6;
    *(_QWORD *)(v2[7] + 8 * result) = v7;
    v11 = v2[2];
    v12 = __OFADD__(v11, 1);
    v13 = v11 + 1;
    if (v12)
      goto LABEL_11;
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2401062BC(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;
  char v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBD710);
  v2 = sub_240154D54();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_240070B90(v6, (uint64_t)&v13, &qword_256FBD718);
    v7 = v13;
    result = sub_24013F23C(v13);
    if ((v9 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v7;
    result = (unint64_t)sub_240107DB0(&v14, (_OWORD *)(v3[7] + 32 * result));
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      goto LABEL_11;
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2401063E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t result;
  char v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  _QWORD v22[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBD740);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a1 + 16))
  {
    v7 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84C0);
  v6 = sub_240154D54();
  v7 = (_QWORD *)v6;
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  v9 = *(int *)(v2 + 48);
  v10 = v6 + 64;
  v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  v12 = a1 + v11;
  v13 = *(_QWORD *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_240070B90(v12, (uint64_t)v5, &qword_256FBD740);
    result = sub_24013F178((uint64_t)v5);
    if ((v15 & 1) != 0)
      break;
    v16 = result;
    *(_QWORD *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v17 = v7[6];
    v18 = sub_24015434C();
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v16, v5, v18);
    *(_QWORD *)(v7[7] + 8 * v16) = *(_QWORD *)&v5[v9];
    v19 = v7[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_11;
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_24010657C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBD720);
  v2 = sub_240154D54();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_240070B90(v6, (uint64_t)&v15, &qword_256FBD728);
    v7 = v15;
    v8 = v16;
    result = sub_24013F014(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_240107DB0(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

CGFloat *DKImageCrop.__allocating_init(sourceImage:rect:)(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGFloat *v10;
  __CVBuffer *v11;
  size_t Width;
  size_t Height;
  CGFloat x;
  CGFloat y;
  CGFloat v16;
  CGFloat v17;
  CGRect v19;
  CGRect v20;

  v10 = (CGFloat *)swift_allocObject();
  *((_QWORD *)v10 + 7) = sub_240105F6C(MEMORY[0x24BEE4AF8]);
  *((_QWORD *)v10 + 2) = a1;
  v11 = a1;
  Width = CVPixelBufferGetWidth(v11);
  Height = CVPixelBufferGetHeight(v11);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  v20 = VNImageRectForNormalizedRect(v19, Width, Height);
  x = v20.origin.x;
  y = v20.origin.y;
  v16 = v20.size.width;
  v17 = v20.size.height;

  v10[3] = x;
  v10[4] = y;
  v10[5] = v16;
  v10[6] = v17;
  return v10;
}

void *sub_240106770()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

void sub_240106794(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 16);
  *(_QWORD *)(v1 + 16) = a1;

}

double DKImageCrop.rect.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

uint64_t sub_2401067AC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2401067B4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

CGFloat *DKImageCrop.init(sourceImage:rect:)(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CGFloat *v5;
  void *v11;
  __CVBuffer *v12;
  size_t Width;
  size_t Height;
  CGFloat x;
  CGFloat y;
  CGFloat v17;
  CGFloat v18;
  CGRect v20;
  CGRect v21;

  v5[2] = 0.0;
  *((_QWORD *)v5 + 7) = sub_240105F6C(MEMORY[0x24BEE4AF8]);
  v11 = (void *)*((_QWORD *)v5 + 2);
  *((_QWORD *)v5 + 2) = a1;
  v12 = a1;

  Width = CVPixelBufferGetWidth(v12);
  Height = CVPixelBufferGetHeight(v12);
  v20.origin.x = a2;
  v20.origin.y = a3;
  v20.size.width = a4;
  v20.size.height = a5;
  v21 = VNImageRectForNormalizedRect(v20, Width, Height);
  x = v21.origin.x;
  y = v21.origin.y;
  v17 = v21.size.width;
  v18 = v21.size.height;

  v5[3] = x;
  v5[4] = y;
  v5[5] = v17;
  v5[6] = v18;
  return v5;
}

void sub_240106880()
{
  double *v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  double Width;
  double Height;
  CGRect v7;
  CGRect v8;

  v1 = v0[3];
  v2 = v0[4];
  v3 = v0[5];
  v4 = v0[6];
  v7.origin.x = v1;
  v7.origin.y = v2;
  v7.size.width = v3;
  v7.size.height = v4;
  Width = CGRectGetWidth(v7);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v8.origin.x = v1;
  v8.origin.y = v2;
  v8.size.width = v3;
  v8.size.height = v4;
  Height = CGRectGetHeight(v8);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (Height < 9.22337204e18)
  {
    sub_240106978((__CVBuffer *)(uint64_t)Width, (uint64_t)Height);
    return;
  }
LABEL_13:
  __break(1u);
}

__CVBuffer *sub_240106978(__CVBuffer *a1, size_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;
  id v9;
  __CVBuffer *v11;
  uint64_t v12;
  uint64_t v13;

  v12 = sub_240154EBC();
  v13 = v5;
  sub_2401546D0();
  sub_240154EBC();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v2 + 56);
  if (*(_QWORD *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_24013F014(v12, v13);
    if ((v8 & 1) != 0)
    {
      v9 = *(id *)(*(_QWORD *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return (__CVBuffer *)v9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v11 = sub_240106D5C(v12, v13, a1, a2);
  swift_bridgeObjectRelease();
  return v11;
}

__CVBuffer *sub_240106AC0(double a1, double a2)
{
  __CVBuffer *result;

  if (a1 <= -9.22337204e18)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a1 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((*(_QWORD *)&a1 & 0x7FF0000000000000) == 0x7FF0000000000000
    || (*(_QWORD *)&a2 & 0x7FF0000000000000) == 0x7FF0000000000000)
  {
    goto LABEL_10;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a2 < 9.22337204e18)
    return sub_240106978((__CVBuffer *)(uint64_t)a1, (uint64_t)a2);
LABEL_12:
  __break(1u);
  return result;
}

void sub_240106B5C(__CVBuffer *a1)
{
  uint64_t v1;
  __CVBuffer *Width;
  size_t Height;
  __CVBuffer *v5;
  __CVBuffer *v6;

  Width = (__CVBuffer *)CVPixelBufferGetWidth(a1);
  Height = CVPixelBufferGetHeight(a1);
  v5 = sub_240106978(Width, Height);
  if (!v1)
  {
    v6 = v5;
    sub_2400B5594(v5, a1);

  }
}

uint64_t sub_240106BC8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v5;
  uint64_t v6;

  v5 = sub_240154EBC();
  v6 = v1;
  sub_2401546D0();
  sub_240154EBC();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 56) + 16))
  {
    swift_bridgeObjectRetain();
    sub_24013F014(v5, v6);
    v3 = v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_240106CB0()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)(v0 + 56) + 16);
}

void sub_240106CBC()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 16) = 0;

}

uint64_t sub_240106CCC()
{
  uint64_t v1;

  v1 = sub_240154EBC();
  sub_2401546D0();
  sub_240154EBC();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  return v1;
}

__CVBuffer *sub_240106D5C(uint64_t a1, uint64_t a2, __CVBuffer *a3, size_t a4)
{
  double *v4;
  __CVBuffer *v5;
  double *v6;
  void *v7;
  uint64_t inited;
  uint64_t v12;
  id v13;
  const __CFDictionary *v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  CGFloat v18;
  __CVBuffer *v19;
  double MinX;
  double MinY;
  double Width;
  double Height;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  CVPixelBufferRef pixelBufferOut[2];
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;

  v6 = v4;
  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  v7 = (void *)*((_QWORD *)v4 + 2);
  if (!v7)
  {
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v25 = 0xD00000000000003ALL;
    *(_QWORD *)(v25 + 8) = 0x8000000240164690;
    *(_BYTE *)(v25 + 16) = 0;
    swift_willThrow();
    return v5;
  }
  v5 = a3;
  pixelBufferOut[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_QWORD *)(inited + 32) = sub_24015464C();
  *(_QWORD *)(inited + 40) = v12;
  v13 = v7;
  *(_QWORD *)(inited + 48) = sub_240106084(MEMORY[0x24BEE4AF8]);
  sub_2401061A4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E8);
  v14 = (const __CFDictionary *)sub_240154544();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, (size_t)v5, a4, 0x42475241u, v14, pixelBufferOut);

  if (!pixelBufferOut[0])
  {
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v26 = 0xD000000000000028;
    *(_QWORD *)(v26 + 8) = 0x80000002401646D0;
    *(_BYTE *)(v26 + 16) = 0;
    swift_willThrow();

    return v5;
  }
  v15 = v6[3];
  v16 = v6[4];
  v17 = v6[5];
  v18 = v6[6];
  v19 = pixelBufferOut[0];
  v30.origin.x = v15;
  v30.origin.y = v16;
  v30.size.width = v17;
  v30.size.height = v18;
  MinX = CGRectGetMinX(v30);
  if ((~*(_QWORD *)&MinX & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (MinX <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (MinX >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v31.origin.x = v15;
  v31.origin.y = v16;
  v31.size.width = v17;
  v31.size.height = v18;
  MinY = CGRectGetMinY(v31);
  if ((~*(_QWORD *)&MinY & 0x7FF0000000000000) == 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (MinY <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (MinY >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v32.origin.x = v15;
  v32.origin.y = v16;
  v32.size.width = v17;
  v32.size.height = v18;
  Width = CGRectGetWidth(v32);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v33.origin.x = v15;
  v33.origin.y = v16;
  v33.size.width = v17;
  v33.size.height = v18;
  Height = CGRectGetHeight(v33);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  if (Height >= 9.22337204e18)
    goto LABEL_30;
  sub_2400B4F50((__CVBuffer *)v13, v19, (uint64_t)MinX, (uint64_t)MinY, (uint64_t)Width, (uint64_t)Height);
  v5 = v19;
  swift_bridgeObjectRetain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v28 = *((_QWORD *)v6 + 7);
  v6[7] = -0.0;
  sub_240072214((uint64_t)v5, a1, a2, isUniquelyReferenced_nonNull_native);
  *((_QWORD *)v6 + 7) = v28;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t DKImageCrop.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKImageCrop.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL sub_2401071BC(uint64_t *a1, uint64_t *a2)
{
  return _s23IntelligentTrackingCore11DKImageCropC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t sub_2401071C8(uint64_t a1)
{
  return sub_2401073C8(a1, &qword_256FB8510, sub_24013EF58);
}

BOOL _s23IntelligentTrackingCore11DKImageCropC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  id v7;
  char v8;

  v4 = *(void **)(a1 + 16);
  v5 = *(void **)(a2 + 16);
  if (v4)
  {
    if (v5)
    {
      type metadata accessor for CVBuffer(0);
      sub_240107DC0();
      v6 = v5;
      v7 = v4;
      v8 = sub_2401543A0();

      if ((v8 & 1) != 0)
        return CGRectEqualToRect(*(CGRect *)(a1 + 24), *(CGRect *)(a2 + 24));
    }
  }
  else if (!v5)
  {
    return CGRectEqualToRect(*(CGRect *)(a1 + 24), *(CGRect *)(a2 + 24));
  }
  return 0;
}

unint64_t sub_240107280(uint64_t a1)
{
  return sub_24010783C(a1, &qword_256FB8448, sub_24013F0E0);
}

unint64_t sub_240107294(uint64_t a1)
{
  return sub_2401072D0(a1, &qword_256FB8500, sub_24013F0E0);
}

unint64_t sub_2401072A8(uint64_t a1)
{
  return sub_2401073C8(a1, &qword_256FB8508, sub_24013EF58);
}

unint64_t sub_2401072BC(uint64_t a1)
{
  return sub_2401072D0(a1, &qword_256FB84F0, sub_24013F0E0);
}

unint64_t sub_2401072D0(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  _OWORD *i;
  unsigned __int8 v8;
  unint64_t result;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  __int128 v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v6 = (_QWORD *)sub_240154D54();
    for (i = (_OWORD *)(a1 + 40); ; i = (_OWORD *)((char *)i + 24))
    {
      v8 = *((_BYTE *)i - 8);
      v14 = *i;
      result = a3(v8);
      if ((v10 & 1) != 0)
        break;
      *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v6[6] + result) = v8;
      *(_OWORD *)(v6[7] + 16 * result) = v14;
      v11 = v6[2];
      v12 = __OFADD__(v11, 1);
      v13 = v11 + 1;
      if (v12)
        goto LABEL_10;
      v6[2] = v13;
      if (!--v3)
        return (unint64_t)v6;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2401073B4(uint64_t a1)
{
  return sub_2401073C8(a1, &qword_256FB84F8, sub_24013EF58);
}

unint64_t sub_2401073C8(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)sub_240154D54();
  LOBYTE(v7) = *(_BYTE *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  result = a3(v7);
  if ((v10 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v6;
  }
  v11 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v6[6] + result) = v7;
    *(_QWORD *)(v6[7] + 8 * result) = v8;
    v12 = v6[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v6[2] = v14;
    if (!--v3)
      goto LABEL_8;
    v15 = v11 + 2;
    v7 = *((unsigned __int8 *)v11 - 8);
    v16 = *v11;
    swift_bridgeObjectRetain();
    result = a3(v7);
    v11 = v15;
    v8 = v16;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2401074D0(uint64_t a1)
{
  return sub_2401073C8(a1, &qword_256FB8520, sub_24013F0E0);
}

unint64_t sub_2401074E4(uint64_t a1)
{
  return sub_2401073C8(a1, &qword_256FB8518, sub_24013F0E0);
}

unint64_t sub_2401074F8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _OWORD *i;
  unsigned __int8 v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  __int128 v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBD758);
    v3 = (_QWORD *)sub_240154D54();
    for (i = (_OWORD *)(a1 + 40); ; i = (_OWORD *)((char *)i + 24))
    {
      v5 = *((_BYTE *)i - 8);
      v11 = *i;
      result = sub_24013EF58(v5);
      if ((v7 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v3[6] + result) = v5;
      *(_OWORD *)(v3[7] + 16 * result) = v11;
      v8 = v3[2];
      v9 = __OFADD__(v8, 1);
      v10 = v8 + 1;
      if (v9)
        goto LABEL_10;
      v3[2] = v10;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_2401075D4(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char v15;

  v1 = a1[2];
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84C8);
  v3 = (_QWORD *)sub_240154D54();
  v5 = a1[4];
  v4 = a1[5];
  result = sub_24013EF5C(v5);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  v8 = a1 + 7;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v9 = 8 * result;
    *(_QWORD *)(v3[6] + v9) = v5;
    *(_QWORD *)(v3[7] + v9) = v4;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 2;
    v5 = *(v8 - 1);
    v14 = *v8;
    swift_retain();
    result = sub_24013EF5C(v5);
    v8 = v13;
    v4 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_2401076D0(uint64_t a1)
{
  return sub_24010783C(a1, &qword_256FB8488, sub_24013F0E0);
}

unint64_t sub_2401076E4(uint64_t a1)
{
  return sub_240107720(a1, &qword_256FB8490, sub_24013F0E0);
}

unint64_t sub_2401076F8(uint64_t a1)
{
  return sub_240107720(a1, &qword_256FB8480, sub_24013F0E0);
}

unint64_t sub_24010770C(uint64_t a1)
{
  return sub_240107720(a1, &qword_256FB8450, sub_24013F0E0);
}

unint64_t sub_240107720(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char v17;

  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v6 = (_QWORD *)sub_240154D54();
  LOBYTE(v7) = *(_BYTE *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  result = a3(v7);
  if ((v10 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v6;
  }
  v11 = (uint64_t *)(a1 + 56);
  while (1)
  {
    *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_BYTE *)(v6[6] + result) = v7;
    *(_QWORD *)(v6[7] + 8 * result) = v8;
    v12 = v6[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      break;
    v6[2] = v14;
    if (!--v3)
      goto LABEL_8;
    v15 = v11 + 2;
    v7 = *((unsigned __int8 *)v11 - 8);
    v16 = *v11;
    swift_retain();
    result = a3(v7);
    v11 = v15;
    v8 = v16;
    if ((v17 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_240107828(uint64_t a1)
{
  return sub_24010783C(a1, &qword_256FB8478, sub_24013F0E0);
}

unint64_t sub_24010783C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  _QWORD *i;
  unsigned __int8 v8;
  uint64_t v9;
  unint64_t result;
  char v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v6 = (_QWORD *)sub_240154D54();
    for (i = (_QWORD *)(a1 + 40); ; i += 2)
    {
      v8 = *((_BYTE *)i - 8);
      v9 = *i;
      result = a3(v8);
      if ((v11 & 1) != 0)
        break;
      *(_QWORD *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_BYTE *)(v6[6] + result) = v8;
      *(_QWORD *)(v6[7] + 8 * result) = v9;
      v12 = v6[2];
      v13 = __OFADD__(v12, 1);
      v14 = v12 + 1;
      if (v13)
        goto LABEL_10;
      v6[2] = v14;
      if (!--v3)
        return (unint64_t)v6;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_240107918(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  __int128 v16;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4B00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84E8);
  v3 = (_QWORD *)sub_240154D54();
  v4 = *(_QWORD *)(a1 + 32);
  v16 = *(_OWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 56);
  result = sub_24013EF5C(v4);
  if ((v7 & 1) != 0)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  v8 = a1 + 64;
  while (1)
  {
    *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_QWORD *)(v3[6] + 8 * result) = v4;
    v9 = v3[7] + 24 * result;
    *(_OWORD *)v9 = v16;
    *(_QWORD *)(v9 + 16) = v5;
    v10 = v3[2];
    v11 = __OFADD__(v10, 1);
    v12 = v10 + 1;
    if (v11)
      break;
    v3[2] = v12;
    if (!--v1)
      goto LABEL_8;
    v13 = v8 + 32;
    v4 = *(_QWORD *)v8;
    v16 = *(_OWORD *)(v8 + 8);
    v14 = *(_QWORD *)(v8 + 24);
    swift_bridgeObjectRetain();
    result = sub_24013EF5C(v4);
    v8 = v13;
    v5 = v14;
    if ((v15 & 1) != 0)
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

unint64_t sub_240107A48(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84D8);
    v3 = (_QWORD *)sub_240154D54();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_24013EF5C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

unint64_t sub_240107B20(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t *i;
  uint64_t v5;
  uint64_t v6;
  unint64_t result;
  char v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84E0);
    v3 = (_QWORD *)sub_240154D54();
    for (i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      v5 = *(i - 1);
      v6 = *i;
      result = sub_24013EF5C(v5);
      if ((v8 & 1) != 0)
        break;
      *(_QWORD *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      v9 = 8 * result;
      *(_QWORD *)(v3[6] + v9) = v5;
      *(_QWORD *)(v3[7] + v9) = v6;
      v10 = v3[2];
      v11 = __OFADD__(v10, 1);
      v12 = v10 + 1;
      if (v11)
        goto LABEL_10;
      v3[2] = v12;
      if (!--v1)
        return (unint64_t)v3;
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4B00];
  }
  return result;
}

id sub_240107BF4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*(_QWORD *)a1 + 16);
  *a2 = v2;
  return v2;
}

void sub_240107C04(void **a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*(_QWORD *)a2 + 16);
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  v3 = v2;

}

uint64_t sub_240107C38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_240107C48(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 56) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DKImageCrop()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKImageCrop()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKImageCrop.sourceImage.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKImageCrop.sourceImage.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKImageCrop.sourceImage.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKImageCrop.cropCache.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKImageCrop.cropCache.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKImageCrop.cropCache.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKImageCrop.__allocating_init(sourceImage:rect:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DKImageCrop.originalCrop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKImageCrop.resize(w:h:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKImageCrop.resize(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKImageCrop.resizeInto(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKImageCrop.hasCrop(w:h:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKImageCrop.numCrops()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKImageCrop.freeze()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKImageCrop.sizeToKey(_:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKImageCrop.makeCropForKey(key:width:height:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

_OWORD *sub_240107DB0(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_240107DC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FBD738;
  if (!qword_256FBD738)
  {
    type metadata accessor for CVBuffer(255);
    result = MEMORY[0x24267E0BC](&unk_240155FC0, v1);
    atomic_store(result, (unint64_t *)&qword_256FBD738);
  }
  return result;
}

unint64_t sub_240107E08(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  unint64_t v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  v3 = *(_QWORD *)(a1 + 32);
  v4 = v1 - 1;
  if (v1 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    for (i = a1 + 72; ; i += 24)
    {
      v6 = *(_QWORD *)(i - 16);
      swift_bridgeObjectRetain();
      sub_240107F38(v3);
      v8 = v7;
      sub_240107F38(v6);
      if (v8 == v9)
      {
        sub_2401081F4(v3);
        v11 = v10;
        sub_2401081F4(v6);
        if (v11 >= v12)
          goto LABEL_7;
      }
      else
      {
        sub_240107F38(v3);
        v14 = v13;
        sub_240107F38(v6);
        if (v14 >= v15)
          goto LABEL_7;
      }
      v3 = v6;
LABEL_7:
      swift_bridgeObjectRelease();
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
  }
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_240107F38(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  double v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  double v22;
  uint64_t v23;

  if (!(a1 >> 62))
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2)
      goto LABEL_3;
LABEL_30:
    swift_bridgeObjectRelease();
    v4 = MEMORY[0x24BEE4AF8];
    v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v15)
      return swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  swift_bridgeObjectRetain();
  v2 = sub_240154D30();
  if (!v2)
    goto LABEL_30;
LABEL_3:
  v23 = MEMORY[0x24BEE4AF8];
  result = sub_2400E5724(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v23;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v6 = *(_QWORD *)(*(_QWORD *)(MEMORY[0x24267D4E0](i, a1)
                                   + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                       + 16);
        swift_unknownObjectRelease();
        if (fabs((double)v6) >= 0.00001)
          v7 = (double)v6;
        else
          v7 = dbl_24015DB10[v6 > 0];
        v9 = *(_QWORD *)(v23 + 16);
        v8 = *(_QWORD *)(v23 + 24);
        if (v9 >= v8 >> 1)
          sub_2400E5724(v8 > 1, v9 + 1, 1);
        *(_QWORD *)(v23 + 16) = v9 + 1;
        *(double *)(v23 + 8 * v9 + 32) = 1.0 / v7;
      }
    }
    else
    {
      v10 = 0;
      v11 = *(_QWORD *)(v23 + 16);
      do
      {
        v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8 * v10 + 32)
                                    + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                        + 16);
        if (fabs((double)v12) >= 0.00001)
          v13 = (double)v12;
        else
          v13 = dbl_24015DB10[v12 > 0];
        v14 = *(_QWORD *)(v23 + 24);
        if (v11 >= v14 >> 1)
          sub_2400E5724(v14 > 1, v11 + 1, 1);
        ++v10;
        *(_QWORD *)(v23 + 16) = v11 + 1;
        *(double *)(v23 + 8 * v11++ + 32) = 1.0 / v13;
      }
      while (v2 != v10);
    }
    swift_bridgeObjectRelease();
    v15 = *(_QWORD *)(v23 + 16);
    if (!v15)
      return swift_bridgeObjectRelease();
LABEL_21:
    if (v15 == 1)
    {
      v16 = 0;
      v17 = 0.0;
    }
    else
    {
      v16 = v15 & 0x7FFFFFFFFFFFFFFELL;
      v18 = (double *)(v4 + 40);
      v17 = 0.0;
      v19 = v15 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v17 = v17 + *(v18 - 1) + *v18;
        v18 += 2;
        v19 -= 2;
      }
      while (v19);
      if (v15 == v16)
        return swift_bridgeObjectRelease();
    }
    v20 = v15 - v16;
    v21 = (double *)(v4 + 8 * v16 + 32);
    do
    {
      v22 = *v21++;
      v17 = v17 + v22;
      --v20;
    }
    while (v20);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_2401081F4(unint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t i;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64x2_t v19;
  int64x2_t *v20;
  unint64_t v21;
  int64x2_t v22;
  int8x16_t v23;
  uint64_t v24;
  unint64_t v25;
  int64_t *v26;
  int64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t j;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  double v42;
  double *v43;
  uint64_t v44;
  uint64_t v45;
  double *v46;
  double v47;
  uint64_t v48;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v3 = sub_240154D30();
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v4 = MEMORY[0x24BEE4AF8];
  if (!v3)
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
    v11 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (v11)
      goto LABEL_18;
LABEL_12:
    v12 = 1;
    goto LABEL_28;
  }
  v48 = MEMORY[0x24BEE4AF8];
  result = sub_2400E5740(0, v3 & ~(v3 >> 63), 0);
  if (v3 < 0)
  {
    __break(1u);
    goto LABEL_68;
  }
  v6 = v48;
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v3; ++i)
    {
      v8 = *(_QWORD *)(*(_QWORD *)(MEMORY[0x24267D4E0](i, a1)
                                 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                     + 16);
      swift_unknownObjectRelease();
      v10 = *(_QWORD *)(v48 + 16);
      v9 = *(_QWORD *)(v48 + 24);
      if (v10 >= v9 >> 1)
        sub_2400E5740(v9 > 1, v10 + 1, 1);
      *(_QWORD *)(v48 + 16) = v10 + 1;
      *(_QWORD *)(v48 + 8 * v10 + 32) = v8;
    }
  }
  else
  {
    v13 = 0;
    v14 = *(_QWORD *)(v48 + 16);
    do
    {
      v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8 * v13 + 32)
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                      + 16);
      v16 = *(_QWORD *)(v48 + 24);
      if (v14 >= v16 >> 1)
        sub_2400E5740(v16 > 1, v14 + 1, 1);
      ++v13;
      *(_QWORD *)(v48 + 16) = v14 + 1;
      *(_QWORD *)(v48 + 8 * v14++ + 32) = v15;
    }
    while (v3 != v13);
  }
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v48 + 16);
  if (!v11)
    goto LABEL_12;
LABEL_18:
  v12 = *(_QWORD *)(v6 + 32);
  v17 = v11 - 1;
  if (v11 == 1)
    goto LABEL_28;
  if (v11 >= 5)
  {
    v18 = v17 & 0xFFFFFFFFFFFFFFFCLL | 1;
    v19 = vdupq_n_s64(v12);
    v20 = (int64x2_t *)(v6 + 56);
    v21 = v17 & 0xFFFFFFFFFFFFFFFCLL;
    v22 = v19;
    do
    {
      v19 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v19, v20[-1]), (int8x16_t)v20[-1], (int8x16_t)v19);
      v22 = (int64x2_t)vbslq_s8((int8x16_t)vcgtq_s64(v22, *v20), *(int8x16_t *)v20, (int8x16_t)v22);
      v20 += 2;
      v21 -= 4;
    }
    while (v21);
    v23 = vbslq_s8((int8x16_t)vcgtq_s64(v22, v19), (int8x16_t)v19, (int8x16_t)v22);
    v24 = vextq_s8(v23, v23, 8uLL).u64[0];
    v12 = (int64_t)vbsl_s8((int8x8_t)vcgtd_s64(v24, v23.i64[0]), *(int8x8_t *)v23.i8, (int8x8_t)v24);
    if (v17 == (v17 & 0xFFFFFFFFFFFFFFFCLL))
      goto LABEL_28;
  }
  else
  {
    v18 = 1;
  }
  v25 = v11 - v18;
  v26 = (int64_t *)(v6 + 8 * v18 + 32);
  do
  {
    v28 = *v26++;
    v27 = v28;
    if (v28 < v12)
      v12 = v27;
    --v25;
  }
  while (v25);
LABEL_28:
  swift_bridgeObjectRelease();
  if (v2)
  {
    swift_bridgeObjectRetain();
    result = sub_240154D30();
    v29 = result;
    if (!result)
      goto LABEL_43;
  }
  else
  {
    v29 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v29)
      goto LABEL_43;
  }
  if (v29 < 1)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (j = 0; j != v29; ++j)
    {
      if (*(_QWORD *)(*(_QWORD *)(MEMORY[0x24267D4E0](j, a1)
                                 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                     + 16) == v12)
      {
        sub_240154BE0();
        sub_240154C10();
        sub_240154C1C();
        sub_240154BEC();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    v31 = 0;
    v32 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
    do
    {
      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8 * v31 + 32) + v32) + 16) == v12)
      {
        swift_retain();
        sub_240154BE0();
        sub_240154C10();
        sub_240154C1C();
        sub_240154BEC();
        v32 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
      }
      ++v31;
    }
    while (v29 != v31);
  }
LABEL_43:
  swift_bridgeObjectRelease();
  if ((v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    v33 = *(_QWORD *)(v4 + 16);
    if (v33)
      goto LABEL_46;
LABEL_65:
    swift_release();
    v35 = MEMORY[0x24BEE4AF8];
    v40 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v40)
      return swift_bridgeObjectRelease();
    goto LABEL_55;
  }
  swift_bridgeObjectRetain();
  v33 = sub_240154D30();
  swift_release();
  if (!v33)
    goto LABEL_65;
LABEL_46:
  result = sub_2400E5724(0, v33 & ~(v33 >> 63), 0);
  if ((v33 & 0x8000000000000000) == 0)
  {
    v34 = 0;
    v35 = v4;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
        v36 = MEMORY[0x24267D4E0](v34, v4);
      else
        v36 = swift_retain();
      v37 = *(_QWORD *)(*(_QWORD *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                      + 24);
      swift_release();
      v39 = *(_QWORD *)(v4 + 16);
      v38 = *(_QWORD *)(v4 + 24);
      if (v39 >= v38 >> 1)
        sub_2400E5724(v38 > 1, v39 + 1, 1);
      ++v34;
      *(_QWORD *)(v4 + 16) = v39 + 1;
      *(_QWORD *)(v4 + 8 * v39 + 32) = v37;
    }
    while (v33 != v34);
    swift_release();
    v40 = *(_QWORD *)(v4 + 16);
    if (!v40)
      return swift_bridgeObjectRelease();
LABEL_55:
    if (v40 == 1)
    {
      v41 = 0;
      v42 = 0.0;
    }
    else
    {
      v41 = v40 & 0x7FFFFFFFFFFFFFFELL;
      v43 = (double *)(v35 + 40);
      v42 = 0.0;
      v44 = v40 & 0x7FFFFFFFFFFFFFFELL;
      do
      {
        v42 = v42 + *(v43 - 1) + *v43;
        v43 += 2;
        v44 -= 2;
      }
      while (v44);
      if (v40 == v41)
        return swift_bridgeObjectRelease();
    }
    v45 = v40 - v41;
    v46 = (double *)(v35 + 8 * v41 + 32);
    do
    {
      v47 = *v46++;
      v42 = v42 + v47;
      --v45;
    }
    while (v45);
    return swift_bridgeObjectRelease();
  }
LABEL_69:
  __break(1u);
  return result;
}

BOOL sub_24010872C(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v2 = *a1;
  v3 = *a2;
  sub_240107F38(*a1);
  v5 = v4;
  sub_240107F38(v3);
  if (v5 == v6)
  {
    sub_2401081F4(v2);
    v8 = v7;
    sub_2401081F4(v3);
  }
  else
  {
    sub_240107F38(v2);
    v8 = v10;
    sub_240107F38(v3);
  }
  return v8 < v9;
}

BOOL sub_2401087A0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v2 = *a1;
  v3 = *a2;
  sub_240107F38(*a2);
  v5 = v4;
  sub_240107F38(v2);
  if (v5 == v6)
  {
    sub_2401081F4(v3);
    v8 = v7;
    sub_2401081F4(v2);
  }
  else
  {
    sub_240107F38(v3);
    v8 = v10;
    sub_240107F38(v2);
  }
  return v8 >= v9;
}

BOOL sub_240108818(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v2 = *a1;
  v3 = *a2;
  sub_240107F38(*a1);
  v5 = v4;
  sub_240107F38(v3);
  if (v5 == v6)
  {
    sub_2401081F4(v2);
    v8 = v7;
    sub_2401081F4(v3);
  }
  else
  {
    sub_240107F38(v2);
    v8 = v10;
    sub_240107F38(v3);
  }
  return v8 >= v9;
}

BOOL sub_240108890(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v2 = *a1;
  v3 = *a2;
  sub_240107F38(*a2);
  v5 = v4;
  sub_240107F38(v2);
  if (v5 == v6)
  {
    sub_2401081F4(v3);
    v8 = v7;
    sub_2401081F4(v2);
  }
  else
  {
    sub_240107F38(v3);
    v8 = v10;
    sub_240107F38(v2);
  }
  return v8 < v9;
}

BOOL sub_240108904(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  double v3;
  double v4;
  double v5;

  v2 = *a2;
  sub_240107F38(*a1);
  v4 = v3;
  sub_240107F38(v2);
  return v4 == v5;
}

unint64_t sub_240108944(unint64_t a1, double a2, double a3)
{
  uint64_t v6;
  double v7;
  double v8;
  os_log_type_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;

  v6 = sub_24010A4C0(a1);
  if (v8 > a3 || v7 > a2)
  {
    v14 = 3;
    sub_240154B38();
    swift_bridgeObjectRelease();
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_240154D30();
      swift_bridgeObjectRelease();
    }
    sub_240154EBC();
    sub_2401546D0();
    swift_bridgeObjectRelease();
    v10 = sub_240154940();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v14, 0xD00000000000001ELL, 0x80000002401647B0, v10);
    swift_bridgeObjectRelease();
    v11 = sub_240108ABC(a1, 2, 20, 0.1);
    v12 = sub_240107E08(v11);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = v6;
    swift_bridgeObjectRetain();
  }
  return v12;
}

uint64_t sub_240108ABC(unint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  unint64_t v18;
  unint64_t v19;
  CGFloat *v20;
  double *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  CGRect *v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  double *v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  double v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  BOOL v49;
  int64_t v50;
  _QWORD *v51;
  CGRect *v52;
  double *v53;
  double v54;
  double v55;
  double v56;
  _BOOL4 v57;
  double MidX;
  double MidY;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  unint64_t v63;
  double v64;
  double v65;
  unint64_t v66;
  _QWORD *v67;
  unint64_t v68;
  _QWORD *v69;
  unint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  double v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  double v80;
  double v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  CGFloat v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  CGFloat v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  double v101;
  double v102;
  char isUniquelyReferenced_nonNull_native;
  double v104;
  double *v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  double v109;
  uint64_t v110;
  float64x2_t *v111;
  float64x2_t *v112;
  unint64_t v113;
  float64x2_t v114;
  float64x2_t v115;
  float64x2_t v116;
  float64x2_t v117;
  float64x2_t v118;
  float64x2_t v119;
  float64x2_t v120;
  float64x2_t v121;
  float64x2_t v122;
  float64x2_t v123;
  float64x2_t v124;
  float64x2_t v125;
  float64x2_t v126;
  float64x2_t v127;
  float64x2_t v128;
  float64x2_t v129;
  float64x2_t v130;
  float64x2_t v131;
  float64x2_t v132;
  float64x2_t v133;
  float64x2_t v134;
  float64x2_t v135;
  float64x2_t v136;
  float64x2_t v137;
  float64x2_t v138;
  unint64_t v139;
  uint64_t v140;
  _OWORD *v141;
  _OWORD *v142;
  float64x2_t v143;
  float64x2_t v144;
  float64x2_t v145;
  float64x2_t v146;
  _QWORD *v147;
  unint64_t v148;
  os_log_type_t v149;
  uint64_t v150;
  uint64_t result;
  uint64_t __len;
  uint64_t v153;
  uint64_t v155;
  _QWORD *v156;
  unint64_t v157;
  _QWORD *v158;
  double *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _QWORD *v163;
  _QWORD *v164;
  unint64_t v165;
  char v166;
  uint64_t v167;
  CGRect v168;

  v7 = (_QWORD *)(a1 >> 62);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (v9 < a2)
      return MEMORY[0x24BEE4AF8];
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10) < a2)
  {
    return MEMORY[0x24BEE4AF8];
  }
  v153 = a2;
  swift_retain();
  v157 = a1;
  v10 = (_QWORD *)sub_24010A310(a1);
  swift_release();
  v164 = v10;
  swift_bridgeObjectRetain();
  sub_240109944(&v164);
  v163 = v7;
  swift_bridgeObjectRelease();
  v11 = (unint64_t)v164;
  v167 = MEMORY[0x24BEE4B08];
  v12 = v164[2];
  v13 = (unint64_t)&unk_24015D000;
  if (!v12)
  {
    swift_release();
    v16 = MEMORY[0x24BEE4AF8];
    v11 = a2;
    if (a2 < 0)
      goto LABEL_38;
LABEL_27:
    if (*(_QWORD *)(v16 + 16) < v11)
      goto LABEL_160;
    sub_240154F10();
    swift_unknownObjectRetain_n();
    v39 = swift_dynamicCastClass();
    if (!v39)
    {
      swift_bridgeObjectRelease();
      v39 = MEMORY[0x24BEE4AF8];
    }
    v40 = *(double **)(v39 + 16);
    swift_release();
    if (v40 == (double *)v11)
    {
      v41 = swift_dynamicCastClass();
      if (!v41)
      {
        swift_bridgeObjectRelease();
        v41 = MEMORY[0x24BEE4AF8];
      }
    }
    else
    {
LABEL_161:
      swift_bridgeObjectRelease();
      v41 = sub_240140004(v16, v16 + 32, 0, (2 * v11) | 1);
    }
    swift_bridgeObjectRelease();
    v42 = a3;
    if (a3 < 0)
    {
      __break(1u);
      result = swift_release();
      __break(1u);
      return result;
    }
    v43 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (!a3)
      goto LABEL_148;
    if (v163)
    {
      swift_bridgeObjectRetain();
      v161 = sub_240154D30();
      swift_bridgeObjectRelease();
      v42 = a3;
    }
    else
    {
      v161 = *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v44 = 0;
    __len = 8 * v11 - 8;
    v11 = (unint64_t)dbl_24015DB10;
    v45 = *(double *)(v13 + 2848);
    v13 = (unint64_t)v43;
    while (1)
    {
      if (v44 == v42)
        goto LABEL_158;
      v155 = v44;
      if (v153)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E68);
        v46 = (_QWORD *)sub_2401547FC();
        v47 = v46;
        v46[2] = v153;
        v46[4] = v43;
        if (v153 != 1)
          memset_pattern16(v46 + 5, &unk_251069340, __len);
      }
      else
      {
        v47 = v43;
      }
      swift_bridgeObjectRelease();
      v162 = v41;
      if (v161)
      {
        swift_bridgeObjectRetain();
        v16 = 0;
        v159 = (double *)(v41 + 48);
        while (1)
        {
          if ((v157 & 0xC000000000000001) != 0)
          {
            v48 = MEMORY[0x24267D4E0](v16, v157);
            v49 = __OFADD__(v16++, 1);
            if (v49)
              goto LABEL_150;
          }
          else
          {
            if ((unint64_t)v16 >= *(_QWORD *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_155;
            v48 = *(_QWORD *)(v157 + 32 + 8 * v16);
            swift_retain();
            v49 = __OFADD__(v16++, 1);
            if (v49)
            {
LABEL_150:
              __break(1u);
LABEL_151:
              __break(1u);
LABEL_152:
              __break(1u);
LABEL_153:
              __break(1u);
LABEL_154:
              __break(1u);
LABEL_155:
              __break(1u);
LABEL_156:
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
              goto LABEL_161;
            }
          }
          v163 = v47;
          v50 = *(_QWORD *)(v41 + 16);
          if (v50)
          {
            v164 = v43;
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            sub_2400E5724(0, v50, 0);
            v51 = v164;
            v52 = (CGRect *)(v48 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
            v53 = v159;
            do
            {
              v55 = *(v53 - 2);
              v54 = *(v53 - 1);
              v56 = *v53;
              v57 = *v53 > 0.0;
              MidX = CGRectGetMidX(*v52);
              MidY = CGRectGetMidY(*v52);
              if (fabs(v56) < v45)
                v56 = dbl_24015DB10[v57];
              v164 = v51;
              v61 = v51[2];
              v60 = v51[3];
              if (v61 >= v60 >> 1)
              {
                sub_2400E5724(v60 > 1, v61 + 1, 1);
                v51 = v164;
              }
              v51[2] = v61 + 1;
              *(double *)&v51[v61 + 4] = sqrt((v55 - MidX) * (v55 - MidX) + (v54 - MidY) * (v54 - MidY)) / v56;
              v53 += 3;
              --v50;
            }
            while (v50);
            v41 = v162;
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            v43 = (_QWORD *)MEMORY[0x24BEE4AF8];
          }
          else
          {
            v51 = v43;
          }
          v62 = v51[2];
          v47 = v163;
          if (v62)
          {
            v13 = 0;
            v63 = 0;
            v64 = INFINITY;
            do
            {
              v65 = *(double *)&v51[v63 + 4];
              if (v65 < v64)
                v13 = v63;
              v66 = v63 + 1;
              if (v65 < v64)
                v64 = *(double *)&v51[v63 + 4];
              ++v63;
            }
            while (v62 != v66);
            swift_bridgeObjectRelease();
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
LABEL_80:
              v47 = sub_24014CDE0(v163);
              if ((v13 & 0x8000000000000000) != 0)
                goto LABEL_151;
              goto LABEL_75;
            }
            if ((v13 & 0x8000000000000000) != 0)
              goto LABEL_151;
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_retain();
            v13 = 0;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              goto LABEL_80;
          }
LABEL_75:
          if (v13 >= v47[2])
            goto LABEL_152;
          v67 = &v47[v13];
          MEMORY[0x24267D0CC]();
          v13 = *(_QWORD *)((v67[4] & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v13 >= *(_QWORD *)((v67[4] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2401547D8();
          sub_240154814();
          sub_2401547B4();
          swift_release();
          if (v16 == v161)
          {
            swift_bridgeObjectRelease();
            break;
          }
        }
      }
      v13 = (unint64_t)v47;
      v160 = v47[2];
      if (v160)
        break;
      swift_bridgeObjectRetain();
      v69 = (_QWORD *)v41;
LABEL_133:
      v107 = *(_QWORD *)(v41 + 16);
      if (v107)
      {
        if (v107 > v69[2])
          goto LABEL_159;
        if (v107 >= 5)
        {
          v110 = *(_QWORD *)(v41 + 16) & 3;
          if ((v107 & 3) == 0)
            v110 = 4;
          v108 = v107 - v110;
          v111 = (float64x2_t *)(v41 + 80);
          v112 = (float64x2_t *)(v69 + 10);
          v109 = 0.0;
          v113 = v108;
          do
          {
            v115 = v111[-2];
            v114 = v111[-1];
            v116 = v111[-3];
            v118 = v111[1];
            v117 = v111[2];
            v119 = *v111;
            v111 += 6;
            v120 = v119;
            v122 = v112[-2];
            v121 = v112[-1];
            v123 = v112[-3];
            v125 = v112[1];
            v124 = v112[2];
            v126 = *v112;
            v112 += 6;
            v127 = vsubq_f64(v116, v123);
            v128 = vsubq_f64(v115, v122);
            v129 = vsubq_f64(v114, v121);
            v130 = vsubq_f64(v120, v126);
            v131 = vsubq_f64(v118, v125);
            v132 = vsubq_f64(v117, v124);
            v133 = vmulq_f64(v127, v127);
            v134 = vmulq_f64(v130, v130);
            v135 = (float64x2_t)vextq_s8((int8x16_t)v133, (int8x16_t)vmulq_f64(v129, v129), 8uLL);
            v133.f64[1] = vmulq_f64(v128, v128).f64[1];
            v136 = (float64x2_t)vextq_s8((int8x16_t)v134, (int8x16_t)vmulq_f64(v132, v132), 8uLL);
            v134.f64[1] = vmulq_f64(v131, v131).f64[1];
            v137 = vsqrtq_f64(vaddq_f64(v133, v135));
            v138 = vsqrtq_f64(vaddq_f64(v134, v136));
            v109 = v109 + v137.f64[0] + v137.f64[1] + v138.f64[0] + v138.f64[1];
            v113 -= 4;
          }
          while (v113);
        }
        else
        {
          v108 = 0;
          v109 = 0.0;
        }
        v139 = v107 - v108;
        v140 = 24 * v108;
        v141 = &v69[3 * v108 + 4];
        v142 = (_OWORD *)(v41 + v140 + 32);
        do
        {
          v143 = *(float64x2_t *)v142;
          v142 = (_OWORD *)((char *)v142 + 24);
          v144 = v143;
          v145 = *(float64x2_t *)v141;
          v141 = (_OWORD *)((char *)v141 + 24);
          v146 = vsubq_f64(v144, v145);
          v109 = v109 + sqrt(vaddvq_f64(vmulq_f64(v146, v146)));
          --v139;
        }
        while (v139);
      }
      else
      {
        v109 = 0.0;
      }
      v166 = 3;
      v164 = 0;
      v165 = 0xE000000000000000;
      sub_240154B38();
      sub_2401546D0();
      sub_2401548C8();
      v147 = v164;
      v148 = v165;
      v149 = sub_240154940();
      _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v166, (uint64_t)v147, v148, v149);
      swift_bridgeObjectRelease();
      if (v109 < a4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_148;
      }
      v16 = (uint64_t)v69;
      swift_bridgeObjectRelease();
      v44 = v155 + 1;
      v41 = (uint64_t)v69;
      v42 = a3;
      if (v155 + 1 == a3)
        goto LABEL_148;
    }
    v158 = v47 + 4;
    swift_bridgeObjectRetain();
    v68 = 0;
    v69 = (_QWORD *)v41;
    v156 = v47;
    while (1)
    {
      if (v68 >= *(_QWORD *)(v13 + 16))
        goto LABEL_153;
      v70 = v158[v68];
      if (v70 >> 62)
      {
        swift_bridgeObjectRetain();
        v16 = sub_240154D30();
        if (v16 >= 1)
        {
LABEL_88:
          v163 = v69;
          v164 = v43;
          sub_2400E5724(0, v16, 0);
          v71 = 0;
          v72 = v164;
          v73 = v70 & 0xC000000000000001;
          do
          {
            if (v73)
              v74 = MEMORY[0x24267D4E0](v71, v70);
            else
              v74 = swift_retain();
            v75 = *(_QWORD *)(*(_QWORD *)(v74
                                        + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                            + 16);
            swift_release();
            if (fabs((double)v75) >= v45)
              v76 = (double)v75;
            else
              v76 = dbl_24015DB10[v75 > 0];
            v164 = v72;
            v78 = v72[2];
            v77 = v72[3];
            if (v78 >= v77 >> 1)
            {
              sub_2400E5724(v77 > 1, v78 + 1, 1);
              v72 = v164;
            }
            ++v71;
            v72[2] = v78 + 1;
            *(double *)&v72[v78 + 4] = 1.0 / v76;
          }
          while (v16 != v71);
          v79 = 0;
          v80 = 0.0;
          do
          {
            v81 = *(double *)&v72[v79++ + 4];
            v80 = v80 + v81;
          }
          while (v78 + 1 != v79);
          swift_bridgeObjectRelease();
          v164 = (_QWORD *)MEMORY[0x24BEE4AF8];
          sub_2400E5724(0, v16, 0);
          v82 = 0;
          v83 = v164;
          do
          {
            if (v73)
            {
              v84 = MEMORY[0x24267D4E0](v82, v70);
            }
            else
            {
              v84 = *(_QWORD *)(v70 + 8 * v82 + 32);
              swift_retain();
            }
            v85 = CGRectGetMidX(*(CGRect *)(v84 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
            swift_release();
            v164 = v83;
            v87 = v83[2];
            v86 = v83[3];
            if (v87 >= v86 >> 1)
            {
              sub_2400E5724(v86 > 1, v87 + 1, 1);
              v83 = v164;
            }
            ++v82;
            v83[2] = v87 + 1;
            *(CGFloat *)&v83[v87 + 4] = v85;
          }
          while (v16 != v82);
          v88 = 0;
          v89 = 0.0;
          do
          {
            v90 = *(double *)&v83[v88++ + 4];
            v89 = v89 + v90;
          }
          while (v87 + 1 != v88);
          swift_bridgeObjectRelease();
          v91 = fabs((double)v16);
          if (v91 >= v45)
            v92 = (double)v16;
          else
            v92 = v45;
          v93 = v89 / v92;
          v164 = (_QWORD *)MEMORY[0x24BEE4AF8];
          sub_2400E5724(0, v16, 0);
          v94 = 0;
          v95 = v164;
          do
          {
            if (v73)
            {
              v96 = MEMORY[0x24267D4E0](v94, v70);
            }
            else
            {
              v96 = *(_QWORD *)(v70 + 8 * v94 + 32);
              swift_retain();
            }
            v97 = CGRectGetMidY(*(CGRect *)(v96 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
            swift_release();
            v164 = v95;
            v99 = v95[2];
            v98 = v95[3];
            if (v99 >= v98 >> 1)
            {
              sub_2400E5724(v98 > 1, v99 + 1, 1);
              v95 = v164;
            }
            ++v94;
            v95[2] = v99 + 1;
            *(CGFloat *)&v95[v99 + 4] = v97;
          }
          while (v16 != v94);
          v100 = 0;
          v101 = 0.0;
          do
          {
            v102 = *(double *)&v95[v100++ + 4];
            v101 = v101 + v102;
          }
          while (v99 + 1 != v100);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v69 = v163;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v41 = v162;
          v43 = (_QWORD *)MEMORY[0x24BEE4AF8];
          v13 = (unint64_t)v156;
          if (v91 >= v45)
          {
            v104 = v101 / (double)v16;
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
              goto LABEL_123;
          }
          else
          {
            v104 = v101 / v45;
            if ((isUniquelyReferenced_nonNull_native & 1) != 0)
            {
LABEL_123:
              if (v68 >= v69[2])
                goto LABEL_154;
              v105 = (double *)&v69[3 * v68];
              v105[4] = v93;
              v105[5] = v104;
              v105[6] = v80;
              goto LABEL_84;
            }
          }
          v69 = sub_24014CDCC(v163);
          goto LABEL_123;
        }
      }
      else
      {
        v16 = *(_QWORD *)((v70 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v16 >= 1)
          goto LABEL_88;
      }
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v69 = sub_24014CDCC(v69);
      if (v68 >= v69[2])
        goto LABEL_156;
      v106 = &v69[3 * v68];
      v106[4] = 0;
      v106[5] = 0;
      v106[6] = 0x3FF0000000000000;
LABEL_84:
      if (++v68 == v160)
        goto LABEL_133;
    }
  }
  v14 = 0;
  v15 = v164 + 4;
  v16 = MEMORY[0x24BEE4AF8];
  v13 = 24;
  do
  {
    if (v14 >= *(_QWORD *)(v11 + 16))
      goto LABEL_157;
    v21 = (double *)&v15[2 * v14];
    v22 = *v21;
    v23 = *((_QWORD *)v21 + 1);
    v24 = v167;
    if (*(_QWORD *)(v167 + 16))
    {
      v25 = sub_240154FDC();
      v26 = -1 << *(_BYTE *)(v24 + 32);
      v27 = v25 & ~v26;
      if (((*(_QWORD *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) != 0)
      {
        v28 = *(_QWORD *)(v24 + 48);
        if (*(double *)(v28 + 8 * v27) == v22)
          goto LABEL_14;
        v29 = ~v26;
        while (1)
        {
          v27 = (v27 + 1) & v29;
          if (((*(_QWORD *)(v24 + 56 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
            break;
          if (*(double *)(v28 + 8 * v27) == v22)
            goto LABEL_14;
        }
      }
    }
    v30 = (CGRect *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
    v31 = *(double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
    v32 = *(double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 8);
    v33 = *(double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 16);
    v34 = *(double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 24);
    swift_retain();
    v168.origin.x = v31;
    v168.origin.y = v32;
    v168.size.width = v33;
    v168.size.height = v34;
    v35 = CGRectGetMidX(v168);
    v36 = CGRectGetMidY(*v30);
    v37 = *(_QWORD *)(*(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                    + 16);
    v38 = swift_isUniquelyReferenced_nonNull_native();
    if (fabs((double)v37) < 0.00001)
    {
      if (v37 <= 0)
        v17 = -100000.0;
      else
        v17 = 100000.0;
      if ((v38 & 1) != 0)
        goto LABEL_11;
LABEL_25:
      v16 = (uint64_t)sub_240078AB0(0, *(_QWORD *)(v16 + 16) + 1, 1, (_QWORD *)v16);
      goto LABEL_11;
    }
    v17 = 1.0 / (double)v37;
    if ((v38 & 1) == 0)
      goto LABEL_25;
LABEL_11:
    v19 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v16 + 24);
    if (v19 >= v18 >> 1)
      v16 = (uint64_t)sub_240078AB0((_QWORD *)(v18 > 1), v19 + 1, 1, (_QWORD *)v16);
    *(_QWORD *)(v16 + 16) = v19 + 1;
    v20 = (CGFloat *)(v16 + 24 * v19);
    v20[4] = v35;
    v20[5] = v36;
    v20[6] = v17;
    sub_240084B00((double *)&v164, v22);
    swift_release();
LABEL_14:
    ++v14;
  }
  while (v14 != v12);
  swift_release();
  v13 = (unint64_t)&unk_24015D000;
  v11 = v153;
  if ((v153 & 0x8000000000000000) == 0)
    goto LABEL_27;
LABEL_38:
  __break(1u);
LABEL_148:
  swift_retain();
  v150 = swift_bridgeObjectRetain();
  v8 = sub_24010AB4C(v150);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_240109914()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKSubjectClustering()
{
  return objc_opt_self();
}

uint64_t sub_240109944(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_240135780(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_2401099AC(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2401099AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double v17;
  double *v18;
  double v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  BOOL v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  uint64_t v59;
  char v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  unint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  double v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  double *__dst;

  v3 = a1[1];
  result = sub_240154EB0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v84 = *a1;
      v85 = -1;
      v86 = 1;
      v87 = *a1;
      do
      {
        v88 = *(double *)(v84 + 16 * v86);
        v89 = v85;
        v90 = v87;
        do
        {
          if (*(double *)v90 >= v88)
            break;
          if (!v84)
            goto LABEL_141;
          v91 = *(_QWORD *)(v90 + 24);
          *(_OWORD *)(v90 + 16) = *(_OWORD *)v90;
          *(double *)v90 = v88;
          *(_QWORD *)(v90 + 8) = v91;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        ++v86;
        v87 += 16;
        --v85;
      }
      while (v86 != v3);
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v102 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v93 = v12;
      v104 = v9;
      if (v13 >= 2)
      {
        v94 = *v102;
        do
        {
          v95 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v94)
            goto LABEL_145;
          v96 = v93;
          v97 = *(_QWORD *)&v93[16 * v95 + 32];
          v98 = *(_QWORD *)&v93[16 * v13 + 24];
          sub_24010A098((double *)(v94 + 16 * v97), (double *)(v94 + 16 * *(_QWORD *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1)
            break;
          if (v98 < v97)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v96 = sub_2401356E0((uint64_t)v96);
          if (v95 >= *((_QWORD *)v96 + 2))
            goto LABEL_134;
          v99 = &v96[16 * v95 + 32];
          *(_QWORD *)v99 = v97;
          *((_QWORD *)v99 + 1) = v98;
          v100 = *((_QWORD *)v96 + 2);
          if (v13 > v100)
            goto LABEL_135;
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          v93 = v96;
          *((_QWORD *)v96 + 2) = v100 - 1;
          v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC178);
    v8 = sub_2401547FC();
    *(_QWORD *)(v8 + 16) = v7;
    v104 = v8;
    __dst = (double *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v103 = *a1 + 32;
  v101 = *a1 - 16;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v105 = v6;
  v106 = v3;
  v107 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 16 * v10);
      v16 = 16 * v14;
      v17 = *(double *)(v11 + 16 * v14);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v18 = (double *)(v103 + 16 * v14);
        v19 = v15;
        while (1)
        {
          v20 = v19;
          v19 = *v18;
          if (v17 < v15 == v20 >= *v18)
            break;
          ++v10;
          v18 += 2;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v17 < v15)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v21 = 16 * v10;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v21;
              v25 = *(_QWORD *)(v11 + v16);
              v26 = *(_QWORD *)(v11 + v16 + 8);
              *(_OWORD *)(v11 + v16) = *(_OWORD *)(v11 + v21 - 16);
              *(_QWORD *)(v24 - 16) = v25;
              *(_QWORD *)(v24 - 8) = v26;
            }
            ++v23;
            v21 -= 16;
            v16 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v27 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v27 >= v3)
      v27 = v3;
    if (v27 < v14)
      break;
    if (v10 != v27)
    {
      v28 = v101 + 16 * v10;
      do
      {
        v29 = *(double *)(v11 + 16 * v10);
        v30 = v14;
        v31 = v28;
        do
        {
          if (*(double *)v31 >= v29)
            break;
          if (!v11)
            goto LABEL_142;
          v32 = *(_QWORD *)(v31 + 24);
          *(_OWORD *)(v31 + 16) = *(_OWORD *)v31;
          *(double *)v31 = v29;
          *(_QWORD *)(v31 + 8) = v32;
          v31 -= 16;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 16;
      }
      while (v10 != v27);
      v10 = v27;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_240135220(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v34 = *((_QWORD *)v12 + 2);
    v33 = *((_QWORD *)v12 + 3);
    v13 = v34 + 1;
    v11 = v107;
    if (v34 >= v33 >> 1)
    {
      v83 = sub_240135220((char *)(v33 > 1), v34 + 1, 1, v12);
      v11 = v107;
      v12 = v83;
    }
    *((_QWORD *)v12 + 2) = v13;
    v35 = v12 + 32;
    v36 = &v12[16 * v34 + 32];
    *(_QWORD *)v36 = v14;
    *((_QWORD *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        v37 = v13 - 1;
        if (v13 >= 4)
        {
          v42 = &v35[16 * v13];
          v43 = *((_QWORD *)v42 - 8);
          v44 = *((_QWORD *)v42 - 7);
          v48 = __OFSUB__(v44, v43);
          v45 = v44 - v43;
          if (v48)
            goto LABEL_120;
          v47 = *((_QWORD *)v42 - 6);
          v46 = *((_QWORD *)v42 - 5);
          v48 = __OFSUB__(v46, v47);
          v40 = v46 - v47;
          v41 = v48;
          if (v48)
            goto LABEL_121;
          v49 = v13 - 2;
          v50 = &v35[16 * v13 - 32];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v48 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v48)
            goto LABEL_123;
          v48 = __OFADD__(v40, v53);
          v54 = v40 + v53;
          if (v48)
            goto LABEL_126;
          if (v54 >= v45)
          {
            v72 = &v35[16 * v37];
            v74 = *(_QWORD *)v72;
            v73 = *((_QWORD *)v72 + 1);
            v48 = __OFSUB__(v73, v74);
            v75 = v73 - v74;
            if (v48)
              goto LABEL_130;
            v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v66 = *((_QWORD *)v12 + 4);
            v67 = *((_QWORD *)v12 + 5);
            v48 = __OFSUB__(v67, v66);
            v59 = v67 - v66;
            v60 = v48;
            goto LABEL_77;
          }
          v39 = *((_QWORD *)v12 + 4);
          v38 = *((_QWORD *)v12 + 5);
          v48 = __OFSUB__(v38, v39);
          v40 = v38 - v39;
          v41 = v48;
        }
        if ((v41 & 1) != 0)
          goto LABEL_122;
        v49 = v13 - 2;
        v55 = &v35[16 * v13 - 32];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v58 = __OFSUB__(v56, v57);
        v59 = v56 - v57;
        v60 = v58;
        if (v58)
          goto LABEL_125;
        v61 = &v35[16 * v37];
        v63 = *(_QWORD *)v61;
        v62 = *((_QWORD *)v61 + 1);
        v48 = __OFSUB__(v62, v63);
        v64 = v62 - v63;
        if (v48)
          goto LABEL_128;
        if (__OFADD__(v59, v64))
          goto LABEL_129;
        if (v59 + v64 >= v40)
        {
          v65 = v40 < v64;
LABEL_83:
          if (v65)
            v37 = v49;
          goto LABEL_85;
        }
LABEL_77:
        if ((v60 & 1) != 0)
          goto LABEL_124;
        v68 = &v35[16 * v37];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        v48 = __OFSUB__(v69, v70);
        v71 = v69 - v70;
        if (v48)
          goto LABEL_127;
        if (v71 < v59)
          goto LABEL_15;
LABEL_85:
        v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v77 = v12;
        v78 = &v35[16 * v76];
        v79 = *(_QWORD *)v78;
        v80 = &v35[16 * v37];
        v81 = *((_QWORD *)v80 + 1);
        sub_24010A098((double *)(v11 + 16 * *(_QWORD *)v78), (double *)(v11 + 16 * *(_QWORD *)v80), v11 + 16 * v81, __dst);
        if (v1)
          goto LABEL_93;
        if (v81 < v79)
          goto LABEL_117;
        if (v37 > *((_QWORD *)v77 + 2))
          goto LABEL_118;
        *(_QWORD *)v78 = v79;
        *(_QWORD *)&v35[16 * v76 + 8] = v81;
        v82 = *((_QWORD *)v77 + 2);
        if (v37 >= v82)
          goto LABEL_119;
        v12 = v77;
        v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((_QWORD *)v77 + 2) = v82 - 1;
        v11 = v107;
        if (v82 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v105;
    v3 = v106;
    if (v10 >= v106)
    {
      v9 = v104;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_24010A098(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 15;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 4;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 15;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 4;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[2 * v13] <= __dst)
        memmove(__dst, a2, 16 * v13);
      v16 = &v4[2 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        v17 = (double *)(a3 - 16);
        v18 = v6;
        while (1)
        {
          v19 = v17 + 2;
          v20 = *(v18 - 2);
          v18 -= 2;
          if (v20 >= *(v16 - 2))
          {
            v22 = v16 - 2;
            if (v19 < v16 || v17 >= v16 || v19 != v16)
              *(_OWORD *)v17 = *((_OWORD *)v16 - 1);
            v18 = v6;
            v16 -= 2;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v19 != v6 || v17 >= v6)
              *(_OWORD *)v17 = *(_OWORD *)v18;
            v24 = v18;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 2;
          v6 = v18;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[2 * v10] <= __dst)
      memmove(__dst, __src, 16 * v10);
    v14 = &v4[2 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        if (*v4 >= *v6)
        {
          if (v7 != v4)
            *(_OWORD *)v7 = *(_OWORD *)v4;
          v4 += 2;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 2;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_OWORD *)v7 = *(_OWORD *)v6;
        }
        v7 += 2;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_24013552C((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24010A310(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  CGRect *v7;
  double MidX;
  double MidY;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (a1 >> 62)
    goto LABEL_15;
  v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v3 = MEMORY[0x24BEE4AF8];
    if (!v2)
      return v3;
    v13 = MEMORY[0x24BEE4AF8];
    result = sub_2400E58FC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
      break;
    v5 = 0;
    v3 = v13;
    while (v2 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x24267D4E0](v5, a1);
      }
      else
      {
        v6 = *(_QWORD *)(a1 + 8 * v5 + 32);
        swift_retain();
      }
      v7 = (CGRect *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
      MidX = CGRectGetMidX(*(CGRect *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
      MidY = CGRectGetMidY(*v7);
      v11 = *(_QWORD *)(v13 + 16);
      v10 = *(_QWORD *)(v13 + 24);
      if (v11 >= v10 >> 1)
        sub_2400E58FC(v10 > 1, v11 + 1, 1);
      ++v5;
      *(_QWORD *)(v13 + 16) = v11 + 1;
      v12 = v13 + 16 * v11;
      *(double *)(v12 + 32) = sqrt((MidX + -0.5) * (MidX + -0.5) + (MidY + -0.5) * (MidY + -0.5));
      *(_QWORD *)(v12 + 40) = v6;
      if (v2 == v5)
        return v3;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    v2 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_24010A4C0(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t i;
  CGFloat MinX;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  CGFloat v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t j;
  CGFloat MaxX;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  CGFloat v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  double *v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t k;
  CGFloat MinY;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  CGFloat v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  double *v49;
  double v50;
  double v51;
  uint64_t v52;
  uint64_t m;
  CGFloat MaxY;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  CGFloat v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  double v62;
  uint64_t v63;
  double *v64;
  double v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v67 = MEMORY[0x24BEE4AF8];
    result = sub_2400E58C4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      goto LABEL_78;
    }
    v3 = v67;
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v2; ++i)
      {
        v71 = *(CGRect *)(MEMORY[0x24267D4E0](i, a1)
                        + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
        MinX = CGRectGetMinX(v71);
        swift_unknownObjectRelease();
        v8 = *(_QWORD *)(v67 + 16);
        v7 = *(_QWORD *)(v67 + 24);
        if (v8 >= v7 >> 1)
          sub_2400E58C4(v7 > 1, v8 + 1, 1);
        *(_QWORD *)(v67 + 16) = v8 + 1;
        *(CGFloat *)(v67 + 8 * v8 + 32) = MinX;
      }
    }
    else
    {
      v9 = (_QWORD *)(a1 + 32);
      v10 = v2;
      do
      {
        v11 = CGRectGetMinX(*(CGRect *)(*v9 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
        v13 = *(_QWORD *)(v67 + 16);
        v12 = *(_QWORD *)(v67 + 24);
        if (v13 >= v12 >> 1)
          sub_2400E58C4(v12 > 1, v13 + 1, 1);
        *(_QWORD *)(v67 + 16) = v13 + 1;
        *(CGFloat *)(v67 + 8 * v13 + 32) = v11;
        ++v9;
        --v10;
      }
      while (v10);
    }
  }
  v14 = *(_QWORD *)(v3 + 16);
  if (v14)
  {
    v15 = *(double *)(v3 + 32);
    v16 = v14 - 1;
    if (v16)
    {
      v17 = (double *)(v3 + 40);
      do
      {
        v18 = *v17++;
        v19 = v18;
        if (v18 < v15)
          v15 = v19;
        --v16;
      }
      while (v16);
    }
  }
  swift_bridgeObjectRelease();
  v20 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v68 = MEMORY[0x24BEE4AF8];
    result = sub_2400E58C4(0, v2 & ~(v2 >> 63), 0);
    if ((v2 & 0x8000000000000000) == 0)
    {
      v20 = v68;
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (j = 0; j != v2; ++j)
        {
          v72 = *(CGRect *)(MEMORY[0x24267D4E0](j, a1)
                          + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
          MaxX = CGRectGetMaxX(v72);
          swift_unknownObjectRelease();
          v24 = *(_QWORD *)(v68 + 16);
          v23 = *(_QWORD *)(v68 + 24);
          if (v24 >= v23 >> 1)
            sub_2400E58C4(v23 > 1, v24 + 1, 1);
          *(_QWORD *)(v68 + 16) = v24 + 1;
          *(CGFloat *)(v68 + 8 * v24 + 32) = MaxX;
        }
      }
      else
      {
        v25 = (_QWORD *)(a1 + 32);
        v26 = v2;
        do
        {
          v27 = CGRectGetMaxX(*(CGRect *)(*v25 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
          v29 = *(_QWORD *)(v68 + 16);
          v28 = *(_QWORD *)(v68 + 24);
          if (v29 >= v28 >> 1)
            sub_2400E58C4(v28 > 1, v29 + 1, 1);
          *(_QWORD *)(v68 + 16) = v29 + 1;
          *(CGFloat *)(v68 + 8 * v29 + 32) = v27;
          ++v25;
          --v26;
        }
        while (v26);
      }
      goto LABEL_33;
    }
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
LABEL_33:
  v30 = *(_QWORD *)(v20 + 16);
  if (v30)
  {
    v31 = *(double *)(v20 + 32);
    v32 = v30 - 1;
    if (v32)
    {
      v33 = (double *)(v20 + 40);
      do
      {
        v34 = *v33++;
        v35 = v34;
        if (v31 < v34)
          v31 = v35;
        --v32;
      }
      while (v32);
    }
  }
  swift_bridgeObjectRelease();
  v36 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v69 = MEMORY[0x24BEE4AF8];
    result = sub_2400E58C4(0, v2 & ~(v2 >> 63), 0);
    if ((v2 & 0x8000000000000000) == 0)
    {
      v36 = v69;
      if ((a1 & 0xC000000000000001) != 0)
      {
        for (k = 0; k != v2; ++k)
        {
          v73 = *(CGRect *)(MEMORY[0x24267D4E0](k, a1)
                          + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
          MinY = CGRectGetMinY(v73);
          swift_unknownObjectRelease();
          v40 = *(_QWORD *)(v69 + 16);
          v39 = *(_QWORD *)(v69 + 24);
          if (v40 >= v39 >> 1)
            sub_2400E58C4(v39 > 1, v40 + 1, 1);
          *(_QWORD *)(v69 + 16) = v40 + 1;
          *(CGFloat *)(v69 + 8 * v40 + 32) = MinY;
        }
      }
      else
      {
        v41 = (_QWORD *)(a1 + 32);
        v42 = v2;
        do
        {
          v43 = CGRectGetMinY(*(CGRect *)(*v41 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
          v45 = *(_QWORD *)(v69 + 16);
          v44 = *(_QWORD *)(v69 + 24);
          if (v45 >= v44 >> 1)
            sub_2400E58C4(v44 > 1, v45 + 1, 1);
          *(_QWORD *)(v69 + 16) = v45 + 1;
          *(CGFloat *)(v69 + 8 * v45 + 32) = v43;
          ++v41;
          --v42;
        }
        while (v42);
      }
      goto LABEL_51;
    }
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
LABEL_51:
  v46 = *(_QWORD *)(v36 + 16);
  if (v46)
  {
    v47 = *(double *)(v36 + 32);
    v48 = v46 - 1;
    if (v48)
    {
      v49 = (double *)(v36 + 40);
      do
      {
        v50 = *v49++;
        v51 = v50;
        if (v50 < v47)
          v47 = v51;
        --v48;
      }
      while (v48);
    }
  }
  swift_bridgeObjectRelease();
  v52 = MEMORY[0x24BEE4AF8];
  if (!v2)
    goto LABEL_69;
  v70 = MEMORY[0x24BEE4AF8];
  result = sub_2400E58C4(0, v2 & ~(v2 >> 63), 0);
  if (v2 < 0)
  {
LABEL_80:
    __break(1u);
    return result;
  }
  v52 = v70;
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (m = 0; m != v2; ++m)
    {
      v74 = *(CGRect *)(MEMORY[0x24267D4E0](m, a1) + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
      MaxY = CGRectGetMaxY(v74);
      swift_unknownObjectRelease();
      v56 = *(_QWORD *)(v70 + 16);
      v55 = *(_QWORD *)(v70 + 24);
      if (v56 >= v55 >> 1)
        sub_2400E58C4(v55 > 1, v56 + 1, 1);
      *(_QWORD *)(v70 + 16) = v56 + 1;
      *(CGFloat *)(v70 + 8 * v56 + 32) = MaxY;
    }
  }
  else
  {
    v57 = (_QWORD *)(a1 + 32);
    do
    {
      v58 = CGRectGetMaxY(*(CGRect *)(*v57 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
      v60 = *(_QWORD *)(v70 + 16);
      v59 = *(_QWORD *)(v70 + 24);
      if (v60 >= v59 >> 1)
        sub_2400E58C4(v59 > 1, v60 + 1, 1);
      *(_QWORD *)(v70 + 16) = v60 + 1;
      *(CGFloat *)(v70 + 8 * v60 + 32) = v58;
      ++v57;
      --v2;
    }
    while (v2);
  }
LABEL_69:
  v61 = *(_QWORD *)(v52 + 16);
  if (v61)
  {
    v62 = *(double *)(v52 + 32);
    v63 = v61 - 1;
    if (v63)
    {
      v64 = (double *)(v52 + 40);
      do
      {
        v65 = *v64++;
        v66 = v65;
        if (v62 < v65)
          v62 = v66;
        --v63;
      }
      while (v63);
    }
  }
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24010AB4C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v15 = MEMORY[0x24BEE4AF8];
    sub_2400E58E0(0, v1, 0);
    v2 = v15;
    v4 = a1 + 32;
    do
    {
      v5 = swift_bridgeObjectRetain();
      v6 = sub_24010A4C0(v5);
      v8 = v7;
      v10 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(v15 + 16);
      v11 = *(_QWORD *)(v15 + 24);
      if (v12 >= v11 >> 1)
        sub_2400E58E0(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v15 + 16) = v12 + 1;
      v13 = (_QWORD *)(v15 + 24 * v12);
      v13[4] = v6;
      v13[5] = v8;
      v13[6] = v10;
      v4 += 8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t initializeBufferWithCopyOfBuffer for DKSubjectClustering.Cluster(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DKSubjectClustering.Cluster(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for DKSubjectClustering.Cluster(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKSubjectClustering.Cluster(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKSubjectClustering.Cluster(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKSubjectClustering.Cluster()
{
  return &type metadata for DKSubjectClustering.Cluster;
}

unint64_t sub_24010ADAC()
{
  unint64_t result;

  result = qword_256FBD828;
  if (!qword_256FBD828)
  {
    result = MEMORY[0x24267E0BC](&unk_24015DB4C, &type metadata for DKSubjectClustering.Cluster);
    atomic_store(result, (unint64_t *)&qword_256FBD828);
  }
  return result;
}

uint64_t sub_24010ADF4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[6] = v0;
  v2 = sub_240154310();
  v1[7] = v2;
  v1[8] = *(_QWORD *)(v2 - 8);
  v1[9] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v1[10] = swift_task_alloc();
  v1[11] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24010AE88()
{
  double *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double i;
  uint64_t result;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  os_log_type_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;

  v6 = *(_QWORD *)(v3 + 48);
  v7 = *(_QWORD *)(v6 + 40);
  v8 = *(_QWORD *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition);
  if (!v8)
    goto LABEL_23;
  v9 = OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchIndex;
  if (*(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchIndex) == -1)
  {
    v10 = -1;
  }
  else
  {
    if (!sub_24013E9F8(0, *(_QWORD *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals)))goto LABEL_23;
    v10 = *(_QWORD *)(v6 + v9);
  }
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v1 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v6 + v9) = v12;
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchWaypoints;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchWaypoints);
  v14 = *(_QWORD *)(v13 + 16);
  if (v12 == v14)
  {
    v15 = *(_QWORD *)(v3 + 88);
    v16 = *(_QWORD *)(v3 + 56);
    v17 = *(_QWORD *)(v3 + 64);
    v18 = *(_QWORD *)(v6 + 40);
    swift_retain();
    sub_240154274();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
    sub_24008FCD4(v15, v18 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime);
    swift_release();
    goto LABEL_23;
  }
  if (v12 >= v14)
    goto LABEL_27;
  if (!*(_QWORD *)(v8 + 16))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v0 = *(double **)(v13 + 16 * v12 + 40);
  v4 = *(double *)(v8 + 32);
  v19 = *((_QWORD *)v0 + 2);
  if (v4 <= 6.28318531)
  {
    if (!v19)
      goto LABEL_32;
    v5 = v0[4];
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      goto LABEL_35;
    if (*((_QWORD *)v0 + 2))
      goto LABEL_19;
LABEL_36:
    __break(1u);
    return result;
  }
  if (!v19)
    goto LABEL_31;
  v5 = v0[4];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_33;
  if (!*((_QWORD *)v0 + 2))
    goto LABEL_34;
LABEL_15:
  for (i = v4 - v5; ; i = v4 + v5)
  {
    v0[4] = i;
    v22 = *(_QWORD *)(v6 + v9);
    if ((v22 & 0x8000000000000000) != 0)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    v23 = *(_QWORD *)(v1 + v2);
    if (v22 < *(_QWORD *)(v23 + 16))
      break;
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    v0 = (double *)sub_24014CD20(v0);
    if (*((_QWORD *)v0 + 2))
      goto LABEL_15;
LABEL_34:
    __break(1u);
LABEL_35:
    result = (uint64_t)sub_24014CD20(v0);
    v0 = (double *)result;
    if (!*(_QWORD *)(result + 16))
      goto LABEL_36;
LABEL_19:
    ;
  }
  v25 = *(_QWORD *)(v3 + 64);
  v24 = *(_QWORD *)(v3 + 72);
  v26 = *(_QWORD *)(v3 + 56);
  v40 = *(_QWORD *)(v23 + 16 * v22 + 32);
  v27 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v24, v27 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v26);
  type metadata accessor for DKIntelligentTrackingCommand(0);
  v28 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v24, v26);
  v29 = v28 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  *(_QWORD *)v29 = v0;
  *(_QWORD *)(v29 + 8) = v40;
  *(_WORD *)(v29 + 16) = 0x4000;
  *(_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = v28;
  swift_bridgeObjectRetain();
  swift_release();
  v41 = 10;
  v42 = 0;
  v43 = 0xE000000000000000;
  sub_240154B38();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)(v3 + 24) = 0xE000000000000000;
  sub_2401546D0();
  *(_QWORD *)(v3 + 32) = v0;
  sub_240154C94();
  swift_bridgeObjectRelease();
  sub_2401546D0();
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v6 + v9);
  sub_240154EBC();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v3 + 16);
  v30 = *(_QWORD *)(v3 + 24);
  v32 = sub_240154964();
  _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v41, v31, v30, v32);
  swift_bridgeObjectRelease();
LABEL_23:
  v33 = *(_QWORD *)(v3 + 80);
  v34 = *(_QWORD *)(v3 + 56);
  v35 = *(_QWORD *)(v3 + 64);
  sub_24008BFDC(*(_QWORD *)(v6 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime, v33);
  LODWORD(v34) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34);
  sub_240077EAC(v33);
  if ((_DWORD)v34 == 1)
  {
    v36 = *(_QWORD *)(v3 + 88);
    v37 = *(_QWORD *)(v3 + 56);
    v38 = *(_QWORD *)(v3 + 64);
    v39 = *(_QWORD *)(v6 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v36, *(_QWORD *)(*(_QWORD *)(v3 + 48) + 48)+ OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v37);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56))(v36, 0, 1, v37);
    sub_24008FCD4(v36, v39 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v3 + 8))(1);
}

_QWORD *sub_24010B300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchIndex) = -1;
  v10 = OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchWaypoints;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBD9B8);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240158CF0;
  *(_QWORD *)(v11 + 32) = 0x4008000000000000;
  *(_QWORD *)(v11 + 40) = &unk_251061F68;
  *(_QWORD *)(v11 + 48) = 0x4024000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240155A50;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v12 + 32) = 0x401921FB54442D18;
  *(_QWORD *)(v11 + 56) = v12;
  *(_QWORD *)(v11 + 64) = 0x4008000000000000;
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240155A50;
  *(_OWORD *)(v13 + 32) = xmmword_24015DBC0;
  *(_QWORD *)(v13 + 48) = 0;
  *(_QWORD *)(v11 + 72) = v13;
  *(_QWORD *)(v11 + 80) = 0x4024000000000000;
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240155A50;
  *(_OWORD *)(v14 + 32) = xmmword_24015DBD0;
  *(_QWORD *)(v14 + 48) = 0;
  *(_QWORD *)(v11 + 88) = v14;
  *(_QWORD *)(v11 + 96) = 0x4008000000000000;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240155A50;
  *(_OWORD *)(v15 + 32) = xmmword_24015DBE0;
  *(_QWORD *)(v15 + 48) = 0;
  *(_QWORD *)(v11 + 104) = v15;
  *(_QWORD *)(v11 + 112) = 0x4024000000000000;
  v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_240155A50;
  *(_OWORD *)(v16 + 32) = xmmword_24015DBF0;
  *(_QWORD *)(v16 + 48) = 0;
  *(_QWORD *)(v11 + 120) = v16;
  *(_QWORD *)(v11 + 128) = 0x4024000000000000;
  *(_QWORD *)(v11 + 136) = &unk_251061FA0;
  *(_QWORD *)((char *)v5 + v10) = v11;
  sub_2401544B4();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_24010B500()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24010B510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24010B594()
{
  return type metadata accessor for DKSearchTask();
}

uint64_t type metadata accessor for DKSearchTask()
{
  uint64_t result;

  result = qword_256FBD858;
  if (!qword_256FBD858)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24010B5D8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_24010B628()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[15] = v0;
  v2 = sub_2401544C0();
  v1[16] = v2;
  v1[17] = *(_QWORD *)(v2 - 8);
  v1[18] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  v1[19] = swift_task_alloc();
  v3 = type metadata accessor for DKCamera();
  v1[20] = v3;
  v1[21] = *(_QWORD *)(v3 - 8);
  v1[22] = swift_task_alloc();
  v4 = sub_240154310();
  v1[23] = v4;
  v1[24] = *(_QWORD *)(v4 - 8);
  v1[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24010B728()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  double v6;
  double v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  CGFloat *inited;
  id v19;
  __CVBuffer *v20;
  size_t Width;
  size_t Height;
  CGFloat x;
  CGFloat y;
  CGFloat v25;
  CGFloat v26;
  uint64_t v27;
  __CVBuffer *v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  __CVBuffer *v39;
  uint64_t v40;
  uint64_t v41;
  CGRect v42;
  CGRect v43;

  v41 = *MEMORY[0x24BDAC8D0];
  v2 = *(_QWORD *)(v0 + 192);
  v1 = *(_QWORD *)(v0 + 200);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 120);
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v5(v1, *(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v3);
  sub_2401542E0();
  v7 = v6;
  v8 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v8(v1, v3);
  v9 = OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_lastProcessedTime;
  if (vabdd_f64(v7, *(double *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_lastProcessedTime)) >= 0.2)
  {
    v11 = *(_QWORD *)(v4 + 48);
    v12 = *(void **)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
    if (v12)
    {
      v13 = *(_QWORD *)(v0 + 160);
      v14 = *(_QWORD *)(v0 + 168);
      v15 = *(_QWORD *)(v0 + 152);
      sub_240070B90(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v15, &qword_256FB4430);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13) == 1)
      {
        sub_240070BD4(*(_QWORD *)(v0 + 152), &qword_256FB4430);
      }
      else
      {
        v35 = *(_QWORD *)(v0 + 120);
        sub_240070AF8(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 176));
        sub_24010CA04(0, &qword_256FBDB90);
        v16 = v12;
        v17 = MEMORY[0x24BEE4AF8];
        v37 = (void *)MEMORY[0x24267D360](MEMORY[0x24BEE4AF8]);
        type metadata accessor for DKImageCrop();
        inited = (CGFloat *)swift_initStackObject();
        v19 = v16;
        *((_QWORD *)inited + 7) = sub_240105F6C(v17);
        *((_QWORD *)inited + 2) = v12;
        v20 = (__CVBuffer *)v19;
        Width = CVPixelBufferGetWidth(v20);
        Height = CVPixelBufferGetHeight(v20);
        v42.origin.x = 0.0;
        v42.origin.y = 0.0;
        v42.size.width = 1.0;
        v42.size.height = 1.0;
        v43 = VNImageRectForNormalizedRect(v42, Width, Height);
        x = v43.origin.x;
        y = v43.origin.y;
        v25 = v43.size.width;
        v26 = v43.size.height;
        v39 = v20;

        inited[3] = x;
        inited[4] = y;
        inited[5] = v25;
        inited[6] = v26;
        *(_QWORD *)(v0 + 208) = 0;
        *(_DWORD *)(v0 + 216) = 0;
        v27 = OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_session;
        objc_msgSend(*(id *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_session), sel_requiredInputFormat_height_format_, v0 + 212, v0 + 208, v0 + 216);
        v28 = sub_240106978((__CVBuffer *)*(int *)(v0 + 212), *(int *)(v0 + 208));
        objc_msgSend(*(id *)(v35 + v27), sel_processFrame_withOptions_results_, v28, 0, v37);
        v40 = 0;
        sub_24010CA04(0, &qword_256FBDB98);
        v29 = v37;
        sub_24015479C();

        v30 = *(_QWORD *)(v0 + 200);
        v31 = *(_QWORD *)(v0 + 184);
        v36 = *(_QWORD *)(v0 + 176);
        v38 = *(_QWORD *)(v0 + 120);
        v5(v30, *(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v31);
        sub_2401542E0();
        v33 = v32;

        swift_release();
        v8(v30, v31);
        sub_240070B3C(v36);
        *(_QWORD *)(v4 + v9) = v33;
        *(_BYTE *)(*(_QWORD *)(v38 + 40)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_runSubjectSelection) = 1;
      }
    }
  }
  else
  {
    v10 = *(_QWORD *)(v0 + 120);
    sub_24010C0D0();
    *(_BYTE *)(*(_QWORD *)(v10 + 40)
             + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_runSubjectSelection) = 0;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_24010BD0C(unint64_t a1, unsigned __int8 *a2, unsigned __int8 *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t result;
  uint64_t i;
  id v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned __int8 v36[15];
  unsigned __int8 v37;
  unint64_t v38;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC140);
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v33) = *a2;
  v10 = *a3;
  v38 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_240154D30();
    v11 = result;
    v32 = v3;
    if (result)
      goto LABEL_3;
LABEL_15:
    swift_bridgeObjectRelease();
    v18 = MEMORY[0x24BEE4AF8];
    goto LABEL_16;
  }
  v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  v32 = v3;
  if (!v11)
    goto LABEL_15;
LABEL_3:
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v11; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0)
      v14 = (id)MEMORY[0x24267D4E0](i, a1);
    else
      v14 = *(id *)(a1 + 8 * i + 32);
    v15 = v14;
    v36[0] = v33;
    v37 = v10;
    type metadata accessor for DKBodyKeyPointList();
    swift_allocObject();
    v16 = v15;
    if (sub_2400E19D0(v16, v36, &v37))
    {
      v17 = swift_retain();
      MEMORY[0x24267D0CC](v17);
      if (*(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2401547D8();
      sub_240154814();
      sub_2401547B4();
      swift_release();
    }

  }
  swift_bridgeObjectRelease();
  v18 = v38;
  v3 = v32;
LABEL_16:
  v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 40)
                              + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_2400CB040(v18, v19, v3, 1.79769313e308);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v20 + 16);
  v22 = MEMORY[0x24BEE4AF8];
  if (v21)
  {
    *(_QWORD *)v36 = MEMORY[0x24BEE4AF8];
    sub_2400E5950(0, v21, 0);
    v22 = *(_QWORD *)v36;
    v33 = v20;
    v23 = (_QWORD *)(v20 + 40);
    do
    {
      v24 = *(v23 - 1);
      if (*v23)
      {
        v25 = *v23 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid;
        v26 = sub_24015434C();
        v27 = *(_QWORD *)(v26 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v9, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v9, 0, 1, v26);
      }
      else
      {
        v28 = sub_24015434C();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v9, 1, 1, v28);
      }
      *(_QWORD *)&v9[*(int *)(v35 + 48)] = v24;
      *(_QWORD *)v36 = v22;
      v30 = *(_QWORD *)(v22 + 16);
      v29 = *(_QWORD *)(v22 + 24);
      swift_retain();
      if (v30 >= v29 >> 1)
      {
        sub_2400E5950(v29 > 1, v30 + 1, 1);
        v22 = *(_QWORD *)v36;
      }
      v23 += 3;
      *(_QWORD *)(v22 + 16) = v30 + 1;
      sub_24007CD50((uint64_t)v9, v22+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(_QWORD *)(v34 + 72) * v30, &qword_256FBC140);
      --v21;
    }
    while (v21);
    v3 = v32;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_latestAssociations) = v22;
  swift_bridgeObjectRelease();
  sub_24010C0D0();
  return swift_release();
}

uint64_t sub_24010C0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54[2];
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v54 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v54 - v5;
  v69 = sub_24015434C();
  v7 = *(_QWORD *)(v69 - 8);
  MEMORY[0x24BDAC7A8](v69);
  v70 = (char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v64 = (char *)v54 - v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBC140);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v54[0] = (uint64_t)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v54 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)v54 - v18;
  MEMORY[0x24BDAC7A8](v20);
  v66 = (uint64_t)v54 - v22;
  result = *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_latestAssociations);
  v65 = *(_QWORD *)(result + 16);
  if (!v65)
    return result;
  v58 = v0;
  v68 = v21;
  v24 = *(int *)(v21 + 48);
  v62 = result + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v63 = v24;
  result = swift_bridgeObjectRetain();
  v25 = 0;
  v56 = v7;
  v57 = v3;
  v59 = v6;
  v60 = result;
  v61 = v12;
  v55 = v16;
  while (v25 < *(_QWORD *)(result + 16))
  {
    v26 = v66;
    sub_240070B90(v62 + *(_QWORD *)(v12 + 72) * v25, v66, &qword_256FBC140);
    v27 = *(_QWORD *)(v26 + v63);
    v28 = v68;
    v29 = *(int *)(v68 + 48);
    sub_24007CD50(v26, (uint64_t)v19, &qword_256FB5DE8);
    *(_QWORD *)&v19[v29] = v27;
    v30 = *(int *)(v28 + 48);
    sub_240070B90((uint64_t)v19, (uint64_t)v16, &qword_256FB5DE8);
    *(_QWORD *)&v16[v30] = v27;
    v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v32 = (uint64_t)v19;
    v33 = v69;
    if (v31((uint64_t)v16, 1, v69) != 1)
    {
      v67 = v27;
      v34 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v34(v64, v16, v33);
      v35 = *(_QWORD *)(*(_QWORD *)(v58 + 40)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker);
      v36 = (uint64_t)v59;
      (*(void (**)(void))(v7 + 16))();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v36, 0, 1, v33);
      v37 = (uint64_t)v57;
      sub_240070B90(v36, (uint64_t)v57, &qword_256FB5DE8);
      v38 = v33;
      if (v31(v37, 1, v33) == 1)
      {
        swift_retain();
        sub_240070BD4(v37, &qword_256FB5DE8);
        v7 = v56;
        v19 = (char *)v32;
        goto LABEL_25;
      }
      v34(v70, (char *)v37, v33);
      v39 = *(_QWORD *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
      v54[1] = v35;
      if (v39 >> 62)
      {
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain_n();
        v40 = sub_240154D30();
        v19 = (char *)v32;
        if (!v40)
          goto LABEL_24;
LABEL_11:
        if ((v39 & 0xC000000000000001) != 0)
        {
          v41 = MEMORY[0x24267D4E0](0, v39);
        }
        else
        {
          v41 = *(_QWORD *)(v39 + 32);
          swift_retain();
        }
        if ((sub_240154328() & 1) == 0)
        {
          swift_release();
          if (v40 == 1)
            goto LABEL_24;
          v50 = 5;
          while (1)
          {
            v51 = v50 - 4;
            if ((v39 & 0xC000000000000001) != 0)
            {
              result = MEMORY[0x24267D4E0](v50 - 4, v39);
              v41 = result;
              v52 = __OFADD__(v51, 1);
              v53 = v50 - 3;
              if (v52)
                goto LABEL_33;
            }
            else
            {
              v41 = *(_QWORD *)(v39 + 8 * v50);
              result = swift_retain();
              v52 = __OFADD__(v51, 1);
              v53 = v50 - 3;
              if (v52)
                goto LABEL_33;
            }
            if ((sub_240154328() & 1) != 0)
              break;
            swift_release();
            ++v50;
            if (v53 == v40)
              goto LABEL_24;
          }
        }
        v42 = (uint64_t)v59;
        v43 = v69;
        swift_bridgeObjectRelease_n();
        v7 = v56;
        v44 = *(void (**)(char *, uint64_t))(v56 + 8);
        v44(v70, v43);
        swift_release();
        sub_240070BD4(v42, &qword_256FB5DE8);
        v45 = *(int *)(v68 + 48);
        v46 = v54[0];
        sub_240070B90((uint64_t)v19, v54[0], &qword_256FB5DE8);
        v47 = v67;
        *(_QWORD *)(v46 + v45) = v67;
        *(_QWORD *)(v41 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints) = v47;
        swift_release();
        swift_release();
        v44(v64, v43);
        sub_240070BD4((uint64_t)v19, &qword_256FBC140);
        v48 = v46;
        v49 = &qword_256FB5DE8;
      }
      else
      {
        v40 = *(_QWORD *)((v39 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain_n();
        v19 = (char *)v32;
        if (v40)
          goto LABEL_11;
LABEL_24:
        swift_bridgeObjectRelease_n();
        v7 = v56;
        v38 = v69;
        (*(void (**)(char *, uint64_t))(v56 + 8))(v70, v69);
        swift_release();
        v36 = (uint64_t)v59;
LABEL_25:
        sub_240070BD4(v36, &qword_256FB5DE8);
        swift_release();
        (*(void (**)(char *, uint64_t))(v7 + 8))(v64, v38);
        v48 = (uint64_t)v19;
        v49 = &qword_256FBC140;
      }
      sub_240070BD4(v48, v49);
      result = v60;
      v12 = v61;
      v16 = v55;
      goto LABEL_4;
    }
    sub_240070BD4(v32, &qword_256FBC140);
    sub_240070BD4((uint64_t)v16, &qword_256FB5DE8);
    result = v60;
    v12 = v61;
    v19 = (char *)v32;
LABEL_4:
    if (++v25 == v65)
      return swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

_QWORD *sub_24010C6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;
  uint64_t inited;
  id v13;
  void *v14;
  id v15;

  v11 = OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_session;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBDBA0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  sub_24015464C();
  swift_retain();
  sub_240154AFC();
  *(_QWORD *)(inited + 96) = MEMORY[0x24BEE1328];
  *(_BYTE *)(inited + 72) = 1;
  sub_240105E2C(inited);
  v13 = objc_allocWithZone(MEMORY[0x24BE641F8]);
  v14 = (void *)sub_240154544();
  swift_bridgeObjectRelease();
  v15 = objc_msgSend(v13, sel_initWithOptions_, v14);

  *(_QWORD *)((char *)v5 + v11) = v15;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_lastProcessedTime) = 0;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_minPeriod) = 0x3FC999999999999ALL;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKBodyPoseExtractionTask_latestAssociations) = MEMORY[0x24BEE4AF8];
  swift_release();
  sub_2401544B4();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_24010C8A0()
{
  uint64_t v0;

  return swift_bridgeObjectRelease();
}

uint64_t sub_24010C8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24010C960()
{
  return type metadata accessor for DKBodyPoseExtractionTask();
}

uint64_t type metadata accessor for DKBodyPoseExtractionTask()
{
  uint64_t result;

  result = qword_256FBDA00;
  if (!qword_256FBDA00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24010C9A4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_24010CA04(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_24010CA3C(uint64_t a1, char a2, int a3)
{
  return sub_24010CADC(a1, a2, a3, sub_24013F0E0, (void (*)(void))sub_2400AB18C, (uint64_t)&type metadata for DKHandObservation.Chirality, (void (*)(void))sub_2400AE690, (void (*)(void))sub_2400AB180, (void (*)(void))sub_2400AE684);
}

uint64_t sub_24010CA8C(uint64_t a1, char a2, int a3)
{
  return sub_24010CADC(a1, a2, a3, sub_24013F0E0, (void (*)(void))sub_2400ABE38, (uint64_t)&type metadata for DKFaceDirection, (void (*)(void))sub_2400AEF0C, (void (*)(void))sub_2400ABB54, (void (*)(void))sub_2400AED5C);
}

uint64_t sub_24010CADC(uint64_t a1, char a2, int a3, uint64_t (*a4)(uint64_t), void (*a5)(void), uint64_t a6, void (*a7)(void), void (*a8)(void), void (*a9)(void))
{
  _QWORD *v9;
  _QWORD *v12;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  int v35;
  unint64_t v36;
  uint64_t v37;
  _BOOL8 v38;
  uint64_t v39;
  int v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  double v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  char v74;
  uint64_t v75;
  char v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t result;
  _QWORD v84[2];
  void (*v85)(void);
  int v86;
  void (*v87)(void);
  uint64_t v88;
  __int128 v89;
  _QWORD *v90;
  void (*v91)(void);
  unint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(uint64_t);
  _QWORD *v95;

  v87 = a8;
  v91 = a5;
  v94 = a4;
  v12 = v9;
  v86 = a3;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v90 = v9;
  v84[1] = a6;
  if ((a2 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_36;
  }
  v85 = a7;
  *(_QWORD *)&v89 = (char *)v84 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = v9[2];
  v20 = v18 + 64;
  v19 = *(_QWORD *)(v18 + 64);
  v21 = -1;
  v22 = -1 << *(_BYTE *)(v18 + 32);
  v88 = ~v22;
  if (-v22 < 64)
    v21 = ~(-1 << -(char)v22);
  v23 = v21 & v19;
  v24 = (unint64_t)(63 - v22) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v25 = 0;
  v93 = a1;
  while (1)
  {
    if (v23)
    {
      v26 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      v27 = v26 | (v25 << 6);
      goto LABEL_23;
    }
    v28 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    if (v28 >= v24)
      goto LABEL_35;
    v29 = *(_QWORD *)(v20 + 8 * v28);
    v30 = v25 + 1;
    if (!v29)
    {
      v30 = v25 + 2;
      if (v25 + 2 >= v24)
        goto LABEL_35;
      v29 = *(_QWORD *)(v20 + 8 * v30);
      if (!v29)
      {
        v30 = v25 + 3;
        if (v25 + 3 >= v24)
          goto LABEL_35;
        v29 = *(_QWORD *)(v20 + 8 * v30);
        if (!v29)
          break;
      }
    }
LABEL_22:
    v23 = (v29 - 1) & v29;
    v27 = __clz(__rbit64(v29)) + (v30 << 6);
    v25 = v30;
LABEL_23:
    v32 = *(unsigned __int8 *)(*(_QWORD *)(v18 + 48) + v27);
    if (*(_QWORD *)(a1 + 16))
    {
      v94(*(unsigned __int8 *)(*(_QWORD *)(v18 + 48) + v27));
      if ((v33 & 1) != 0)
        continue;
    }
    swift_retain();
    v34 = (_QWORD *)v93;
    LODWORD(v92) = swift_isUniquelyReferenced_nonNull_native();
    v95 = v34;
    v36 = v94(v32);
    v37 = v34[2];
    v38 = (v35 & 1) == 0;
    if (__OFADD__(v37, v38))
      goto LABEL_82;
    if (v34[3] >= v37 + v38)
    {
      if ((v92 & 1) == 0)
      {
        LODWORD(v93) = v35;
        v85();
        LOBYTE(v35) = v93;
      }
    }
    else
    {
      LODWORD(v93) = v35;
      v91();
      v39 = v94(v32);
      v40 = v35 & 1;
      LOBYTE(v35) = v93;
      if ((v93 & 1) != v40)
        goto LABEL_84;
      v36 = v39;
    }
    v41 = v95;
    v93 = (uint64_t)v95;
    if ((v35 & 1) != 0)
    {
      *(_QWORD *)(v95[7] + 8 * v36) = 0;
    }
    else
    {
      v95[(v36 >> 6) + 8] |= 1 << v36;
      *(_BYTE *)(v41[6] + v36) = v32;
      *(_QWORD *)(v41[7] + 8 * v36) = 0;
      v42 = v41[2];
      v43 = __OFADD__(v42, 1);
      v44 = v42 + 1;
      if (v43)
        goto LABEL_83;
      v41[2] = v44;
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  v31 = v25 + 4;
  if (v25 + 4 >= v24)
    goto LABEL_35;
  v29 = *(_QWORD *)(v20 + 8 * v31);
  if (v29)
  {
    v30 = v25 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v30 = v31 + 1;
    if (__OFADD__(v31, 1))
      goto LABEL_81;
    if (v30 >= v24)
      break;
    v29 = *(_QWORD *)(v20 + 8 * v30);
    ++v31;
    if (v29)
      goto LABEL_22;
  }
LABEL_35:
  sub_24008FD1C();
  a1 = v93;
  v17 = (char *)v89;
  v12 = v90;
LABEL_36:
  v45 = 0;
  v85 = a9;
  v46 = *(_QWORD *)(a1 + 64);
  v88 = a1 + 64;
  v47 = 1 << *(_BYTE *)(a1 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & v46;
  v91 = (void (*)(void))((unint64_t)(v47 + 63) >> 6);
  v89 = xmmword_240157220;
  while (2)
  {
    if (v49)
    {
      v52 = __clz(__rbit64(v49));
      v49 &= v49 - 1;
      v53 = v52 | (v45 << 6);
LABEL_57:
      v57 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 48) + v53);
      v58 = *(double *)(*(_QWORD *)(a1 + 56) + 8 * v53);
      if (*(_QWORD *)(v12[2] + 16))
      {
        v94(v57);
        if ((v59 & 1) != 0)
          goto LABEL_71;
      }
      v92 = v49;
      v93 = v45;
      v60 = v12[4];
      v61 = v12[5];
      v62 = sub_240154310();
      v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56);
      v63(v17, 1, 1, v62);
      type metadata accessor for DKSmoothingFilter();
      v64 = swift_allocObject();
      *(_OWORD *)(v64 + 48) = v89;
      v65 = v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      v63((char *)(v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v62);
      v66 = v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
      *(_QWORD *)v66 = 0;
      *(_BYTE *)(v66 + 8) = 1;
      v67 = v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
      *(_QWORD *)v67 = 0;
      *(_BYTE *)(v67 + 8) = 1;
      *(_BYTE *)(v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
      *(_QWORD *)(v64 + 16) = v60;
      *(_QWORD *)(v64 + 24) = v61;
      *(_WORD *)(v64 + 32) = 256;
      *(_QWORD *)(v64 + 40) = 0x3FE0000000000000;
      sub_24008FCD4((uint64_t)v17, v65);
      *(_QWORD *)v66 = 0;
      *(_BYTE *)(v66 + 8) = 1;
      *(_QWORD *)v67 = 0;
      *(_BYTE *)(v67 + 8) = 1;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v95 = (_QWORD *)v12[2];
      v69 = v95;
      v12[2] = 0x8000000000000000;
      v71 = v94(v57);
      v72 = v69[2];
      v73 = (v70 & 1) == 0;
      if (__OFADD__(v72, v73))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
      v74 = v70;
      if (v69[3] >= v72 + v73)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) != 0)
        {
          v77 = v95;
          if ((v70 & 1) == 0)
            goto LABEL_68;
        }
        else
        {
          v85();
          v77 = v95;
          if ((v74 & 1) == 0)
            goto LABEL_68;
        }
      }
      else
      {
        v87();
        v75 = v94(v57);
        if ((v74 & 1) != (v76 & 1))
          goto LABEL_84;
        v71 = v75;
        v77 = v95;
        if ((v74 & 1) == 0)
        {
LABEL_68:
          v77[(v71 >> 6) + 8] |= 1 << v71;
          *(_BYTE *)(v77[6] + v71) = v57;
          *(_QWORD *)(v77[7] + 8 * v71) = v64;
          v79 = v77[2];
          v43 = __OFADD__(v79, 1);
          v80 = v79 + 1;
          if (v43)
            goto LABEL_78;
          v77[2] = v80;
LABEL_70:
          v12 = v90;
          v90[2] = v77;
          swift_bridgeObjectRelease();
          v49 = v92;
          v45 = v93;
LABEL_71:
          if (*(_QWORD *)(v12[2] + 16))
          {
            v94(v57);
            if ((v81 & 1) != 0)
            {
              v82 = sub_240154310();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 56))(v17, 1, 1, v82);
              swift_retain();
              if ((v86 & 1) != 0)
              {
                v50 = 0x3FF0000000000000;
                v51 = 0;
              }
              else
              {
                v50 = 0;
                v51 = 1;
              }
              sub_240148324(v50, v51, (uint64_t)v17, v58);
              swift_release();
              sub_240070BD4((uint64_t)v17, &qword_256FB4CC8);
            }
          }
          continue;
        }
      }
      v78 = v77[7];
      swift_release();
      *(_QWORD *)(v78 + 8 * v71) = v64;
      goto LABEL_70;
    }
    break;
  }
  v54 = v45 + 1;
  if (__OFADD__(v45, 1))
    goto LABEL_77;
  if (v54 >= (uint64_t)v91)
    return swift_release();
  v55 = *(_QWORD *)(v88 + 8 * v54);
  ++v45;
  if (v55)
    goto LABEL_56;
  v45 = v54 + 1;
  if (v54 + 1 >= (uint64_t)v91)
    return swift_release();
  v55 = *(_QWORD *)(v88 + 8 * v45);
  if (v55)
    goto LABEL_56;
  v45 = v54 + 2;
  if (v54 + 2 >= (uint64_t)v91)
    return swift_release();
  v55 = *(_QWORD *)(v88 + 8 * v45);
  if (v55)
  {
LABEL_56:
    v49 = (v55 - 1) & v55;
    v53 = __clz(__rbit64(v55)) + (v45 << 6);
    goto LABEL_57;
  }
  v56 = v54 + 3;
  if (v56 >= (uint64_t)v91)
    return swift_release();
  v55 = *(_QWORD *)(v88 + 8 * v56);
  if (v55)
  {
    v45 = v56;
    goto LABEL_56;
  }
  while (1)
  {
    v45 = v56 + 1;
    if (__OFADD__(v56, 1))
      break;
    if (v45 >= (uint64_t)v91)
      return swift_release();
    v55 = *(_QWORD *)(v88 + 8 * v45);
    ++v56;
    if (v55)
      goto LABEL_56;
  }
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_24010D22C(uint64_t a1, char a2, int a3)
{
  return sub_24010CADC(a1, a2, a3, sub_24013F0E0, (void (*)(void))sub_2400ABE44, (uint64_t)&type metadata for DKMotionClassification, (void (*)(void))sub_2400AEF18, (void (*)(void))sub_2400ABB60, (void (*)(void))sub_2400AED68);
}

uint64_t DKHandTrackerConfiguration.__allocating_init()()
{
  *(_QWORD *)(swift_allocObject() + 176) = 0x3FB999999999999ALL;
  return DKTrackerConfiguration.init()();
}

uint64_t DKHandTracker.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_allocObject();
  return DKHandTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(a1, a2, a3, a4, a5, a6);
}

uint64_t DKHandTrackerConfiguration.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 176) = 0x3FB999999999999ALL;
  return DKTrackerConfiguration.init()();
}

void DKHandTrackerConfiguration.__allocating_init(configuration:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DKHandTrackerConfiguration.init(configuration:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t DKHandTrackerConfiguration.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKHandTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24010D400()
{
  return swift_retain();
}

uint64_t sub_24010D410(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_256FC4E58) = a1;
  return swift_release();
}

uint64_t (*sub_24010D428())()
{
  return nullsub_1;
}

uint64_t DKHandTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  double v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = v6;
  v35 = a6;
  v36 = a4;
  v37 = a5;
  v33 = a1;
  v34 = a3;
  v32 = a2;
  v9 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24015434C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_240154310();
  v17 = *(_QWORD *)(v16 - 8);
  v30 = v16;
  v31 = v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *(double *)(a2 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65F0);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v7 + qword_256FC4E58) = sub_2400B8394((uint64_t)&unk_251062210, v20, v20);
  swift_release();
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v22 = v33;
  v21(v19, v33, v16);
  v23 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v24 = v13;
  v25 = v34;
  v26 = v12;
  v23(v15, v34, v12);
  v27 = v35;
  sub_240080084(v35, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v28 = sub_24014EA48(v19, v32, v15, v36, v37, v11);
  sub_2400800C8(v27, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v22, v30);
  return v28;
}

uint64_t sub_24010D640(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t inited;
  unint64_t v5;

  result = sub_240101774(a1, a2);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65F8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_240156510;
    *(_BYTE *)(inited + 32) = *(_BYTE *)(a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
    *(_QWORD *)(inited + 40) = 0x3FF0000000000000;
    v5 = sub_2401076D0(inited);
    swift_setDeallocating();
    swift_retain();
    swift_retain();
    sub_24010CADC(v5, 1, 0, sub_24013F0E0, (void (*)(void))sub_2400AB18C, (uint64_t)&type metadata for DKHandObservation.Chirality, (void (*)(void))sub_2400AE690, (void (*)(void))sub_2400AB180, (void (*)(void))sub_2400AE684);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24010D73C(void (*a1)(char *, char *, uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, _QWORD, uint64_t, int *);
  char *v36;
  uint64_t v37;
  void (*v38)(char *, char *, uint64_t);
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  void (*v59)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);
  char *v69;
  char v70;
  uint64_t v71[2];
  _BYTE v72[40];
  _QWORD v73[4];
  char v74;

  v2 = v1;
  v68 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v3);
  v64 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = sub_24015434C();
  v62 = *(_QWORD *)(v63 - 8);
  MEMORY[0x24BDAC7A8](v63);
  v6 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_240154310();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v65 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)&v58 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v58 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v58 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v18);
  v67 = (uint64_t)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v58 - v21;
  v23 = (int *)type metadata accessor for DKMotion3();
  v24 = *((_QWORD *)v23 - 1);
  MEMORY[0x24BDAC7A8](v23);
  v69 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2401478A8((uint64_t)v72);
  sub_24008BADC((uint64_t)v72, (uint64_t)v73);
  v26 = 0;
  if ((v74 & 1) != 0)
    return v26;
  v27 = *(double *)v73;
  v28 = *(double *)&v73[1];
  v29 = *(double *)&v73[2];
  v30 = *(double *)&v73[3];
  swift_retain();
  sub_2400B5F8C(v71, 0, 1);
  swift_release();
  if (LOBYTE(v71[0]) == 3)
    return 0;
  v60 = LOBYTE(v71[0]);
  v61 = v6;
  v31 = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 216));
  if (!v31)
    goto LABEL_7;
  swift_retain();
  swift_retain();
  v58 = v7;
  v32 = v68;
  sub_240071824((uint64_t)v68);
  swift_release();
  swift_retain();
  sub_240071824((uint64_t)v32);
  swift_release();
  swift_retain();
  sub_240071824((uint64_t)v32);
  swift_release();
  v33 = (uint64_t)v32;
  v7 = v58;
  sub_2401161D8(v33);
  v34 = *(_QWORD *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState);
  swift_retain();
  swift_release();
  if (v34)
  {
    sub_240080084(v34 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
    swift_release();
    v35 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v24 + 56);
    v36 = v22;
    v37 = 0;
  }
  else
  {
LABEL_7:
    v35 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v24 + 56);
    v36 = v22;
    v37 = 1;
  }
  v59 = v35;
  v35((uint64_t)v36, v37, 1, v23);
  v38 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v38(v17, (char *)v68, v7);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23) == 1)
  {
    v38(v14, v17, v7);
    v39 = (uint64_t)v69;
    v38(v69, v14, v7);
    *(_QWORD *)(v39 + v23[5]) = &unk_251061B98;
    *(_QWORD *)(v39 + v23[6]) = &unk_251061BD0;
    v40 = *(void (**)(char *, uint64_t))(v8 + 8);
    v40(v14, v7);
    *(_QWORD *)(v39 + v23[7]) = &unk_251061C08;
    v40(v17, v7);
    sub_240070BD4((uint64_t)v22, &qword_256FB4438);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v7);
    sub_2400A4FB4((uint64_t)v22, (uint64_t)v69);
  }
  v41 = (uint64_t)v65;
  v42 = (uint64_t)v64;
  v43 = (uint64_t)v66;
  v44 = (char *)v68;
  v68 = v38;
  v38(v66, v44, v7);
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v61, v2 + qword_256FC4858, v63);
  v45 = *(_QWORD *)(v2 + qword_256FC4868 + 8);
  v71[0] = *(_QWORD *)(v2 + qword_256FC4868);
  v71[1] = v45;
  v46 = *(_QWORD *)(v2 + qword_256FC4870);
  v47 = *(_QWORD *)(v2 + qword_256FC4860);
  sub_2400B8D80(v2 + *(_QWORD *)(*(_QWORD *)v2 + 232), v42);
  v48 = type metadata accessor for DKPersonGroupFilter.Track(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v42, 1, v48))
  {
    sub_240070BD4(v42, &qword_256FB65E8);
  }
  else
  {
    v49 = *(_QWORD *)v42;
    v50 = *(unsigned __int8 *)(v42 + 8);
    sub_240070BD4(v42, &qword_256FB65E8);
    v51 = v50 == 1;
    v43 = (uint64_t)v66;
    if (!v51)
      goto LABEL_16;
  }
  v49 = -1;
LABEL_16:
  v52 = v67;
  sub_240080084((uint64_t)v69, v67, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  v59(v52, 0, 1, v23);
  v68((char *)v41, (char *)(v2 + qword_256FC4890), v7);
  v53 = *(_QWORD *)(v2 + qword_256FC48A0);
  v54 = *(_QWORD *)(v53 + 16);
  if (v54)
  {
    v55 = *(_QWORD *)(v53 + 8 * v54 + 24);
    swift_retain();
  }
  else
  {
    v55 = 0;
  }
  v56 = (uint64_t)v61;
  v70 = v60;
  type metadata accessor for DKHandTrackerState(0);
  swift_allocObject();
  v26 = DKHandTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)(v43, v56, v71, v46, v47, v49, v67, v41, v27, v28, v29, v30, 0, v55, &v70);
  sub_2400800C8((uint64_t)v69, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  return v26;
}

uint64_t sub_24010DDE8()
{
  return swift_release();
}

uint64_t DKHandTracker.deinit()
{
  uint64_t v0;

  v0 = _s23IntelligentTrackingCore13DKBodyTrackerCfd_0();
  swift_release();
  return v0;
}

uint64_t DKHandTracker.__deallocating_deinit()
{
  _s23IntelligentTrackingCore13DKBodyTrackerCfd_0();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24010DE6C@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_24010D73C(a1);
  *a2 = result;
  return result;
}

uint64_t sub_24010DE90(uint64_t a1, uint64_t *a2)
{
  return sub_24010D640(a1, *a2);
}

double sub_24010DE98@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 176);
  *a2 = result;
  return result;
}

double sub_24010DEA8(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 176) = *a1;
  return result;
}

uint64_t sub_24010DEB8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + qword_256FC4E58);
  return swift_retain();
}

uint64_t sub_24010DED0(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + qword_256FC4E58) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for DKHandTrackerConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKHandTrackerConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKHandTrackerConfiguration.handChiralityAlpha.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of DKHandTrackerConfiguration.handChiralityAlpha.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of DKHandTrackerConfiguration.handChiralityAlpha.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t type metadata accessor for DKHandTracker()
{
  uint64_t result;

  result = qword_256FBDF10;
  if (!qword_256FBDF10)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24010DF94()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DKHandTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKHandTracker.chiralityFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of DKHandTracker.chiralityFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of DKHandTracker.chiralityFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t DKLogVideoPlayer.__allocating_init(url:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  swift_allocObject();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24010E068;
  return DKLogVideoPlayer.init(url:)(a1);
}

uint64_t sub_24010E068(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t DKLogVideoPlayer.init(url:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[12] = a1;
  v2[13] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v2[14] = swift_task_alloc();
  v3 = sub_240154310();
  v2[15] = v3;
  v2[16] = *(_QWORD *)(v3 - 8);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24010E140()
{
  _QWORD *v0;
  uint64_t v1;
  id v2;
  void *v3;
  id v4;
  _QWORD *v5;

  v1 = v0[13];
  v0[18] = OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_logger;
  sub_2401544B4();
  v2 = objc_allocWithZone(MEMORY[0x24BDB26C8]);
  v3 = (void *)sub_240154190();
  v4 = objc_msgSend(v2, sel_initWithURL_options_, v3, 0);
  v0[19] = v4;

  *(_QWORD *)(v1 + 16) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBE230);
  v4;
  v0[20] = sub_240154394();
  v5 = (_QWORD *)swift_task_alloc();
  v0[21] = v5;
  *v5 = v0;
  v5[1] = sub_24010E248;
  return sub_2401549E8();
}

uint64_t sub_24010E248()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 176) = v0;
  swift_task_dealloc();

  swift_release();
  return swift_task_switch();
}

uint64_t sub_24010E2C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  int v5;
  int v6;
  uint64_t v7;
  id v8;
  int v9;
  int v10;
  uint64_t v11;
  void *v12;
  _QWORD *v13;

  v1 = *(_QWORD *)(v0 + 104);
  sub_240154A0C();
  *(_QWORD *)(v1 + 32) = v2;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDB23B0]), sel_initWithAsset_, *(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 24) = v3;
  objc_msgSend(v3, sel_setAppliesPreferredTrackTransform_, 1);
  v4 = *(id *)(v1 + 24);
  *(_QWORD *)(v0 + 40) = sub_2401549F4();
  *(_DWORD *)(v0 + 48) = v5;
  *(_DWORD *)(v0 + 52) = v6;
  *(_QWORD *)(v0 + 56) = v7;
  objc_msgSend(v4, sel_setRequestedTimeToleranceBefore_, v0 + 40);

  v8 = *(id *)(v1 + 24);
  *(_QWORD *)(v0 + 64) = sub_2401549F4();
  *(_DWORD *)(v0 + 72) = v9;
  *(_DWORD *)(v0 + 76) = v10;
  *(_QWORD *)(v0 + 80) = v11;
  objc_msgSend(v8, sel_setRequestedTimeToleranceAfter_, v0 + 64);

  objc_msgSend(*(id *)(v1 + 24), sel_setMaximumSize_, 1920.0, 1080.0);
  v12 = *(void **)(v1 + 16);
  *(_QWORD *)(v0 + 184) = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBE238);
  v12;
  *(_QWORD *)(v0 + 192) = sub_240154388();
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 200) = v13;
  *v13 = v0;
  v13[1] = sub_24010E450;
  return sub_2401549E8();
}

uint64_t sub_24010E450()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(*v1 + 208) = v0;
  swift_task_dealloc();

  swift_release();
  return swift_task_switch();
}

uint64_t sub_24010E4CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 88);
  *(_QWORD *)(v0 + 216) = v1;
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBE240);
    *(_QWORD *)(v0 + 224) = sub_24015437C();
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 232) = v2;
    *v2 = v0;
    v2[1] = sub_24010E678;
    return sub_2401549E8();
  }
  else
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 128) + 56))(*(_QWORD *)(v0 + 112), 1, 1, *(_QWORD *)(v0 + 120));
    v4 = *(_QWORD *)(v0 + 96);
    sub_240070BD4(*(_QWORD *)(v0 + 112), &qword_256FB4CC8);
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v5 = 0xD00000000000001FLL;
    *(_QWORD *)(v5 + 8) = 0x80000002401649A0;
    *(_BYTE *)(v5 + 16) = 0;
    swift_willThrow();
    v6 = sub_2401541D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);

    v7 = *(_QWORD *)(v0 + 104);
    v8 = v7 + *(_QWORD *)(v0 + 144);

    v9 = sub_2401544C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    type metadata accessor for DKLogVideoPlayer(0);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24010E678()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;

  v2 = *v1;
  *(_QWORD *)(*v1 + 240) = v0;
  swift_task_dealloc();
  v3 = *(void **)(v2 + 216);
  swift_release();

  return swift_task_switch();
}

uint64_t sub_24010E6F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 112);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    v4 = *(_QWORD *)(v0 + 96);
    sub_240070BD4(v3, &qword_256FB4CC8);
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v5 = 0xD00000000000001FLL;
    *(_QWORD *)(v5 + 8) = 0x80000002401649A0;
    *(_BYTE *)(v5 + 16) = 0;
    swift_willThrow();
    v6 = sub_2401541D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);

    v7 = *(_QWORD *)(v0 + 104);
    v8 = v7 + *(_QWORD *)(v0 + 144);

    v9 = sub_2401544C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    type metadata accessor for DKLogVideoPlayer(0);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 136);
    v12 = *(_QWORD *)(v0 + 96);
    v13 = *(_QWORD *)(v0 + 104);
    v14 = sub_2401541D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v12, v14);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
    v15(v11, v3, v1);
    v15(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_startTime, v11, v1);
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 104));
  }
}

uint64_t sub_24010E8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = sub_2401541D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  v3 = *(_QWORD *)(v0 + 104);
  v4 = v3 + *(_QWORD *)(v0 + 144);

  v5 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for DKLogVideoPlayer(0);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24010E98C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = sub_2401541D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  v3 = *(_QWORD *)(v0 + 104);
  v4 = v3 + *(_QWORD *)(v0 + 144);

  v5 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for DKLogVideoPlayer(0);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24010EA54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = sub_2401541D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = v3 + *(_QWORD *)(v0 + 144);

  v5 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for DKLogVideoPlayer(0);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for DKLogVideoPlayer(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FBE2B0);
}

uint64_t sub_24010EB24(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 48) = v1;
  *(double *)(v2 + 40) = a1;
  v3 = sub_240154310();
  *(_QWORD *)(v2 + 56) = v3;
  *(_QWORD *)(v2 + 64) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 72) = swift_task_alloc();
  *(_QWORD *)(v2 + 80) = swift_task_alloc();
  *(_QWORD *)(v2 + 88) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24010EBA4()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  _QWORD *v3;

  v1 = v0[6];
  sub_240154304();
  v2 = *(void **)(v1 + 24);
  v0[12] = v2;
  v2;
  sub_240154A00();
  v3 = (_QWORD *)swift_task_alloc();
  v0[13] = v3;
  *v3 = v0;
  v3[1] = sub_24010EC40;
  return sub_2401549C4();
}

uint64_t sub_24010EC40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  void *v4;

  v3 = *v2;
  v4 = *(void **)(*v2 + 96);
  *(_QWORD *)(v3 + 112) = a1;
  *(_QWORD *)(v3 + 120) = v1;
  swift_task_dealloc();

  return swift_task_switch();
}

uint64_t sub_24010ECB0()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  uint64_t v11;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 16))(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));
  v1 = sub_2401544A8();
  v2 = sub_240154964();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 56);
    v6 = *(_QWORD *)(v0 + 64);
    v7 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v7 = 134217984;
    sub_240154304();
    sub_24015428C();
    v9 = v8;
    v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v10(v3, v5);
    *(_QWORD *)(v0 + 32) = v9;
    sub_240154A6C();
    v10(v4, v5);
    _os_log_impl(&dword_24006B000, v1, v2, "%f", v7, 0xCu);
    MEMORY[0x24267E17C](v7, -1, -1);
  }
  else
  {
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 64) + 8);
    v10(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
  }

  v11 = *(_QWORD *)(v0 + 112);
  v10(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v11);
}

uint64_t sub_24010EE2C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  id v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(void **)(v0 + 120);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 64) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 56));
  v2 = v1;
  v3 = v1;
  v4 = sub_2401544A8();
  v5 = sub_240154958();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = *(void **)(v0 + 120);
    v7 = swift_slowAlloc();
    v8 = (_QWORD *)swift_slowAlloc();
    v13 = swift_slowAlloc();
    v14 = v13;
    *(_DWORD *)v7 = 136315394;
    *(_QWORD *)(v0 + 16) = sub_240112D54(0xD00000000000001CLL, 0x80000002401649C0, &v14);
    sub_240154A6C();
    *(_WORD *)(v7 + 12) = 2112;
    v9 = v6;
    v10 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 24) = v10;
    sub_240154A6C();
    *v8 = v10;

    _os_log_impl(&dword_24006B000, v4, v5, "Error in %s : %@", (uint8_t *)v7, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DF0);
    swift_arrayDestroy();
    MEMORY[0x24267E17C](v8, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x24267E17C](v13, -1, -1);
    MEMORY[0x24267E17C](v7, -1, -1);

  }
  else
  {
    v11 = *(void **)(v0 + 120);

  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t DKLogVideoPlayer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_startTime;
  v4 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t DKLogVideoPlayer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKLogVideoPlayer_startTime;
  v4 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t DKLogKeyframePlayer.__allocating_init(logFolder:keyframesURL:videoURL:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;

  swift_allocObject();
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_240114398;
  return DKLogKeyframePlayer.init(logFolder:keyframesURL:videoURL:startTime:)(a1, a2, a3, a4);
}

uint64_t DKLogKeyframePlayer.init(logFolder:keyframesURL:videoURL:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v5[11] = a4;
  v5[12] = v4;
  v5[9] = a2;
  v5[10] = a3;
  v5[8] = a1;
  v6 = sub_24015449C();
  v5[13] = v6;
  v5[14] = *(_QWORD *)(v6 - 8);
  v5[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  v5[16] = swift_task_alloc();
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v7 = sub_2401541D8();
  v5[19] = v7;
  v5[20] = *(_QWORD *)(v7 - 8);
  v5[21] = swift_task_alloc();
  v5[22] = swift_task_alloc();
  v5[23] = swift_task_alloc();
  v5[24] = swift_task_alloc();
  v5[25] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24010F32C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v14)(uint64_t, uint64_t, uint64_t);
  unsigned int (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  id v28;
  void *v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);
  void (*v49)(uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  id v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned __int8 *v76;
  unint64_t v77;
  _BYTE *v78;
  BOOL v79;
  _BYTE *v80;
  BOOL v81;
  BOOL v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  double v87;
  _QWORD *v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  BOOL *v97;
  _QWORD *v98;
  uint64_t v99;
  void (*v100)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 152);
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 88);
  v6 = *(_QWORD *)(v0 + 96);
  v7 = *(_QWORD *)(v0 + 80);
  *(_QWORD *)(v0 + 208) = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logger;
  sub_2401544B4();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframe) = 0;
  v8 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_videoPlayer;
  *(_QWORD *)(v0 + 216) = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_videoPlayer;
  *(_QWORD *)(v6 + v8) = 0;
  v9 = v6 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime;
  v10 = sub_240154310();
  *(_QWORD *)(v0 + 224) = v10;
  v11 = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v0 + 232) = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v5, v10);
  v12 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder;
  *(_QWORD *)(v0 + 240) = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder;
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 248) = v13;
  v13(v6 + v12, v1, v2);
  sub_240070B90(v7, v4, &qword_256FB4CB0);
  v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  *(_QWORD *)(v0 + 256) = v14;
  if (v14(v4, 1, v2) != 1)
  {
    v36 = *(_QWORD *)(v0 + 192);
    v37 = *(_QWORD *)(v0 + 200);
    v38 = *(_QWORD *)(v0 + 152);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v0 + 160) + 32))(v37, *(_QWORD *)(v0 + 144), v38);
    v13(v36, v37, v38);
    type metadata accessor for DKLogVideoPlayer(0);
    swift_allocObject();
    v39 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 264) = v39;
    *v39 = v0;
    v39[1] = sub_24010FED8;
    return DKLogVideoPlayer.init(url:)(*(_QWORD *)(v0 + 192));
  }
  sub_240070BD4(*(_QWORD *)(v0 + 144), &qword_256FB4CB0);
  v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v16 = *(_QWORD *)(v0 + 152);
  v17 = *(_QWORD *)(v0 + 136);
  sub_240070B90(*(_QWORD *)(v0 + 72), v17, &qword_256FB4CB0);
  if (v15(v17, 1, v16) == 1)
  {
    v18 = *(_QWORD *)(v0 + 216);
    v19 = *(_QWORD *)(v0 + 96);
    sub_240070BD4(*(_QWORD *)(v0 + 136), &qword_256FB4CB0);
    v20 = *(_QWORD *)(v19 + v18);
    if (!v20)
    {
      v41 = *(_QWORD *)(v0 + 224);
      v42 = *(_QWORD *)(v0 + 232);
      v43 = *(_QWORD *)(v0 + 160);
      v45 = *(_QWORD *)(v0 + 80);
      v44 = *(_QWORD *)(v0 + 88);
      v46 = *(_QWORD *)(v0 + 72);
      sub_240080040();
      swift_allocError();
      *(_QWORD *)v47 = 0xD00000000000001FLL;
      *(_QWORD *)(v47 + 8) = 0x80000002401649E0;
      *(_BYTE *)(v47 + 16) = 0;
      swift_willThrow();
      v48 = *(void (**)(uint64_t, uint64_t))(v42 + 8);
      v48(v44, v41);
      sub_240070BD4(v45, &qword_256FB4CB0);
      sub_240070BD4(v46, &qword_256FB4CB0);
      v49 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
      v50 = *(_QWORD *)(v0 + 224);
      v51 = *(_QWORD *)(v0 + 152);
      v52 = *(_QWORD *)(v0 + 96);
      v53 = v52 + *(_QWORD *)(v0 + 240);
      v54 = v52 + *(_QWORD *)(v0 + 208);
      v49(*(_QWORD *)(v0 + 64), v51);
      v49(v53, v51);
      v55 = sub_2401544C0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v54, v55);
      swift_release();
      swift_release();
      v48(v52 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime, v50);
      type metadata accessor for DKLogKeyframePlayer(0);
      swift_deallocPartialClassInstance();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(void))(v0 + 8))();
    }
    v22 = *(_QWORD *)(v0 + 112);
    v21 = *(_QWORD *)(v0 + 120);
    v23 = *(_QWORD *)(v0 + 96);
    v24 = *(_QWORD *)(v0 + 104);
    v25 = *(_QWORD *)(v0 + 88);
    v26 = *(_QWORD *)(v0 + 64);
    v27 = *(double *)(v20 + 32);
    swift_retain();
    *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes) = _s23IntelligentTrackingCore19DKLogKeyframePlayerC22generateEmptyKeyframes9logFolder9startTime8duration8intervalSayAA17DKKeyframeStorageCG10Foundation3URLV_AL4DateVS2dtFZ_0(v27, 0.033, v26, v25);
    sub_240154490();
    sub_24015419C();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v24);
    v28 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v29 = (void *)sub_240154190();
    *(_QWORD *)(v0 + 48) = 0;
    LOBYTE(v24) = objc_msgSend(v28, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v29, 0, 0, v0 + 48);

    v30 = *(void **)(v0 + 48);
    v31 = *(_QWORD *)(v0 + 176);
    v32 = *(_QWORD *)(v0 + 152);
    v33 = *(_QWORD *)(v0 + 160);
    if ((v24 & 1) != 0)
    {
      v34 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v35 = v30;
      v34(v31, v32);
      swift_release();
    }
    else
    {
      v58 = v30;
      v59 = (void *)sub_240154160();

      swift_willThrow();
      swift_release();

      v34 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v34(v31, v32);
    }
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 32))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 152));
    v56 = sub_2401133A8();
    v57 = *(_QWORD *)(v0 + 96);
    v34 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 8);
    v34(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 152));
    *(_QWORD *)(v57 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes) = v56;
  }
  *(_QWORD *)(v0 + 288) = v34;
  v60 = *(_QWORD *)(v0 + 96);
  v61 = *(_QWORD *)(v60 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_videoPlayer);
  *(_QWORD *)(v0 + 296) = v61;
  if (v61)
  {
    v62 = *(_QWORD *)(v60 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
    *(_QWORD *)(v0 + 304) = v62;
    if (v62 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v63 = sub_240154D30();
      *(_QWORD *)(v0 + 312) = v63;
      if (v63)
        goto LABEL_13;
    }
    else
    {
      v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 312) = v63;
      if (v63)
      {
LABEL_13:
        if (v63 < 1)
          __break(1u);
        v64 = 0;
        v98 = (_QWORD *)(v0 + 56);
        v97 = (BOOL *)(v0 + 376);
        do
        {
          *(_QWORD *)(v0 + 328) = v34;
          *(_QWORD *)(v0 + 336) = v64;
          *(_QWORD *)(v0 + 320) = v34;
          v65 = *(_QWORD *)(v0 + 304);
          if ((v65 & 0xC000000000000001) != 0)
          {
            v66 = MEMORY[0x24267D4E0]();
          }
          else
          {
            v66 = *(_QWORD *)(v65 + 8 * v64 + 32);
            swift_retain();
          }
          *(_QWORD *)(v0 + 344) = v66;
          v67 = *(_QWORD *)(v66 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName + 8);
          if (v67)
          {
            v100 = v34;
            v68 = *(_QWORD *)(v66 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
            v69 = *(_QWORD *)(v0 + 112);
            v70 = *(_QWORD *)(v0 + 120);
            v71 = *(_QWORD *)(v0 + 104);
            *(_QWORD *)(v0 + 16) = 0x2F6567616D69;
            *(_QWORD *)(v0 + 24) = 0xE600000000000000;
            swift_bridgeObjectRetain();
            v99 = v68;
            sub_2401546D0();
            sub_2401546D0();
            sub_240154484();
            sub_24015419C();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v70, v71);
            v72 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
            sub_2401541CC();
            v73 = (void *)sub_240154628();
            swift_bridgeObjectRelease();
            LOBYTE(v68) = objc_msgSend(v72, sel_fileExistsAtPath_, v73);

            if ((v68 & 1) != 0)
            {
              (*(void (**)(_QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
              swift_release();
              swift_bridgeObjectRelease();
              v34 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
              goto LABEL_16;
            }
            *v98 = 0;
            v74 = swift_task_alloc();
            *(_QWORD *)(v74 + 16) = v98;
            if ((v67 & 0x1000000000000000) != 0 || !(v67 & 0x2000000000000000 | v99 & 0x1000000000000000))
            {
              sub_240154B2C();
              swift_bridgeObjectRelease();
              v34 = v100;
            }
            else
            {
              v75 = swift_task_alloc();
              *(_QWORD *)(v75 + 16) = sub_240113B50;
              *(_QWORD *)(v75 + 24) = v74;
              v34 = v100;
              if ((v67 & 0x2000000000000000) != 0)
              {
                *(_QWORD *)(v0 + 32) = v99;
                *(_QWORD *)(v0 + 40) = v67 & 0xFFFFFFFFFFFFFFLL;
                v81 = (v99 > 0x20u || ((0x100003E01uLL >> v99) & 1) == 0)
                   && (v80 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
                   && *v80 == 0;
                *v97 = v81;
                swift_bridgeObjectRelease();
                swift_task_dealloc();
              }
              else
              {
                if ((v99 & 0x1000000000000000) != 0)
                  v76 = (unsigned __int8 *)((v67 & 0xFFFFFFFFFFFFFFFLL) + 32);
                else
                  v76 = (unsigned __int8 *)sub_240154BD4();
                v77 = *v76;
                v79 = (v77 >= 0x21 || ((0x100003E01uLL >> v77) & 1) == 0)
                   && (v78 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
                   && *v78 == 0;
                *v97 = v79;
                swift_task_dealloc();
                swift_bridgeObjectRelease();
              }
            }
            *(_QWORD *)(v0 + 352) = 0;
            v82 = *v97;
            swift_task_dealloc();
            if (v82)
            {
              v87 = *(double *)(v0 + 56);
              v88 = (_QWORD *)swift_task_alloc();
              *(_QWORD *)(v0 + 360) = v88;
              *v88 = v0;
              v88[1] = sub_240110B70;
              return sub_24010EB24(v87);
            }
            v34(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
          }
          swift_release();
LABEL_16:
          v64 = *(_QWORD *)(v0 + 336) + 1;
        }
        while (v64 != *(_QWORD *)(v0 + 312));
      }
    }
    v89 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    v90 = *(_QWORD *)(v0 + 224);
    v91 = *(_QWORD *)(v0 + 232);
    v92 = *(_QWORD *)(v0 + 152);
    v94 = *(_QWORD *)(v0 + 80);
    v93 = *(_QWORD *)(v0 + 88);
    v96 = *(_QWORD *)(v0 + 64);
    v95 = *(_QWORD *)(v0 + 72);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v93, v90);
    sub_240070BD4(v94, &qword_256FB4CB0);
    sub_240070BD4(v95, &qword_256FB4CB0);
    v89(v96, v92);
    swift_bridgeObjectRelease();
  }
  else
  {
    v83 = *(_QWORD *)(v0 + 152);
    v84 = *(_QWORD *)(v0 + 80);
    v86 = *(_QWORD *)(v0 + 64);
    v85 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 224));
    sub_240070BD4(v84, &qword_256FB4CB0);
    sub_240070BD4(v85, &qword_256FB4CB0);
    v34(v86, v83);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_24010FED8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 272) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 280) = a1;
  return swift_task_switch();
}

uint64_t sub_24010FF90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  int v8;
  __objc2_class **p_superclass;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  id v20;
  void *v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  id v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t);
  void (*v36)(uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 *v74;
  unint64_t v75;
  _BYTE *v76;
  BOOL v77;
  _BYTE *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  double v83;
  _QWORD *v84;
  void (*v85)(uint64_t, uint64_t);
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL *v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  void (*v97)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 280);
  v2 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 96);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 8))(*(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 152));
  *(_QWORD *)(v3 + v2) = v1;
  swift_release();
  v4 = *(_QWORD *)(v0 + 272);
  v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 256);
  v6 = *(_QWORD *)(v0 + 152);
  v7 = *(_QWORD *)(v0 + 136);
  sub_240070B90(*(_QWORD *)(v0 + 72), v7, &qword_256FB4CB0);
  v8 = v5(v7, 1, v6);
  p_superclass = (__objc2_class **)(_TtC23IntelligentTrackingCore18DKReturnToBaseTask + 8);
  if (v8 != 1)
  {
    v28 = (uint64_t *)(v0 + 184);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 160) + 32))(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 152));
    v29 = sub_2401133A8();
    if (!v4)
    {
      v52 = v29;
      v53 = *(_QWORD *)(v0 + 96);
      v26 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 160) + 8);
      v26(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 152));
      v95 = 0;
      *(_QWORD *)(v53 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes) = v52;
      goto LABEL_12;
    }
    v30 = *(_QWORD *)(v0 + 152);
    v31 = *(_QWORD *)(v0 + 160);
    v32 = *(_QWORD *)(v0 + 80);
    v34 = *(_QWORD *)(v0 + 64);
    v33 = *(_QWORD *)(v0 + 72);
    v35 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
    v35(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 224));
    sub_240070BD4(v32, &qword_256FB4CB0);
    sub_240070BD4(v33, &qword_256FB4CB0);
    v36 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
    v36(v34, v30);
LABEL_8:
    v44 = *v28;
    v45 = *(_QWORD *)(v0 + 224);
    v46 = *(_QWORD *)(v0 + 152);
    v47 = *(_QWORD *)(v0 + 96);
    v48 = v47 + *(_QWORD *)(v0 + 240);
    v49 = v47 + *(_QWORD *)(v0 + 208);
    v36(v44, v46);
    v36(v48, v46);
    v50 = sub_2401544C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 8))(v49, v50);
    swift_release();
    swift_release();
    v35(v47 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime, v45);
    type metadata accessor for DKLogKeyframePlayer(0);
    swift_deallocPartialClassInstance();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v95 = v4;
  v10 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 96);
  sub_240070BD4(*(_QWORD *)(v0 + 136), &qword_256FB4CB0);
  v12 = *(_QWORD *)(v11 + v10);
  if (!v12)
  {
    v37 = *(_QWORD *)(v0 + 224);
    v38 = *(_QWORD *)(v0 + 232);
    v39 = *(_QWORD *)(v0 + 160);
    v41 = *(_QWORD *)(v0 + 80);
    v40 = *(_QWORD *)(v0 + 88);
    v42 = *(_QWORD *)(v0 + 72);
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v43 = 0xD00000000000001FLL;
    *(_QWORD *)(v43 + 8) = 0x80000002401649E0;
    *(_BYTE *)(v43 + 16) = 0;
    swift_willThrow();
    v35 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v35(v40, v37);
    sub_240070BD4(v41, &qword_256FB4CB0);
    sub_240070BD4(v42, &qword_256FB4CB0);
    v36 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
    v28 = (uint64_t *)(v0 + 64);
    goto LABEL_8;
  }
  v13 = *(_QWORD *)(v0 + 112);
  v14 = *(_QWORD *)(v0 + 120);
  v16 = *(_QWORD *)(v0 + 96);
  v15 = *(_QWORD *)(v0 + 104);
  v17 = *(_QWORD *)(v0 + 88);
  v18 = *(_QWORD *)(v0 + 64);
  v19 = *(double *)(v12 + 32);
  swift_retain();
  *(_QWORD *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes) = _s23IntelligentTrackingCore19DKLogKeyframePlayerC22generateEmptyKeyframes9logFolder9startTime8duration8intervalSayAA17DKKeyframeStorageCG10Foundation3URLV_AL4DateVS2dtFZ_0(v19, 0.033, v18, v17);
  sub_240154490();
  sub_24015419C();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
  v20 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v21 = (void *)sub_240154190();
  *(_QWORD *)(v0 + 48) = 0;
  LOBYTE(v15) = objc_msgSend(v20, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v21, 0, 0, v0 + 48);

  v22 = *(void **)(v0 + 48);
  v23 = *(_QWORD *)(v0 + 176);
  v24 = *(_QWORD *)(v0 + 152);
  v25 = *(_QWORD *)(v0 + 160);
  if ((v15 & 1) != 0)
  {
    v26 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v27 = v22;
    v26(v23, v24);
    swift_release();
  }
  else
  {
    v54 = v22;
    v55 = (void *)sub_240154160();

    swift_willThrow();
    swift_release();

    v26 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v26(v23, v24);
    v95 = 0;
  }
  p_superclass = _TtC23IntelligentTrackingCore18DKReturnToBaseTask.superclass;
LABEL_12:
  *(_QWORD *)(v0 + 288) = v26;
  v56 = *(_QWORD *)(v0 + 96);
  v57 = *(uint64_t *)((char *)&p_superclass[465]->isa + v56);
  *(_QWORD *)(v0 + 296) = v57;
  if (v57)
  {
    v58 = *(_QWORD *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
    *(_QWORD *)(v0 + 304) = v58;
    if (v58 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v59 = sub_240154D30();
      *(_QWORD *)(v0 + 312) = v59;
      if (v59)
        goto LABEL_15;
    }
    else
    {
      v59 = *(_QWORD *)((v58 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
      *(_QWORD *)(v0 + 312) = v59;
      if (v59)
      {
LABEL_15:
        if (v59 < 1)
          __break(1u);
        v60 = 0;
        v94 = (_QWORD *)(v0 + 56);
        v93 = (BOOL *)(v0 + 376);
        do
        {
          *(_QWORD *)(v0 + 328) = v26;
          *(_QWORD *)(v0 + 336) = v60;
          *(_QWORD *)(v0 + 320) = v26;
          v63 = *(_QWORD *)(v0 + 304);
          if ((v63 & 0xC000000000000001) != 0)
          {
            v64 = MEMORY[0x24267D4E0]();
          }
          else
          {
            v64 = *(_QWORD *)(v63 + 8 * v60 + 32);
            swift_retain();
          }
          *(_QWORD *)(v0 + 344) = v64;
          v65 = *(_QWORD *)(v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName + 8);
          if (v65)
          {
            v97 = v26;
            v66 = *(_QWORD *)(v64 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
            v67 = *(_QWORD *)(v0 + 112);
            v68 = *(_QWORD *)(v0 + 120);
            v69 = *(_QWORD *)(v0 + 104);
            *(_QWORD *)(v0 + 16) = 0x2F6567616D69;
            *(_QWORD *)(v0 + 24) = 0xE600000000000000;
            swift_bridgeObjectRetain();
            v96 = v66;
            sub_2401546D0();
            sub_2401546D0();
            sub_240154484();
            sub_24015419C();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v69);
            v70 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
            sub_2401541CC();
            v71 = (void *)sub_240154628();
            swift_bridgeObjectRelease();
            LOBYTE(v66) = objc_msgSend(v70, sel_fileExistsAtPath_, v71);

            if ((v66 & 1) != 0)
            {
              (*(void (**)(_QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
              swift_release();
              swift_bridgeObjectRelease();
              v26 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
              goto LABEL_22;
            }
            *v94 = 0;
            v72 = swift_task_alloc();
            *(_QWORD *)(v72 + 16) = v94;
            if ((v65 & 0x1000000000000000) != 0 || !(v65 & 0x2000000000000000 | v96 & 0x1000000000000000))
            {
              sub_240154B2C();
              swift_bridgeObjectRelease();
              v26 = v97;
            }
            else
            {
              v73 = swift_task_alloc();
              *(_QWORD *)(v73 + 16) = sub_240113B50;
              *(_QWORD *)(v73 + 24) = v72;
              v26 = v97;
              if ((v65 & 0x2000000000000000) != 0)
              {
                *(_QWORD *)(v0 + 32) = v96;
                *(_QWORD *)(v0 + 40) = v65 & 0xFFFFFFFFFFFFFFLL;
                v61 = (v96 > 0x20u || ((0x100003E01uLL >> v96) & 1) == 0)
                   && (v78 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
                   && *v78 == 0;
                *v93 = v61;
                swift_bridgeObjectRelease();
                swift_task_dealloc();
              }
              else
              {
                if ((v96 & 0x1000000000000000) != 0)
                  v74 = (unsigned __int8 *)((v65 & 0xFFFFFFFFFFFFFFFLL) + 32);
                else
                  v74 = (unsigned __int8 *)sub_240154BD4();
                v75 = *v74;
                v77 = (v75 >= 0x21 || ((0x100003E01uLL >> v75) & 1) == 0)
                   && (v76 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
                   && *v76 == 0;
                *v93 = v77;
                swift_task_dealloc();
                swift_bridgeObjectRelease();
              }
            }
            *(_QWORD *)(v0 + 352) = v95;
            v62 = *v93;
            swift_task_dealloc();
            if (v62)
            {
              v83 = *(double *)(v0 + 56);
              v84 = (_QWORD *)swift_task_alloc();
              *(_QWORD *)(v0 + 360) = v84;
              *v84 = v0;
              v84[1] = sub_240110B70;
              return sub_24010EB24(v83);
            }
            v26(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
          }
          swift_release();
LABEL_22:
          v60 = *(_QWORD *)(v0 + 336) + 1;
        }
        while (v60 != *(_QWORD *)(v0 + 312));
      }
    }
    v85 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    v86 = *(_QWORD *)(v0 + 224);
    v87 = *(_QWORD *)(v0 + 232);
    v88 = *(_QWORD *)(v0 + 152);
    v90 = *(_QWORD *)(v0 + 80);
    v89 = *(_QWORD *)(v0 + 88);
    v92 = *(_QWORD *)(v0 + 64);
    v91 = *(_QWORD *)(v0 + 72);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v89, v86);
    sub_240070BD4(v90, &qword_256FB4CB0);
    sub_240070BD4(v91, &qword_256FB4CB0);
    v85(v92, v88);
    swift_bridgeObjectRelease();
  }
  else
  {
    v79 = *(_QWORD *)(v0 + 152);
    v80 = *(_QWORD *)(v0 + 80);
    v82 = *(_QWORD *)(v0 + 64);
    v81 = *(_QWORD *)(v0 + 72);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 232) + 8))(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 224));
    sub_240070BD4(v80, &qword_256FB4CB0);
    sub_240070BD4(v81, &qword_256FB4CB0);
    v26(v82, v79);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
}

uint64_t sub_240110998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 72);
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 232) + 8);
  v6(*(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 224));
  sub_240070BD4(v3, &qword_256FB4CB0);
  sub_240070BD4(v4, &qword_256FB4CB0);
  v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v5, v1);
  v8 = *(_QWORD *)(v0 + 224);
  v9 = *(_QWORD *)(v0 + 152);
  v10 = *(_QWORD *)(v0 + 96);
  v11 = v10 + *(_QWORD *)(v0 + 240);
  v12 = v10 + *(_QWORD *)(v0 + 208);
  v7(*(_QWORD *)(v0 + 200), v9);
  v7(v11, v9);
  v13 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  swift_release();
  swift_release();
  v6(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime, v8);
  type metadata accessor for DKLogKeyframePlayer(0);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240110B70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 368) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240110BF8()
{
  uint64_t v0;
  void *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void (*v8)(_QWORD, _QWORD);
  void (*v9)(_QWORD, _QWORD);
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  unsigned __int8 v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  BOOL *v32;
  unsigned __int8 *v33;
  unint64_t v34;
  _BYTE *v35;
  BOOL v36;
  _BYTE *v37;
  BOOL v38;
  BOOL v39;
  double v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v1 = *(void **)(v0 + 368);
  if (v1)
  {
    v2 = *(void (**)(uint64_t, uint64_t))(v0 + 328);
    v4 = *(_QWORD *)(v0 + 160);
    v3 = *(_QWORD *)(v0 + 168);
    v5 = *(_QWORD *)(v0 + 152);
    v6 = *(_QWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 248))(v6, v3, v5);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v6, 0, 1, v5);
    v7 = v1;
    sub_2400768D0(v6, 80);
    swift_release();

    swift_bridgeObjectRelease();
    sub_240070BD4(v6, &qword_256FB4CB0);
    v2(v3, v5);
    v9 = *(void (**)(_QWORD, _QWORD))(v0 + 320);
    v8 = *(void (**)(_QWORD, _QWORD))(v0 + 328);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(v0 + 320))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
    swift_release();
    v9 = *(void (**)(_QWORD, _QWORD))(v0 + 320);
    v8 = v9;
  }
  v10 = *(_QWORD *)(v0 + 336) + 1;
  if (v10 == *(_QWORD *)(v0 + 312))
  {
LABEL_5:
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 288);
    v12 = *(_QWORD *)(v0 + 224);
    v13 = *(_QWORD *)(v0 + 232);
    v14 = *(_QWORD *)(v0 + 152);
    v16 = *(_QWORD *)(v0 + 80);
    v15 = *(_QWORD *)(v0 + 88);
    v18 = *(_QWORD *)(v0 + 64);
    v17 = *(_QWORD *)(v0 + 72);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v12);
    sub_240070BD4(v16, &qword_256FB4CB0);
    sub_240070BD4(v17, &qword_256FB4CB0);
    v11(v18, v14);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 96));
  }
  v20 = v0 + 16;
  v43 = (_QWORD *)(v0 + 56);
  v42 = *(_QWORD *)(v0 + 352);
  while (1)
  {
    while (1)
    {
      *(_QWORD *)(v0 + 328) = v8;
      *(_QWORD *)(v0 + 336) = v10;
      *(_QWORD *)(v0 + 320) = v9;
      v21 = *(_QWORD *)(v0 + 304);
      if ((v21 & 0xC000000000000001) != 0)
      {
        v22 = MEMORY[0x24267D4E0]();
      }
      else
      {
        v22 = *(_QWORD *)(v21 + 8 * v10 + 32);
        swift_retain();
      }
      *(_QWORD *)(v0 + 344) = v22;
      v23 = *(_QWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName + 8);
      if (v23)
        break;
      swift_release();
      v10 = *(_QWORD *)(v0 + 336) + 1;
      if (v10 == *(_QWORD *)(v0 + 312))
        goto LABEL_5;
    }
    v24 = *(_QWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
    v25 = *(_QWORD *)(v0 + 120);
    v45 = *(_QWORD *)(v0 + 112);
    v46 = *(_QWORD *)(v0 + 104);
    *(_QWORD *)(v0 + 16) = 0x2F6567616D69;
    *(_QWORD *)(v0 + 24) = 0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_2401546D0();
    v44 = v20;
    sub_2401546D0();
    sub_240154484();
    sub_24015419C();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v25, v46);
    v26 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    sub_2401541CC();
    v27 = (void *)sub_240154628();
    swift_bridgeObjectRelease();
    v28 = objc_msgSend(v26, sel_fileExistsAtPath_, v27);

    if ((v28 & 1) == 0)
      break;
    (*(void (**)(_QWORD, _QWORD))(v0 + 288))(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
    swift_bridgeObjectRelease();
    swift_release();
    v8 = *(void (**)(_QWORD, _QWORD))(v0 + 288);
    v10 = *(_QWORD *)(v0 + 336) + 1;
    v9 = v8;
    v29 = v10 == *(_QWORD *)(v0 + 312);
    v20 = v44;
LABEL_15:
    if (v29)
      goto LABEL_5;
  }
  *v43 = 0;
  v30 = swift_task_alloc();
  *(_QWORD *)(v30 + 16) = v43;
  if ((v23 & 0x1000000000000000) != 0 || !(v23 & 0x2000000000000000 | v24 & 0x1000000000000000))
  {
    v32 = (BOOL *)(v0 + 376);
    sub_240154B2C();
    swift_bridgeObjectRelease();
    v20 = v44;
  }
  else
  {
    v31 = swift_task_alloc();
    *(_QWORD *)(v31 + 16) = sub_240113B50;
    *(_QWORD *)(v31 + 24) = v30;
    v20 = v44;
    if ((v23 & 0x2000000000000000) != 0)
    {
      *(_QWORD *)(v0 + 32) = v24;
      *(_QWORD *)(v0 + 40) = v23 & 0xFFFFFFFFFFFFFFLL;
      v38 = (v24 > 0x20u || ((0x100003E01uLL >> v24) & 1) == 0)
         && (v37 = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0
         && *v37 == 0;
      v32 = (BOOL *)(v0 + 376);
      *(_BYTE *)(v0 + 376) = v38;
      swift_bridgeObjectRelease();
      swift_task_dealloc();
    }
    else
    {
      v32 = (BOOL *)(v0 + 376);
      if ((v24 & 0x1000000000000000) != 0)
      {
        v33 = (unsigned __int8 *)((v23 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else
      {
        v33 = (unsigned __int8 *)sub_240154BD4();
        v32 = (BOOL *)(v0 + 376);
      }
      v34 = *v33;
      if (v34 < 0x21 && ((0x100003E01uLL >> v34) & 1) != 0)
      {
        v36 = 0;
      }
      else
      {
        v35 = (_BYTE *)_swift_stdlib_strtod_clocale();
        if (v35)
          v36 = *v35 == 0;
        else
          v36 = 0;
        v32 = (BOOL *)(v0 + 376);
      }
      *v32 = v36;
      swift_task_dealloc();
      swift_bridgeObjectRelease();
    }
  }
  *(_QWORD *)(v0 + 352) = v42;
  v39 = *v32;
  swift_task_dealloc();
  if (!v39)
  {
    v8(*(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 152));
    swift_release();
    v10 = *(_QWORD *)(v0 + 336) + 1;
    v29 = v10 == *(_QWORD *)(v0 + 312);
    goto LABEL_15;
  }
  v40 = *(double *)(v0 + 56);
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 360) = v41;
  *v41 = v0;
  v41[1] = sub_240110B70;
  return sub_24010EB24(v40);
}

uint64_t static DKLogKeyframePlayer.loadKeyframes(jsonURL:)()
{
  return sub_2401133A8();
}

uint64_t sub_24011120C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

void sub_240111224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex);
  v4 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
    if (!(v5 >> 62))
    {
      if (v4 < *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_4;
LABEL_8:
      (*(void (**)(_QWORD))(v0 + 8))(0);
      return;
    }
  }
  swift_bridgeObjectRetain();
  v9 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (v4 >= v9)
    goto LABEL_8;
LABEL_4:
  v6 = *(_QWORD *)(v1 + v2);
  v7 = v6 + 1;
  if (__OFADD__(v6, 1))
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + v2) = v7;
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v8;
    *v8 = v0;
    v8[1] = sub_240111324;
    sub_240111470(v7);
  }
}

uint64_t sub_240111324(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t sub_240111374()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24011138C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (v3 < v8)
      goto LABEL_3;
  }
  else if (v3 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    v5 = *(_QWORD *)(v1 + v2);
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 24) = v6;
    *v6 = v0;
    v6[1] = sub_240111324;
    return sub_240111470(v5);
  }
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_240111470(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_2401541D8();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

void sub_2401114D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 16);
  if (v1 < 0)
    goto LABEL_10;
  v2 = *(_QWORD *)(v0 + 24);
  v3 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes;
  v4 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
  if (!(v4 >> 62))
  {
    if (*(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) > v1)
      goto LABEL_4;
LABEL_10:
    v11 = 0;
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v12 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (v12 <= *(_QWORD *)(v0 + 16))
    goto LABEL_10;
LABEL_4:
  v5 = *(_QWORD *)(v0 + 24);
  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex);
  v7 = *(_QWORD *)(v2 + v3);
  if ((v7 & 0xC000000000000001) != 0)
  {
    v13 = *(_QWORD *)(v2 + v3);
    swift_bridgeObjectRetain();
    MEMORY[0x24267D4E0](v6, v13);
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v0 + 24);
    goto LABEL_8;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v6 < *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    swift_retain();
LABEL_8:
    v9 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 48);
    v10 = *(_QWORD *)(v0 + 32);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v5 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder, v10);
    v11 = sub_2400CE880(v8);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_11:
    swift_task_dealloc();
    (*(void (**)(uint64_t))(v0 + 8))(v11);
    return;
  }
  __break(1u);
}

uint64_t DKLogKeyframePlayer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder;
  v2 = sub_2401541D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logger;
  v4 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  v5 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime;
  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return v0;
}

uint64_t DKLogKeyframePlayer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logFolder;
  v2 = sub_2401541D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_logger;
  v4 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  v5 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_startTime;
  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_deallocClassInstance();
}

uint64_t DKLogPlayer.__allocating_init(rate:)(double a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 24) = 0;
  sub_2401544B4();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer) = 0;
  *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_rate) = a1;
  return v2;
}

uint64_t DKLogPlayer.init(rate:)(double a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 24) = 0;
  sub_2401544B4();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer) = 0;
  *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_rate) = a1;
  return v1;
}

uint64_t sub_2401118EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v2[4] = swift_task_alloc();
  v3 = sub_240154310();
  v2[5] = v3;
  v2[6] = *(_QWORD *)(v3 - 8);
  v2[7] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = type metadata accessor for DKLoggerMetafile(0);
  v2[14] = swift_task_alloc();
  v4 = sub_24015449C();
  v2[15] = v4;
  v2[16] = *(_QWORD *)(v4 - 8);
  v2[17] = swift_task_alloc();
  v5 = sub_2401541D8();
  v2[18] = v5;
  v2[19] = *(_QWORD *)(v5 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240111A4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;

  v2 = *(_QWORD *)(v0 + 128);
  v1 = *(_QWORD *)(v0 + 136);
  v3 = *(_QWORD *)(v0 + 120);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer;
  *(_QWORD *)(v0 + 176) = OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer;
  *(_QWORD *)(v4 + v5) = 0;
  swift_release();
  sub_240154484();
  sub_24015419C();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v6 = objc_allocWithZone(MEMORY[0x24BDBCE50]);
  v7 = (void *)sub_240154190();
  v8 = objc_msgSend(v6, sel_initWithContentsOfURL_, v7);

  if (v8)
  {
    sub_240154244();

    *(_OWORD *)(v0 + 184) = xmmword_24015DCB0;
  }
  v9 = *(_QWORD *)(v0 + 168);
  v10 = *(_QWORD *)(v0 + 144);
  v11 = *(_QWORD *)(v0 + 152);
  sub_240154B38();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v14 = 0xD000000000000018;
  *((_QWORD *)&v14 + 1) = 0x8000000240164A00;
  sub_24015416C();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  sub_240080040();
  swift_allocError();
  *(_OWORD *)v12 = v14;
  *(_BYTE *)(v12 + 16) = 0;
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240111F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 216) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 224) = a1;
  return swift_task_switch();
}

uint64_t sub_240112004()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 112);
  v7 = *(_QWORD *)(v0 + 88);
  v8 = *(_QWORD *)(v0 + 96);
  *(_QWORD *)(*(_QWORD *)(v0 + 24) + *(_QWORD *)(v0 + 176)) = *(_QWORD *)(v0 + 224);
  swift_release();
  swift_release();
  sub_240113BBC(v2, v1);
  sub_240070BD4(v7, &qword_256FB4CB0);
  sub_240070BD4(v8, &qword_256FB4CB0);
  sub_2400D0248(v6);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240112148()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 184);
  v3 = *(_QWORD *)(v0 + 168);
  v4 = *(_QWORD *)(v0 + 144);
  v5 = *(_QWORD *)(v0 + 152);
  v6 = *(_QWORD *)(v0 + 112);
  v8 = *(_QWORD *)(v0 + 88);
  v7 = *(_QWORD *)(v0 + 96);
  swift_release();
  sub_240113BBC(v2, v1);
  sub_240070BD4(v8, &qword_256FB4CB0);
  sub_240070BD4(v7, &qword_256FB4CB0);
  sub_2400D0248(v6);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_240112274()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 24);
  if (v1)
  {
    v2 = v1;
    sub_240118A6C();

  }
}

uint64_t sub_2401122C0()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  return swift_bridgeObjectRelease();
}

uint64_t sub_2401122D4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;

  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_QWORD *)(v5 + 24) = a2;
  v6 = *(_QWORD **)(v2 + 16);
  swift_retain();
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + 16) = v6;
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_240078E28(0, v6[2] + 1, 1, v6);
    v6 = (_QWORD *)result;
    *(_QWORD *)(v2 + 16) = result;
  }
  v9 = v6[2];
  v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    result = (uint64_t)sub_240078E28((_QWORD *)(v8 > 1), v9 + 1, 1, v6);
    v6 = (_QWORD *)result;
  }
  v6[2] = v9 + 1;
  v10 = &v6[2 * v9];
  v10[4] = sub_240113C3C;
  v10[5] = v5;
  *(_QWORD *)(v2 + 16) = v6;
  return result;
}

uint64_t sub_2401123A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[2] = a4;
  v5 = sub_240154310();
  v4[3] = v5;
  v4[4] = *(_QWORD *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240112418()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_keyframePlayer);
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    v2 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex;
    v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_currentKeyframeIndex);
    v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKLogKeyframePlayer_keyframes);
    swift_retain();
    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      v8 = sub_240154D30();
      swift_bridgeObjectRelease();
      if (v3 < v8)
        goto LABEL_4;
    }
    else if (v3 < *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      v5 = *(_QWORD *)(v1 + v2);
      v6 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 64) = v6;
      *v6 = v0;
      v6[1] = sub_240112528;
      return sub_240111470(v5);
    }
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240112528(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 72) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240112584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t *);
  uint64_t v6;
  _QWORD *v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 72);
  if (v1)
  {
    v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
    v3 = *(_QWORD *)(v2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      v4 = v2 + 40;
      do
      {
        v5 = *(void (**)(uint64_t *))(v4 - 8);
        v9 = v1;
        swift_retain();
        v5(&v9);
        swift_release();
        v4 += 16;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    v6 = *(_QWORD *)(v0 + 56);
    v7 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 80) = v7;
    *v7 = v0;
    v7[1] = sub_24011268C;
    v7[2] = v6;
    return swift_task_switch();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_24011268C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = a1;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2401126E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  double v9;
  double v10;
  void (*v11)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 88);
  if (v1)
  {
    v2 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 40);
    v3 = *(_QWORD *)(v0 + 48);
    v5 = *(_QWORD *)(v0 + 24);
    v6 = *(_QWORD *)(v0 + 32);
    v7 = *(_QWORD *)(v0 + 16);
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v8(v3, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, v5);
    v8(v4, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, v5);
    sub_24015428C();
    v10 = v9;
    v11 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v11(v4, v5);
    v11(v3, v5);
    sub_2401127E4(v10 / *(double *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_rate));
    swift_release();
  }
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_2401127E4(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t ObjectType;
  char *v21;
  void (*v22)(char *, uint64_t);
  void (*v23)(char *, uint64_t);
  id v24;
  id v25;
  void *v26;
  _QWORD v27[2];

  v2 = v1;
  v4 = sub_2401544CC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v27 - v9;
  v11 = sub_240154508();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v27 - v16;
  v18 = *(char **)(v2 + 24);
  if (v18)
  {
    v27[1] = *(_QWORD *)&v18[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_timer];
    v19 = v5;
    ObjectType = swift_getObjectType();
    v21 = v18;
    sub_2401544FC();
    MEMORY[0x24267CE5C](v14, a1);
    v22 = *(void (**)(char *, uint64_t))(v12 + 8);
    v22(v14, v11);
    (*(void (**)(char *, _QWORD, uint64_t))(v19 + 104))(v10, *MEMORY[0x24BEE5418], v4);
    sub_2401186E4(v7);
    MEMORY[0x24267D318](v17, v10, v7, ObjectType);
    v23 = *(void (**)(char *, uint64_t))(v19 + 8);
    v23(v7, v4);
    v23(v10, v4);
    v22(v17, v11);

  }
  else
  {
    v24 = objc_allocWithZone((Class)type metadata accessor for DKRepeatingTimer());
    swift_retain();
    v25 = DKRepeatingTimer.init(interval:fireOnce:queue:_:)(1, 0, (uint64_t)sub_240114208, v2, a1);
    v26 = *(void **)(v2 + 24);
    *(_QWORD *)(v2 + 24) = v25;

  }
}

uint64_t sub_2401129FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[4];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBCAA8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2401548A4();
  v6 = *(_QWORD *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = 0;
  v7[3] = 0;
  v7[4] = a1;
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_240070BD4((uint64_t)v4, &qword_256FBCAA8);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    sub_240154898();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      v9 = sub_24015485C();
      v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
  }
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = &unk_256FBE6F8;
  *(_QWORD *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t DKLogPlayer.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t DKLogPlayer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore11DKLogPlayer_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_240112CA4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240112D08;
  return v6(a1);
}

uint64_t sub_240112D08()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_240112D54(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12[3];
  uint64_t ObjectType;

  v6 = sub_240112E24(v12, 0, 0, 1, a1, a2);
  v7 = v12[0];
  if (v6)
  {
    v8 = v6;
    ObjectType = swift_getObjectType();
    v12[0] = v8;
    v9 = *a3;
    if (*a3)
    {
      sub_24007CCD8((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v12[0] = a1;
    v12[1] = a2;
    v10 = *a3;
    if (*a3)
    {
      sub_24007CCD8((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_240112E24(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (_QWORD *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_240154A78();
            result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    result = sub_240112FDC(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0)
    goto LABEL_13;
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  v8 = sub_240154BD4();
  if (!v8)
  {
    sub_240154CF4();
    __break(1u);
LABEL_17:
    result = sub_240154D60();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

uint64_t sub_240112FDC(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_240113070(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_240113248(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_240113248(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_240113070(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_2401131E4(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_240154B44();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_240154CF4();
      __break(1u);
LABEL_10:
      v2 = sub_2401546DC();
      if (!v2)
        return MEMORY[0x24BEE4AF8];
    }
    sub_240154D60();
    __break(1u);
LABEL_14:
    result = sub_240154CF4();
    __break(1u);
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

_QWORD *sub_2401131E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBE750);
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_240113248(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBE750);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DKLogKeyframePlayer(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FBE3F8);
}

uint64_t sub_2401133A8()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  __int128 v5;

  sub_240154040();
  swift_allocObject();
  sub_240154034();
  v0 = objc_allocWithZone(MEMORY[0x24BDBCE50]);
  v1 = (void *)sub_240154190();
  v2 = objc_msgSend(v0, sel_initWithContentsOfURL_, v1);

  if (v2)
  {
    sub_240154244();

  }
  sub_240154B38();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5 = 0xD000000000000014;
  *((_QWORD *)&v5 + 1) = 0x8000000240164B50;
  sub_24015416C();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  sub_240080040();
  swift_allocError();
  *(_OWORD *)v3 = v5;
  *(_BYTE *)(v3 + 16) = 0;
  swift_willThrow();
  return swift_release();
}

uint64_t _s23IntelligentTrackingCore19DKLogKeyframePlayerC22generateEmptyKeyframes9logFolder9startTime8duration8intervalSayAA17DKKeyframeStorageCG10Foundation3URLV_AL4DateVS2dtFZ_0(double a1, double a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  int *v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  uint64_t result;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(char *, char *, uint64_t);
  _QWORD *v36;
  char *v37;
  double v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  char *v42;
  char v43;
  char *v44;
  void (*v45)(char *, char *, uint64_t);
  char *v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  _QWORD *v54;
  void (*v55)(uint64_t, char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  void (*v68)(char *, uint64_t, uint64_t);
  char *v69;
  _QWORD *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  __int128 v74;
  char *v75;
  uint64_t v76;
  char *v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  char *v80;
  double *v81;
  char *v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;

  v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBE728);
  MEMORY[0x24BDAC7A8](v73);
  v70 = (uint64_t *)((char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v7);
  v78 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_240154310();
  v10 = *(_QWORD **)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v72 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v66 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v66 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBE730);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_256FBE738);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v84 = MEMORY[0x24BEE4AF8];
  sub_2401542BC();
  v24 = (void (*)(char *, uint64_t, uint64_t))v10[2];
  v76 = a4;
  v24(v20, a4, v9);
  v25 = &v20[*(int *)(v18 + 36)];
  v68 = v24;
  result = ((uint64_t (*)(char *, char *, uint64_t))v24)(v25, v17, v9);
  if (a2 != 0.0)
  {
    v27 = *(int *)(v18 + 40);
    *(double *)&v20[v27] = a2;
    v28 = (void (*)(char *, uint64_t))v10[1];
    v80 = v17;
    v83 = v28;
    v28(v17, v9);
    v29 = v21[11];
    v67 = v10;
    v30 = &v23[v29];
    v31 = &v23[v29 + *(int *)(v73 + 48)];
    v32 = (void (*)(char *, char *, uint64_t))v10[4];
    v32(v31, v20, v9);
    v77 = &v23[v21[9]];
    v79 = v32;
    ((void (*)(void))v32)();
    v33 = *(_QWORD *)&v20[v27];
    v81 = (double *)&v23[v21[10]];
    v82 = v31;
    *(_QWORD *)v81 = v33;
    v34 = v31;
    v35 = (void (*)(char *, char *, uint64_t))v68;
    v68(v23, (uint64_t)v34, v9);
    *(_QWORD *)v30 = 0;
    v69 = v30;
    v30[8] = 0;
    v74 = xmmword_240156510;
    v36 = v67;
    v71 = v23;
    v37 = v72;
    v75 = v14;
    while (1)
    {
      v35(v14, v82, v9);
      v38 = *v81;
      sub_2400707A8(&qword_256FBE740, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE948]);
      if (v38 <= 0.0)
      {
        if ((sub_240154604() & 1) == 0)
        {
LABEL_5:
          v39 = *(int *)(v73 + 48);
          v41 = v69;
          v40 = v70;
          v42 = (char *)v70 + v39;
          v43 = v69[8];
          *v70 = *(_QWORD *)v69;
          *((_BYTE *)v40 + 8) = v43;
          v44 = v82;
          v45 = v35;
          v35((char *)v40 + v39, v82, v9);
          sub_2400707A8(&qword_256FBE748, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE970]);
          v46 = v80;
          v47 = sub_240154A84();
          v49 = v48;
          v83(v42, v9);
          *(_QWORD *)v41 = v47;
          v50 = v49 & 1;
          v37 = v72;
          v41[8] = v50;
          ((void (*)(char *, char *, uint64_t))v36[5])(v44, v46, v9);
          v51 = v78;
          v79(v78, v14, v9);
          v52 = 0;
          goto LABEL_8;
        }
      }
      else if ((sub_2401545F8() & 1) == 0)
      {
        goto LABEL_5;
      }
      v45 = v35;
      v83(v14, v9);
      v52 = 1;
      v51 = v78;
LABEL_8:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v36[7])(v51, v52, 1, v9);
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v36[6])(v51, 1, v9) == 1)
      {
        sub_240070BD4((uint64_t)v71, &qword_256FBE738);
        return v84;
      }
      v53 = v45;
      v54 = v36;
      v55 = (void (*)(uint64_t, char *, uint64_t))v79;
      v79(v37, v51, v9);
      v56 = v80;
      v35 = v53;
      v53(v80, v37, v9);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6070);
      v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = v74;
      sub_24015428C();
      *(_QWORD *)(v57 + 56) = MEMORY[0x24BEE13C8];
      *(_QWORD *)(v57 + 64) = MEMORY[0x24BEE1448];
      *(_QWORD *)(v57 + 32) = v58;
      v59 = sub_240154670();
      v60 = v37;
      v62 = v61;
      type metadata accessor for DKKeyframeStorage(0);
      v63 = swift_allocObject();
      *(_QWORD *)(v63 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x24BEE4AF8];
      v64 = (uint64_t *)(v63 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
      *v64 = 0;
      v64[1] = 0;
      v55(v63 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v56, v9);
      *v64 = v59;
      v64[1] = v62;
      v65 = swift_bridgeObjectRelease();
      MEMORY[0x24267D0CC](v65);
      if (*(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2401547D8();
      sub_240154814();
      sub_2401547B4();
      v83(v60, v9);
      v36 = v54;
      v14 = v75;
      v37 = v60;
    }
  }
  __break(1u);
  return result;
}

_BYTE *sub_240113B50@<X0>(_BYTE *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3;
  BOOL v4;
  uint64_t v5;
  BOOL v6;
  BOOL v7;

  v3 = *result;
  v4 = v3 > 0x20;
  v5 = (1 << v3) & 0x100003E01;
  v6 = v4 || v5 == 0;
  v7 = v6 && (result = (_BYTE *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

uint64_t sub_240113BBC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_240075D14(a1, a2);
  return a1;
}

uint64_t sub_240113BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240113C18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_240113C3C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

uint64_t sub_240113C60()
{
  return type metadata accessor for DKLogVideoPlayer(0);
}

uint64_t sub_240113C68()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2401544C0();
  if (v1 <= 0x3F)
  {
    result = sub_240154310();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKLogVideoPlayer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKLogVideoPlayer.__allocating_init(url:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 216) + *(_QWORD *)(v1 + 216));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240113D7C;
  return v6(a1);
}

uint64_t sub_240113D7C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of DKLogVideoPlayer.getVideoFrame(timeInterval:)(double a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(double);

  v6 = (uint64_t (*)(double))(**(int **)(*(_QWORD *)v1 + 224) + *(_QWORD *)(*(_QWORD *)v1 + 224));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086AD4;
  return v6(a1);
}

uint64_t sub_240113E34()
{
  return type metadata accessor for DKLogKeyframePlayer(0);
}

uint64_t sub_240113E3C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_2401541D8();
  if (v1 <= 0x3F)
  {
    result = sub_2401544C0();
    if (v2 <= 0x3F)
    {
      result = sub_240154310();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKLogKeyframePlayer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKLogKeyframePlayer.__allocating_init(logFolder:keyframesURL:videoURL:startTime:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(uint64_t, uint64_t, uint64_t, uint64_t);

  v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v4 + 280) + *(_QWORD *)(v4 + 280));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_24011439C;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DKLogKeyframePlayer.getNextKeyframe()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 288) + *(_QWORD *)(*(_QWORD *)v0 + 288));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240086C6C;
  return v4();
}

uint64_t dispatch thunk of DKLogKeyframePlayer.getCurrentKeyframe()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 296) + *(_QWORD *)(*(_QWORD *)v0 + 296));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240086C6C;
  return v4();
}

uint64_t dispatch thunk of DKLogKeyframePlayer.getKeyframe(index:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 304) + *(_QWORD *)(*(_QWORD *)v1 + 304));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086C6C;
  return v6(a1);
}

uint64_t sub_2401140A4()
{
  return type metadata accessor for DKLogPlayer(0);
}

uint64_t type metadata accessor for DKLogPlayer(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FBE5A0);
}

uint64_t sub_2401140C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2401544C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKLogPlayer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKLogPlayer.__allocating_init(rate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DKLogPlayer.load(logFolder:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 224) + *(_QWORD *)(*(_QWORD *)v1 + 224));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24008670C;
  return v6(a1);
}

uint64_t dispatch thunk of DKLogPlayer.play(delay:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKLogPlayer.pause()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKLogPlayer.stop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKLogPlayer.deregisterCallbacks()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKLogPlayer.registerCallback(callback:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t sub_240114208()
{
  uint64_t v0;

  return sub_2401129FC(v0);
}

uint64_t sub_240114210()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24011423C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_24008670C;
  return sub_2401123A8(a1, v4, v5, v6);
}

uint64_t sub_2401142A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_240086C70;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_256FBE700 + dword_256FBE700))(a1, v4);
}

unint64_t sub_240114318()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FBE718;
  if (!qword_256FBE718)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FBE710);
    v2 = sub_2400707A8(&qword_256FBE720, type metadata accessor for DKKeyframeStorage, (uint64_t)&protocol conformance descriptor for DKKeyframeStorage);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FBE718);
  }
  return result;
}

uint64_t sub_2401143A0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = v0;
  v2 = sub_240154310();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  v1[6] = swift_task_alloc();
  v3 = type metadata accessor for DKCamera();
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 - 8);
  v1[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24011444C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  v19 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(*(_QWORD *)(v4 + 48)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces))
    v6 = *(_QWORD *)(*(_QWORD *)(v4 + 48)
                   + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
  else
    v6 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  v7 = sub_240091550(v6);
  swift_bridgeObjectRelease();
  sub_240095220(v7);
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies))
    v9 = *(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
  else
    v9 = v5;
  swift_bridgeObjectRetain();
  v10 = sub_24009156C(v9);
  swift_bridgeObjectRelease();
  sub_240095220(v10);
  v11 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands))
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
  else
    v12 = v5;
  swift_bridgeObjectRetain();
  v13 = sub_240091774(v12);
  swift_bridgeObjectRelease();
  sub_240095220(v13);
  sub_24008BA50(*(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_2401146D0(*(_QWORD *)(v0 + 48));
  }
  else
  {
    v14 = *(double **)(v0 + 72);
    sub_240070AF8(*(_QWORD *)(v0 + 48), (uint64_t)v14);
    swift_retain();
    sub_240090D6C(v14);
    swift_release();
    sub_240070B3C((uint64_t)v14);
  }
  v15 = *(_QWORD *)(v0 + 40);
  v16 = *(_QWORD *)(v0 + 24);
  v17 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v15, *(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v16);
  swift_retain();
  sub_24009192C(v15, v19);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_24011468C()
{
  return type metadata accessor for DKTrackerTask();
}

uint64_t type metadata accessor for DKTrackerTask()
{
  uint64_t result;

  result = qword_256FBE780;
  if (!qword_256FBE780)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2401146D0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t DKFPSTracker.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB73A8);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t DKThreadSafeBuffer.__allocating_init(maxLenght:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKThreadSafeBuffer.init(maxLenght:)(a1);
  return v2;
}

uint64_t sub_2401147A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  void *v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  unsigned int v31;
  id v32;
  uint64_t v33;
  id v35;
  void *v36;
  int64_t v37;
  unint64_t v38;
  os_log_type_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  char v50[9];
  uint64_t v51;

  v43 = a3;
  v44 = a4;
  v41 = a1;
  v42 = a2;
  v47 = a5;
  v51 = *MEMORY[0x24BDAC8D0];
  v5 = sub_240154370();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_240154310();
  v10 = *(_QWORD *)(v9 - 8);
  v45 = v9;
  v46 = v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240154304();
  v13 = objc_allocWithZone(MEMORY[0x24BDD1500]);
  v14 = objc_msgSend(v13, sel_init, v41, v42, v43, v44);
  v15 = (void *)sub_240154628();
  objc_msgSend(v14, sel_setDateFormat_, v15);

  sub_240154364();
  v16 = (void *)sub_240154358();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(v14, sel_setTimeZone_, v16);

  v17 = (void *)sub_2401542A4();
  v18 = objc_msgSend(v14, sel_stringFromDate_, v17);

  v19 = sub_24015464C();
  v21 = v20;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6070);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_240156510;
  *(_QWORD *)(v22 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v22 + 64) = sub_24011559C();
  *(_QWORD *)(v22 + 32) = v19;
  *(_QWORD *)(v22 + 40) = v21;
  sub_240154670();
  v23 = (void *)objc_opt_self();
  v24 = objc_msgSend(v23, sel_defaultManager);
  v25 = (void *)sub_240154628();
  v26 = objc_msgSend(v24, sel_fileExistsAtPath_, v25);

  v27 = v47;
  if ((v26 & 1) != 0)
    goto LABEL_4;
  v28 = v46;
  v29 = objc_msgSend(v23, sel_defaultManager);
  v30 = (void *)sub_240154628();
  v48 = 0;
  v31 = objc_msgSend(v29, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v30, 0, 0, &v48);

  if (v31)
  {
    v32 = (id)v48;
    v27 = v47;
LABEL_4:
    v48 = 47;
    v49 = 0xE100000000000000;
    sub_2401546D0();
    sub_2401546D0();
    sub_2401546D0();
    swift_bridgeObjectRelease();
    sub_2401546D0();
    sub_2401546D0();
    v48 = 0xD000000000000026;
    v49 = 0x8000000240164E00;
    sub_2401546D0();
    swift_bridgeObjectRelease();
    sub_240154178();
    swift_bridgeObjectRelease();

    (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v45);
    v33 = sub_2401541D8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v27, 0, 1, v33);
  }
  v35 = (id)v48;
  swift_bridgeObjectRelease();
  v36 = (void *)sub_240154160();

  swift_willThrow();
  v50[0] = 11;
  v48 = 0;
  v49 = 0xE000000000000000;
  sub_240154B38();
  swift_bridgeObjectRelease();
  v48 = 0xD000000000000026;
  v49 = 0x8000000240164E30;
  swift_getErrorValue();
  sub_240154F94();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  v37 = v48;
  v38 = v49;
  v39 = sub_240154958();
  _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v50, v37, v38, v39);
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v28 + 8))(v12, v45);
  v40 = sub_2401541D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v47, 1, 1, v40);
}

uint64_t DKFPSTracker.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB73A8);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 16) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t sub_240114C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_unfair_lock_s *v5;
  unint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  unint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v12;

  v1 = sub_240154310();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  sub_2401542F8();
  v6 = *(_QWORD *)(v0 + 24);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v0 + 24) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v6 = sub_240077C8C(0, *(_QWORD *)(v6 + 16) + 1, 1, v6);
    *(_QWORD *)(v0 + 24) = v6;
  }
  v9 = *(_QWORD *)(v6 + 16);
  v8 = *(_QWORD *)(v6 + 24);
  if (v9 >= v8 >> 1)
  {
    v6 = sub_240077C8C(v8 > 1, v9 + 1, 1, v6);
    *(_QWORD *)(v0 + 24) = v6;
  }
  *(_QWORD *)(v6 + 16) = v9 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v6+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v9, v4, v1);
  v10 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  return swift_release();
}

uint64_t sub_240114DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char *v21;
  char *v22;
  double v23;
  double v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  os_unfair_lock_s *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v6);
  v40 = (char *)&v32 - v10;
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v32 - v11;
  v13 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v13 + 4);
  swift_release();
  v14 = *(_QWORD *)(v0 + 24);
  v41 = MEMORY[0x24BEE4AF8];
  v15 = *(_QWORD *)(v14 + 16);
  result = swift_bridgeObjectRetain();
  v39 = v15;
  v33 = v0;
  if (v15)
  {
    v37 = v14;
    v38 = v8;
    v17 = 0;
    v34 = v3;
    v36 = v12;
    while (v17 < *(_QWORD *)(v14 + 16))
    {
      v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v19 = *(_QWORD *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v3, v14 + v18 + v19 * v17, v4);
      v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v35(v3, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
        goto LABEL_15;
      v20 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v21 = v3;
      v20(v12, v3, v4);
      v22 = v40;
      sub_2401542F8();
      sub_24015428C();
      v24 = v23;
      v25 = v12;
      v26 = *(void (**)(char *, uint64_t))(v5 + 8);
      v26(v22, v4);
      if (v24 >= 1.0)
      {
        result = ((uint64_t (*)(char *, uint64_t))v26)(v25, v4);
        v3 = v21;
      }
      else
      {
        v20(v38, v25, v4);
        v27 = v41;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_2400E59C4(0, *(_QWORD *)(v27 + 16) + 1, 1);
          v27 = v41;
        }
        v29 = *(_QWORD *)(v27 + 16);
        v28 = *(_QWORD *)(v27 + 24);
        if (v29 >= v28 >> 1)
        {
          sub_2400E59C4(v28 > 1, v29 + 1, 1);
          v27 = v41;
        }
        *(_QWORD *)(v27 + 16) = v29 + 1;
        result = ((uint64_t (*)(unint64_t, char *, uint64_t))v20)(v27 + v18 + v29 * v19, v38, v4);
        v41 = v27;
        v3 = v34;
      }
      ++v17;
      v12 = v36;
      v14 = v37;
      if (v39 == v17)
      {
        v35(v3, 1, 1, v4);
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
LABEL_15:
    swift_bridgeObjectRelease();
    sub_240077EAC((uint64_t)v3);
    v30 = v33;
    *(_QWORD *)(v33 + 24) = v41;
    swift_bridgeObjectRelease();
    v31 = *(os_unfair_lock_s **)(v30 + 16);
    swift_retain();
    os_unfair_lock_unlock(v31 + 4);
    return swift_release();
  }
  return result;
}

uint64_t DKFPSTracker.__deallocating_deinit()
{
  return sub_240115460();
}

_QWORD *DKThreadSafeBuffer.init(maxLenght:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB73A8);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 16) = 0;
  v1[2] = v3;
  v1[3] = sub_240154538();
  v1[4] = a1;
  return v1;
}

uint64_t sub_24011517C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v14;

  v2 = v1;
  v4 = *(_QWORD *)(*v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (os_unfair_lock_s *)v2[2];
  swift_retain();
  os_unfair_lock_lock(v8 + 4);
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v9 = sub_240154844();
  sub_24015482C();
  v10 = swift_bridgeObjectRetain();
  v11 = MEMORY[0x24267D168](v10, v4);
  swift_bridgeObjectRelease();
  if (v2[4] < v11)
  {
    MEMORY[0x24267E0BC](MEMORY[0x24BEE12E8], v9);
    sub_240154928();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v12 = (os_unfair_lock_s *)v2[2];
  swift_retain();
  os_unfair_lock_unlock(v12 + 4);
  return swift_release();
}

uint64_t sub_2401152BC@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  void (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, double);
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  uint64_t v17;

  v2 = v1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = sub_240154A30();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v4 - 8) + 56);
  v10(a1, 1, 1, v4, v7);
  v11 = (os_unfair_lock_s *)v1[2];
  swift_retain();
  os_unfair_lock_lock(v11 + 4);
  swift_release();
  v12 = swift_bridgeObjectRetain();
  v13 = MEMORY[0x24267D168](v12, v4);
  swift_bridgeObjectRelease();
  if (v13 >= 1)
  {
    v14 = sub_240154844();
    MEMORY[0x24267E0BC](MEMORY[0x24BEE12E8], v14);
    sub_240154928();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v10)(v9, 0, 1, v4);
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a1, v9, v5);
  }
  v15 = (os_unfair_lock_s *)v2[2];
  swift_retain();
  os_unfair_lock_unlock(v15 + 4);
  return swift_release();
}

uint64_t _s23IntelligentTrackingCore12DKFPSTrackerCfd_0()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKThreadSafeBuffer.__deallocating_deinit()
{
  return sub_240115460();
}

uint64_t sub_240115460()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKUtils()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DKFPSTracker()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKFPSTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKFPSTracker.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKFPSTracker.tick()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKFPSTracker.fps()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_240115504()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DKThreadSafeBuffer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DKThreadSafeBuffer);
}

uint64_t method lookup function for DKThreadSafeBuffer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKThreadSafeBuffer.__allocating_init(maxLenght:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DKThreadSafeBuffer.insert(item:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKThreadSafeBuffer.pop()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

unint64_t sub_24011559C()
{
  unint64_t result;

  result = qword_256FBEA98;
  if (!qword_256FBEA98)
  {
    result = MEMORY[0x24267E0BC](MEMORY[0x24BDCFB50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256FBEA98);
  }
  return result;
}

uint64_t DKSphericalMotionFilter.__allocating_init(currentTime:configuration:camera:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  swift_allocObject();
  v6 = sub_240116BE0(a1, a2, a3);
  swift_release();
  return v6;
}

uint64_t sub_240115640@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, a1);
}

uint64_t sub_24011564C(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time);
}

uint64_t (*sub_240115658())()
{
  return nullsub_1;
}

__n128 sub_240115670@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_240115690(uint64_t a1)
{
  uint64_t v1;

  return sub_24008BADC(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect);
}

uint64_t (*sub_2401156A0())()
{
  return nullsub_1;
}

uint64_t sub_2401156B8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance);
}

uint64_t sub_2401156D0(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2401156EC())()
{
  return nullsub_1;
}

uint64_t DKSphericalMotionFilter.Measurement.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKSphericalMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_240115798@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated, a1);
}

uint64_t sub_2401157A4(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated);
}

uint64_t (*sub_2401157B0())()
{
  return nullsub_1;
}

uint64_t sub_2401157C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240080084(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, a1, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t sub_2401157F4(uint64_t a1)
{
  uint64_t v1;

  return sub_24007E4F8(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion);
}

uint64_t (*sub_240115804())()
{
  return nullsub_1;
}

double sub_24011581C()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
}

void sub_240115834(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  double *v5;

  v5 = (double *)(v4 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
  *v5 = a1;
  v5[1] = a2;
  v5[2] = a3;
  v5[3] = a4;
}

uint64_t (*sub_24011584C())()
{
  return nullsub_1;
}

uint64_t sub_240115864(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v13;

  v8 = type metadata accessor for DKMotion3();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240080084(a1, (uint64_t)v10, v11);
  return sub_24007E4F8((uint64_t)v10, *a2 + *a5);
}

uint64_t sub_2401158F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240080084(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera, a1, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t sub_24011591C(uint64_t a1)
{
  uint64_t v1;

  return sub_24007E4F8(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera);
}

uint64_t (*sub_24011592C())()
{
  return nullsub_1;
}

uint64_t DKSphericalMotionFilter.State.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2400800C8(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  sub_2400800C8(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  return v0;
}

uint64_t DKSphericalMotionFilter.State.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_2400800C8(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  sub_2400800C8(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  return swift_deallocClassInstance();
}

uint64_t sub_240115A38@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated, a1);
}

uint64_t sub_240115A44(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated);
}

uint64_t (*sub_240115A50())()
{
  return nullsub_1;
}

uint64_t DKSphericalMotionFilter.init(currentTime:configuration:camera:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  v3 = sub_240116BE0(a1, a2, a3);
  swift_release();
  return v3;
}

BOOL sub_240115A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  double v14;
  double v15;
  double v16;
  BOOL v20;
  uint64_t v22;

  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState);
  if (!v9)
    return 1;
  v10 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
  v11 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect + 8);
  v12 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect + 16);
  v13 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect + 24);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated, v4, v6);
  swift_retain();
  sub_24015428C();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v16 = sub_240076208(v15 * *(double *)(*(_QWORD *)(v2 + 16) + 96), v10, v11, v12, v13);
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect + 32) & 1) != 0)
  {
    swift_release();
    return 1;
  }
  v20 = CGRectIntersectsRect(*(CGRect *)&v16, *(CGRect *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect));
  swift_release();
  return v20;
}

uint64_t sub_240115BF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera;
  sub_2400800C8(v3, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  return sub_240080084(a1, v3, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
}

uint64_t sub_240115C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, uint64_t, uint64_t);
  void (*v15)(char *, uint64_t);
  CGFloat *v16;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  uint64_t v21;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double distance;
  uint64_t v27;
  uint64_t v28;
  double MidX;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  double MidY;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  double v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  double v42;
  void (*v43)(uint64_t, char *, uint64_t);
  _QWORD v45[2];
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  Swift::tuple_worldRect___C_CGRect_distance_Double v49;
  __C::CGRect v50;
  CGRect v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_240154310();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v47 = a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time;
  v48 = v14;
  ((void (*)(char *, double))v14)(v13, v11);
  swift_retain();
  sub_240071824((uint64_t)v13);
  swift_release();
  swift_retain();
  sub_240071824((uint64_t)v13);
  swift_release();
  v45[1] = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter;
  swift_retain();
  sub_240071824((uint64_t)v13);
  swift_release();
  sub_2401161D8((uint64_t)v13);
  v46 = v10;
  v15 = *(void (**)(char *, uint64_t))(v10 + 8);
  v15(v13, v9);
  v16 = (CGFloat *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect + 32) & 1) == 0)
  {
    v18 = v16[2];
    v17 = v16[3];
    v20 = *v16;
    v19 = v16[1];
    v45[0] = v5;
    sub_240080084(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance);
    v50.origin.x = v20;
    v50.origin.y = v19;
    v50.size.width = v18;
    v50.size.height = v17;
    DKCamera.cameraToWorld(rect:distance:)(&v49, v50, *(Swift::Double_optional *)(&v21 - 1));
    x = v49.worldRect.origin.x;
    y = v49.worldRect.origin.y;
    width = v49.worldRect.size.width;
    height = v49.worldRect.size.height;
    distance = v49.distance;
    sub_2400800C8((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    v27 = v47;
    v48(v13, v47, v9);
    type metadata accessor for DKConstantAccelerationFilter.Measurement(0);
    swift_allocObject();
    swift_retain();
    v28 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    v51.origin.x = x;
    v51.origin.y = y;
    v51.size.width = width;
    v51.size.height = height;
    MidX = CGRectGetMidX(v51);
    sub_24013CC30(0, MidX, 0.01);
    sub_24013D400(v28);
    swift_release();
    swift_release();
    v30 = v27;
    v31 = v27;
    v32 = v48;
    v48(v13, v30, v9);
    swift_allocObject();
    swift_retain();
    v33 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    v52.origin.x = x;
    v52.origin.y = y;
    v52.size.width = width;
    v52.size.height = height;
    MidY = CGRectGetMidY(v52);
    sub_24013CC30(0, MidY, 0.01);
    sub_24013D400(v33);
    swift_release();
    swift_release();
    v32(v13, v31, v9);
    v35 = v32;
    swift_allocObject();
    swift_retain();
    v36 = DKConstantAccelerationFilter.Measurement.init(time:)(v13);
    sub_24013CC30(0, distance, 0.1);
    sub_24013D400(v36);
    swift_release();
    swift_release();
    swift_retain();
    v53.origin.x = x;
    v53.origin.y = y;
    v53.size.width = width;
    v53.size.height = height;
    v37 = CGRectGetWidth(v53);
    v38 = v15;
    v39 = v46;
    v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
    v41 = v45[0];
    v40(v45[0], 1, 1, v9);
    sub_240148324(0, 1, v41, v37);
    swift_release();
    sub_240077EAC(v41);
    swift_retain();
    v54.origin.x = x;
    v54.origin.y = y;
    v54.size.width = width;
    v54.size.height = height;
    v42 = CGRectGetHeight(v54);
    v40(v41, 1, 1, v9);
    sub_240148324(0, 1, v41, v42);
    swift_release();
    sub_240077EAC(v41);
    v35(v13, v31, v9);
    v43 = *(void (**)(uint64_t, char *, uint64_t))(v39 + 40);
    v15 = v38;
    v43(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated, v13, v9);
  }
  v48(v13, v47, v9);
  sub_2401161D8((uint64_t)v13);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v9);
}

uint64_t sub_240116140(uint64_t a1)
{
  swift_retain();
  sub_240071824(a1);
  swift_release();
  swift_retain();
  sub_240071824(a1);
  swift_release();
  swift_retain();
  sub_240071824(a1);
  swift_release();
  return sub_2401161D8(a1);
}

uint64_t sub_2401161D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t, double);
  char v22;
  void (*v23)(char *, uint64_t);
  char v24;
  char v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  double v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  double v35;
  double i;
  double j;
  uint64_t v38;
  double v39;
  double k;
  uint64_t v41;
  Swift::Double v42;
  uint64_t v43;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  CGFloat *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  __int128 v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __C::CGRect v92;
  __C::CGRect v93;

  v2 = v1;
  v82 = a1;
  v91 = type metadata accessor for DKMotion3();
  MEMORY[0x24BDAC7A8](v91);
  v85 = (uint64_t)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v84 = (char *)&v78 - v5;
  v90 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v90);
  v83 = (uint64_t)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  *(_QWORD *)&v86 = (char *)&v78 - v8;
  v9 = sub_240154310();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v87 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v88 = (char *)&v78 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v78 - v15;
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v78 - v19;
  v89 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_azimuthFilter;
  v21 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  v21((char *)&v78 - v19, *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_azimuthFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v9, v18);
  swift_retain();
  sub_240154274();
  sub_2400D9144();
  v22 = sub_240154610();
  v81 = v10;
  v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  v23(v16, v9);
  v23(v20, v9);
  swift_release();
  if ((v22 & 1) != 0)
    goto LABEL_11;
  v80 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_elevationFilter;
  ((void (*)(char *, uint64_t, uint64_t))v21)(v20, *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_elevationFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v9);
  swift_retain();
  sub_240154274();
  v24 = sub_240154610();
  v23(v16, v9);
  v23(v20, v9);
  swift_release();
  if ((v24 & 1) != 0)
    goto LABEL_11;
  v79 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter;
  ((void (*)(char *, uint64_t, uint64_t))v21)(v20, *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v9);
  swift_retain();
  sub_240154274();
  v25 = sub_240154610();
  v23(v16, v9);
  v23(v20, v9);
  swift_release();
  if ((v25 & 1) != 0)
    goto LABEL_11;
  v26 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_rectWidthFilter);
  if (*(_BYTE *)(v26 + 33) != 1)
    goto LABEL_11;
  v27 = *(_BYTE *)(v26 + 32) == 1
      ? atan2(*(long double *)(v26 + 48), *(long double *)(v26 + 56))
      : *(double *)(v26 + 40);
  v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_rectHeightFilter);
  if (*(_BYTE *)(v28 + 33) != 1)
  {
LABEL_11:
    *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState) = 0;
    return swift_release();
  }
  if (*(_BYTE *)(v28 + 32) == 1)
    v29 = atan2(*(long double *)(v28 + 48), *(long double *)(v28 + 56));
  else
    v29 = *(double *)(v28 + 40);
  v31 = *(_QWORD *)(*(_QWORD *)(v2 + v89) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(uint64_t *)(v31 + 16) >= 1 && *(uint64_t *)(v31 + 24) >= 1)
  {
    v32 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera;
    v33 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera
                    + *(int *)(v90 + 32)
                    + *(int *)(v91 + 20));
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
    {
      v35 = **(double **)(v31 + 32);
      for (i = *(double *)(v33 + 32); i + 3.14159265 < v35; v35 = v35 + -6.28318531)
        ;
      for (j = i + -3.14159265; v35 < j; v35 = v35 + 6.28318531)
        ;
      v38 = *(_QWORD *)(*(_QWORD *)(v2 + v80) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
      if (*(uint64_t *)(v38 + 16) < 1 || *(uint64_t *)(v38 + 24) < 1)
        goto LABEL_47;
      if (v34 >= 2)
      {
        v39 = **(double **)(v38 + 32);
        for (k = *(double *)(v33 + 40); k + 3.14159265 < v39; v39 = v39 + -6.28318531)
          ;
        for (; v39 < k + -3.14159265; v39 = v39 + 6.28318531)
          ;
        v41 = *(_QWORD *)(*(_QWORD *)(v2 + v79) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
        if (*(uint64_t *)(v41 + 16) >= 1 && *(uint64_t *)(v41 + 24) >= 1)
        {
          sub_240080084(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera, v86, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
          if (*(uint64_t *)(v41 + 16) > 0 && *(uint64_t *)(v41 + 24) >= 1)
          {
            v92.origin.x = v35 - v27 * 0.5;
            v92.origin.y = v39 - v29 * 0.5;
            v42 = **(double **)(v41 + 32);
            v92.size.width = v27;
            v92.size.height = v29;
            v43 = v86;
            v93 = DKCamera.worldToCamera(rect:distance:clampToBorders:)(v92, v42, 1);
            x = v93.origin.x;
            y = v93.origin.y;
            width = v93.size.width;
            height = v93.size.height;
            sub_2400800C8(v43, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
            ((void (*)(char *, uint64_t, uint64_t))v21)(v88, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated, v9);
            ((void (*)(char *, uint64_t, uint64_t))v21)(v87, v82, v9);
            v48 = *(_QWORD **)(*(_QWORD *)(v2 + v89) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
            v49 = v48[2];
            if (v49 > 0 && (uint64_t)v48[3] >= 1)
            {
              v50 = *(_QWORD **)(*(_QWORD *)(v2 + v80) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
              v89 = v50[2];
              if (v89 > 0 && (uint64_t)v50[3] >= 1)
              {
                v51 = *(_QWORD **)(*(_QWORD *)(v2 + v79) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
                v52 = v51[2];
                if (v52 > 0 && (uint64_t)v51[3] >= 1)
                {
                  v53 = (uint64_t *)v48[4];
                  v54 = *v53;
                  v55 = (uint64_t *)v50[4];
                  v56 = *v55;
                  v57 = (uint64_t *)v51[4];
                  v58 = *v57;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
                  v59 = swift_allocObject();
                  v86 = xmmword_240155A50;
                  *(_OWORD *)(v59 + 16) = xmmword_240155A50;
                  *(_QWORD *)(v59 + 32) = v54;
                  *(_QWORD *)(v59 + 40) = v56;
                  *(_QWORD *)(v59 + 48) = v58;
                  if ((unint64_t)v49 > 1)
                  {
                    v82 = v32;
                    if ((unint64_t)v89 > 1 && (unint64_t)v52 > 1)
                    {
                      v60 = v59;
                      v61 = v53[1];
                      v62 = v55[1];
                      v63 = v57[1];
                      v64 = swift_allocObject();
                      *(_OWORD *)(v64 + 16) = v86;
                      *(_QWORD *)(v64 + 32) = v61;
                      *(_QWORD *)(v64 + 40) = v62;
                      *(_QWORD *)(v64 + 48) = v63;
                      if ((unint64_t)v49 > 2)
                      {
                        v65 = v82;
                        if ((unint64_t)v89 > 2 && (unint64_t)v52 > 2)
                        {
                          v66 = v64;
                          v67 = v53[2];
                          v68 = v55[2];
                          v69 = v57[2];
                          v70 = swift_allocObject();
                          *(_OWORD *)(v70 + 16) = v86;
                          *(_QWORD *)(v70 + 32) = v67;
                          *(_QWORD *)(v70 + 40) = v68;
                          *(_QWORD *)(v70 + 48) = v69;
                          v71 = *(void (**)(char *, char *, uint64_t))(v81 + 32);
                          v72 = (uint64_t)v84;
                          v71(v84, v87, v9);
                          v73 = v91;
                          *(_QWORD *)(v72 + *(int *)(v91 + 20)) = v60;
                          *(_QWORD *)(v72 + *(int *)(v73 + 24)) = v66;
                          *(_QWORD *)(v72 + *(int *)(v73 + 28)) = v70;
                          v74 = v83;
                          sub_240080084(v65, v83, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
                          v75 = v85;
                          sub_2400A4FB4(v74 + *(int *)(v90 + 32), v85);
                          type metadata accessor for DKSphericalMotionFilter.State(0);
                          v76 = swift_allocObject();
                          v71((char *)(v76+ OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated), v88, v9);
                          sub_2400A4FB4(v72, v76 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion);
                          v77 = (CGFloat *)(v76
                                          + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
                          *v77 = x;
                          v77[1] = y;
                          v77[2] = width;
                          v77[3] = height;
                          sub_2400A4FB4(v75, v76 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera);
                          *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState) = v76;
                          return swift_release();
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
        goto LABEL_47;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
LABEL_47:
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t sub_240116A24(uint64_t a1)
{
  swift_retain();
  sub_240071824(a1);
  swift_release();
  swift_retain();
  sub_240071824(a1);
  swift_release();
  swift_retain();
  sub_240071824(a1);
  swift_release();
  sub_2401161D8(a1);
  return swift_retain();
}

uint64_t DKSphericalMotionFilter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  sub_2400800C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_logger;
  v4 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t DKSphericalMotionFilter.__deallocating_deinit()
{
  DKSphericalMotionFilter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_240116BE0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;

  v4 = v3;
  v61 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState) = 0;
  sub_240154274();
  sub_2401544B4();
  *(_QWORD *)(v4 + 16) = a2;
  v60 = a3;
  sub_240080084(a3, v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v10 = a2[14];
  type metadata accessor for DKConstantAccelerationFilter(0);
  *(_QWORD *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v10;
  swift_retain_n();
  swift_retain();
  sub_240141688(v10, 3);
  v12 = v11;
  swift_release();
  v65 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_azimuthFilter;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_azimuthFilter) = v12;
  v13 = a2[15];
  *(_QWORD *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v13;
  v14 = swift_retain_n();
  sub_240141688(v14, 3);
  v16 = v15;
  swift_release();
  v63 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_elevationFilter;
  v64 = a2;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_elevationFilter) = v16;
  v17 = a2[16];
  *(_QWORD *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v17;
  v18 = swift_retain_n();
  sub_240141688(v18, 3);
  v20 = v19;
  swift_release();
  v62 = OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_distanceFilter) = v20;
  v21 = a2[11];
  v22 = sub_240154310();
  v59 = *(_QWORD *)(v22 - 8);
  v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
  v24 = (uint64_t)v9;
  v23(v9, 1, 1, v22);
  type metadata accessor for DKSmoothingFilter();
  v25 = swift_allocObject();
  *(_BYTE *)(v25 + 33) = 0;
  *(_QWORD *)(v25 + 40) = 0;
  *(_QWORD *)(v25 + 48) = 0;
  *(_QWORD *)(v25 + 56) = 0x3FF0000000000000;
  v26 = v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v23((char *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v22);
  v27 = v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v27 = 0;
  *(_BYTE *)(v27 + 8) = 1;
  v28 = v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v28 = 0;
  *(_BYTE *)(v28 + 8) = 1;
  *(_BYTE *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v25 + 16) = v21;
  *(_QWORD *)(v25 + 24) = v21;
  *(_BYTE *)(v25 + 32) = 0;
  sub_24008FCD4(v24, v26);
  *(_QWORD *)v27 = 0;
  *(_BYTE *)(v27 + 8) = 1;
  *(_QWORD *)v28 = 0;
  *(_BYTE *)(v28 + 8) = 1;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_rectWidthFilter) = v25;
  v29 = v64[11];
  v30 = v24;
  v31 = v22;
  v23((char *)v30, 1, 1, v22);
  v32 = swift_allocObject();
  *(_BYTE *)(v32 + 33) = 0;
  *(_QWORD *)(v32 + 40) = 0;
  *(_QWORD *)(v32 + 48) = 0;
  *(_QWORD *)(v32 + 56) = 0x3FF0000000000000;
  v33 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v23((char *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v31);
  v34 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v34 = 0;
  *(_BYTE *)(v34 + 8) = 1;
  v35 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v35 = 0;
  *(_BYTE *)(v35 + 8) = 1;
  *(_BYTE *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v32 + 16) = v29;
  *(_QWORD *)(v32 + 24) = v29;
  *(_BYTE *)(v32 + 32) = 0;
  sub_24008FCD4(v30, v33);
  *(_QWORD *)v34 = 0;
  *(_BYTE *)(v34 + 8) = 1;
  *(_QWORD *)v35 = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_rectHeightFilter) = v32;
  v36 = *(_QWORD *)(v4 + v65);
  *(_BYTE *)(v35 + 8) = 1;
  v37 = *(_QWORD **)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  v38 = v37[2];
  if (v38 < 1)
    goto LABEL_38;
  v39 = v37[3];
  if (v39 <= 0)
    goto LABEL_38;
  v40 = (_QWORD *)v37[4];
  *v40 = 0x3FF0000000000000;
  if ((unint64_t)v38 < 2 || v39 == 1)
    goto LABEL_38;
  if (__OFADD__(v38, 1))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v40[v38 + 1] = 0x3FB999999999999ALL;
  if ((unint64_t)v38 < 3 || (unint64_t)v39 <= 2)
    goto LABEL_38;
  if (v38 + 0x4000000000000000 < 0)
    goto LABEL_30;
  v41 = 2 * v38;
  v42 = __OFADD__(v41, 2);
  v43 = v41 + 2;
  if (v42)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v40[v43] = 0x3FF0000000000000;
  v44 = *(_QWORD **)(*(_QWORD *)(v4 + v63) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  v45 = v44[2];
  if (v45 < 1)
    goto LABEL_38;
  v46 = v44[3];
  if (v46 <= 0)
    goto LABEL_38;
  v47 = (_QWORD *)v44[4];
  *v47 = 0x3FF0000000000000;
  if ((unint64_t)v45 < 2 || v46 == 1)
    goto LABEL_38;
  if (__OFADD__(v45, 1))
    goto LABEL_32;
  v47[v45 + 1] = 0x3FB999999999999ALL;
  if ((unint64_t)v45 < 3 || (unint64_t)v46 <= 2)
    goto LABEL_38;
  if (v45 + 0x4000000000000000 < 0)
    goto LABEL_33;
  v48 = 2 * v45;
  v42 = __OFADD__(v48, 2);
  v49 = v48 + 2;
  if (v42)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v47[v49] = 0x3FF0000000000000;
  v50 = *(_QWORD **)(*(_QWORD *)(v4 + v62) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  v51 = v50[2];
  if (v51 < 1)
    goto LABEL_38;
  v52 = v50[3];
  if (v52 <= 0)
    goto LABEL_38;
  v53 = (_QWORD *)v50[4];
  *v53 = 0x3FB999999999999ALL;
  if ((unint64_t)v51 < 2 || v52 == 1)
    goto LABEL_38;
  if (__OFADD__(v51, 1))
    goto LABEL_35;
  v53[v51 + 1] = 0x3FF0000000000000;
  if ((unint64_t)v51 < 3 || (unint64_t)v52 <= 2)
    goto LABEL_38;
  if (v51 + 0x4000000000000000 >= 0)
  {
    v54 = 2 * v51;
    v42 = __OFADD__(v54, 2);
    v55 = v54 + 2;
    if (!v42)
    {
      v53[v55] = 0x3FF0000000000000;
      v56 = v61;
      sub_2401161D8(v61);
      sub_2400800C8(v60, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v56, v31);
      return v4;
    }
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DKSphericalMotionFilter.State(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBEDD0);
}

uint64_t sub_24011722C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, a2);
}

uint64_t sub_240117238(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time);
}

__n128 sub_240117254@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v3;
  __n128 result;
  __int128 v5;

  v2 = *a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
  v3 = *(_BYTE *)(v2 + 32);
  result = *(__n128 *)v2;
  v5 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v2;
  *(_OWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 32) = v3;
  return result;
}

__n128 sub_240117278(uint64_t a1, _QWORD *a2)
{
  char v2;
  uint64_t v3;
  __n128 result;
  __int128 v5;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
  result = *(__n128 *)a1;
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  *(_OWORD *)(v3 + 16) = v5;
  *(_BYTE *)(v3 + 32) = v2;
  return result;
}

_QWORD *sub_24011729C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2401172C0(uint64_t result, _QWORD *a2)
{
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
  *(_QWORD *)v3 = *(_QWORD *)result;
  *(_BYTE *)(v3 + 8) = v2;
  return result;
}

uint64_t sub_2401172E4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated, a2);
}

uint64_t sub_2401172F0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_lastUpdated);
}

uint64_t sub_24011730C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240080084(*a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, a2, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t sub_24011733C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_240115864(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion);
}

__n128 sub_240117358@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

__n128 sub_240117374(uint64_t a1, _QWORD *a2)
{
  _OWORD *v2;
  __n128 result;
  __int128 v4;

  v2 = (_OWORD *)(*a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_rect);
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *v2 = *(_OWORD *)a1;
  v2[1] = v4;
  return result;
}

uint64_t sub_240117390@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240080084(*a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera, a2, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t sub_2401173C0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_240115864(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_camera);
}

uint64_t sub_2401173DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated, a2);
}

uint64_t sub_2401173E8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastUpdated);
}

uint64_t sub_240117404()
{
  return type metadata accessor for DKSphericalMotionFilter(0);
}

uint64_t type metadata accessor for DKSphericalMotionFilter(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBEAC8);
}

uint64_t sub_240117420()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for DKCamera();
  if (v1 <= 0x3F)
  {
    result = sub_240154310();
    if (v2 <= 0x3F)
    {
      result = sub_2401544C0();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKSphericalMotionFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.lastUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.__allocating_init(currentTime:configuration:camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 376))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.isValid(currentTime:measurement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.update(camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.update(measurement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.predict(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.updateState(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.getState(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t sub_240117564()
{
  return type metadata accessor for DKSphericalMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKSphericalMotionFilter.Measurement(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBECC8);
}

uint64_t sub_240117580()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKSphericalMotionFilter.Measurement()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.rect.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  char v7;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 136);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.distance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.distance.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 160))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKSphericalMotionFilter.Measurement.distance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_2401176C4()
{
  return type metadata accessor for DKSphericalMotionFilter.State(0);
}

uint64_t sub_2401176CC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DKMotion3();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKSphericalMotionFilter.State()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.lastUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.motion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.motion.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.motion.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.camera.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.camera.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKSphericalMotionFilter.State.camera.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

void *static DKAckermannMotionFilter.Index.allCases.getter()
{
  return &unk_2510632A8;
}

uint64_t DKAckermannMotionFilter.Index.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t DKAckermannMotionFilter.Measurement.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKAckermannMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

IntelligentTrackingCore::DKAckermannMotionFilter::Index_optional __swiftcall DKAckermannMotionFilter.Index.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligentTrackingCore::DKAckermannMotionFilter::Index_optional)rawValue;
}

IntelligentTrackingCore::DKAckermannMotionFilter::Index_optional sub_240117938(Swift::Int *a1)
{
  return DKAckermannMotionFilter.Index.init(rawValue:)(*a1);
}

void sub_240117940(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510632D0;
}

uint64_t DKAckermannMotionFilter.Configuration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKAckermannMotionFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKAckermannMotionFilter.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_allocObject();
  sub_240117E30(a1);
  v3 = v2;
  swift_release();
  return v3;
}

uint64_t DKAckermannMotionFilter.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_240117E30(a1);
  v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_240117A18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  __double2 v14;
  long double v15;
  double v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  long double v34;
  uint64_t result;
  uint64_t v36;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4, v6);
  sub_24015428C();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v11 = *(_QWORD **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  v12 = v11[2];
  if (v12 < 3)
    goto LABEL_28;
  if ((uint64_t)v11[3] <= 0)
    goto LABEL_28;
  v13 = v11[4];
  v14 = __sincos_stret(*(double *)(v13 + 16));
  if ((unint64_t)v12 <= 4)
    goto LABEL_28;
  v15 = *(double *)(v13 + 32);
  v16 = tan(v15);
  v17 = *(_QWORD **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
  v18 = v17[2];
  if (v18 < 1 || (uint64_t)v17[3] <= 3)
    goto LABEL_28;
  v19 = 3 * v18;
  if ((unsigned __int128)(v18 * (__int128)3) >> 64 != (3 * v18) >> 63)
  {
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v20 = *(double *)(v13 + 24);
  v21 = v17[4];
  *(double *)(v21 + 24 * v18) = v10 * v14.__cosval;
  if ((unint64_t)v18 <= 1)
    goto LABEL_28;
  if (__OFADD__(v19, 1))
    goto LABEL_22;
  *(double *)(v21 + 8 * (v19 + 1)) = v10 * v14.__sinval;
  if ((unint64_t)v18 <= 2)
    goto LABEL_28;
  if (__OFADD__(v19, 2))
    goto LABEL_23;
  v22 = v10 * v16;
  v23 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKAckermannMotionFilter_ackermannConfiguration);
  *(double *)(v21 + 8 * (v19 + 2)) = v10 * v16 / *(double *)(v23 + 56);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  swift_allocObject();
  v24 = (_QWORD *)swift_retain();
  v25 = sub_240141A08(v24);
  swift_release();
  v26 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J) = v25;
  swift_release();
  v27 = *(_QWORD **)(v2 + v26);
  v28 = v27[2];
  if (v28 < 1)
    goto LABEL_28;
  v29 = v27[3];
  if (v29 <= 3)
    goto LABEL_28;
  v30 = 3 * v28;
  if ((unsigned __int128)(v28 * (__int128)3) >> 64 != (3 * v28) >> 63)
    goto LABEL_24;
  v31 = v27[4];
  *(double *)(v31 + 24 * v28) = v10 * v14.__cosval;
  *(double *)(v31 + 16 * v28) = v10 * -(v14.__sinval * v20);
  if ((unint64_t)v28 <= 1)
    goto LABEL_28;
  if (__OFADD__(v30, 1))
    goto LABEL_25;
  *(double *)(v31 + 8 * (v30 + 1)) = v10 * v14.__sinval;
  *(double *)(v31 + ((16 * v28) | 8)) = v10 * (v14.__cosval * v20);
  if ((unint64_t)v28 <= 2)
    goto LABEL_28;
  v32 = __OFADD__(v30, 2);
  v33 = v30 + 2;
  if (v32)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  *(double *)(v31 + 8 * v33) = v22 / *(double *)(v23 + 56);
  if ((unint64_t)v29 > 4)
  {
    if ((unint64_t)(v28 - 0x2000000000000000) >> 62 == 3)
    {
      v34 = cos(v15);
      *(long double *)(v31 + 32 * v28 + 16) = v10 * v20 / (v34 * v34);
      return sub_24013CF84(a1);
    }
    goto LABEL_27;
  }
LABEL_28:
  result = sub_240154D00();
  __break(1u);
  return result;
}

void DKAckermannMotionFilter.__allocating_init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DKAckermannMotionFilter.init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_240117DAC()
{
  return swift_release();
}

uint64_t DKAckermannMotionFilter.deinit()
{
  uint64_t v0;

  v0 = DKKalmanFilter.deinit();
  swift_release();
  return v0;
}

uint64_t DKAckermannMotionFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_240117E30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKAckermannMotionFilter_ackermannConfiguration) = a1;
  v2 = swift_retain();
  sub_240141688(v2, 5);
  v4 = *(_QWORD **)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  v5 = v4[2];
  if ((uint64_t)v5 < 1)
    goto LABEL_37;
  v6 = v4[3];
  if ((uint64_t)v6 <= 0)
    goto LABEL_37;
  v7 = (_QWORD *)v4[4];
  *v7 = 0x3F747AE147AE147BLL;
  if (v5 < 2 || v6 == 1)
    goto LABEL_37;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  v7[v5 + 1] = 0x3F747AE147AE147BLL;
  if (v5 < 3 || v6 <= 2)
    goto LABEL_37;
  if ((uint64_t)(v5 + 0x4000000000000000) < 0)
    goto LABEL_31;
  if (__OFADD__(2 * v5, 2))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v7[2 * v5 + 2] = 0x3F789374BC6A7EFALL;
  if (v5 < 4 || v6 <= 3)
    goto LABEL_37;
  v11 = 3 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)3) >> 64 != (uint64_t)(3 * v5) >> 63)
    goto LABEL_33;
  v12 = __OFADD__(v11, 3);
  v13 = v11 + 3;
  if (v12)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v7[v13] = 0x3F647AE147AE147BLL;
  if (v5 < 5 || v6 <= 4)
    goto LABEL_37;
  if ((v5 - 0x2000000000000000) >> 62 == 3)
  {
    v15 = 4 * v5;
    v12 = __OFADD__(v15, 4);
    v16 = v15 + 4;
    if (!v12)
    {
      v7[v16] = 0x3F847AE147AE147BLL;
      return;
    }
    goto LABEL_36;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  sub_240154D00();
  __break(1u);
}

unint64_t sub_240117FD8()
{
  unint64_t result;

  result = qword_256FBEED0;
  if (!qword_256FBEED0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKAckermannMotionFilter.Index, &type metadata for DKAckermannMotionFilter.Index);
    atomic_store(result, (unint64_t *)&qword_256FBEED0);
  }
  return result;
}

unint64_t sub_240118020()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FBEED8;
  if (!qword_256FBEED8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FBEEE0);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256FBEED8);
  }
  return result;
}

uint64_t sub_24011806C()
{
  return type metadata accessor for DKAckermannMotionFilter(0);
}

uint64_t type metadata accessor for DKAckermannMotionFilter(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBEF10);
}

uint64_t method lookup function for DKAckermannMotionFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKAckermannMotionFilter.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t dispatch thunk of DKAckermannMotionFilter.updateQ(row:column:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKAckermannMotionFilter.getState(index:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKAckermannMotionFilter.setState(index:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t sub_2401180C0()
{
  return type metadata accessor for DKAckermannMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKAckermannMotionFilter.Measurement(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBF180);
}

uint64_t method lookup function for DKAckermannMotionFilter.Measurement()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for DKAckermannMotionFilter.Index(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_240118134 + 4 * byte_24015DEF5[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_240118168 + 4 * byte_24015DEF0[v4]))();
}

uint64_t sub_240118168(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240118170(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240118178);
  return result;
}

uint64_t sub_240118184(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24011818CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_240118190(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240118198(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKAckermannMotionFilter.Index()
{
  return &type metadata for DKAckermannMotionFilter.Index;
}

uint64_t type metadata accessor for DKAckermannMotionFilter.Configuration()
{
  return objc_opt_self();
}

id DKRepeatingTimer.__allocating_init(interval:fireOnce:queue:_:)(int a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return DKRepeatingTimer.init(interval:fireOnce:queue:_:)(a1, a2, a3, a4, a5);
}

id DKRepeatingTimer.init(interval:fireOnce:queue:_:)(int a1, void *a2, uint64_t a3, uint64_t a4, double a5)
{
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t ObjectType;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_QWORD *, _QWORD, uint64_t);
  _QWORD *v38;
  void (*v39)(_QWORD *, uint64_t);
  uint64_t v40;
  void *v41;
  char *v42;
  char *v43;
  id v44;
  objc_class *v45;
  id v46;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v62;
  objc_super v63;
  _QWORD aBlock[7];

  v6 = v5;
  v61 = a4;
  v62 = a2;
  v54 = a3;
  v51 = a1;
  v8 = sub_2401544D8();
  v59 = *(_QWORD *)(v8 - 8);
  v60 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_2401544F0();
  v56 = *(_QWORD *)(v10 - 8);
  v57 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v55 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2401544CC();
  v13 = *(_QWORD *)(v12 - 8);
  v52 = v12;
  v53 = v13;
  MEMORY[0x24BDAC7A8](v12);
  v49 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v15);
  v17 = (uint64_t *)((char *)&v48 - v16);
  v18 = sub_240154508();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v48 - v23;
  v25 = sub_24015497C();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v48 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB73A8);
  v30 = swift_allocObject();
  *(_DWORD *)(v30 + 16) = 0;
  *(_QWORD *)&v6[v29] = v30;
  v6[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state] = 0;
  sub_2401186A8();
  v31 = v6;
  sub_240154970();
  v32 = sub_240154988();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  *(_QWORD *)&v31[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_timer] = v32;
  ObjectType = swift_getObjectType();
  sub_2401544FC();
  MEMORY[0x24267CE5C](v21, a5);
  v34 = *(void (**)(char *, uint64_t))(v19 + 8);
  v50 = v18;
  v34(v21, v18);
  if ((v51 & 1) != 0)
  {
    v36 = v52;
    v35 = v53;
    v37 = *(void (**)(_QWORD *, _QWORD, uint64_t))(v53 + 104);
    v37(v17, *MEMORY[0x24BEE5418], v52);
    v38 = v49;
    *v49 = 0;
    v37(v38, *MEMORY[0x24BEE5400], v36);
    MEMORY[0x24267D318](v24, v17, v38, ObjectType);
    v39 = *(void (**)(_QWORD *, uint64_t))(v35 + 8);
    v39(v38, v36);
  }
  else
  {
    *v17 = 0;
    v36 = v52;
    v40 = v53;
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(v53 + 104))(v17, *MEMORY[0x24BEE5400], v52);
    MEMORY[0x24267D324](v24, v17, ObjectType, a5);
    v39 = *(void (**)(_QWORD *, uint64_t))(v40 + 8);
  }
  v39(v17, v36);
  v34(v24, v50);
  swift_getObjectType();
  aBlock[4] = v54;
  aBlock[5] = v61;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24011872C;
  aBlock[3] = &block_descriptor;
  v41 = _Block_copy(aBlock);
  swift_retain();
  v42 = v55;
  sub_2401544E4();
  v43 = v58;
  sub_240118770();
  sub_240154994();
  _Block_release(v41);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v43, v60);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v42, v57);
  swift_release();
  v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBCE60]), sel_init);
  *(_QWORD *)&v31[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_date] = v44;

  v45 = (objc_class *)type metadata accessor for DKRepeatingTimer();
  v63.receiver = v31;
  v63.super_class = v45;
  v46 = objc_msgSendSuper2(&v63, sel_init);
  sub_24011893C();

  swift_release();
  return v46;
}

unint64_t sub_2401186A8()
{
  unint64_t result;

  result = qword_256FBF408;
  if (!qword_256FBF408)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FBF408);
  }
  return result;
}

uint64_t sub_2401186E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = 0;
  v2 = *MEMORY[0x24BEE5400];
  v3 = sub_2401544CC();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 104))(a1, v2, v3);
}

uint64_t sub_24011872C(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = swift_retain();
  v1(v2);
  return swift_release();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_240118770()
{
  sub_2401544D8();
  sub_240118DDC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF458);
  sub_240118E24();
  return sub_240154AC0();
}

uint64_t type metadata accessor for DKRepeatingTimer()
{
  return objc_opt_self();
}

id DKRepeatingTimer.__deallocating_deinit()
{
  char *v0;
  char *v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;
  objc_super v6;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  v3 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock];
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  swift_getObjectType();
  swift_unknownObjectRetain();
  sub_2401549A0();
  swift_unknownObjectRelease();
  v4 = *(os_unfair_lock_s **)&v1[v2];
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  swift_release();
  sub_24011893C();
  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DKRepeatingTimer();
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

uint64_t sub_24011893C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  v3 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if (!*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state))
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) = 1;
    swift_getObjectType();
    sub_2401549AC();
  }
  v4 = *(os_unfair_lock_s **)(v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

uint64_t sub_2401189D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  v3 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) = 0;
    swift_getObjectType();
    sub_2401549B8();
  }
  v4 = *(os_unfair_lock_s **)(v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

uint64_t sub_240118A6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  os_unfair_lock_s *v3;
  os_unfair_lock_s *v4;

  v1 = v0;
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  v3 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) == 1)
  {
    *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state) = 2;
    swift_getObjectType();
    sub_2401549A0();
  }
  v4 = *(os_unfair_lock_s **)(v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  return swift_release();
}

BOOL sub_240118B08()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  int v3;
  os_unfair_lock_s *v4;

  v1 = OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock;
  v2 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_stateLock);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  swift_release();
  v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_state);
  v4 = *(os_unfair_lock_s **)(v0 + v1);
  swift_retain();
  os_unfair_lock_unlock(v4 + 4);
  swift_release();
  return v3 == 1;
}

double sub_240118B84()
{
  uint64_t v0;
  double v1;

  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKRepeatingTimer_date), sel_timeIntervalSinceNow);
  return fabs(v1);
}

id DKRepeatingTimer.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DKRepeatingTimer.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t method lookup function for DKRepeatingTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKRepeatingTimer.__allocating_init(interval:fireOnce:queue:_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DKRepeatingTimer.resume()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DKRepeatingTimer.suspend()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DKRepeatingTimer.cancel()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DKRepeatingTimer.isValid()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DKRepeatingTimer.timeSinceInit()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t storeEnumTagSinglePayload for DKRepeatingTimer.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_240118D14 + 4 * byte_24015E085[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_240118D48 + 4 * byte_24015E080[v4]))();
}

uint64_t sub_240118D48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240118D50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240118D58);
  return result;
}

uint64_t sub_240118D64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240118D6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_240118D70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240118D78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKRepeatingTimer.State()
{
  return &type metadata for DKRepeatingTimer.State;
}

unint64_t sub_240118D98()
{
  unint64_t result;

  result = qword_256FBF448;
  if (!qword_256FBF448)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E108, &type metadata for DKRepeatingTimer.State);
    atomic_store(result, (unint64_t *)&qword_256FBF448);
  }
  return result;
}

unint64_t sub_240118DDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FBF450;
  if (!qword_256FBF450)
  {
    v1 = sub_2401544D8();
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE5468], v1);
    atomic_store(result, (unint64_t *)&qword_256FBF450);
  }
  return result;
}

unint64_t sub_240118E24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FBF460;
  if (!qword_256FBF460)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FBF458);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256FBF460);
  }
  return result;
}

uint64_t DKDataLogRecorder.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DKDataLogRecorder.init()();
  return v0;
}

unint64_t sub_240118EA4()
{
  return 0xD000000000000018;
}

uint64_t sub_240118EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24011D6E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_240118EE8()
{
  sub_240119AB0();
  return sub_240155048();
}

uint64_t sub_240118F10()
{
  sub_240119AB0();
  return sub_240155054();
}

uint64_t sub_240118F38()
{
  sub_240119AF4();
  return sub_240155048();
}

uint64_t sub_240118F60()
{
  sub_240119AF4();
  return sub_240155054();
}

uint64_t DKDataLog.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF470);
  v13 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF478);
  v12 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240119AB0();
  sub_240155030();
  sub_240119AF4();
  swift_retain();
  sub_240154E20();
  v14 = v9;
  type metadata accessor for DKIntelligentTrackingState(0);
  sub_2400707A8(&qword_256FB66A8, type metadata accessor for DKIntelligentTrackingState, (uint64_t)&protocol conformance descriptor for DKIntelligentTrackingState);
  sub_240154E80();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v3);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v6);
  return swift_release();
}

uint64_t DKDataLog.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v23 = a2;
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF490);
  v3 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF498);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240119AB0();
  v9 = v26;
  sub_240155024();
  if (v9)
    goto LABEL_5;
  v10 = v5;
  v21 = v3;
  v22 = a1;
  v26 = v6;
  v11 = v24;
  v12 = v25;
  if (*(_QWORD *)(sub_240154E08() + 16) != 1)
  {
    v15 = sub_240154BC8();
    swift_allocError();
    v16 = v12;
    v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v18 = &type metadata for DKDataLog;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v18, *MEMORY[0x24BEE26D0], v15);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v16);
    a1 = v22;
LABEL_5:
    v20 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v20);
  }
  sub_240119AF4();
  v13 = v10;
  sub_240154D90();
  v14 = v26;
  type metadata accessor for DKIntelligentTrackingState(0);
  sub_2400707A8(&qword_256FB6698, type metadata accessor for DKIntelligentTrackingState, (uint64_t)&protocol conformance descriptor for DKIntelligentTrackingState);
  sub_240154DFC();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v13, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v12);
  v20 = (uint64_t)v22;
  *v23 = v27;
  return __swift_destroy_boxed_opaque_existential_1(v20);
}

uint64_t sub_240119420@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DKDataLog.init(from:)(a1, a2);
}

uint64_t sub_240119434(_QWORD *a1)
{
  return DKDataLog.encode(to:)(a1);
}

uint64_t DKDataLogStamped.time.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DKDataLogStamped.time.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*DKDataLogStamped.time.modify())()
{
  return nullsub_1;
}

uint64_t DKDataLogStamped.log.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for DKDataLogStamped(0) + 20));
  return swift_retain();
}

uint64_t DKDataLogStamped.log.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *(int *)(type metadata accessor for DKDataLogStamped(0) + 20);
  result = swift_release();
  *(_QWORD *)(v1 + v3) = v2;
  return result;
}

uint64_t (*DKDataLogStamped.log.modify())(_QWORD)
{
  type metadata accessor for DKDataLogStamped(0);
  return nullsub_1;
}

uint64_t sub_24011955C()
{
  _BYTE *v0;

  if (*v0)
    return 6778732;
  else
    return 1701669236;
}

uint64_t sub_240119588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24011D768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2401195AC()
{
  sub_240119B4C();
  return sub_240155048();
}

uint64_t sub_2401195D4()
{
  sub_240119B4C();
  return sub_240155054();
}

uint64_t DKDataLogStamped.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF4A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240119B4C();
  sub_240155030();
  v12 = 0;
  sub_240154310();
  sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_240154E80();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for DKDataLogStamped(0) + 20));
    v10[15] = 1;
    sub_240119B90();
    sub_240154E80();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DKDataLogStamped.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v19 = a2;
  v23 = sub_240154310();
  v20 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF4B8);
  v5 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DKDataLogStamped(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240119B4C();
  sub_240155024();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v17 = a1;
  v18 = v5;
  v11 = (uint64_t)v10;
  v12 = v20;
  v26 = 0;
  sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
  v14 = v21;
  v13 = v22;
  v15 = v23;
  sub_240154DFC();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v15);
  v25 = 1;
  sub_240119BD4();
  sub_240154DFC();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v13);
  *(_QWORD *)(v11 + *(int *)(v8 + 20)) = v24;
  sub_240119C18(v11, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return sub_2401034AC(v11);
}

uint64_t sub_2401199EC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKDataLogStamped.init(from:)(a1, a2);
}

uint64_t sub_240119A00(_QWORD *a1)
{
  return DKDataLogStamped.encode(to:)(a1);
}

uint64_t DKDataLogRecorder.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BEE4AF8];
  sub_240154094();
  swift_allocObject();
  *(_QWORD *)(v0 + 24) = sub_240154088();
  type metadata accessor for DKLockActor();
  v3 = swift_allocObject();
  swift_defaultActor_initialize();
  *(_QWORD *)(v3 + 112) = 1;
  *(_QWORD *)(v3 + 120) = v2;
  *(_QWORD *)(v1 + 32) = v3;
  *(_OWORD *)(v1 + 40) = xmmword_24015E130;
  *(_QWORD *)(v1 + 56) = 0;
  sub_240154340();
  return v1;
}

unint64_t sub_240119AB0()
{
  unint64_t result;

  result = qword_256FBF480;
  if (!qword_256FBF480)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E6CC, &type metadata for DKDataLog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF480);
  }
  return result;
}

unint64_t sub_240119AF4()
{
  unint64_t result;

  result = qword_256FBF488;
  if (!qword_256FBF488)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E67C, &type metadata for DKDataLog.IntelligentTrackingStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF488);
  }
  return result;
}

uint64_t type metadata accessor for DKDataLogStamped(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBF580);
}

unint64_t sub_240119B4C()
{
  unint64_t result;

  result = qword_256FBF4A8;
  if (!qword_256FBF4A8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E62C, &type metadata for DKDataLogStamped.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF4A8);
  }
  return result;
}

unint64_t sub_240119B90()
{
  unint64_t result;

  result = qword_256FBF4B0;
  if (!qword_256FBF4B0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKDataLog, &type metadata for DKDataLog);
    atomic_store(result, (unint64_t *)&qword_256FBF4B0);
  }
  return result;
}

unint64_t sub_240119BD4()
{
  unint64_t result;

  result = qword_256FBF4C0;
  if (!qword_256FBF4C0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKDataLog, &type metadata for DKDataLog);
    atomic_store(result, &qword_256FBF4C0);
  }
  return result;
}

uint64_t sub_240119C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKDataLogStamped(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240119C5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[9] = v0;
  v2 = type metadata accessor for DKDataLogStamped(0);
  v1[10] = v2;
  v1[11] = *(_QWORD *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v3 = sub_240154688();
  v1[13] = v3;
  v1[14] = *(_QWORD *)(v3 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = swift_task_alloc();
  v4 = sub_24015434C();
  v1[17] = v4;
  v1[18] = *(_QWORD *)(v4 - 8);
  v1[19] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  v1[20] = swift_task_alloc();
  v5 = sub_2401541D8();
  v1[21] = v5;
  v1[22] = *(_QWORD *)(v5 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240119D78()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[25] = *(_QWORD *)(v0[9] + 32);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[26] = v1;
  *v1 = v0;
  v1[1] = sub_240119DD4;
  return sub_2400FE4DC();
}

uint64_t sub_240119DD4()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240119E30()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  os_log_type_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  os_log_type_t v44;
  void *v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  os_log_type_t v50;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;

  v1 = v0[9];
  if (*(_QWORD *)(v1 + 40) && *(_QWORD *)(v1 + 56) <= 0xA00000uLL)
  {
LABEL_5:
    v15 = *(void **)(v1 + 40);
    if (v15)
      goto LABEL_6;
    goto LABEL_17;
  }
  v2 = v0[22];
  v52 = v0[21];
  v3 = v0[19];
  v4 = v0[20];
  v5 = v0[17];
  v6 = v0[18];
  type metadata accessor for DKUtils();
  v55 = 0x2D79726F74736968;
  v56 = 0xE800000000000000;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v3, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKDataLogRecorder_uuid, v5);
  sub_24015431C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v3, v5);
  v7 = sub_24011D35C(5);
  v9 = v8;
  v11 = v10;
  v13 = v12;
  swift_bridgeObjectRelease();
  MEMORY[0x24267CFF4](v7, v9, v11, v13);
  sub_2401546D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2401147A4(0x2D79726F74736968, 0xE800000000000000, 6778732, 0xE300000000000000, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v52) == 1)
  {
    sub_240070BD4(v0[20], &qword_256FB4CB0);
    LOBYTE(v55) = 12;
    v14 = sub_240154958();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v55, 0xD000000000000019, 0x8000000240165190, v14);
    goto LABEL_5;
  }
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[22] + 32))(v0[24], v0[20], v0[21]);
  v0[6] = 0;
  v0[7] = 0xE000000000000000;
  sub_24015467C();
  sub_24011D3E4();
  sub_240154AA8();
  v28 = v0[24];
  v36 = v0[22];
  v35 = v0[23];
  v37 = v0[21];
  (*(void (**)(_QWORD, _QWORD))(v0[14] + 8))(v0[16], v0[13]);
  swift_bridgeObjectRelease();
  sub_24011D428();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v35, v28, v37);
  v38 = sub_24011A628(v35);
  v39 = v0[24];
  v40 = v0[21];
  v41 = v0[22];
  v42 = v0[9];
  v43 = *(void **)(v1 + 40);
  *(_QWORD *)(v1 + 40) = v38;

  *(_QWORD *)(v42 + 56) = 0;
  LOBYTE(v53) = 12;
  sub_240154B38();
  swift_bridgeObjectRelease();
  v55 = 0xD000000000000014;
  v56 = 0x80000002401651B0;
  sub_24015416C();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  v44 = sub_240154964();
  _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v53, 0xD000000000000014, 0x80000002401651B0, v44);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v39, v40);
  v15 = *(void **)(v1 + 40);
  if (v15)
  {
LABEL_6:
    v16 = v0[9];
    v53 = 0;
    v54 = 0xE000000000000000;
    v17 = *(_QWORD *)(v16 + 16);
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = v0[11];
      v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
      v21 = *(_QWORD *)(v19 + 72);
      v15;
      swift_bridgeObjectRetain();
      do
      {
        sub_240119C18(v20, v0[12]);
        sub_2400707A8(&qword_256FBF4D0, type metadata accessor for DKDataLogStamped, (uint64_t)&protocol conformance descriptor for DKDataLogStamped);
        v22 = sub_24015407C();
        v24 = v23;
        sub_24015467C();
        v25 = sub_240154664();
        v27 = v0[12];
        if (v26)
        {
          v55 = v25;
          v56 = v26;
          sub_2401546D0();
          sub_2401546D0();
          sub_240075D14(v22, v24);
          swift_bridgeObjectRelease();
          sub_2401034AC(v27);
        }
        else
        {
          sub_2401034AC(v0[12]);
          sub_240075D14(v22, v24);
        }
        v20 += v21;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      v30 = v53;
      v31 = v54;
    }
    else
    {
      v29 = v15;
      v30 = 0;
      v31 = 0xE000000000000000;
    }
    swift_bridgeObjectRetain();
    v32 = sub_24011A73C(v30, v31);
    v34 = v33;
    v0[4] = v32;
    v0[5] = v33;
    sub_24011D318();
    sub_240154934();
    __asm { BR              X11 }
  }
LABEL_17:
  sub_240080040();
  v45 = (void *)swift_allocError();
  *(_QWORD *)v46 = 0xD000000000000017;
  *(_QWORD *)(v46 + 8) = 0x8000000240165150;
  *(_BYTE *)(v46 + 16) = 0;
  swift_willThrow();
  LOBYTE(v53) = 12;
  v55 = 0;
  v56 = 0xE000000000000000;
  sub_240154B38();
  v47 = v56;
  v0[2] = v55;
  v0[3] = v47;
  sub_2401546D0();
  v0[8] = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB66A0);
  sub_240154C94();
  v49 = v0[2];
  v48 = v0[3];
  v50 = sub_240154958();
  _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v53, v49, v48, v50);

  swift_bridgeObjectRelease();
  v0[27] = *(_QWORD *)(v0[9] + 32);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_24011A590()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_24011A628(uint64_t a1)
{
  void *v2;
  id v3;
  id v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  id v11[2];

  v11[1] = *(id *)MEMORY[0x24BDAC8D0];
  v2 = (void *)sub_240154190();
  v11[0] = 0;
  v3 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_fileHandleForWritingToURL_error_, v2, v11);

  v4 = v11[0];
  if (v3)
  {
    v5 = sub_2401541D8();
    v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
    v7 = v4;
    v6(a1, v5);
  }
  else
  {
    v8 = v11[0];
    sub_240154160();

    swift_willThrow();
    v9 = sub_2401541D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
  }
  return v3;
}

uint64_t sub_24011A73C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  _BYTE *v5;
  _BYTE *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v14[2];
  uint64_t v15;
  __int128 v16;
  _QWORD v17[7];

  v17[5] = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v16 = a1;
  *((_QWORD *)&v16 + 1) = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF968);
  if (!swift_dynamicCast())
  {
    v15 = 0;
    memset(v14, 0, sizeof(v14));
    sub_240070BD4((uint64_t)v14, &qword_256FBF970);
    if ((a2 & 0x1000000000000000) != 0)
      goto LABEL_20;
    if ((a2 & 0x2000000000000000) != 0)
    {
      v17[0] = a1;
      v17[1] = a2 & 0xFFFFFFFFFFFFFFLL;
      v4 = (char *)v17 + (HIBYTE(a2) & 0xF);
      v5 = v17;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        v2 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        v3 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v2 = sub_240154BD4();
      }
      if (v2)
        v4 = (_BYTE *)(v2 + v3);
      else
        v4 = 0;
      v5 = (_BYTE *)v2;
    }
    v6 = sub_24011D680(v5, v4);
    v8 = v7;
    if (v7 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(_QWORD *)&v14[0] = v6;
      *((_QWORD *)&v14[0] + 1) = v8;
      return *(_QWORD *)&v14[0];
    }
    if ((a2 & 0x1000000000000000) != 0)
    {
LABEL_20:
      v9 = sub_2401546DC();
    }
    else if ((a2 & 0x2000000000000000) != 0)
    {
      v9 = HIBYTE(a2) & 0xF;
    }
    else
    {
      v9 = a1 & 0xFFFFFFFFFFFFLL;
    }
    *(_QWORD *)&v14[0] = sub_2400759E4(v9);
    *((_QWORD *)&v14[0] + 1) = v10;
    MEMORY[0x24BDAC7A8](*(_QWORD *)&v14[0]);
    sub_240075120();
    __asm { BR              X12 }
  }
  sub_24007CC80(v14, (uint64_t)v17);
  __swift_project_boxed_opaque_existential_1(v17, v17[3]);
  sub_24015410C();
  swift_bridgeObjectRelease();
  v14[0] = v16;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  return *(_QWORD *)&v14[0];
}

uint64_t sub_24011AC40(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = *(_QWORD *)(type metadata accessor for DKDataLogStamped(0) - 8);
  v2[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24011AC9C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[6] = *(_QWORD *)(v0[3] + 32);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[7] = v1;
  *v1 = v0;
  v1[1] = sub_24011ACF8;
  return sub_2400FE4DC();
}

uint64_t sub_24011ACF8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24011AD54()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0[3];
  sub_240119C18(v0[2], v0[5]);
  v2 = *(_QWORD *)(v1 + 16);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v1 + 16) = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v2 = sub_240078030(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
    *(_QWORD *)(v1 + 16) = v2;
  }
  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  if (v5 >= v4 >> 1)
  {
    v2 = sub_240078030(v4 > 1, v5 + 1, 1, v2);
    *(_QWORD *)(v1 + 16) = v2;
  }
  v7 = v0[4];
  v6 = v0[5];
  v8 = v0[3];
  *(_QWORD *)(v2 + 16) = v5 + 1;
  sub_24011D464(v6, v2+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v5);
  v0[8] = *(_QWORD *)(v8 + 32);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_24011AE40()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t DKDataLogRecorder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKDataLogRecorder_uuid;
  v2 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKDataLogRecorder.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKDataLogRecorder_uuid;
  v2 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t DKDataLogGenerator.logs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKDataLogGenerator.logs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DKDataLogGenerator.logs.modify())()
{
  return nullsub_1;
}

double DKDataLogGenerator.delay.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void DKDataLogGenerator.delay.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*DKDataLogGenerator.delay.modify())()
{
  return nullsub_1;
}

double DKDataLogGenerator.rate.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void DKDataLogGenerator.rate.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*DKDataLogGenerator.rate.modify())()
{
  return nullsub_1;
}

uint64_t DKDataLogGenerator.index.getter()
{
  return swift_retain();
}

uint64_t DKDataLogGenerator.index.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*DKDataLogGenerator.index.modify())()
{
  return nullsub_1;
}

uint64_t DKDataLogGenerator.next()(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2[2] = a1;
  v2[3] = v1;
  v3 = type metadata accessor for DKDataLogStamped(0);
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = swift_task_alloc();
  v4 = sub_240154C70();
  v2[8] = v4;
  v2[9] = *(_QWORD *)(v4 - 8);
  v2[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24011B0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t, uint64_t, uint64_t, uint64_t, char);

  v1 = *(_QWORD *)(v0 + 24);
  if (*(_QWORD *)(*(_QWORD *)(v1 + 24) + 16) >= *(_QWORD *)(*(_QWORD *)v1 + 16) - 1
    || *(double *)(v1 + 8) < 0.0
    || *(double *)(v1 + 16) <= 1.0e-10)
  {
    (*(void (**)(_QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v0 + 40) + 56))(*(_QWORD *)(v0 + 16), 1, 1, *(_QWORD *)(v0 + 32));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v2 = sub_24015503C();
    v4 = v3;
    sub_240154C64();
    v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_256FBF500 + dword_256FBF500);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v5;
    *v5 = v0;
    v5[1] = sub_24011B1DC;
    return v7(v2, v4, 0, 0, 1);
  }
}

uint64_t sub_24011B1DC()
{
  void *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (_QWORD *)*v1;
  swift_task_dealloc();
  v4 = v2[9];
  v3 = v2[10];
  v5 = v2[8];
  if (v0)

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  return swift_task_switch();
}

uint64_t sub_24011B274()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v1 = *(uint64_t **)(v0 + 24);
  v2 = *(_QWORD *)(v1[3] + 16);
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 16);
  if (v2 >= v4)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v5 = *(_QWORD *)(v0 + 40);
  v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v7 = *(_QWORD *)(v5 + 72);
  result = sub_240119C18(v6 + v7 * v2, *(_QWORD *)(v0 + 56));
  v9 = v2 + 1;
  if (v2 + 1 >= v4)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v11 = *(_QWORD *)(v0 + 48);
  v10 = *(_QWORD *)(v0 + 56);
  v12 = *(_QWORD *)(v0 + 32);
  v13 = *(_QWORD *)(v0 + 40);
  v14 = v6 + v7 * v9;
  v15 = *(_QWORD *)(v0 + 16);
  v16 = *(_QWORD *)(v0 + 24);
  sub_240119C18(v14, v11);
  sub_24015428C();
  v18 = v17;
  sub_2401034AC(v11);
  *(double *)(v16 + 8) = v18 / *(double *)(v16 + 16);
  sub_24011D464(v10, v15);
  result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v12);
  v19 = *(_QWORD *)(v16 + 24);
  v20 = *(_QWORD *)(v19 + 16);
  v21 = __OFADD__(v20, 1);
  v22 = v20 + 1;
  if (!v21)
  {
    *(_QWORD *)(v19 + 16) = v22;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t DKDataLogGenerator.makeAsyncIterator()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_24011B3D8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;

  v2 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  result = *(__n128 *)(v1 + 8);
  *(__n128 *)(a1 + 8) = result;
  *(_QWORD *)(a1 + 24) = v2;
  return result;
}

uint64_t sub_24011B3F4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_240112D08;
  return DKDataLogGenerator.next()(a1);
}

uint64_t sub_24011B444(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24011EBD4;
  return DKDataLogGenerator.next()(a1);
}

uint64_t DKDataLogIndex.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DKDataLogIndex.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t DKDataLogPlayer.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = swift_allocObject();
  type metadata accessor for DKDataLogIndex();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t DKDataLogPlayer.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for DKDataLogIndex();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 24) = v2;
  return v0;
}

uint64_t sub_24011B530()
{
  uint64_t v0;

  sub_24015488C();
  *(_QWORD *)(v0 + 16) = sub_240154880();
  sub_24015485C();
  return swift_task_switch();
}

uint64_t sub_24011B598()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24011B5C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v15;
  _QWORD v17[2];
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  v3 = sub_2401541D8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1;
  v20 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_24011BCFC(&v19);
  v17[1] = v19;
  v18 = v1;
  v10 = v19[2];
  if (v10)
  {
    v11 = (char *)v19 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v12 = *(_QWORD *)(v4 + 72);
    v13 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    while (1)
    {
      v13(v9, v11, v3);
      v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v14(v9, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
      v15 = sub_24011D838((uint64_t)v6);
      sub_240095388(v15);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v11 += v12;
      if (!--v10)
        goto LABEL_7;
    }
  }
  else
  {
    v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v14(v9, 1, 1, v3);
  }
  swift_release();
  *(_QWORD *)(v18 + 24) = v20;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24011B78C@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)a1 = *(_QWORD *)(v3 + 24);
  *(double *)(a1 + 8) = a2;
  *(double *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_24011B7BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if ((v5 & 0x8000000000000000) != 0 || (v6 = *(_QWORD *)(v2 + 24), v5 >= *(_QWORD *)(v6 + 16)))
  {
    v11 = type metadata accessor for DKDataLogStamped(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
  else
  {
    v8 = type metadata accessor for DKDataLogStamped(0);
    v9 = *(_QWORD *)(v8 - 8);
    sub_240119C18(v6+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v5, a2);
    result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
    if (__OFADD__(v5, a1))
      __break(1u);
    else
      *(_QWORD *)(v4 + 16) = v5 + a1;
  }
  return result;
}

uint64_t sub_24011B8A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v4 = *(_QWORD *)(v2 + 16);
  v5 = *(_QWORD *)(v4 + 16);
  if ((v5 & 0x8000000000000000) != 0 || (v6 = *(_QWORD *)(v2 + 24), v5 >= *(_QWORD *)(v6 + 16)))
  {
    v11 = type metadata accessor for DKDataLogStamped(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
  else
  {
    v8 = type metadata accessor for DKDataLogStamped(0);
    v9 = *(_QWORD *)(v8 - 8);
    sub_240119C18(v6+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(_QWORD *)(v9 + 72) * v5, a2);
    result = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
    if (__OFSUB__(v5, a1))
      __break(1u);
    else
      *(_QWORD *)(v4 + 16) = v5 - a1;
  }
  return result;
}

void sub_24011B984()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16) = 0;
}

uint64_t DKDataLogPlayer.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKDataLogPlayer.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_24011B9E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;

  *(_QWORD *)(v6 + 56) = v5;
  v12 = sub_240154C58();
  *(_QWORD *)(v6 + 64) = v12;
  *(_QWORD *)(v6 + 72) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v6 + 80) = swift_task_alloc();
  *(_QWORD *)(v6 + 88) = swift_task_alloc();
  *(_QWORD *)(v6 + 40) = a1;
  *(_QWORD *)(v6 + 48) = a2;
  *(_QWORD *)(v6 + 16) = a3;
  *(_QWORD *)(v6 + 24) = a4;
  *(_BYTE *)(v6 + 32) = a5 & 1;
  return swift_task_switch();
}

uint64_t sub_24011BA84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t, uint64_t);
  _QWORD *v5;

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[9];
  sub_240154C70();
  sub_2400707A8(&qword_256FBF958, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6E10], MEMORY[0x24BEE6E20]);
  sub_240154F7C();
  sub_2400707A8(&qword_256FBF960, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6DC8], MEMORY[0x24BEE6E00]);
  sub_240154C7C();
  v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v4;
  v4(v1, v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[13] = v5;
  *v5 = v0;
  v5[1] = sub_24011BB9C;
  return sub_240154F88();
}

uint64_t sub_24011BB9C()
{
  uint64_t v0;
  uint64_t *v1;
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(void (**)(uint64_t, uint64_t))(*v1 + 96);
  v3 = *(_QWORD *)(*v1 + 88);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 112) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_24011BC48()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24011BC84(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_24015470C();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x24267D03C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

void sub_24011BCFC(_QWORD **a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5[2];

  v2 = *(_QWORD *)(sub_2401541D8() - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v3 = (_QWORD *)sub_2401357A8(v3);
  v4 = v3[2];
  v5[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_24011BD7C(v5);
  *a1 = v3;
}

void sub_24011BD7C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v77;
  void (*v78)(char *, uint64_t, uint64_t);
  unint64_t v79;
  unint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  BOOL v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  BOOL v105;
  uint64_t v106;
  char v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  unint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t *v158;
  uint64_t v159;

  v2 = v1;
  v4 = sub_2401541D8();
  v159 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v146 = (char *)&v138 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v153 = (char *)&v138 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v155 = (char *)&v138 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v154 = (char *)&v138 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v142 = (char *)&v138 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v149 = (char *)&v138 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v144 = (char *)&v138 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v143 = (char *)&v138 - v19;
  v158 = a1;
  v20 = a1[1];
  v21 = sub_240154EB0();
  if (v21 >= v20)
  {
    if (v20 < 0)
      goto LABEL_150;
    if (v20)
      sub_24011C914(0, v20, 1, v158);
    return;
  }
  if (v20 >= 0)
    v22 = v20;
  else
    v22 = v20 + 1;
  if (v20 < -1)
    goto LABEL_158;
  v139 = v21;
  if (v20 < 2)
  {
    v27 = (char *)MEMORY[0x24BEE4AF8];
    v26 = MEMORY[0x24BEE4AF8]
        + ((*(unsigned __int8 *)(v159 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v159 + 80));
    v138 = MEMORY[0x24BEE4AF8];
    if (v20 != 1)
    {
      v29 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_116:
      if (v29 >= 2)
      {
        v131 = *v158;
        do
        {
          v132 = v29 - 2;
          if (v29 < 2)
            goto LABEL_145;
          if (!v131)
            goto LABEL_157;
          v133 = *(_QWORD *)&v27[16 * v132 + 32];
          v134 = *(_QWORD *)&v27[16 * v29 + 24];
          v135 = v26;
          sub_24011CBDC(v131 + *(_QWORD *)(v159 + 72) * v133, v131 + *(_QWORD *)(v159 + 72) * *(_QWORD *)&v27[16 * v29 + 16], v131 + *(_QWORD *)(v159 + 72) * v134, v26);
          if (v2)
            break;
          if (v134 < v133)
            goto LABEL_146;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_2401356E0((uint64_t)v27);
          if (v132 >= *((_QWORD *)v27 + 2))
            goto LABEL_147;
          v136 = &v27[16 * v132 + 32];
          *(_QWORD *)v136 = v133;
          *((_QWORD *)v136 + 1) = v134;
          v137 = *((_QWORD *)v27 + 2);
          if (v29 > v137)
            goto LABEL_148;
          memmove(&v27[16 * v29 + 16], &v27[16 * v29 + 32], 16 * (v137 - v29));
          *((_QWORD *)v27 + 2) = v137 - 1;
          v29 = v137 - 1;
          v26 = v135;
        }
        while (v137 > 2);
      }
LABEL_127:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v138 + 16) = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v23 = v22 >> 1;
    v24 = sub_2401547FC();
    *(_QWORD *)(v24 + 16) = v23;
    v25 = *(unsigned __int8 *)(v159 + 80);
    v138 = v24;
    v26 = v24 + ((v25 + 32) & ~v25);
  }
  v28 = 0;
  v27 = (char *)MEMORY[0x24BEE4AF8];
  v148 = v26;
  v152 = v4;
  while (1)
  {
    v30 = v28;
    v31 = v28 + 1;
    if (v28 + 1 >= v20)
    {
      v39 = v28 + 1;
      goto LABEL_67;
    }
    v156 = v20;
    v32 = *v158;
    v33 = *(_QWORD *)(v159 + 72);
    v34 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
    v34(v143, *v158 + v33 * v31, v4);
    v147 = v30;
    v145 = v32;
    v157 = v33;
    v34(v144, v32 + v33 * v30, v4);
    v35 = sub_24015416C();
    v37 = v36;
    if (v35 == sub_24015416C() && v37 == v38)
      LODWORD(v151) = 0;
    else
      LODWORD(v151) = sub_240154EF8();
    v40 = v142;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v41 = *(void (**)(char *, uint64_t))(v159 + 8);
    v42 = v152;
    v41(v144, v152);
    v41(v143, v42);
    v39 = v147 + 2;
    if (v147 + 2 < v156)
    {
      v140 = v27;
      v141 = v2;
      v150 = v157 * v31;
      v43 = v145;
      v44 = v157 * v39;
      while (1)
      {
        v45 = v152;
        v34(v149, v43 + v44, v152);
        v34(v40, v43 + v150, v45);
        v46 = sub_24015416C();
        v48 = v47;
        if (v46 == sub_24015416C() && v48 == v49)
          v50 = 0;
        else
          v50 = sub_240154EF8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v51 = v152;
        v41(v40, v152);
        v41(v149, v51);
        if (((v151 ^ v50) & 1) != 0)
          break;
        ++v39;
        v43 += v157;
        if (v156 == v39)
        {
          v52 = v156;
          v39 = v156;
          v27 = v140;
          v2 = v141;
          goto LABEL_32;
        }
      }
      v27 = v140;
      v2 = v141;
    }
    v52 = v156;
LABEL_32:
    v30 = v147;
    v53 = v145;
    if ((v151 & 1) == 0)
      break;
    if (v39 < v147)
      goto LABEL_151;
    if (v147 >= v39)
      break;
    v140 = v27;
    v141 = v2;
    v54 = 0;
    v55 = v157 * (v39 - 1);
    v56 = v39 * v157;
    v57 = v147;
    v58 = v147 * v157;
    do
    {
      if (v57 != v39 + v54 - 1)
      {
        if (!v53)
          goto LABEL_156;
        v60 = v39;
        v61 = v53 + v55;
        v151 = *(_QWORD *)(v159 + 32);
        ((void (*)(char *, uint64_t, uint64_t))v151)(v146, v53 + v58, v152);
        if (v58 < v55 || v53 + v58 >= (unint64_t)(v53 + v56))
        {
          v59 = v152;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v59 = v152;
          if (v58 != v55)
            swift_arrayInitWithTakeBackToFront();
        }
        ((void (*)(uint64_t, char *, uint64_t))v151)(v61, v146, v59);
        v39 = v60;
        v53 = v145;
      }
      ++v57;
      --v54;
      v55 -= v157;
      v56 -= v157;
      v58 += v157;
    }
    while (v57 < v39 + v54);
    v27 = v140;
    v2 = v141;
    v62 = v152;
    v30 = v147;
    v52 = v156;
    if (v39 < v156)
      goto LABEL_48;
LABEL_67:
    if (v39 < v30)
      goto LABEL_144;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v27 = sub_240135220(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
    v80 = *((_QWORD *)v27 + 2);
    v79 = *((_QWORD *)v27 + 3);
    v29 = v80 + 1;
    v26 = v148;
    v157 = v39;
    if (v80 >= v79 >> 1)
    {
      v130 = sub_240135220((char *)(v79 > 1), v80 + 1, 1, v27);
      v26 = v148;
      v27 = v130;
    }
    *((_QWORD *)v27 + 2) = v29;
    v81 = v27 + 32;
    v82 = &v27[16 * v80 + 32];
    v83 = v157;
    *(_QWORD *)v82 = v30;
    *((_QWORD *)v82 + 1) = v83;
    if (v80)
    {
      while (1)
      {
        v84 = v29 - 1;
        if (v29 >= 4)
        {
          v89 = &v81[16 * v29];
          v90 = *((_QWORD *)v89 - 8);
          v91 = *((_QWORD *)v89 - 7);
          v95 = __OFSUB__(v91, v90);
          v92 = v91 - v90;
          if (v95)
            goto LABEL_133;
          v94 = *((_QWORD *)v89 - 6);
          v93 = *((_QWORD *)v89 - 5);
          v95 = __OFSUB__(v93, v94);
          v87 = v93 - v94;
          v88 = v95;
          if (v95)
            goto LABEL_134;
          v96 = v29 - 2;
          v97 = &v81[16 * v29 - 32];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v95 = __OFSUB__(v98, v99);
          v100 = v98 - v99;
          if (v95)
            goto LABEL_136;
          v95 = __OFADD__(v87, v100);
          v101 = v87 + v100;
          if (v95)
            goto LABEL_139;
          if (v101 >= v92)
          {
            v119 = &v81[16 * v84];
            v121 = *(_QWORD *)v119;
            v120 = *((_QWORD *)v119 + 1);
            v95 = __OFSUB__(v120, v121);
            v122 = v120 - v121;
            if (v95)
              goto LABEL_143;
            v112 = v87 < v122;
            goto LABEL_104;
          }
        }
        else
        {
          if (v29 != 3)
          {
            v113 = *((_QWORD *)v27 + 4);
            v114 = *((_QWORD *)v27 + 5);
            v95 = __OFSUB__(v114, v113);
            v106 = v114 - v113;
            v107 = v95;
            goto LABEL_98;
          }
          v86 = *((_QWORD *)v27 + 4);
          v85 = *((_QWORD *)v27 + 5);
          v95 = __OFSUB__(v85, v86);
          v87 = v85 - v86;
          v88 = v95;
        }
        if ((v88 & 1) != 0)
          goto LABEL_135;
        v96 = v29 - 2;
        v102 = &v81[16 * v29 - 32];
        v104 = *(_QWORD *)v102;
        v103 = *((_QWORD *)v102 + 1);
        v105 = __OFSUB__(v103, v104);
        v106 = v103 - v104;
        v107 = v105;
        if (v105)
          goto LABEL_138;
        v108 = &v81[16 * v84];
        v110 = *(_QWORD *)v108;
        v109 = *((_QWORD *)v108 + 1);
        v95 = __OFSUB__(v109, v110);
        v111 = v109 - v110;
        if (v95)
          goto LABEL_141;
        if (__OFADD__(v106, v111))
          goto LABEL_142;
        if (v106 + v111 >= v87)
        {
          v112 = v87 < v111;
LABEL_104:
          if (v112)
            v84 = v96;
          goto LABEL_106;
        }
LABEL_98:
        if ((v107 & 1) != 0)
          goto LABEL_137;
        v115 = &v81[16 * v84];
        v117 = *(_QWORD *)v115;
        v116 = *((_QWORD *)v115 + 1);
        v95 = __OFSUB__(v116, v117);
        v118 = v116 - v117;
        if (v95)
          goto LABEL_140;
        if (v118 < v106)
          goto LABEL_14;
LABEL_106:
        v123 = v84 - 1;
        if (v84 - 1 >= v29)
        {
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
          goto LABEL_153;
        }
        if (!*v158)
          goto LABEL_155;
        v124 = v27;
        v125 = &v81[16 * v123];
        v126 = *(_QWORD *)v125;
        v127 = &v81[16 * v84];
        v128 = *((_QWORD *)v127 + 1);
        sub_24011CBDC(*v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v125, *v158 + *(_QWORD *)(v159 + 72) * *(_QWORD *)v127, *v158 + *(_QWORD *)(v159 + 72) * v128, v26);
        if (v2)
          goto LABEL_127;
        if (v128 < v126)
          goto LABEL_130;
        if (v84 > *((_QWORD *)v124 + 2))
          goto LABEL_131;
        *(_QWORD *)v125 = v126;
        *(_QWORD *)&v81[16 * v123 + 8] = v128;
        v129 = *((_QWORD *)v124 + 2);
        if (v84 >= v129)
          goto LABEL_132;
        v27 = v124;
        v29 = v129 - 1;
        memmove(&v81[16 * v84], v127 + 16, 16 * (v129 - 1 - v84));
        *((_QWORD *)v124 + 2) = v129 - 1;
        v26 = v148;
        if (v129 <= 2)
          goto LABEL_14;
      }
    }
    v29 = 1;
LABEL_14:
    v20 = v158[1];
    v28 = v157;
    v4 = v152;
    if (v157 >= v20)
      goto LABEL_116;
  }
  v62 = v152;
  if (v39 >= v52)
    goto LABEL_67;
LABEL_48:
  if (__OFSUB__(v39, v30))
    goto LABEL_149;
  if (v39 - v30 >= v139)
    goto LABEL_67;
  if (__OFADD__(v30, v139))
    goto LABEL_152;
  if (v30 + v139 >= v52)
    v63 = v52;
  else
    v63 = v30 + v139;
  if (v63 >= v30)
  {
    if (v39 != v63)
    {
      v147 = v30;
      v140 = v27;
      v141 = v2;
      v64 = *(_QWORD *)(v159 + 72);
      v150 = *(_QWORD *)(v159 + 16);
      v151 = v64;
      v156 = v39 * v64;
      v157 = v64 * (v39 - 1);
      v145 = v63;
      do
      {
        v66 = 0;
        v67 = v147;
        while (1)
        {
          v68 = *v158;
          v69 = (void (*)(char *, uint64_t, uint64_t))v150;
          ((void (*)(char *, uint64_t, uint64_t))v150)(v154, v156 + v66 + *v158, v62);
          v69(v155, v157 + v66 + v68, v62);
          v70 = sub_24015416C();
          v72 = v71;
          if (v70 == sub_24015416C() && v72 == v73)
            break;
          v74 = sub_240154EF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v75 = *(void (**)(char *, uint64_t))(v159 + 8);
          v62 = v152;
          v75(v155, v152);
          v75(v154, v62);
          if ((v74 & 1) == 0)
            goto LABEL_58;
          v76 = *v158;
          if (!*v158)
            goto LABEL_154;
          v77 = (char *)(v76 + v157 + v66);
          v78 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 32);
          v78(v153, v76 + v156 + v66, v62);
          swift_arrayInitWithTakeFrontToBack();
          v78(v77, (uint64_t)v153, v62);
          v66 -= v151;
          if (v39 == ++v67)
            goto LABEL_58;
        }
        swift_bridgeObjectRelease_n();
        v65 = *(void (**)(char *, uint64_t))(v159 + 8);
        v62 = v152;
        v65(v155, v152);
        v65(v154, v62);
LABEL_58:
        ++v39;
        v157 += v151;
        v156 += v151;
      }
      while (v39 != v145);
      v39 = v145;
      v27 = v140;
      v2 = v141;
      v30 = v147;
    }
    goto LABEL_67;
  }
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  sub_240154CF4();
  __break(1u);
}

void sub_24011C914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  _QWORD *v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v37 = a4;
  v31 = a1;
  v6 = sub_2401541D8();
  v38 = *(_QWORD **)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v36 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v40 = (char *)&v29 - v9;
  v11.n128_f64[0] = MEMORY[0x24BDAC7A8](v10);
  v39 = (char *)&v29 - v12;
  v35 = a3;
  v30 = a2;
  if (a3 != a2)
  {
    v13 = v38[9];
    v32 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v33 = v13;
    v14 = v13 * (v35 - 1);
    v41 = v13 * v35;
LABEL_6:
    v16 = 0;
    v17 = v31;
    v34 = v14;
    while (1)
    {
      v18 = *v37;
      v19 = v32;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v32)(v39, v41 + v16 + *v37, v6, v11);
      v19(v40, v14 + v16 + v18, v6);
      v20 = sub_24015416C();
      v22 = v21;
      if (v20 == sub_24015416C() && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
        v15 = (void (*)(char *, uint64_t))v38[1];
        v15(v40, v6);
        v15(v39, v6);
        v14 = v34;
LABEL_5:
        v14 += v33;
        v41 += v33;
        if (++v35 == v30)
          return;
        goto LABEL_6;
      }
      v24 = sub_240154EF8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v25 = (void (*)(char *, uint64_t))v38[1];
      v25(v40, v6);
      v25(v39, v6);
      v14 = v34;
      if ((v24 & 1) == 0)
        goto LABEL_5;
      v26 = *v37;
      if (!*v37)
        break;
      v27 = (char *)(v26 + v34 + v16);
      v28 = (void (*)(char *, uint64_t, uint64_t))v38[4];
      v28(v36, v26 + v41 + v16, v6);
      swift_arrayInitWithTakeFrontToBack();
      v28(v27, (uint64_t)v36, v6);
      v16 -= v33;
      if (v35 == ++v17)
        goto LABEL_5;
    }
    __break(1u);
  }
}

uint64_t sub_24011CBDC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char v32;
  void (*v33)(char *, uint64_t);
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v39;
  unint64_t v40;
  void (*v41)(char *, unint64_t, uint64_t);
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  void (*v48)(char *, uint64_t);
  BOOL v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t result;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;

  v8 = sub_2401541D8();
  MEMORY[0x24BDAC7A8](v8);
  v58 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v57 = (char *)&v54 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v54 - v13;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v54 - v16;
  v19 = *(_QWORD *)(v18 + 72);
  v59 = v18;
  v60 = v19;
  if (!v19)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v60 == -1)
    goto LABEL_69;
  v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v60 == -1)
    goto LABEL_70;
  v21 = (uint64_t)(a2 - a1) / v60;
  v63 = a1;
  v62 = a4;
  v22 = v20 / v60;
  if (v21 >= v20 / v60)
  {
    if ((v22 & 0x8000000000000000) == 0)
    {
      v24 = v22 * v60;
      if (a4 < a2 || a2 + v24 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v37 = a4 + v24;
      v61 = a4 + v24;
      v63 = a2;
      if (v24 >= 1 && a1 < a2)
      {
        v39 = -v60;
        v60 = *(_QWORD *)(v59 + 16);
        v55 = a4;
        v56 = a1;
        do
        {
          v40 = a3;
          v41 = (void (*)(char *, unint64_t, uint64_t))v60;
          ((void (*)(char *, unint64_t, uint64_t))v60)(v57, v37 + v39, v8);
          v42 = a2 + v39;
          v41(v58, a2 + v39, v8);
          v43 = sub_24015416C();
          v45 = v44;
          if (v43 == sub_24015416C() && v45 == v46)
            v47 = 0;
          else
            v47 = sub_240154EF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a3 += v39;
          v48 = *(void (**)(char *, uint64_t))(v59 + 8);
          v48(v58, v8);
          v48(v57, v8);
          if ((v47 & 1) != 0)
          {
            if (v40 < a2 || a3 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v49 = v40 == a2;
              v50 = v55;
              v51 = v56;
              if (!v49)
                swift_arrayInitWithTakeBackToFront();
            }
            v63 += v39;
          }
          else
          {
            v52 = v61;
            v61 += v39;
            if (v40 < v52 || a3 >= v52)
            {
              swift_arrayInitWithTakeFrontToBack();
              v42 = a2;
              v50 = v55;
              v51 = v56;
            }
            else
            {
              v51 = v56;
              if (v40 != v52)
                swift_arrayInitWithTakeBackToFront();
              v42 = a2;
              v50 = v55;
            }
          }
          v37 = v61;
          if (v61 <= v50)
            break;
          a2 = v42;
        }
        while (v42 > v51);
      }
LABEL_67:
      sub_2401355D4(&v63, &v62, (uint64_t *)&v61);
      return 1;
    }
  }
  else if ((v21 & 0x8000000000000000) == 0)
  {
    v23 = v21 * v60;
    if (a4 < a1 || a1 + v23 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    v58 = (char *)(a4 + v23);
    v61 = a4 + v23;
    if (v23 >= 1 && a2 < a3)
    {
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v59 + 16);
      while (1)
      {
        v26(v17, a2, v8);
        v26(v14, a4, v8);
        v27 = sub_24015416C();
        v29 = v28;
        if (v27 == sub_24015416C() && v29 == v30)
          break;
        v32 = sub_240154EF8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v33 = *(void (**)(char *, uint64_t))(v59 + 8);
        v33(v14, v8);
        v33(v17, v8);
        if ((v32 & 1) == 0)
          goto LABEL_31;
        v34 = v63;
        v35 = a2 + v60;
        if (v63 < a2 || v63 >= v35)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v63 == a2)
        {
          v34 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_37:
        v63 = v34 + v60;
        a4 = v62;
        if (v62 < (unint64_t)v58)
        {
          a2 = v35;
          if (v35 < a3)
            continue;
        }
        goto LABEL_67;
      }
      swift_bridgeObjectRelease_n();
      v31 = *(void (**)(char *, uint64_t))(v59 + 8);
      v31(v14, v8);
      v31(v17, v8);
LABEL_31:
      v34 = v63;
      v36 = v62 + v60;
      if (v63 < v62 || v63 >= v36)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v63 != v62)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v62 = v36;
      v35 = a2;
      goto LABEL_37;
    }
    goto LABEL_67;
  }
LABEL_71:
  result = sub_240154D60();
  __break(1u);
  return result;
}

_BYTE *sub_24011D1B8@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_24011D4C8(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_24011D588((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_24011D600((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_24011D22C(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_24011D290@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  char v3;
  uint64_t v4;

  if (result)
  {
    swift_bridgeObjectRetain();
    result = sub_240154B44();
    if ((v3 & 1) == 0)
    {
      v4 = result;
      result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_24011D318()
{
  unint64_t result;

  result = qword_256FBF4D8;
  if (!qword_256FBF4D8)
  {
    result = MEMORY[0x24267E0BC](MEMORY[0x24BDCDDC0], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_256FBF4D8);
  }
  return result;
}

uint64_t sub_24011D35C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_2401546C4();
    return sub_240154718();
  }
  return result;
}

unint64_t sub_24011D3E4()
{
  unint64_t result;

  result = qword_256FBF4E0;
  if (!qword_256FBF4E0)
  {
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_256FBF4E0);
  }
  return result;
}

unint64_t sub_24011D428()
{
  unint64_t result;

  result = qword_256FBF4E8;
  if (!qword_256FBF4E8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_256FBF4E8);
  }
  return result;
}

uint64_t sub_24011D464(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKDataLogStamped(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DKDataLogIndex()
{
  return objc_opt_self();
}

uint64_t sub_24011D4C8(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_24011D588(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_240154100();
  swift_allocObject();
  result = sub_2401540C4();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_240154208();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_24011D600(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_240154100();
  swift_allocObject();
  result = sub_2401540C4();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

_BYTE *sub_24011D680(_BYTE *result, _BYTE *a2)
{
  uint64_t v2;

  if (result)
  {
    v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (_BYTE *)sub_24011D4C8(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (_BYTE *)sub_24011D588((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (_BYTE *)sub_24011D600((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_24011D6E4(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000018 && a2 == 0x80000002401652B0)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_240154EF8();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24011D768(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 6778732 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_24011D838(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  os_log_type_t v36;
  _QWORD v38[2];
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD v48[2];
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unint64_t v52;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF948);
  MEMORY[0x24BDAC7A8](v2);
  v44 = (char *)v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43 = type metadata accessor for DKDataLogStamped(0);
  v46 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v38 - v7;
  v45 = sub_2401540AC();
  v42 = *(_QWORD *)(v45 - 8);
  MEMORY[0x24BDAC7A8](v45);
  v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_240154688();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  sub_24015467C();
  v16 = sub_24015461C();
  v38[1] = a1;
  v39 = v8;
  v47 = v12;
  v40 = v5;
  v41 = v11;
  v51 = v16;
  v52 = v17;
  sub_2401540A0();
  sub_24011D3E4();
  v18 = sub_240154A90();
  (*(void (**)(char *, unint64_t))(v42 + 8))(v10, v45);
  swift_bridgeObjectRelease();
  sub_240154040();
  swift_allocObject();
  v42 = sub_240154034();
  v19 = *(_QWORD *)(v18 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    v45 = MEMORY[0x24BEE4AF8];
    v38[0] = v18;
    v20 = (unint64_t *)(v18 + 40);
    v21 = v41;
    do
    {
      v22 = *v20;
      v51 = *(v20 - 1);
      v52 = v22;
      v49 = 10;
      v50 = 0xE100000000000000;
      v48[0] = 0;
      v48[1] = 0xE000000000000000;
      sub_240154A9C();
      sub_24015467C();
      v23 = sub_240154658();
      v25 = v24;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v21);
      if (v25 >> 60 != 15)
      {
        sub_2400707A8(&qword_256FBF950, type metadata accessor for DKDataLogStamped, (uint64_t)&protocol conformance descriptor for DKDataLogStamped);
        v26 = v43;
        v27 = (uint64_t)v44;
        sub_240154028();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v27, 0, 1, v26);
        v28 = (uint64_t)v39;
        sub_24011D464(v27, (uint64_t)v39);
        sub_240119C18(v28, (uint64_t)v40);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          v21 = v41;
          v29 = v45;
        }
        else
        {
          v29 = sub_240078030(0, *(_QWORD *)(v45 + 16) + 1, 1, v45);
          v21 = v41;
        }
        v31 = *(_QWORD *)(v29 + 16);
        v30 = *(_QWORD *)(v29 + 24);
        if (v31 >= v30 >> 1)
          v29 = sub_240078030(v30 > 1, v31 + 1, 1, v29);
        *(_QWORD *)(v29 + 16) = v31 + 1;
        v32 = (*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
        v45 = v29;
        sub_24011D464((uint64_t)v40, v29 + v32 + *(_QWORD *)(v46 + 72) * v31);
        sub_240113BBC(v23, v25);
        sub_2401034AC((uint64_t)v39);
      }
      v20 += 2;
      --v19;
    }
    while (v19);
    v18 = v38[0];
    swift_bridgeObjectRelease();
  }
  else
  {
    v45 = MEMORY[0x24BEE4AF8];
  }
  LOBYTE(v48[0]) = 12;
  v51 = 0;
  v52 = 0xE000000000000000;
  sub_240154B38();
  swift_bridgeObjectRelease();
  v51 = 0x2064616552;
  v52 = 0xE500000000000000;
  v33 = *(_QWORD *)(v18 + 16);
  swift_bridgeObjectRelease();
  v49 = v33;
  sub_240154EBC();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  sub_2401546D0();
  sub_24015416C();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  v34 = v51;
  v35 = v52;
  v36 = sub_240154964();
  _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v48, v34, v35, v36);
  swift_bridgeObjectRelease();
  swift_release();
  return v45;
}

unint64_t sub_24011DE68()
{
  unint64_t result;

  result = qword_256FBF510[0];
  if (!qword_256FBF510[0])
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKDataLogGenerator, &type metadata for DKDataLogGenerator);
    atomic_store(result, qword_256FBF510);
  }
  return result;
}

uint64_t sub_24011DEAC()
{
  return MEMORY[0x24BEE40A8];
}

_QWORD *__swift_initWithCopy_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t __swift_destroy_strong()
{
  return swift_release();
}

_QWORD *__swift_assignWithCopy_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_assignWithTake_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKDataLog(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 8))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKDataLog(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKDataLog()
{
  return &type metadata for DKDataLog;
}

uint64_t *initializeBufferWithCopyOfBuffer for DKDataLogStamped(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_240154310();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for DKDataLogStamped(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for DKDataLogStamped(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKDataLogStamped()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24011E24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for DKDataLogStamped()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24011E2D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_240154310();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_24011E34C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24011E3C0()
{
  return type metadata accessor for DKDataLogRecorder(0);
}

uint64_t type metadata accessor for DKDataLogRecorder(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FBF5E0);
}

uint64_t sub_24011E3DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_24015434C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKDataLogRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKDataLogRecorder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of DKDataLogRecorder.save()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 264) + *(_QWORD *)(*(_QWORD *)v0 + 264));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240086C70;
  return v4();
}

uint64_t dispatch thunk of DKDataLogRecorder.log(log:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 272) + *(_QWORD *)(*(_QWORD *)v1 + 272));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086C70;
  return v6(a1);
}

uint64_t destroy for DKDataLogGenerator()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for DKDataLogGenerator(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for DKDataLogGenerator(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DKDataLogGenerator(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for DKDataLogGenerator()
{
  return &type metadata for DKDataLogGenerator;
}

uint64_t method lookup function for DKDataLogIndex()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for DKDataLogPlayer()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKDataLogPlayer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKDataLogPlayer.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKDataLogPlayer.openVideosMetafile()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 152) + *(_QWORD *)(*(_QWORD *)v0 + 152));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_24008670C;
  return v4();
}

uint64_t dispatch thunk of DKDataLogPlayer.load(urls:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKDataLogPlayer.play(delay:rate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKDataLogPlayer.next(skip:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKDataLogPlayer.prev(skip:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKDataLogPlayer.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t storeEnumTagSinglePayload for DKDataLogStamped.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24011E7A4 + 4 * byte_24015E145[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24011E7D8 + 4 * byte_24015E140[v4]))();
}

uint64_t sub_24011E7D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24011E7E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24011E7E8);
  return result;
}

uint64_t sub_24011E7F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24011E7FCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24011E800(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24011E808(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKDataLogStamped.CodingKeys()
{
  return &type metadata for DKDataLogStamped.CodingKeys;
}

ValueMetadata *type metadata accessor for DKDataLog.CodingKeys()
{
  return &type metadata for DKDataLog.CodingKeys;
}

uint64_t _s23IntelligentTrackingCore9DKDataLogO10CodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24011E878 + 4 * byte_24015E14A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24011E898 + 4 * byte_24015E14F[v4]))();
}

_BYTE *sub_24011E878(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24011E898(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24011E8A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24011E8A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24011E8B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24011E8B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DKDataLog.IntelligentTrackingStateCodingKeys()
{
  return &type metadata for DKDataLog.IntelligentTrackingStateCodingKeys;
}

unint64_t sub_24011E8D8()
{
  unint64_t result;

  result = qword_256FBF900;
  if (!qword_256FBF900)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E494, &type metadata for DKDataLog.IntelligentTrackingStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF900);
  }
  return result;
}

unint64_t sub_24011E920()
{
  unint64_t result;

  result = qword_256FBF908;
  if (!qword_256FBF908)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E54C, &type metadata for DKDataLog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF908);
  }
  return result;
}

unint64_t sub_24011E968()
{
  unint64_t result;

  result = qword_256FBF910;
  if (!qword_256FBF910)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E604, &type metadata for DKDataLogStamped.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF910);
  }
  return result;
}

unint64_t sub_24011E9B0()
{
  unint64_t result;

  result = qword_256FBF918;
  if (!qword_256FBF918)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E574, &type metadata for DKDataLogStamped.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF918);
  }
  return result;
}

unint64_t sub_24011E9F8()
{
  unint64_t result;

  result = qword_256FBF920;
  if (!qword_256FBF920)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E59C, &type metadata for DKDataLogStamped.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF920);
  }
  return result;
}

unint64_t sub_24011EA40()
{
  unint64_t result;

  result = qword_256FBF928;
  if (!qword_256FBF928)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E404, &type metadata for DKDataLog.IntelligentTrackingStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF928);
  }
  return result;
}

unint64_t sub_24011EA88()
{
  unint64_t result;

  result = qword_256FBF930;
  if (!qword_256FBF930)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E42C, &type metadata for DKDataLog.IntelligentTrackingStateCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF930);
  }
  return result;
}

unint64_t sub_24011EAD0()
{
  unint64_t result;

  result = qword_256FBF938;
  if (!qword_256FBF938)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E4BC, &type metadata for DKDataLog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF938);
  }
  return result;
}

unint64_t sub_24011EB18()
{
  unint64_t result;

  result = qword_256FBF940;
  if (!qword_256FBF940)
  {
    result = MEMORY[0x24267E0BC](&unk_24015E4E4, &type metadata for DKDataLog.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF940);
  }
  return result;
}

_QWORD *sub_24011EB5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  _QWORD v13[2];

  v5 = *(uint64_t **)(v3 + 16);
  v7 = *v5;
  v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  v12[2] = v13;
  result = sub_24011D22C((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24011EBB8, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_24011EBB8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_24011D290(a1, a2);
}

uint64_t DKFramingEngine.__allocating_init(config:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_240122B70(a1);
  swift_release();
  return v2;
}

uint64_t sub_24011EC24()
{
  uint64_t inited;
  unint64_t v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC0028);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240155A40;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = sub_240107294((uint64_t)&unk_251061D98);
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = sub_240107294((uint64_t)&unk_251061E18);
  v1 = sub_2401072A8(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC0030);
  result = swift_arrayDestroy();
  qword_256FC4F50 = v1;
  return result;
}

uint64_t sub_24011ECDC()
{
  uint64_t inited;
  unint64_t v1;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC0018);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240155A40;
  *(_BYTE *)(inited + 32) = 0;
  *(_QWORD *)(inited + 40) = sub_2401072BC((uint64_t)&unk_251061E98);
  *(_BYTE *)(inited + 48) = 1;
  *(_QWORD *)(inited + 56) = sub_2401072BC((uint64_t)&unk_251061F00);
  v1 = sub_2401073B4(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC0020);
  result = swift_arrayDestroy();
  qword_256FC4F58 = v1;
  return result;
}

unint64_t sub_24011ED94()
{
  unint64_t result;

  result = sub_2401074F8((uint64_t)&unk_251061FD8);
  qword_256FC4F60 = result;
  return result;
}

uint64_t DKFramingEngine.Config.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DKFramingEngine.Config.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

BOOL static DKFramingEngine.Orientation.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DKFramingEngine.Orientation.hash(into:)()
{
  return sub_240154FF4();
}

uint64_t sub_24011EE10()
{
  _BYTE *v0;

  if (*v0)
    return 0x7469617274726F70;
  else
    return 0x70616373646E616CLL;
}

uint64_t sub_24011EE50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_240124100(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24011EE74()
{
  sub_240122D70();
  return sub_240155048();
}

uint64_t sub_24011EE9C()
{
  sub_240122D70();
  return sub_240155054();
}

uint64_t sub_24011EEC4()
{
  sub_240122DF8();
  return sub_240155048();
}

uint64_t sub_24011EEEC()
{
  sub_240122DF8();
  return sub_240155054();
}

uint64_t sub_24011EF14()
{
  sub_240122DB4();
  return sub_240155048();
}

uint64_t sub_24011EF3C()
{
  sub_240122DB4();
  return sub_240155054();
}

uint64_t DKFramingEngine.Orientation.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF978);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF980);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF988);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240122D70();
  sub_240155030();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_240122DB4();
    sub_240154E20();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_240122DF8();
    sub_240154E20();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t DKFramingEngine.Orientation.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF9A8);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF9B0);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF9B8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240122D70();
  v11 = v33;
  sub_240155024();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_240154E08();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_240154BC8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v21 = &type metadata for DKFramingEngine.Orientation;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_240122DB4();
    sub_240154D90();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_240122DF8();
    v22 = v6;
    sub_240154D90();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_24011F494@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DKFramingEngine.Orientation.init(from:)(a1, a2);
}

uint64_t sub_24011F4A8(_QWORD *a1)
{
  return DKFramingEngine.Orientation.encode(to:)(a1);
}

uint64_t sub_24011F4BC()
{
  sub_240122EC4();
  return sub_240155048();
}

uint64_t sub_24011F4E4()
{
  sub_240122EC4();
  return sub_240155054();
}

uint64_t sub_24011F50C()
{
  _BYTE *v0;

  if (*v0)
    return 0x6C61756E616DLL;
  else
    return 0x6974616D6F747561;
}

uint64_t sub_24011F548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2401241FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24011F56C()
{
  sub_240122E3C();
  return sub_240155048();
}

uint64_t sub_24011F594()
{
  sub_240122E3C();
  return sub_240155054();
}

uint64_t sub_24011F5BC()
{
  sub_240122E80();
  return sub_240155048();
}

uint64_t sub_24011F5E4()
{
  sub_240122E80();
  return sub_240155054();
}

uint64_t DKFramingEngine.Mode.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF9C0);
  v16 = *(_QWORD *)(v3 - 8);
  v17 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF9C8);
  v14 = *(_QWORD *)(v6 - 8);
  v15 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF9D0);
  v18 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240122E3C();
  sub_240155030();
  if ((v12 & 1) != 0)
  {
    v20 = 1;
    sub_240122E80();
    sub_240154E20();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  }
  else
  {
    v19 = 0;
    sub_240122EC4();
    sub_240154E20();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v11, v9);
}

uint64_t DKFramingEngine.Mode.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;

  v30 = a2;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF9F0);
  v32 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBF9F8);
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA00);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240122E3C();
  v11 = v33;
  sub_240155024();
  if (v11)
    goto LABEL_7;
  v26 = v4;
  v27 = a1;
  v12 = v31;
  v13 = v32;
  v33 = v8;
  v14 = sub_240154E08();
  v15 = v7;
  if (*(_QWORD *)(v14 + 16) != 1)
  {
    v19 = sub_240154BC8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v21 = &type metadata for DKFramingEngine.Mode;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v15);
    a1 = v27;
LABEL_7:
    v24 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v24);
  }
  v16 = *(_BYTE *)(v14 + 32);
  if ((v16 & 1) != 0)
  {
    LODWORD(v28) = *(unsigned __int8 *)(v14 + 32);
    v35 = 1;
    sub_240122E80();
    sub_240154D90();
    v17 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v10, v15);
    v16 = v28;
  }
  else
  {
    v34 = 0;
    sub_240122EC4();
    v22 = v6;
    sub_240154D90();
    v23 = v33;
    v18 = v30;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v22, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v15);
  }
  *v18 = v16;
  v24 = (uint64_t)v27;
  return __swift_destroy_boxed_opaque_existential_1(v24);
}

uint64_t sub_24011FB3C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DKFramingEngine.Mode.init(from:)(a1, a2);
}

uint64_t sub_24011FB50(_QWORD *a1)
{
  return DKFramingEngine.Mode.encode(to:)(a1);
}

uint64_t sub_24011FB64()
{
  sub_240123018();
  return sub_240155048();
}

uint64_t sub_24011FB8C()
{
  sub_240123018();
  return sub_240155054();
}

uint64_t sub_24011FBB4()
{
  sub_240122F4C();
  return sub_240155048();
}

uint64_t sub_24011FBDC()
{
  sub_240122F4C();
  return sub_240155054();
}

uint64_t sub_24011FC04()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24011FC30 + 4 * byte_24015E720[*v0]))(0x7265746E6563, 0xE600000000000000);
}

uint64_t sub_24011FC30()
{
  return 1952867692;
}

uint64_t sub_24011FC40()
{
  return 0x7468676972;
}

uint64_t sub_24011FC54()
{
  return 0x69547265746E6563;
}

uint64_t sub_24011FC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2401242F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24011FC98()
{
  sub_240122F08();
  return sub_240155048();
}

uint64_t sub_24011FCC0()
{
  sub_240122F08();
  return sub_240155054();
}

uint64_t sub_24011FCE8()
{
  sub_240122FD4();
  return sub_240155048();
}

uint64_t sub_24011FD10()
{
  sub_240122FD4();
  return sub_240155054();
}

uint64_t sub_24011FD38()
{
  sub_240122F90();
  return sub_240155048();
}

uint64_t sub_24011FD60()
{
  sub_240122F90();
  return sub_240155054();
}

void DKFramingEngine.HorizontalFraming.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA08);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA10);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA18);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA20);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA28);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240122F08();
  sub_240155030();
  __asm { BR              X9 }
}

uint64_t sub_24011FF40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_240123018();
  sub_240154E20();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t DKFramingEngine.HorizontalFraming.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA58);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA60);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA68);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA70);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA78);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_240122F08();
  v15 = v28;
  sub_240155024();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_240154E08();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_240154BC8();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v19 = &type metadata for DKFramingEngine.HorizontalFraming;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_2401204FC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKFramingEngine.HorizontalFraming.init(from:)(a1, a2);
}

void sub_240120510(_QWORD *a1)
{
  DKFramingEngine.HorizontalFraming.encode(to:)(a1);
}

BOOL static DKFramingEngine.VerticalFraming.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKFramingEngine.VerticalFraming.hash(into:)()
{
  return sub_240154FF4();
}

uint64_t sub_240120560()
{
  sub_2401230A0();
  return sub_240155048();
}

uint64_t sub_240120588()
{
  sub_2401230A0();
  return sub_240155054();
}

uint64_t sub_2401205B0()
{
  sub_240123128();
  return sub_240155048();
}

uint64_t sub_2401205D8()
{
  sub_240123128();
  return sub_240155054();
}

uint64_t sub_240120600()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 7368564;
  if (*v0 != 1)
    v1 = 0x6D6F74746F62;
  if (*v0)
    return v1;
  else
    return 0x7265746E6563;
}

uint64_t sub_24012064C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2401244A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240120670()
{
  sub_24012305C();
  return sub_240155048();
}

uint64_t sub_240120698()
{
  sub_24012305C();
  return sub_240155054();
}

uint64_t sub_2401206C0()
{
  sub_2401230E4();
  return sub_240155048();
}

uint64_t sub_2401206E8()
{
  sub_2401230E4();
  return sub_240155054();
}

uint64_t DKFramingEngine.VerticalFraming.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA80);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA88);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA90);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFA98);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24012305C();
  sub_240155030();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_2401230E4();
      sub_240154E20();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_2401230A0();
      v16 = v21;
      sub_240154E20();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_240123128();
    sub_240154E20();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t DKFramingEngine.VerticalFraming.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFAC0);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFAC8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFAD0);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBFAD8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24012305C();
  v13 = v41;
  sub_240155024();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_240154E08();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_240154BC8();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v25 = &type metadata for DKFramingEngine.VerticalFraming;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_2401230E4();
      v20 = v9;
      sub_240154D90();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_2401230A0();
      v28 = v15;
      sub_240154D90();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_240123128();
    sub_240154D90();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_240120DBC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DKFramingEngine.VerticalFraming.init(from:)(a1, a2);
}

uint64_t sub_240120DD0(_QWORD *a1)
{
  return DKFramingEngine.VerticalFraming.encode(to:)(a1);
}

uint64_t DKFramingEngine.init(config:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_240122B70(a1);
  swift_release();
  return v1;
}

void sub_240120E14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  char v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  unsigned __int8 *v33;
  uint64_t v34;
  unsigned __int8 *v35;
  unsigned int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  double v44;
  double v45;
  void (*v46)(char *, uint64_t);
  double v47;
  double v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  unsigned __int8 v66;

  v2 = v1;
  v58 = sub_240154310();
  v56 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8](v58);
  v55 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v57 = (char *)&v51 - v6;
  v7 = sub_24015434C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v51 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for DKCamera();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v59 = (uint64_t)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240121430(a1);
  if ((*(_BYTE *)(v1 + 41) & 1) != 0)
    return;
  if ((*(unsigned __int8 *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) | 4) == 5)
  {
    sub_240121780();
    return;
  }
  sub_240070B90(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v16, &qword_256FB4430);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_240070BD4((uint64_t)v16, &qword_256FB4430);
    return;
  }
  v20 = v59;
  sub_240070AF8((uint64_t)v16, v59);
  v21 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (!v21)
    goto LABEL_26;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v50 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (v50)
      goto LABEL_9;
LABEL_39:
    sub_240070B3C(v20);
    swift_bridgeObjectRelease();
    return;
  }
  v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v22)
    goto LABEL_39;
LABEL_9:
  v52 = v21 >> 62;
  v53 = v21;
  if ((v21 & 0xC000000000000001) != 0)
  {
    v23 = MEMORY[0x24267D4E0](0, v21);
  }
  else
  {
    if (!*(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v23 = *(_QWORD *)(v21 + 32);
    swift_retain();
  }
  v24 = *(void (**)(char *))(v8 + 16);
  v51 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_currentSubjectUUID;
  v24(v13);
  v54 = v23;
  v25 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid;
  ((void (*)(char *, uint64_t, uint64_t))v24)(v10, v23 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v7);
  sub_2401245D4();
  v26 = sub_240154610();
  v27 = *(void (**)(char *, uint64_t))(v8 + 8);
  v27(v10, v7);
  v27(v13, v7);
  if ((v26 & 1) == 0)
  {
    ((void (*)(char *, uint64_t, uint64_t))v24)(v13, v25, v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v51, v13, v7);
    v29 = v56;
    v28 = v57;
    v30 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v57, a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v58);
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 40))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastSubjectChangeDate, v28, v30);
  }
  v20 = v59;
  v66 = *(_BYTE *)(v59 + 1);
  sub_240121810(&v66);
  v31 = v54;
  v32 = *(_BYTE *)(v54 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_type);
  *(_BYTE *)(v2 + 40) = v32;
  if ((v32 & 0xFE) == 2)
  {
    v60 = 0;
    v33 = (unsigned __int8 *)&v60;
  }
  else
  {
    v65 = 1;
    v33 = (unsigned __int8 *)&v65;
  }
  sub_240121AD8(v33);
  if (v52)
  {
    swift_bridgeObjectRetain();
    v34 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v34 = *(_QWORD *)((v53 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v34 >= 2)
  {
    v61 = 3;
    v35 = (unsigned __int8 *)&v61;
LABEL_24:
    sub_240121918(v35);
    goto LABEL_25;
  }
  if ((sub_240121C98(v31) & 1) != 0)
  {
    v62 = 0;
    v35 = (unsigned __int8 *)&v62;
    goto LABEL_24;
  }
  if (!*(_BYTE *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motionClassification))
  {
    v36 = (0x10200u >> (8
                      * *(_BYTE *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection))) & 3;
    v37 = a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    v39 = v56;
    v38 = v57;
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v56 + 16);
    v41 = a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    v42 = v58;
    v40(v57, v41, v58);
    v43 = v55;
    v40(v55, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastHorizontalReframeDate, v42);
    sub_24015428C();
    v45 = v44;
    v46 = *(void (**)(char *, uint64_t))(v39 + 8);
    v46(v43, v42);
    v46(v38, v42);
    v40(v38, v37, v42);
    v40(v43, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastSubjectChangeDate, v42);
    sub_24015428C();
    v48 = v47;
    v46(v43, v42);
    v46(v38, v42);
    if (v36 - 1 >= 2)
    {
      v20 = v59;
      if (v45 <= 3.0 || v48 <= 3.0)
        goto LABEL_25;
      v63 = v36;
      v49 = (unsigned __int8 *)&v63;
    }
    else
    {
      v20 = v59;
      if (v45 <= 1.0 || v48 <= 3.0)
        goto LABEL_25;
      v64 = v36;
      v49 = (unsigned __int8 *)&v64;
    }
    sub_240121918(v49);
LABEL_25:
    swift_release();
LABEL_26:
    sub_240070B3C(v20);
    return;
  }
  sub_240070B3C(v20);
  swift_release();
}

void sub_240121430(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  double v14;
  double v15;
  uint64_t v16;
  unint64_t v17;
  os_log_type_t v18;
  double v19;
  double v20;
  char v21;
  _BYTE v22[24];
  uint64_t v23;
  unint64_t v24;
  char v25;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v22[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for DKCamera();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_aspectRatioOverridden) & 1) == 0)
  {
    v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID + 8);
    if (v11)
    {
      v12 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
      sub_240070B90(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v6, &qword_256FB4430);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
      {
        sub_240070BD4((uint64_t)v6, &qword_256FB4430);
        return;
      }
      sub_240070AF8((uint64_t)v6, (uint64_t)v10);
      v13 = (double *)&v10[*(int *)(v7 + 40)];
      if (((_BYTE)v13[2] & 1) != 0)
        goto LABEL_11;
      v15 = *v13;
      v14 = v13[1];
      v25 = 3;
      v23 = 0;
      v24 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_240154B38();
      sub_2401546D0();
      sub_2401546D0();
      sub_2401546D0();
      v22[23] = *(_BYTE *)(v2 + 44);
      sub_240154C94();
      v16 = v23;
      v17 = v24;
      v18 = sub_24015494C();
      _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v25, v16, v17, v18);
      swift_bridgeObjectRelease();
      if (v12 == 0xD000000000000012 && v11 == 0x80000002401655E0 || (sub_240154EF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v19 = 1.0;
        v20 = 0.5;
      }
      else if (v12 == 0xD000000000000011 && v11 == 0x8000000240165600 || (sub_240154EF8() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        v19 = 1.0;
        v20 = 1.0;
      }
      else
      {
        if (v12 == 0xD000000000000011 && v11 == 0x8000000240165620)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v21 = sub_240154EF8();
          swift_bridgeObjectRelease();
          if ((v21 & 1) == 0)
            goto LABEL_11;
        }
        if (*(_BYTE *)(v2 + 44) != 1)
          goto LABEL_11;
        v19 = 16.0;
        v20 = 9.0;
      }
      sub_240121E84(0, v19, v20, v15, v14);
LABEL_11:
      sub_240070B3C((uint64_t)v10);
    }
  }
}

uint64_t sub_240121780()
{
  uint64_t v0;
  unsigned __int8 *v1;
  os_log_type_t v2;
  char v4;
  char v5;
  char v6;
  unsigned __int8 v7;

  v7 = 0;
  sub_240121918(&v7);
  if (*(_BYTE *)(v0 + 40) == 3)
  {
    v4 = 0;
    v1 = (unsigned __int8 *)&v4;
  }
  else
  {
    v6 = 1;
    v1 = (unsigned __int8 *)&v6;
  }
  sub_240121AD8(v1);
  *(_BYTE *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera) = 0;
  v5 = 3;
  v2 = sub_240154964();
  return _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v5, 0x7266207465736552, 0xED0000676E696D61, v2);
}

unsigned __int8 *sub_240121810(unsigned __int8 *result)
{
  _BYTE *v1;
  unsigned int v2;
  uint64_t v3;
  unint64_t v4;
  os_log_type_t v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = *result - 1;
  if (v2 > 1)
  {
    if (!v1[44])
      return result;
    goto LABEL_5;
  }
  if ((v1[44] & 1) == 0)
  {
LABEL_5:
    v1[44] = v2 < 2;
    LOBYTE(v6) = v1[42];
    sub_240121918((unsigned __int8 *)&v6);
    LOBYTE(v6) = v1[43];
    sub_240121AD8((unsigned __int8 *)&v6);
    v8 = 3;
    v6 = 0;
    v7 = 0xE000000000000000;
    sub_240154B38();
    sub_2401546D0();
    sub_240154C94();
    v3 = v6;
    v4 = v7;
    v5 = sub_240154964();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v8, v3, v4, v5);
    return (unsigned __int8 *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240121918(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  if (*(unsigned __int8 *)(v2 + 42) != (_DWORD)v9)
  {
    sub_240154304();
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastHorizontalReframeDate, v8, v4);
    *(_BYTE *)(v2 + 42) = v9;
    v10 = *(_QWORD *)(v2 + 24);
    if (*(_QWORD *)(v10 + 16))
    {
      result = sub_24013EF58(*(unsigned __int8 *)(v2 + 44));
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * result);
        if (*(_QWORD *)(v12 + 16))
        {
          result = sub_24013F0E0(v9);
          if ((v13 & 1) != 0)
          {
            *(_OWORD *)(v2 + 48) = *(_OWORD *)(*(_QWORD *)(v12 + 56) + 16 * result);
            v20 = 3;
            v18 = 0;
            v19 = 0xE000000000000000;
            sub_240154B38();
            sub_2401546D0();
            HIBYTE(v17) = *(_BYTE *)(v2 + 42);
            sub_240154C94();
            sub_2401546D0();
            HIBYTE(v17) = v9;
            sub_240154C94();
            v14 = v18;
            v15 = v19;
            v16 = sub_240154964();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v20, v14, v15, v16);
            return swift_bridgeObjectRelease();
          }
LABEL_11:
          __break(1u);
          return result;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_240121AD8(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  if (*(unsigned __int8 *)(v2 + 43) != (_DWORD)v9)
  {
    sub_240154304();
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastVerticalReframeDate, v8, v4);
    *(_BYTE *)(v2 + 43) = v9;
    v10 = *(_QWORD *)(v2 + 32);
    if (*(_QWORD *)(v10 + 16))
    {
      result = sub_24013EF58(*(unsigned __int8 *)(v2 + 44));
      if ((v11 & 1) != 0)
      {
        v12 = *(_QWORD *)(*(_QWORD *)(v10 + 56) + 8 * result);
        if (*(_QWORD *)(v12 + 16))
        {
          result = sub_24013F0E0(v9);
          if ((v13 & 1) != 0)
          {
            *(_OWORD *)(v2 + 64) = *(_OWORD *)(*(_QWORD *)(v12 + 56) + 16 * result);
            v20 = 3;
            v18 = 0;
            v19 = 0xE000000000000000;
            sub_240154B38();
            sub_2401546D0();
            HIBYTE(v17) = *(_BYTE *)(v2 + 43);
            sub_240154C94();
            sub_2401546D0();
            HIBYTE(v17) = v9;
            sub_240154C94();
            v14 = v18;
            v15 = v19;
            v16 = sub_240154964();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v20, v14, v15, v16);
            return swift_bridgeObjectRelease();
          }
LABEL_11:
          __break(1u);
          return result;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
  return result;
}

uint64_t sub_240121C98(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  double v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  os_log_type_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  char v19;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240070B90(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, (uint64_t)v6, &qword_256FB4438);
  v7 = type metadata accessor for DKMotion3();
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  if ((_DWORD)result)
  {
    sub_240070BD4((uint64_t)v6, &qword_256FB4438);
    return 0;
  }
  else
  {
    v9 = *(_QWORD *)&v6[*(int *)(v7 + 20)];
    if (*(_QWORD *)(v9 + 16) < 3uLL)
    {
      __break(1u);
    }
    else
    {
      v10 = *(double *)(v9 + 48);
      sub_240070BD4((uint64_t)v6, &qword_256FB4438);
      v11 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera;
      v12 = v10 >= 0.65 && v10 <= 0.85;
      if (!v12
        && v10 < 0.65 != *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera))
      {
        *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera) = v10 < 0.65;
        v19 = 3;
        v17 = 0;
        v18 = 0xE000000000000000;
        sub_240154B38();
        swift_bridgeObjectRelease();
        v17 = 0xD000000000000023;
        v18 = 0x8000000240165570;
        sub_2401546D0();
        swift_bridgeObjectRelease();
        v13 = v17;
        v14 = v18;
        v15 = sub_240154964();
        _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v19, v13, v14, v15);
        swift_bridgeObjectRelease();
        v11 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera;
      }
      return *(unsigned __int8 *)(v2 + v11);
    }
  }
  return result;
}

void sub_240121E84(char a1, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  os_log_type_t v19;
  char v20;
  CGRect v21;

  if (*(_BYTE *)(v5 + 44))
    v10 = a4;
  else
    v10 = a5;
  if (*(_BYTE *)(v5 + 44))
    v11 = a5;
  else
    v11 = a4;
  v12 = a2 / a3;
  if (a2 / a3 >= v11 / v10)
  {
    v18 = v11 / v12;
    v15 = (v10 - v18) * 0.5 / v10;
    v16 = v18 / v10;
    v14 = 0.0;
    v17 = 1.0;
  }
  else
  {
    v13 = v12 * v10;
    v14 = (v11 - v13) * 0.5 / v11;
    v15 = 0.0;
    v16 = 1.0;
    v17 = v13 / v11;
  }
  v21.origin.x = v14;
  v21.origin.y = v15;
  v21.size.width = v17;
  v21.size.height = v16;
  if (!CGRectEqualToRect(v21, *(CGRect *)(v5 + 80)))
  {
    sub_24012208C(a1 & 1, v14, v15, v17, v16);
    if (v6)
      return;
    v20 = 3;
    sub_240154B38();
    sub_2401546D0();
    type metadata accessor for CGSize(0);
    sub_240154C94();
    sub_2401546D0();
    type metadata accessor for CGRect(0);
    sub_240154C94();
    v19 = sub_240154964();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v20, 0, 0xE000000000000000, v19);
    swift_bridgeObjectRelease();
  }
  if ((a1 & 1) != 0)
    *(_BYTE *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_aspectRatioOverridden) = 1;
}

void sub_24012208C(char a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  char v14;
  double v15;
  uint64_t v16;
  char v17;
  double v18;
  double MaxX;
  double MaxY;
  uint64_t v21;
  unint64_t v22;
  os_log_type_t v23;
  CGFloat v24;
  uint64_t i;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  double *v33;
  double v34;
  double MinY;
  double v36;
  double v37;
  char v38;
  uint64_t (*v39)();
  uint64_t (*v40)();
  _QWORD *v41;
  uint64_t v42;
  uint64_t (*v43)();
  double v44;
  uint64_t j;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  double *v53;
  double v54;
  double MinX;
  double v56;
  double v57;
  char v58;
  uint64_t (*v59)();
  uint64_t (*v60)();
  _QWORD *v61;
  uint64_t v62;
  uint64_t (*v63)();
  double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  unint64_t v80;
  os_log_type_t v81;
  double v82;
  double v83;
  _QWORD v84[4];
  uint64_t v85;
  unint64_t v86;
  CGFloat v87;
  unint64_t v88;
  CGFloat v89;
  CGFloat v90;
  double v91;
  CGRect v92;
  CGRect v93;
  CGRect v94;
  CGRect v95;
  CGRect v96;
  CGRect v97;
  CGRect v98;
  CGRect v99;
  CGRect v100;
  CGRect v101;
  CGRect v102;
  CGRect v103;
  CGRect v104;
  CGRect v105;
  CGRect v106;
  CGRect v107;
  CGRect v108;
  CGRect v109;
  CGRect v110;
  CGRect v111;

  v6 = v5;
  if (qword_256FB4000 != -1)
    swift_once();
  v12 = qword_256FC4F60;
  if (*(_QWORD *)(qword_256FC4F60 + 16))
  {
    v13 = sub_24013EF58(*(unsigned __int8 *)(v6 + 44));
    if ((v14 & 1) != 0)
    {
      if (*(_QWORD *)(v12 + 16))
      {
        v15 = *(double *)(*(_QWORD *)(v12 + 56) + 16 * v13);
        v16 = sub_24013EF58(*(unsigned __int8 *)(v6 + 44));
        if ((v17 & 1) != 0)
        {
          v18 = *(double *)(*(_QWORD *)(v12 + 56) + 16 * v16 + 8);
          v92.origin.x = a2;
          v92.origin.y = a3;
          v92.size.width = a4;
          v92.size.height = a5;
          if (CGRectGetMinX(v92) < 0.0)
            goto LABEL_15;
          v93.origin.x = a2;
          v93.origin.y = a3;
          v93.size.width = a4;
          v93.size.height = a5;
          if (CGRectGetMinX(v93) > 1.0)
            goto LABEL_15;
          v94.origin.x = a2;
          v94.origin.y = a3;
          v94.size.width = a4;
          v94.size.height = a5;
          MaxX = CGRectGetMaxX(v94);
          v95.origin.x = a2;
          v95.origin.y = a3;
          v95.size.width = a4;
          v95.size.height = a5;
          if (MaxX <= CGRectGetMinX(v95))
            goto LABEL_15;
          v96.origin.x = a2;
          v96.origin.y = a3;
          v96.size.width = a4;
          v96.size.height = a5;
          if (CGRectGetMaxX(v96) > 1.0)
            goto LABEL_15;
          v97.origin.x = a2;
          v97.origin.y = a3;
          v97.size.width = a4;
          v97.size.height = a5;
          if (CGRectGetMinY(v97) < 0.0)
            goto LABEL_15;
          v98.origin.x = a2;
          v98.origin.y = a3;
          v98.size.width = a4;
          v98.size.height = a5;
          if (CGRectGetMinY(v98) > 1.0)
            goto LABEL_15;
          v99.origin.x = a2;
          v99.origin.y = a3;
          v99.size.width = a4;
          v99.size.height = a5;
          MaxY = CGRectGetMaxY(v99);
          v100.origin.x = a2;
          v100.origin.y = a3;
          v100.size.width = a4;
          v100.size.height = a5;
          if (MaxY <= CGRectGetMinY(v100)
            || (v101.origin.x = a2,
                v101.origin.y = a3,
                v101.size.width = a4,
                v101.size.height = a5,
                CGRectGetMaxY(v101) > 1.0))
          {
LABEL_15:
            sub_240080040();
            swift_allocError();
            *(_QWORD *)v21 = 0xD000000000000029;
            v22 = 0x80000002401656A0;
LABEL_16:
            *(_QWORD *)(v21 + 8) = v22;
            *(_BYTE *)(v21 + 16) = 2;
            swift_willThrow();
            return;
          }
          v102.origin.x = a2;
          v102.origin.y = a3;
          v102.size.width = a4;
          v102.size.height = a5;
          if (CGRectGetWidth(v102) < v15
            || (v103.origin.x = a2,
                v103.origin.y = a3,
                v103.size.width = a4,
                v103.size.height = a5,
                CGRectGetHeight(v103) < v18))
          {
            LOBYTE(v85) = 3;
            sub_240154B38();
            swift_bridgeObjectRelease();
            v87 = -2.31584178e77;
            v88 = 0x8000000240165640;
            sub_2401548BC();
            sub_2401546D0();
            swift_bridgeObjectRelease();
            sub_2401546D0();
            sub_2401548BC();
            sub_2401546D0();
            swift_bridgeObjectRelease();
            v23 = sub_240154964();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v85, 0xD000000000000028, 0x8000000240165640, v23);
            swift_bridgeObjectRelease();
            v87 = 0.0;
            v88 = 0xE000000000000000;
            sub_240154B38();
            swift_bridgeObjectRelease();
            v87 = -2.31584178e77;
            v88 = 0x8000000240165670;
            sub_2401548BC();
            sub_2401546D0();
            swift_bridgeObjectRelease();
            sub_2401546D0();
            sub_2401548BC();
            sub_2401546D0();
            swift_bridgeObjectRelease();
            v24 = v87;
            v22 = v88;
            sub_240080040();
            swift_allocError();
            *(CGFloat *)v21 = v24;
            goto LABEL_16;
          }
          *(CGFloat *)(v6 + 80) = a2;
          *(CGFloat *)(v6 + 88) = a3;
          *(CGFloat *)(v6 + 96) = a4;
          *(CGFloat *)(v6 + 104) = a5;
          if (qword_256FB3FF8 != -1)
            swift_once();
          for (i = 0; i != 3; ++i)
          {
            v26 = qword_256FC4F58;
            if (*(_QWORD *)(qword_256FC4F58 + 16))
            {
              v27 = byte_251062028[i + 32];
              v28 = sub_24013EF58(*(unsigned __int8 *)(v6 + 44));
              if ((v29 & 1) != 0)
              {
                v30 = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v28);
                if (*(_QWORD *)(v30 + 16))
                {
                  v31 = sub_24013F0E0(v27);
                  if ((v32 & 1) != 0)
                  {
                    v33 = (double *)(*(_QWORD *)(v30 + 56) + 16 * v31);
                    v82 = *v33;
                    v91 = v33[1];
                    v104.origin.x = a2;
                    v104.origin.y = a3;
                    v104.size.width = a4;
                    v104.size.height = a5;
                    v34 = CGRectGetMaxY(v104);
                    v105.origin.x = a2;
                    v105.origin.y = a3;
                    v105.size.width = a4;
                    v105.size.height = a5;
                    MinY = CGRectGetMinY(v105);
                    v106.origin.x = a2;
                    v106.origin.y = a3;
                    v106.size.width = a4;
                    v106.size.height = a5;
                    v36 = CGRectGetMinY(v106);
                    v107.origin.x = a2;
                    v107.origin.y = a3;
                    v107.size.width = a4;
                    v107.size.height = a5;
                    v37 = CGRectGetMinY(v107);
                    v38 = *(_BYTE *)(v6 + 44);
                    v39 = sub_24009031C();
                    v40 = sub_2400F3040(&v85, v38);
                    if (*v41)
                    {
                      v43 = sub_2400F3090(v84, v27);
                      if ((*(_BYTE *)(v42 + 16) & 1) == 0)
                      {
                        v44 = v37 + v91 * (v34 - MinY);
                        *(double *)v42 = v36 + v82 * (v34 - MinY);
                        *(double *)(v42 + 8) = v44;
                      }
                      ((void (*)(_QWORD *, _QWORD))v43)(v84, 0);
                    }
                    ((void (*)(uint64_t *, _QWORD))v40)(&v85, 0);
                    ((void (*)(CGFloat *, _QWORD))v39)(&v87, 0);
                  }
                }
              }
            }
          }
          if (qword_256FB3FF0 != -1)
            swift_once();
          for (j = 0; j != 4; ++j)
          {
            v46 = qword_256FC4F50;
            if (*(_QWORD *)(qword_256FC4F50 + 16))
            {
              v47 = byte_251062050[j + 32];
              v48 = sub_24013EF58(*(unsigned __int8 *)(v6 + 44));
              if ((v49 & 1) != 0)
              {
                v50 = *(_QWORD *)(*(_QWORD *)(v46 + 56) + 8 * v48);
                if (*(_QWORD *)(v50 + 16))
                {
                  v51 = sub_24013F0E0(v47);
                  if ((v52 & 1) != 0)
                  {
                    v53 = (double *)(*(_QWORD *)(v50 + 56) + 16 * v51);
                    v83 = *v53;
                    v91 = v53[1];
                    v108.origin.x = a2;
                    v108.origin.y = a3;
                    v108.size.width = a4;
                    v108.size.height = a5;
                    v54 = CGRectGetMaxX(v108);
                    v109.origin.x = a2;
                    v109.origin.y = a3;
                    v109.size.width = a4;
                    v109.size.height = a5;
                    MinX = CGRectGetMinX(v109);
                    v110.origin.x = a2;
                    v110.origin.y = a3;
                    v110.size.width = a4;
                    v110.size.height = a5;
                    v56 = CGRectGetMinX(v110);
                    v111.origin.x = a2;
                    v111.origin.y = a3;
                    v111.size.width = a4;
                    v111.size.height = a5;
                    v57 = CGRectGetMinX(v111);
                    v58 = *(_BYTE *)(v6 + 44);
                    v59 = sub_2400902F4();
                    v60 = sub_2400F30DC(&v85, v58);
                    if (*v61)
                    {
                      v63 = sub_2400F3128(v84, v47);
                      if ((*(_BYTE *)(v62 + 16) & 1) == 0)
                      {
                        v64 = v57 + v91 * (v54 - MinX);
                        *(double *)v62 = v56 + v83 * (v54 - MinX);
                        *(double *)(v62 + 8) = v64;
                      }
                      ((void (*)(_QWORD *, _QWORD))v63)(v84, 0);
                    }
                    ((void (*)(uint64_t *, _QWORD))v60)(&v85, 0);
                    ((void (*)(CGFloat *, _QWORD))v59)(&v87, 0);
                  }
                }
              }
            }
          }
          v65 = *(_QWORD *)(v6 + 24);
          if (*(_QWORD *)(v65 + 16))
          {
            v66 = *(unsigned __int8 *)(v6 + 42);
            v67 = sub_24013EF58(*(unsigned __int8 *)(v6 + 44));
            if ((v68 & 1) != 0)
            {
              v69 = *(_QWORD *)(*(_QWORD *)(v65 + 56) + 8 * v67);
              if (*(_QWORD *)(v69 + 16))
              {
                v70 = sub_24013F0E0(v66);
                if ((v71 & 1) != 0)
                {
                  *(_OWORD *)(v6 + 48) = *(_OWORD *)(*(_QWORD *)(v69 + 56) + 16 * v70);
                  v72 = *(_QWORD *)(v6 + 32);
                  if (*(_QWORD *)(v72 + 16))
                  {
                    v73 = *(unsigned __int8 *)(v6 + 43);
                    v74 = sub_24013EF58(*(unsigned __int8 *)(v6 + 44));
                    if ((v75 & 1) != 0)
                    {
                      v76 = *(_QWORD *)(*(_QWORD *)(v72 + 56) + 8 * v74);
                      if (*(_QWORD *)(v76 + 16))
                      {
                        v77 = sub_24013F0E0(v73);
                        if ((v78 & 1) != 0)
                        {
                          *(_OWORD *)(v6 + 64) = *(_OWORD *)(*(_QWORD *)(v76 + 56) + 16 * v77);
                          LOBYTE(v84[0]) = 3;
                          v87 = 0.0;
                          v88 = 0xE000000000000000;
                          sub_240154B38();
                          v85 = *(_QWORD *)&v87;
                          v86 = v88;
                          sub_2401546D0();
                          v87 = a2;
                          v88 = *(_QWORD *)&a3;
                          v89 = a4;
                          v90 = a5;
                          type metadata accessor for CGRect(0);
                          sub_240154C94();
                          v79 = v85;
                          v80 = v86;
                          v81 = sub_240154964();
                          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v84, v79, v80, v81);
                          swift_bridgeObjectRelease();
                          if ((a1 & 1) != 0)
                            *(_BYTE *)(v6
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_aspectRatioOverridden) = 1;
                          return;
                        }
LABEL_64:
                        __break(1u);
                        return;
                      }
LABEL_63:
                      __break(1u);
                      goto LABEL_64;
                    }
LABEL_62:
                    __break(1u);
                    goto LABEL_63;
                  }
LABEL_61:
                  __break(1u);
                  goto LABEL_62;
                }
LABEL_60:
                __break(1u);
                goto LABEL_61;
              }
LABEL_59:
              __break(1u);
              goto LABEL_60;
            }
          }
          else
          {
            __break(1u);
          }
          __break(1u);
          goto LABEL_59;
        }
      }
    }
  }
}

double sub_24012290C(unsigned __int8 *a1, double a2)
{
  double *v2;
  int v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v11;
  CGRect v12;
  CGRect v13;
  CGRect v14;
  CGRect v15;

  v4 = *a1;
  v5 = v2[6];
  v6 = v2[7] - v5;
  v7 = v2[8];
  v8 = v2[9] - v7;
  v12.origin.x = v5;
  v12.origin.y = v7;
  v12.size.width = v6;
  v12.size.height = v8;
  v9 = CGRectGetMidX(v12) + -0.5;
  if (v4 == 1)
    v9 = -v9;
  v11 = v9;
  v13.origin.x = v5;
  v13.origin.y = v7;
  v13.size.width = v6;
  v13.size.height = v8;
  CGRectGetMidY(v13);
  v14.origin.x = v5;
  v14.origin.y = v7;
  v14.size.width = v6;
  v14.size.height = v8;
  CGRectGetWidth(v14);
  v15.origin.x = v5;
  v15.origin.y = v7;
  v15.size.width = v6;
  v15.size.height = v8;
  CGRectGetHeight(v15);
  return v11 * a2;
}

uint64_t DKFramingEngine.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastHorizontalReframeDate;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastVerticalReframeDate, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastSubjectChangeDate, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_currentSubjectUUID;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t DKFramingEngine.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastHorizontalReframeDate;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastVerticalReframeDate, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastSubjectChangeDate, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_currentSubjectUUID;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocClassInstance();
}

uint64_t sub_240122B70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  v2 = v1;
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 24) = sub_2401072A8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v2 + 32) = sub_2401073B4(v4);
  *(_DWORD *)(v2 + 40) = 0x1000000;
  *(_BYTE *)(v2 + 44) = 0;
  *(_QWORD *)(v2 + 80) = 0;
  *(_QWORD *)(v2 + 88) = 0;
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)(v2 + 96) = _Q0;
  __asm { FMOV            V0.2S, #1.0 }
  *(_QWORD *)(v2 + 112) = _Q0;
  sub_240154274();
  sub_240154274();
  sub_240154274();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_lastCloseToCamera) = 0;
  sub_240154340();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKFramingEngine_aspectRatioOverridden) = 0;
  *(_QWORD *)(v2 + 16) = a1;
  v10 = qword_256FB3FF0;
  swift_retain();
  if (v10 != -1)
    swift_once();
  *(_QWORD *)(v2 + 24) = qword_256FC4F50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_256FB3FF8 != -1)
    swift_once();
  *(_QWORD *)(v2 + 32) = qword_256FC4F58;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v2 + 24);
  if (!*(_QWORD *)(v12 + 16))
  {
    __break(1u);
    goto LABEL_15;
  }
  v13 = *(unsigned __int8 *)(v2 + 42);
  result = sub_24013EF58(*(unsigned __int8 *)(v2 + 44));
  if ((v14 & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * result);
  if (!*(_QWORD *)(v15 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  result = sub_24013F0E0(v13);
  if ((v16 & 1) == 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(_OWORD *)(v2 + 48) = *(_OWORD *)(*(_QWORD *)(v15 + 56) + 16 * result);
  v17 = *(_QWORD *)(v2 + 32);
  if (!*(_QWORD *)(v17 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v18 = *(unsigned __int8 *)(v2 + 43);
  result = sub_24013EF58(*(unsigned __int8 *)(v2 + 44));
  if ((v19 & 1) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * result);
  if (!*(_QWORD *)(v20 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  result = sub_24013F0E0(v18);
  if ((v21 & 1) != 0)
  {
    *(_OWORD *)(v2 + 64) = *(_OWORD *)(*(_QWORD *)(v20 + 56) + 16 * result);
    return v2;
  }
LABEL_21:
  __break(1u);
  return result;
}

unint64_t sub_240122D70()
{
  unint64_t result;

  result = qword_256FBF990;
  if (!qword_256FBF990)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F764, &type metadata for DKFramingEngine.Orientation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF990);
  }
  return result;
}

unint64_t sub_240122DB4()
{
  unint64_t result;

  result = qword_256FBF998;
  if (!qword_256FBF998)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F714, &type metadata for DKFramingEngine.Orientation.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF998);
  }
  return result;
}

unint64_t sub_240122DF8()
{
  unint64_t result;

  result = qword_256FBF9A0;
  if (!qword_256FBF9A0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F6C4, &type metadata for DKFramingEngine.Orientation.LandscapeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF9A0);
  }
  return result;
}

unint64_t sub_240122E3C()
{
  unint64_t result;

  result = qword_256FBF9D8;
  if (!qword_256FBF9D8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F674, &type metadata for DKFramingEngine.Mode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF9D8);
  }
  return result;
}

unint64_t sub_240122E80()
{
  unint64_t result;

  result = qword_256FBF9E0;
  if (!qword_256FBF9E0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F624, &type metadata for DKFramingEngine.Mode.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF9E0);
  }
  return result;
}

unint64_t sub_240122EC4()
{
  unint64_t result;

  result = qword_256FBF9E8;
  if (!qword_256FBF9E8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F5D4, &type metadata for DKFramingEngine.Mode.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBF9E8);
  }
  return result;
}

unint64_t sub_240122F08()
{
  unint64_t result;

  result = qword_256FBFA30;
  if (!qword_256FBFA30)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F584, &type metadata for DKFramingEngine.HorizontalFraming.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFA30);
  }
  return result;
}

unint64_t sub_240122F4C()
{
  unint64_t result;

  result = qword_256FBFA38;
  if (!qword_256FBFA38)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F534, &type metadata for DKFramingEngine.HorizontalFraming.CenterTightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFA38);
  }
  return result;
}

unint64_t sub_240122F90()
{
  unint64_t result;

  result = qword_256FBFA40;
  if (!qword_256FBFA40)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F4E4, &type metadata for DKFramingEngine.HorizontalFraming.RightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFA40);
  }
  return result;
}

unint64_t sub_240122FD4()
{
  unint64_t result;

  result = qword_256FBFA48;
  if (!qword_256FBFA48)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F494, &type metadata for DKFramingEngine.HorizontalFraming.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFA48);
  }
  return result;
}

unint64_t sub_240123018()
{
  unint64_t result;

  result = qword_256FBFA50;
  if (!qword_256FBFA50)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F444, &type metadata for DKFramingEngine.HorizontalFraming.CenterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFA50);
  }
  return result;
}

unint64_t sub_24012305C()
{
  unint64_t result;

  result = qword_256FBFAA0;
  if (!qword_256FBFAA0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F3F4, &type metadata for DKFramingEngine.VerticalFraming.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFAA0);
  }
  return result;
}

unint64_t sub_2401230A0()
{
  unint64_t result;

  result = qword_256FBFAA8;
  if (!qword_256FBFAA8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F3A4, &type metadata for DKFramingEngine.VerticalFraming.BottomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFAA8);
  }
  return result;
}

unint64_t sub_2401230E4()
{
  unint64_t result;

  result = qword_256FBFAB0;
  if (!qword_256FBFAB0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F354, &type metadata for DKFramingEngine.VerticalFraming.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFAB0);
  }
  return result;
}

unint64_t sub_240123128()
{
  unint64_t result;

  result = qword_256FBFAB8;
  if (!qword_256FBFAB8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F304, &type metadata for DKFramingEngine.VerticalFraming.CenterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFAB8);
  }
  return result;
}

unint64_t sub_240123170()
{
  unint64_t result;

  result = qword_256FBFAE0;
  if (!qword_256FBFAE0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.Orientation, &type metadata for DKFramingEngine.Orientation);
    atomic_store(result, (unint64_t *)&qword_256FBFAE0);
  }
  return result;
}

unint64_t sub_2401231B8()
{
  unint64_t result;

  result = qword_256FBFAE8;
  if (!qword_256FBFAE8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.Mode, &type metadata for DKFramingEngine.Mode);
    atomic_store(result, (unint64_t *)&qword_256FBFAE8);
  }
  return result;
}

unint64_t sub_240123200()
{
  unint64_t result;

  result = qword_256FBFAF0;
  if (!qword_256FBFAF0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.HorizontalFraming, &type metadata for DKFramingEngine.HorizontalFraming);
    atomic_store(result, (unint64_t *)&qword_256FBFAF0);
  }
  return result;
}

unint64_t sub_240123248()
{
  unint64_t result;

  result = qword_256FBFAF8;
  if (!qword_256FBFAF8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.VerticalFraming, &type metadata for DKFramingEngine.VerticalFraming);
    atomic_store(result, (unint64_t *)&qword_256FBFAF8);
  }
  return result;
}

uint64_t sub_24012328C()
{
  return type metadata accessor for DKFramingEngine();
}

uint64_t type metadata accessor for DKFramingEngine()
{
  uint64_t result;

  result = qword_256FBFB28;
  if (!qword_256FBFB28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2401232D0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = sub_24015434C();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for DKFramingEngine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKFramingEngine.__allocating_init(config:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 664))();
}

uint64_t type metadata accessor for DKFramingEngine.Config()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKFramingEngine.Config()
{
  return swift_lookUpClassMethod();
}

ValueMetadata *type metadata accessor for DKFramingEngine.Orientation()
{
  return &type metadata for DKFramingEngine.Orientation;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Mode()
{
  return &type metadata for DKFramingEngine.Mode;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming()
{
  return &type metadata for DKFramingEngine.HorizontalFraming;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming()
{
  return &type metadata for DKFramingEngine.VerticalFraming;
}

uint64_t _s23IntelligentTrackingCore15DKFramingEngineC15VerticalFramingOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_240123498 + 4 * byte_24015E731[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2401234CC + 4 * byte_24015E72C[v4]))();
}

uint64_t sub_2401234CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2401234D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2401234DCLL);
  return result;
}

uint64_t sub_2401234E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2401234F0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2401234F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2401234FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming.CodingKeys()
{
  return &type metadata for DKFramingEngine.VerticalFraming.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming.CenterCodingKeys()
{
  return &type metadata for DKFramingEngine.VerticalFraming.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming.TopCodingKeys()
{
  return &type metadata for DKFramingEngine.VerticalFraming.TopCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.VerticalFraming.BottomCodingKeys()
{
  return &type metadata for DKFramingEngine.VerticalFraming.BottomCodingKeys;
}

uint64_t _s23IntelligentTrackingCore15DKFramingEngineC17HorizontalFramingOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_240123594 + 4 * byte_24015E73B[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2401235C8 + 4 * byte_24015E736[v4]))();
}

uint64_t sub_2401235C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2401235D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2401235D8);
  return result;
}

uint64_t sub_2401235E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2401235ECLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2401235F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2401235F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.CodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.CenterCodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.CenterCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.LeftCodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.RightCodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.RightCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.HorizontalFraming.CenterTightCodingKeys()
{
  return &type metadata for DKFramingEngine.HorizontalFraming.CenterTightCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Mode.CodingKeys()
{
  return &type metadata for DKFramingEngine.Mode.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Mode.AutomaticCodingKeys()
{
  return &type metadata for DKFramingEngine.Mode.AutomaticCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Mode.ManualCodingKeys()
{
  return &type metadata for DKFramingEngine.Mode.ManualCodingKeys;
}

uint64_t _s23IntelligentTrackingCore15DKFramingEngineC11OrientationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2401236D0 + 4 * byte_24015E745[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_240123704 + 4 * byte_24015E740[v4]))();
}

uint64_t sub_240123704(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24012370C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240123714);
  return result;
}

uint64_t sub_240123720(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240123728);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24012372C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240123734(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Orientation.CodingKeys()
{
  return &type metadata for DKFramingEngine.Orientation.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Orientation.LandscapeCodingKeys()
{
  return &type metadata for DKFramingEngine.Orientation.LandscapeCodingKeys;
}

ValueMetadata *type metadata accessor for DKFramingEngine.Orientation.PortraitCodingKeys()
{
  return &type metadata for DKFramingEngine.Orientation.PortraitCodingKeys;
}

unint64_t sub_240123774()
{
  unint64_t result;

  result = qword_256FBFF08;
  if (!qword_256FBFF08)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EDE4, &type metadata for DKFramingEngine.Orientation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF08);
  }
  return result;
}

unint64_t sub_2401237BC()
{
  unint64_t result;

  result = qword_256FBFF10;
  if (!qword_256FBFF10)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EF3C, &type metadata for DKFramingEngine.Mode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF10);
  }
  return result;
}

unint64_t sub_240123804()
{
  unint64_t result;

  result = qword_256FBFF18;
  if (!qword_256FBFF18)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F134, &type metadata for DKFramingEngine.HorizontalFraming.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF18);
  }
  return result;
}

unint64_t sub_24012384C()
{
  unint64_t result;

  result = qword_256FBFF20;
  if (!qword_256FBFF20)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F2DC, &type metadata for DKFramingEngine.VerticalFraming.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF20);
  }
  return result;
}

unint64_t sub_240123894()
{
  unint64_t result;

  result = qword_256FBFF28;
  if (!qword_256FBFF28)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F1FC, &type metadata for DKFramingEngine.VerticalFraming.CenterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF28);
  }
  return result;
}

unint64_t sub_2401238DC()
{
  unint64_t result;

  result = qword_256FBFF30;
  if (!qword_256FBFF30)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F224, &type metadata for DKFramingEngine.VerticalFraming.CenterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF30);
  }
  return result;
}

unint64_t sub_240123924()
{
  unint64_t result;

  result = qword_256FBFF38;
  if (!qword_256FBFF38)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F1AC, &type metadata for DKFramingEngine.VerticalFraming.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF38);
  }
  return result;
}

unint64_t sub_24012396C()
{
  unint64_t result;

  result = qword_256FBFF40;
  if (!qword_256FBFF40)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F1D4, &type metadata for DKFramingEngine.VerticalFraming.TopCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF40);
  }
  return result;
}

unint64_t sub_2401239B4()
{
  unint64_t result;

  result = qword_256FBFF48;
  if (!qword_256FBFF48)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F15C, &type metadata for DKFramingEngine.VerticalFraming.BottomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF48);
  }
  return result;
}

unint64_t sub_2401239FC()
{
  unint64_t result;

  result = qword_256FBFF50;
  if (!qword_256FBFF50)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F184, &type metadata for DKFramingEngine.VerticalFraming.BottomCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF50);
  }
  return result;
}

unint64_t sub_240123A44()
{
  unint64_t result;

  result = qword_256FBFF58;
  if (!qword_256FBFF58)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F24C, &type metadata for DKFramingEngine.VerticalFraming.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF58);
  }
  return result;
}

unint64_t sub_240123A8C()
{
  unint64_t result;

  result = qword_256FBFF60;
  if (!qword_256FBFF60)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F274, &type metadata for DKFramingEngine.VerticalFraming.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF60);
  }
  return result;
}

unint64_t sub_240123AD4()
{
  unint64_t result;

  result = qword_256FBFF68;
  if (!qword_256FBFF68)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F054, &type metadata for DKFramingEngine.HorizontalFraming.CenterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF68);
  }
  return result;
}

unint64_t sub_240123B1C()
{
  unint64_t result;

  result = qword_256FBFF70;
  if (!qword_256FBFF70)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F07C, &type metadata for DKFramingEngine.HorizontalFraming.CenterCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF70);
  }
  return result;
}

unint64_t sub_240123B64()
{
  unint64_t result;

  result = qword_256FBFF78;
  if (!qword_256FBFF78)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F004, &type metadata for DKFramingEngine.HorizontalFraming.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF78);
  }
  return result;
}

unint64_t sub_240123BAC()
{
  unint64_t result;

  result = qword_256FBFF80;
  if (!qword_256FBFF80)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F02C, &type metadata for DKFramingEngine.HorizontalFraming.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF80);
  }
  return result;
}

unint64_t sub_240123BF4()
{
  unint64_t result;

  result = qword_256FBFF88;
  if (!qword_256FBFF88)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EFB4, &type metadata for DKFramingEngine.HorizontalFraming.RightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF88);
  }
  return result;
}

unint64_t sub_240123C3C()
{
  unint64_t result;

  result = qword_256FBFF90;
  if (!qword_256FBFF90)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EFDC, &type metadata for DKFramingEngine.HorizontalFraming.RightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF90);
  }
  return result;
}

unint64_t sub_240123C84()
{
  unint64_t result;

  result = qword_256FBFF98;
  if (!qword_256FBFF98)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EF64, &type metadata for DKFramingEngine.HorizontalFraming.CenterTightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFF98);
  }
  return result;
}

unint64_t sub_240123CCC()
{
  unint64_t result;

  result = qword_256FBFFA0;
  if (!qword_256FBFFA0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EF8C, &type metadata for DKFramingEngine.HorizontalFraming.CenterTightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFA0);
  }
  return result;
}

unint64_t sub_240123D14()
{
  unint64_t result;

  result = qword_256FBFFA8;
  if (!qword_256FBFFA8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F0A4, &type metadata for DKFramingEngine.HorizontalFraming.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFA8);
  }
  return result;
}

unint64_t sub_240123D5C()
{
  unint64_t result;

  result = qword_256FBFFB0;
  if (!qword_256FBFFB0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015F0CC, &type metadata for DKFramingEngine.HorizontalFraming.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFB0);
  }
  return result;
}

unint64_t sub_240123DA4()
{
  unint64_t result;

  result = qword_256FBFFB8;
  if (!qword_256FBFFB8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EE5C, &type metadata for DKFramingEngine.Mode.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFB8);
  }
  return result;
}

unint64_t sub_240123DEC()
{
  unint64_t result;

  result = qword_256FBFFC0;
  if (!qword_256FBFFC0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EE84, &type metadata for DKFramingEngine.Mode.AutomaticCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFC0);
  }
  return result;
}

unint64_t sub_240123E34()
{
  unint64_t result;

  result = qword_256FBFFC8;
  if (!qword_256FBFFC8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EE0C, &type metadata for DKFramingEngine.Mode.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFC8);
  }
  return result;
}

unint64_t sub_240123E7C()
{
  unint64_t result;

  result = qword_256FBFFD0;
  if (!qword_256FBFFD0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EE34, &type metadata for DKFramingEngine.Mode.ManualCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFD0);
  }
  return result;
}

unint64_t sub_240123EC4()
{
  unint64_t result;

  result = qword_256FBFFD8;
  if (!qword_256FBFFD8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EEAC, &type metadata for DKFramingEngine.Mode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFD8);
  }
  return result;
}

unint64_t sub_240123F0C()
{
  unint64_t result;

  result = qword_256FBFFE0;
  if (!qword_256FBFFE0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015EED4, &type metadata for DKFramingEngine.Mode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFE0);
  }
  return result;
}

unint64_t sub_240123F54()
{
  unint64_t result;

  result = qword_256FBFFE8;
  if (!qword_256FBFFE8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ED04, &type metadata for DKFramingEngine.Orientation.LandscapeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFE8);
  }
  return result;
}

unint64_t sub_240123F9C()
{
  unint64_t result;

  result = qword_256FBFFF0;
  if (!qword_256FBFFF0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ED2C, &type metadata for DKFramingEngine.Orientation.LandscapeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFF0);
  }
  return result;
}

unint64_t sub_240123FE4()
{
  unint64_t result;

  result = qword_256FBFFF8;
  if (!qword_256FBFFF8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ECB4, &type metadata for DKFramingEngine.Orientation.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBFFF8);
  }
  return result;
}

unint64_t sub_24012402C()
{
  unint64_t result;

  result = qword_256FC0000;
  if (!qword_256FC0000)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ECDC, &type metadata for DKFramingEngine.Orientation.PortraitCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC0000);
  }
  return result;
}

unint64_t sub_240124074()
{
  unint64_t result;

  result = qword_256FC0008;
  if (!qword_256FC0008)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ED54, &type metadata for DKFramingEngine.Orientation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC0008);
  }
  return result;
}

unint64_t sub_2401240BC()
{
  unint64_t result;

  result = qword_256FC0010;
  if (!qword_256FC0010)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ED7C, &type metadata for DKFramingEngine.Orientation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC0010);
  }
  return result;
}

uint64_t sub_240124100(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x70616373646E616CLL && a2 == 0xE900000000000065;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469617274726F70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2401241FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6974616D6F747561 && a2 == 0xE900000000000063;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C61756E616DLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2401242F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1952867692 && a2 == 0xE400000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69547265746E6563 && a2 == 0xEB00000000746867)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2401244A0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7265746E6563 && a2 == 0xE600000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7368564 && a2 == 0xE300000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6F74746F62 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_2401245D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FB5A68;
  if (!qword_256FB5A68)
  {
    v1 = sub_24015434C();
    result = MEMORY[0x24267E0BC](MEMORY[0x24BDCEA98], v1);
    atomic_store(result, (unint64_t *)&qword_256FB5A68);
  }
  return result;
}

uint64_t DKIMUManager.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  sub_2401544B4();
  *(_QWORD *)(v0 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1400]), sel_init);
  return v0;
}

uint64_t sub_2401246CC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_2401246D8(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 24) = result;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t DKIMUManager.init()()
{
  uint64_t v0;
  id v1;
  void *v2;

  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 1;
  sub_2401544B4();
  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1400]), sel_init);
  v2 = *(void **)(v0 + 16);
  *(_QWORD *)(v0 + 16) = v1;

  return v0;
}

uint64_t DKIMUManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  objc_msgSend(*(id *)(v0 + 16), sel_stopDeviceMotionUpdates);

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKIMUManager_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKIMUManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  objc_msgSend(*(id *)(v0 + 16), sel_stopDeviceMotionUpdates);

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKIMUManager_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_240124838@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  long double v16;
  id v17;
  float64x2_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  float64x2_t v22;
  float64x2_t v23;
  int8x16_t v24;
  float64x2_t v25;
  float64x2_t v26;
  float64x2_t v27;
  float64x2_t v28;
  float64x2_t v29;
  float64x2_t v30;
  long double v31;
  long double v32;
  long double v33;
  double v34;
  uint64_t v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  long double v44;
  uint64_t v45;
  double i;
  int *v47;
  int *v48;
  uint64_t v49;
  void *v50;
  NSObject *v51;
  os_log_type_t v52;
  uint8_t *v53;
  uint64_t v54;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  float64x2_t v59;
  uint64_t v60;

  v3 = sub_2401544C0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void **)(v1 + 16);
  if (!v7)
  {
    sub_2401542F8();
    v47 = (int *)type metadata accessor for DKMotion3();
    v48 = v47;
    *(_QWORD *)(a1 + v47[5]) = &unk_251061CF0;
    *(_QWORD *)(a1 + v47[6]) = &unk_251061D28;
    v49 = v47[7];
    v50 = &unk_251061D60;
LABEL_17:
    *(_QWORD *)(a1 + v49) = v50;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v47 - 1) + 56))(a1, 0, 1, v48);
  }
  v8 = v7;
  if ((objc_msgSend(v8, sel_isDeviceMotionActive) & 1) == 0
    && objc_msgSend(v8, sel_isDeviceMotionAvailable))
  {
    objc_msgSend(v8, sel_setDeviceMotionUpdateInterval_, 0.0166666667);
    objc_msgSend(v8, sel_setShowsDeviceMovementDisplay_, 1);
    objc_msgSend(v8, sel_startDeviceMotionUpdatesUsingReferenceFrame_, 1);
  }
  v9 = objc_msgSend(v8, sel_deviceMotion);
  if (v9)
  {
    v10 = v9;
    objc_msgSend(v9, sel_gravity);
    v12 = v11;
    v14 = v13;
    v16 = v15;
    v17 = objc_msgSend(v10, sel_attitude);
    objc_msgSend(v17, sel_quaternion);
    v58 = v19;
    v59 = v18;
    v56 = v21;
    v57 = v20;

    *(_QWORD *)&v22.f64[0] = v57;
    *(_QWORD *)&v22.f64[1] = v56;
    v23.f64[0] = v59.f64[0];
    *(_QWORD *)&v23.f64[1] = v58;
    v24 = (int8x16_t)vnegq_f64(v23);
    v25 = vmulq_f64(v22, (float64x2_t)xmmword_24015F7C0);
    v26 = (float64x2_t)vextq_s8((int8x16_t)v25, (int8x16_t)vnegq_f64(v25), 8uLL);
    v27 = vmlaq_f64(vmulq_f64(v23, (float64x2_t)0), (float64x2_t)0, (float64x2_t)vextq_s8(v24, (int8x16_t)v23, 8uLL));
    v28 = (float64x2_t)vextq_s8((int8x16_t)v23, v24, 8uLL);
    v29 = vaddq_f64(v26, v27);
    v30 = vaddq_f64(v28, vmlaq_f64(vmulq_f64(v25, (float64x2_t)0), (float64x2_t)0, v26));
    v59 = vaddq_f64(vmlaq_n_f64(vmulq_n_f64(v30, *(double *)&v56), (float64x2_t)vextq_s8((int8x16_t)vnegq_f64(v30), (int8x16_t)v30, 8uLL), *(double *)&v57), vmlaq_n_f64(vmulq_n_f64(v29, *(double *)&v58), (float64x2_t)vextq_s8((int8x16_t)v29, (int8x16_t)vnegq_f64(v29), 8uLL), v59.f64[0]));
    v31 = sqrt(v12 * v12 + v14 * v14);
    v32 = atan2(-v12, -v14);
    v33 = atan2(v16, v31);
    v34 = atan2(v59.f64[1], v59.f64[0]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_240155A50;
    *(double *)(v35 + 32) = v34;
    *(long double *)(v35 + 40) = v33;
    *(long double *)(v35 + 48) = v32;
    objc_msgSend(v10, sel_rotationRate);
    v37 = v36;
    v39 = v38;
    v41 = v40;
    objc_msgSend(v10, sel_gravity);
    sub_240124CC0(&v60, v37, v39, v41, v42, v43, v44);
    v45 = v60;
    if ((*(_BYTE *)(v1 + 32) & 1) != 0)
    {
      *(double *)(v1 + 24) = v34;
      *(_BYTE *)(v1 + 32) = 0;
      i = 0.0;
    }
    else
    {
      for (i = v34 - *(double *)(v1 + 24); i > 3.14159265; i = i + -6.28318531)
        ;
      for (; i < -3.14159265; i = i + 6.28318531)
        ;
    }
    *(double *)(v35 + 32) = i;
    sub_2401542F8();

    v47 = (int *)type metadata accessor for DKMotion3();
    v48 = v47;
    *(_QWORD *)(a1 + v47[5]) = v35;
    *(_QWORD *)(a1 + v47[6]) = v45;
    v49 = v47[7];
    v50 = &unk_251061CB8;
    goto LABEL_17;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKIMUManager_logger, v3);
  v51 = sub_2401544A8();
  v52 = sub_24015494C();
  if (os_log_type_enabled(v51, v52))
  {
    v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v53 = 0;
    _os_log_impl(&dword_24006B000, v51, v52, "CMDeviceMotion not available", v53, 2u);
    MEMORY[0x24267E17C](v53, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v54 = type metadata accessor for DKMotion3();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(a1, 1, 1, v54);
}

double sub_240124CC0@<D0>(uint64_t *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>, double a6@<D4>, long double a7@<D5>)
{
  long double v9;
  double v10;
  long double v11;
  float64x2_t v12;
  __double2 v13;
  __double2 v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;
  float64x2_t v18;
  float64x2_t v19;
  float64x2_t v20;
  int8x16_t v21;
  float64x2_t v22;
  float64x2_t v23;
  float64x2_t v24;
  float64x2_t v25;
  uint64_t v26;
  double result;
  int8x16_t v28;
  float64x2_t v29;
  double v30;
  float64x2_t v33;
  float64x2_t v35;

  v9 = sqrt(a5 * a5 + a6 * a6);
  v10 = atan2(-a5, -a6);
  v11 = atan2(a7, v9);
  v13 = __sincos_stret(v11 * 0.5);
  v12.f64[0] = v13.__sinval;
  *(_QWORD *)&v30 = *(_OWORD *)&vmulq_f64(v12, (float64x2_t)0);
  v29 = vmulq_n_f64((float64x2_t)xmmword_24015F7D0, v13.__sinval);
  v14 = __sincos_stret(v10 * 0.5);
  v15 = vmulq_n_f64((float64x2_t)0, v14.__sinval);
  v16 = vnegq_f64(v15);
  v17 = (float64x2_t)vextq_s8((int8x16_t)v14, (int8x16_t)vnegq_f64((float64x2_t)v14), 8uLL);
  v18 = vmlaq_n_f64(vmulq_laneq_f64((float64x2_t)v14, v29, 1), v17, v29.f64[0]);
  v19 = vaddq_f64(vmlaq_n_f64(vmulq_n_f64((float64x2_t)v14, v13.__cosval), v17, v30), vmlaq_n_f64(vmulq_laneq_f64(v16, v29, 1), (float64x2_t)vextq_s8((int8x16_t)v15, (int8x16_t)v16, 8uLL), v29.f64[0]));
  v20 = vaddq_f64(vmlaq_n_f64(vmulq_n_f64(v15, v13.__cosval), (float64x2_t)vextq_s8((int8x16_t)v16, (int8x16_t)v15, 8uLL), v30), v18);
  v21 = (int8x16_t)vnegq_f64(v20);
  v22 = vmulq_f64(v19, (float64x2_t)xmmword_24015F7C0);
  v23 = (float64x2_t)vextq_s8((int8x16_t)v22, (int8x16_t)vnegq_f64(v22), 8uLL);
  v24 = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v20, a3), (float64x2_t)vextq_s8(v21, (int8x16_t)v20, 8uLL), a2), v23, a4);
  v25 = vmlaq_n_f64(vmlaq_n_f64(vmulq_n_f64(v22, a3), v23, a2), (float64x2_t)vextq_s8((int8x16_t)v20, v21, 8uLL), a4);
  v35 = vmlaq_n_f64(vmulq_laneq_f64(v24, v20, 1), (float64x2_t)vextq_s8((int8x16_t)v24, (int8x16_t)vnegq_f64(v24), 8uLL), v20.f64[0]);
  v33 = vmlaq_n_f64(vmulq_laneq_f64(v25, v19, 1), (float64x2_t)vextq_s8((int8x16_t)vnegq_f64(v25), (int8x16_t)v25, 8uLL), v19.f64[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
  v26 = swift_allocObject();
  *(_QWORD *)&result = 3;
  v28 = (int8x16_t)vaddq_f64(v33, v35);
  *(_OWORD *)(v26 + 16) = xmmword_240155A50;
  *(int8x16_t *)(v26 + 32) = vextq_s8(v28, v28, 8uLL);
  *(_QWORD *)(v26 + 48) = 0;
  *a1 = v26;
  return result;
}

double sub_240124E58@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>, double a3@<D0>, double a4@<D1>, long double a5@<D2>)
{
  long double v9;
  long double v10;
  long double v11;
  uint64_t v12;
  double result;
  long double v14[4];
  char v15;

  sub_240124F14(a1, (uint64_t)v14);
  v9 = 0.0;
  if ((v15 & 1) == 0)
    v9 = atan2(v14[1], v14[0]);
  v10 = atan2(a5, sqrt(a3 * a3 + a4 * a4));
  v11 = atan2(-a3, -a4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
  v12 = swift_allocObject();
  *(_QWORD *)&result = 3;
  *(_OWORD *)(v12 + 16) = xmmword_240155A50;
  *(long double *)(v12 + 32) = v9;
  *(long double *)(v12 + 40) = v10;
  *(long double *)(v12 + 48) = v11;
  *a2 = v12;
  return result;
}

uint64_t sub_240124F14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC0040);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_240124F5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*(_QWORD *)a1 + 16);
  *a2 = v2;
  return v2;
}

void sub_240124F6C(void **a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*(_QWORD *)a2 + 16);
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  v3 = v2;

}

uint64_t sub_240124FA0@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)result + 32);
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)result + 24);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_240124FB8(uint64_t result, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *a2;
  *(_QWORD *)(v3 + 24) = *(_QWORD *)result;
  *(_BYTE *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_240124FD0()
{
  return type metadata accessor for DKIMUManager();
}

uint64_t type metadata accessor for DKIMUManager()
{
  uint64_t result;

  result = qword_256FC0070;
  if (!qword_256FC0070)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240125014()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2401544C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKIMUManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKIMUManager.imu.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKIMUManager.imu.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKIMUManager.imu.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKIMUManager.yawOffset.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKIMUManager.yawOffset.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 136))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIMUManager.yawOffset.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKIMUManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DKIMUManager.getIMUMotion()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKIMUManager.calculateVelocityWorldFrame(velocityLocal:gravity:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKIMUManager.calculateOrientationFromGravity(gravity:normal:)(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  char v7;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 200);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6);
}

uint64_t destroy for DKSubjectSelectionRequest(uint64_t a1)
{
  return sub_2400864A0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s23IntelligentTrackingCore25DKSubjectSelectionRequestOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240086478(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DKSubjectSelectionRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240086478(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_2400864A0(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DKSubjectSelectionRequest(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_2400864A0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKSubjectSelectionRequest(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 253);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DKSubjectSelectionRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2401252F4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2401252FC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for DKSubjectSelectionRequest()
{
  return &type metadata for DKSubjectSelectionRequest;
}

uint64_t sub_240125314(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_240125378())()
{
  return nullsub_1;
}

_QWORD *sub_240125390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v11 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_issModel;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_issModel) = 0;
  v12 = (char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_primaryTrackerId;
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = (char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest;
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = -1;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_overrideSelectionUUIDs) = 0;
  *((_BYTE *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_useFramingFeedback) = 1;
  v14 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_legacySubjectSelection;
  type metadata accessor for LegacySubjectSelection();
  swift_allocObject();
  swift_retain();
  *(_QWORD *)((char *)v5 + v14) = sub_2400A1674();
  if (!*(_BYTE *)(a3 + 89))
  {
    type metadata accessor for DKISSModel();
    swift_allocObject();
    *(_QWORD *)((char *)v5 + v11) = DKISSModel.init()();
    swift_release();
  }
  type metadata accessor for DKSubjectClustering();
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_clustering) = swift_allocObject();
  swift_release();
  sub_2401544B4();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_240125560()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[2] = v0;
  v2 = sub_24015434C();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v3 = sub_240154310();
  v1[6] = v3;
  v1[7] = *(_QWORD *)(v3 - 8);
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2401255E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  v35 = v3;
  v4 = *(_QWORD *)(v0 + 16);
  sub_240126530();
  v5 = *(_QWORD *)(v4 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)(v4 + 40)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v3);
  v7 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers;
  v8 = *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  v9 = (_QWORD *)swift_task_alloc();
  v9[2] = v2;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v10 = sub_2400900EC((uint64_t (*)(uint64_t *))sub_240103A94, v9, v8);
  swift_task_dealloc();
  *(_QWORD *)(v6 + v7) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(v6 + v7);
  v12 = swift_task_alloc();
  *(_QWORD *)(v12 + 16) = v2;
  swift_bridgeObjectRetain();
  v13 = sub_24008FF2C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_240103AB0, v12, v11);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v35);
  *(_QWORD *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = v13;
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_overrideSelectionUUIDs))
  {
    v14 = swift_bridgeObjectRetain();
    sub_240127A0C(v14);
  }
  else
  {
    v15 = *(_QWORD *)(v0 + 16);
    if (*(_BYTE *)(*(_QWORD *)(v4 + 48)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode))
    {
      sub_240127FC8();
    }
    else
    {
      sub_240128924();
      *(_BYTE *)(*(_QWORD *)(v15
                           + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_legacySubjectSelection)
               + 56) = 0;
    }
    v16 = *(_QWORD *)(v0 + 16);
    v17 = swift_retain();
    sub_24012B6F4(v17);
    swift_release();
    v18 = *(_QWORD *)(v4 + 48);
    swift_retain();
    swift_retain();
    v19 = swift_bridgeObjectRetain();
    v20 = sub_24012B4D4(v19, v16);
    swift_release();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = v20;
    swift_release();
  }
  swift_bridgeObjectRelease();
  sub_240125A94();
  v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (!v21)
  {
    v33 = *(_QWORD *)(v4 + 40);
    goto LABEL_22;
  }
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    v22 = sub_240154D30();
    if (!v22)
      goto LABEL_21;
  }
  else
  {
    v22 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v22)
      goto LABEL_21;
  }
  v36 = MEMORY[0x24BEE4AF8];
  result = sub_2400E586C(0, v22 & ~(v22 >> 63), 0);
  if ((v22 & 0x8000000000000000) == 0)
  {
    v24 = 0;
    v25 = *(_QWORD *)(v0 + 32);
    do
    {
      v26 = *(_QWORD *)(v0 + 40);
      v27 = *(_QWORD *)(v0 + 24);
      if ((v21 & 0xC000000000000001) != 0)
      {
        v28 = MEMORY[0x24267D4E0](v24, v21);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v26, v28 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v27);
        swift_unknownObjectRelease();
      }
      else
      {
        (*(void (**)(_QWORD, uint64_t, _QWORD))(v25 + 16))(*(_QWORD *)(v0 + 40), *(_QWORD *)(v21 + 8 * v24 + 32) + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, *(_QWORD *)(v0 + 24));
      }
      v30 = *(_QWORD *)(v36 + 16);
      v29 = *(_QWORD *)(v36 + 24);
      if (v30 >= v29 >> 1)
        sub_2400E586C(v29 > 1, v30 + 1, 1);
      v31 = *(_QWORD *)(v0 + 40);
      v32 = *(_QWORD *)(v0 + 24);
      ++v24;
      *(_QWORD *)(v36 + 16) = v30 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))(v36+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(_QWORD *)(v25 + 72) * v30, v31, v32);
    }
    while (v22 != v24);
LABEL_21:
    swift_bridgeObjectRelease();
    swift_retain();
    sub_240094A9C();
    swift_release();
    swift_bridgeObjectRelease();
    v33 = *(_QWORD *)(v4 + 40);
    v34 = *(_QWORD *)(*(_QWORD *)(v4 + 48)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
    if (v34)
    {
LABEL_23:
      *(_QWORD *)(v33
                + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      swift_task_dealloc();
      return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
    }
LABEL_22:
    v34 = MEMORY[0x24BEE4AF8];
    goto LABEL_23;
  }
  __break(1u);
  return result;
}

void sub_240125A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int64_t v5;
  double *v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  double v11;
  CGFloat Height;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  CGRect *v19;
  uint64_t v20;
  unint64_t v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  CGRect *v26;
  uint64_t v27;
  unint64_t v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  CGRect *v37;
  uint64_t v38;
  unint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  _BYTE v49[9];
  CGRect v50;
  CGRect v51;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(*(_QWORD *)(v0 + 48)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (v5)
  {
    v6 = *(double **)(*(_QWORD *)(v0 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_framingEngine);
    v7 = v6[10];
    v8 = v6[11];
    v9 = v6[12];
    v10 = v6[13];
    swift_retain();
    swift_bridgeObjectRetain();
    v50.origin.x = v7;
    v50.origin.y = v8;
    v50.size.width = v9;
    v50.size.height = v10;
    v11 = CGRectGetWidth(v50) * 0.9;
    v51.origin.x = v7;
    v51.origin.y = v8;
    v51.size.width = v9;
    v51.size.height = v10;
    Height = CGRectGetHeight(v51);
    v13 = sub_240108944(v5, v11, Height * 0.9);
    swift_release();
    if (!v13)
    {
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_24012BF04(v5, v13);
    swift_bridgeObjectRelease();
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_240154D30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v44 = v13;
    v45 = v1;
    v43 = v14;
    if (v15 < 1)
    {
      if (!((unint64_t)v5 >> 62))
      {
        v34 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v34)
        {
LABEL_41:
          swift_bridgeObjectRelease();
LABEL_42:
          sub_24012A09C(v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
LABEL_26:
        if (v34 < 1)
        {
          __break(1u);
          return;
        }
        v35 = 0;
        do
        {
          if ((v5 & 0xC000000000000001) != 0)
          {
            v36 = MEMORY[0x24267D4E0](v35, v5);
          }
          else
          {
            v36 = *(_QWORD *)(v5 + 8 * v35 + 32);
            swift_retain();
          }
          ++v35;
          v49[0] = 2;
          v47 = 0;
          v48 = 0xE000000000000000;
          sub_240154B38();
          swift_bridgeObjectRelease();
          v47 = 0xD000000000000016;
          v48 = 0x8000000240165870;
          v46 = *(_QWORD *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
          sub_240154EBC();
          sub_2401546D0();
          swift_bridgeObjectRelease();
          sub_2401546D0();
          v37 = (CGRect *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
          CGRectGetMidX(*(CGRect *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
          sub_2401548BC();
          sub_2401546D0();
          swift_bridgeObjectRelease();
          sub_2401546D0();
          CGRectGetMidY(*v37);
          sub_2401548BC();
          sub_2401546D0();
          swift_bridgeObjectRelease();
          v38 = v47;
          v39 = v48;
          v40 = sub_24015494C();
          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v49, v38, v39, v40);
          swift_bridgeObjectRelease();
          swift_release();
        }
        while (v34 != v35);
        swift_bridgeObjectRelease();
        v14 = v43;
        goto LABEL_42;
      }
LABEL_40:
      swift_bridgeObjectRetain();
      v34 = sub_240154D30();
      swift_bridgeObjectRelease();
      if (!v34)
        goto LABEL_41;
      goto LABEL_26;
    }
    swift_bridgeObjectRelease();
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_240154D30();
      if (v5)
      {
LABEL_8:
        v42 = v14 >> 62;
        if (v5 < 1)
        {
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        v16 = 0;
        v17 = v13 & 0xC000000000000001;
        do
        {
          if (v17)
          {
            v18 = MEMORY[0x24267D4E0](v16, v13);
          }
          else
          {
            v18 = *(_QWORD *)(v13 + 8 * v16 + 32);
            swift_retain();
          }
          ++v16;
          v49[0] = 2;
          v47 = 0;
          v48 = 0xE000000000000000;
          sub_240154B38();
          swift_bridgeObjectRelease();
          v47 = 0xD000000000000017;
          v48 = 0x8000000240165890;
          v46 = *(_QWORD *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
          sub_240154EBC();
          sub_2401546D0();
          swift_bridgeObjectRelease();
          sub_2401546D0();
          v19 = (CGRect *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
          CGRectGetMidX(*(CGRect *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
          sub_2401548BC();
          sub_2401546D0();
          swift_bridgeObjectRelease();
          sub_2401546D0();
          CGRectGetMidY(*v19);
          sub_2401548BC();
          sub_2401546D0();
          swift_bridgeObjectRelease();
          v20 = v47;
          v21 = v48;
          v22 = sub_24015494C();
          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v49, v20, v21, v22);
          swift_bridgeObjectRelease();
          swift_release();
          v13 = v44;
        }
        while (v5 != v16);
        swift_bridgeObjectRelease();
        v14 = v43;
        if (!v42)
          goto LABEL_16;
        goto LABEL_36;
      }
    }
    else
    {
      v5 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v5)
        goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    if (!(v14 >> 62))
    {
LABEL_16:
      v5 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v5)
        goto LABEL_41;
      goto LABEL_17;
    }
LABEL_36:
    swift_bridgeObjectRetain();
    v5 = sub_240154D30();
    if (!v5)
      goto LABEL_41;
LABEL_17:
    if (v5 >= 1)
    {
      v23 = 0;
      v42 = v14 & 0xC000000000000001;
      do
      {
        if (v42)
        {
          v24 = MEMORY[0x24267D4E0](v23, v14);
        }
        else
        {
          v24 = *(_QWORD *)(v14 + 8 * v23 + 32);
          swift_retain();
        }
        ++v23;
        v49[0] = 2;
        v47 = 0;
        v48 = 0xE000000000000000;
        sub_240154B38();
        swift_bridgeObjectRelease();
        v47 = 0xD000000000000019;
        v48 = 0x80000002401658B0;
        v25 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId;
        v46 = *(_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
        sub_240154EBC();
        sub_2401546D0();
        swift_bridgeObjectRelease();
        sub_2401546D0();
        v26 = (CGRect *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
        CGRectGetMidX(*(CGRect *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
        sub_2401548BC();
        sub_2401546D0();
        swift_bridgeObjectRelease();
        sub_2401546D0();
        CGRectGetMidY(*v26);
        sub_2401548BC();
        sub_2401546D0();
        swift_bridgeObjectRelease();
        v27 = v47;
        v28 = v48;
        v29 = sub_24015494C();
        _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v49, v27, v28, v29);
        swift_bridgeObjectRelease();
        v30 = *(_QWORD *)(v24 + v25);
        v31 = *(_QWORD *)(v45 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
        v32 = sub_240154310();
        v33 = *(_QWORD *)(v32 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v4, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v4, 0, 1, v32);
        sub_2400EBB94((uint64_t)v4, v30);
        swift_release();
        v14 = v43;
      }
      while (v5 != v23);
      goto LABEL_41;
    }
    goto LABEL_39;
  }
}

uint64_t sub_2401262A4(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t j;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  if (!(a2 >> 62))
  {
    v3 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    v5 = MEMORY[0x24BEE4AF8];
LABEL_17:
    type metadata accessor for DKPersonTrackerState(0);
    sub_2400707A8(&qword_256FBB258, type metadata accessor for DKPersonTrackerState, (uint64_t)&protocol conformance descriptor for DKPersonTrackerState);
    v14 = sub_240154B50();
    v15 = sub_240125314(v14, v5);
    swift_bridgeObjectRelease();
    return (v15 & 1) == 0;
  }
  swift_bridgeObjectRetain();
  v3 = sub_240154D30();
  if (!v3)
    goto LABEL_16;
LABEL_3:
  v16 = MEMORY[0x24BEE4AF8];
  result = sub_2400E5A0C(0, v3 & ~(v3 >> 63), 0);
  if ((v3 & 0x8000000000000000) == 0)
  {
    v5 = v16;
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v3; ++i)
      {
        MEMORY[0x24267D4E0](i, a2);
        type metadata accessor for DKPersonTrackerState(0);
        sub_2400707A8(&qword_256FBB258, type metadata accessor for DKPersonTrackerState, (uint64_t)&protocol conformance descriptor for DKPersonTrackerState);
        v7 = sub_240154B50();
        swift_unknownObjectRelease();
        v9 = *(_QWORD *)(v16 + 16);
        v8 = *(_QWORD *)(v16 + 24);
        if (v9 >= v8 >> 1)
          sub_2400E5A0C(v8 > 1, v9 + 1, 1);
        *(_QWORD *)(v16 + 16) = v9 + 1;
        *(_QWORD *)(v16 + 8 * v9 + 32) = v7;
      }
    }
    else
    {
      type metadata accessor for DKPersonTrackerState(0);
      sub_2400707A8(&qword_256FBB258, type metadata accessor for DKPersonTrackerState, (uint64_t)&protocol conformance descriptor for DKPersonTrackerState);
      for (j = 0; j != v3; ++j)
      {
        swift_retain();
        v11 = sub_240154B50();
        swift_release();
        v13 = *(_QWORD *)(v16 + 16);
        v12 = *(_QWORD *)(v16 + 24);
        if (v13 >= v12 >> 1)
          sub_2400E5A0C(v12 > 1, v13 + 1, 1);
        *(_QWORD *)(v16 + 16) = v13 + 1;
        *(_QWORD *)(v16 + 8 * v13 + 32) = v11;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_240126530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __objc2_class **p_superclass;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t *v49;
  uint64_t (*v50)();
  unint64_t *v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  unint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  void (*v71)(char *, char *, uint64_t);
  uint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t *v75;
  uint64_t (*v76)();
  unint64_t *v77;
  unint64_t v78;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  void (**v85)(char *, unint64_t, uint64_t);
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t *v91;
  uint64_t (*v92)();
  unint64_t *v93;
  unint64_t v94;
  char v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t *v104;
  uint64_t (*v105)();
  unint64_t *v106;
  unint64_t v107;
  char v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t (*v114)();
  char **v115;
  uint64_t v116;
  uint64_t v117;
  double v118;
  double v119;
  double v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  CGFloat v124;
  CGFloat v125;
  CGFloat v126;
  CGFloat v127;
  CGFloat v128;
  double MidY;
  double v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char **v136;
  char v137;
  unint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  unsigned __int8 v144;
  uint64_t result;
  char *v146;
  char *v147;
  unint64_t v148;
  uint64_t v149;
  unint64_t v150;
  void (*v151)(char *, unint64_t, uint64_t);
  void (*v152)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t (*v153)(char *, char *, uint64_t);
  uint64_t v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t (*v161)();
  uint64_t *v162;
  unint64_t v163;
  uint64_t v164;
  char *v165;
  unint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  unint64_t v170;
  unint64_t v171;
  double v172;
  char *v173;
  char *v174;
  char *v175;
  _QWORD *v176;
  char *v177;
  char *v178;
  unint64_t v179;
  unint64_t v180;
  uint64_t v181;
  char *v182;
  _BYTE v183[48];
  CGRect v184;
  CGRect v185;

  v1 = v0;
  v2 = sub_240154310();
  v180 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v161 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v5);
  v175 = (char *)&v161 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v161 - v8;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v161 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v161 - v14;
  v16 = sub_24015434C();
  v182 = *(char **)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v177 = (char *)&v161 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v179 = (unint64_t)&v161 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v165 = (char *)&v161 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v178 = (char *)&v161 - v23;
  MEMORY[0x24BDAC7A8](v24);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (unint64_t)&v161 - v26;
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v161 - v29;
  MEMORY[0x24BDAC7A8](v31);
  v174 = (char *)&v161 - v32;
  v33 = *(unsigned __int8 *)(v1
                           + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest
                           + 16);
  v181 = v34;
  v173 = v12;
  v171 = v35;
  v36 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest);
  v37 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 8);
  v162 = (uint64_t *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_overrideSelectionUUIDs) = MEMORY[0x24BEE4AF8];
  v176 = (_QWORD *)v36;
  v172 = *(double *)&v37;
  sub_240086478(v36, v37, v33);
  swift_bridgeObjectRelease();
  switch(v33)
  {
    case 0:
      v27 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 40)
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
      v39 = v176;
      if (v27 >> 62)
        goto LABEL_135;
      v40 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 1:
      v59 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 40)
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
      v39 = v176;
      if (v59 >> 62)
      {
        swift_bridgeObjectRetain();
        v27 = sub_240154D30();
      }
      else
      {
        v27 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      v60 = v182;
      v61 = *(_QWORD *)&v172;
      if (!v27)
        goto LABEL_121;
      v62 = 0;
      v170 = v39[2];
      v171 = v59 & 0xC000000000000001;
      v164 = v59 & 0xFFFFFFFFFFFFFF8;
      v163 = v59 + 32;
      v169 = v1;
      v166 = v59;
      v167 = v27;
      while (v171)
      {
        v174 = (char *)MEMORY[0x24267D4E0](v62, v59);
        v46 = __OFADD__(v62, 1);
        v64 = v62 + 1;
        if (v46)
          goto LABEL_126;
LABEL_43:
        v173 = (char *)v64;
        v65 = v170;
        if (v170)
        {
          v180 = (unint64_t)&v174[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid];
          v168 = (v60[80] + 32) & ~(unint64_t)v60[80];
          v66 = (char *)v39 + v168;
          sub_24012BEF0((uint64_t)v39, v61, 1u);
          v179 = *((_QWORD *)v60 + 9);
          v67 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v60 + 2);
          v68 = v65;
          while (1)
          {
            v69 = v181;
            v67(v9, v66, v181);
            v60 = v182;
            v70 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v182 + 7);
            v70(v9, 0, 1, v69);
            if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v60 + 6))(v9, 1, v69) == 1)
            {
              v63 = (uint64_t)v176;
              v61 = *(_QWORD *)&v172;
              sub_24008648C((uint64_t)v176, *(uint64_t *)&v172, 1u);
              v1 = v169;
              v16 = v69;
              v39 = (_QWORD *)v63;
              v59 = v166;
              v27 = v167;
              goto LABEL_36;
            }
            v71 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v60 + 4);
            v72 = (uint64_t)v178;
            v71(v178, v9, v69);
            sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            v73 = sub_240154610();
            (*((void (**)(uint64_t, uint64_t))v60 + 1))(v72, v69);
            if ((v73 & 1) != 0)
              break;
            v66 += v179;
            if (!--v68)
            {
              v1 = v169;
              v16 = v181;
              v60 = v182;
              v74 = *(_QWORD *)&v172;
              v39 = v176;
              v59 = v166;
              v27 = v167;
              goto LABEL_50;
            }
          }
          v61 = *(_QWORD *)&v172;
          sub_24008648C((uint64_t)v176, *(uint64_t *)&v172, 1u);
          v76 = sub_240125378();
          v27 = v167;
          if (*v75)
          {
            v77 = v75;
            v67(v165, (char *)v180, v181);
            v78 = *v77;
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *v77 = v78;
            v161 = v76;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              v78 = sub_240077844(0, *(_QWORD *)(v78 + 16) + 1, 1, v78);
              *v77 = v78;
            }
            v1 = v169;
            v81 = *(_QWORD *)(v78 + 16);
            v80 = *(_QWORD *)(v78 + 24);
            if (v81 >= v80 >> 1)
            {
              v78 = sub_240077844(v80 > 1, v81 + 1, 1, v78);
              *v77 = v78;
            }
            v59 = v166;
            *(_QWORD *)(v78 + 16) = v81 + 1;
            v82 = v78 + v168 + v81 * v179;
            v16 = v181;
            v60 = v182;
            v71((char *)v82, v165, v181);
            ((void (*)(_BYTE *, _QWORD))v161)(v183, 0);
            v39 = v176;
          }
          else
          {
            ((void (*)(_BYTE *, _QWORD))v76)(v183, 0);
            v1 = v169;
            v16 = v181;
            v60 = v182;
            v39 = v176;
            v59 = v166;
          }
        }
        else
        {
          sub_24012BEF0((uint64_t)v39, v61, 1u);
          v74 = v61;
          v70 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v60 + 7);
LABEL_50:
          v70(v9, 1, 1, v16);
          sub_24008648C((uint64_t)v39, v74, 1u);
          v61 = v74;
        }
LABEL_36:
        swift_release();
        v62 = (unint64_t)v173;
        if (v173 == (char *)v27)
        {
LABEL_121:
          sub_24008648C((uint64_t)v39, v61, 1u);
          swift_bridgeObjectRelease();
          goto LABEL_149;
        }
      }
      if (v62 < *(_QWORD *)(v164 + 16))
      {
        v174 = *(char **)(v163 + 8 * v62);
        swift_retain();
        v46 = __OFADD__(v62, 1);
        v64 = v62 + 1;
        if (v46)
        {
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
          goto LABEL_129;
        }
        goto LABEL_43;
      }
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      swift_bridgeObjectRetain();
      v40 = sub_240154D30();
LABEL_4:
      v41 = *(_QWORD *)&v172;
      if (!v40)
      {
LABEL_122:
        sub_24008648C((uint64_t)v39, v41, 0);
        swift_bridgeObjectRelease();
        goto LABEL_149;
      }
      v42 = 0;
      v43 = v39[2];
      v44 = v27 & 0xC000000000000001;
      v178 = (char *)(v27 & 0xFFFFFFFFFFFFFF8);
      v174 = (char *)(v27 + 32);
      v173 = (char *)v27;
      v180 = v40;
      while (1)
      {
        if (v44)
        {
          v45 = MEMORY[0x24267D4E0](v42, v27);
          v46 = __OFADD__(v42++, 1);
          if (v46)
            goto LABEL_127;
        }
        else
        {
          if (v42 >= *((_QWORD *)v178 + 2))
            goto LABEL_133;
          v45 = *(_QWORD *)&v174[8 * v42];
          swift_retain();
          v46 = __OFADD__(v42++, 1);
          if (v46)
            goto LABEL_127;
        }
        if (v43)
        {
          v47 = *(_QWORD *)(v45 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
          if (v39[4] == v47)
            goto LABEL_16;
          if (v43 != 1)
          {
            if (v39[5] == v47)
            {
LABEL_16:
              v48 = v44;
              v50 = sub_240125378();
              if (*v49)
              {
                v51 = v49;
                (*((void (**)(unint64_t, uint64_t, uint64_t))v182 + 2))(v179, v45 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v16);
                v52 = *v51;
                v53 = swift_isUniquelyReferenced_nonNull_native();
                *v51 = v52;
                if ((v53 & 1) == 0)
                {
                  v52 = sub_240077844(0, *(_QWORD *)(v52 + 16) + 1, 1, v52);
                  *v51 = v52;
                }
                v55 = *(_QWORD *)(v52 + 16);
                v54 = *(_QWORD *)(v52 + 24);
                if (v55 >= v54 >> 1)
                {
                  v52 = sub_240077844(v54 > 1, v55 + 1, 1, v52);
                  *v51 = v52;
                }
                v44 = v48;
                *(_QWORD *)(v52 + 16) = v55 + 1;
                v56 = v52
                    + ((v182[80] + 32) & ~(unint64_t)v182[80])
                    + *((_QWORD *)v182 + 9) * v55;
                v16 = v181;
                (*((void (**)(unint64_t, unint64_t, uint64_t))v182 + 4))(v56, v179, v181);
                ((void (*)(_BYTE *, _QWORD))v50)(v183, 0);
                swift_release();
                v41 = *(_QWORD *)&v172;
                v39 = v176;
                v27 = (unint64_t)v173;
                v40 = v180;
              }
              else
              {
                ((void (*)(_BYTE *, _QWORD))v50)(v183, 0);
                swift_release();
                v39 = v176;
                v40 = v180;
              }
              goto LABEL_7;
            }
            if (v43 != 2)
            {
              v57 = 6;
              while (1)
              {
                v58 = v57 - 3;
                if (__OFADD__(v57 - 4, 1))
                  break;
                if (v39[v57] == v47)
                  goto LABEL_16;
                ++v57;
                if (v58 == v43)
                  goto LABEL_6;
              }
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
              goto LABEL_132;
            }
          }
        }
LABEL_6:
        swift_release();
LABEL_7:
        if (v42 == v40)
          goto LABEL_122;
      }
    case 2:
      v83 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 40)
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
      v39 = v176;
      if (v83 >> 62)
      {
        swift_bridgeObjectRetain();
        v84 = sub_240154D30();
      }
      else
      {
        v84 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
      }
      v85 = (void (**)(char *, unint64_t, uint64_t))v182;
      v86 = *(_QWORD *)&v172;
      if (!v84)
      {
        v132 = (uint64_t)v39;
        goto LABEL_125;
      }
      v87 = 0;
      v180 = v83 & 0xC000000000000001;
      v178 = (char *)(v83 & 0xFFFFFFFFFFFFFF8);
      v173 = (char *)(v83 + 32);
      v171 = (unint64_t)v30;
      v179 = v83;
      while (1)
      {
        if (v180)
        {
          v27 = MEMORY[0x24267D4E0](v87, v83);
          v46 = __OFADD__(v87++, 1);
          if (v46)
            goto LABEL_128;
        }
        else
        {
          if (v87 >= *((_QWORD *)v178 + 2))
            goto LABEL_134;
          v27 = *(_QWORD *)&v173[8 * v87];
          swift_retain();
          v46 = __OFADD__(v87++, 1);
          if (v46)
            goto LABEL_128;
        }
        v88 = *(_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
        if (v88)
        {
          v89 = v39[2];
          if (v89)
          {
            v90 = *(_QWORD *)(v88 + qword_256FC4870);
            if (v39[4] != v90)
            {
              if (v89 == 1)
                goto LABEL_89;
              if (v39[5] != v90)
              {
                if (v89 == 2)
                  goto LABEL_89;
                v99 = 6;
                while (1)
                {
                  v100 = v99 - 3;
                  if (__OFADD__(v99 - 4, 1))
                    goto LABEL_130;
                  if (v39[v99] == v90)
                    break;
                  ++v99;
                  if (v100 == v89)
                    goto LABEL_89;
                }
              }
            }
            swift_retain();
            v92 = sub_240125378();
            if (*v91)
            {
              v93 = v91;
              v85[2](v174, v27 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v16);
              v94 = *v93;
              v95 = swift_isUniquelyReferenced_nonNull_native();
              *v93 = v94;
              if ((v95 & 1) == 0)
              {
                v94 = sub_240077844(0, *(_QWORD *)(v94 + 16) + 1, 1, v94);
                *v93 = v94;
              }
              v97 = *(_QWORD *)(v94 + 16);
              v96 = *(_QWORD *)(v94 + 24);
              if (v97 >= v96 >> 1)
              {
                v94 = sub_240077844(v96 > 1, v97 + 1, 1, v94);
                *v93 = v94;
              }
              v83 = v179;
              *(_QWORD *)(v94 + 16) = v97 + 1;
              v85 = (void (**)(char *, unint64_t, uint64_t))v182;
              v98 = v94
                  + ((*((unsigned __int8 *)v85 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v85 + 80))
                  + (_QWORD)v85[9] * v97;
              v16 = v181;
              (*((void (**)(unint64_t, char *, uint64_t))v182 + 4))(v98, v174, v181);
              ((void (*)(_BYTE *, _QWORD))v92)(v183, 0);
              v30 = (char *)v171;
            }
            else
            {
              ((void (*)(_BYTE *, _QWORD))v92)(v183, 0);
              v83 = v179;
            }
            swift_release();
            v39 = v176;
          }
        }
LABEL_89:
        v101 = *(_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
        if (v101)
        {
          v102 = v39[2];
          if (v102)
          {
            v103 = *(_QWORD *)(v101 + qword_256FC4870);
            if (v39[4] == v103)
              goto LABEL_94;
            if (v102 != 1)
            {
              if (v39[5] == v103)
                goto LABEL_94;
              if (v102 != 2)
              {
                v112 = 6;
                while (1)
                {
                  v113 = v112 - 3;
                  if (__OFADD__(v112 - 4, 1))
                    goto LABEL_131;
                  if (v39[v112] == v103)
                    break;
                  ++v112;
                  if (v113 == v102)
                    goto LABEL_62;
                }
LABEL_94:
                swift_retain();
                v105 = sub_240125378();
                if (*v104)
                {
                  v106 = v104;
                  v85[2](v30, v27 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v16);
                  v107 = *v106;
                  v108 = swift_isUniquelyReferenced_nonNull_native();
                  *v106 = v107;
                  if ((v108 & 1) == 0)
                  {
                    v107 = sub_240077844(0, *(_QWORD *)(v107 + 16) + 1, 1, v107);
                    *v106 = v107;
                  }
                  v110 = *(_QWORD *)(v107 + 16);
                  v109 = *(_QWORD *)(v107 + 24);
                  if (v110 >= v109 >> 1)
                  {
                    v107 = sub_240077844(v109 > 1, v110 + 1, 1, v107);
                    *v106 = v107;
                  }
                  v83 = v179;
                  *(_QWORD *)(v107 + 16) = v110 + 1;
                  v85 = (void (**)(char *, unint64_t, uint64_t))v182;
                  v111 = v107
                       + ((*((unsigned __int8 *)v85 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v85 + 80))
                       + (_QWORD)v85[9] * v110;
                  v30 = (char *)v171;
                  v16 = v181;
                  (*((void (**)(unint64_t, unint64_t, uint64_t))v182 + 4))(v111, v171, v181);
                  ((void (*)(_BYTE *, _QWORD))v105)(v183, 0);
                  swift_release();
                  swift_release();
                  v39 = v176;
                }
                else
                {
                  ((void (*)(_BYTE *, _QWORD))v105)(v183, 0);
                  swift_release();
                  swift_release();
                  v39 = v176;
                  v83 = v179;
                }
                goto LABEL_63;
              }
            }
          }
        }
LABEL_62:
        swift_release();
LABEL_63:
        if (v87 == v84)
        {
          v132 = (uint64_t)v39;
          v86 = *(_QWORD *)&v172;
LABEL_125:
          sub_24008648C(v132, v86, 2u);
          swift_bridgeObjectRelease();
          goto LABEL_149;
        }
      }
    case 3:
      v174 = (char *)*((_QWORD *)v182 + 7);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v174)(v15, 1, 1, v16);
      v114 = *(uint64_t (**)())(*(_QWORD *)(*(_QWORD *)(v1 + 40)
                                                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                                        + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
      v115 = (char **)v176;
      v178 = v15;
      v170 = v27;
      if ((unint64_t)v114 >> 62)
      {
        swift_bridgeObjectRetain();
        v115 = (char **)v176;
        v116 = sub_240154D30();
        if (!v116)
          goto LABEL_139;
      }
      else
      {
        v116 = *(_QWORD *)(((unint64_t)v114 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v116)
          goto LABEL_139;
      }
      if (v116 < 1)
      {
        __break(1u);
LABEL_168:
        v9 = (char *)sub_240077844(0, *((_QWORD *)v9 + 2) + 1, 1, (unint64_t)v9);
        *v115 = v9;
        goto LABEL_143;
      }
      v117 = 0;
      v118 = *(double *)&v115;
      v119 = v172;
      v179 = (unint64_t)v114 & 0xC000000000000001;
      v120 = INFINITY;
      do
      {
        if (v179)
          MEMORY[0x24267D4E0](v117, v114);
        else
          swift_retain();
        v122 = v180;
        (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v4, *(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v2);
        v123 = sub_240138FEC((uint64_t)v4);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v4, v2);
        if (v123)
        {
          v124 = *(double *)(v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
          v125 = *(double *)(v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 8);
          v126 = *(double *)(v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 16);
          v127 = *(double *)(v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect + 24);
          v184.origin.x = v124;
          v184.origin.y = v125;
          v184.size.width = v126;
          v184.size.height = v127;
          v128 = CGRectGetMidX(v184) - v118;
          v185.origin.x = v124;
          v185.origin.y = v125;
          v185.size.width = v126;
          v185.size.height = v127;
          MidY = CGRectGetMidY(v185);
          swift_release();
          v130 = sqrt(v128 * v128 + (MidY - v119) * (MidY - v119));
          v121 = v116;
          if (v130 >= v120)
          {
            swift_release();
          }
          else
          {
            v131 = (uint64_t)v178;
            sub_240070BD4((uint64_t)v178, &qword_256FB5DE8);
            (*((void (**)(uint64_t, uint64_t, uint64_t))v182 + 2))(v131, v123 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v16);
            swift_release();
            ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v174)(v131, 0, 1, v16);
            v120 = v130;
          }
          v115 = (char **)v176;
        }
        else
        {
          swift_release();
          v115 = (char **)v176;
          v121 = v116;
        }
        ++v117;
      }
      while (v121 != v117);
LABEL_139:
      swift_bridgeObjectRelease();
      v116 = (uint64_t)v178;
      v133 = (uint64_t)v173;
      sub_240070B90((uint64_t)v178, (uint64_t)v173, &qword_256FB5DE8);
      v4 = v182;
      if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v182 + 6))(v133, 1, v16) == 1)
      {
        sub_24008648C((uint64_t)v115, *(uint64_t *)&v172, 3u);
        sub_240070BD4(v116, &qword_256FB5DE8);
        v134 = v133;
        goto LABEL_148;
      }
      v30 = (char *)*((_QWORD *)v4 + 4);
      v135 = v170;
      ((void (*)(unint64_t, uint64_t, uint64_t))v30)(v170, v133, v16);
      v114 = sub_240125378();
      v2 = *(_QWORD *)&v172;
      if (!*v136)
      {
        ((void (*)(_BYTE *, _QWORD))v114)(v183, 0);
        sub_24008648C((uint64_t)v176, v2, 3u);
        (*((void (**)(unint64_t, uint64_t))v4 + 1))(v135, v16);
        goto LABEL_147;
      }
      v115 = v136;
      (*((void (**)(unint64_t, unint64_t, uint64_t))v4 + 2))(v171, v135, v16);
      v9 = *v115;
      v137 = swift_isUniquelyReferenced_nonNull_native();
      *v115 = v9;
      if ((v137 & 1) == 0)
        goto LABEL_168;
LABEL_143:
      v139 = *((_QWORD *)v9 + 2);
      v138 = *((_QWORD *)v9 + 3);
      if (v139 >= v138 >> 1)
      {
        v9 = (char *)sub_240077844(v138 > 1, v139 + 1, 1, (unint64_t)v9);
        *v115 = v9;
      }
      *((_QWORD *)v9 + 2) = v139 + 1;
      v140 = (unint64_t)&v9[((v4[80] + 32) & ~(unint64_t)v4[80])
                                 + *((_QWORD *)v4 + 9) * v139];
      v16 = v181;
      ((void (*)(unint64_t, unint64_t, uint64_t))v30)(v140, v171, v181);
      ((void (*)(_BYTE *, _QWORD))v114)(v183, 0);
      sub_24008648C((uint64_t)v176, v2, 3u);
      (*((void (**)(unint64_t, uint64_t))v4 + 1))(v170, v16);
LABEL_147:
      v134 = v116;
LABEL_148:
      sub_240070BD4(v134, &qword_256FB5DE8);
LABEL_149:
      v141 = v162;
      v142 = *v162;
      v143 = v162[1];
      *v162 = 0;
      v141[1] = 0;
      v144 = *((_BYTE *)v141 + 16);
      *((_BYTE *)v141 + 16) = -1;
      sub_24008648C(v142, v143, v144);
      p_superclass = _TtC23IntelligentTrackingCore18DKReturnToBaseTask.superclass;
LABEL_150:
      v179 = (unint64_t)p_superclass[502];
      result = *(_QWORD *)(v1 + v179);
      if (result && *(_QWORD *)(result + 16))
      {
        v146 = v175;
        v147 = v182;
      }
      else
      {
        v148 = v179;
        *(_QWORD *)(v1 + v179) = 0;
        swift_bridgeObjectRelease();
        result = *(_QWORD *)(v1 + v148);
        v146 = v175;
        v147 = v182;
        if (!result)
          return result;
      }
      v149 = *(_QWORD *)(result + 16);
      v178 = (char *)result;
      if (v149)
      {
        v150 = result + ((v147[80] + 32) & ~(unint64_t)v147[80]);
        v180 = *((_QWORD *)v147 + 9);
        v151 = (void (*)(char *, unint64_t, uint64_t))*((_QWORD *)v147 + 2);
        swift_bridgeObjectRetain();
        while (1)
        {
          v151(v146, v150, v16);
          v152 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v147 + 7);
          v152(v146, 0, 1, v16);
          if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v147 + 6))(v146, 1, v16) == 1)
            break;
          v153 = (uint64_t (*)(char *, char *, uint64_t))*((_QWORD *)v147 + 4);
          v154 = v1;
          v155 = v177;
          v156 = v153(v177, v146, v16);
          v157 = v154;
          v158 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v154 + 40)
                                       + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                           + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
          MEMORY[0x24BDAC7A8](v156);
          *(&v161 - 2) = (uint64_t (*)())v155;
          swift_bridgeObjectRetain();
          v159 = (unint64_t)sub_2400900EC((uint64_t (*)(uint64_t *))sub_2400956A4, &v161 - 4, v158);
          if (v159 >> 62)
            v160 = sub_240154D30();
          else
            v160 = *(_QWORD *)((v159 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRelease();
          v16 = v181;
          v1 = v157;
          if (!v160)
          {
            *(_QWORD *)(v157 + v179) = 0;
            swift_bridgeObjectRelease();
          }
          v147 = v182;
          (*((void (**)(char *, uint64_t))v182 + 1))(v177, v16);
          v150 += v180;
          --v149;
          v146 = v175;
          if (!v149)
            goto LABEL_164;
        }
      }
      else
      {
        v152 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v147 + 7);
        swift_bridgeObjectRetain();
LABEL_164:
        v152(v146, 1, 1, v16);
      }
      return swift_bridgeObjectRelease();
    default:
      goto LABEL_150;
  }
}

uint64_t sub_240127A0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  char *v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  unint64_t v48;

  v3 = sub_24015434C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v46 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = v1;
  v9 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 40)
                             + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  v48 = MEMORY[0x24BEE4AF8];
  if (v9 >> 62)
    goto LABEL_42;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  while (1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    if (!v10)
    {
      v22 = MEMORY[0x24BEE4AF8];
      goto LABEL_25;
    }
    v12 = 0;
    v42 = v9 & 0xFFFFFFFFFFFFFF8;
    v43 = v9 & 0xC000000000000001;
    v40 = a1;
    v41 = v9 + 32;
    v38 = v10;
    v39 = v9;
LABEL_8:
    if (v43)
      break;
    if (v12 < *(_QWORD *)(v42 + 16))
    {
      v13 = *(_QWORD *)(v41 + 8 * v12);
      swift_retain();
      v14 = __OFADD__(v12++, 1);
      if (v14)
        goto LABEL_22;
      goto LABEL_11;
    }
    __break(1u);
LABEL_42:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10 = sub_240154D30();
  }
  v13 = MEMORY[0x24267D4E0](v12, v9);
  v14 = __OFADD__(v12++, 1);
  if (!v14)
  {
LABEL_11:
    v15 = *(_QWORD *)(a1 + 16);
    if (!v15)
    {
      swift_bridgeObjectRetain();
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      goto LABEL_18;
    }
    v45 = v12;
    v44 = v13;
    v47 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid;
    v16 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    swift_bridgeObjectRetain();
    v17 = *(_QWORD *)(v4 + 72);
    v18 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v18(v8, v16, v3);
      v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v19(v8, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v8, 1, v3) == 1)
        break;
      v20 = v46;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v46, v8, v3);
      sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_240154610();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v20, v3);
      if ((v21 & 1) != 0)
      {
        a1 = v40;
        swift_bridgeObjectRelease();
        sub_240154BE0();
        sub_240154C10();
        sub_240154C1C();
        sub_240154BEC();
        goto LABEL_6;
      }
      v16 += v17;
      if (!--v15)
      {
        v9 = v39;
        a1 = v40;
        v10 = v38;
        v12 = v45;
LABEL_18:
        v19(v8, 1, 1, v3);
        swift_release();
        swift_bridgeObjectRelease();
LABEL_7:
        if (v12 == v10)
          goto LABEL_23;
        goto LABEL_8;
      }
    }
    swift_release();
    a1 = v40;
    swift_bridgeObjectRelease();
LABEL_6:
    v10 = v38;
    v9 = v39;
    v12 = v45;
    goto LABEL_7;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  v22 = v48;
  v11 = MEMORY[0x24BEE4AF8];
LABEL_25:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v23 = v37;
  swift_retain();
  v24 = sub_24012B314(v22, v23);
  swift_release();
  swift_release();
  v25 = sub_240127EF4(v24);
  swift_bridgeObjectRelease();
  if (v25)
    v26 = v25;
  else
    v26 = v11;
  *(_QWORD *)(*(_QWORD *)(v23 + 48)
            + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = v26;
  swift_bridgeObjectRelease();
  v27 = *(_QWORD *)(v23 + 48);
  if (*(_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects))
    v28 = *(_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  else
    v28 = v11;
  if (!(v28 >> 62))
  {
    v29 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v29)
      goto LABEL_33;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v29 = sub_240154D30();
  result = swift_bridgeObjectRelease();
  if (!v29)
    return swift_bridgeObjectRelease();
LABEL_33:
  if (v29 >= 1)
  {
    if ((v28 & 0xC000000000000001) != 0)
    {
      v31 = 0;
      do
      {
        v32 = MEMORY[0x24267D4E0](v31++, v28);
        v33 = *(_QWORD *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence);
        *(_QWORD *)(v33 + 24) = 0x3FF0000000000000;
        swift_retain();
        swift_unknownObjectRelease();
        *(_QWORD *)(v33 + 16) = 1;
        swift_release();
      }
      while (v29 != v31);
    }
    else
    {
      v34 = 0;
      v35 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
      do
      {
        v36 = *(_QWORD *)(*(_QWORD *)(v28 + 8 * v34++ + 32) + v35);
        *(_QWORD *)(v36 + 16) = 1;
        *(_QWORD *)(v36 + 24) = 0x3FF0000000000000;
      }
      while (v29 != v34);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_240127EF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v5 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 16);
  sub_240154C04();
  if (!v2)
    return v5;
  v3 = a1 + 32;
  type metadata accessor for DKPersonTrackerState(0);
  while (1)
  {
    v3 += 8;
    if (!swift_dynamicCastClass())
      break;
    swift_retain();
    sub_240154BE0();
    sub_240154C10();
    sub_240154C1C();
    sub_240154BEC();
    if (!--v2)
      return v5;
  }
  swift_release();
  return 0;
}

uint64_t sub_240127FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int (*v44)(uint64_t, uint64_t, uint64_t);
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  char *v58;
  char *v59;
  unint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  uint64_t v68;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v2);
  v65 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v68 = sub_24015434C();
  v4 = *(_QWORD *)(v68 - 8);
  MEMORY[0x24BDAC7A8](v68);
  v67 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v66 = (char *)&v55 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v8);
  v55 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v55 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v56 = (uint64_t)&v55 - v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v55 - v16;
  v18 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_legacySubjectSelection;
  v20 = *(_QWORD *)(v0 + 40);
  v19 = *(_QWORD *)(v0 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2400A2198(v19, v20);
  swift_release();
  swift_release();
  swift_release();
  v21 = *(_QWORD **)(v0 + v18);
  v22 = v21[2];
  if (v22)
  {
    v23 = v68;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v17, v22 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v68);
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v24(v17, 0, 1, v23);
  }
  else
  {
    v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v24(v17, 1, 1, v68);
  }
  v25 = v21[3];
  if (v25)
  {
    v26 = v56;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v56, v25 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v68);
    v27 = 0;
  }
  else
  {
    v27 = 1;
    v26 = v56;
  }
  v59 = v17;
  v24((char *)v26, v27, 1, v68);
  v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 40)
                              + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  v29 = v21[6];
  v30 = *(void **)(v29 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  objc_msgSend(v30, sel_lock);
  v57 = *(unsigned __int8 *)(v29 + 16);
  objc_msgSend(v30, sel_unlock);
  swift_release();
  result = swift_release();
  v58 = v12;
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    v32 = sub_240154D30();
    result = swift_bridgeObjectRelease();
    v33 = v66;
    v34 = v67;
    if (v32)
      goto LABEL_9;
LABEL_30:
    swift_bridgeObjectRelease();
    sub_240070BD4(v56, &qword_256FB5DE8);
    return sub_240070BD4((uint64_t)v59, &qword_256FB5DE8);
  }
  v32 = *(_QWORD *)((v28 & 0xFFFFFFFFFFFFF8) + 0x10);
  v33 = v66;
  v34 = v67;
  if (!v32)
    goto LABEL_30;
LABEL_9:
  if (v32 >= 1)
  {
    v35 = 0;
    v61 = v57 - 2;
    v60 = v28 & 0xC000000000000001;
    v63 = v28;
    v64 = v4;
    v62 = v32;
    while (1)
    {
      v40 = v4;
      if (v60)
      {
        v41 = MEMORY[0x24267D4E0](v35, v28);
      }
      else
      {
        v41 = *(_QWORD *)(v28 + 8 * v35 + 32);
        swift_retain();
      }
      if (v61 <= 2)
      {
        v42 = (uint64_t)v58;
        v43 = v68;
        sub_240070B90((uint64_t)v59, (uint64_t)v58, &qword_256FB5DE8);
        v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48);
        if (v44(v42, 1, v43) == 1)
        {
          sub_240070BD4(v42, &qword_256FB5DE8);
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v33, v42, v43);
          if ((sub_240154328() & 1) != 0)
          {
            *(_BYTE *)(*(_QWORD *)(v41 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter)
                     + 136) = 1;
            v45 = sub_240154310();
            v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56);
            v47 = (uint64_t)v65;
            v46(v65, 1, 1, v45);
            swift_retain();
            swift_retain();
            sub_240148324(0x3FF0000000000000, 0, v47, 1.0);
            swift_release();
            sub_240070BD4(v47, &qword_256FB4CC8);
            swift_release();
            v46((char *)v47, 1, 1, v45);
            swift_retain();
            swift_retain();
            sub_240148324(0x3FF0000000000000, 0, v47, 1.0);
            swift_release();
            swift_release();
            sub_240070BD4(v47, &qword_256FB4CC8);
            v48 = v45;
            v33 = v66;
            v46((char *)v47, 1, 1, v48);
            v4 = v64;
            swift_retain();
            swift_retain();
            sub_240148324(0x3FF0000000000000, 0, v47, 1.0);
            swift_release();
            v34 = v67;
            swift_release();
            swift_release();
            sub_240070BD4(v47, &qword_256FB4CC8);
            (*(void (**)(char *, uint64_t))(v4 + 8))(v33, v68);
            goto LABEL_13;
          }
          (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v68);
        }
        if (v57 == 4)
        {
          v49 = v55;
          v50 = v68;
          sub_240070B90(v56, v55, &qword_256FB5DE8);
          if (v44(v49, 1, v50) == 1)
          {
            sub_240070BD4(v49, &qword_256FB5DE8);
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v34, v49, v50);
            if ((sub_240154328() & 1) != 0)
            {
              *(_BYTE *)(*(_QWORD *)(v41
                                   + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter)
                       + 136) = 1;
              v51 = sub_240154310();
              v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 56);
              v53 = (uint64_t)v65;
              v52(v65, 1, 1, v51);
              swift_retain();
              swift_retain();
              sub_240148324(0x3FF0000000000000, 0, v53, 1.0);
              swift_release();
              sub_240070BD4(v53, &qword_256FB4CC8);
              swift_release();
              v52((char *)v53, 1, 1, v51);
              swift_retain();
              swift_retain();
              sub_240148324(0x3FF0000000000000, 0, v53, 1.0);
              swift_release();
              swift_release();
              sub_240070BD4(v53, &qword_256FB4CC8);
              v54 = v51;
              v33 = v66;
              v52((char *)v53, 1, 1, v54);
              v4 = v64;
              swift_retain();
              swift_retain();
              sub_240148324(0x3FF0000000000000, 0, v53, 0.5);
              swift_release();
              v34 = v67;
              swift_release();
              swift_release();
              sub_240070BD4(v53, &qword_256FB4CC8);
              (*(void (**)(char *, uint64_t))(v4 + 8))(v34, v68);
              goto LABEL_13;
            }
            (*(void (**)(char *, uint64_t))(v40 + 8))(v34, v68);
          }
        }
      }
      *(_BYTE *)(*(_QWORD *)(v41 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter)
               + 136) = 0;
      v36 = sub_240154310();
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
      v38 = (uint64_t)v65;
      v37(v65, 1, 1, v36);
      swift_retain();
      swift_retain();
      sub_240148324(0x3FF0000000000000, 0, v38, 0.0);
      swift_release();
      sub_240070BD4(v38, &qword_256FB4CC8);
      swift_release();
      v37((char *)v38, 1, 1, v36);
      swift_retain();
      swift_retain();
      sub_240148324(0x3FF0000000000000, 0, v38, 0.0);
      swift_release();
      swift_release();
      sub_240070BD4(v38, &qword_256FB4CC8);
      v39 = v36;
      v33 = v66;
      v37((char *)v38, 1, 1, v39);
      v4 = v64;
      swift_retain();
      swift_retain();
      sub_240148324(0x3FF0000000000000, 0, v38, 0.0);
      swift_release();
      v34 = v67;
      swift_release();
      swift_release();
      sub_240070BD4(v38, &qword_256FB4CC8);
LABEL_13:
      ++v35;
      v28 = v63;
      if (v62 == v35)
        goto LABEL_30;
    }
  }
  __break(1u);
  return result;
}

void sub_240128924()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  uint64_t v20;
  uint64_t (*v21)();
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  double v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  double v36;
  uint64_t inited;
  unint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  void (*v41)(char *, unint64_t);
  uint64_t v42;
  long double v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  long double v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  int64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  int64_t v78;
  unint64_t v79;
  unint64_t v80;
  int64_t v81;
  unint64_t v82;
  int64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t (*v86)();
  uint64_t v87;
  uint64_t (*v88)();
  unint64_t v89;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)();
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  char v107;
  uint64_t v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t (*v111)();
  int v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  double v116;
  void (*v117)(char *, unint64_t);
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)();
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)();
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)();
  void (*v137)(uint64_t, uint64_t, uint64_t (*)());
  uint64_t v138;
  double v139;
  char v140;
  _QWORD *v141;
  int *v142;
  uint64_t (*v143)();
  int v144;
  uint64_t v145;
  _BOOL4 v146;
  unint64_t v147;
  unint64_t v148;
  int v149;
  uint64_t v150;
  unint64_t v151;
  os_log_type_t v152;
  uint64_t v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  char *v169;
  uint64_t v170;
  uint64_t (*v171)();
  uint64_t v172;
  unint64_t v173;
  _QWORD *v174;
  uint64_t (*v175)();
  uint64_t v176;
  unint64_t v177;
  char *v178;
  uint64_t v179;
  char *v180;
  void (*v181)(char *, unint64_t);
  unint64_t v182;
  void (*v183)(char *, uint64_t, unint64_t, double);
  _QWORD *v184;
  uint64_t (*v185)();
  uint64_t v186;
  unint64_t v187;
  unint64_t v188;
  char v189;

  v1 = v0;
  v161 = type metadata accessor for DKPersonSelectionFilter.Signals(0);
  MEMORY[0x24BDAC7A8](v161);
  v168 = (uint64_t *)((char *)&v153 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v153 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v162 = (char *)&v153 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v153 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v163 = (char *)&v153 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v13);
  v178 = (char *)&v153 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v170 = type metadata accessor for DKMotion3();
  v166 = *(_QWORD *)(v170 - 8);
  MEMORY[0x24BDAC7A8](v170);
  v16 = (char *)&v153 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (uint64_t (*)())((char *)&v153 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v179 = type metadata accessor for DKCamera();
  v176 = *(_QWORD *)(v179 - 8);
  MEMORY[0x24BDAC7A8](v179);
  v21 = (uint64_t (*)())((char *)&v153 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_240154310();
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  MEMORY[0x24BDAC7A8](v24);
  v165 = (char *)&v153 - v25;
  MEMORY[0x24BDAC7A8](v26);
  v31 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)&v153 - v28;
  v33 = *(_QWORD *)((char *)v1 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_issModel);
  if (v33)
  {
    v154 = v30;
    v157 = v29;
    v160 = v10;
    v158 = v5;
    v34 = v1[6] + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    v183 = *(void (**)(char *, uint64_t, unint64_t, double))(v23 + 16);
    v183((char *)&v153 - v28, v34, v22, v31);
    v159 = v33;
    swift_retain();
    sub_2401542E0();
    v36 = v35;
    v167 = v23;
    v181 = *(void (**)(char *, unint64_t))(v23 + 8);
    v181(v32, v22);
    type metadata accessor for DKISSDetections();
    inited = swift_initStackObject();
    *(double *)(inited + 16) = v36;
    v155 = inited;
    *(_QWORD *)(inited + 24) = MEMORY[0x24BEE4AF8];
    v174 = (_QWORD *)(inited + 24);
    v38 = *(_QWORD *)(*(_QWORD *)(v1[5]
                                + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
    v169 = v16;
    v175 = v21;
    v39 = v1;
    if (v38 >> 62)
      goto LABEL_126;
    v40 = *(_QWORD *)((v38 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
LABEL_4:
    v171 = v19;
    v185 = (uint64_t (*)())v22;
    v180 = v32;
    v41 = v181;
    v184 = v39;
    if (v40)
    {
      if (v40 < 1)
      {
        __break(1u);
LABEL_130:
        __break(1u);
        return;
      }
      v42 = 0;
      v177 = v38 & 0xC000000000000001;
      v173 = v38;
      v172 = v40;
      do
      {
        if (v177)
        {
          v49 = MEMORY[0x24267D4E0](v42, v38);
        }
        else
        {
          v49 = *(_QWORD *)(v38 + 8 * v42 + 32);
          swift_retain();
        }
        v50 = *(_QWORD *)(v49 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
        ((void (*)(char *, uint64_t, unint64_t))v183)(v32, v39[6] + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v22);
        swift_retain();
        sub_2400D6A60((uint64_t)v32);
        v19 = *(uint64_t (**)())(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
        swift_retain();
        swift_release();
        v41(v32, v22);
        if (v19)
        {
          v51 = *(_QWORD *)((char *)v19 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
          v52 = *(_QWORD *)((char *)v19
                          + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect
                          + 8);
          v53 = *(_QWORD *)((char *)v19
                          + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect
                          + 16);
          v54 = *(_QWORD *)((char *)v19
                          + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect
                          + 24);
          v182 = *(_QWORD *)(v49 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
          v55 = *(_QWORD *)((char *)v19 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw);
          v56 = *((unsigned __int8 *)v19
                + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw
                + 8);
          v57 = *(_QWORD *)((char *)v19
                          + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch);
          v58 = *((unsigned __int8 *)v19
                + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch
                + 8);
          v59 = *(_QWORD *)((char *)v19 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll);
          v60 = *(_QWORD *)(v49 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints);
          v61 = *((_BYTE *)v19 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll + 8);
          v62 = *(_QWORD *)(v49 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter);
          v63 = *(_QWORD *)(v62 + 16);
          if ((*(_BYTE *)(v63 + 33) & 1) != 0)
          {
            if ((*(_BYTE *)(v63 + 32) & 1) != 0)
              v64 = atan2(*(long double *)(v63 + 48), *(long double *)(v63 + 56));
            else
              v64 = *(double *)(v63 + 40);
          }
          else
          {
            v64 = *(double *)(v62 + 24);
          }
          v65 = *(_QWORD *)(v49 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter);
          v66 = *(_QWORD *)(v65 + 16);
          if (*(_BYTE *)(v66 + 33) == 1)
          {
            if ((*(_BYTE *)(v66 + 32) & 1) != 0)
              v43 = atan2(*(long double *)(v66 + 48), *(long double *)(v66 + 56));
            else
              v43 = *(double *)(v66 + 40);
          }
          else
          {
            v43 = *(double *)(v65 + 24);
          }
          if (v56)
            v44 = 0;
          else
            v44 = v55;
          if (v58)
            v45 = 0;
          else
            v45 = v57;
          type metadata accessor for DKISSDetection();
          v46 = swift_allocObject();
          *(double *)(v46 + 16) = v36;
          *(_QWORD *)(v46 + 24) = v51;
          *(_QWORD *)(v46 + 32) = v52;
          *(_QWORD *)(v46 + 40) = v53;
          *(_QWORD *)(v46 + 48) = v54;
          *(_QWORD *)(v46 + 56) = v182;
          *(_BYTE *)(v46 + 64) = 0;
          *(_QWORD *)(v46 + 72) = 0;
          *(_QWORD *)(v46 + 80) = v44;
          *(_BYTE *)(v46 + 88) = 0;
          *(_QWORD *)(v46 + 96) = v45;
          *(_BYTE *)(v46 + 104) = 0;
          *(_QWORD *)(v46 + 112) = v59;
          *(_BYTE *)(v46 + 120) = v61;
          *(_QWORD *)(v46 + 128) = v60;
          *(long double *)(v46 + 136) = v64;
          *(_BYTE *)(v46 + 144) = 0;
          *(long double *)(v46 + 152) = v43;
          *(_BYTE *)(v46 + 160) = 0;
          swift_retain();
          v47 = swift_retain();
          v48 = v174;
          MEMORY[0x24267D0CC](v47);
          if (*(_QWORD *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2401547D8();
          sub_240154814();
          sub_2401547B4();
          swift_release();
          swift_release();
          v39 = v184;
          v22 = (unint64_t)v185;
          v32 = v180;
          v41 = v181;
          v38 = v173;
          v40 = v172;
        }
        ++v42;
        swift_release();
      }
      while (v40 != v42);
    }
    swift_bridgeObjectRelease();
    v67 = sub_2400A91F4(v155, *(_BYTE *)(v39[5]+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_runSubjectSelection), v36);
    v68 = sub_240107B20(MEMORY[0x24BEE4AF8]);
    v22 = *(_QWORD *)(*(_QWORD *)(v39[5]
                                + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
    if (v22 >> 62)
    {
      swift_bridgeObjectRetain();
      v69 = sub_240154D30();
    }
    else
    {
      v69 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v177 = v68;
    if (v69)
    {
      v38 = 0;
      v39 = (_QWORD *)(v67 + 64);
      v182 = v22 & 0xC000000000000001;
      v172 = v22 & 0xFFFFFFFFFFFFFF8;
      v164 = v22 + 32;
      v173 = v22;
      v174 = (_QWORD *)v69;
      do
      {
        if (v182)
        {
          v72 = MEMORY[0x24267D4E0](v38, v22);
          v73 = __OFADD__(v38++, 1);
          if (v73)
            goto LABEL_121;
        }
        else
        {
          if (v38 >= *(_QWORD *)(v172 + 16))
            goto LABEL_122;
          v72 = *(_QWORD *)(v164 + 8 * v38);
          swift_retain();
          v73 = __OFADD__(v38++, 1);
          if (v73)
            goto LABEL_121;
        }
        v74 = 0;
        v75 = 1 << *(_BYTE *)(v67 + 32);
        if (v75 < 64)
          v76 = ~(-1 << v75);
        else
          v76 = -1;
        v77 = v76 & *(_QWORD *)(v67 + 64);
        v78 = (unint64_t)(v75 + 63) >> 6;
        do
        {
          if (v77)
          {
            v79 = __clz(__rbit64(v77));
            v77 &= v77 - 1;
            v80 = v79 | (v74 << 6);
          }
          else
          {
            v81 = v74 + 1;
            if (__OFADD__(v74, 1))
            {
              __break(1u);
              goto LABEL_120;
            }
            if (v81 >= v78)
              goto LABEL_35;
            v82 = v39[v81];
            ++v74;
            if (!v82)
            {
              v74 = v81 + 1;
              if (v81 + 1 >= v78)
                goto LABEL_35;
              v82 = v39[v74];
              if (!v82)
              {
                v74 = v81 + 2;
                if (v81 + 2 >= v78)
                  goto LABEL_35;
                v82 = v39[v74];
                if (!v82)
                {
                  v83 = v81 + 3;
                  if (v83 >= v78)
                  {
LABEL_35:
                    v70 = sub_240107A48((uint64_t)&unk_2510621D0);
                    v19 = v185;
                    ((void (*)(char *, uint64_t, uint64_t (*)()))v183)(v32, v184[6] + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v185);
                    sub_240138BDC(v70, (uint64_t)v32);
                    swift_bridgeObjectRelease();
                    swift_release();
                    v181(v32, (unint64_t)v19);
                    goto LABEL_36;
                  }
                  v82 = v39[v83];
                  if (!v82)
                  {
                    while (1)
                    {
                      v74 = v83 + 1;
                      if (__OFADD__(v83, 1))
                        break;
                      if (v74 >= v78)
                        goto LABEL_35;
                      v82 = v39[v74];
                      ++v83;
                      if (v82)
                        goto LABEL_62;
                    }
LABEL_120:
                    __break(1u);
LABEL_121:
                    __break(1u);
LABEL_122:
                    __break(1u);
LABEL_123:
                    __break(1u);
LABEL_124:
                    __break(1u);
LABEL_125:
                    __break(1u);
LABEL_126:
                    swift_bridgeObjectRetain();
                    v40 = sub_240154D30();
                    goto LABEL_4;
                  }
                  v74 = v83;
                }
              }
            }
LABEL_62:
            v77 = (v82 - 1) & v82;
            v80 = __clz(__rbit64(v82)) + (v74 << 6);
          }
          v84 = *(_QWORD *)(*(_QWORD *)(v67 + 56) + 24 * v80);
        }
        while (v84 < 0
             || v84 != *(_QWORD *)(v72 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId));
        v19 = *(uint64_t (**)())(*(_QWORD *)(v67 + 48) + 8 * v80);
        v85 = v32;
        v86 = v185;
        ((void (*)(char *, uint64_t, uint64_t (*)()))v183)(v85, v184[6] + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v185);
        swift_bridgeObjectRetain();
        v87 = swift_bridgeObjectRetain();
        sub_240138BDC(v87, (uint64_t)v180);
        v88 = v86;
        v32 = v180;
        v181(v180, (unint64_t)v88);
        v89 = v177;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v187 = v89;
        sub_240072464((uint64_t)v19, v84, isUniquelyReferenced_nonNull_native);
        v177 = v187;
        swift_release();
        v22 = v173;
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_36:
        v71 = (uint64_t)v178;
      }
      while ((_QWORD *)v38 != v174);
    }
    else
    {
      v71 = (uint64_t)v178;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v91 = *(_QWORD *)(*(_QWORD *)(v184[5]
                                + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
    if (v91 >> 62)
    {
      swift_bridgeObjectRetain();
      v92 = sub_240154D30();
    }
    else
    {
      v92 = *(_QWORD *)((v91 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    v93 = (uint64_t)v171;
    if (v92)
    {
      if (v92 >= 1)
      {
        v94 = 0;
        v153 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_useFramingFeedback;
        v95 = v91 & 0xC000000000000001;
        v156 = v91;
        v174 = (_QWORD *)v92;
        v173 = v91 & 0xC000000000000001;
        while (1)
        {
          if (v95)
          {
            v182 = MEMORY[0x24267D4E0](v94, v91);
          }
          else
          {
            v182 = *(_QWORD *)(v91 + 8 * v94 + 32);
            swift_retain();
          }
          v96 = v184[6];
          sub_240070B90(v96 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v93, &qword_256FB4430);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v176 + 48))(v93, 1, v179) == 1)
          {
            swift_release();
            sub_240070BD4(v93, &qword_256FB4430);
          }
          else
          {
            v19 = v175;
            v38 = (unint64_t)type metadata accessor for DKCamera;
            sub_2400A0E74(v93, (uint64_t)v175, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
            v97 = v96 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
            v98 = v185;
            ((void (*)(char *, uint64_t, uint64_t (*)()))v183)(v32, v97, v185);
            v99 = sub_240138FEC((uint64_t)v32);
            v181(v32, (unint64_t)v98);
            if (v99)
            {
              sub_240070B90(v99 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, v71, &qword_256FB4438);
              v100 = v170;
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v166 + 48))(v71, 1, v170) != 1)
              {
                v101 = (uint64_t)v169;
                sub_2400A0E74(v71, (uint64_t)v169, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
                v22 = *(int *)(v100 + 20);
                v102 = *(_QWORD *)(v101 + v22);
                v39 = (_QWORD *)v182;
                if (*(_QWORD *)(v102 + 16) < 3uLL)
                  goto LABEL_123;
                v172 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
                v36 = exp(-(*(double *)(v102 + 48) * *(double *)(v102 + 48)));
                v19 = *(uint64_t (**)())(v167 + 56);
                v103 = (uint64_t)v163;
                ((void (*)(char *, uint64_t, uint64_t, uint64_t (*)()))v19)(v163, 1, 1, v185);
                swift_retain();
                swift_retain();
                sub_240148324(0, 1, v103, v36);
                swift_release();
                sub_240070BD4(v103, &qword_256FB4CC8);
                swift_release();
                v104 = *(_QWORD *)(v184[5]
                                 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_unselectedTracks);
                v105 = *(_QWORD *)(v104 + 16);
                v164 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId;
                if (v105
                  && (v106 = sub_24013EF5C(*(_QWORD *)((char *)v39
                                                     + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId)),
                      (v107 & 1) != 0))
                {
                  v108 = v167;
                  v109 = *(_QWORD *)(v104 + 56) + *(_QWORD *)(v167 + 72) * v106;
                  v110 = (uint64_t)v160;
                  v111 = v185;
                  ((void (*)(char *, unint64_t, uint64_t (*)()))v183)(v160, v109, v185);
                  ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t (*)()))v19)(v110, 0, 1, v111);
                  v112 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)()))(v108 + 48))(v110, 1, v111);
                  v113 = (uint64_t)v162;
                  v114 = (uint64_t)v169;
                  if (v112 != 1)
                  {
                    v115 = v32;
                    v32 = v154;
                    v38 = (unint64_t)v185;
                    (*(void (**)(char *, uint64_t, uint64_t (*)()))(v167 + 32))(v154, v110, v185);
                    ((void (*)(char *, uint64_t, unint64_t))v183)(v115, v99 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_time, v38);
                    sub_24015428C();
                    v36 = v116;
                    v117 = v181;
                    v181(v115, v38);
                    v71 = (uint64_t)v178;
                    if (v36 >= *(double *)(v184[4] + 168))
                    {
                      v117(v32, v38);
                    }
                    else
                    {
                      if (*((_BYTE *)v184 + v153) == 1)
                      {
                        v118 = *(_QWORD *)((char *)v39
                                         + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter);
                        *(_BYTE *)(v118 + 49) = 0;
                        v119 = *(_QWORD *)(v118 + 16);
                        *(_BYTE *)(v119 + 33) = 0;
                        v120 = v119 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
                        swift_retain();
                        swift_retain();
                        sub_240070BD4(v120, &qword_256FB4CC8);
                        v121 = v120;
                        v122 = v185;
                        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)()))v19)(v121, 1, 1, v185);
                        swift_release();
                        swift_release();
                        v181(v154, (unint64_t)v122);
                        v32 = v180;
LABEL_113:
                        v189 = 2;
                        v187 = 0;
                        v188 = 0xE000000000000000;
                        sub_240154B38();
                        sub_2401546D0();
                        v186 = *(_QWORD *)(v99
                                         + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId);
                        sub_240154EBC();
                        sub_2401546D0();
                        swift_bridgeObjectRelease();
                        sub_2401546D0();
                        sub_2401548C8();
                        sub_2401546D0();
                        sub_2401548C8();
                        sub_2401546D0();
                        sub_24008C168();
                        swift_release();
                        sub_2401546D0();
                        swift_bridgeObjectRelease();
                        sub_2401546D0();
                        sub_24008C168();
                        swift_release();
                        sub_2401548C8();
                        sub_2401546D0();
                        sub_24008C168();
                        swift_release();
                        sub_2401546D0();
                        swift_bridgeObjectRelease();
                        sub_2401546D0();
                        v36 = *(double *)(sub_24008C168() + 24);
                        swift_release();
                        sub_2401548C8();
                        sub_2401546D0();
                        v150 = v187;
                        v151 = v188;
                        v152 = sub_24015494C();
                        _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v189, v150, v151, v152);
                        swift_bridgeObjectRelease();
                        swift_release();
                        swift_release();
                        sub_2400800C8((uint64_t)v169, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
                        sub_2400800C8((uint64_t)v175, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
                        v93 = (uint64_t)v171;
                        v92 = (uint64_t)v174;
                        v95 = v173;
                        v91 = v156;
                        goto LABEL_73;
                      }
                      v181(v154, (unint64_t)v185);
                    }
                    v123 = (uint64_t)v158;
                    v114 = (uint64_t)v169;
LABEL_91:
                    v124 = *(_QWORD *)(v114 + v22);
                    if (*(_QWORD *)(v124 + 16) < 3uLL)
                      goto LABEL_124;
                    v125 = *(_QWORD *)(v114 + *(int *)(v170 + 24));
                    if (*(_QWORD *)(v125 + 16) < 3uLL)
                      goto LABEL_125;
                    v126 = *(_QWORD *)(*(_QWORD *)(v99
                                                 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_speakingConfidence)
                                     + 24);
                    v127 = *(_QWORD *)(*(_QWORD *)(v99
                                                 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_lookingConfidence)
                                     + 24);
                    v128 = *(_QWORD *)(v124 + 48);
                    v129 = *(_QWORD *)(v125 + 48);
                    v130 = *(_QWORD *)((char *)v39
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
                    if (v130)
                    {
                      v131 = v185;
                      ((void (*)(uint64_t, uint64_t, uint64_t (*)()))v183)(v113, v130 + qword_256FC4890, v185);
                      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t (*)()))v19)(v113, 0, 1, v131);
                      v132 = v167;
                      v133 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t (*)()))(v167 + 48))(v113, 1, v131);
                      v134 = (uint64_t)v175;
                      if (v133 != 1)
                      {
                        (*(void (**)(char *, uint64_t, uint64_t (*)()))(v132 + 32))(v165, v113, v185);
                        goto LABEL_98;
                      }
                    }
                    else
                    {
                      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)()))v19)(v113, 1, 1, v185);
                      v134 = (uint64_t)v175;
                      v132 = v167;
                    }
                    sub_240154274();
                    sub_240070BD4(v113, &qword_256FB4CC8);
LABEL_98:
                    v135 = *(_QWORD *)((char *)v39
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
                    if (v135)
                    {
                      v136 = v185;
                      ((void (*)(uint64_t, uint64_t, uint64_t (*)()))v183)(v123, v135 + qword_256FC4890, v185);
                      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t (*)()))v19)(v123, 0, 1, v136);
                      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t (*)()))(v132 + 48))(v123, 1, v136) != 1)
                      {
                        v137 = *(void (**)(uint64_t, uint64_t, uint64_t (*)()))(v132 + 32);
                        v138 = v157;
                        v137(v157, v123, v185);
                        goto LABEL_103;
                      }
                    }
                    else
                    {
                      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)()))v19)(v123, 1, 1, v185);
                    }
                    v138 = v157;
                    sub_240154274();
                    sub_240070BD4(v123, &qword_256FB4CC8);
                    v137 = *(void (**)(uint64_t, uint64_t, uint64_t (*)()))(v132 + 32);
LABEL_103:
                    v139 = *(double *)(*(_QWORD *)(v99
                                                 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_saliencyConfidence)
                                     + 24);
                    v140 = *(_BYTE *)(v134 + *(int *)(v179 + 36));
                    v141 = v168;
                    *v168 = v126;
                    v141[1] = v127;
                    v141[2] = v128;
                    v141[3] = v129;
                    v142 = (int *)v161;
                    v143 = v185;
                    v137((uint64_t)v141 + *(int *)(v161 + 32), (uint64_t)v165, v185);
                    v137((uint64_t)v141 + v142[9], v138, v143);
                    *(double *)((char *)v141 + v142[10]) = v139;
                    *((_BYTE *)v141 + v142[11]) = v140;
                    v144 = *(unsigned __int8 *)(*(_QWORD *)((char *)v39
                                                          + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter)
                                              + 137);
                    if (v144 == 1)
                    {
                      swift_retain();
                      v146 = sub_240152E84((uint64_t)v168);
                      v71 = (uint64_t)v178;
                      v32 = v180;
                    }
                    else
                    {
                      v32 = v180;
                      if (v144 != 2)
                      {
                        v146 = 0;
                        v71 = (uint64_t)v178;
LABEL_109:
                        v147 = v177;
                        if (*(_QWORD *)(v177 + 16))
                        {
                          v148 = sub_24013EF5C(*(_QWORD *)(v182 + v164));
                          if ((v149 & v146 & 1) != 0)
                            sub_2400AA55C(*(_QWORD *)(*(_QWORD *)(v147 + 56) + 8 * v148));
                        }
                        sub_2400800C8((uint64_t)v168, type metadata accessor for DKPersonSelectionFilter.Signals);
                        goto LABEL_113;
                      }
                      v145 = (uint64_t)v163;
                      ((void (*)(char *, uint64_t, uint64_t, uint64_t (*)()))v19)(v163, 1, 1, v185);
                      swift_retain();
                      swift_retain();
                      sub_240148324(0, 1, v145, v139);
                      swift_release();
                      sub_240070BD4(v145, &qword_256FB4CC8);
                      v146 = 0;
                      v71 = (uint64_t)v178;
                    }
                    swift_release();
                    goto LABEL_109;
                  }
                }
                else
                {
                  v110 = (uint64_t)v160;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t (*)()))v19)(v160, 1, 1, v185);
                  v113 = (uint64_t)v162;
                  v114 = (uint64_t)v169;
                }
                sub_240070BD4(v110, &qword_256FB4CC8);
                v123 = (uint64_t)v158;
                goto LABEL_91;
              }
              sub_2400800C8((uint64_t)v175, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
              swift_release();
              swift_release();
              sub_240070BD4(v71, &qword_256FB4438);
              v93 = (uint64_t)v171;
              v92 = (uint64_t)v174;
              v95 = v173;
            }
            else
            {
              sub_2400800C8((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
              swift_release();
              v93 = (uint64_t)v171;
              v92 = (uint64_t)v174;
              v95 = v173;
            }
          }
LABEL_73:
          if (v92 == ++v94)
            goto LABEL_117;
        }
      }
      goto LABEL_130;
    }
LABEL_117:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

uint64_t sub_24012A09C(unint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v1 + 40)
                             + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  if (v3 >> 62)
    goto LABEL_38;
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v4)
  {
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_240154D30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    v6 = 0;
    v24 = v3 & 0xC000000000000001;
    v20 = v3 + 32;
    v21 = v3 & 0xFFFFFFFFFFFFFF8;
    v7 = a1 & 0xC000000000000001;
    v22 = v4;
    v23 = v3;
    while (v24)
    {
      v8 = MEMORY[0x24267D4E0](v6, v3);
      v9 = __OFADD__(v6++, 1);
      if (v9)
        goto LABEL_34;
LABEL_13:
      if (v5)
      {
        if (v7)
        {
          swift_bridgeObjectRetain();
          v10 = MEMORY[0x24267D4E0](0, a1);
        }
        else
        {
          if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_36;
          v10 = *(_QWORD *)(a1 + 32);
          swift_bridgeObjectRetain();
          swift_retain();
        }
        v3 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId;
        if (*(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) == *(_QWORD *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId))
        {
LABEL_18:
          swift_bridgeObjectRelease();
          v11 = *(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_saliencyFilter);
          *(_BYTE *)(v11 + 49) = 0;
          v12 = *(_QWORD *)(v11 + 16);
          *(_BYTE *)(v12 + 33) = 0;
          v13 = v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
          swift_retain();
          swift_retain();
          sub_240070BD4(v13, &qword_256FB4CC8);
          v14 = sub_240154310();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          swift_release();
          if (v5 != 1)
          {
            v15 = 5;
            do
            {
              v16 = v15 - 4;
              if (v7)
              {
                v17 = MEMORY[0x24267D4E0](v15 - 4, a1);
                v9 = __OFADD__(v16, 1);
                v18 = v15 - 3;
                if (v9)
                  goto LABEL_33;
              }
              else
              {
                if (v16 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_35;
                v17 = *(_QWORD *)(a1 + 8 * v15);
                swift_retain();
                v9 = __OFADD__(v16, 1);
                v18 = v15 - 3;
                if (v9)
                {
LABEL_33:
                  __break(1u);
                  goto LABEL_34;
                }
              }
              if (*(_QWORD *)(v8 + v3) == *(_QWORD *)(v17
                                                     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_trackerId))
                goto LABEL_18;
              swift_release();
              ++v15;
            }
            while (v18 != v5);
          }
          swift_release();
          swift_bridgeObjectRelease();
        }
        v4 = v22;
        v3 = v23;
        if (v6 == v22)
          return swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
        if (v6 == v4)
          return swift_bridgeObjectRelease();
      }
    }
    if (v6 >= *(_QWORD *)(v21 + 16))
      goto LABEL_37;
    v8 = *(_QWORD *)(v20 + 8 * v6);
    swift_retain();
    v9 = __OFADD__(v6++, 1);
    if (!v9)
      goto LABEL_13;
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
    v4 = sub_240154D30();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24012A3CC()
{
  uint64_t v0;

  swift_release();
  sub_24008648C(*(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest), *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 16));
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_24012A430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_24008648C(*(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest), *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 8), *(_BYTE *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 16));
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_24012A4F0()
{
  sub_24012A430();
  return swift_deallocClassInstance();
}

uint64_t sub_24012A514()
{
  return type metadata accessor for DKSubjectSelectionTask();
}

uint64_t type metadata accessor for DKSubjectSelectionTask()
{
  uint64_t result;

  result = qword_256FC0190;
  if (!qword_256FC0190)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24012A558()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_24012A5C8(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24013576C();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_24012A640(v6);
  return sub_240154BEC();
}

void sub_24012A640(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  uint64_t v29;
  double v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  char *v49;
  char *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  char v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  unint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  unint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  unint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *__dst;
  uint64_t v117;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_240154EB0();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_162;
    if (v4)
      sub_24012AE58(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_170;
  v7 = v5;
  v109 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v117 = MEMORY[0x24BEE4AF8];
    __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_128:
      v101 = v10;
      if (v13 >= 2)
      {
        v102 = *v109;
        do
        {
          v103 = v13 - 2;
          if (v13 < 2)
            goto LABEL_157;
          if (!v102)
            goto LABEL_169;
          v104 = v101;
          v105 = *(_QWORD *)&v101[16 * v103 + 32];
          v106 = *(_QWORD *)&v101[16 * v13 + 24];
          sub_24012AF98((char *)(v102 + 8 * v105), (char *)(v102 + 8 * *(_QWORD *)&v101[16 * v13 + 16]), v102 + 8 * v106, __dst);
          if (v2)
            break;
          if (v106 < v105)
            goto LABEL_158;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v104 = sub_2401356E0((uint64_t)v104);
          if (v103 >= *((_QWORD *)v104 + 2))
            goto LABEL_159;
          v107 = &v104[16 * v103 + 32];
          *(_QWORD *)v107 = v105;
          *((_QWORD *)v107 + 1) = v106;
          v108 = *((_QWORD *)v104 + 2);
          if (v13 > v108)
            goto LABEL_160;
          memmove(&v104[16 * v13 + 16], &v104[16 * v13 + 32], 16 * (v108 - v13));
          v101 = v104;
          *((_QWORD *)v104 + 2) = v108 - 1;
          v13 = v108 - 1;
        }
        while (v108 > 2);
      }
LABEL_125:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v117 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2401547B4();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v8 = v6 >> 1;
    type metadata accessor for DKPersonTracker();
    v9 = sub_2401547FC();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v117 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v110 = *a1 - 8;
  v111 = v7;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v113 = v4;
  while (1)
  {
    v14 = v11++;
    if (v11 < v4)
    {
      v15 = *(_QWORD *)(v12 + 8 * v11);
      v16 = *(_QWORD *)(v12 + 8 * v14);
      v17 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
      v18 = *(_QWORD *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
      v19 = *(_QWORD *)(v18 + 16);
      if (*(_BYTE *)(v19 + 33) == 1)
      {
        if ((*(_BYTE *)(v19 + 32) & 1) != 0)
          v20 = atan2(*(long double *)(v19 + 48), *(long double *)(v19 + 56));
        else
          v20 = *(double *)(v19 + 40);
      }
      else
      {
        v20 = *(double *)(v18 + 24);
      }
      v21 = *(_QWORD *)(v16 + v17);
      v22 = *(_QWORD *)(v21 + 16);
      if (*(_BYTE *)(v22 + 33) == 1)
      {
        if ((*(_BYTE *)(v22 + 32) & 1) != 0)
          v23 = atan2(*(long double *)(v22 + 48), *(long double *)(v22 + 56));
        else
          v23 = *(double *)(v22 + 40);
      }
      else
      {
        v23 = *(double *)(v21 + 24);
      }
      v11 = v14 + 2;
      if (v14 + 2 < v113)
      {
        while (1)
        {
          v24 = *(_QWORD *)(v12 + 8 * v11);
          v25 = *(_QWORD *)(v24 + v17);
          v26 = *(_QWORD *)(v25 + 16);
          if (*(_BYTE *)(v26 + 33) == 1)
            v27 = (*(_BYTE *)(v26 + 32) & 1) != 0
                ? atan2(*(long double *)(v26 + 48), *(long double *)(v26 + 56))
                : *(double *)(v26 + 40);
          else
            v27 = *(double *)(v25 + 24);
          v28 = *(_QWORD *)(v15 + v17);
          v29 = *(_QWORD *)(v28 + 16);
          if (*(_BYTE *)(v29 + 33) == 1)
            v30 = (*(_BYTE *)(v29 + 32) & 1) != 0
                ? atan2(*(long double *)(v29 + 48), *(long double *)(v29 + 56))
                : *(double *)(v29 + 40);
          else
            v30 = *(double *)(v28 + 24);
          if (v23 < v20 == v30 >= v27)
            break;
          ++v11;
          v15 = v24;
          if (v113 == v11)
          {
            v4 = v113;
            v11 = v113;
            if (v23 < v20)
              goto LABEL_42;
            goto LABEL_49;
          }
        }
      }
      v4 = v113;
      if (v23 < v20)
      {
LABEL_42:
        if (v11 < v14)
          goto LABEL_163;
        if (v14 < v11)
        {
          v31 = (uint64_t *)(v110 + 8 * v11);
          v32 = v11;
          v33 = v14;
          v34 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v33 != --v32)
            {
              if (!v12)
                goto LABEL_168;
              v35 = *v34;
              *v34 = *v31;
              *v31 = v35;
            }
            ++v33;
            --v31;
            ++v34;
          }
          while (v33 < v32);
        }
      }
    }
LABEL_49:
    if (v11 >= v4)
      goto LABEL_77;
    if (__OFSUB__(v11, v14))
      goto LABEL_161;
    if (v11 - v14 >= v111)
      goto LABEL_77;
    if (__OFADD__(v14, v111))
      goto LABEL_164;
    v36 = v14 + v111 >= v4 ? v4 : v14 + v111;
    if (v36 < v14)
      break;
    if (v11 != v36)
    {
      v37 = (uint64_t *)(v110 + 8 * v11);
      v112 = v14;
      v114 = v36;
      do
      {
        v38 = *(_QWORD *)(v12 + 8 * v11);
        v39 = v37;
        do
        {
          v40 = *v39;
          v41 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
          v42 = *(_QWORD *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
          v43 = *(_QWORD *)(v42 + 16);
          if (*(_BYTE *)(v43 + 33) == 1)
          {
            if ((*(_BYTE *)(v43 + 32) & 1) != 0)
              v44 = atan2(*(long double *)(v43 + 48), *(long double *)(v43 + 56));
            else
              v44 = *(double *)(v43 + 40);
          }
          else
          {
            v44 = *(double *)(v42 + 24);
          }
          v45 = *(_QWORD *)(v40 + v41);
          v46 = *(_QWORD *)(v45 + 16);
          if (*(_BYTE *)(v46 + 33) == 1)
          {
            if ((*(_BYTE *)(v46 + 32) & 1) != 0)
            {
              if (atan2(*(long double *)(v46 + 48), *(long double *)(v46 + 56)) >= v44)
                break;
            }
            else if (*(double *)(v46 + 40) >= v44)
            {
              break;
            }
          }
          else if (*(double *)(v45 + 24) >= v44)
          {
            break;
          }
          if (!v12)
            goto LABEL_166;
          *v39 = v38;
          v39[1] = v40;
          --v39;
          ++v14;
        }
        while (v11 != v14);
        ++v11;
        ++v37;
        v14 = v112;
      }
      while (v11 != v114);
      v11 = v114;
    }
LABEL_77:
    if (v11 < v14)
      goto LABEL_156;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_240135220(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v48 = *((_QWORD *)v10 + 2);
    v47 = *((_QWORD *)v10 + 3);
    v13 = v48 + 1;
    if (v48 >= v47 >> 1)
      v10 = sub_240135220((char *)(v47 > 1), v48 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v13;
    v49 = v10 + 32;
    v50 = &v10[16 * v48 + 32];
    *(_QWORD *)v50 = v14;
    *((_QWORD *)v50 + 1) = v11;
    if (v48)
    {
      v115 = v11;
      while (1)
      {
        v51 = v13 - 1;
        if (v13 >= 4)
        {
          v56 = &v49[16 * v13];
          v57 = *((_QWORD *)v56 - 8);
          v58 = *((_QWORD *)v56 - 7);
          v62 = __OFSUB__(v58, v57);
          v59 = v58 - v57;
          if (v62)
            goto LABEL_145;
          v61 = *((_QWORD *)v56 - 6);
          v60 = *((_QWORD *)v56 - 5);
          v62 = __OFSUB__(v60, v61);
          v54 = v60 - v61;
          v55 = v62;
          if (v62)
            goto LABEL_146;
          v63 = v13 - 2;
          v64 = &v49[16 * v13 - 32];
          v66 = *(_QWORD *)v64;
          v65 = *((_QWORD *)v64 + 1);
          v62 = __OFSUB__(v65, v66);
          v67 = v65 - v66;
          if (v62)
            goto LABEL_148;
          v62 = __OFADD__(v54, v67);
          v68 = v54 + v67;
          if (v62)
            goto LABEL_151;
          if (v68 >= v59)
          {
            v86 = &v49[16 * v51];
            v88 = *(_QWORD *)v86;
            v87 = *((_QWORD *)v86 + 1);
            v62 = __OFSUB__(v87, v88);
            v89 = v87 - v88;
            if (v62)
              goto LABEL_155;
            v79 = v54 < v89;
            goto LABEL_115;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v80 = *((_QWORD *)v10 + 4);
            v81 = *((_QWORD *)v10 + 5);
            v62 = __OFSUB__(v81, v80);
            v73 = v81 - v80;
            v74 = v62;
            goto LABEL_109;
          }
          v53 = *((_QWORD *)v10 + 4);
          v52 = *((_QWORD *)v10 + 5);
          v62 = __OFSUB__(v52, v53);
          v54 = v52 - v53;
          v55 = v62;
        }
        if ((v55 & 1) != 0)
          goto LABEL_147;
        v63 = v13 - 2;
        v69 = &v49[16 * v13 - 32];
        v71 = *(_QWORD *)v69;
        v70 = *((_QWORD *)v69 + 1);
        v72 = __OFSUB__(v70, v71);
        v73 = v70 - v71;
        v74 = v72;
        if (v72)
          goto LABEL_150;
        v75 = &v49[16 * v51];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v62 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v62)
          goto LABEL_153;
        if (__OFADD__(v73, v78))
          goto LABEL_154;
        if (v73 + v78 >= v54)
        {
          v79 = v54 < v78;
LABEL_115:
          if (v79)
            v51 = v63;
          goto LABEL_117;
        }
LABEL_109:
        if ((v74 & 1) != 0)
          goto LABEL_149;
        v82 = &v49[16 * v51];
        v84 = *(_QWORD *)v82;
        v83 = *((_QWORD *)v82 + 1);
        v62 = __OFSUB__(v83, v84);
        v85 = v83 - v84;
        if (v62)
          goto LABEL_152;
        if (v85 < v73)
          goto LABEL_14;
LABEL_117:
        v90 = v51 - 1;
        if (v51 - 1 >= v13)
        {
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
          goto LABEL_165;
        }
        v91 = v12;
        if (!v12)
          goto LABEL_167;
        v92 = v10;
        v93 = &v49[16 * v90];
        v94 = *(_QWORD *)v93;
        v95 = v49;
        v96 = v51;
        v97 = &v49[16 * v51];
        v98 = *((_QWORD *)v97 + 1);
        v99 = v91;
        sub_24012AF98((char *)(v91 + 8 * *(_QWORD *)v93), (char *)(v91 + 8 * *(_QWORD *)v97), v91 + 8 * v98, __dst);
        if (v1)
          goto LABEL_125;
        if (v98 < v94)
          goto LABEL_142;
        if (v96 > *((_QWORD *)v92 + 2))
          goto LABEL_143;
        *(_QWORD *)v93 = v94;
        *(_QWORD *)&v95[16 * v90 + 8] = v98;
        v100 = *((_QWORD *)v92 + 2);
        if (v96 >= v100)
          goto LABEL_144;
        v10 = v92;
        v13 = v100 - 1;
        memmove(v97, v97 + 16, 16 * (v100 - 1 - v96));
        v49 = v95;
        *((_QWORD *)v92 + 2) = v100 - 1;
        v12 = v99;
        v11 = v115;
        if (v100 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v4 = v113;
    if (v11 >= v113)
    {
      v2 = v1;
      goto LABEL_128;
    }
  }
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  sub_240154CF4();
  __break(1u);
}

void sub_24012AE58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t v16;

  if (a3 != a2)
  {
    v4 = a3;
    v5 = *a4;
    v6 = *a4 + 8 * a3 - 8;
LABEL_5:
    v7 = *(_QWORD *)(v5 + 8 * v4);
    v8 = a1;
    v9 = (uint64_t *)v6;
    while (1)
    {
      v10 = *v9;
      v11 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
      v12 = *(_QWORD *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
      v13 = *(_QWORD *)(v12 + 16);
      if (*(_BYTE *)(v13 + 33) == 1)
        v14 = (*(_BYTE *)(v13 + 32) & 1) != 0
            ? atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56))
            : *(double *)(v13 + 40);
      else
        v14 = *(double *)(v12 + 24);
      v15 = *(_QWORD *)(v10 + v11);
      v16 = *(_QWORD *)(v15 + 16);
      if (*(_BYTE *)(v16 + 33) == 1)
      {
        if ((*(_BYTE *)(v16 + 32) & 1) != 0)
        {
          if (atan2(*(long double *)(v16 + 48), *(long double *)(v16 + 56)) >= v14)
            goto LABEL_4;
        }
        else if (*(double *)(v16 + 40) >= v14)
        {
          goto LABEL_4;
        }
      }
      else if (*(double *)(v15 + 24) >= v14)
      {
        goto LABEL_4;
      }
      if (!v5)
        break;
      *v9 = v7;
      v9[1] = v10;
      --v9;
      if (v4 == ++v8)
      {
LABEL_4:
        ++v4;
        v6 += 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
    }
    __break(1u);
  }
}

uint64_t sub_24012AF98(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  double v34;
  char *v35;
  uint64_t result;
  uint64_t *v37;
  uint64_t *v38;
  char *v39;

  v4 = (uint64_t *)__dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v38 = (uint64_t *)__dst;
  v39 = __src;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v24 = &v4[v13];
      v37 = v24;
      v39 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v25 = (char *)(a3 - 8);
        do
        {
          v27 = v6 - 8;
          v26 = *((_QWORD *)v6 - 1);
          v28 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
          v29 = *(_QWORD *)(*(v24 - 1) + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
          v30 = *(_QWORD *)(v29 + 16);
          if (*(_BYTE *)(v30 + 33) == 1)
          {
            if ((*(_BYTE *)(v30 + 32) & 1) != 0)
              v31 = atan2(*(long double *)(v30 + 48), *(long double *)(v30 + 56));
            else
              v31 = *(double *)(v30 + 40);
          }
          else
          {
            v31 = *(double *)(v29 + 24);
          }
          v32 = *(_QWORD *)(v26 + v28);
          v33 = *(_QWORD *)(v32 + 16);
          if (*(_BYTE *)(v33 + 33) == 1)
          {
            if ((*(_BYTE *)(v33 + 32) & 1) != 0)
              v34 = atan2(*(long double *)(v33 + 48), *(long double *)(v33 + 56));
            else
              v34 = *(double *)(v33 + 40);
          }
          else
          {
            v34 = *(double *)(v32 + 24);
          }
          v35 = v25 + 8;
          if (v34 >= v31)
          {
            v37 = v24 - 1;
            if (v35 < (char *)v24 || v25 >= (char *)v24 || v35 != (char *)v24)
              *(_QWORD *)v25 = *(v24 - 1);
            --v24;
            if (v6 <= v7)
              break;
          }
          else
          {
            if (v35 != v6 || v25 >= v6)
              *(_QWORD *)v25 = v26;
            v39 = v6 - 8;
            v6 -= 8;
            if (v27 <= v7)
              break;
          }
          v25 -= 8;
        }
        while (v24 > v4);
      }
LABEL_62:
      sub_240135528((void **)&v39, (const void **)&v38, &v37);
      return 1;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v37 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      while (1)
      {
        v15 = *(_QWORD *)v6;
        v16 = *v4;
        v17 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
        v18 = *(_QWORD *)(*(_QWORD *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
        v19 = *(_QWORD *)(v18 + 16);
        if (*(_BYTE *)(v19 + 33) == 1)
        {
          if ((*(_BYTE *)(v19 + 32) & 1) != 0)
            v20 = atan2(*(long double *)(v19 + 48), *(long double *)(v19 + 56));
          else
            v20 = *(double *)(v19 + 40);
        }
        else
        {
          v20 = *(double *)(v18 + 24);
        }
        v21 = *(_QWORD *)(v16 + v17);
        v22 = *(_QWORD *)(v21 + 16);
        if (*(_BYTE *)(v22 + 33) == 1)
        {
          if ((*(_BYTE *)(v22 + 32) & 1) != 0)
          {
            if (atan2(*(long double *)(v22 + 48), *(long double *)(v22 + 56)) < v20)
              goto LABEL_22;
          }
          else if (*(double *)(v22 + 40) < v20)
          {
LABEL_22:
            v23 = v6 + 8;
            if (v7 < v6 || v7 >= v23 || v7 != v6)
              *(_QWORD *)v7 = v15;
            goto LABEL_30;
          }
        }
        else if (*(double *)(v21 + 24) < v20)
        {
          goto LABEL_22;
        }
        if (v7 != (char *)v4)
          *(_QWORD *)v7 = v16;
        v38 = ++v4;
        v23 = v6;
LABEL_30:
        v7 += 8;
        if (v4 < v14)
        {
          v6 = v23;
          if ((unint64_t)v23 < a3)
            continue;
        }
        v39 = v7;
        goto LABEL_62;
      }
    }
    goto LABEL_62;
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24012B314(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  unint64_t v12;
  _QWORD v13[2];
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v15 = a2;
  v5 = sub_240154310();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_14;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    result = MEMORY[0x24BEE4AF8];
    if (!v9)
      break;
    v16 = MEMORY[0x24BEE4AF8];
    result = sub_240154C04();
    if (v9 < 0)
    {
      __break(1u);
      return result;
    }
    v11 = 0;
    v13[1] = v3;
    v14 = a1 & 0xC000000000000001;
    v12 = a1;
    while (v9 != v11)
    {
      if (v14)
        MEMORY[0x24267D4E0](v11, a1);
      else
        swift_retain();
      ++v11;
      (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v15 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
      sub_240138FEC((uint64_t)v8);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_release();
      sub_240154BE0();
      v3 = *(_QWORD *)(v16 + 16);
      sub_240154C10();
      sub_240154C1C();
      sub_240154BEC();
      a1 = v12;
      if (v9 == v11)
        return v16;
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v9 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24012B4D4(unint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[2];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v3 = v2;
  v21 = a2;
  v5 = sub_240154310();
  v6 = *(_QWORD *)(v5 - 8);
  v19 = v5;
  v20 = v6;
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    v9 = sub_240154D30();
    if (v9)
      goto LABEL_3;
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v9)
    {
LABEL_3:
      v18[1] = v3;
      v22 = a1 & 0xC000000000000001;
      v10 = 4;
      v11 = v19;
      while (1)
      {
        v12 = v10 - 4;
        if (v22)
        {
          v3 = MEMORY[0x24267D4E0](v10 - 4, a1);
          v13 = v10 - 3;
          if (__OFADD__(v12, 1))
            goto LABEL_17;
        }
        else
        {
          v3 = *(_QWORD *)(a1 + 8 * v10);
          swift_retain();
          v13 = v10 - 3;
          if (__OFADD__(v12, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        if (*(uint64_t *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence)
                        + 16) < 1)
        {
          swift_release();
        }
        else
        {
          v14 = v20;
          (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v8, *(_QWORD *)(v21 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v11);
          v15 = sub_240138FEC((uint64_t)v8);
          (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v11);
          v16 = swift_release();
          if (v15)
          {
            MEMORY[0x24267D0CC](v16);
            if (*(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2401547D8();
            sub_240154814();
            sub_2401547B4();
          }
        }
        ++v10;
        if (v13 == v9)
        {
          swift_bridgeObjectRelease();
          return v23;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_24012B6F4(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t i;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  long double v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  long double v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  os_log_type_t v40;
  unint64_t v41;
  uint64_t result;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  char v49[9];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v43 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker);
  v44 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers;
  v7 = *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  v47 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)v7 >> 62)
  {
    if (v7 < 0)
      v1 = v7;
    else
      v1 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
    v8 = sub_240154D30();
    v45 = v6;
    if (v8)
      goto LABEL_3;
LABEL_32:
    swift_bridgeObjectRelease();
    v1 = MEMORY[0x24BEE4AF8];
    if ((MEMORY[0x24BEE4AF8] & 0x8000000000000000) != 0)
      goto LABEL_37;
    goto LABEL_33;
  }
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  v45 = v6;
  if (!v8)
    goto LABEL_32;
LABEL_3:
  if (v8 < 1)
  {
    __break(1u);
    goto LABEL_50;
  }
  for (i = 0; i != v8; ++i)
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x24267D4E0](i, v7);
    }
    else
    {
      v11 = *(_QWORD *)(v7 + 8 * i + 32);
      swift_retain();
    }
    v12 = *(_QWORD *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter);
    v13 = *(_QWORD *)(v12 + 16);
    if (*(_BYTE *)(v13 + 33) == 1)
    {
      if ((*(_BYTE *)(v13 + 32) & 1) != 0)
        v14 = atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56));
      else
        v14 = *(double *)(v13 + 40);
    }
    else
    {
      v14 = *(double *)(v12 + 24);
    }
    v15 = *(double *)(v12 + 32);
    if ((*(_BYTE *)(v12 + 48) & 1) != 0)
    {
      v10 = (_BYTE *)(v12 + 49);
      if (v15 < v14)
        goto LABEL_6;
LABEL_22:
      *v10 = 0;
      goto LABEL_23;
    }
    if (v15 < v14)
    {
      v10 = (_BYTE *)(v12 + 49);
LABEL_6:
      *v10 = 1;
LABEL_7:
      sub_240154BE0();
      v2 = *(_QWORD *)(v47 + 16);
      sub_240154C10();
      sub_240154C1C();
      sub_240154BEC();
      continue;
    }
    v10 = (_BYTE *)(v12 + 49);
    if (v14 < *(double *)(v12 + 40))
      goto LABEL_22;
    if ((*v10 & 1) != 0)
      goto LABEL_7;
LABEL_23:
    swift_release();
  }
  swift_bridgeObjectRelease();
  v1 = v47;
  if (v47 < 0)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    v16 = sub_240154D30();
    swift_release();
    if (!v16)
      goto LABEL_38;
LABEL_35:
    v6 = 0;
    if ((v1 & 0x8000000000000000) == 0)
      goto LABEL_52;
LABEL_91:
    while (2)
    {
      while (2)
      {
        v41 = swift_bridgeObjectRetain();
        v24 = (uint64_t)sub_24013FE98(v41);
        swift_bridgeObjectRelease();
LABEL_54:
        v47 = v24;
        sub_24012A5C8(&v47);
        if (v6)
          goto LABEL_101;
        swift_bridgeObjectRelease();
        v25 = v47;
        if (v8)
        {
          if (v8 >= 1)
          {
            v6 = 0;
            do
            {
              if ((v7 & 0xC000000000000001) != 0)
              {
                v28 = MEMORY[0x24267D4E0](v6, v7);
              }
              else
              {
                v28 = *(_QWORD *)(v7 + 8 * v6 + 32);
                swift_retain();
              }
              v29 = *(_QWORD *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
              v30 = *(_QWORD *)(v29 + 16);
              if (*(_BYTE *)(v30 + 33) == 1)
              {
                if ((*(_BYTE *)(v30 + 32) & 1) != 0)
                  v26 = atan2(*(long double *)(v30 + 48), *(long double *)(v30 + 56));
                else
                  v26 = *(double *)(v30 + 40);
              }
              else
              {
                v26 = *(double *)(v29 + 24);
              }
              ++v6;
              __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6228);
              v27 = swift_allocObject();
              *(_QWORD *)(v27 + 16) = -1;
              *(long double *)(v27 + 24) = v26;
              v2 = *(_QWORD *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence);
              *(_QWORD *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence) = v27;
              swift_release();
              swift_release();
            }
            while (v8 != v6);
            break;
          }
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          v19 = MEMORY[0x24267D4E0](0, v2);
LABEL_47:
          swift_release();
          swift_release();
          v2 = *(_QWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter);
          *(_BYTE *)(v2 + 136) = 1;
          v20 = sub_240154310();
          v21 = (uint64_t)v43;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v43, 1, 1, v20);
          swift_retain();
          swift_retain();
          sub_240148324(0x3FF0000000000000, 0, v21, 1.0);
          swift_release();
          sub_240070BD4(v21, &qword_256FB4CC8);
          swift_release();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256FB9BC0);
          v22 = swift_allocObject();
          *(_OWORD *)(v22 + 16) = xmmword_24015F850;
          *(_QWORD *)(v22 + 32) = v19;
          v47 = v22;
          sub_2401547B4();
          v1 = v47;
          if (v47 < 0)
            continue;
LABEL_52:
          if ((v1 & 0x4000000000000000) != 0)
            continue;
          v24 = v1 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          goto LABEL_54;
        }
        break;
      }
      swift_bridgeObjectRelease();
      if (v25 < 0 || (v25 & 0x4000000000000000) != 0)
      {
        swift_bridgeObjectRetain();
        v7 = sub_240154D30();
        swift_release();
        if (v7)
        {
LABEL_70:
          if (v7 >= 1)
          {
            v6 = 0;
            v2 = v25 & 0xC000000000000001;
            v8 = (uint64_t)&qword_256FB6228;
            while (1)
            {
              if (v2)
              {
                v31 = MEMORY[0x24267D4E0](v6, v25);
              }
              else
              {
                v31 = *(_QWORD *)(v25 + 8 * v6 + 32);
                swift_retain();
              }
              v32 = *(_QWORD *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter);
              v33 = *(_QWORD *)(v32 + 16);
              if (*(_BYTE *)(v33 + 33) == 1)
                v34 = (*(_BYTE *)(v33 + 32) & 1) != 0
                    ? atan2(*(long double *)(v33 + 48), *(long double *)(v33 + 56))
                    : *(double *)(v33 + 40);
              else
                v34 = *(double *)(v32 + 24);
              __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6228);
              v35 = swift_allocObject();
              *(_QWORD *)(v35 + 16) = v6 + 1;
              *(long double *)(v35 + 24) = v34;
              *(_QWORD *)(v31 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence) = v35;
              swift_release();
              swift_release();
              if (v6 == 0x7FFFFFFFFFFFFFFELL)
                break;
              if (v7 == ++v6)
                goto LABEL_82;
            }
            __break(1u);
            continue;
          }
          goto LABEL_97;
        }
      }
      else
      {
        v7 = *(_QWORD *)(v25 + 16);
        if (v7)
          goto LABEL_70;
      }
      break;
    }
LABEL_82:
    swift_release();
    v7 = *(_QWORD *)(v45 + v44);
    if ((unint64_t)v7 >> 62)
    {
      swift_bridgeObjectRetain();
      v6 = sub_240154D30();
      if (!v6)
        return swift_bridgeObjectRelease();
    }
    else
    {
      v6 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v6)
        return swift_bridgeObjectRelease();
    }
    if (v6 >= 1)
    {
      v36 = 0;
      do
      {
        if ((v7 & 0xC000000000000001) != 0)
        {
          v37 = MEMORY[0x24267D4E0](v36, v7);
        }
        else
        {
          v37 = *(_QWORD *)(v7 + 8 * v36 + 32);
          swift_retain();
        }
        ++v36;
        v49[0] = 2;
        v47 = 0;
        v48 = 0xE000000000000000;
        sub_240154B38();
        swift_bridgeObjectRelease();
        v47 = 0x3D6E6F73726550;
        v48 = 0xE700000000000000;
        v46 = *(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
        sub_240154EBC();
        sub_2401546D0();
        swift_bridgeObjectRelease();
        sub_2401546D0();
        v46 = *(_QWORD *)(*(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence)
                        + 16);
        sub_240154EBC();
        sub_2401546D0();
        swift_bridgeObjectRelease();
        v38 = v47;
        v39 = v48;
        v40 = sub_24015494C();
        _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v49, v38, v39, v40);
        swift_bridgeObjectRelease();
        swift_release();
      }
      while (v6 != v36);
      return swift_bridgeObjectRelease();
    }
    goto LABEL_98;
  }
LABEL_33:
  if ((v1 & 0x4000000000000000) != 0)
    goto LABEL_37;
  if (*(_QWORD *)(v1 + 16))
    goto LABEL_35;
LABEL_38:
  if ((unint64_t)v7 >> 62)
  {
    v18 = swift_bridgeObjectRetain();
    v17 = (uint64_t)sub_24013FE98(v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    v17 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  v47 = v17;
  v6 = 0;
  sub_24012A5C8(&v47);
  v2 = v47;
  if (v47 < 0 || (v47 & 0x4000000000000000) != 0)
  {
LABEL_50:
    swift_bridgeObjectRetain();
    v23 = sub_240154D30();
    swift_release();
    if (v23)
      goto LABEL_44;
LABEL_51:
    swift_release();
    if ((v1 & 0x8000000000000000) == 0)
      goto LABEL_52;
    goto LABEL_91;
  }
  if (!*(_QWORD *)(v47 + 16))
    goto LABEL_51;
LABEL_44:
  if ((v2 & 0xC000000000000001) != 0)
    goto LABEL_99;
  if (*(_QWORD *)(v2 + 16))
  {
    v19 = *(_QWORD *)(v2 + 32);
    swift_retain();
    goto LABEL_47;
  }
  __break(1u);
LABEL_101:
  swift_release();
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_24012BEF0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_240086478(a1, a2, a3);
  return a1;
}

unint64_t sub_24012BF04(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v4 = a1;
  v16 = MEMORY[0x24BEE4AF8];
  if (a1 >> 62)
  {
LABEL_18:
    v5 = sub_240154D30();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_3:
      v6 = 0;
      v7 = v4 & 0xC000000000000001;
      v8 = v4 & 0xFFFFFFFFFFFFFF8;
      v13 = v5;
      v14 = v4;
      while (1)
      {
        if (v7)
        {
          v9 = MEMORY[0x24267D4E0](v6, v4);
          v10 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return a2;
          }
        }
        else
        {
          if (v6 >= *(_QWORD *)(v8 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          v9 = *(_QWORD *)(v4 + 8 * v6 + 32);
          swift_retain();
          v10 = v6 + 1;
          if (__OFADD__(v6, 1))
            goto LABEL_14;
        }
        v15 = v9;
        v11 = sub_2401262A4((uint64_t)&v15, a2);
        if (v2)
          goto LABEL_15;
        if ((v11 & 1) != 0)
        {
          sub_240154BE0();
          sub_240154C10();
          sub_240154C1C();
          sub_240154BEC();
          v5 = v13;
          v4 = v14;
        }
        else
        {
          swift_release();
        }
        ++v6;
        if (v10 == v5)
        {
          a2 = v16;
          goto LABEL_20;
        }
      }
    }
  }
  a2 = MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_24012C0C0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[17] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v2 = sub_240154310();
  v1[21] = v2;
  v1[22] = *(_QWORD *)(v2 - 8);
  v1[23] = swift_task_alloc();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  v1[29] = swift_task_alloc();
  v3 = type metadata accessor for DKCamera();
  v1[30] = v3;
  v1[31] = *(_QWORD *)(v3 - 8);
  v1[32] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24012C1EC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  BOOL v20;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  char v41;
  __CVBuffer *v42;
  __CVBuffer *v43;
  uint64_t v44;
  char v45;
  char v46;
  CVPixelBufferRef v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  __CVBuffer *v50;
  uint64_t v51;
  uint64_t v52;
  unsigned int (*v53)(uint64_t, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  double v57;
  double v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  double v68;
  double v69;
  void (*v70)(uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  unint64_t v77;
  __CVBuffer *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  double v90;
  double v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  os_log_type_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v106;
  double v107;
  double v108;
  void (*v109)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v110;
  void (*v111)(uint64_t, uint64_t, uint64_t);
  __CVBuffer *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int v116;
  CVPixelBufferRef pixelBuffer;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  unint64_t v127;
  uint64_t v128;
  unint64_t v129;
  uint64_t v130;
  char v131;
  uint64_t v132;
  unint64_t v133;

  v1 = v0[30];
  v2 = v0[31];
  v3 = v0[29];
  v4 = v0[17];
  sub_240070B90(*(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v3, &qword_256FB4430);
  LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1);
  if ((_DWORD)v5 == 1)
  {
    sub_240070BD4(v0[29], &qword_256FB4430);
    goto LABEL_133;
  }
  v126 = v0;
  v6 = v0[17];
  sub_240070AF8(v0[29], v0[32]);
  v7 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 40)
                             + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  if ((v7 & 0x8000000000000000) != 0 || (v7 & 0x4000000000000000) != 0)
  {
LABEL_135:
    swift_bridgeObjectRetain_n();
    v8 = (uint64_t)sub_24013FE98(v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = v7 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain_n();
  }
  v132 = v8;
  sub_24012D94C(&v132);
  v116 = (int)v5;
  swift_bridgeObjectRelease();
  v124 = v132;
  if (v132 < 0 || (v132 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v121 = sub_240154D30();
    swift_release();
  }
  else
  {
    v121 = *(_QWORD *)(v132 + 16);
  }
  v5 = v126;
  if (!v121)
  {
LABEL_131:
    swift_release();
    sub_240070B3C(v5[32]);
    v0 = v5;
    goto LABEL_132;
  }
  v7 = 0;
  v115 = v126[32];
  v9 = v126[22];
  v113 = OBJC_IVAR____TtC23IntelligentTrackingCore22DKSpeakerDetectionTask_cachedModel;
  v114 = v126[17];
  v123 = v9;
  while (1)
  {
    if ((v124 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x24267D4E0](v7, v124);
      v12 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_134;
    }
    else
    {
      v11 = *(_QWORD *)(v124 + 8 * v7 + 32);
      swift_retain();
      v12 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
LABEL_134:
        __break(1u);
        goto LABEL_135;
      }
    }
    v13 = *(_QWORD *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
    v127 = v12;
    v129 = v7;
    if (v13)
    {
      v14 = *(_QWORD *)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 200));
      if (v14)
      {
        v15 = *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop);
        if (v15)
        {
          if ((*(_BYTE *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw + 8) & 1) == 0)
            break;
        }
      }
    }
LABEL_61:
    v51 = v5[21];
    v52 = v5[19];
    sub_240070B90(*(_QWORD *)(*(_QWORD *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter) + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, v52, &qword_256FB4CC8);
    v53 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v53(v52, 1, v51) == 1)
    {
      sub_240070BD4(v5[19], &qword_256FB4CC8);
    }
    else
    {
      v54 = v5[27];
      v55 = v5[21];
      (*(void (**)(_QWORD, _QWORD, uint64_t))(v9 + 32))(v5[24], v5[19], v55);
      v56 = v4;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v54, *(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v55);
      sub_24015428C();
      v58 = v57;
      v59 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v59(v54, v55);
      v60 = v5[24];
      v61 = v5[21];
      if (v58 <= 2.0)
      {
        v59(v5[24], v5[21]);
      }
      else
      {
        v62 = v126[20];
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v62, 1, 1, v61);
        swift_retain();
        swift_retain();
        sub_240148324(0, 1, v62, 0.0);
        swift_release();
        swift_release();
        v63 = v62;
        v5 = v126;
        sub_240070BD4(v63, &qword_256FB4CC8);
        v59(v60, v61);
      }
      v4 = v56;
    }
    v64 = v5[21];
    v65 = v5[18];
    sub_240070B90(*(_QWORD *)(*(_QWORD *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter) + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, v65, &qword_256FB4CC8);
    if (v53(v65, 1, v64) == 1)
    {
      v10 = v5[18];
      swift_release();
      sub_240070BD4(v10, &qword_256FB4CC8);
      v9 = v123;
    }
    else
    {
      v66 = v5[27];
      v67 = v5[21];
      v9 = v123;
      (*(void (**)(_QWORD, _QWORD, uint64_t))(v123 + 32))(v5[23], v5[18], v67);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 16))(v66, *(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v67);
      sub_24015428C();
      v69 = v68;
      v70 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
      v70(v66, v67);
      v71 = v5[23];
      v72 = v5[21];
      if (v69 <= 2.0)
      {
        v70(v5[23], v5[21]);
        swift_release();
      }
      else
      {
        v73 = v126[20];
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56))(v73, 1, 1, v72);
        swift_retain();
        swift_retain();
        sub_240148324(0, 1, v73, 0.0);
        swift_release();
        swift_release();
        swift_release();
        v74 = v73;
        v5 = v126;
        sub_240070BD4(v74, &qword_256FB4CC8);
        v70(v71, v72);
      }
    }
    v7 = v129 + 1;
    if (v127 == v121)
      goto LABEL_131;
  }
  v118 = (uint64_t *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceCropBuffer);
  v16 = *(_QWORD *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceCropBuffer);
  if (v16 >> 62)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v17 = sub_240154D30();
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  v119 = v15;
  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  v20 = __OFSUB__(v17, 1);
  v21 = v17 - 1;
  if (!v20)
  {
    if ((v16 & 0xC000000000000001) != 0)
    {
      MEMORY[0x24267D4E0](v21, v16);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
    }
    else
    {
      if ((v21 & 0x8000000000000000) != 0)
        goto LABEL_137;
      v22 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();
      if (v21 >= v22)
        goto LABEL_138;
    }
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v23(v5[28], *(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5[21]);
    v24 = *v118;
    if ((unint64_t)*v118 >> 62)
    {
      swift_bridgeObjectRetain_n();
      v25 = sub_240154D30();
      swift_bridgeObjectRelease();
      if (!v25)
        goto LABEL_152;
    }
    else
    {
      v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v25)
        goto LABEL_152;
    }
    v26 = v25 - 1;
    if (__OFSUB__(v25, 1))
      goto LABEL_139;
    if ((v24 & 0xC000000000000001) != 0)
    {
      v27 = MEMORY[0x24267D4E0](v26, v24);
    }
    else
    {
      if ((v26 & 0x8000000000000000) != 0)
        goto LABEL_140;
      if (v26 >= *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_141;
      v27 = *(_QWORD *)(v24 + 8 * v26 + 32);
      swift_retain();
    }
    v28 = v5;
    v29 = v5[28];
    v30 = v28[27];
    v31 = v28[21];
    swift_bridgeObjectRelease();
    v23(v30, v27 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time, v31);
    swift_release();
    sub_24015428C();
    v33 = v32;
    v34 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
    v34(v30, v31);
    v35 = v31;
    v9 = v123;
    v34(v29, v35);
    if (v33 <= 0.125)
    {
      swift_release();
      swift_release();
      swift_release();
      v5 = v126;
      goto LABEL_61;
    }
LABEL_40:
    v126[15] = 128;
    v132 = sub_240154EBC();
    v133 = v36;
    sub_2401546D0();
    v126[14] = 128;
    sub_240154EBC();
    sub_2401546D0();
    swift_bridgeObjectRelease();
    v37 = v132;
    v38 = v133;
    v39 = *(_QWORD *)(v119 + 56);
    if (*(_QWORD *)(v39 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v40 = sub_24013F014(v37, v38);
      if ((v41 & 1) != 0)
      {
        pixelBuffer = (CVPixelBufferRef)*(id *)(*(_QWORD *)(v39 + 56) + 8 * v40);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
LABEL_45:
        v5 = v126;
        if (*(_BYTE *)v126[32] == 1)
        {
          switch(*(_BYTE *)(v115 + 1))
          {
            case 1:
              v43 = pixelBuffer;
              v44 = 90;
              goto LABEL_53;
            case 2:
              v43 = pixelBuffer;
              v44 = -90;
              goto LABEL_53;
            case 3:
              v43 = pixelBuffer;
              v44 = 0;
              v45 = 0;
              v46 = 1;
              goto LABEL_59;
            case 4:
              v43 = pixelBuffer;
              v44 = 0;
LABEL_53:
              v45 = 1;
              goto LABEL_58;
            default:
              goto LABEL_71;
          }
        }
        switch(*(_BYTE *)(v115 + 1))
        {
          case 1:
            v43 = pixelBuffer;
            v44 = 90;
            goto LABEL_57;
          case 2:
            v43 = pixelBuffer;
            v44 = -90;
            goto LABEL_57;
          case 3:
            v43 = pixelBuffer;
            v44 = 0;
            goto LABEL_57;
          case 4:
            v43 = pixelBuffer;
            v44 = 180;
LABEL_57:
            v45 = 0;
LABEL_58:
            v46 = 0;
LABEL_59:
            v47 = _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(v43, v44, v45, v46);
            if (!v47)
              goto LABEL_71;
            v48 = v126[26];
            v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
            v49(v48, *(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v126[21]);
            type metadata accessor for DKImageRGBBufferStamped();
            swift_allocObject();
            v50 = v47;
            sub_240076D20(v50, v48);
            v111 = v49;
            v112 = v50;
            v75 = swift_retain();
            MEMORY[0x24267D0CC](v75);
            if (*(_QWORD *)((*v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2401547D8();
            sub_240154814();
            sub_2401547B4();
            v76 = v118;
            v77 = *v118;
            v78 = v50;
            if ((unint64_t)*v118 >> 62)
            {
              swift_bridgeObjectRetain();
              v78 = v50;
              v100 = sub_240154D30();
              swift_bridgeObjectRelease();
              v76 = v118;
              v77 = *v118;
              if (v100 <= 8)
                goto LABEL_86;
            }
            else if (*(uint64_t *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10) <= 8)
            {
              goto LABEL_86;
            }
            if (v77 >> 62)
            {
              swift_bridgeObjectRetain();
              v102 = sub_240154D30();
              swift_bridgeObjectRelease();
              v76 = v118;
              if (!v102)
                goto LABEL_145;
            }
            else if (!*(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_145;
            }
            v79 = *v76;
            if ((unint64_t)*v76 >> 62)
            {
              swift_bridgeObjectRetain();
              v103 = sub_240154D30();
              swift_bridgeObjectRelease();
              if (!v103)
                goto LABEL_146;
            }
            else if (!*(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
            {
              goto LABEL_146;
            }
            if ((v79 & 0xC000000000000001) != 0)
            {
              MEMORY[0x24267D4E0](0, v79);
            }
            else
            {
              if (!*(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_145:
                __break(1u);
LABEL_146:
                __break(1u);
LABEL_147:
                __break(1u);
LABEL_148:
                __break(1u);
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                swift_bridgeObjectRelease();
                __break(1u);
                JUMPOUT(0x24012D808);
              }
              swift_retain();
            }
            if ((unint64_t)*v118 >> 62)
            {
              swift_bridgeObjectRetain();
              v104 = sub_240154D30();
              swift_bridgeObjectRelease();
              v78 = v50;
              if (!v104)
                goto LABEL_148;
            }
            else
            {
              v78 = v50;
              if (!*(_QWORD *)((*v118 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_148;
            }
            sub_24007A490(0, 1);
            swift_release();
            v76 = v118;
            v77 = *v118;
            v5 = v126;
LABEL_86:
            if (v77 >> 62)
            {
              swift_bridgeObjectRetain();
              v78 = v50;
              v101 = sub_240154D30();
              swift_bridgeObjectRelease();
              v76 = v118;
              if (v101 != 8)
                goto LABEL_124;
            }
            else if (*(_QWORD *)((v77 & 0xFFFFFFFFFFFFF8) + 0x10) != 8)
            {
              goto LABEL_124;
            }
            v80 = *v76;
            if ((unint64_t)*v76 >> 62)
            {
              swift_bridgeObjectRetain();
              v78 = v50;
              if (!sub_240154D30())
              {
LABEL_123:
                swift_bridgeObjectRelease();
LABEL_124:
                swift_release();

                swift_release();
LABEL_125:
                swift_release();
                goto LABEL_126;
              }
            }
            else
            {
              v81 = *(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v81)
                goto LABEL_123;
            }
            if ((v80 & 0xC000000000000001) != 0)
            {
              v82 = MEMORY[0x24267D4E0](0, v80);
            }
            else
            {
              if (!*(_QWORD *)((v80 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_147;
              v82 = swift_retain();
            }
            v110 = v82;
            swift_bridgeObjectRelease();
            v83 = *v118;
            if ((unint64_t)*v118 >> 62)
            {
              swift_bridgeObjectRetain();
              v78 = v50;
              v84 = sub_240154D30();
              if (!v84)
              {
LABEL_129:
                swift_bridgeObjectRelease();
                swift_release();

                swift_release();
                swift_release();
                goto LABEL_125;
              }
            }
            else
            {
              v84 = *(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain();
              if (!v84)
                goto LABEL_129;
            }
            v85 = v84 - 1;
            if (__OFSUB__(v84, 1))
              goto LABEL_149;
            if ((v83 & 0xC000000000000001) != 0)
            {
              v86 = MEMORY[0x24267D4E0](v85, v83);
            }
            else
            {
              if ((v85 & 0x8000000000000000) != 0)
                goto LABEL_150;
              if (v85 >= *(_QWORD *)((v83 & 0xFFFFFFFFFFFFF8) + 0x10))
                goto LABEL_151;
              v86 = *(_QWORD *)(v83 + 8 * v85 + 32);
              swift_retain();
            }
            v87 = v5[27];
            v88 = v5[25];
            v89 = v126[21];
            swift_bridgeObjectRelease();
            v111(v87, v86 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time, v89);
            v111(v88, v110 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time, v89);
            sub_24015428C();
            v91 = v90;
            v92 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
            v92(v88, v89);
            v93 = v89;
            v5 = v126;
            v92(v87, v93);
            v131 = 4;
            v132 = 0;
            v133 = 0xE000000000000000;
            sub_240154B38();
            v94 = v133;
            v126[9] = v132;
            v126[10] = v94;
            sub_2401546D0();
            v126[12] = *(_QWORD *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
            sub_240154EBC();
            sub_2401546D0();
            swift_bridgeObjectRelease();
            sub_2401546D0();
            sub_2401548C8();
            v96 = v126[9];
            v95 = v126[10];
            v97 = sub_24015494C();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v131, v96, v95, v97);
            swift_bridgeObjectRelease();
            if (v91 < 2.0)
            {
              if (!*(_QWORD *)(v114 + v113))
              {
                type metadata accessor for DKSpeechDetectionModel();
                swift_allocObject();
                sub_24014DB10();
                *(_QWORD *)(v114 + v113) = v98;
                swift_retain();
                swift_release();
              }
              swift_retain();
              v99 = swift_bridgeObjectRetain();
              sub_24014E260(v99);
              goto LABEL_142;
            }
            swift_release();

            swift_release();
            swift_release();
            swift_release();
            swift_release();
LABEL_126:
            swift_release();
            v9 = v123;
            break;
          default:
LABEL_71:
            swift_release();

            swift_release();
            swift_release();
            goto LABEL_61;
        }
        goto LABEL_61;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v42 = sub_240106D5C(v37, v38, (__CVBuffer *)0x80, 0x80uLL);
    swift_bridgeObjectRelease();
    pixelBuffer = v42;
    goto LABEL_45;
  }
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  v0 = v126;
  v120 = v126[27];
  v122 = v126[22];
  v106 = v126[20];
  v128 = v126[32];
  v130 = v126[21];
  v107 = v19;
  v108 = v18;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  v111(v106, *(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v130);
  v125 = v4;
  v109 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v123 + 56);
  v109(v106, 0, 1, v130);
  swift_retain();
  swift_retain();
  sub_240148324(0, 1, v106, v108);
  swift_release();
  swift_release();
  sub_240070BD4(v106, &qword_256FB4CC8);
  v111(v106, *(_QWORD *)(v125 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v130);
  v109(v106, 0, 1, v130);
  swift_retain();
  swift_retain();
  sub_240148324(0, 1, v106, v107);
  swift_release();
  swift_release();
  sub_240070BD4(v106, &qword_256FB4CC8);
  v111(v120, *(_QWORD *)(v125 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 40))(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v120, v130);
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_240070B3C(v128);
LABEL_132:
  LODWORD(v5) = v116;
LABEL_133:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return ((uint64_t (*)(BOOL))v0[1])((_DWORD)v5 != 1);
}

uint64_t sub_24012D828()
{
  return swift_release();
}

uint64_t sub_24012D838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24012D8BC()
{
  return type metadata accessor for DKSpeakerDetectionTask();
}

uint64_t type metadata accessor for DKSpeakerDetectionTask()
{
  uint64_t result;

  result = qword_256FC0400;
  if (!qword_256FC0400)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24012D900()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_24012D94C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_24013576C();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_24012D9C4(v6);
  return sub_240154BEC();
}

void sub_24012D9C4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  char *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  char *v33;
  int v34;
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t, uint64_t);
  char *v50;
  char v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v55;
  unint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  BOOL v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  char v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  BOOL v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  unint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  unint64_t v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  void (*v125)(char *, uint64_t, uint64_t);
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  uint64_t v132;

  v2 = sub_240154310();
  v127 = *(_QWORD *)(v2 - 8);
  v128 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v130 = (char *)&v114 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v129 = (char *)&v114 - v5;
  v6 = a1[1];
  v7 = sub_240154EB0();
  if (v7 >= v6)
  {
    if (v6 < 0)
      goto LABEL_136;
    if (v6)
      sub_24012E2C0(0, v6, 1, a1);
    return;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_144;
  v9 = v7;
  v114 = a1;
  if (v6 < 2)
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
    v132 = MEMORY[0x24BEE4AF8];
    v123 = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v6 != 1)
    {
      v16 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_101:
      if (v16 >= 2)
      {
        v106 = *v114;
        do
        {
          v107 = v16 - 2;
          if (v16 < 2)
            goto LABEL_131;
          if (!v106)
            goto LABEL_143;
          v108 = v12;
          v109 = *(_QWORD *)&v12[16 * v107 + 32];
          v110 = *(_QWORD *)&v12[16 * v16 + 24];
          v111 = v124;
          sub_24012E490((char *)(v106 + 8 * v109), (char *)(v106 + 8 * *(_QWORD *)&v12[16 * v16 + 16]), (char *)(v106 + 8 * v110), v123);
          if (v111)
            goto LABEL_99;
          if (v110 < v109)
            goto LABEL_132;
          v124 = 0;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v108 = sub_2401356E0((uint64_t)v12);
          if (v107 >= *((_QWORD *)v108 + 2))
            goto LABEL_133;
          v112 = &v108[16 * v107 + 32];
          *(_QWORD *)v112 = v109;
          *((_QWORD *)v112 + 1) = v110;
          v113 = *((_QWORD *)v108 + 2);
          if (v16 > v113)
            goto LABEL_134;
          v12 = v108;
          memmove(&v108[16 * v16 + 16], &v108[16 * v16 + 32], 16 * (v113 - v16));
          *((_QWORD *)v108 + 2) = v113 - 1;
          v16 = v113 - 1;
        }
        while (v113 > 2);
      }
      swift_bridgeObjectRelease();
      *(_QWORD *)((v132 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2401547B4();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v10 = v8 >> 1;
    type metadata accessor for DKPersonTracker();
    v11 = sub_2401547FC();
    *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) = v10;
    v123 = (char *)((v11 & 0xFFFFFFFFFFFFFF8) + 32);
    v132 = v11;
  }
  v13 = 0;
  v14 = *a1;
  v15 = *a1 + 16;
  v115 = *a1 - 8;
  v116 = v15;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v120 = v6;
  v118 = v9;
  v126 = v14;
  while (1)
  {
    v17 = v13;
    v18 = v13 + 1;
    v121 = v17;
    if (v18 >= v6)
    {
      v36 = v118;
    }
    else
    {
      v117 = v12;
      v19 = *(_QWORD *)(v14 + 8 * v121);
      v20 = *(_QWORD *)(v14 + 8 * v18)
          + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime;
      v21 = v127;
      v22 = v128;
      v23 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 16);
      v24 = v129;
      v23(v129, v20, v128);
      v25 = v130;
      v125 = v23;
      v23(v130, v19 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v22);
      swift_retain();
      swift_retain();
      LODWORD(v131) = sub_2401542B0();
      v26 = *(void (**)(char *, uint64_t))(v21 + 8);
      v26(v25, v22);
      v122 = (char *)v26;
      v26(v24, v22);
      swift_release();
      v17 = v121;
      swift_release();
      v27 = v17 + 2;
      if (v17 + 2 >= v6)
      {
        v18 = v17 + 2;
      }
      else
      {
        v28 = (_QWORD *)(v116 + 8 * v17);
        while (1)
        {
          v29 = *(v28 - 1);
          v30 = v128;
          v31 = v129;
          v32 = v125;
          v125(v129, *v28 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v128);
          v33 = v130;
          v32(v130, v29 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v30);
          swift_retain();
          swift_retain();
          v34 = sub_2401542B0();
          v35 = (void (*)(char *, uint64_t))v122;
          ((void (*)(char *, uint64_t))v122)(v33, v30);
          v35(v31, v30);
          swift_release();
          swift_release();
          if (((v131 ^ v34) & 1) != 0)
            break;
          ++v28;
          v6 = v120;
          if (v120 == ++v27)
          {
            v18 = v120;
            goto LABEL_24;
          }
        }
        v6 = v120;
        v18 = v27;
LABEL_24:
        v17 = v121;
      }
      v12 = v117;
      v36 = v118;
      v14 = v126;
      if ((v131 & 1) != 0)
      {
        if (v18 < v17)
          goto LABEL_137;
        if (v17 < v18)
        {
          v37 = (uint64_t *)(v115 + 8 * v18);
          v38 = v18;
          v39 = v17;
          v40 = (uint64_t *)(v126 + 8 * v17);
          do
          {
            if (v39 != --v38)
            {
              if (!v14)
                goto LABEL_142;
              v41 = *v40;
              *v40 = *v37;
              *v37 = v41;
            }
            ++v39;
            --v37;
            ++v40;
          }
          while (v39 < v38);
        }
      }
    }
    if (v18 < v6)
    {
      if (__OFSUB__(v18, v17))
        goto LABEL_135;
      if (v18 - v17 < v36)
        break;
    }
LABEL_52:
    if (v18 < v17)
      goto LABEL_130;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v131 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v12 = sub_240135220(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v56 = *((_QWORD *)v12 + 2);
    v55 = *((_QWORD *)v12 + 3);
    v16 = v56 + 1;
    if (v56 >= v55 >> 1)
      v12 = sub_240135220((char *)(v55 > 1), v56 + 1, 1, v12);
    *((_QWORD *)v12 + 2) = v16;
    v57 = v12 + 32;
    v58 = &v12[16 * v56 + 32];
    v59 = v131;
    *(_QWORD *)v58 = v17;
    *((_QWORD *)v58 + 1) = v59;
    if (v56)
    {
      while (1)
      {
        v60 = v16 - 1;
        if (v16 >= 4)
        {
          v65 = &v57[16 * v16];
          v66 = *((_QWORD *)v65 - 8);
          v67 = *((_QWORD *)v65 - 7);
          v71 = __OFSUB__(v67, v66);
          v68 = v67 - v66;
          if (v71)
            goto LABEL_119;
          v70 = *((_QWORD *)v65 - 6);
          v69 = *((_QWORD *)v65 - 5);
          v71 = __OFSUB__(v69, v70);
          v63 = v69 - v70;
          v64 = v71;
          if (v71)
            goto LABEL_120;
          v72 = v16 - 2;
          v73 = &v57[16 * v16 - 32];
          v75 = *(_QWORD *)v73;
          v74 = *((_QWORD *)v73 + 1);
          v71 = __OFSUB__(v74, v75);
          v76 = v74 - v75;
          if (v71)
            goto LABEL_122;
          v71 = __OFADD__(v63, v76);
          v77 = v63 + v76;
          if (v71)
            goto LABEL_125;
          if (v77 >= v68)
          {
            v95 = &v57[16 * v60];
            v97 = *(_QWORD *)v95;
            v96 = *((_QWORD *)v95 + 1);
            v71 = __OFSUB__(v96, v97);
            v98 = v96 - v97;
            if (v71)
              goto LABEL_129;
            v88 = v63 < v98;
            goto LABEL_89;
          }
        }
        else
        {
          if (v16 != 3)
          {
            v89 = *((_QWORD *)v12 + 4);
            v90 = *((_QWORD *)v12 + 5);
            v71 = __OFSUB__(v90, v89);
            v82 = v90 - v89;
            v83 = v71;
            goto LABEL_83;
          }
          v62 = *((_QWORD *)v12 + 4);
          v61 = *((_QWORD *)v12 + 5);
          v71 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          v64 = v71;
        }
        if ((v64 & 1) != 0)
          goto LABEL_121;
        v72 = v16 - 2;
        v78 = &v57[16 * v16 - 32];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v81 = __OFSUB__(v79, v80);
        v82 = v79 - v80;
        v83 = v81;
        if (v81)
          goto LABEL_124;
        v84 = &v57[16 * v60];
        v86 = *(_QWORD *)v84;
        v85 = *((_QWORD *)v84 + 1);
        v71 = __OFSUB__(v85, v86);
        v87 = v85 - v86;
        if (v71)
          goto LABEL_127;
        if (__OFADD__(v82, v87))
          goto LABEL_128;
        if (v82 + v87 >= v63)
        {
          v88 = v63 < v87;
LABEL_89:
          if (v88)
            v60 = v72;
          goto LABEL_91;
        }
LABEL_83:
        if ((v83 & 1) != 0)
          goto LABEL_123;
        v91 = &v57[16 * v60];
        v93 = *(_QWORD *)v91;
        v92 = *((_QWORD *)v91 + 1);
        v71 = __OFSUB__(v92, v93);
        v94 = v92 - v93;
        if (v71)
          goto LABEL_126;
        if (v94 < v82)
          goto LABEL_14;
LABEL_91:
        v99 = v60 - 1;
        if (v60 - 1 >= v16)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v14)
          goto LABEL_141;
        v100 = &v57[16 * v99];
        v101 = *(_QWORD *)v100;
        v102 = &v57[16 * v60];
        v103 = *((_QWORD *)v102 + 1);
        v104 = v124;
        sub_24012E490((char *)(v14 + 8 * *(_QWORD *)v100), (char *)(v14 + 8 * *(_QWORD *)v102), (char *)(v14 + 8 * v103), v123);
        if (v104)
        {
LABEL_99:
          swift_bridgeObjectRelease();
          *(_QWORD *)((v132 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
          sub_2401547B4();
          swift_bridgeObjectRelease();
          return;
        }
        if (v103 < v101)
          goto LABEL_116;
        if (v60 > *((_QWORD *)v12 + 2))
          goto LABEL_117;
        *(_QWORD *)v100 = v101;
        *(_QWORD *)&v57[16 * v99 + 8] = v103;
        v105 = *((_QWORD *)v12 + 2);
        if (v60 >= v105)
          goto LABEL_118;
        v124 = 0;
        v16 = v105 - 1;
        memmove(&v57[16 * v60], v102 + 16, 16 * (v105 - 1 - v60));
        *((_QWORD *)v12 + 2) = v105 - 1;
        if (v105 <= 2)
          goto LABEL_14;
      }
    }
    v16 = 1;
LABEL_14:
    v6 = v120;
    v13 = v131;
    if (v131 >= v120)
      goto LABEL_101;
  }
  if (__OFADD__(v17, v36))
    goto LABEL_138;
  if (v17 + v36 >= v6)
    v42 = v6;
  else
    v42 = v17 + v36;
  if (v42 >= v17)
  {
    if (v18 != v42)
    {
      v117 = v12;
      v125 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 16);
      v43 = (char *)(v115 + 8 * v18);
      v119 = v42;
      do
      {
        v131 = v18;
        v44 = *(_QWORD *)(v14 + 8 * v18);
        v45 = v17;
        v122 = v43;
        while (1)
        {
          v46 = *(_QWORD *)v43;
          v48 = v128;
          v47 = v129;
          v49 = v125;
          v125(v129, v44 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v128);
          v50 = v130;
          v49(v130, v46 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v48);
          swift_retain();
          swift_retain();
          v51 = sub_2401542B0();
          v52 = *(void (**)(char *, uint64_t))(v127 + 8);
          v52(v50, v48);
          v52(v47, v48);
          swift_release();
          swift_release();
          if ((v51 & 1) == 0)
            break;
          v14 = v126;
          if (!v126)
            goto LABEL_140;
          v53 = *(_QWORD *)v43;
          v44 = *((_QWORD *)v43 + 1);
          *(_QWORD *)v43 = v44;
          *((_QWORD *)v43 + 1) = v53;
          v43 -= 8;
          if (v131 == ++v45)
            goto LABEL_45;
        }
        v14 = v126;
LABEL_45:
        v18 = v131 + 1;
        v17 = v121;
        v43 = v122 + 8;
      }
      while (v131 + 1 != v119);
      v18 = v119;
      v12 = v117;
    }
    goto LABEL_52;
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  sub_240154CF4();
  __break(1u);
}

void sub_24012E2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  __n128 v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;

  v25 = a1;
  v28 = sub_240154310();
  v31 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9.n128_f64[0] = MEMORY[0x24BDAC7A8](v8);
  v29 = (char *)&v23 - v10;
  v24 = a2;
  if (a3 != a2)
  {
    v11 = *a4;
    v27 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
    v32 = v11;
    v12 = (_QWORD *)(v11 + 8 * a3 - 8);
    v13 = v28;
    v14 = v29;
LABEL_5:
    v15 = *(_QWORD *)(v32 + 8 * a3);
    v16 = v25;
    v26 = v12;
    while (1)
    {
      v17 = *v12;
      v18 = v27;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v27)(v14, v15 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v13, v9);
      v19 = v30;
      v18(v30, v17 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v13);
      swift_retain();
      swift_retain();
      v33 = sub_2401542B0();
      v20 = a3;
      v21 = *(void (**)(char *, uint64_t))(v31 + 8);
      v21(v19, v13);
      v21(v14, v13);
      a3 = v20;
      swift_release();
      swift_release();
      if ((v33 & 1) == 0)
      {
LABEL_4:
        a3 = v20 + 1;
        v12 = v26 + 1;
        if (v20 + 1 == v24)
          return;
        goto LABEL_5;
      }
      if (!v32)
        break;
      v22 = *v12;
      v15 = v12[1];
      *v12 = v15;
      v12[1] = v22;
      --v12;
      if (v20 == ++v16)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_24012E490(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  char v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  unint64_t v41;
  char *v42;
  uint64_t result;
  uint64_t v44;
  void (*v45)(char *, uint64_t, uint64_t);
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;

  v8 = sub_240154310();
  v9 = *(_QWORD *)(v8 - 8);
  v53 = v8;
  v54 = v9;
  MEMORY[0x24BDAC7A8](v8);
  v52 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v50 = a3;
  v51 = (char *)&v44 - v12;
  v13 = a2 - a1;
  v14 = a2 - a1 + 7;
  if (a2 - a1 >= 0)
    v14 = a2 - a1;
  v15 = v14 >> 3;
  v16 = a3 - a2;
  v17 = v16 / 8;
  v58 = a1;
  v57 = a4;
  if (v14 >> 3 >= v16 / 8)
  {
    if (v16 < -7)
      goto LABEL_44;
    if (a4 != a2 || &a2[8 * v17] <= a4)
      memmove(a4, a2, 8 * v17);
    v28 = &a4[8 * v17];
    v56 = v28;
    v58 = a2;
    if (v16 < 8 || a1 >= a2)
      goto LABEL_43;
    v45 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    v46 = a4;
    v29 = v51;
    v30 = v50 - 8;
    v31 = a2;
    v55 = a1;
    while (1)
    {
      v50 = a2;
      v48 = v28;
      v49 = v30 + 8;
      v33 = v28 - 8;
      v32 = *((_QWORD *)v28 - 1);
      v34 = *((_QWORD *)v31 - 1);
      v47 = v31 - 8;
      v35 = v53;
      v36 = v45;
      v45(v29, v32 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v53);
      v37 = v52;
      v36(v52, v34 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v35);
      swift_retain();
      swift_retain();
      v38 = sub_2401542B0();
      v39 = *(void (**)(char *, uint64_t))(v54 + 8);
      v39(v37, v35);
      v39(v29, v35);
      swift_release();
      swift_release();
      if ((v38 & 1) != 0)
        break;
      v56 = v33;
      v40 = v50;
      if (v49 < v48 || v30 >= v48)
      {
        *(_QWORD *)v30 = *(_QWORD *)v33;
        v31 = v40;
        v28 = v33;
        goto LABEL_41;
      }
      v41 = (unint64_t)v46;
      v42 = v55;
      if (v49 != v48)
        *(_QWORD *)v30 = *(_QWORD *)v33;
      v31 = v40;
      v28 = v33;
      if ((unint64_t)v33 <= v41)
        goto LABEL_43;
LABEL_42:
      v30 -= 8;
      a2 = v31;
      if (v31 <= v42)
        goto LABEL_43;
    }
    v28 = v48;
    v31 = v47;
    if (v49 != v50 || v30 >= v50)
      *(_QWORD *)v30 = *(_QWORD *)v47;
    v58 = v31;
LABEL_41:
    v42 = v55;
    if (v28 <= v46)
      goto LABEL_43;
    goto LABEL_42;
  }
  if (v13 >= -7)
  {
    if (a4 != a1 || &a1[8 * v15] <= a4)
      memmove(a4, a1, 8 * v15);
    v49 = &a4[8 * v15];
    v56 = v49;
    if (v13 >= 8 && a2 < v50)
    {
      v18 = v53;
      v48 = *(char **)(v54 + 16);
      v19 = v51;
      do
      {
        v55 = a1;
        v20 = *(_QWORD *)a4;
        v21 = v48;
        ((void (*)(char *, uint64_t, uint64_t))v48)(v19, *(_QWORD *)a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v18);
        v22 = v52;
        ((void (*)(char *, uint64_t, uint64_t))v21)(v52, v20 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v18);
        swift_retain();
        swift_retain();
        v23 = a4;
        v24 = sub_2401542B0();
        v25 = *(void (**)(char *, uint64_t))(v54 + 8);
        v25(v22, v18);
        v25(v19, v18);
        swift_release();
        swift_release();
        if ((v24 & 1) != 0)
        {
          a4 = v23;
          v26 = a2 + 8;
          v27 = v55;
          if (v55 < a2 || v55 >= v26 || v55 != a2)
            *(_QWORD *)v55 = *(_QWORD *)a2;
        }
        else
        {
          v27 = v55;
          if (v55 != v23)
            *(_QWORD *)v55 = *(_QWORD *)v23;
          a4 = v23 + 8;
          v57 = v23 + 8;
          v26 = a2;
        }
        a1 = v27 + 8;
        v58 = a1;
        if (a4 >= v49)
          break;
        a2 = v26;
      }
      while (v26 < v50);
    }
LABEL_43:
    sub_240135528((void **)&v58, (const void **)&v57, &v56);
    return 1;
  }
LABEL_44:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24012E90C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24012E924()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  swift_retain();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = sub_24012E988();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_24012E988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t i;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _BOOL8 v33;
  uint64_t v34;
  char v35;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _BOOL8 v54;
  uint64_t v55;
  uint64_t v56;
  _BOOL8 v57;
  uint64_t v58;
  char v59;
  char v60;
  unint64_t v61;
  uint64_t v62;
  _BOOL8 v63;
  uint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _BOOL4 v77;
  BOOL v78;
  uint64_t (*v79)();
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char isUniquelyReferenced_nonNull_native;
  char v86;
  unint64_t v87;
  uint64_t v88;
  _BOOL8 v89;
  uint64_t v90;
  char v91;
  unint64_t v92;
  char v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t result;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  CGFloat *v107;
  BOOL v108;
  uint64_t j;
  CGFloat v110;
  CGFloat v111;
  CGFloat v112;
  CGFloat v113;
  CGFloat v114;
  CGFloat v115;
  CGFloat v116;
  double Width;
  double v118;
  double Height;
  double v120;
  double MidX;
  double MidY;
  CGFloat v123;
  double v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  double v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t k;
  uint64_t v134;
  double v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  CGFloat v141;
  CGFloat v142;
  CGFloat v143;
  CGFloat v144;
  CGFloat v145;
  double v146;
  double v147;
  double v148;
  double v149;
  double v150;
  double v151;
  CGFloat v152;
  double v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  BOOL v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  BOOL v193;
  uint64_t v194;
  uint64_t v195;
  BOOL v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  unint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  CGFloat v258;
  CGFloat v259;
  CGFloat v260;
  CGFloat v261;
  CGFloat v262;
  CGFloat v263;
  double v264;
  double v265;
  double v266;
  double v267;
  double v268;
  double v269;
  CGFloat v270;
  double v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  CGFloat v276;
  CGFloat v277;
  CGFloat v278;
  CGFloat v279;
  CGFloat v280;
  CGFloat v281;
  CGFloat v282;
  double v283;
  double v284;
  double v285;
  double v286;
  double v287;
  double v288;
  CGFloat v289;
  double v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  CGFloat *v298;
  uint64_t v299;
  uint64_t v300;
  CGFloat v301;
  CGFloat v302;
  CGFloat v303;
  CGFloat v304;
  CGFloat v305;
  CGFloat v306;
  double v307;
  double v308;
  double v309;
  double v310;
  double v311;
  double v312;
  CGFloat v313;
  double v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  CGFloat v319;
  CGFloat v320;
  CGFloat v321;
  CGFloat v322;
  CGFloat v323;
  CGFloat v324;
  CGFloat v325;
  double v326;
  double v327;
  double v328;
  double v329;
  double v330;
  double v331;
  CGFloat v332;
  double v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t *v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  unint64_t v355;
  uint64_t v356;
  uint64_t v357;
  BOOL v358;
  _QWORD *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t inited;
  uint64_t v367;
  _QWORD *v368;
  unint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  unint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t *v384;
  unint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  unint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  BOOL v399;
  uint64_t v400;
  uint64_t v401;
  CGFloat v402;
  uint64_t v403;
  uint64_t v404;
  CGFloat v405;
  CGFloat v406;
  CGFloat v407;
  uint64_t v408;
  double v409;
  uint64_t v410;
  double v411;
  double v412;
  double v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  CGFloat v417;
  CGFloat v418;
  uint64_t v419;
  double v420;
  CGFloat v421;
  double v422;
  CGFloat v423;
  uint64_t v424;
  double v425;
  double v426;
  double v427;
  double v428;
  double v429;
  double v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  CGFloat v434;
  double v435;
  double v436;
  uint64_t v437;
  double v438;
  double v439;
  double v440;
  double v441;
  CGRect rect;
  uint64_t v443;
  uint64_t v444;
  _QWORD *v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  CGRect v449;
  CGRect v450;
  CGRect v451;
  CGRect v452;
  CGRect v453;
  CGRect v454;
  CGRect v455;
  CGRect v456;
  CGRect v457;
  CGRect v458;
  CGRect v459;
  CGRect v460;
  CGRect v461;
  CGRect v462;
  CGRect v463;
  CGRect v464;
  CGRect v465;
  CGRect v466;
  CGRect v467;
  CGRect v468;
  CGRect v469;
  CGRect v470;
  CGRect v471;
  CGRect v472;
  CGRect v473;
  CGRect v474;
  CGRect v475;
  CGRect v476;
  CGRect v477;
  CGRect v478;
  CGRect v479;
  CGRect v480;
  CGRect v481;
  CGRect v482;
  CGRect v483;
  CGRect v484;
  CGRect v485;
  CGRect v486;
  CGRect v487;
  CGRect v488;
  CGRect v489;
  CGRect v490;
  CGRect v491;
  CGRect v492;
  CGRect v493;
  CGRect v494;
  CGRect v495;
  CGRect v496;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces))
  {
    v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
  }
  else
  {
    v2 = sub_2400959E4(0);
    v1 = *(_QWORD *)(v0 + 48);
  }
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
  swift_bridgeObjectRetain();
  if (v3)
  {
    v4 = v3;
  }
  else
  {
    v4 = sub_2400959D8(0);
    v1 = *(_QWORD *)(v0 + 48);
  }
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
  swift_bridgeObjectRetain();
  if (v5)
    v6 = v5;
  else
    v6 = sub_2400959CC(0);
  v448 = sub_240070208();
  swift_bridgeObjectRetain();
  v7 = swift_bridgeObjectRetain();
  v8 = sub_2400EB678(v7);
  v424 = v8;
  if (v8)
  {
    v9 = v8;
    if (v8 < 1)
      goto LABEL_339;
    if (sub_24013C0F4(v2))
    {
      v10 = 0;
      v11 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
      do
      {
        if ((*(_BYTE *)(*(_QWORD *)(v2 + 8 * v10 + 32) + v11 + 8) & 1) == 0)
        {
          swift_retain();
          sub_240154BE0();
          sub_240154C10();
          sub_240154C1C();
          sub_240154BEC();
          v11 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
        }
        ++v10;
      }
      while (v9 != v10);
    }
    else
    {
      for (i = 0; i != v9; ++i)
      {
        if ((*(_BYTE *)(MEMORY[0x24267D4E0](i, v2)
                       + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId
                       + 8) & 1) != 0)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_240154BE0();
          sub_240154C10();
          sub_240154C1C();
          sub_240154BEC();
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  v13 = sub_2400EB678(v448);
  swift_release();
  v431 = v6;
  v416 = v4;
  v419 = v2;
  if (v13 <= 0)
  {
    v448 = sub_240070208();
    v14 = swift_bridgeObjectRetain();
    v15 = sub_2400EB678(v14);
    v16 = v15;
    if (v15)
    {
      if (v15 < 1)
        goto LABEL_352;
      if (sub_24013C0E8(v4))
      {
        v17 = 0;
        v18 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
        do
        {
          if ((*(_BYTE *)(*(_QWORD *)(v4 + 8 * v17 + 32) + v18 + 8) & 1) == 0)
          {
            swift_retain();
            sub_240154BE0();
            sub_240154C10();
            sub_240154C1C();
            sub_240154BEC();
            v18 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
          }
          ++v17;
        }
        while (v16 != v17);
      }
      else
      {
        v19 = 0;
        do
        {
          if ((*(_BYTE *)(MEMORY[0x24267D4E0](v19, v4)
                         + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId
                         + 8) & 1) != 0)
          {
            swift_unknownObjectRelease();
          }
          else
          {
            sub_240154BE0();
            sub_240154C10();
            sub_240154C1C();
            sub_240154BEC();
          }
          ++v19;
        }
        while (v16 != v19);
      }
    }
    swift_bridgeObjectRelease();
    v20 = sub_2400EB678(v448);
    swift_release();
    if (v20 <= 0)
    {
      v448 = sub_240070208();
      v21 = swift_bridgeObjectRetain();
      v22 = sub_2400EB678(v21);
      v23 = v22;
      if (v22)
      {
        if (v22 < 1)
          goto LABEL_353;
        if (sub_24013C0F4(v6))
        {
          v24 = 0;
          v25 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
          do
          {
            if ((*(_BYTE *)(*(_QWORD *)(v6 + 8 * v24 + 32) + v25 + 8) & 1) == 0)
            {
              swift_retain();
              sub_240154BE0();
              sub_240154C10();
              sub_240154C1C();
              sub_240154BEC();
              v25 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
            }
            ++v24;
          }
          while (v23 != v24);
        }
        else
        {
          v26 = 0;
          do
          {
            if ((*(_BYTE *)(MEMORY[0x24267D4E0](v26, v6)
                           + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId
                           + 8) & 1) != 0)
            {
              swift_unknownObjectRelease();
            }
            else
            {
              sub_240154BE0();
              sub_240154C10();
              sub_240154C1C();
              sub_240154BEC();
            }
            ++v26;
          }
          while (v23 != v26);
        }
      }
      swift_bridgeObjectRelease();
      v27 = sub_2400EB678(v448);
      swift_release();
      if (v27 <= 0)
      {
        v102 = MEMORY[0x24BEE4AF8];
        v448 = MEMORY[0x24BEE4AF8];
        v401 = v23;
        if (v424)
        {
          v399 = sub_24013C0F4(v2);
          v398 = v2 + 32;
          swift_bridgeObjectRetain();
          v103 = 0;
          do
          {
            sub_2400F40C8(v103, v399, v2);
            if (v399)
            {
              v105 = *(_QWORD *)(v398 + 8 * v103);
              swift_retain();
            }
            else
            {
              v105 = MEMORY[0x24267D4E0](v103, v2);
            }
            v104 = v103 + 1;
            if (__OFADD__(v103, 1))
              goto LABEL_336;
            if (v16)
            {
              if (v16 < 1)
                goto LABEL_338;
              v106 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType;
              v107 = (CGFloat *)(v105 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
              v108 = sub_24013C0E8(v4);
              swift_bridgeObjectRetain();
              if (v108)
              {
                for (j = 0; j != v16; ++j)
                {
                  v131 = *(_QWORD *)(v4 + 8 * j + 32);
                  if (*(_BYTE *)(v105 + v106) == 1)
                  {
                    swift_retain();
                    sub_2400F3FB8();
                    v132 = *(_QWORD *)(v448 + 16);
                    sub_2400F403C(v132);
                    v129 = 1.79769313e308;
                    v126 = v132;
                    v127 = v103;
                    v128 = j;
                  }
                  else
                  {
                    v111 = *v107;
                    v110 = v107[1];
                    v113 = v107[2];
                    v112 = v107[3];
                    v114 = *(double *)(v131 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
                    v434 = *(double *)(v131 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
                    v115 = *(double *)(v131 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
                    v116 = *(double *)(v131 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
                    swift_retain();
                    v449.origin.x = v111;
                    v449.origin.y = v110;
                    v449.size.width = v113;
                    v449.size.height = v112;
                    Width = CGRectGetWidth(v449);
                    v450.origin.x = v114;
                    v450.origin.y = v434;
                    v450.size.width = v115;
                    v450.size.height = v116;
                    v118 = CGRectGetWidth(v450);
                    if (v118 >= Width)
                      v118 = Width;
                    v411 = fmax(v118, 0.01);
                    v451.origin.x = v111;
                    v451.origin.y = v110;
                    v451.size.width = v113;
                    v451.size.height = v112;
                    Height = CGRectGetHeight(v451);
                    v452.origin.x = v114;
                    v452.origin.y = v434;
                    v452.size.width = v115;
                    v452.size.height = v116;
                    v120 = CGRectGetHeight(v452);
                    if (v120 >= Height)
                      v120 = Height;
                    v409 = fmax(v120, 0.01);
                    v453.origin.x = v111;
                    v453.origin.y = v110;
                    v453.size.width = v113;
                    v453.size.height = v112;
                    MidX = CGRectGetMidX(v453);
                    v454.origin.x = v114;
                    v454.origin.y = v434;
                    v454.size.width = v115;
                    v454.size.height = v116;
                    v412 = (MidX - CGRectGetMidX(v454)) / v411;
                    v455.origin.x = v111;
                    v455.origin.y = v110;
                    v455.size.width = v113;
                    v455.size.height = v112;
                    MidY = CGRectGetMidY(v455);
                    v456.origin.x = v114;
                    v456.origin.y = v434;
                    v456.size.width = v115;
                    v456.size.height = v116;
                    v123 = CGRectGetMidY(v456);
                    v124 = sqrt(v412 * v412 + (MidY - v123) / v409 * ((MidY - v123) / v409));
                    sub_2400F3FB8();
                    v125 = *(_QWORD *)(v448 + 16);
                    sub_2400F403C(v125);
                    v126 = v125;
                    v127 = v103;
                    v128 = j;
                    v129 = v124;
                  }
                  v130 = sub_2400F40A8(v126, v127, v128, v129);
                  nullsub_1(v130);
                  swift_release();
                }
              }
              else
              {
                for (k = 0; k != v16; ++k)
                {
                  v140 = MEMORY[0x24267D4E0](k, v4);
                  if (*(_BYTE *)(v105 + v106) == 1)
                  {
                    sub_2400F3FB8();
                    v134 = *(_QWORD *)(v448 + 16);
                    sub_2400F403C(v134);
                    v135 = 1.79769313e308;
                    v136 = v134;
                    v137 = v103;
                    v138 = k;
                  }
                  else
                  {
                    v141 = *v107;
                    v142 = v107[1];
                    v457.size.width = v107[2];
                    v457.size.height = v107[3];
                    v405 = v457.size.height;
                    v406 = v457.size.width;
                    v143 = *(double *)(v140 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
                    v144 = *(double *)(v140 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
                    v145 = *(double *)(v140 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
                    v402 = *(double *)(v140 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
                    v457.origin.x = *v107;
                    v407 = *v107;
                    v457.origin.y = v142;
                    v146 = CGRectGetWidth(v457);
                    v458.origin.x = v143;
                    v458.origin.y = v144;
                    v458.size.width = v145;
                    v458.size.height = v402;
                    v147 = CGRectGetWidth(v458);
                    if (v147 >= v146)
                      v147 = v146;
                    v435 = fmax(v147, 0.01);
                    v459.origin.x = v141;
                    v459.origin.y = v142;
                    v459.size.width = v406;
                    v459.size.height = v405;
                    v148 = CGRectGetHeight(v459);
                    v460.origin.x = v143;
                    v460.origin.y = v144;
                    v460.size.width = v145;
                    v460.size.height = v402;
                    v149 = CGRectGetHeight(v460);
                    if (v149 >= v148)
                      v149 = v148;
                    v413 = fmax(v149, 0.01);
                    v461.origin.x = v407;
                    v461.origin.y = v142;
                    v461.size.width = v406;
                    v461.size.height = v405;
                    v150 = CGRectGetMidX(v461);
                    v462.origin.x = v143;
                    v462.origin.y = v144;
                    v462.size.width = v145;
                    v462.size.height = v402;
                    v436 = (v150 - CGRectGetMidX(v462)) / v435;
                    v463.origin.x = v407;
                    v463.origin.y = v142;
                    v463.size.width = v406;
                    v463.size.height = v405;
                    v151 = CGRectGetMidY(v463);
                    v464.origin.x = v143;
                    v464.origin.y = v144;
                    v464.size.width = v145;
                    v464.size.height = v402;
                    v152 = CGRectGetMidY(v464);
                    v153 = sqrt(v436 * v436 + (v151 - v152) / v413 * ((v151 - v152) / v413));
                    sub_2400F3FB8();
                    v154 = *(_QWORD *)(v448 + 16);
                    sub_2400F403C(v154);
                    v136 = v154;
                    v137 = v103;
                    v138 = k;
                    v135 = v153;
                  }
                  v139 = sub_2400F40A8(v136, v137, v138, v135);
                  nullsub_1(v139);
                  swift_unknownObjectRelease();
                }
              }
              swift_release();
              swift_bridgeObjectRelease();
              v104 = v103 + 1;
            }
            else
            {
              swift_release();
            }
            v103 = v104;
            v6 = v431;
            v2 = v419;
          }
          while (v104 != v424);
          swift_bridgeObjectRelease();
          v102 = v448;
          v23 = v401;
        }
        v447 = v102;
        swift_bridgeObjectRetain_n();
        sub_2401313E8(&v447, sub_240135758, &qword_256FC06A0, (void (*)(_QWORD, _QWORD, _QWORD))sub_2401353C0);
        v397 = 0;
        swift_bridgeObjectRelease();
        v155 = v447;
        v156 = sub_240095854(0);
        if (sub_240141FD8(v156))
          v157 = sub_2400FBDA8(v156);
        else
          v157 = MEMORY[0x24BEE4B08];
        swift_bridgeObjectRelease();
        v447 = v157;
        v158 = sub_240095854(0);
        if (sub_240141FD8(v158))
          v159 = sub_2400FBDA8(v158);
        else
          v159 = MEMORY[0x24BEE4B08];
        swift_bridgeObjectRelease();
        v446 = v159;
        v445 = (_QWORD *)MEMORY[0x24BEE4AF8];
        v160 = sub_240141FD8(v155);
        if (!v160 || (v161 = v160, sub_2400F40F0(0, 1, v155), *(double *)(v155 + 48) < COERCE_DOUBLE(1)))
        {
          swift_release();
          goto LABEL_150;
        }
        v180 = v155 + 32;
        v181 = (uint64_t *)(v155 + 40);
        v437 = v2 + 32;
        v414 = v155;
        v415 = v4 + 32;
        v182 = 1;
        v183 = v155 + 32;
        v408 = v155 + 32;
        v410 = v161;
        while (1)
        {
          v184 = *v181;
          v185 = *(_QWORD *)v183;
          v186 = v447;
          if (*(_QWORD *)(v447 + 16))
          {
            v187 = sub_240154FDC();
            v188 = -1 << *(_BYTE *)(v186 + 32);
            v189 = v187 & ~v188;
            if (((*(_QWORD *)(v186 + 56 + ((v189 >> 3) & 0xFFFFFFFFFFFFF8)) >> v189) & 1) != 0)
            {
              v190 = *(_QWORD *)(v186 + 48);
              if (*(_QWORD *)(v190 + 8 * v189) == v185)
                goto LABEL_183;
              v191 = ~v188;
              while (1)
              {
                v189 = (v189 + 1) & v191;
                if (((*(_QWORD *)(v186 + 56 + ((v189 >> 3) & 0xFFFFFFFFFFFFF8)) >> v189) & 1) == 0)
                  break;
                if (*(_QWORD *)(v190 + 8 * v189) == v185)
                  goto LABEL_183;
              }
            }
          }
          if (!sub_24013E930(v184, v446))
          {
            v192 = sub_2400EB6D8((uint64_t)v445);
            v193 = sub_24013C0F4(v419);
            sub_2400F40C8(v185, v193, v419);
            if (v193)
              v194 = swift_retain();
            else
              v194 = MEMORY[0x24267D4E0](v185, v419);
            v195 = v194 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
            *(_QWORD *)v195 = v192;
            *(_BYTE *)(v195 + 8) = 0;
            swift_release();
            v196 = sub_24013C0E8(v4);
            sub_2400F40C8(v184, v196, v4);
            if (v196)
            {
              v197 = *(_QWORD *)(v415 + 8 * v184) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
              *(_QWORD *)v197 = v192;
              *(_BYTE *)(v197 + 8) = 0;
              if (v193)
                goto LABEL_176;
LABEL_180:
              v198 = MEMORY[0x24267D4E0](v185, v419);
              *(_QWORD *)&rect.origin.x = v192;
              if (v196)
                goto LABEL_181;
LABEL_177:
              v199 = MEMORY[0x24267D4E0](v184, v4);
            }
            else
            {
              v200 = MEMORY[0x24267D4E0](v184, v4)
                   + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
              *(_QWORD *)v200 = v192;
              *(_BYTE *)(v200 + 8) = 0;
              swift_unknownObjectRelease();
              if (!v193)
                goto LABEL_180;
LABEL_176:
              v198 = *(_QWORD *)(v437 + 8 * v185);
              swift_retain();
              *(_QWORD *)&rect.origin.x = v192;
              if (!v196)
                goto LABEL_177;
LABEL_181:
              v199 = *(_QWORD *)(v415 + 8 * v184);
              swift_retain();
            }
            v201 = sub_2400959CC(0);
            swift_retain();
            swift_retain();
            v202 = sub_240091370(v201);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRetain();
            swift_retain();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release_n();
            sub_2400F3FAC();
            v203 = v445[2];
            sub_2400F4030(v203);
            v204 = sub_2400F408C(v203, *(uint64_t *)&rect.origin.x, v198, v199, v202);
            nullsub_1(v204);
            sub_240084408(&v444, v185);
            sub_240084408(&v444, v184);
            v161 = v410;
            v155 = v414;
            v180 = v408;
          }
LABEL_183:
          if (v182 == v161)
            goto LABEL_329;
          sub_2400F40F0(v182, 1, v155);
          v6 = v431;
          v2 = v419;
          if (__OFADD__(v182, 1))
            goto LABEL_351;
          v183 = v180 + 24 * v182;
          v181 = (uint64_t *)(v183 + 8);
          ++v182;
          if (*(double *)(v183 + 16) < COERCE_DOUBLE(1))
          {
            swift_release();
            v23 = v401;
            goto LABEL_150;
          }
        }
      }
    }
  }
  v28 = v424;
  if (!v424)
  {
    rect.origin.x = 0.0;
    v30 = 0;
    v31 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_69:
    v419 = v30;
    swift_bridgeObjectRelease();
    v51 = v416;
    v52 = sub_2400EB678(v416);
    if (!v52)
    {
      v4 = 0;
LABEL_89:
      v416 = v4;
      swift_bridgeObjectRelease();
      v74 = v431;
      v75 = sub_2400EB678(v431);
      if (!v75)
      {
        v79 = 0;
LABEL_109:
        swift_bridgeObjectRelease();
        v99 = swift_bridgeObjectRetain();
        v100 = sub_24013FDB4(v99);
        swift_bridgeObjectRelease_n();
        sub_240071094(*(uint64_t *)&rect.origin.x);
        sub_240071094(v416);
        sub_240071094((uint64_t)v79);
        return (uint64_t)v100;
      }
      v76 = v75;
      v77 = sub_24013C0F4(v431);
      v78 = v77;
      v79 = 0;
      v16 = 4;
      v433 = v76;
      LODWORD(v424) = v77;
      while (1)
      {
        v4 = v16 - 4;
        if (v78)
        {
          v82 = *(_QWORD *)(v74 + 8 * v16);
          swift_retain();
        }
        else
        {
          v82 = MEMORY[0x24267D4E0](v16 - 4, v74);
        }
        v83 = v16 - 3;
        if (__OFADD__(v4, 1))
          goto LABEL_328;
        if (*(_BYTE *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId + 8) != 1)
        {
          v84 = *(_QWORD *)(v82 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
          *(_QWORD *)(swift_allocObject() + 16) = v84;
          sub_240071094((uint64_t)v79);
          swift_retain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v448 = (uint64_t)v31;
          v87 = sub_24013EF5C(v84);
          v88 = v31[2];
          v89 = (v86 & 1) == 0;
          v90 = v88 + v89;
          if (__OFADD__(v88, v89))
            goto LABEL_332;
          v91 = v86;
          if (v31[3] >= v90)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_2400AF6B8();
              v31 = (_QWORD *)v448;
            }
          }
          else
          {
            sub_2400ACAFC(v90, isUniquelyReferenced_nonNull_native);
            v31 = (_QWORD *)v448;
            v92 = sub_24013EF5C(v84);
            if ((v91 & 1) != (v93 & 1))
              goto LABEL_354;
            v87 = v92;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          if ((v91 & 1) == 0)
          {
            v94 = sub_2400959CC(0);
            v95 = sub_240091370(v94);
            swift_bridgeObjectRelease();
            v31[(v87 >> 6) + 8] |= 1 << v87;
            *(_QWORD *)(v31[6] + 8 * v87) = v84;
            v96 = (uint64_t *)(v31[7] + 32 * v87);
            *v96 = v84;
            v96[1] = 0;
            v96[2] = 0;
            v96[3] = v95;
            v97 = v31[2];
            v48 = __OFADD__(v97, 1);
            v98 = v97 + 1;
            if (v48)
              goto LABEL_335;
            v31[2] = v98;
          }
          v80 = v31[7];
          v81 = swift_bridgeObjectRelease();
          MEMORY[0x24267D0CC](v81);
          sub_2400F4018(*(_QWORD *)(*(_QWORD *)(v80 + 32 * v87 + 24) + 16));
          sub_240154814();
          sub_2401547B4();
          v79 = sub_240131E5C;
          v74 = v431;
          v76 = v433;
          v78 = v424;
        }
        swift_release();
        ++v16;
        if (v83 == v76)
          goto LABEL_109;
      }
    }
    v53 = v52;
    v54 = sub_24013C0E8(v416);
    v4 = 0;
    v55 = 4;
    v424 = v53;
    while (1)
    {
      if (v54)
      {
        v56 = *(_QWORD *)(v51 + 8 * v55);
        swift_retain();
      }
      else
      {
        v56 = MEMORY[0x24267D4E0](v55 - 4, v51);
      }
      v16 = v55 - 3;
      if (__OFADD__(v55 - 4, 1))
        break;
      if (*(_BYTE *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId + 8) == 1)
      {
        swift_release();
      }
      else
      {
        v57 = v54;
        v58 = *(_QWORD *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
        *(_QWORD *)(swift_allocObject() + 16) = v58;
        sub_240071094(v4);
        swift_retain();
        v59 = swift_isUniquelyReferenced_nonNull_native();
        v448 = (uint64_t)v31;
        v61 = sub_24013EF5C(v58);
        v62 = v31[2];
        v63 = (v60 & 1) == 0;
        v64 = v62 + v63;
        if (__OFADD__(v62, v63))
          goto LABEL_331;
        v65 = v60;
        if (v31[3] >= v64)
        {
          if ((v59 & 1) == 0)
          {
            sub_2400AF6B8();
            v31 = (_QWORD *)v448;
          }
        }
        else
        {
          sub_2400ACAFC(v64, v59);
          v31 = (_QWORD *)v448;
          v66 = sub_24013EF5C(v58);
          if ((v65 & 1) != (v67 & 1))
            goto LABEL_354;
          v61 = v66;
        }
        v54 = v57;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if ((v65 & 1) == 0)
        {
          v68 = sub_2400959CC(0);
          v69 = sub_240091370(v68);
          swift_bridgeObjectRelease();
          v31[(v61 >> 6) + 8] |= 1 << v61;
          *(_QWORD *)(v31[6] + 8 * v61) = v58;
          v70 = (uint64_t *)(v31[7] + 32 * v61);
          *v70 = v58;
          v70[1] = 0;
          v70[2] = 0;
          v70[3] = v69;
          v71 = v31[2];
          v48 = __OFADD__(v71, 1);
          v72 = v71 + 1;
          if (v48)
            goto LABEL_334;
          v31[2] = v72;
        }
        v73 = v31[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v73 + 32 * v61 + 16) = v56;
        swift_release();
        swift_release();
        v4 = (uint64_t)sub_240131E5C;
        v51 = v416;
        v53 = v424;
      }
      ++v55;
      if (v16 == v53)
        goto LABEL_89;
    }
LABEL_327:
    __break(1u);
LABEL_328:
    __break(1u);
LABEL_329:
    swift_release();
    v6 = v431;
    v23 = v401;
    v2 = v419;
LABEL_150:
    if (!v424)
      goto LABEL_199;
    v162 = v447;
    v163 = v447 + 56;
    if (sub_24013C0F4(v2))
    {
      v164 = v2 + 32;
      swift_bridgeObjectRetain();
      v165 = 0;
      while (1)
      {
        sub_2400F40C8(v165, 1, v2);
        v174 = v165 + 1;
        if (__OFADD__(v165, 1))
          goto LABEL_340;
        if (*(_QWORD *)(v162 + 16))
        {
          v175 = sub_240154FDC();
          v176 = -1 << *(_BYTE *)(v162 + 32);
          v177 = v175 & ~v176;
          if (((*(_QWORD *)(v163 + ((v177 >> 3) & 0xFFFFFFFFFFFFF8)) >> v177) & 1) != 0)
          {
            v178 = *(_QWORD *)(v162 + 48);
            if (*(_QWORD *)(v178 + 8 * v177) == v165)
              goto LABEL_154;
            v179 = ~v176;
            while (1)
            {
              v177 = (v177 + 1) & v179;
              if (((*(_QWORD *)(v163 + ((v177 >> 3) & 0xFFFFFFFFFFFFF8)) >> v177) & 1) == 0)
                break;
              if (*(_QWORD *)(v178 + 8 * v177) == v165)
                goto LABEL_154;
            }
          }
        }
        v166 = sub_2400EB6D8((uint64_t)v445);
        v167 = *(_QWORD *)(v164 + 8 * v165) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
        *(_QWORD *)v167 = v166;
        *(_BYTE *)(v167 + 8) = 0;
        v168 = *(_QWORD *)(v164 + 8 * v165);
        swift_retain();
        v169 = sub_2400959CC(0);
        swift_retain();
        v170 = sub_240091370(v169);
        swift_release();
        swift_bridgeObjectRelease();
        sub_2400F3FAC();
        v171 = v445[2];
        sub_2400F4030(v171);
        v172 = sub_2400F408C(v171, v166, v168, 0, v170);
        nullsub_1(v172);
LABEL_154:
        v165 = v174;
        v173 = v174 == v424;
        v2 = v419;
        if (v173)
          goto LABEL_198;
      }
    }
    swift_bridgeObjectRetain();
    v205 = 0;
    while (1)
    {
      sub_2400F40C8(v205, 0, v2);
      MEMORY[0x24267D4E0](v205, v2);
      swift_unknownObjectRelease();
      v213 = v205 + 1;
      if (__OFADD__(v205, 1))
        goto LABEL_341;
      if (*(_QWORD *)(v162 + 16))
      {
        v214 = sub_240154FDC();
        v215 = -1 << *(_BYTE *)(v162 + 32);
        v216 = v214 & ~v215;
        if (((*(_QWORD *)(v163 + ((v216 >> 3) & 0xFFFFFFFFFFFFF8)) >> v216) & 1) != 0)
        {
          v217 = *(_QWORD *)(v162 + 48);
          if (*(_QWORD *)(v217 + 8 * v216) == v205)
            goto LABEL_189;
          v218 = ~v215;
          while (1)
          {
            v216 = (v216 + 1) & v218;
            if (((*(_QWORD *)(v163 + ((v216 >> 3) & 0xFFFFFFFFFFFFF8)) >> v216) & 1) == 0)
              break;
            if (*(_QWORD *)(v217 + 8 * v216) == v205)
              goto LABEL_189;
          }
        }
      }
      v206 = sub_2400EB6D8((uint64_t)v445);
      v207 = MEMORY[0x24267D4E0](v205, v419) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
      *(_QWORD *)v207 = v206;
      *(_BYTE *)(v207 + 8) = 0;
      swift_unknownObjectRelease();
      v208 = MEMORY[0x24267D4E0](v205, v419);
      v209 = sub_2400959CC(0);
      swift_retain();
      v210 = sub_240091370(v209);
      swift_release();
      swift_bridgeObjectRelease();
      sub_2400F3FAC();
      v211 = v445[2];
      sub_2400F4030(v211);
      v212 = sub_2400F408C(v211, v206, v208, 0, v210);
      nullsub_1(v212);
LABEL_189:
      v205 = v213;
      v173 = v213 == v424;
      v2 = v419;
      if (v173)
      {
LABEL_198:
        swift_bridgeObjectRelease();
        v6 = v431;
        v23 = v401;
        v4 = v416;
LABEL_199:
        swift_bridgeObjectRelease();
        if (!v16)
          goto LABEL_224;
        v219 = v4;
        v220 = v446;
        v221 = v446 + 56;
        if (sub_24013C0E8(v219))
        {
          v222 = v219 + 32;
          swift_bridgeObjectRetain();
          v223 = 0;
          while (1)
          {
            sub_2400F40C8(v223, 1, v416);
            v231 = v223 + 1;
            if (__OFADD__(v223, 1))
              goto LABEL_342;
            if (*(_QWORD *)(v220 + 16))
            {
              v232 = sub_240154FDC();
              v233 = -1 << *(_BYTE *)(v220 + 32);
              v234 = v232 & ~v233;
              if (((*(_QWORD *)(v221 + ((v234 >> 3) & 0xFFFFFFFFFFFFF8)) >> v234) & 1) != 0)
              {
                v235 = *(_QWORD *)(v220 + 48);
                if (*(_QWORD *)(v235 + 8 * v234) == v223)
                  goto LABEL_203;
                v236 = ~v233;
                while (1)
                {
                  v234 = (v234 + 1) & v236;
                  if (((*(_QWORD *)(v221 + ((v234 >> 3) & 0xFFFFFFFFFFFFF8)) >> v234) & 1) == 0)
                    break;
                  if (*(_QWORD *)(v235 + 8 * v234) == v223)
                    goto LABEL_203;
                }
              }
            }
            v224 = sub_2400EB6D8((uint64_t)v445);
            v225 = *(_QWORD *)(v222 + 8 * v223) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
            *(_QWORD *)v225 = v224;
            *(_BYTE *)(v225 + 8) = 0;
            v226 = *(_QWORD *)(v222 + 8 * v223);
            swift_retain();
            v227 = sub_2400959CC(0);
            swift_retain();
            v228 = sub_240091370(v227);
            swift_release();
            swift_bridgeObjectRelease();
            sub_2400F3FAC();
            v229 = v445[2];
            sub_2400F4030(v229);
            v230 = sub_2400F408C(v229, v224, 0, v226, v228);
            nullsub_1(v230);
LABEL_203:
            v223 = v231;
            if (v231 == v16)
              goto LABEL_223;
          }
        }
        swift_bridgeObjectRetain();
        v237 = 0;
        while (2)
        {
          sub_2400F40C8(v237, 0, v416);
          MEMORY[0x24267D4E0](v237, v416);
          swift_unknownObjectRelease();
          v245 = v237 + 1;
          if (__OFADD__(v237, 1))
            goto LABEL_343;
          if (*(_QWORD *)(v220 + 16)
            && (v246 = sub_240154FDC(),
                v247 = -1 << *(_BYTE *)(v220 + 32),
                v248 = v246 & ~v247,
                ((*(_QWORD *)(v221 + ((v248 >> 3) & 0xFFFFFFFFFFFFF8)) >> v248) & 1) != 0))
          {
            v249 = *(_QWORD *)(v220 + 48);
            if (*(_QWORD *)(v249 + 8 * v248) != v237)
            {
              v250 = ~v247;
              do
              {
                v248 = (v248 + 1) & v250;
                if (((*(_QWORD *)(v221 + ((v248 >> 3) & 0xFFFFFFFFFFFFF8)) >> v248) & 1) == 0)
                  goto LABEL_213;
              }
              while (*(_QWORD *)(v249 + 8 * v248) != v237);
            }
          }
          else
          {
LABEL_213:
            v238 = sub_2400EB6D8((uint64_t)v445);
            v239 = MEMORY[0x24267D4E0](v237, v416)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
            *(_QWORD *)v239 = v238;
            *(_BYTE *)(v239 + 8) = 0;
            swift_unknownObjectRelease();
            v240 = MEMORY[0x24267D4E0](v237, v416);
            v241 = sub_2400959CC(0);
            swift_retain();
            v242 = sub_240091370(v241);
            swift_release();
            swift_bridgeObjectRelease();
            sub_2400F3FAC();
            v243 = v445[2];
            sub_2400F4030(v243);
            v244 = sub_2400F408C(v243, v238, 0, v240, v242);
            nullsub_1(v244);
          }
          v237 = v245;
          if (v245 != v16)
            continue;
          break;
        }
LABEL_223:
        swift_bridgeObjectRelease();
        v6 = v431;
        v23 = v401;
LABEL_224:
        swift_bridgeObjectRelease();
        v444 = MEMORY[0x24BEE4AF8];
        if (!v23)
          goto LABEL_272;
        v251 = (uint64_t)v445;
        v252 = sub_240141FD8((uint64_t)v445);
        if (sub_24013C0F4(v6))
        {
          v403 = v6 + 32;
          swift_bridgeObjectRetain();
          v253 = 0;
          v400 = v251 + 56;
          while (1)
          {
            sub_2400F40C8(v253, 1, v6);
            v254 = v253 + 1;
            if (__OFADD__(v253, 1))
              goto LABEL_344;
            if (v252)
              break;
LABEL_228:
            v253 = v254;
            if (v254 == v401)
              goto LABEL_271;
          }
          if (v252 < 1)
            goto LABEL_349;
          v255 = *(_QWORD *)(v403 + 8 * v253) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect;
          swift_bridgeObjectRetain();
          swift_retain();
          v256 = 0;
          v257 = v400;
          while (2)
          {
            v275 = *(_QWORD *)(v257 - 16);
            v274 = *(_QWORD *)(v257 - 8);
            if (v274)
            {
              v259 = *(double *)v255;
              v258 = *(double *)(v255 + 8);
              v261 = *(double *)(v255 + 16);
              v260 = *(double *)(v255 + 24);
              v262 = *(double *)(v274 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
              rect.origin.x = *(CGFloat *)(v274 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
              v263 = *(double *)(v274 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
              v417 = *(double *)(v274 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
              swift_retain();
              swift_retain_n();
              swift_bridgeObjectRetain();
              v465.origin.x = v259;
              v465.origin.y = v258;
              v465.size.width = v261;
              v465.size.height = v260;
              v264 = CGRectGetWidth(v465);
              v466.origin.x = rect.origin.x;
              v466.origin.y = v262;
              v466.size.width = v417;
              v466.size.height = v263;
              v265 = CGRectGetWidth(v466);
              if (v265 >= v264)
                v265 = v264;
              v425 = fmax(v265, 0.01);
              v467.origin.x = v259;
              v467.origin.y = v258;
              v467.size.width = v261;
              v467.size.height = v260;
              v266 = CGRectGetHeight(v467);
              v468.origin.x = rect.origin.x;
              v468.origin.y = v262;
              v468.size.width = v417;
              v468.size.height = v263;
              v267 = CGRectGetHeight(v468);
              if (v267 >= v266)
                v267 = v266;
              v420 = fmax(v267, 0.01);
              v469.origin.x = v259;
              v469.origin.y = v258;
              v469.size.width = v261;
              v469.size.height = v260;
              v268 = CGRectGetMidX(v469);
              v470.origin.x = rect.origin.x;
              v470.origin.y = v262;
              v470.size.width = v417;
              v470.size.height = v263;
              v426 = (v268 - CGRectGetMidX(v470)) / v425;
              v471.origin.x = v259;
              v471.origin.y = v258;
              v471.size.width = v261;
              v471.size.height = v260;
              v269 = CGRectGetMidY(v471);
              v472.origin.x = rect.origin.x;
              v472.origin.y = v262;
              v472.size.width = v417;
              v472.size.height = v263;
              v270 = CGRectGetMidY(v472);
              v271 = sqrt(v426 * v426 + (v269 - v270) / v420 * ((v269 - v270) / v420));
              sub_2400F3FA0();
              v272 = *(_QWORD *)(v444 + 16);
              sub_2400F4024(v272);
              v273 = sub_2400FE414(v272, v253, v256, v271);
              nullsub_1(v273);
              swift_bridgeObjectRelease();
              swift_release();
LABEL_238:
              swift_release_n();
            }
            else
            {
              if (v275)
              {
                v276 = *(double *)v255;
                v277 = *(double *)(v255 + 8);
                v279 = *(double *)(v255 + 16);
                v278 = *(double *)(v255 + 24);
                v281 = *(double *)(v275 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
                v280 = *(double *)(v275 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
                v282 = *(double *)(v275 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
                v421 = *(double *)(v275 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
                swift_retain_n();
                swift_bridgeObjectRetain();
                v473.origin.x = v276;
                v473.origin.y = v277;
                v473.size.width = v279;
                v473.size.height = v278;
                v283 = CGRectGetWidth(v473);
                v474.origin.x = v281;
                v474.origin.y = v280;
                v474.size.width = v282;
                v474.size.height = v421;
                v284 = CGRectGetWidth(v474);
                if (v284 >= v283)
                  v284 = v283;
                v438 = fmax(v284, 0.01);
                v475.origin.x = v276;
                v475.origin.y = v277;
                v475.size.width = v279;
                v475.size.height = v278;
                v285 = CGRectGetHeight(v475);
                v476.origin.x = v281;
                v476.origin.y = v280;
                v476.size.width = v282;
                v476.size.height = v421;
                v286 = CGRectGetHeight(v476);
                if (v286 >= v285)
                  v286 = v285;
                v427 = fmax(v286, 0.01);
                v477.origin.x = v276;
                v477.origin.y = v277;
                v477.size.width = v279;
                v477.size.height = v278;
                v287 = CGRectGetMidX(v477);
                v478.origin.x = v281;
                v478.origin.y = v280;
                v478.size.width = v282;
                v478.size.height = v421;
                v439 = (v287 - CGRectGetMidX(v478)) / v438;
                v479.origin.x = v276;
                v479.origin.y = v277;
                v479.size.width = v279;
                v479.size.height = v278;
                v288 = CGRectGetMidY(v479);
                v480.origin.x = v281;
                v480.origin.y = v280;
                v480.size.width = v282;
                v480.size.height = v421;
                v289 = CGRectGetMidY(v480);
                v290 = sqrt(v439 * v439 + (v288 - v289) / v427 * ((v288 - v289) / v427));
                sub_2400F3FA0();
                v291 = *(_QWORD *)(v444 + 16);
                sub_2400F4024(v291);
                v292 = sub_2400FE414(v291, v253, v256, v290);
                nullsub_1(v292);
                swift_bridgeObjectRelease();
                goto LABEL_238;
              }
              swift_bridgeObjectRetain();
              sub_2400F3FA0();
              v293 = *(_QWORD *)(v444 + 16);
              sub_2400F4024(v293);
              v294 = sub_2400FE414(v293, v253, v256, -1.0);
              nullsub_1(v294);
              swift_bridgeObjectRelease();
            }
            ++v256;
            v257 += 32;
            if (v252 == v256)
            {
              swift_release();
              swift_bridgeObjectRelease();
              v6 = v431;
              v254 = v253 + 1;
              goto LABEL_228;
            }
            continue;
          }
        }
        swift_bridgeObjectRetain();
        v295 = 0;
        v404 = v251 + 56;
        while (2)
        {
          sub_2400F40C8(v295, 0, v6);
          v297 = MEMORY[0x24267D4E0](v295, v6);
          v296 = v295 + 1;
          if (__OFADD__(v295, 1))
            goto LABEL_345;
          if (v252)
          {
            if (v252 < 1)
              goto LABEL_350;
            v298 = (CGFloat *)(v297 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
            swift_bridgeObjectRetain();
            v299 = 0;
            v300 = v404;
            while (2)
            {
              v318 = *(_QWORD *)(v300 - 16);
              v317 = *(_QWORD *)(v300 - 8);
              if (v317)
              {
                v302 = *v298;
                v301 = v298[1];
                v304 = v298[2];
                v303 = v298[3];
                v305 = *(double *)(v317 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
                rect.origin.x = *(CGFloat *)(v317 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
                v306 = *(double *)(v317 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
                v418 = *(double *)(v317 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
                swift_retain();
                swift_retain_n();
                swift_bridgeObjectRetain();
                v481.origin.x = v302;
                v481.origin.y = v301;
                v481.size.width = v304;
                v481.size.height = v303;
                v307 = CGRectGetWidth(v481);
                v482.origin.x = rect.origin.x;
                v482.origin.y = v305;
                v482.size.width = v418;
                v482.size.height = v306;
                v308 = CGRectGetWidth(v482);
                if (v308 >= v307)
                  v308 = v307;
                v428 = fmax(v308, 0.01);
                v483.origin.x = v302;
                v483.origin.y = v301;
                v483.size.width = v304;
                v483.size.height = v303;
                v309 = CGRectGetHeight(v483);
                v484.origin.x = rect.origin.x;
                v484.origin.y = v305;
                v484.size.width = v418;
                v484.size.height = v306;
                v310 = CGRectGetHeight(v484);
                if (v310 >= v309)
                  v310 = v309;
                v422 = fmax(v310, 0.01);
                v485.origin.x = v302;
                v485.origin.y = v301;
                v485.size.width = v304;
                v485.size.height = v303;
                v311 = CGRectGetMidX(v485);
                v486.origin.x = rect.origin.x;
                v486.origin.y = v305;
                v486.size.width = v418;
                v486.size.height = v306;
                v429 = (v311 - CGRectGetMidX(v486)) / v428;
                v487.origin.x = v302;
                v487.origin.y = v301;
                v487.size.width = v304;
                v487.size.height = v303;
                v312 = CGRectGetMidY(v487);
                v488.origin.x = rect.origin.x;
                v488.origin.y = v305;
                v488.size.width = v418;
                v488.size.height = v306;
                v313 = CGRectGetMidY(v488);
                v314 = sqrt(v429 * v429 + (v312 - v313) / v422 * ((v312 - v313) / v422));
                sub_2400F3FA0();
                v315 = *(_QWORD *)(v444 + 16);
                sub_2400F4024(v315);
                v316 = sub_2400FE414(v315, v295, v299, v314);
                nullsub_1(v316);
                swift_bridgeObjectRelease();
                swift_release();
LABEL_260:
                swift_release_n();
              }
              else
              {
                if (v318)
                {
                  v319 = *v298;
                  v320 = v298[1];
                  v322 = v298[2];
                  v321 = v298[3];
                  v324 = *(double *)(v318 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
                  v323 = *(double *)(v318 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
                  v325 = *(double *)(v318 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
                  v423 = *(double *)(v318 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
                  swift_retain_n();
                  swift_bridgeObjectRetain();
                  v489.origin.x = v319;
                  v489.origin.y = v320;
                  v489.size.width = v322;
                  v489.size.height = v321;
                  v326 = CGRectGetWidth(v489);
                  v490.origin.x = v324;
                  v490.origin.y = v323;
                  v490.size.width = v325;
                  v490.size.height = v423;
                  v327 = CGRectGetWidth(v490);
                  if (v327 >= v326)
                    v327 = v326;
                  v440 = fmax(v327, 0.01);
                  v491.origin.x = v319;
                  v491.origin.y = v320;
                  v491.size.width = v322;
                  v491.size.height = v321;
                  v328 = CGRectGetHeight(v491);
                  v492.origin.x = v324;
                  v492.origin.y = v323;
                  v492.size.width = v325;
                  v492.size.height = v423;
                  v329 = CGRectGetHeight(v492);
                  if (v329 >= v328)
                    v329 = v328;
                  v430 = fmax(v329, 0.01);
                  v493.origin.x = v319;
                  v493.origin.y = v320;
                  v493.size.width = v322;
                  v493.size.height = v321;
                  v330 = CGRectGetMidX(v493);
                  v494.origin.x = v324;
                  v494.origin.y = v323;
                  v494.size.width = v325;
                  v494.size.height = v423;
                  v441 = (v330 - CGRectGetMidX(v494)) / v440;
                  v495.origin.x = v319;
                  v495.origin.y = v320;
                  v495.size.width = v322;
                  v495.size.height = v321;
                  v331 = CGRectGetMidY(v495);
                  v496.origin.x = v324;
                  v496.origin.y = v323;
                  v496.size.width = v325;
                  v496.size.height = v423;
                  v332 = CGRectGetMidY(v496);
                  v333 = sqrt(v441 * v441 + (v331 - v332) / v430 * ((v331 - v332) / v430));
                  sub_2400F3FA0();
                  v334 = *(_QWORD *)(v444 + 16);
                  sub_2400F4024(v334);
                  v335 = sub_2400FE414(v334, v295, v299, v333);
                  nullsub_1(v335);
                  swift_bridgeObjectRelease();
                  goto LABEL_260;
                }
                swift_bridgeObjectRetain();
                sub_2400F3FA0();
                v336 = *(_QWORD *)(v444 + 16);
                sub_2400F4024(v336);
                v337 = sub_2400FE414(v336, v295, v299, -1.0);
                nullsub_1(v337);
                swift_bridgeObjectRelease();
              }
              ++v299;
              v300 += 32;
              if (v252 == v299)
              {
                swift_unknownObjectRelease();
                swift_bridgeObjectRelease();
                v6 = v431;
                v296 = v295 + 1;
                goto LABEL_250;
              }
              continue;
            }
          }
          swift_unknownObjectRelease();
LABEL_250:
          v295 = v296;
          if (v296 != v401)
            continue;
          break;
        }
LABEL_271:
        swift_bridgeObjectRelease();
        v23 = v401;
LABEL_272:
        v443 = v444;
        swift_bridgeObjectRetain_n();
        sub_2401313E8(&v443, sub_240135744, &qword_256FC0698, (void (*)(_QWORD, _QWORD, _QWORD))sub_2401353C0);
        if (v397)
          goto LABEL_355;
        swift_bridgeObjectRelease_n();
        v338 = v443;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v339 = sub_240095854(0);
        if (sub_240141FD8(v339))
          v340 = sub_2400FBDA8(v339);
        else
          v340 = MEMORY[0x24BEE4B08];
        swift_bridgeObjectRelease();
        v443 = v340;
        v341 = sub_240141FD8(v338);
        if (v341)
        {
          v342 = v341;
          v343 = 0;
          v344 = v338 + 32;
          *(_QWORD *)&rect.origin.x = v431 + 32;
          do
          {
            sub_2400F40F0(v343, 1, v338);
            v348 = v343 + 1;
            if (__OFADD__(v343, 1))
              goto LABEL_337;
            if (*(double *)(v344 + 24 * v343 + 16) >= -0.5)
            {
              v349 = (uint64_t *)(v344 + 24 * v343);
              v350 = *v349;
              v351 = v349[1];
              v352 = v443;
              if (*(_QWORD *)(v443 + 16))
              {
                v353 = sub_240154FDC();
                v354 = -1 << *(_BYTE *)(v352 + 32);
                v355 = v353 & ~v354;
                if (((*(_QWORD *)(v352 + 56 + ((v355 >> 3) & 0xFFFFFFFFFFFFF8)) >> v355) & 1) != 0)
                {
                  v356 = *(_QWORD *)(v352 + 48);
                  if (*(_QWORD *)(v356 + 8 * v355) == v350)
                    goto LABEL_280;
                  v357 = ~v354;
                  while (1)
                  {
                    v355 = (v355 + 1) & v357;
                    if (((*(_QWORD *)(v352 + 56 + ((v355 >> 3) & 0xFFFFFFFFFFFFF8)) >> v355) & 1) == 0)
                      break;
                    if (*(_QWORD *)(v356 + 8 * v355) == v350)
                      goto LABEL_280;
                  }
                }
              }
              v358 = sub_24013C0F4(v431);
              sub_2400F40C8(v350, v358, v431);
              if (v358)
              {
                v23 = *(_QWORD *)(*(_QWORD *)&rect.origin.x + 8 * v350);
                swift_retain();
              }
              else
              {
                v23 = MEMORY[0x24267D4E0](v350, v431);
              }
              v359 = v445;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              {
                if ((v351 & 0x8000000000000000) != 0)
                  goto LABEL_299;
              }
              else
              {
                v359 = sub_24014CDA4(v359);
                v445 = v359;
                if ((v351 & 0x8000000000000000) != 0)
                {
LABEL_299:
                  __break(1u);
                  break;
                }
              }
              if (v359[2] <= v351)
                goto LABEL_348;
              MEMORY[0x24267D0CC]();
              sub_2400F4018(*(_QWORD *)(v359[4 * v351 + 7] + 16));
              sub_240154814();
              v360 = sub_2401547B4();
              nullsub_1(v360);
              if (v358)
              {
                v345 = *(_QWORD *)(*(_QWORD *)&rect.origin.x + 8 * v350);
                swift_retain();
              }
              else
              {
                v345 = MEMORY[0x24267D4E0](v350, v431);
              }
              v23 = v401;
              v346 = (uint64_t)v445;
              sub_2400F40F0(v351, 1, v445);
              v347 = v345 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
              *(_QWORD *)v347 = *(_QWORD *)(v346 + 32 * v351 + 32);
              *(_BYTE *)(v347 + 8) = 0;
              swift_release();
              sub_240084408((uint64_t *)&rect.origin.y, v350);
            }
LABEL_280:
            v343 = v348;
          }
          while (v348 != v342);
        }
        swift_release();
        if (!v23)
        {
LABEL_325:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return (uint64_t)v445;
        }
        v361 = v443;
        v362 = v431;
        v363 = 0;
        if (sub_24013C0F4(v431))
        {
          v364 = v361 + 56;
          while (1)
          {
            sub_2400F40C8(v363, 1, v362);
            v373 = v363 + 1;
            if (__OFADD__(v363, 1))
              goto LABEL_346;
            v374 = *(_QWORD *)(v431 + 32 + 8 * v363);
            if (*(_QWORD *)(v361 + 16))
            {
              v375 = sub_240154FDC();
              v376 = -1 << *(_BYTE *)(v361 + 32);
              v377 = v375 & ~v376;
              if (((*(_QWORD *)(v364 + ((v377 >> 3) & 0xFFFFFFFFFFFFF8)) >> v377) & 1) != 0)
              {
                v378 = *(_QWORD *)(v361 + 48);
                if (*(_QWORD *)(v378 + 8 * v377) == v363)
                  goto LABEL_304;
                v379 = ~v376;
                while (1)
                {
                  v377 = (v377 + 1) & v379;
                  if (((*(_QWORD *)(v364 + ((v377 >> 3) & 0xFFFFFFFFFFFFF8)) >> v377) & 1) == 0)
                    break;
                  if (*(_QWORD *)(v378 + 8 * v377) == v363)
                    goto LABEL_304;
                }
              }
            }
            v365 = sub_2400EB6D8((uint64_t)v445);
            __swift_instantiateConcreteTypeFromMangledName(&qword_256FB9BC0);
            inited = swift_initStackObject();
            v367 = sub_2400F3F8C(inited, 1);
            *v368 = v374;
            sub_2400EB648();
            v369 = v367;
            swift_retain_n();
            v370 = sub_240091370(v369);
            swift_bridgeObjectRelease();
            sub_2400F3FAC();
            v371 = v445[2];
            sub_2400F4030(v371);
            v372 = sub_2400F408C(v371, v365, 0, 0, v370);
            nullsub_1(v372);
            swift_release();
LABEL_304:
            v363 = v373;
            v362 = v431;
            if (v373 == v401)
              goto LABEL_325;
          }
        }
        v380 = v361 + 56;
        while (2)
        {
          sub_2400F40C8(v363, 0, v362);
          v389 = MEMORY[0x24267D4E0](v363, v362);
          v390 = v363 + 1;
          if (__OFADD__(v363, 1))
            goto LABEL_347;
          v391 = v389;
          if (*(_QWORD *)(v361 + 16)
            && (v392 = sub_240154FDC(),
                v393 = -1 << *(_BYTE *)(v361 + 32),
                v394 = v392 & ~v393,
                ((*(_QWORD *)(v380 + ((v394 >> 3) & 0xFFFFFFFFFFFFF8)) >> v394) & 1) != 0))
          {
            v395 = *(_QWORD *)(v361 + 48);
            if (*(_QWORD *)(v395 + 8 * v394) != v363)
            {
              v396 = ~v393;
              do
              {
                v394 = (v394 + 1) & v396;
                if (((*(_QWORD *)(v380 + ((v394 >> 3) & 0xFFFFFFFFFFFFF8)) >> v394) & 1) == 0)
                  goto LABEL_315;
              }
              while (*(_QWORD *)(v395 + 8 * v394) != v363);
            }
            swift_unknownObjectRelease();
          }
          else
          {
LABEL_315:
            v381 = sub_2400EB6D8((uint64_t)v445);
            __swift_instantiateConcreteTypeFromMangledName(&qword_256FB9BC0);
            v382 = swift_initStackObject();
            v383 = sub_2400F3F8C(v382, 1);
            *v384 = v391;
            sub_2400EB648();
            v385 = v383;
            swift_retain();
            v386 = sub_240091370(v385);
            swift_bridgeObjectRelease();
            sub_2400F3FAC();
            v387 = v445[2];
            sub_2400F4030(v387);
            v388 = sub_2400F408C(v387, v381, 0, 0, v386);
            nullsub_1(v388);
            swift_release();
          }
          v363 = v390;
          v362 = v431;
          if (v390 == v401)
            goto LABEL_325;
          continue;
        }
      }
    }
  }
  v29 = sub_24013C0F4(v2);
  rect.origin.x = 0.0;
  v30 = 0;
  v31 = (_QWORD *)MEMORY[0x24BEE4B00];
  v4 = 4;
  while (1)
  {
    if (v29)
    {
      v32 = *(_QWORD *)(v2 + 8 * v4);
      swift_retain();
    }
    else
    {
      v32 = MEMORY[0x24267D4E0](v4 - 4, v2);
    }
    v16 = v4 - 3;
    if (__OFADD__(v4 - 4, 1))
    {
      __break(1u);
      goto LABEL_327;
    }
    if (*(_BYTE *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId + 8) == 1)
    {
      swift_release();
      goto LABEL_52;
    }
    v33 = v29;
    v34 = *(_QWORD *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
    v432 = swift_allocObject();
    *(_QWORD *)(v432 + 16) = v34;
    sub_240071094(*(uint64_t *)&rect.origin.x);
    swift_retain();
    v35 = swift_isUniquelyReferenced_nonNull_native();
    v448 = (uint64_t)v31;
    v37 = sub_24013EF5C(v34);
    v38 = v31[2];
    v39 = (v36 & 1) == 0;
    v40 = v38 + v39;
    if (__OFADD__(v38, v39))
      break;
    v41 = v36;
    if (v31[3] >= v40)
    {
      if ((v35 & 1) == 0)
      {
        sub_2400AF6B8();
        v31 = (_QWORD *)v448;
      }
    }
    else
    {
      sub_2400ACAFC(v40, v35);
      v31 = (_QWORD *)v448;
      v42 = sub_24013EF5C(v34);
      if ((v41 & 1) != (v43 & 1))
        goto LABEL_354;
      v37 = v42;
    }
    v29 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    if ((v41 & 1) == 0)
    {
      v44 = sub_2400959CC(0);
      v45 = sub_240091370(v44);
      swift_bridgeObjectRelease();
      v31[(v37 >> 6) + 8] |= 1 << v37;
      *(_QWORD *)(v31[6] + 8 * v37) = v34;
      v46 = (uint64_t *)(v31[7] + 32 * v37);
      *v46 = v34;
      v46[1] = 0;
      v46[2] = 0;
      v46[3] = v45;
      v47 = v31[2];
      v48 = __OFADD__(v47, 1);
      v49 = v47 + 1;
      if (v48)
        goto LABEL_333;
      v31[2] = v49;
    }
    v50 = v31[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v50 + 32 * v37 + 8) = v32;
    swift_release();
    swift_release();
    *(_QWORD *)&rect.origin.x = sub_240131E5C;
    v30 = v432;
    v2 = v419;
    v28 = v424;
LABEL_52:
    ++v4;
    if (v16 == v28)
      goto LABEL_69;
  }
  __break(1u);
LABEL_331:
  __break(1u);
LABEL_332:
  __break(1u);
LABEL_333:
  __break(1u);
LABEL_334:
  __break(1u);
LABEL_335:
  __break(1u);
LABEL_336:
  __break(1u);
LABEL_337:
  __break(1u);
LABEL_338:
  __break(1u);
LABEL_339:
  __break(1u);
LABEL_340:
  __break(1u);
LABEL_341:
  __break(1u);
LABEL_342:
  __break(1u);
LABEL_343:
  __break(1u);
LABEL_344:
  __break(1u);
LABEL_345:
  __break(1u);
LABEL_346:
  __break(1u);
LABEL_347:
  __break(1u);
LABEL_348:
  __break(1u);
LABEL_349:
  __break(1u);
LABEL_350:
  __break(1u);
LABEL_351:
  __break(1u);
LABEL_352:
  __break(1u);
LABEL_353:
  __break(1u);
LABEL_354:
  sub_240154F70();
  __break(1u);
  swift_release();
  __break(1u);
LABEL_355:
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_240131360()
{
  return type metadata accessor for DKSubjectGroupingTask();
}

uint64_t type metadata accessor for DKSubjectGroupingTask()
{
  uint64_t result;

  result = qword_256FC0570;
  if (!qword_256FC0570)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2401313A4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_2401313E8(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t *a3, void (*a4)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11[2];

  v8 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = a2(v8);
  v9 = *(_QWORD *)(v8 + 16);
  v11[0] = v8 + 32;
  v11[1] = v9;
  result = sub_24013146C(v11, a3, a4);
  *a1 = v8;
  return result;
}

uint64_t sub_24013146C(uint64_t *a1, uint64_t *a2, void (*a3)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double *v19;
  double v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  double v33;
  uint64_t v34;
  double *v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  unint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t i;
  double v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;

  v6 = a1[1];
  result = sub_240154EB0();
  if (result >= v6)
  {
    if (v6 < 0)
      goto LABEL_137;
    if ((unint64_t)v6 >= 2)
    {
      v87 = *a1;
      v88 = *a1 + 16;
      v89 = -1;
      for (i = 1; i != v6; ++i)
      {
        v91 = *(double *)(v87 + 24 * i + 16);
        v92 = v89;
        v93 = v88;
        do
        {
          if (v91 >= *(double *)v93)
            break;
          if (!v87)
            goto LABEL_141;
          v94 = *(_OWORD *)(v93 + 8);
          *(_OWORD *)(v93 + 8) = *(_OWORD *)(v93 - 16);
          *(_QWORD *)(v93 + 24) = *(_QWORD *)v93;
          *(_OWORD *)(v93 - 16) = v94;
          *(double *)v93 = v91;
          v93 -= 24;
        }
        while (!__CFADD__(v92++, 1));
        v88 += 24;
        --v89;
      }
    }
    return result;
  }
  if (v6 >= 0)
    v8 = v6;
  else
    v8 = v6 + 1;
  if (v6 < -1)
    goto LABEL_146;
  v107 = result;
  v104 = a1;
  if (v6 < 2)
  {
    v11 = MEMORY[0x24BEE4AF8];
    v110 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v6 != 1)
    {
      v15 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v14 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v106 = v11;
      if (v15 >= 2)
      {
        v96 = *v104;
        do
        {
          v97 = v15 - 2;
          if (v15 < 2)
            goto LABEL_132;
          if (!v96)
            goto LABEL_145;
          v98 = v14;
          v99 = v14 + 32;
          v100 = *(_QWORD *)&v14[16 * v97 + 32];
          v101 = *(_QWORD *)&v99[16 * v15 - 8];
          sub_240131B7C((char *)(v96 + 24 * v100), (char *)(v96 + 24 * *(_QWORD *)&v99[16 * v15 - 16]), v96 + 24 * v101, v110, a3);
          if (v3)
            break;
          if (v101 < v100)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v98 = sub_2401356E0((uint64_t)v98);
          if (v97 >= *((_QWORD *)v98 + 2))
            goto LABEL_134;
          v102 = &v98[16 * v97 + 32];
          *(_QWORD *)v102 = v100;
          *((_QWORD *)v102 + 1) = v101;
          v103 = *((_QWORD *)v98 + 2);
          if (v15 > v103)
            goto LABEL_135;
          memmove(&v98[16 * v15 + 16], &v98[16 * v15 + 32], 16 * (v103 - v15));
          v14 = v98;
          *((_QWORD *)v98 + 2) = v103 - 1;
          v15 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v106 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v106 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v9 = v8 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(a2);
    v10 = sub_2401547FC();
    *(_QWORD *)(v10 + 16) = v9;
    v106 = v10;
    v110 = (char *)(v10 + 32);
  }
  v12 = 0;
  v13 = *a1;
  v105 = *a1 + 64;
  v14 = (char *)MEMORY[0x24BEE4AF8];
  v108 = v6;
  v109 = *a1;
  while (1)
  {
    v16 = v12++;
    if (v12 < v6)
    {
      v17 = *(double *)(v13 + 24 * v12 + 16);
      v18 = *(double *)(v13 + 24 * v16 + 16);
      v12 = v16 + 2;
      if (v16 + 2 < v6)
      {
        v19 = (double *)(v105 + 24 * v16);
        v20 = v17;
        while (1)
        {
          v21 = v20;
          v20 = *v19;
          if (v17 < v18 == *v19 >= v21)
            break;
          ++v12;
          v19 += 3;
          if (v6 == v12)
          {
            v12 = v6;
            break;
          }
        }
      }
      if (v17 < v18)
      {
        if (v12 < v16)
          goto LABEL_138;
        if (v16 < v12)
        {
          v22 = 24 * v12;
          v23 = 24 * v16;
          v24 = v12;
          v25 = v16;
          do
          {
            if (v25 != --v24)
            {
              if (!v13)
                goto LABEL_144;
              v26 = v13 + v23;
              v27 = v13 + v22;
              v28 = *(_QWORD *)(v13 + v23 + 16);
              v29 = *(_OWORD *)(v13 + v23);
              v30 = *(_QWORD *)(v13 + v22 - 8);
              *(_OWORD *)v26 = *(_OWORD *)(v13 + v22 - 24);
              *(_QWORD *)(v26 + 16) = v30;
              *(_OWORD *)(v27 - 24) = v29;
              *(_QWORD *)(v27 - 8) = v28;
            }
            ++v25;
            v22 -= 24;
            v23 += 24;
          }
          while (v25 < v24);
        }
      }
    }
    if (v12 >= v6)
      goto LABEL_46;
    if (__OFSUB__(v12, v16))
      goto LABEL_136;
    if (v12 - v16 >= v107)
      goto LABEL_46;
    v31 = v16 + v107;
    if (__OFADD__(v16, v107))
      goto LABEL_139;
    if (v31 >= v6)
      v31 = v6;
    if (v31 < v16)
      break;
    if (v12 != v31)
    {
      v32 = (__int128 *)(v13 + 24 * v12);
      do
      {
        v33 = *(double *)(v13 + 24 * v12 + 16);
        v34 = v16;
        v35 = (double *)v32;
        do
        {
          if (v33 >= *(v35 - 1))
            break;
          if (!v13)
            goto LABEL_142;
          v36 = *(_OWORD *)v35;
          *(_OWORD *)v35 = *(_OWORD *)(v35 - 3);
          v35[2] = *(v35 - 1);
          *(v35 - 1) = v33;
          *(_OWORD *)(v35 - 3) = v36;
          v35 -= 3;
          ++v34;
        }
        while (v12 != v34);
        ++v12;
        v32 = (__int128 *)((char *)v32 + 24);
      }
      while (v12 != v31);
      v12 = v31;
    }
LABEL_46:
    if (v12 < v16)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v14 = sub_240135220(0, *((_QWORD *)v14 + 2) + 1, 1, v14);
    v38 = *((_QWORD *)v14 + 2);
    v37 = *((_QWORD *)v14 + 3);
    v15 = v38 + 1;
    v13 = v109;
    if (v38 >= v37 >> 1)
    {
      v86 = sub_240135220((char *)(v37 > 1), v38 + 1, 1, v14);
      v13 = v109;
      v14 = v86;
    }
    *((_QWORD *)v14 + 2) = v15;
    v39 = v14 + 32;
    v40 = &v14[16 * v38 + 32];
    *(_QWORD *)v40 = v16;
    *((_QWORD *)v40 + 1) = v12;
    if (v38)
    {
      while (1)
      {
        v41 = v15 - 1;
        if (v15 >= 4)
        {
          v46 = &v39[16 * v15];
          v47 = *((_QWORD *)v46 - 8);
          v48 = *((_QWORD *)v46 - 7);
          v52 = __OFSUB__(v48, v47);
          v49 = v48 - v47;
          if (v52)
            goto LABEL_120;
          v51 = *((_QWORD *)v46 - 6);
          v50 = *((_QWORD *)v46 - 5);
          v52 = __OFSUB__(v50, v51);
          v44 = v50 - v51;
          v45 = v52;
          if (v52)
            goto LABEL_121;
          v53 = v15 - 2;
          v54 = &v39[16 * v15 - 32];
          v56 = *(_QWORD *)v54;
          v55 = *((_QWORD *)v54 + 1);
          v52 = __OFSUB__(v55, v56);
          v57 = v55 - v56;
          if (v52)
            goto LABEL_123;
          v52 = __OFADD__(v44, v57);
          v58 = v44 + v57;
          if (v52)
            goto LABEL_126;
          if (v58 >= v49)
          {
            v76 = &v39[16 * v41];
            v78 = *(_QWORD *)v76;
            v77 = *((_QWORD *)v76 + 1);
            v52 = __OFSUB__(v77, v78);
            v79 = v77 - v78;
            if (v52)
              goto LABEL_130;
            v69 = v44 < v79;
            goto LABEL_83;
          }
        }
        else
        {
          if (v15 != 3)
          {
            v70 = *((_QWORD *)v14 + 4);
            v71 = *((_QWORD *)v14 + 5);
            v52 = __OFSUB__(v71, v70);
            v63 = v71 - v70;
            v64 = v52;
            goto LABEL_77;
          }
          v43 = *((_QWORD *)v14 + 4);
          v42 = *((_QWORD *)v14 + 5);
          v52 = __OFSUB__(v42, v43);
          v44 = v42 - v43;
          v45 = v52;
        }
        if ((v45 & 1) != 0)
          goto LABEL_122;
        v53 = v15 - 2;
        v59 = &v39[16 * v15 - 32];
        v61 = *(_QWORD *)v59;
        v60 = *((_QWORD *)v59 + 1);
        v62 = __OFSUB__(v60, v61);
        v63 = v60 - v61;
        v64 = v62;
        if (v62)
          goto LABEL_125;
        v65 = &v39[16 * v41];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v52 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v52)
          goto LABEL_128;
        if (__OFADD__(v63, v68))
          goto LABEL_129;
        if (v63 + v68 >= v44)
        {
          v69 = v44 < v68;
LABEL_83:
          if (v69)
            v41 = v53;
          goto LABEL_85;
        }
LABEL_77:
        if ((v64 & 1) != 0)
          goto LABEL_124;
        v72 = &v39[16 * v41];
        v74 = *(_QWORD *)v72;
        v73 = *((_QWORD *)v72 + 1);
        v52 = __OFSUB__(v73, v74);
        v75 = v73 - v74;
        if (v52)
          goto LABEL_127;
        if (v75 < v63)
          goto LABEL_15;
LABEL_85:
        v80 = v41 - 1;
        if (v41 - 1 >= v15)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v13)
          goto LABEL_143;
        v81 = &v39[16 * v80];
        v82 = *(_QWORD *)v81;
        v83 = &v39[16 * v41];
        v84 = *((_QWORD *)v83 + 1);
        sub_240131B7C((char *)(v13 + 24 * *(_QWORD *)v81), (char *)(v13 + 24 * *(_QWORD *)v83), v13 + 24 * v84, v110, a3);
        if (v3)
          goto LABEL_114;
        if (v84 < v82)
          goto LABEL_117;
        if (v41 > *((_QWORD *)v14 + 2))
          goto LABEL_118;
        *(_QWORD *)v81 = v82;
        *(_QWORD *)&v39[16 * v80 + 8] = v84;
        v85 = *((_QWORD *)v14 + 2);
        if (v41 >= v85)
          goto LABEL_119;
        v15 = v85 - 1;
        memmove(&v39[16 * v41], v83 + 16, 16 * (v85 - 1 - v41));
        *((_QWORD *)v14 + 2) = v85 - 1;
        v13 = v109;
        if (v85 <= 2)
          goto LABEL_15;
      }
    }
    v15 = 1;
LABEL_15:
    v6 = v108;
    if (v12 >= v108)
    {
      v11 = v106;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_240131B7C(char *__src, char *a2, unint64_t a3, char *__dst, void (*a5)(_QWORD, _QWORD, _QWORD))
{
  char *v5;
  char *v7;
  char *v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_QWORD, _QWORD, _QWORD);
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  __int128 v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  char *v20;
  unint64_t v21;
  char *v22;
  char *v23;
  __int128 v24;
  __int128 v25;
  uint64_t result;
  char *v27;
  char *v28;
  char *v29;

  v5 = __dst;
  v7 = a2;
  v8 = __src;
  v9 = a2 - __src;
  v10 = (a2 - __src) / 24;
  v11 = a3 - (_QWORD)a2;
  v12 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v29 = __src;
  v28 = __dst;
  if (v10 >= v12)
  {
    if (v11 >= -23)
    {
      if (__dst != a2 || &a2[24 * v12] <= __dst)
      {
        v19 = a5;
        memmove(__dst, a2, 24 * v12);
        a5 = v19;
      }
      v20 = &v5[24 * v12];
      v27 = v20;
      v29 = v7;
      if (v8 < v7 && v11 >= 24)
      {
        v21 = a3 - 24;
        do
        {
          v22 = (char *)(v21 + 24);
          if (*((double *)v20 - 1) >= *((double *)v7 - 1))
          {
            v27 = v20 - 24;
            if (v22 < v20 || v21 >= (unint64_t)v20 || v22 != v20)
            {
              v25 = *(_OWORD *)(v20 - 24);
              *(_QWORD *)(v21 + 16) = *((_QWORD *)v20 - 1);
              *(_OWORD *)v21 = v25;
            }
            v23 = v7;
            v20 -= 24;
            if (v7 <= v8)
              break;
          }
          else
          {
            v23 = v7 - 24;
            if (v22 != v7 || v21 >= (unint64_t)v7)
            {
              v24 = *(_OWORD *)v23;
              *(_QWORD *)(v21 + 16) = *((_QWORD *)v7 - 1);
              *(_OWORD *)v21 = v24;
            }
            v29 = v7 - 24;
            if (v23 <= v8)
              break;
          }
          v21 -= 24;
          v7 = v23;
        }
        while (v20 > v5);
      }
LABEL_40:
      a5(&v29, &v28, &v27);
      return 1;
    }
  }
  else if (v9 >= -23)
  {
    if (__dst != __src || &__src[24 * v10] <= __dst)
    {
      v13 = a5;
      memmove(__dst, __src, 24 * v10);
      a5 = v13;
    }
    v14 = &v5[24 * v10];
    v27 = v14;
    if ((unint64_t)v7 < a3 && v9 >= 24)
    {
      v15 = v5;
      while (1)
      {
        if (*((double *)v7 + 2) >= *((double *)v15 + 2))
        {
          v5 = v15 + 24;
          v17 = v15;
          v16 = v7;
          if (v8 == v15)
          {
            v15 += 24;
            if (v8 < v5)
              goto LABEL_18;
          }
          else
          {
            v15 += 24;
          }
        }
        else
        {
          v16 = v7 + 24;
          v17 = v7;
          if (v8 == v7 && v8 < v16)
            goto LABEL_18;
        }
        v18 = *(_OWORD *)v17;
        *((_QWORD *)v8 + 2) = *((_QWORD *)v17 + 2);
        *(_OWORD *)v8 = v18;
LABEL_18:
        v8 += 24;
        if (v15 < v14)
        {
          v7 = v16;
          if ((unint64_t)v16 < a3)
            continue;
        }
        v28 = v5;
        v29 = v8;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_240131E4C()
{
  return swift_deallocObject();
}

uint64_t sub_240131E60()
{
  return swift_deallocObject();
}

uint64_t sub_240131E70()
{
  return swift_deallocObject();
}

uint64_t sub_240131E80@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(v1 + 16);
  result = sub_240091370(MEMORY[0x24BEE4AF8]);
  *a1 = v3;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = result;
  return result;
}

id DKPIDController.__allocating_init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  objc_class *v6;
  id v13;

  v13 = objc_allocWithZone(v6);
  return DKPIDController.init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)(a1, a2, a3, a4, a5, a6);
}

id DKPIDController.init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v27;

  v7 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kp;
  v8 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_ki;
  v9 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kd;
  v10 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kd] = MEMORY[0x24BEE4AF8];
  v11 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kv;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kv] = v10;
  v12 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_pError;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_pError] = v10;
  v13 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError] = v10;
  v14 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_dError;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_dError] = v10;
  v15 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_integralLimit;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_integralLimit] = v10;
  v16 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_previousError;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_previousError] = v10;
  v17 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_smoothedError;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_smoothedError] = v10;
  v24 = v17;
  v25 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralZero;
  v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralZero] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralThres] = 0x3FB999999999999ALL;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampDerivativeThres] = 0x3FC999999999999ALL;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_derivativeErrorSmoothing] = 0x3FECCCCCCCCCCCCDLL;
  v18 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize;
  *(_QWORD *)&v6[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize] = 0;
  v19 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)&v6[v18] = v19;
  *(_QWORD *)&v6[v7] = a1;
  *(_QWORD *)&v6[v8] = a2;
  *(_QWORD *)&v6[v9] = a3;
  v23 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v11] = a4;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v15] = a5;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v12] = sub_240071C28(v19, 0.0);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v13] = sub_240071C28(v19, 0.0);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v14] = sub_240071C28(v19, 0.0);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v16] = sub_240071C28(v19, 0.0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v6[v24] = sub_240071C28(v19, 0.0);
  swift_bridgeObjectRelease();
  v6[v25] = a6;
  *(_QWORD *)&v23[OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_rateControl] = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DKRateControl()), sel_init);

  v27.receiver = v23;
  v27.super_class = (Class)type metadata accessor for DKPIDController();
  return objc_msgSendSuper2(&v27, sel_init);
}

uint64_t type metadata accessor for DKPIDController()
{
  return objc_opt_self();
}

_QWORD *sub_2401321A0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  _QWORD *v4;

  v3 = (_QWORD *)sub_240071C28(*(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize), 0.0);
  v4 = sub_2401321F8(a1, v3);
  swift_bridgeObjectRelease();
  return v4;
}

_QWORD *sub_2401321F8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  _QWORD *v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  char v27;
  _QWORD *v28;
  char v29;
  _QWORD *v30;
  char v31;
  _QWORD *v32;
  char v33;
  _QWORD *v34;
  char v35;
  char v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  char v41;
  uint64_t v42;
  char v43;
  double v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  double v48;
  double v49;
  char v50;
  uint64_t v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  double v58;
  double v59;
  char v60;
  char v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  _QWORD *v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;

  v6 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_rateControl;
  v7 = (char *)*(id *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_rateControl);
  v8 = CACurrentMediaTime();
  v9 = *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs];
  if (v9 == 0.0)
    v10 = *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed];
  else
    v10 = v8 - v9;
  *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs] = v8;
  v11 = 1.0 / v10;
  if (*(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps] > 1.0 / v10)
    v11 = *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps];
  if (*(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps] < v11)
    v11 = *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps];
  *(double *)&v7[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps] = v11;

  v12 = *(double *)(*(_QWORD *)(v2 + v6) + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed);
  v13 = *(_QWORD **)(a1 + 16);
  v81 = (_QWORD *)sub_240071C28((unint64_t)v13, 0.0);
  v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize);
  if ((v14 & 0x8000000000000000) != 0)
    goto LABEL_120;
  if (v14)
  {
    if (!v13)
      goto LABEL_121;
    if (v14 - 1 >= (unint64_t)v13)
    {
LABEL_122:
      __break(1u);
    }
    else if (v14 - 1 < a2[2])
    {
      v3 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_smoothedError;
      v13 = *(_QWORD **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_smoothedError);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v2 + v3) = v13;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
LABEL_14:
        v16 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_pError;
        *(_QWORD *)(v2 + v3) = v13;
        v17 = *(_QWORD **)(v2 + v16);
        v18 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v16) = v17;
        if ((v18 & 1) == 0)
          v17 = sub_24014CD20(v17);
        v19 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError;
        *(_QWORD *)(v2 + v16) = v17;
        v20 = *(_QWORD **)(v2 + v19);
        v21 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v19) = v20;
        if ((v21 & 1) == 0)
          v20 = sub_24014CD20(v20);
        v22 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_dError;
        *(_QWORD *)(v2 + v19) = v20;
        v23 = *(_QWORD **)(v2 + v22);
        v24 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v22) = v23;
        if ((v24 & 1) == 0)
          v23 = sub_24014CD20(v23);
        v25 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_previousError;
        *(_QWORD *)(v2 + v22) = v23;
        v26 = *(_QWORD **)(v2 + v25);
        v27 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v25) = v26;
        if ((v27 & 1) == 0)
          v26 = sub_24014CD20(v26);
        *(_QWORD *)(v2 + v25) = v26;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v81 = sub_24014CD20(v81);
        v28 = *(_QWORD **)(v2 + v3);
        v29 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v3) = v28;
        if ((v29 & 1) == 0)
          v28 = sub_24014CD20(v28);
        *(_QWORD *)(v2 + v3) = v28;
        v30 = *(_QWORD **)(v2 + v16);
        v31 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v16) = v30;
        if ((v31 & 1) == 0)
          v30 = sub_24014CD20(v30);
        *(_QWORD *)(v2 + v16) = v30;
        v32 = *(_QWORD **)(v2 + v19);
        v33 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v19) = v32;
        if ((v33 & 1) == 0)
          v32 = sub_24014CD20(v32);
        *(_QWORD *)(v2 + v19) = v32;
        v34 = *(_QWORD **)(v2 + v22);
        v35 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v22) = v34;
        if ((v35 & 1) == 0)
          v34 = sub_24014CD20(v34);
        *(_QWORD *)(v2 + v22) = v34;
        v13 = *(_QWORD **)(v2 + v25);
        v36 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v25) = v13;
        v72 = v14;
        if ((v36 & 1) == 0)
          v13 = sub_24014CD20(v13);
        v14 = 0;
        v12 = v12 + v12;
        v79 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampDerivativeThres;
        v80 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_derivativeErrorSmoothing;
        v77 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_integralLimit;
        v78 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralThres;
        v37 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_clampIntegralZero;
        v75 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_ki;
        v76 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kp;
        a1 += 32;
        v71 = a2 + 4;
        v73 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kv;
        v74 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_kd;
        *(_QWORD *)(v2 + v25) = v13;
        v70 = v37;
        while (1)
        {
          a2 = *(_QWORD **)(v2 + v3);
          if (v14 >= a2[2])
          {
            __break(1u);
LABEL_96:
            __break(1u);
LABEL_97:
            __break(1u);
LABEL_98:
            __break(1u);
LABEL_99:
            __break(1u);
LABEL_100:
            __break(1u);
LABEL_101:
            __break(1u);
LABEL_102:
            __break(1u);
LABEL_103:
            __break(1u);
LABEL_104:
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            __break(1u);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
LABEL_110:
            __break(1u);
LABEL_111:
            __break(1u);
LABEL_112:
            __break(1u);
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            __break(1u);
LABEL_118:
            __break(1u);
LABEL_119:
            __break(1u);
LABEL_120:
            __break(1u);
LABEL_121:
            __break(1u);
            goto LABEL_122;
          }
          v13 = (_QWORD *)(8 * v14);
          v38 = *(double *)&a2[v14 + 4];
          v39 = *(double *)(v2 + v80);
          v40 = *(double *)(a1 + 8 * v14);
          v41 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v2 + v3) = a2;
          if ((v41 & 1) == 0)
            a2 = sub_24014CD20(a2);
          if (v14 >= a2[2])
            goto LABEL_96;
          *(double *)((char *)v13 + (_QWORD)a2 + 32) = v38 * v39 + v40 * (1.0 - v39);
          *(_QWORD *)(v2 + v3) = a2;
          v42 = *(_QWORD *)(a1 + 8 * v14);
          a2 = *(_QWORD **)(v2 + v16);
          v43 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v2 + v16) = a2;
          if ((v43 & 1) == 0)
            a2 = sub_24014CD20(a2);
          if (v14 >= a2[2])
            goto LABEL_97;
          *(_QWORD *)((char *)v13 + (_QWORD)a2 + 32) = v42;
          *(_QWORD *)(v2 + v16) = a2;
          v44 = *(double *)(a1 + 8 * v14);
          a2 = *(_QWORD **)(v2 + v19);
          v45 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v2 + v19) = a2;
          if ((v45 & 1) == 0)
            a2 = sub_24014CD20(a2);
          if (v14 >= a2[2])
            goto LABEL_98;
          *(double *)&a2[v14 + 4] = v10 * v44 + *(double *)&a2[v14 + 4];
          *(_QWORD *)(v2 + v19) = a2;
          v46 = *(_QWORD *)(v2 + v3);
          if (v14 >= *(_QWORD *)(v46 + 16))
            goto LABEL_99;
          v47 = *(_QWORD *)(v2 + v25);
          if (v14 >= *(_QWORD *)(v47 + 16))
            goto LABEL_100;
          v48 = *(double *)(v46 + 8 * v14 + 32);
          v49 = *(double *)(v47 + 8 * v14 + 32);
          a2 = *(_QWORD **)(v2 + v22);
          v50 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v2 + v22) = a2;
          if ((v50 & 1) == 0)
            a2 = sub_24014CD20(a2);
          if (v14 >= a2[2])
            goto LABEL_101;
          *(double *)&a2[v14 + 4] = (v48 - v49) / v10;
          *(_QWORD *)(v2 + v22) = a2;
          v51 = *(_QWORD *)(v2 + v3);
          if (v14 >= *(_QWORD *)(v51 + 16))
            goto LABEL_102;
          if (fabs(*(double *)(v51 + 8 * v14 + 32)) < *(double *)(v2 + v79) || v12 < v10)
          {
            v52 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v2 + v22) = a2;
            if ((v52 & 1) == 0)
              a2 = sub_24014CD20(a2);
            if (v14 >= a2[2])
              goto LABEL_115;
            a2[v14 + 4] = 0;
            *(_QWORD *)(v2 + v22) = a2;
          }
          if (fabs(*(double *)(a1 + 8 * v14)) < *(double *)(v2 + v78) || v12 < v10)
          {
            a2 = *(_QWORD **)(v2 + v19);
            v53 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v2 + v19) = a2;
            if ((v53 & 1) == 0)
              a2 = sub_24014CD20(a2);
            if (v14 >= a2[2])
              goto LABEL_116;
            a2[v14 + 4] = 0;
            *(_QWORD *)(v2 + v19) = a2;
          }
          v54 = *(_QWORD *)(v2 + v3);
          if (v14 >= *(_QWORD *)(v54 + 16))
            goto LABEL_103;
          v55 = *(_QWORD *)(v54 + 8 * v14 + 32);
          a2 = *(_QWORD **)(v2 + v25);
          v56 = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v2 + v25) = a2;
          if ((v56 & 1) == 0)
            a2 = sub_24014CD20(a2);
          if (v14 >= a2[2])
            goto LABEL_104;
          a2[v14 + 4] = v55;
          *(_QWORD *)(v2 + v25) = a2;
          a2 = *(_QWORD **)(v2 + v19);
          if (v14 >= a2[2])
            goto LABEL_105;
          v57 = *(_QWORD *)(v2 + v77);
          if (v14 >= *(_QWORD *)(v57 + 16))
            goto LABEL_106;
          v58 = *(double *)&a2[v14 + 4];
          v59 = *(double *)(v57 + 8 * v14 + 32);
          if (v59 < v58)
            break;
          v59 = -v59;
          if (v58 < v59)
          {
            v61 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v2 + v19) = a2;
            if ((v61 & 1) == 0)
              a2 = sub_24014CD20(a2);
            if (v14 >= a2[2])
              goto LABEL_119;
            goto LABEL_78;
          }
LABEL_79:
          if (*(double *)(a1 + 8 * v14) == 0.0 && *(_BYTE *)(v2 + v70) == 1)
          {
            v62 = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)(v2 + v19) = a2;
            if ((v62 & 1) == 0)
              a2 = sub_24014CD20(a2);
            if (v14 >= a2[2])
              goto LABEL_118;
            a2[v14 + 4] = 0;
            *(_QWORD *)(v2 + v19) = a2;
          }
          v63 = *(_QWORD *)(v2 + v16);
          if (v14 >= *(_QWORD *)(v63 + 16))
            goto LABEL_107;
          v64 = *(_QWORD *)(v2 + v76);
          if (v14 >= *(_QWORD *)(v64 + 16))
            goto LABEL_108;
          if (v14 >= a2[2])
            goto LABEL_109;
          v65 = *(_QWORD *)(v2 + v75);
          if (v14 >= *(_QWORD *)(v65 + 16))
            goto LABEL_110;
          v66 = *(_QWORD *)(v2 + v22);
          if (v14 >= *(_QWORD *)(v66 + 16))
            goto LABEL_111;
          v67 = *(_QWORD *)(v2 + v74);
          if (v14 >= *(_QWORD *)(v67 + 16))
            goto LABEL_112;
          v68 = *(_QWORD *)(v2 + v73);
          if (v14 >= *(_QWORD *)(v68 + 16))
            goto LABEL_113;
          if (v14 >= v81[2])
            goto LABEL_114;
          ++v14;
          *(double *)((char *)v13 + (_QWORD)(v81 + 4)) = *(double *)((char *)v13 + v63 + 32)
                                                       * *(double *)((char *)v13 + v64 + 32)
                                                       + *(double *)((char *)v13 + (_QWORD)a2 + 32)
                                                       * *(double *)((char *)v13 + v65 + 32)
                                                       + *(double *)((char *)v13 + v66 + 32)
                                                       * *(double *)((char *)v13 + v67 + 32)
                                                       + *(double *)((char *)v13 + (_QWORD)v71)
                                                       * *(double *)((char *)v13 + v68 + 32);
          if (v72 == v14)
            return v81;
        }
        v60 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)(v2 + v19) = a2;
        if ((v60 & 1) == 0)
          a2 = sub_24014CD20(a2);
        if (v14 >= a2[2])
          goto LABEL_117;
LABEL_78:
        *(double *)&a2[v14 + 4] = v59;
        *(_QWORD *)(v2 + v19) = a2;
        goto LABEL_79;
      }
LABEL_124:
      v13 = sub_24014CD20(v13);
      goto LABEL_14;
    }
    __break(1u);
    goto LABEL_124;
  }
  return v81;
}

void sub_240132AA4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  unint64_t v11;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_stateSize);
  if (v3 < 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    v0 = sub_24014CD20(v0);
    goto LABEL_4;
  }
  if (!v3)
    return;
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError;
  v0 = *(_QWORD **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPIDController_iError);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v1 + v2) = v0;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_18;
LABEL_4:
  v5 = v0[2];
  v6 = v3 - 1;
  if (v5 < v3 - 1)
    v6 = v0[2];
  if (v6 >= 4)
  {
    v8 = v6 + 1;
    v9 = v8 & 3;
    if ((v8 & 3) == 0)
      v9 = 4;
    v7 = v8 - v9;
    v10 = v0 + 6;
    v11 = v7;
    do
    {
      *(v10 - 1) = 0uLL;
      *v10 = 0uLL;
      v10 += 2;
      v11 -= 4;
    }
    while (v11);
  }
  else
  {
    v7 = 0;
  }
  do
  {
    if (v7 >= v5)
    {
      __break(1u);
      goto LABEL_17;
    }
    v0[v7++ + 4] = 0;
  }
  while (v3 != v7);
  *(_QWORD *)(v1 + v2) = v0;
}

id DKPIDController.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DKPIDController.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DKPIDController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DKPIDController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for DKPIDController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKPIDController.__allocating_init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 592))();
}

uint64_t dispatch thunk of DKPIDController.getTotalError(error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x258))();
}

uint64_t dispatch thunk of DKPIDController.getTotalError(error:velocity:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x260))();
}

uint64_t dispatch thunk of DKPIDController.zeroIntegralError()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x268))();
}

uint64_t sub_240132D58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t, uint64_t, double);
  uint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  char *v45;
  uint64_t v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  char *v52;
  uint64_t v53;
  unsigned int (*v54)(char *, uint64_t, uint64_t);
  void (*v55)(char *, char *, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v60;
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;

  v75 = a2;
  v3 = sub_240154310();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v68 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v71 = (char *)&v65 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v67 = (char *)&v65 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v66 = (char *)&v65 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v12);
  v74 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v73 = (char *)&v65 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v70 = (char *)&v65 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v65 - v19;
  MEMORY[0x24BDAC7A8](v21);
  v69 = (char *)&v65 - v22;
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v65 - v24;
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v65 - v27;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v65 - v30;
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (char *)&v65 - v34;
  v36 = *(_QWORD *)(a1 + 8);
  v37 = *(_QWORD *)(a1 + 16);
  v76 = v4;
  v38 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v4 + 56);
  v38((char *)&v65 - v34, 1, 1, v3, v33);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v38)(v31, 1, 1, v3);
  if (v36 && (*(_BYTE *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8) & 1) == 0)
  {
    v39 = *(_QWORD *)(*(_QWORD *)(v72 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFacePrintTime);
    if (*(_QWORD *)(v39 + 16)
      && (v40 = sub_24013EF5C(*(_QWORD *)(v36 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId)),
          (v41 & 1) != 0))
    {
      v42 = *(_QWORD *)(v39 + 56);
      v43 = v76;
      (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(v28, v42 + *(_QWORD *)(v76 + 72) * v40, v3);
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v38)(v28, 0, 1, v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v28, 1, v3) != 1)
      {
        sub_240070BD4((uint64_t)v35, &qword_256FB4CC8);
        v44 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
        v45 = v66;
        v44(v66, v28, v3);
        v44(v35, v45, v3);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v38)(v35, 0, 1, v3);
        goto LABEL_9;
      }
    }
    else
    {
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v38)(v28, 1, 1, v3);
    }
    swift_retain();
    sub_240070BD4((uint64_t)v28, &qword_256FB4CC8);
    sub_240154274();
    swift_release();
    sub_240070BD4((uint64_t)v35, &qword_256FB4CC8);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v38)(v25, 0, 1, v3);
    sub_240136DEC((uint64_t)v25, (uint64_t)v35);
  }
LABEL_9:
  if (v37 && (*(_BYTE *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8) & 1) == 0)
  {
    v46 = *(_QWORD *)(*(_QWORD *)(v72 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastBodyPrintTime);
    if (*(_QWORD *)(v46 + 16)
      && (v47 = sub_24013EF5C(*(_QWORD *)(v37 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId)),
          (v48 & 1) != 0))
    {
      v49 = v76;
      v50 = (uint64_t)v69;
      (*(void (**)(char *, unint64_t, uint64_t))(v76 + 16))(v69, *(_QWORD *)(v46 + 56) + *(_QWORD *)(v76 + 72) * v47, v3);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v38)(v50, 0, 1, v3);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v50, 1, v3) != 1)
      {
        sub_240070BD4((uint64_t)v31, &qword_256FB4CC8);
        v51 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 32);
        v52 = v67;
        v51(v67, v50, v3);
        v51(v31, (uint64_t)v52, v3);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v38)(v31, 0, 1, v3);
        goto LABEL_17;
      }
    }
    else
    {
      v50 = (uint64_t)v69;
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v38)(v69, 1, 1, v3);
    }
    swift_retain();
    sub_240070BD4(v50, &qword_256FB4CC8);
    sub_240154274();
    swift_release();
    sub_240070BD4((uint64_t)v31, &qword_256FB4CC8);
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v38)(v25, 0, 1, v3);
    sub_240136DEC((uint64_t)v25, (uint64_t)v31);
  }
LABEL_17:
  sub_240070B90((uint64_t)v35, (uint64_t)v20, &qword_256FB4CC8);
  v53 = v76;
  v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48);
  if (v54(v20, 1, v3) == 1)
    goto LABEL_20;
  v55 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
  v56 = v71;
  v55(v71, v20, v3);
  v20 = v70;
  sub_240070B90((uint64_t)v31, (uint64_t)v70, &qword_256FB4CC8);
  if (v54(v20, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v56, v3);
LABEL_20:
    v58 = (uint64_t)v73;
    v57 = (uint64_t)v74;
    sub_240070BD4((uint64_t)v20, &qword_256FB4CC8);
    sub_240070B90((uint64_t)v35, v58, &qword_256FB4CC8);
    if (v54((char *)v58, 1, v3) == 1)
    {
      sub_240070BD4(v58, &qword_256FB4CC8);
      sub_240070B90((uint64_t)v31, v57, &qword_256FB4CC8);
      if (v54((char *)v57, 1, v3) == 1)
      {
        sub_240070BD4(v57, &qword_256FB4CC8);
        sub_240154280();
        sub_240070BD4((uint64_t)v31, &qword_256FB4CC8);
        return sub_240070BD4((uint64_t)v35, &qword_256FB4CC8);
      }
      else
      {
        sub_240070BD4((uint64_t)v31, &qword_256FB4CC8);
        sub_240070BD4((uint64_t)v35, &qword_256FB4CC8);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v75, v57, v3);
      }
    }
    else
    {
      sub_240070BD4((uint64_t)v31, &qword_256FB4CC8);
      sub_240070BD4((uint64_t)v35, &qword_256FB4CC8);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v75, v58, v3);
    }
  }
  v60 = v68;
  v55(v68, v20, v3);
  v61 = sub_2401542B0();
  sub_240070BD4((uint64_t)v31, &qword_256FB4CC8);
  sub_240070BD4((uint64_t)v35, &qword_256FB4CC8);
  v62 = *(void (**)(char *, uint64_t))(v53 + 8);
  if ((v61 & 1) != 0)
  {
    v62(v60, v3);
    v63 = v75;
    v64 = v56;
  }
  else
  {
    v62(v56, v3);
    v63 = v75;
    v64 = v60;
  }
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v55)(v63, v64, v3);
}

uint64_t sub_24013345C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[39] = v0;
  v2 = sub_2401544C0();
  v1[40] = v2;
  v1[41] = *(_QWORD *)(v2 - 8);
  v1[42] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v1[43] = swift_task_alloc();
  v1[44] = swift_task_alloc();
  v1[45] = swift_task_alloc();
  v1[46] = swift_task_alloc();
  v3 = sub_24015434C();
  v1[47] = v3;
  v1[48] = *(_QWORD *)(v3 - 8);
  v1[49] = swift_task_alloc();
  v1[50] = swift_task_alloc();
  v1[51] = swift_task_alloc();
  v4 = sub_240154310();
  v1[52] = v4;
  v1[53] = *(_QWORD *)(v4 - 8);
  v1[54] = swift_task_alloc();
  v1[55] = swift_task_alloc();
  v1[56] = swift_task_alloc();
  v1[57] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  v1[58] = swift_task_alloc();
  v5 = type metadata accessor for DKCamera();
  v1[59] = v5;
  v1[60] = *(_QWORD *)(v5 - 8);
  v1[61] = swift_task_alloc();
  return swift_task_switch();
}

void sub_240133614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  id v22;
  unint64_t v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  unsigned int v28;
  void *v29;
  id v30;
  unsigned int v31;
  void **p_weak_ivar_lyt;
  double v33;
  double v34;
  double v35;
  double v36;
  id v37;
  double v38;
  id v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  NSObject *v52;
  os_log_type_t v53;
  _BOOL4 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  id v62;
  uint64_t v63;
  id v64;
  uint64_t v65;
  double v66;
  double v67;
  double v68;
  double v69;
  double v70;
  id v71;
  uint64_t v72;
  id v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  unint64_t v79;
  void *v80;
  void *v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  id v85;
  void **v86;
  void *v87;
  unsigned int v88;
  void *v89;
  id v90;
  id v91;
  uint64_t v92;
  void *v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _OWORD *v98;
  id v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  unint64_t v104;
  char v105;
  uint64_t v106;
  void *v107;
  id v108;
  float v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  char v117;
  unint64_t v118;
  char v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  _QWORD *v124;
  char v125;
  unint64_t v126;
  uint64_t v127;
  _BOOL8 v128;
  uint64_t v129;
  char v130;
  unint64_t v131;
  char v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  BOOL v137;
  uint64_t v138;
  id v139;
  id v140;
  void *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  id v146;
  void *v147;
  void *v148;
  id v149;
  void *v150;
  id v151;
  unint64_t v152;
  char v153;
  uint64_t v154;
  void *v155;
  id v156;
  float v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unint64_t v164;
  char v165;
  unint64_t v166;
  char v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(unint64_t, uint64_t, uint64_t);
  int v172;
  _QWORD *v173;
  char v174;
  unint64_t v175;
  uint64_t v176;
  _BOOL8 v177;
  uint64_t v178;
  char v179;
  unint64_t v180;
  char v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  void (*v188)(unint64_t, uint64_t, uint64_t);
  void (*v189)(unint64_t, uint64_t, uint64_t);
  uint64_t v190;
  uint64_t v191;
  void (*v192)(uint64_t, uint64_t, uint64_t, uint64_t);
  void (*v193)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v194;
  void *v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  uint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  unint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unint64_t v213;
  _OWORD *v214;
  void *v215;
  void *v216;
  uint64_t *v217;
  void (*v218)(uint64_t, uint64_t, uint64_t);
  uint64_t v219;
  uint64_t v220;
  id v221;
  unsigned int v222;
  uint64_t v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  uint64_t v229;
  unint64_t v230;
  unint64_t v231;
  unint64_t v232;
  uint64_t v233[6];
  CGRect v234;
  CGRect v235;

  v233[4] = *MEMORY[0x24BDAC8D0];
  v1 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  if (!v3)
    goto LABEL_4;
  v4 = *(_QWORD *)(v0 + 472);
  v5 = *(_QWORD *)(v0 + 480);
  v6 = *(_QWORD *)(v0 + 464);
  sub_240070B90(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v6, &qword_256FB4430);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    sub_240070BD4(*(_QWORD *)(v0 + 464), &qword_256FB4430);
LABEL_4:
    v222 = 0;
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    (*(void (**)(_QWORD))(v0 + 8))(v222);
    return;
  }
  sub_240070AF8(*(_QWORD *)(v0 + 464), *(_QWORD *)(v0 + 488));
  if (!*(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups))
    goto LABEL_16;
  v7 = *(_QWORD *)(v0 + 312);
  v233[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v8 = v3;
  sub_240136D24(v233, v7);
  swift_release();
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v233[0] + 16))
  {
    swift_release();

LABEL_16:
    sub_240070B3C(*(_QWORD *)(v0 + 488));
LABEL_17:
    v222 = 1;
    goto LABEL_5;
  }
  v224 = v8;
  v10 = *(_QWORD *)(v0 + 448);
  v9 = *(_QWORD *)(v0 + 456);
  v11 = *(_QWORD *)(v0 + 416);
  v12 = *(_QWORD *)(v0 + 424);
  v13 = *(_QWORD *)(v0 + 312);
  v14 = *(_QWORD *)(v233[0] + 40);
  v227 = *(id *)(v233[0] + 32);
  v229 = v0;
  v16 = *(_QWORD *)(v233[0] + 48);
  v15 = *(_QWORD *)(v233[0] + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v220 = v1;
  v218 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  v218(v9, *(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v11);
  v233[0] = (uint64_t)v227;
  v233[1] = v14;
  v17 = v15;
  v0 = v229;
  v233[2] = v16;
  v233[3] = v17;
  sub_240132D58((uint64_t)v233, v10);
  sub_24015428C();
  v19 = v18;
  v20 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v20(v10, v11);
  v20(v9, v11);
  if (*(double *)(*(_QWORD *)(v13 + 32) + 104) >= v19)
  {
    sub_240070B3C(*(_QWORD *)(v229 + 488));

    swift_release();
    swift_release();
LABEL_19:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v223 = v14;
  v217 = (uint64_t *)(v229 + 304);
  v21 = DKCamera.getCGImagePropertyOrientation()();
  v22 = v224;
  v23 = MEMORY[0x24BEE4AF8];
  sub_2401062BC(MEMORY[0x24BEE4AF8]);
  v24 = objc_allocWithZone(MEMORY[0x24BDF9C28]);
  type metadata accessor for VNImageOption(0);
  sub_2400707A8(&qword_256FB44A0, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_2401562A0);
  v25 = (void *)sub_240154544();
  swift_bridgeObjectRelease();
  v221 = objc_msgSend(v24, sel_initWithCVPixelBuffer_orientation_options_, v22, v21, v25);

  v26 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF9B38]), sel_init);
  v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF9B48]), sel_init);
  objc_msgSend(v26, sel_setDetectionLevel_, 2);
  objc_msgSend(v27, sel_setDetectionLevel_, 2);
  v230 = v23;
  v231 = v23;
  *(_QWORD *)(v229 + 256) = 0;
  v228 = v26;
  v28 = objc_msgSend(v26, sel_setRevision_error_, 3737841669, v229 + 256);
  v29 = *(void **)(v229 + 256);
  if (!v28
    || (*(_QWORD *)(v229 + 280) = 0,
        v30 = v29,
        v31 = objc_msgSend(v27, sel_setRevision_error_, 3737841672, v229 + 280),
        v29 = *(void **)(v229 + 280),
        !v31))
  {
    v48 = v29;
    swift_bridgeObjectRelease_n();
    v49 = (void *)sub_240154160();

    swift_willThrow();
LABEL_21:
    swift_bridgeObjectRelease();
    (*(void (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)(v0 + 328) + 16))(*(_QWORD *)(v0 + 336), *(_QWORD *)(v0 + 312) + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger, *(_QWORD *)(v0 + 320));
    v50 = v49;
    v51 = v49;
    v52 = sub_2401544A8();
    v53 = sub_240154958();
    v54 = os_log_type_enabled(v52, v53);
    v55 = *(_QWORD *)(v0 + 488);
    v57 = *(_QWORD *)(v0 + 328);
    v56 = *(_QWORD *)(v0 + 336);
    v58 = *(_QWORD *)(v0 + 320);
    if (v54)
    {
      v219 = *(_QWORD *)(v0 + 336);
      v216 = v22;
      v59 = swift_slowAlloc();
      v211 = v57;
      v60 = (_QWORD *)swift_slowAlloc();
      v209 = v58;
      v61 = swift_slowAlloc();
      v233[0] = v61;
      *(_DWORD *)v59 = 136315394;
      *(_QWORD *)(v0 + 296) = sub_240112D54(0x2865747563657865, 0xE900000000000029, v233);
      sub_240154A6C();
      *(_WORD *)(v59 + 12) = 2112;
      v62 = v49;
      v226 = v27;
      v63 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 288) = v63;
      sub_240154A6C();
      *v60 = v63;

      _os_log_impl(&dword_24006B000, v52, v53, "%s Unable to create face/torso print error=%@", (uint8_t *)v59, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DF0);
      swift_arrayDestroy();
      MEMORY[0x24267E17C](v60, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x24267E17C](v61, -1, -1);
      v0 = v229;
      MEMORY[0x24267E17C](v59, -1, -1);

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v219, v209);
    }
    else
    {

      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v58);
    }
    sub_240070B3C(v55);
    v222 = 0;
    goto LABEL_5;
  }
  v225 = v27;
  p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
  v215 = v22;
  if (v223)
  {
    v33 = *(double *)(v223 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    v34 = *(double *)(v223 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
    v35 = *(double *)(v223 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
    v36 = *(double *)(v223 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
    v37 = v29;
    swift_retain();
    v234.origin.x = v33;
    v234.origin.y = v34;
    v234.size.width = v35;
    v234.size.height = v36;
    v38 = 1.0 - v34 - CGRectGetHeight(v234);
    v39 = objc_msgSend((id)objc_opt_self(), sel_observationWithBoundingBox_, v33, v38, v35, v36);
    MEMORY[0x24267D0CC]();
    if (*(_QWORD *)((v230 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v230 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    v40 = *(_QWORD *)(v229 + 408);
    v204 = *(_QWORD *)(v229 + 384);
    v210 = *(_QWORD *)(v229 + 376);
    sub_240154814();
    sub_2401547B4();
    v41 = objc_msgSend(v39, sel_uuid);
    sub_240154334();

    *(_QWORD *)(v229 + 80) = type metadata accessor for DKFaceObservation(0);
    *(_QWORD *)(v229 + 88) = sub_2400707A8(&qword_256FB4FB0, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
    *(_QWORD *)(v229 + 56) = v223;
    sub_24007CC80((__int128 *)(v229 + 56), v229 + 16);
    swift_retain();
    v42 = MEMORY[0x24BEE4B00];
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v233[0] = v42;
    v44 = *(_QWORD *)(v229 + 40);
    v45 = __swift_mutable_project_boxed_opaque_existential_1(v229 + 16, v44);
    v46 = *(_QWORD *)(v44 - 8);
    v47 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v46 + 16))(v47, v45, v44);
    sub_2401357BC(*v47, v40, isUniquelyReferenced_nonNull_native, v233, type metadata accessor for DKFaceObservation, &qword_256FB4FB0, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
    __swift_destroy_boxed_opaque_existential_1(v229 + 16);
    swift_task_dealloc();
    v208 = v233[0];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v204 + 8))(v40, v210);

    swift_release();
    v22 = v215;
    p_weak_ivar_lyt = (void **)(&ResourceBundleClass + 56);
  }
  else
  {
    v64 = v29;
    v208 = MEMORY[0x24BEE4B00];
  }
  if (v16)
  {
    v65 = v229 + 96;
    v66 = *(double *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
    v67 = *(double *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
    v68 = *(double *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
    v69 = *(double *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
    swift_retain();
    v235.origin.x = v66;
    v235.origin.y = v67;
    v235.size.width = v68;
    v235.size.height = v69;
    v70 = 1.0 - v67 - CGRectGetHeight(v235);
    v71 = objc_msgSend((id)objc_opt_self(), (SEL)p_weak_ivar_lyt[78], v66, v70, v68, v69);
    MEMORY[0x24267D0CC]();
    if (*(_QWORD *)((v231 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v231 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    v72 = *(_QWORD *)(v229 + 408);
    v205 = *(_QWORD *)(v229 + 384);
    v212 = *(_QWORD *)(v229 + 376);
    sub_240154814();
    sub_2401547B4();
    v73 = objc_msgSend(v71, sel_uuid);
    sub_240154334();

    *(_QWORD *)(v229 + 160) = type metadata accessor for DKBodyObservation(0);
    *(_QWORD *)(v229 + 168) = sub_2400707A8(&qword_256FB4FA8, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
    *(_QWORD *)(v229 + 136) = v16;
    sub_24007CC80((__int128 *)(v229 + 136), v65);
    swift_retain();
    v74 = swift_isUniquelyReferenced_nonNull_native();
    v233[0] = v208;
    v75 = *(_QWORD *)(v229 + 120);
    v76 = __swift_mutable_project_boxed_opaque_existential_1(v65, v75);
    v77 = *(_QWORD *)(v75 - 8);
    v78 = (uint64_t *)swift_task_alloc();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v77 + 16))(v78, v76, v75);
    sub_2401357BC(*v78, v72, v74, v233, type metadata accessor for DKBodyObservation, &qword_256FB4FA8, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
    __swift_destroy_boxed_opaque_existential_1(v65);
    swift_task_dealloc();
    v208 = v233[0];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v205 + 8))(v72, v212);

    swift_release();
    v79 = v231;
    v22 = v215;
  }
  else
  {
    v79 = MEMORY[0x24BEE4AF8];
  }
  sub_24010CA04(0, &qword_256FC0898);
  swift_bridgeObjectRetain();
  v80 = (void *)sub_240154790();
  swift_bridgeObjectRelease();
  objc_msgSend(v228, sel_setInputFaceObservations_, v80);

  if (v79 >> 62)
  {
    sub_24010CA04(0, &qword_256FC08A0);
    swift_bridgeObjectRetain();
    sub_240154D0C();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    sub_240154F04();
    sub_24010CA04(0, &qword_256FC08A0);
  }
  v0 = v229;
  swift_bridgeObjectRelease();
  sub_24010CA04(0, &qword_256FC08A0);
  v81 = (void *)sub_240154790();
  swift_bridgeObjectRelease();
  objc_msgSend(v225, sel_setInputDetectedObjectObservations_, v81);

  v232 = MEMORY[0x24BEE4AF8];
  if (v230 >> 62)
  {
    swift_bridgeObjectRetain();
    v82 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v82 = *(_QWORD *)((v230 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  v27 = v225;
  if (v82 >= 1)
  {
    v83 = v228;
    MEMORY[0x24267D0CC]();
    if (*(_QWORD *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
  }
  if (v79 >> 62)
  {
    swift_bridgeObjectRetain();
    v84 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v84 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v84 >= 1)
  {
    v85 = v225;
    MEMORY[0x24267D0CC]();
    if (*(_QWORD *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v232 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
  }
  v86 = (void **)(v229 + 264);
  if (v232 >> 62)
  {
    sub_24010CA04(0, &qword_256FC08A8);
    swift_bridgeObjectRetain();
    sub_240154D0C();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_240154F04();
    sub_24010CA04(0, &qword_256FC08A8);
  }
  swift_bridgeObjectRelease();
  sub_24010CA04(0, &qword_256FC08A8);
  v87 = (void *)sub_240154790();
  swift_bridgeObjectRelease();
  *v86 = 0;
  v88 = objc_msgSend(v221, sel_performRequests_error_, v87, v229 + 264);

  v89 = *v86;
  if (!v88)
  {
    v139 = v89;
    v49 = (void *)sub_240154160();

    swift_willThrow();
    goto LABEL_21;
  }
  v90 = v89;
  v91 = objc_msgSend(v228, sel_results);
  v92 = v208;
  if (!v91)
  {
LABEL_95:
    v140 = objc_msgSend(v27, sel_results);
    if (v140)
    {
      v141 = v140;
      v142 = sub_2401547A8();

      if (v142 >> 62)
      {
        swift_bridgeObjectRetain();
        v143 = sub_240154D30();
        swift_bridgeObjectRelease();
        if (v143)
          goto LABEL_98;
      }
      else
      {
        v143 = *(_QWORD *)((v142 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v143)
        {
LABEL_98:
          if (v143 < 1)
            goto LABEL_144;
          v144 = 0;
          v214 = (_OWORD *)(v229 + 216);
          v145 = *(_QWORD *)(v229 + 424);
          v203 = v143;
          v207 = *(_QWORD *)(v229 + 384);
          v194 = *(_QWORD *)(v229 + 312);
          v196 = v145;
          do
          {
            if ((v142 & 0xC000000000000001) != 0)
              v146 = (id)MEMORY[0x24267D4E0](v144, v142);
            else
              v146 = *(id *)(v142 + 8 * v144 + 32);
            v147 = v146;
            objc_opt_self();
            v148 = (void *)swift_dynamicCastObjCClass();
            if (v148 && (v149 = objc_msgSend(v148, sel_torsoprint)) != 0)
            {
              v150 = v149;
              v151 = objc_msgSend(v147, sel_uuid);
              sub_240154334();

              if (*(_QWORD *)(v92 + 16))
              {
                v152 = sub_24013F178(*(_QWORD *)(v229 + 392));
                if ((v153 & 1) != 0)
                {
                  sub_24008BA98(*(_QWORD *)(v92 + 56) + 40 * v152, (uint64_t)v214);
                }
                else
                {
                  *(_QWORD *)(v229 + 248) = 0;
                  *v214 = 0u;
                  *(_OWORD *)(v229 + 232) = 0u;
                }
              }
              else
              {
                *(_QWORD *)(v229 + 248) = 0;
                *v214 = 0u;
                *(_OWORD *)(v229 + 232) = 0u;
              }
              (*(void (**)(_QWORD, _QWORD))(v207 + 8))(*(_QWORD *)(v229 + 392), *(_QWORD *)(v229 + 376));
              if (*(_QWORD *)(v229 + 240))
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
                type metadata accessor for DKBodyObservation(0);
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v154 = *v217;
                  v155 = *(void **)(*v217 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint);
                  *(_QWORD *)(v154 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = v150;
                  v156 = v150;

                  objc_msgSend(v156, sel_confidence);
                  v158 = v154 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprintConfidence;
                  *(double *)v158 = v157;
                  *(_BYTE *)(v158 + 8) = 0;
                  if (*(_BYTE *)(v154 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8) == 1)
                  {

                  }
                  else
                  {
                    v198 = v156;
                    v201 = *(_QWORD *)(v154 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
                    v159 = *(_QWORD *)(v229 + 416);
                    v160 = *(_QWORD *)(v229 + 352);
                    v161 = *(_QWORD *)(v194 + 40);
                    v218(v160, *(_QWORD *)(v220 + 48)+ OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v159);
                    v193 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v145 + 56);
                    v193(v160, 0, 1, v159);
                    v162 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastBodyPrintTime;
                    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48))(v160, 1, v159) == 1)
                    {
                      v163 = *(_QWORD *)(v229 + 352);
                      swift_retain();
                      sub_240070BD4(v163, &qword_256FB4CC8);
                      v164 = sub_24013EF5C(v201);
                      if ((v165 & 1) != 0)
                      {
                        v166 = v164;
                        v167 = swift_isUniquelyReferenced_nonNull_native();
                        v168 = *(_QWORD *)(v161 + v162);
                        v233[0] = v168;
                        *(_QWORD *)(v161 + v162) = 0x8000000000000000;
                        if ((v167 & 1) == 0)
                        {
                          sub_2400AF258();
                          v168 = v233[0];
                        }
                        v169 = v229;
                        (*(void (**)(_QWORD, unint64_t, _QWORD))(v196 + 32))(*(_QWORD *)(v229 + 344), *(_QWORD *)(v168 + 56) + *(_QWORD *)(v196 + 72) * v166, *(_QWORD *)(v229 + 416));
                        sub_2400F79EC(v166, v168);
                        *(_QWORD *)(v161 + v162) = v168;
                        swift_bridgeObjectRelease();
                        v170 = 0;
                      }
                      else
                      {
                        v170 = 1;
                        v169 = v229;
                      }
                      v182 = *(_QWORD *)(v169 + 344);
                      v193(v182, v170, 1, *(_QWORD *)(v169 + 416));
                      sub_240070BD4(v182, &qword_256FB4CC8);

                      swift_release();
                      swift_release();
                      v27 = v225;
                      v92 = v208;
                      v143 = v203;
                      v145 = v196;
                      goto LABEL_101;
                    }
                    v171 = *(void (**)(unint64_t, uint64_t, uint64_t))(v145 + 32);
                    v171(*(_QWORD *)(v229 + 432), *(_QWORD *)(v229 + 352), *(_QWORD *)(v229 + 416));
                    swift_retain();
                    v172 = swift_isUniquelyReferenced_nonNull_native();
                    v233[0] = *(_QWORD *)(v161 + v162);
                    v173 = (_QWORD *)v233[0];
                    v191 = v161;
                    *(_QWORD *)(v161 + v162) = 0x8000000000000000;
                    v175 = sub_24013EF5C(v201);
                    v176 = v173[2];
                    v177 = (v174 & 1) == 0;
                    v178 = v176 + v177;
                    if (__OFADD__(v176, v177))
                      goto LABEL_145;
                    v179 = v174;
                    v189 = v171;
                    if (v173[3] >= v178)
                    {
                      v145 = v196;
                      if ((v172 & 1) == 0)
                      {
                        sub_2400AF258();
                        v173 = (_QWORD *)v233[0];
                      }
                    }
                    else
                    {
                      sub_2400AC420(v178, v172);
                      v173 = (_QWORD *)v233[0];
                      v180 = sub_24013EF5C(v201);
                      v145 = v196;
                      if ((v179 & 1) != (v181 & 1))
                        goto LABEL_138;
                      v175 = v180;
                    }
                    v183 = *(_QWORD *)(v229 + 432);
                    v184 = *(_QWORD *)(v229 + 416);
                    if ((v179 & 1) != 0)
                    {
                      (*(void (**)(unint64_t, uint64_t, uint64_t))(v145 + 40))(v173[7] + *(_QWORD *)(v145 + 72) * v175, v183, v184);
                    }
                    else
                    {
                      v173[(v175 >> 6) + 8] |= 1 << v175;
                      *(_QWORD *)(v173[6] + 8 * v175) = v201;
                      v189(v173[7] + *(_QWORD *)(v145 + 72) * v175, v183, v184);
                      v185 = v173[2];
                      v137 = __OFADD__(v185, 1);
                      v186 = v185 + 1;
                      if (v137)
                        goto LABEL_147;
                      v173[2] = v186;
                    }
                    v92 = v208;
                    *(_QWORD *)(v191 + v162) = v173;
                    swift_bridgeObjectRelease();

                    swift_release();
                  }
                  swift_release();
                  v27 = v225;
                  v143 = v203;
                }
                else
                {

                  v143 = v203;
                  v27 = v225;
                }
              }
              else
              {

                sub_240070BD4((uint64_t)v214, &qword_256FC08B0);
                v143 = v203;
                v27 = v225;
              }
            }
            else
            {

            }
LABEL_101:
            ++v144;
          }
          while (v143 != v144);
        }
      }

      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v0 = v229;
    }
    else
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();

      v27 = v221;
    }
    v187 = *(_QWORD *)(v0 + 488);

    sub_240070B3C(v187);
    goto LABEL_19;
  }
  v93 = v91;
  v94 = sub_2401547A8();

  v95 = v94;
  v206 = v94;
  if (v94 >> 62)
  {
    swift_bridgeObjectRetain();
    v95 = v94;
    v96 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (v96)
      goto LABEL_51;
    goto LABEL_94;
  }
  v96 = *(_QWORD *)((v94 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v96)
  {
LABEL_94:
    swift_bridgeObjectRelease();
    v0 = v229;
    v22 = v215;
    goto LABEL_95;
  }
LABEL_51:
  if (v96 < 1)
    goto LABEL_143;
  v97 = 0;
  v98 = (_OWORD *)(v229 + 176);
  v190 = *(_QWORD *)(v229 + 312);
  v199 = *(_QWORD *)(v229 + 424);
  v200 = (uint64_t *)(v229 + 272);
  v213 = v95 & 0xC000000000000001;
  v202 = *(_QWORD *)(v229 + 384);
  while (1)
  {
    v99 = v213 ? (id)MEMORY[0x24267D4E0](v97, v95) : *(id *)(v95 + 8 * v97 + 32);
    v100 = v99;
    v101 = objc_msgSend(v99, sel_faceprint);
    if (v101)
      break;

LABEL_54:
    if (v96 == ++v97)
      goto LABEL_94;
  }
  v102 = v101;
  v103 = objc_msgSend(v100, sel_uuid);
  sub_240154334();

  if (*(_QWORD *)(v92 + 16) && (v104 = sub_24013F178(*(_QWORD *)(v229 + 400)), (v105 & 1) != 0))
  {
    sub_24008BA98(*(_QWORD *)(v92 + 56) + 40 * v104, (uint64_t)v98);
  }
  else
  {
    *(_QWORD *)(v229 + 208) = 0;
    *v98 = 0u;
    *(_OWORD *)(v229 + 192) = 0u;
  }
  (*(void (**)(_QWORD, _QWORD))(v202 + 8))(*(_QWORD *)(v229 + 400), *(_QWORD *)(v229 + 376));
  if (!*(_QWORD *)(v229 + 200))
  {

    sub_240070BD4((uint64_t)v98, &qword_256FC08B0);
    v95 = v206;
    goto LABEL_54;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
  type metadata accessor for DKFaceObservation(0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    v95 = v206;
    goto LABEL_54;
  }
  v106 = *v200;
  v107 = *(void **)(*v200 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
  *(_QWORD *)(*v200 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = v102;
  v108 = v102;

  objc_msgSend(v108, sel_confidence);
  v110 = v106 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
  *(double *)v110 = v109;
  *(_BYTE *)(v110 + 8) = 0;
  if (*(_BYTE *)(v106 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8) == 1)
  {

LABEL_87:
    swift_release();
    v27 = v225;
    v95 = v206;
    goto LABEL_54;
  }
  v195 = v108;
  v197 = *(_QWORD *)(v106 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
  v111 = *(_QWORD *)(v229 + 416);
  v112 = *(_QWORD *)(v229 + 368);
  v113 = *(_QWORD *)(v190 + 40);
  v218(v112, *(_QWORD *)(v220 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v111);
  v192 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v199 + 56);
  v192(v112, 0, 1, v111);
  v114 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFacePrintTime;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v199 + 48))(v112, 1, v111) == 1)
  {
    v115 = *(_QWORD *)(v229 + 368);
    swift_retain();
    sub_240070BD4(v115, &qword_256FB4CC8);
    v116 = sub_24013EF5C(v197);
    if ((v117 & 1) != 0)
    {
      v118 = v116;
      v119 = swift_isUniquelyReferenced_nonNull_native();
      v120 = *(_QWORD *)(v113 + v114);
      v233[0] = v120;
      *(_QWORD *)(v113 + v114) = 0x8000000000000000;
      if ((v119 & 1) == 0)
      {
        sub_2400AF258();
        v120 = v233[0];
      }
      v121 = v229;
      (*(void (**)(_QWORD, unint64_t, _QWORD))(v199 + 32))(*(_QWORD *)(v229 + 360), *(_QWORD *)(v120 + 56) + *(_QWORD *)(v199 + 72) * v118, *(_QWORD *)(v229 + 416));
      sub_2400F79EC(v118, v120);
      *(_QWORD *)(v113 + v114) = v120;
      swift_bridgeObjectRelease();
      v122 = 0;
    }
    else
    {
      v122 = 1;
      v121 = v229;
    }
    v133 = *(_QWORD *)(v121 + 360);
    v192(v133, v122, 1, *(_QWORD *)(v121 + 416));
    sub_240070BD4(v133, &qword_256FB4CC8);

    swift_release();
    swift_release();
    v27 = v225;
    v95 = v206;
    v92 = v208;
    goto LABEL_54;
  }
  v188 = *(void (**)(unint64_t, uint64_t, uint64_t))(v199 + 32);
  v188(*(_QWORD *)(v229 + 440), *(_QWORD *)(v229 + 368), *(_QWORD *)(v229 + 416));
  swift_retain();
  v123 = swift_isUniquelyReferenced_nonNull_native();
  v233[0] = *(_QWORD *)(v113 + v114);
  v124 = (_QWORD *)v233[0];
  *(_QWORD *)(v113 + v114) = 0x8000000000000000;
  v126 = sub_24013EF5C(v197);
  v127 = v124[2];
  v128 = (v125 & 1) == 0;
  v129 = v127 + v128;
  if (!__OFADD__(v127, v128))
  {
    v130 = v125;
    if (v124[3] >= v129)
    {
      if ((v123 & 1) == 0)
      {
        sub_2400AF258();
        v124 = (_QWORD *)v233[0];
      }
    }
    else
    {
      sub_2400AC420(v129, v123);
      v124 = (_QWORD *)v233[0];
      v131 = sub_24013EF5C(v197);
      if ((v130 & 1) != (v132 & 1))
      {
LABEL_138:
        sub_240154F70();
        return;
      }
      v126 = v131;
    }
    v134 = *(_QWORD *)(v229 + 440);
    v135 = *(_QWORD *)(v229 + 416);
    if ((v130 & 1) != 0)
    {
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v199 + 40))(v124[7] + *(_QWORD *)(v199 + 72) * v126, v134, v135);
    }
    else
    {
      v124[(v126 >> 6) + 8] |= 1 << v126;
      *(_QWORD *)(v124[6] + 8 * v126) = v197;
      v188(v124[7] + *(_QWORD *)(v199 + 72) * v126, v134, v135);
      v136 = v124[2];
      v137 = __OFADD__(v136, 1);
      v138 = v136 + 1;
      if (v137)
        goto LABEL_146;
      v124[2] = v138;
    }
    v92 = v208;
    *(_QWORD *)(v113 + v114) = v124;
    swift_bridgeObjectRelease();

    swift_release();
    goto LABEL_87;
  }
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
}

uint64_t sub_2401351DC()
{
  return type metadata accessor for DKPrintExtractionTask();
}

uint64_t type metadata accessor for DKPrintExtractionTask()
{
  uint64_t result;

  result = qword_256FC0778;
  if (!qword_256FC0778)
    return swift_getSingletonMetadata();
  return result;
}

char *sub_240135220(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FC08B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v12 = v11 - 32;
    if (v11 < 32)
      v12 = v11 - 17;
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8])
      memmove(v13, v14, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_240135318(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 7;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -8)
  {
    result = (char *)sub_240154D60();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
      return (char *)memmove(result, v3, 8 * v7);
  }
  return result;
}

char *sub_2401353C4(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 31;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -32)
  {
    result = (char *)sub_240154D60();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 5;
    if (result != v3 || result >= &v3[32 * v7])
      return (char *)memmove(result, v3, 32 * v7);
  }
  return result;
}

char *sub_24013546C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  char *result;
  uint64_t v6;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  if (v4 <= -24)
  {
    result = (char *)sub_240154D60();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
      return (char *)memmove(result, v3, 24 * v6);
  }
  return result;
}

char *sub_24013552C(void **a1, const void **a2, _QWORD *a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *result;
  uint64_t v7;

  v3 = (char *)*a2;
  v4 = *a3 - (_QWORD)v3;
  v5 = v4 + 15;
  if (v4 >= 0)
    v5 = *a3 - (_QWORD)v3;
  if (v4 <= -16)
  {
    result = (char *)sub_240154D60();
    __break(1u);
  }
  else
  {
    result = (char *)*a1;
    v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
      return (char *)memmove(result, v3, 16 * v7);
  }
  return result;
}

uint64_t sub_2401355D4(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = sub_2401541D8();
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_14;
  if (v8 / v7 < 0)
  {
LABEL_15:
    result = sub_240154D60();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_2401356E0(uint64_t a1)
{
  return sub_240135220(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2401356F4(uint64_t a1)
{
  return sub_2400E5B8C(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_240135708(uint64_t a1)
{
  return sub_2400E5A30(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24013571C(uint64_t a1)
{
  return sub_2400E5B98(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_240135730(uint64_t a1)
{
  return sub_2400E5D48(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_240135744(uint64_t a1)
{
  return sub_2400E5EB0(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_240135758(uint64_t a1)
{
  return sub_2400E5EBC(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

void sub_24013576C()
{
  JUMPOUT(0x24267D7ECLL);
}

uint64_t sub_240135780(_QWORD *a1)
{
  return sub_2400E631C(0, a1[2], 0, a1);
}

uint64_t sub_240135794(uint64_t a1)
{
  return sub_2400E6B00(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_2401357A8(_QWORD *a1)
{
  return sub_2400E6DB8(0, a1[2], 0, a1);
}

uint64_t sub_2401357BC(uint64_t a1, uint64_t a2, char a3, _QWORD *a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t result;
  unint64_t v30;
  char v31;
  uint64_t v32;
  double v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;

  v14 = sub_24015434C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = ((uint64_t (*)(_QWORD, double))a5)(0, v16);
  v38 = a6;
  v39 = a7;
  v42 = sub_2400707A8(a6, a5, a7);
  *(_QWORD *)&v40 = a1;
  v19 = (_QWORD *)*a4;
  v21 = sub_24013F178(a2);
  v22 = v19[2];
  v23 = (v20 & 1) == 0;
  v24 = v22 + v23;
  if (__OFADD__(v22, v23))
  {
    __break(1u);
    goto LABEL_14;
  }
  v25 = v20;
  v26 = v19[3];
  if (v26 >= v24 && (a3 & 1) != 0)
  {
LABEL_7:
    v27 = (_QWORD *)*a4;
    if ((v25 & 1) != 0)
    {
LABEL_8:
      v28 = v27[7] + 40 * v21;
      __swift_destroy_boxed_opaque_existential_1(v28);
      return sub_24007CC80(&v40, v28);
    }
    goto LABEL_11;
  }
  if (v26 >= v24 && (a3 & 1) == 0)
  {
    sub_2400AF478();
    goto LABEL_7;
  }
  sub_2400AC750(v24, a3 & 1);
  v30 = sub_24013F178(a2);
  if ((v25 & 1) != (v31 & 1))
  {
LABEL_14:
    result = sub_240154F70();
    __break(1u);
    return result;
  }
  v21 = v30;
  v27 = (_QWORD *)*a4;
  if ((v25 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a2, v14);
  v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v40, v41);
  v33 = MEMORY[0x24BDAC7A8](v32);
  v35 = (uint64_t *)((char *)&v37 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v36 + 16))(v35, v33);
  sub_2401359C4(v21, (uint64_t)v18, *v35, v27, a5, v38, v39);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v40);
}

uint64_t sub_2401359C4(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(uint64_t), unint64_t *a6, uint64_t a7)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;

  v21 = a5(0);
  v22 = sub_2400707A8(a6, a5, a7);
  *(_QWORD *)&v20 = a3;
  a4[(a1 >> 6) + 8] |= 1 << a1;
  v14 = a4[6];
  v15 = sub_24015434C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14 + *(_QWORD *)(*(_QWORD *)(v15 - 8) + 72) * a1, a2, v15);
  result = sub_24007CC80(&v20, a4[7] + 40 * a1);
  v17 = a4[2];
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    a4[2] = v19;
  return result;
}

uint64_t sub_240135AA8(char *a1, char *a2, unint64_t a3, char *a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  char *v34;
  __int128 v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  char *v54;
  __int128 v55;
  __int128 v56;
  uint64_t result;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  char *v62;
  unint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  char *v79;

  v69 = a5;
  v9 = sub_240154310();
  v67 = *(_QWORD *)(v9 - 8);
  v68 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v66 = (uint64_t)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v65 = (uint64_t)&v58 - v12;
  v13 = a2 - a1;
  v14 = a2 - a1 + 31;
  if (a2 - a1 >= 0)
    v14 = a2 - a1;
  v15 = v14 >> 5;
  v63 = a3;
  v16 = a3 - (_QWORD)a2;
  v17 = v16 / 32;
  v79 = a1;
  v78 = a4;
  if (v14 >> 5 >= v16 / 32)
  {
    if (v16 < -31)
      goto LABEL_44;
    if (a4 != a2 || &a2[32 * v17] <= a4)
      memmove(a4, a2, 32 * v17);
    v36 = &a4[32 * v17];
    v77 = v36;
    v79 = a2;
    if (v16 < 32 || a1 >= a2)
      goto LABEL_43;
    v37 = (char *)(v63 - 32);
    v38 = a2;
    v70 = a1;
    v71 = a4;
    while (1)
    {
      v72 = a2;
      v39 = *((_QWORD *)v36 - 4);
      v40 = (char *)*((_QWORD *)v36 - 3);
      v41 = v36 - 32;
      v63 = (unint64_t)v36;
      v64 = v37 + 32;
      v43 = *((_QWORD *)v36 - 2);
      v42 = *((_QWORD *)v36 - 1);
      v44 = *((_QWORD *)v38 - 4);
      v45 = (char *)*((_QWORD *)v38 - 3);
      v38 -= 32;
      v59 = v44;
      v60 = v45;
      v46 = *((_QWORD *)v38 + 2);
      v47 = *((_QWORD *)v38 + 3);
      v73 = v39;
      v74 = v40;
      v61 = v43;
      v62 = v40;
      v75 = v43;
      v76 = v42;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v48 = v65;
      sub_240132D58((uint64_t)&v73, v65);
      v73 = v59;
      v74 = v45;
      v75 = v46;
      v76 = v47;
      v49 = v66;
      sub_240132D58((uint64_t)&v73, v66);
      LODWORD(v59) = sub_2401542B0();
      v50 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
      v51 = v49;
      v52 = v68;
      v50(v51, v68);
      v50(v48, v52);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if ((v59 & 1) != 0)
      {
        v36 = (char *)v63;
        if (v64 != v72 || v37 >= v72)
        {
          v53 = *((_OWORD *)v38 + 1);
          *(_OWORD *)v37 = *(_OWORD *)v38;
          *((_OWORD *)v37 + 1) = v53;
        }
        v79 = v38;
      }
      else
      {
        v77 = v41;
        if ((unint64_t)v64 >= v63 && (unint64_t)v37 < v63)
        {
          v54 = v71;
          if (v64 != (char *)v63)
          {
            v55 = *((_OWORD *)v41 + 1);
            *(_OWORD *)v37 = *(_OWORD *)v41;
            *((_OWORD *)v37 + 1) = v55;
          }
          v38 = v72;
          v36 = v41;
          goto LABEL_41;
        }
        v56 = *((_OWORD *)v41 + 1);
        *(_OWORD *)v37 = *(_OWORD *)v41;
        *((_OWORD *)v37 + 1) = v56;
        v38 = v72;
        v36 = v41;
      }
      v54 = v71;
LABEL_41:
      if (v36 > v54)
      {
        v37 -= 32;
        a2 = v38;
        if (v38 > v70)
          continue;
      }
      goto LABEL_43;
    }
  }
  if (v13 >= -31)
  {
    if (a4 != a1 || &a1[32 * v15] <= a4)
      memmove(a4, a1, 32 * v15);
    v62 = &a4[32 * v15];
    v77 = v62;
    if (v13 >= 32 && (unint64_t)a2 < v63)
    {
      v18 = v65;
      do
      {
        v71 = a4;
        v72 = a2;
        v70 = a1;
        v19 = *(_QWORD *)a2;
        v20 = (char *)*((_QWORD *)a2 + 1);
        v22 = *((_QWORD *)a2 + 2);
        v21 = *((_QWORD *)a2 + 3);
        v24 = *(_QWORD *)a4;
        v23 = (char *)*((_QWORD *)a4 + 1);
        v26 = *((_QWORD *)a4 + 2);
        v25 = *((_QWORD *)a4 + 3);
        v73 = v19;
        v74 = v20;
        v75 = v22;
        v76 = v21;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_240132D58((uint64_t)&v73, v18);
        v73 = v24;
        v74 = v23;
        v75 = v26;
        v76 = v25;
        v27 = v66;
        sub_240132D58((uint64_t)&v73, v66);
        LODWORD(v64) = sub_2401542B0();
        v28 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
        v29 = v27;
        v30 = v68;
        v28(v29, v68);
        v28(v18, v30);
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        if ((v64 & 1) != 0)
        {
          a4 = v71;
          v31 = v72 + 32;
          v32 = v70;
          if (v70 < v72 || v70 >= v31 || v70 != v72)
          {
            v33 = *((_OWORD *)v72 + 1);
            *(_OWORD *)v70 = *(_OWORD *)v72;
            *((_OWORD *)v32 + 1) = v33;
          }
        }
        else
        {
          v34 = v71;
          v31 = v72;
          v32 = v70;
          if (v70 != v71)
          {
            v35 = *((_OWORD *)v71 + 1);
            *(_OWORD *)v70 = *(_OWORD *)v71;
            *((_OWORD *)v32 + 1) = v35;
          }
          a4 = v34 + 32;
          v78 = a4;
        }
        a1 = v32 + 32;
        v79 = a1;
        if (a4 >= v62)
          break;
        a2 = v31;
      }
      while ((unint64_t)v31 < v63);
    }
LABEL_43:
    sub_2401353C4((void **)&v79, (const void **)&v78, &v77);
    return 1;
  }
LABEL_44:
  swift_release();
  result = sub_240154D60();
  __break(1u);
  return result;
}

void sub_240135F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v38 = a5;
  v32 = a1;
  v8 = sub_240154310();
  v36 = *(_QWORD *)(v8 - 8);
  v37 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v35 = (uint64_t)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v34 = (char *)&v30 - v11;
  v31 = a2;
  if (a3 != a2)
  {
    v39 = *a4;
    v12 = (_QWORD *)(v39 + 32 * a3 + 24);
    v13 = (uint64_t)v34;
LABEL_5:
    v14 = (uint64_t *)(v39 + 32 * a3);
    v15 = *v14;
    v16 = v14[1];
    v17 = v14[2];
    v18 = v14[3];
    v40 = a3;
    v41 = v32;
    v33 = v12;
    while (1)
    {
      v19 = *(v12 - 6);
      v20 = (__int128 *)(v12 - 7);
      v42 = *(v12 - 7);
      v43 = v19;
      v22 = *(v12 - 5);
      v21 = *(v12 - 4);
      v44 = v15;
      v45 = v16;
      v46 = v17;
      v47 = v18;
      v48 = v16;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_240132D58((uint64_t)&v44, v13);
      v44 = v42;
      v45 = v19;
      v46 = v22;
      v47 = v21;
      v23 = v35;
      sub_240132D58((uint64_t)&v44, v35);
      LODWORD(v42) = sub_2401542B0();
      v24 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      v25 = v23;
      v26 = v37;
      v24(v25, v37);
      v24(v13, v26);
      v27 = v40;
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      if ((v42 & 1) == 0)
      {
LABEL_4:
        a3 = v27 + 1;
        v12 = v33 + 4;
        if (a3 == v31)
          return;
        goto LABEL_5;
      }
      if (!v39)
        break;
      v18 = *v12;
      v29 = *v20;
      v28 = *(_OWORD *)(v12 - 5);
      *(v12 - 4) = *v12;
      v12 -= 4;
      v15 = v12[1];
      v16 = v12[2];
      v17 = v12[3];
      v20[2] = v29;
      v20[3] = v28;
      *(v12 - 3) = v15;
      *(v12 - 2) = v16;
      *(v12 - 1) = v17;
      if (v27 == ++v41)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_2401361E0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char **v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char **v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _QWORD *v38;
  _QWORD *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  char *v62;
  uint64_t v63;
  _QWORD *v64;
  char *v65;
  char **v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  __int128 *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  __int128 v82;
  unint64_t v83;
  unint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  unint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  BOOL v109;
  uint64_t v110;
  char v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  BOOL v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char *v128;
  uint64_t v129;
  unint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  unint64_t v137;
  char *v138;
  uint64_t v139;
  unint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  unint64_t v147;
  char *v148;
  uint64_t v149;
  char *v150;
  unint64_t v151;
  uint64_t result;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  _QWORD *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(uint64_t, uint64_t);
  char *v174;
  char *v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;

  v169 = sub_240154310();
  v166 = *(_QWORD *)(v169 - 8);
  MEMORY[0x24BDAC7A8](v169);
  v168 = (uint64_t)&v153 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v167 = (uint64_t)&v153 - v7;
  v8 = a1[1];
  swift_retain_n();
  v9 = sub_240154EB0();
  if (v9 >= v8)
  {
    if (v8 < 0)
      goto LABEL_140;
    if (v8)
    {
      swift_retain();
      sub_240135F9C(0, v8, 1, a1, a2);
    }
    swift_release_n();
    return swift_release();
  }
  if (v8 >= 0)
    v10 = v8;
  else
    v10 = v8 + 1;
  if (v8 < -1)
    goto LABEL_148;
  v171 = a2;
  v161 = v8;
  v158 = v9;
  v165 = v2;
  v155 = a1;
  if (v8 < 2)
  {
    v13 = (char *)MEMORY[0x24BEE4AF8];
    v164 = (char *)(MEMORY[0x24BEE4AF8] + 32);
    v157 = MEMORY[0x24BEE4AF8];
    if (v8 == 1)
      goto LABEL_13;
    v17 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_104:
    if (v17 >= 2)
    {
      v138 = (char *)*v155;
      v180 = (char *)*v155;
      v139 = v171;
      do
      {
        v140 = v17 - 2;
        if (v17 < 2)
          goto LABEL_135;
        if (!v138)
          goto LABEL_147;
        v141 = v13;
        v142 = v13 + 32;
        v143 = *(_QWORD *)&v13[16 * v140 + 32];
        v144 = *(_QWORD *)&v142[16 * v17 - 8];
        v145 = &v138[32 * v143];
        v146 = &v138[32 * *(_QWORD *)&v142[16 * v17 - 16]];
        v147 = (unint64_t)&v138[32 * v144];
        swift_retain();
        v148 = v145;
        v149 = v165;
        sub_240135AA8(v148, v146, v147, v164, v139);
        v165 = v149;
        if (v149)
          goto LABEL_101;
        swift_release();
        if (v144 < v143)
          goto LABEL_136;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v141 = sub_2401356E0((uint64_t)v141);
        if (v140 >= *((_QWORD *)v141 + 2))
          goto LABEL_137;
        v150 = &v141[16 * v140 + 32];
        *(_QWORD *)v150 = v143;
        *((_QWORD *)v150 + 1) = v144;
        v151 = *((_QWORD *)v141 + 2);
        if (v17 > v151)
          goto LABEL_138;
        v13 = v141;
        memmove(&v141[16 * v17 + 16], &v141[16 * v17 + 32], 16 * (v151 - v17));
        *((_QWORD *)v141 + 2) = v151 - 1;
        v17 = v151 - 1;
        v138 = v180;
      }
      while (v151 > 2);
    }
    swift_bridgeObjectRelease();
    *(_QWORD *)(v157 + 16) = 0;
LABEL_116:
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v11 = v10 >> 1;
  v12 = sub_2401547FC();
  *(_QWORD *)(v12 + 16) = v11;
  v157 = v12;
  v164 = (char *)(v12 + 32);
LABEL_13:
  v14 = 0;
  v15 = *a1;
  v156 = *a1 + 48;
  v154 = v15 + 24;
  v13 = (char *)MEMORY[0x24BEE4AF8];
  v16 = v161;
  v170 = v15;
  while (1)
  {
    v18 = (uint64_t)v14;
    v19 = (uint64_t)(v14 + 1);
    v20 = (char *)v16;
    v162 = (char *)v18;
    if (v19 >= v16)
    {
      v172 = v19;
    }
    else
    {
      v159 = v13;
      v21 = (char **)(v15 + 32 * v19);
      v22 = v15;
      v23 = *v21;
      v24 = v21[1];
      v26 = v21[2];
      v25 = v21[3];
      v27 = (char **)(v22 + 32 * v18);
      v28 = *v27;
      v180 = v27[1];
      v29 = v180;
      v30 = v27[2];
      v31 = v27[3];
      v176 = v23;
      v177 = v24;
      v178 = v26;
      v179 = v25;
      v174 = v28;
      v175 = v30;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v32 = v167;
      sub_240132D58((uint64_t)&v176, v167);
      v176 = v174;
      v177 = v29;
      v178 = v30;
      v179 = v31;
      v33 = v168;
      sub_240132D58((uint64_t)&v176, v168);
      LODWORD(v174) = sub_2401542B0();
      v34 = *(void (**)(uint64_t, uint64_t))(v166 + 8);
      v35 = v33;
      v18 = (uint64_t)v162;
      v36 = v169;
      v34(v35, v169);
      v173 = v34;
      v34(v32, v36);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      v37 = (char *)(v18 + 2);
      if (v18 + 2 >= (uint64_t)v20)
      {
        v172 = v18 + 2;
      }
      else
      {
        v38 = (_QWORD *)(v156 + 32 * v18);
        v39 = v38;
        while (1)
        {
          v172 = (uint64_t)v37;
          v40 = (char *)v38[2];
          v41 = (char *)v38[3];
          v42 = (char *)v39[4];
          v39 += 4;
          v43 = (char *)v38[5];
          v44 = (char *)*(v38 - 1);
          v175 = (char *)*(v38 - 2);
          v176 = v40;
          v45 = (char *)*v38;
          v46 = (char *)v38[1];
          v177 = v41;
          v178 = v42;
          v179 = v43;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          v180 = v44;
          swift_retain();
          v47 = v167;
          sub_240132D58((uint64_t)&v176, v167);
          v176 = v175;
          v177 = v44;
          v178 = v45;
          v179 = v46;
          v48 = v168;
          sub_240132D58((uint64_t)&v176, v168);
          LODWORD(v175) = sub_2401542B0();
          v49 = v48;
          v50 = v169;
          v51 = v173;
          v173(v49, v169);
          v51(v47, v50);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if (((v174 ^ v175) & 1) != 0)
            break;
          v37 = (char *)(v172 + 1);
          v38 = v39;
          v20 = (char *)v161;
          if (v161 == v172 + 1)
          {
            v172 = v161;
            goto LABEL_25;
          }
        }
        v20 = (char *)v161;
LABEL_25:
        v18 = (uint64_t)v162;
      }
      v15 = v170;
      v13 = v159;
      if ((v174 & 1) != 0)
      {
        v52 = v172;
        if (v172 < v18)
          goto LABEL_141;
        if (v18 < v172)
        {
          v53 = 32 * v172;
          v54 = 32 * v18;
          v55 = v18;
          do
          {
            if (v55 != --v52)
            {
              if (!v15)
                goto LABEL_146;
              v56 = (_OWORD *)(v15 + v54);
              v57 = v15 + v53;
              v58 = *(_QWORD *)(v15 + v54 + 16);
              v59 = *(_QWORD *)(v15 + v54 + 24);
              v60 = *(_OWORD *)(v15 + v54);
              v61 = *(_OWORD *)(v15 + v53 - 16);
              *v56 = *(_OWORD *)(v15 + v53 - 32);
              v56[1] = v61;
              *(_OWORD *)(v57 - 32) = v60;
              *(_QWORD *)(v57 - 16) = v58;
              *(_QWORD *)(v57 - 8) = v59;
            }
            ++v55;
            v53 -= 32;
            v54 += 32;
          }
          while (v55 < v52);
        }
      }
    }
    if (v172 < (uint64_t)v20)
    {
      if (__OFSUB__(v172, v18))
        goto LABEL_139;
      if (v172 - v18 < v158)
        break;
    }
LABEL_53:
    if (v172 < v18)
      goto LABEL_134;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v13 = sub_240135220(0, *((_QWORD *)v13 + 2) + 1, 1, v13);
    v84 = *((_QWORD *)v13 + 2);
    v83 = *((_QWORD *)v13 + 3);
    v17 = v84 + 1;
    if (v84 >= v83 >> 1)
      v13 = sub_240135220((char *)(v83 > 1), v84 + 1, 1, v13);
    *((_QWORD *)v13 + 2) = v17;
    v85 = v13 + 32;
    v86 = &v13[16 * v84 + 32];
    v87 = v172;
    *(_QWORD *)v86 = v18;
    *((_QWORD *)v86 + 1) = v87;
    if (v84)
    {
      v175 = v13 + 32;
      while (1)
      {
        v88 = v17 - 1;
        if (v17 >= 4)
        {
          v93 = &v85[16 * v17];
          v94 = *((_QWORD *)v93 - 8);
          v95 = *((_QWORD *)v93 - 7);
          v99 = __OFSUB__(v95, v94);
          v96 = v95 - v94;
          if (v99)
            goto LABEL_123;
          v98 = *((_QWORD *)v93 - 6);
          v97 = *((_QWORD *)v93 - 5);
          v99 = __OFSUB__(v97, v98);
          v91 = v97 - v98;
          v92 = v99;
          if (v99)
            goto LABEL_124;
          v100 = v17 - 2;
          v101 = &v85[16 * v17 - 32];
          v103 = *(_QWORD *)v101;
          v102 = *((_QWORD *)v101 + 1);
          v99 = __OFSUB__(v102, v103);
          v104 = v102 - v103;
          if (v99)
            goto LABEL_126;
          v99 = __OFADD__(v91, v104);
          v105 = v91 + v104;
          if (v99)
            goto LABEL_129;
          if (v105 >= v96)
          {
            v123 = &v85[16 * v88];
            v125 = *(_QWORD *)v123;
            v124 = *((_QWORD *)v123 + 1);
            v99 = __OFSUB__(v124, v125);
            v126 = v124 - v125;
            if (v99)
              goto LABEL_133;
            v116 = v91 < v126;
            goto LABEL_91;
          }
        }
        else
        {
          if (v17 != 3)
          {
            v117 = *((_QWORD *)v13 + 4);
            v118 = *((_QWORD *)v13 + 5);
            v99 = __OFSUB__(v118, v117);
            v110 = v118 - v117;
            v111 = v99;
            goto LABEL_85;
          }
          v90 = *((_QWORD *)v13 + 4);
          v89 = *((_QWORD *)v13 + 5);
          v99 = __OFSUB__(v89, v90);
          v91 = v89 - v90;
          v92 = v99;
        }
        if ((v92 & 1) != 0)
          goto LABEL_125;
        v100 = v17 - 2;
        v106 = &v85[16 * v17 - 32];
        v108 = *(_QWORD *)v106;
        v107 = *((_QWORD *)v106 + 1);
        v109 = __OFSUB__(v107, v108);
        v110 = v107 - v108;
        v111 = v109;
        if (v109)
          goto LABEL_128;
        v112 = &v85[16 * v88];
        v114 = *(_QWORD *)v112;
        v113 = *((_QWORD *)v112 + 1);
        v99 = __OFSUB__(v113, v114);
        v115 = v113 - v114;
        if (v99)
          goto LABEL_131;
        if (__OFADD__(v110, v115))
          goto LABEL_132;
        if (v110 + v115 >= v91)
        {
          v116 = v91 < v115;
LABEL_91:
          if (v116)
            v88 = v100;
          goto LABEL_93;
        }
LABEL_85:
        if ((v111 & 1) != 0)
          goto LABEL_127;
        v119 = &v85[16 * v88];
        v121 = *(_QWORD *)v119;
        v120 = *((_QWORD *)v119 + 1);
        v99 = __OFSUB__(v120, v121);
        v122 = v120 - v121;
        if (v99)
          goto LABEL_130;
        if (v122 < v110)
          goto LABEL_15;
LABEL_93:
        v127 = v88 - 1;
        if (v88 - 1 >= v17)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!v15)
          goto LABEL_145;
        v128 = &v85[16 * v127];
        v129 = *(_QWORD *)v128;
        v130 = v88;
        v131 = &v85[16 * v88];
        v132 = *((_QWORD *)v131 + 1);
        v133 = (char *)(v15 + 32 * *(_QWORD *)v128);
        v180 = (char *)(v15 + 32 * *(_QWORD *)v131);
        v134 = v171;
        swift_retain();
        v135 = v133;
        v136 = v165;
        sub_240135AA8(v135, v180, v15 + 32 * v132, v164, v134);
        v165 = v136;
        if (v136)
        {
LABEL_101:
          swift_bridgeObjectRelease();
          swift_release();
          *(_QWORD *)(v157 + 16) = 0;
          goto LABEL_116;
        }
        swift_release();
        if (v132 < v129)
          goto LABEL_120;
        if (v130 > *((_QWORD *)v13 + 2))
          goto LABEL_121;
        *(_QWORD *)v128 = v129;
        v85 = v175;
        *(_QWORD *)&v175[16 * v127 + 8] = v132;
        v137 = *((_QWORD *)v13 + 2);
        if (v130 >= v137)
          goto LABEL_122;
        v17 = v137 - 1;
        memmove(v131, v131 + 16, 16 * (v137 - 1 - v130));
        *((_QWORD *)v13 + 2) = v137 - 1;
        v15 = v170;
        if (v137 <= 2)
          goto LABEL_15;
      }
    }
    v17 = 1;
LABEL_15:
    v16 = v161;
    v14 = (char *)v172;
    if (v172 >= v161)
      goto LABEL_104;
  }
  if (__OFADD__(v18, v158))
    goto LABEL_142;
  if (v18 + v158 >= (uint64_t)v20)
    v62 = v20;
  else
    v62 = (char *)(v18 + v158);
  if ((uint64_t)v62 >= v18)
  {
    v63 = v172;
    if ((char *)v172 != v62)
    {
      v159 = v13;
      v64 = (_QWORD *)(v154 + 32 * v172);
      v160 = v62;
      do
      {
        v66 = (char **)(v15 + 32 * v63);
        v67 = *v66;
        v68 = v66[1];
        v70 = v66[2];
        v69 = v66[3];
        v163 = v64;
        v172 = v63;
        while (1)
        {
          v71 = (char *)*(v64 - 7);
          v72 = (char *)*(v64 - 6);
          v73 = (__int128 *)(v64 - 7);
          v173 = (void (*)(uint64_t, uint64_t))v18;
          v174 = v71;
          v175 = v72;
          v176 = v67;
          v74 = (char *)*(v64 - 5);
          v75 = (char *)*(v64 - 4);
          v177 = v68;
          v178 = v70;
          v179 = v69;
          v180 = v68;
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          v76 = v167;
          sub_240132D58((uint64_t)&v176, v167);
          v176 = v174;
          v177 = v72;
          v178 = v74;
          v179 = v75;
          v77 = v168;
          sub_240132D58((uint64_t)&v176, v168);
          LODWORD(v174) = sub_2401542B0();
          v78 = *(void (**)(uint64_t, uint64_t))(v166 + 8);
          v79 = v77;
          v80 = v169;
          v78(v79, v169);
          v78(v76, v80);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          if ((v174 & 1) == 0)
            break;
          v15 = v170;
          v65 = (char *)v172;
          if (!v170)
            goto LABEL_144;
          v69 = (char *)*v64;
          v82 = *v73;
          v81 = *(_OWORD *)(v64 - 5);
          *(v64 - 4) = *v64;
          v64 -= 4;
          v67 = (char *)v64[1];
          v68 = (char *)v64[2];
          v70 = (char *)v64[3];
          v73[2] = v82;
          v73[3] = v81;
          *(v64 - 3) = v67;
          *(v64 - 2) = v68;
          *(v64 - 1) = v70;
          v18 = (uint64_t)v173 + 1;
          if (v65 == (char *)v173 + 1)
            goto LABEL_46;
        }
        v15 = v170;
        v65 = (char *)v172;
LABEL_46:
        v63 = (uint64_t)(v65 + 1);
        v18 = (uint64_t)v162;
        v64 = v163 + 4;
      }
      while ((char *)v63 != v160);
      v172 = (uint64_t)v160;
      v13 = v159;
    }
    goto LABEL_53;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  swift_release_n();
  __break(1u);
LABEL_145:
  swift_release_n();
  __break(1u);
LABEL_146:
  swift_release_n();
  __break(1u);
LABEL_147:
  swift_release_n();
  __break(1u);
LABEL_148:
  swift_release_n();
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_240136D24(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7[2];

  v4 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v4 = sub_240135730(v4);
  v5 = *(_QWORD *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_retain();
  sub_2401361E0(v7, a2);
  swift_release();
  *a1 = v4;
  return swift_release_n();
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_240136DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240136E38()
{
  uint64_t v0;

  return sub_240136F84(*(uint64_t (**)(uint64_t))(v0 + 8), v0, 1);
}

uint64_t sub_240136E48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_240136EB8()
{
  return type metadata accessor for DKIntelligentTrackingTask();
}

uint64_t type metadata accessor for DKIntelligentTrackingTask()
{
  uint64_t result;

  result = qword_256FC08E8;
  if (!qword_256FC08E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240136EFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2401544C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_240136F84(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

void sub_240136F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  double v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  int64_t v25;
  uint64_t v26;

  swift_retain();
  v1 = swift_bridgeObjectRetain();
  sub_24013A6A0(v1);
  v3 = v2;
  swift_bridgeObjectRelease();
  swift_release();
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if (v4 == 1)
  {
    v5 = 0;
    v6 = 0.0;
  }
  else
  {
    v5 = v4 & 0x7FFFFFFFFFFFFFFELL;
    v7 = (double *)(v3 + 40);
    v6 = 0.0;
    v8 = v4 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v6 = v6 + *(v7 - 1) + *v7;
      v7 += 2;
      v8 -= 2;
    }
    while (v8);
    if (v4 == v5)
      goto LABEL_10;
  }
  v9 = v4 - v5;
  v10 = (double *)(v3 + 8 * v5 + 32);
  do
  {
    v11 = *v10++;
    v6 = v6 + v11;
    --v9;
  }
  while (v9);
LABEL_10:
  swift_bridgeObjectRelease();
  if (v6 <= COERCE_DOUBLE(1))
    return;
  v12 = 0;
  v13 = *(_QWORD *)(v0 + 16);
  v14 = v13 + 64;
  v15 = -1;
  v16 = -1 << *(_BYTE *)(v13 + 32);
  if (-v16 < 64)
    v15 = ~(-1 << -(char)v16);
  v17 = v15 & *(_QWORD *)(v13 + 64);
  v18 = (unint64_t)(63 - v16) >> 6;
  while (v17)
  {
    v20 = __clz(__rbit64(v17));
    v17 &= v17 - 1;
    v21 = v20 | (v12 << 6);
LABEL_32:
    v26 = *(_QWORD *)(*(_QWORD *)(v13 + 56) + 8 * v21);
    if (*(_BYTE *)(v26 + 33) == 1)
    {
      if (*(_BYTE *)(v26 + 32) == 1)
        v19 = atan2(*(long double *)(v26 + 48), *(long double *)(v26 + 56));
      else
        v19 = *(double *)(v26 + 40);
      *(double *)(v26 + 40) = v19 / v6;
    }
  }
  v22 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v22 >= v18)
    goto LABEL_35;
  v23 = *(_QWORD *)(v14 + 8 * v22);
  v24 = v12 + 1;
  if (v23)
    goto LABEL_31;
  v24 = v12 + 2;
  if (v12 + 2 >= v18)
    goto LABEL_35;
  v23 = *(_QWORD *)(v14 + 8 * v24);
  if (v23)
    goto LABEL_31;
  v24 = v12 + 3;
  if (v12 + 3 >= v18)
    goto LABEL_35;
  v23 = *(_QWORD *)(v14 + 8 * v24);
  if (v23)
  {
LABEL_31:
    v17 = (v23 - 1) & v23;
    v21 = __clz(__rbit64(v23)) + (v24 << 6);
    v12 = v24;
    goto LABEL_32;
  }
  v25 = v12 + 4;
  if (v12 + 4 >= v18)
  {
LABEL_35:
    swift_bridgeObjectRetain();
    sub_24008FD1C();
    return;
  }
  v23 = *(_QWORD *)(v14 + 8 * v25);
  if (v23)
  {
    v24 = v12 + 4;
    goto LABEL_31;
  }
  while (1)
  {
    v24 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v24 >= v18)
      goto LABEL_35;
    v23 = *(_QWORD *)(v14 + 8 * v24);
    ++v25;
    if (v23)
      goto LABEL_31;
  }
LABEL_38:
  __break(1u);
}

uint64_t DKPersonTrackerConfiguration.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 176) = xmmword_2401572E0;
  *(_OWORD *)(v0 + 192) = xmmword_24015FA20;
  *(_OWORD *)(v0 + 208) = xmmword_24015FA30;
  *(_OWORD *)(v0 + 224) = xmmword_24015FA40;
  *(_BYTE *)(v0 + 240) = 1;
  *(_OWORD *)(v0 + 248) = xmmword_24015FA50;
  *(_QWORD *)(v0 + 264) = 0x3FECCCCCCCCCCCCDLL;
  return DKTrackerConfiguration.init()();
}

uint64_t DKPersonTracker.__allocating_init(currentTime:configuration:uuid:trackerId:camera:)(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  swift_allocObject();
  v10 = sub_24013A8DC(a1, a2, a3, a4, a5);
  swift_release();
  return v10;
}

BOOL sub_2401372DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  int v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v11;

  v1 = sub_240154310();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 240));
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0 + qword_256FC4890, v1, v3);
  sub_24015428C();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v9 = 56;
  if (v6)
    v9 = 64;
  return *(double *)(*(_QWORD *)(v0 + qword_256FC4888) + v9) < v8;
}

double sub_2401373C4()
{
  uint64_t v0;

  return *(double *)(v0 + 192);
}

void sub_2401373CC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 192) = a1;
}

uint64_t (*sub_2401373D4())()
{
  return nullsub_1;
}

double sub_2401373E4()
{
  uint64_t v0;

  return *(double *)(v0 + 200);
}

void sub_2401373EC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 200) = a1;
}

uint64_t (*sub_2401373F4())()
{
  return nullsub_1;
}

double sub_240137404()
{
  uint64_t v0;

  return *(double *)(v0 + 208);
}

void sub_24013740C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 208) = a1;
}

uint64_t (*sub_240137414())()
{
  return nullsub_1;
}

double sub_240137424()
{
  uint64_t v0;

  return *(double *)(v0 + 216);
}

void sub_24013742C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 216) = a1;
}

uint64_t (*sub_240137434())()
{
  return nullsub_1;
}

double sub_240137444()
{
  uint64_t v0;

  return *(double *)(v0 + 224);
}

void sub_24013744C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 224) = a1;
}

uint64_t (*sub_240137454())()
{
  return nullsub_1;
}

double sub_240137464()
{
  uint64_t v0;

  return *(double *)(v0 + 232);
}

void sub_24013746C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 232) = a1;
}

uint64_t (*sub_240137474())()
{
  return nullsub_1;
}

uint64_t sub_240137484()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t sub_24013748C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 240) = result;
  return result;
}

uint64_t (*sub_240137494())()
{
  return nullsub_1;
}

double sub_2401374A4()
{
  uint64_t v0;

  return *(double *)(v0 + 248);
}

void sub_2401374AC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 248) = a1;
}

uint64_t (*sub_2401374B4())()
{
  return nullsub_1;
}

double sub_2401374C4()
{
  uint64_t v0;

  return *(double *)(v0 + 256);
}

void sub_2401374CC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 256) = a1;
}

uint64_t (*sub_2401374D4())()
{
  return nullsub_1;
}

double sub_2401374E4()
{
  uint64_t v0;

  return *(double *)(v0 + 264);
}

void sub_2401374EC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 264) = a1;
}

uint64_t (*sub_2401374F4())()
{
  return nullsub_1;
}

uint64_t DKPersonTrackerConfiguration.init()()
{
  uint64_t v0;

  *(_OWORD *)(v0 + 176) = xmmword_2401572E0;
  *(_OWORD *)(v0 + 192) = xmmword_24015FA20;
  *(_OWORD *)(v0 + 208) = xmmword_24015FA30;
  *(_OWORD *)(v0 + 224) = xmmword_24015FA40;
  *(_BYTE *)(v0 + 240) = 1;
  *(_OWORD *)(v0 + 248) = xmmword_24015FA50;
  *(_QWORD *)(v0 + 264) = 0x3FECCCCCCCCCCCCDLL;
  return DKTrackerConfiguration.init()();
}

void DKPersonTrackerConfiguration.__allocating_init(configuration:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DKPersonTrackerConfiguration.init(configuration:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t DKPersonTrackerConfiguration.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKPersonTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24013760C@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_240137620(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_240137634())()
{
  return nullsub_1;
}

uint64_t DKPersonTracker.configuration.getter()
{
  return swift_retain();
}

uint64_t sub_24013765C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240070B90(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId, a1, &qword_256FB5DE8);
}

uint64_t sub_240137688(uint64_t a1)
{
  uint64_t v1;

  return sub_24013B028(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId);
}

uint64_t (*sub_240137698())()
{
  return nullsub_1;
}

uint64_t sub_2401376B0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240070B90(a1, (uint64_t)v10, &qword_256FB5DE8);
  return sub_24013B028((uint64_t)v10, *a2 + *a5);
}

uint64_t sub_240137748@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240070B90(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, a1, &qword_256FB5DE8);
}

uint64_t sub_240137774(uint64_t a1)
{
  uint64_t v1;

  return sub_24013B028(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId);
}

uint64_t (*sub_240137784())()
{
  return nullsub_1;
}

uint64_t sub_24013779C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v4 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240080084(a1, (uint64_t)v6, v7);
  return sub_2400A0E30((uint64_t)v6, *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera);
}

uint64_t sub_240137828@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240080084(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, a1, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
}

uint64_t sub_240137854(uint64_t a1)
{
  uint64_t v1;

  return sub_2400A0E30(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera);
}

uint64_t (*sub_240137864())()
{
  return nullsub_1;
}

uint64_t sub_24013787C@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger, (uint64_t (*)(_QWORD))MEMORY[0x24BEE78D8], a1);
}

uint64_t sub_240137890(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger, (uint64_t (*)(_QWORD))MEMORY[0x24BEE78D8]);
}

uint64_t (*sub_2401378A4())()
{
  return nullsub_1;
}

uint64_t DKPersonTracker.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2401378D0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
}

uint64_t sub_2401378E0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) = result;
  return result;
}

uint64_t (*sub_2401378F0())()
{
  return nullsub_1;
}

double sub_240137908@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity + 8);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_240137928(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_240137948())()
{
  return nullsub_1;
}

uint64_t sub_240137960()
{
  return swift_retain();
}

uint64_t sub_240137970(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identityFilter) = a1;
  return swift_release();
}

uint64_t (*sub_240137988())()
{
  return nullsub_1;
}

uint64_t sub_2401379A0()
{
  return swift_retain();
}

uint64_t sub_2401379B0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker) = a1;
  return swift_release();
}

uint64_t (*sub_2401379C8())()
{
  return nullsub_1;
}

uint64_t sub_2401379E0()
{
  return swift_retain();
}

uint64_t sub_2401379F0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker) = a1;
  return swift_release();
}

uint64_t (*sub_240137A08())()
{
  return nullsub_1;
}

uint64_t sub_240137A20()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_240137A30(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240137A48())()
{
  return nullsub_1;
}

uint64_t sub_240137A60()
{
  return swift_retain();
}

uint64_t sub_240137A70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter) = a1;
  return swift_release();
}

uint64_t (*sub_240137A88())()
{
  return nullsub_1;
}

uint64_t sub_240137AA0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_240137AB0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240137AC8())()
{
  return nullsub_1;
}

uint64_t sub_240137AE0()
{
  return swift_retain();
}

uint64_t sub_240137AF0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints) = a1;
  return swift_release();
}

uint64_t (*sub_240137B08())()
{
  return nullsub_1;
}

uint64_t sub_240137B20()
{
  return swift_retain();
}

uint64_t sub_240137B30(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter) = a1;
  return swift_release();
}

uint64_t (*sub_240137B48())()
{
  return nullsub_1;
}

uint64_t sub_240137B60()
{
  return swift_retain();
}

uint64_t sub_240137B70(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter) = a1;
  return swift_release();
}

uint64_t (*sub_240137B88())()
{
  return nullsub_1;
}

uint64_t DKPersonTracker.init(currentTime:configuration:uuid:trackerId:camera:)(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  v5 = sub_24013A8DC(a1, a2, a3, a4, a5);
  swift_release();
  return v5;
}

BOOL sub_240137BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
  if (v1
    && *(_QWORD *)(*(_QWORD *)(v1 + qword_256FC48A0) + 16) >= *(_QWORD *)(*(_QWORD *)(v1 + qword_256FC4888) + 80))
  {
    return 1;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
  return v2
      && *(_QWORD *)(*(_QWORD *)(v2 + qword_256FC48A0) + 16) >= *(_QWORD *)(*(_QWORD *)(v2 + qword_256FC4888) + 80);
}

uint64_t sub_240137C54(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera;
  sub_2400800C8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_240080084(a1, v3, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter)
     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
  swift_retain();
  sub_2400800C8(v4, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_240080084(a1, v4, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  return swift_release();
}

uint64_t sub_240137CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, uint64_t, uint64_t);
  void (*v33)(char *, double);
  char *v34;
  int v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  __int128 v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  char *v51;
  char v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  char *v60;
  char v61;
  char v62;
  char v63;
  char *v64;
  __int128 *v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t (*v78)(uint64_t, uint64_t, uint64_t);
  int v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char v88;
  __int128 *v89;
  uint64_t v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  void (*v109)(char *, uint64_t);
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  _OWORD *v116;
  char *v117;
  uint64_t v118;
  __int128 v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  __int128 v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char v131;
  char v132;

  v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC0A00);
  MEMORY[0x24BDAC7A8](v113);
  *(_QWORD *)&v127 = (char *)&v111 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_24015434C();
  v11 = *(_QWORD *)(v10 - 8);
  v129 = v10;
  v130 = v11;
  MEMORY[0x24BDAC7A8](v10);
  v114 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v13);
  v112 = (uint64_t)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  v115 = (uint64_t)&v111 - v16;
  MEMORY[0x24BDAC7A8](v17);
  v118 = (uint64_t)&v111 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v121 = (char *)&v111 - v20;
  MEMORY[0x24BDAC7A8](v21);
  v117 = (char *)&v111 - v22;
  MEMORY[0x24BDAC7A8](v23);
  *(_QWORD *)&v119 = (char *)&v111 - v24;
  v25 = sub_240154310();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&v111 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v111 - v30;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker) = a2;
  swift_retain();
  swift_release();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker) = a3;
  v122 = a3;
  swift_retain();
  swift_release();
  v128 = v4;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v32(v31, a1, v25);
  v124 = v31;
  v32(v28, (uint64_t)v31, v25);
  type metadata accessor for DKPersonMotionFilter.Measurement(0);
  v33 = (void (*)(char *, double))swift_allocObject();
  v34 = (char *)v33 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect;
  *(_OWORD *)v34 = 0u;
  *((_OWORD *)v34 + 1) = 0u;
  v35 = 1;
  v34[32] = 1;
  v36 = (char *)v33 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect;
  *(_OWORD *)v36 = 0u;
  *((_OWORD *)v36 + 1) = 0u;
  v116 = v36;
  v36[32] = 1;
  v37 = (char *)v33 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw;
  *(_QWORD *)v37 = 0;
  v37[8] = 1;
  v38 = (char *)v33 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch;
  *(_QWORD *)v38 = 0;
  v38[8] = 1;
  v39 = (char *)v33 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll;
  *(_QWORD *)v39 = 0;
  v39[8] = 1;
  v40 = (char *)v33 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance;
  *(_QWORD *)v40 = 0;
  v120 = v40;
  v40[8] = 1;
  v123 = v26;
  v41 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
  v125 = v25;
  v41((char *)v33 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time, v28, v25);
  v126 = v37;
  if (a2 && (v42 = *(_QWORD *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 200))) != 0)
  {
    v111 = v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId;
    v43 = v119;
    sub_240070B90(v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId, v119, &qword_256FB5DE8);
    v44 = v129;
    v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
    v46 = v45(v43, 1, v129);
    swift_retain();
    sub_240070BD4(v43, &qword_256FB5DE8);
    if (v46 != 1)
    {
      v48 = (uint64_t)v117;
      sub_240070B90(v111, (uint64_t)v117, &qword_256FB5DE8);
      result = v45(v48, 1, v44);
      if ((_DWORD)result == 1)
      {
        __break(1u);
        return result;
      }
      v50 = v130;
      v51 = v114;
      (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v114, v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v44);
      sub_2401245D4();
      v52 = sub_240154610();
      v53 = *(void (**)(char *, uint64_t))(v50 + 8);
      v53(v51, v44);
      v53(v117, v44);
      if ((v52 & 1) != 0)
      {
        swift_release();
        v54 = 0;
        v55 = 4;
        v35 = 1;
        v56 = v122;
        v57 = v128;
        v58 = v127;
        if (!v122)
          goto LABEL_34;
LABEL_17:
        v76 = *(_QWORD *)(v56 + *(_QWORD *)(*(_QWORD *)v56 + 200));
        if (!v76)
          goto LABEL_34;
        LODWORD(v122) = v55;
        v128 = v57 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId;
        v77 = v118;
        sub_240070B90(v57 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, v118, &qword_256FB5DE8);
        v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v130 + 48);
        v79 = v78(v77, 1, v44);
        swift_retain();
        sub_240070BD4(v77, &qword_256FB5DE8);
        if (v79 != 1)
        {
          v81 = v129;
          v82 = v130;
          v83 = v115;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v115, v76 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v129);
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v82 + 56))(v83, 0, 1, v81);
          v84 = v58 + *(int *)(v113 + 48);
          sub_240070B90(v128, v127, &qword_256FB5DE8);
          v85 = v127;
          sub_240070B90(v83, v84, &qword_256FB5DE8);
          if (v78(v85, 1, v81) == 1)
          {
            sub_240070BD4(v83, &qword_256FB5DE8);
            if (v78(v84, 1, v81) == 1)
            {
              sub_240070BD4(v85, &qword_256FB5DE8);
LABEL_33:
              swift_release();
              LOBYTE(v55) = v122;
              goto LABEL_34;
            }
            goto LABEL_24;
          }
          v86 = v112;
          sub_240070B90(v85, v112, &qword_256FB5DE8);
          if (v78(v84, 1, v81) == 1)
          {
            sub_240070BD4(v115, &qword_256FB5DE8);
            (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v86, v81);
LABEL_24:
            sub_240070BD4(v85, &qword_256FC0A00);
            goto LABEL_25;
          }
          v103 = v114;
          (*(void (**)(char *, uint64_t, uint64_t))(v130 + 32))(v114, v84, v81);
          sub_2401245D4();
          LODWORD(v119) = sub_240154610();
          v104 = *(void (**)(char *, uint64_t))(v130 + 8);
          v104(v103, v81);
          sub_240070BD4(v115, &qword_256FB5DE8);
          v104((char *)v86, v81);
          sub_240070BD4(v85, &qword_256FB5DE8);
          if ((v119 & 1) != 0)
            goto LABEL_33;
        }
LABEL_25:
        v87 = v120;
        if (v120[8] == 1)
        {
          v88 = *(_BYTE *)(v76 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance + 8);
          *(_QWORD *)v120 = *(_QWORD *)(v76 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
          v87[8] = v88;
        }
        v89 = (__int128 *)(v76 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
        v90 = v129;
        if (*(_BYTE *)(v57 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera) == 1)
        {
          v91 = *(double *)v89;
          *(_QWORD *)&v80 = *((_QWORD *)v89 + 1);
          v127 = v80;
          v92 = *((_QWORD *)v89 + 2);
          v93 = *((_QWORD *)v89 + 3);
          v94 = v92;
          v95 = v93;
          *(double *)&v96 = 1.0 - v91 - CGRectGetWidth(*(CGRect *)((char *)&v80 - 8));
          *((_QWORD *)&v96 + 1) = v127;
          v97 = v92;
          v98 = v93;
        }
        else
        {
          v96 = *v89;
          v97 = *((_QWORD *)v89 + 2);
          v98 = *((_QWORD *)v89 + 3);
        }
        v99 = v116;
        *v116 = v96;
        *((_QWORD *)v99 + 2) = v97;
        *((_QWORD *)v99 + 3) = v98;
        *((_BYTE *)v99 + 32) = 0;
        v100 = v130;
        v101 = (uint64_t)v121;
        (*(void (**)(char *, uint64_t, uint64_t))(v130 + 16))(v121, v76 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v90);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v100 + 56))(v101, 0, 1, v90);
        sub_24013B028(v101, v128);
        v102 = *(_QWORD *)(v76 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences);
        swift_bridgeObjectRetain();
        swift_release();
        LOBYTE(v55) = v122;
        if (v35)
          LOBYTE(v55) = 1;
        goto LABEL_35;
      }
    }
    v59 = *(_BYTE *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw + 8);
    v60 = v126;
    *(_QWORD *)v126 = *(_QWORD *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
    v60[8] = v59;
    v61 = *(_BYTE *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch + 8);
    *(_QWORD *)v38 = *(_QWORD *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
    v38[8] = v61;
    v62 = *(_BYTE *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll + 8);
    *(_QWORD *)v39 = *(_QWORD *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
    v39[8] = v62;
    v63 = *(_BYTE *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance + 8);
    v64 = v120;
    *(_QWORD *)v120 = *(_QWORD *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
    v57 = v128;
    LODWORD(v60) = *(unsigned __int8 *)(v128 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera);
    v64[8] = v63;
    v65 = (__int128 *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    if ((_DWORD)v60 == 1)
    {
      v66 = *(double *)v65;
      *(_QWORD *)&v47 = *((_QWORD *)v65 + 1);
      v119 = v47;
      v67 = *((_QWORD *)v65 + 2);
      v68 = *((_QWORD *)v65 + 3);
      v69 = v67;
      v70 = v68;
      *(double *)&v71 = 1.0 - v66 - CGRectGetWidth(*(CGRect *)((char *)&v47 - 8));
      *((_QWORD *)&v71 + 1) = v119;
      v72 = v67;
      v73 = v68;
    }
    else
    {
      v71 = *v65;
      v72 = *((_QWORD *)v65 + 2);
      v73 = *((_QWORD *)v65 + 3);
    }
    v74 = (uint64_t)v121;
    v56 = v122;
    *(_OWORD *)v34 = v71;
    *((_QWORD *)v34 + 2) = v72;
    *((_QWORD *)v34 + 3) = v73;
    v34[32] = 0;
    v75 = v130;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 16))(v74, v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v44);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v75 + 56))(v74, 0, 1, v44);
    sub_24013B028(v74, v111);
    v54 = *(_QWORD *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences);
    LODWORD(v75) = *(unsigned __int8 *)(v42 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType);
    swift_bridgeObjectRetain();
    swift_release();
    v35 = 0;
    if ((_DWORD)v75)
      v55 = 3;
    else
      v55 = 0;
    v58 = v127;
    if (v56)
      goto LABEL_17;
  }
  else
  {
    v54 = 0;
    v55 = 4;
    v57 = v128;
    v44 = v129;
    v56 = v122;
    v58 = v127;
    if (v122)
      goto LABEL_17;
  }
LABEL_34:
  v102 = 0;
  v105 = 0;
  if ((v35 & 1) == 0)
  {
LABEL_35:
    *(_BYTE *)(v57 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastObservationType) = v55;
    v105 = v102;
  }
  if ((v126[8] & 1) != 0)
  {
    v132 = *(_BYTE *)(v57 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera);
    v106 = &v132;
    v107 = 0;
  }
  else
  {
    v107 = *(_QWORD *)v126;
    v131 = *(_BYTE *)(v57 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera);
    v106 = &v131;
  }
  sub_240138808(v107, 0, v106);
  swift_retain();
  sub_2400D5B5C(v33);
  swift_release();
  sub_240138B08(v54, v105);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v108 = (uint64_t)v124;
  sub_240138FEC((uint64_t)v124);
  swift_release();
  swift_setDeallocating();
  v109 = *(void (**)(char *, uint64_t))(v123 + 8);
  v110 = v125;
  v109((char *)v33 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time, v125);
  swift_deallocClassInstance();
  return ((uint64_t (*)(uint64_t, uint64_t))v109)(v108, v110);
}

uint64_t sub_240138808(uint64_t a1, char a2, char *a3)
{
  uint64_t v3;
  char v4;
  os_log_type_t v6;
  char v7;
  uint64_t inited;
  unint64_t v9;
  double v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;

  v4 = *a3;
  if ((a2 & 1) != 0)
  {
    a1 = 0;
  }
  else
  {
    v17 = 3;
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_240154B38();
    sub_2401546D0();
    sub_2401548C8();
    sub_2401546D0();
    v6 = sub_24015494C();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v17, 0, 0xE000000000000000, v6);
    swift_bridgeObjectRelease();
  }
  v17 = v4;
  sub_2400BA470(&v17, (char *)&v15, *(double *)&a1);
  v7 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1328);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_BYTE *)(inited + 32) = v7;
  *(_QWORD *)(inited + 40) = 0x3FF0000000000000;
  v9 = sub_240107828(inited);
  swift_setDeallocating();
  swift_retain();
  sub_24010CA8C(v9, 0, 0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_240136F94();
  swift_release();
  v10 = *(double *)(*(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_configuration) + 264);
  swift_retain();
  sub_2400B5D98(v10, 0, (uint64_t)&v15);
  result = swift_release();
  if (v15 != 4
    && (_BYTE)v15
    && *(unsigned __int8 *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentFaceDirection) != v15)
  {
    *(_BYTE *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentFaceDirection) = v15;
    v17 = 3;
    v15 = 0;
    v16 = 0xE000000000000000;
    sub_240154B38();
    sub_2401546D0();
    sub_240154C94();
    sub_2401546D0();
    sub_2401548C8();
    v12 = v15;
    v13 = v16;
    v14 = sub_240154964();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v17, v12, v13, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240138B08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t result;
  _QWORD *v14;

  v3 = v2;
  if (a1)
  {
    swift_retain();
    v5 = a1;
  }
  else
  {
    if (!a2)
      goto LABEL_6;
    swift_retain();
    v5 = a2;
  }
  sub_24008FBE4(v5);
  swift_release();
LABEL_6:
  swift_retain();
  sub_2400B5B8C();
  v8 = v7;
  v10 = v9;
  v12 = v11;
  result = swift_release();
  v14 = (_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity);
  if ((v12 & 1) != 0)
  {
    *v14 = -1;
    v14[1] = 0;
  }
  else
  {
    *v14 = v8;
    v14[1] = v10;
  }
  return result;
}

void sub_240138BDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  double v10;
  unint64_t v11;
  char v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a1 + 16))
  {
    v7 = sub_24013EF5C(1);
    if ((v8 & 1) != 0)
    {
      v9 = *(_QWORD *)(a1 + 56);
      v10 = *(double *)(v9 + 8 * v7);
      v11 = sub_24013EF5C(0);
      if ((v12 & 1) != 0)
      {
        v13 = v10 + *(double *)(v9 + 8 * v11);
        if (fabs(v13) < 0.00001)
          v13 = dbl_24015DB10[v13 > 0.0];
        v14 = v10 / v13;
        v15 = sub_240154310();
        v16 = *(_QWORD *)(v15 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v6, a2, v15);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v6, 0, 1, v15);
        swift_retain();
        swift_retain();
        sub_240148324(0, 1, (uint64_t)v6, v14);
        swift_release();
        swift_release();
        sub_240070BD4((uint64_t)v6, &qword_256FB4CC8);
      }
    }
  }
}

uint64_t sub_240138D40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  BOOL v5;
  BOOL v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  double v14;
  double v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  double v22;
  double v23;
  uint64_t v24;
  double v25;
  uint64_t v27;

  v1 = sub_240154310();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker))
  {
    swift_retain();
    v5 = sub_2401372DC();
    swift_release();
    if (!v5)
      return 0;
  }
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker))
  {
    swift_retain();
    v6 = sub_2401372DC();
    swift_release();
    if (!v6)
      return 0;
  }
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
  if (v7 >> 62)
    goto LABEL_28;
  v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; v8 = sub_240154D30())
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      v9 = 0;
      while (1)
      {
        v10 = MEMORY[0x24267D4E0](v9, v7);
        v11 = v9 + 1;
        if (__OFADD__(v9, 1))
          break;
        v12 = v10;
        v13 = *(_BYTE *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 240));
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v10 + qword_256FC4890, v1);
        sub_24015428C();
        v15 = v14;
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        v16 = *(_QWORD *)(v12 + qword_256FC4888);
        if ((v13 & 1) != 0)
          v17 = *(double *)(v16 + 64);
        else
          v17 = *(double *)(v16 + 56);
        swift_unknownObjectRelease();
        if (v17 >= v15)
          goto LABEL_24;
        ++v9;
        if (v11 == v8)
          goto LABEL_23;
      }
      __break(1u);
    }
    else
    {
      v18 = 0;
      while (1)
      {
        v19 = v18 + 1;
        if (__OFADD__(v18, 1))
          break;
        v20 = *(_QWORD *)(v7 + 8 * v18 + 32);
        v21 = *(_BYTE *)(v20 + *(_QWORD *)(*(_QWORD *)v20 + 240));
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v20 + qword_256FC4890, v1);
        swift_retain();
        sub_24015428C();
        v23 = v22;
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        v24 = *(_QWORD *)(v20 + qword_256FC4888);
        if ((v21 & 1) != 0)
          v25 = *(double *)(v24 + 64);
        else
          v25 = *(double *)(v24 + 56);
        swift_release();
        if (v25 >= v23)
        {
LABEL_24:
          swift_bridgeObjectRelease();
          return 0;
        }
        ++v18;
        if (v19 == v8)
          goto LABEL_23;
      }
    }
    __break(1u);
LABEL_28:
    swift_bridgeObjectRetain();
  }
LABEL_23:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_240138FEC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  double v41;
  double v42;
  double v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t i;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  void (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  char *v86;
  int *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  double v95;
  double v96;
  double v97;
  double v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  int v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  char *v139;
  void (*v140)(char *, uint64_t, uint64_t);
  _QWORD *v141;
  char v142;
  char v143;
  char v144;
  __int128 v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148[2];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v4);
  v137 = (char *)&v106 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v132 = (char *)&v106 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v131 = (char *)&v106 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v130 = (uint64_t)&v106 - v11;
  v125 = type metadata accessor for DKPersonGroup(0);
  MEMORY[0x24BDAC7A8](v125);
  v126 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v127 = (uint64_t)&v106 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_24015434C();
  v138 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v139 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v136 = (char *)&v106 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v106 - v23;
  v133 = sub_240154310();
  v25 = *(_QWORD *)(v133 - 8);
  MEMORY[0x24BDAC7A8](v133);
  v124 = (char *)&v106 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v134 = (char *)&v106 - v28;
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v106 - v30;
  v141 = (_QWORD *)type metadata accessor for DKMotion3();
  v128 = *(v141 - 1);
  MEMORY[0x24BDAC7A8](v141);
  v33 = (char *)&v106 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
  swift_retain();
  v35 = a1;
  sub_2400D6A60(a1);
  v36 = *(_QWORD *)(v34 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
  swift_retain();
  swift_release();
  if (!v36)
    return 0;
  v129 = v17;
  v37 = v36 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion;
  v135 = v2;
  v38 = v36;
  sub_240080084(v36 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, (uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  sub_240139DBC((uint64_t)v33);
  sub_2400800C8((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  v116 = v25;
  v39 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v118 = v31;
  v40 = v133;
  v39(v31, v35, v133);
  v140 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
  v140(v24, v135 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v18);
  v41 = *(double *)(v36 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
  v42 = *(double *)(v36 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 8);
  v43 = *(double *)(v36 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 16);
  v44 = *(double *)(v36 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 24);
  v45 = *(_QWORD *)(v135 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity + 8);
  v148[0] = *(_QWORD *)(v135 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity);
  v148[1] = v45;
  v122 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId;
  v117 = *(_QWORD *)(v135 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
  v46 = (uint64_t)v129;
  v47 = v135;
  sub_240080084(v37, (uint64_t)v129, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  (*(void (**)(uint64_t, _QWORD, uint64_t, _QWORD *))(v128 + 56))(v46, 0, 1, v141);
  v39(v134, v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated, v40);
  v115 = *(_QWORD *)(v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate);
  v114 = *(_QWORD *)(v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw);
  v113 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw + 8);
  v112 = *(_QWORD *)(v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch);
  v111 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch + 8);
  v128 = v38;
  v110 = *(_QWORD *)(v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll);
  v109 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll + 8);
  v120 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker;
  v48 = *(_QWORD *)(v47 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
  v121 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker;
  v49 = *(_QWORD *)(v47 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
  v123 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers;
  v50 = *(_QWORD *)(v47 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
  if (v48)
  {
    v141 = *(_QWORD **)(v48 + *(_QWORD *)(*(_QWORD *)v48 + 200));
    swift_retain();
    v51 = (uint64_t)v137;
    if (v49)
    {
LABEL_4:
      v119 = *(_QWORD *)(v49 + *(_QWORD *)(*(_QWORD *)v49 + 200));
      swift_retain();
      goto LABEL_8;
    }
  }
  else
  {
    v141 = 0;
    v51 = (uint64_t)v137;
    if (v49)
      goto LABEL_4;
  }
  v119 = 0;
LABEL_8:
  *(_QWORD *)&v145 = MEMORY[0x24BEE4AF8];
  if (v50 >> 62)
  {
    swift_retain();
    swift_bridgeObjectRetain_n();
    swift_retain();
    result = sub_240154D30();
    v53 = result;
  }
  else
  {
    v53 = *(_QWORD *)((v50 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_retain();
    swift_bridgeObjectRetain_n();
    result = swift_retain();
  }
  v55 = v138;
  v108 = v48;
  v107 = v49;
  if (v53)
  {
    if (v53 >= 1)
    {
      v106 = v24;
      v56 = 0;
      v57 = v50 & 0xC000000000000001;
      v58 = v50;
      v59 = v50 + 32;
      while (1)
      {
        if (v57)
        {
          v60 = MEMORY[0x24267D4E0](v56++, v58);
          v61 = *(_QWORD *)(v60 + *(_QWORD *)(*(_QWORD *)v60 + 200));
          swift_retain();
          swift_unknownObjectRelease();
          if (v61)
            goto LABEL_13;
        }
        else
        {
          v62 = *(_QWORD *)(v59 + 8 * v56++);
          if (*(_QWORD *)(v62 + *(_QWORD *)(*(_QWORD *)v62 + 200)))
          {
            swift_retain();
LABEL_13:
            MEMORY[0x24267D0CC]();
            if (*(_QWORD *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v145 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
              sub_2401547D8();
            sub_240154814();
            sub_2401547B4();
          }
        }
        if (v56 == v53)
        {
          v50 = v58;
          swift_bridgeObjectRelease();
          v63 = v145;
          v47 = v135;
          v51 = (uint64_t)v137;
          v24 = v106;
          goto LABEL_24;
        }
      }
    }
    __break(1u);
    goto LABEL_50;
  }
  swift_bridgeObjectRelease();
  v63 = MEMORY[0x24BEE4AF8];
LABEL_24:
  swift_bridgeObjectRelease();
  v64 = v119;
  swift_retain();
  v65 = v141;
  swift_retain();
  v66 = sub_240091370(v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release_n();
  *(_QWORD *)&v145 = 0;
  *((_QWORD *)&v145 + 1) = v65;
  v146 = v64;
  v147 = v66;
  v119 = *(_QWORD *)(v47 + v122);
  v67 = 1;
  v141 = *(_QWORD **)(v55 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v141)(v130, 1, 1, v18);
  v68 = *(_QWORD *)(v47 + v120);
  if (v68)
  {
    v69 = (uint64_t)v131;
    v140(v131, v68 + qword_256FC4858, v18);
    v70 = v69;
    v67 = 0;
  }
  else
  {
    v70 = (uint64_t)v131;
  }
  v71 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v141)(v70, v67, 1, v18);
  v72 = *(_QWORD *)(v47 + v121);
  v73 = (uint64_t)v132;
  if (v72)
  {
    v140(v132, v72 + qword_256FC4858, v18);
    v71 = 0;
  }
  v122 = v50;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v141)(v73, v71, 1, v18);
  v74 = *(_QWORD *)(v47 + v123);
  if (v74 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_240154D30();
    v75 = result;
  }
  else
  {
    v75 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
  }
  v76 = MEMORY[0x24BEE4AF8];
  if (!v75)
    goto LABEL_45;
  if (v75 >= 1)
  {
    for (i = 0; i != v75; ++i)
    {
      if ((v74 & 0xC000000000000001) != 0)
      {
        v78 = MEMORY[0x24267D4E0](i, v74);
      }
      else
      {
        v78 = *(_QWORD *)(v74 + 8 * i + 32);
        swift_retain();
      }
      v140((char *)v51, v78 + qword_256FC4858, v18);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v141)(v51, 0, 1, v18);
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v51, 1, v18) == 1)
      {
        sub_240070BD4(v51, &qword_256FB5DE8);
      }
      else
      {
        v79 = v55;
        v80 = v24;
        v81 = *(void (**)(char *, uint64_t, uint64_t))(v79 + 32);
        v82 = v136;
        v81(v136, v51, v18);
        v81(v139, (uint64_t)v82, v18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v76 = sub_240077844(0, *(_QWORD *)(v76 + 16) + 1, 1, v76);
        v84 = *(_QWORD *)(v76 + 16);
        v83 = *(_QWORD *)(v76 + 24);
        if (v84 >= v83 >> 1)
          v76 = sub_240077844(v83 > 1, v84 + 1, 1, v76);
        *(_QWORD *)(v76 + 16) = v84 + 1;
        v85 = v138;
        v81((char *)(v76+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(_QWORD *)(v138 + 72) * v84), (uint64_t)v139, v18);
        v24 = v80;
        v55 = v85;
        v51 = (uint64_t)v137;
      }
    }
LABEL_45:
    swift_bridgeObjectRelease_n();
    v86 = v124;
    sub_240154274();
    v87 = (int *)v125;
    v88 = v126;
    v89 = (uint64_t)&v126[*(int *)(v125 + 28)];
    v90 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v141;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v141)(v89, 1, 1, v18);
    v91 = (uint64_t)&v88[v87[8]];
    v90(v91, 1, 1, v18);
    v92 = (uint64_t)&v88[v87[9]];
    v90(v92, 1, 1, v18);
    v93 = v87[10];
    *(_QWORD *)&v88[v93] = MEMORY[0x24BEE4AF8];
    *(_QWORD *)v88 = v119;
    *((_QWORD *)v88 + 1) = 0;
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(&v88[v87[6]], v86, v133);
    sub_24013B028(v130, v89);
    sub_24013B028((uint64_t)v131, v91);
    sub_24013B028((uint64_t)v132, v92);
    swift_bridgeObjectRelease();
    *(_QWORD *)&v88[v93] = v76;
    v94 = v127;
    sub_2400E80C0((uint64_t)v88, v127);
    v95 = *(double *)(v128 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect);
    v96 = *(double *)(v128 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect + 8);
    v97 = *(double *)(v128 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect + 16);
    v98 = *(double *)(v128 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect + 24);
    v99 = v135;
    v100 = *(_QWORD *)(v135 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints);
    v101 = sub_24008C168();
    v102 = sub_24008C168();
    v103 = *(_QWORD *)(v99 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence);
    v104 = sub_24008C168();
    v105 = sub_24008C168();
    v144 = *(_BYTE *)(v99 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastObservationType);
    v143 = *(_BYTE *)(v99 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentMotionClassification);
    v142 = *(_BYTE *)(v99 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentFaceDirection);
    type metadata accessor for DKPersonTrackerState(0);
    swift_allocObject();
    swift_retain();
    swift_retain();
    v52 = sub_2400E3494((uint64_t)v118, (uint64_t)v24, v148, -1, v117, v117, (uint64_t)v129, (uint64_t)v134, v41, v42, v43, v44, v95, v96, v97, v98, v115, v114, v113,
            v112,
            v111,
            v110,
            v109,
            v108,
            v107,
            v122,
            &v145,
            v94,
            v100,
            v101,
            v102,
            v103,
            v104,
            v105,
            &v144,
            &v143,
            &v142);
    sub_240139EF4();
    swift_release();
    return v52;
  }
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_240139DBC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  double v6;
  void *v7;
  unint64_t v8;
  uint64_t v9;

  v2 = v1;
  result = type metadata accessor for DKMotion3();
  v5 = *(_QWORD *)(a1 + *(int *)(result + 24));
  if (*(_QWORD *)(v5 + 16))
  {
    v6 = fabs(*(double *)(v5 + 32));
    if (v6 >= 0.05)
    {
      if (v6 >= 0.1)
        v7 = &unk_251061AF0;
      else
        v7 = &unk_251061AC0;
    }
    else
    {
      v7 = &unk_251061A90;
    }
    v8 = sub_240107280((uint64_t)v7);
    swift_retain();
    sub_24010D22C(v8, 0, 0);
    swift_release();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_240136F94();
    swift_release();
    swift_retain();
    sub_2400B5F8C(&v9, 0x3FECCCCCCCCCCCCDLL, 0);
    result = swift_release();
    if (v9 != 3)
      *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentMotionClassification) = v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240139EF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = v0;
  v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history);
  v3 = swift_retain();
  MEMORY[0x24267D0CC](v3);
  if (*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_31;
  while (1)
  {
    sub_240154814();
    result = sub_2401547B4();
    if ((unint64_t)*v2 >> 62)
    {
      swift_bridgeObjectRetain();
      v5 = sub_240154D30();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v5 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_configuration);
    if (*(_QWORD *)(v6 + 72) >= v5)
      return result;
    while (1)
    {
      v1 = *v2;
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        v8 = sub_240154D30();
        swift_bridgeObjectRelease();
        if (!v8)
          goto LABEL_28;
      }
      else if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_28;
      }
      v1 = *v2;
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        v9 = sub_240154D30();
        swift_bridgeObjectRelease();
        if (!v9)
          goto LABEL_29;
      }
      else if (!*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_29;
      }
      if ((v1 & 0xC000000000000001) == 0)
        break;
      v1 = MEMORY[0x24267D4E0](0, v1);
LABEL_12:
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        v10 = sub_240154D30();
        swift_bridgeObjectRelease();
        if (!v10)
          goto LABEL_30;
      }
      else if (!*(_QWORD *)((*v2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_30;
      }
      sub_240079A7C(0, 1);
      result = swift_release();
      if ((unint64_t)*v2 >> 62)
      {
        swift_bridgeObjectRetain();
        v7 = sub_240154D30();
        result = swift_bridgeObjectRelease();
      }
      else
      {
        v7 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      if (*(_QWORD *)(v6 + 72) >= v7)
        return result;
    }
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
    {
      v1 = *(_QWORD *)(v1 + 32);
      swift_retain();
      goto LABEL_12;
    }
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    sub_2401547D8();
  }
}

uint64_t sub_24013A150(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t i;
  uint64_t v12;

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
  if (v3)
    *(_BYTE *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 240)) = a1 & 1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
  if (v4)
    *(_BYTE *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 240)) = a1 & 1;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
  if (!(v5 >> 62))
  {
    v6 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v6)
      goto LABEL_7;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_240154D30();
  v6 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_7:
  if (v6 >= 1)
  {
    if ((v5 & 0xC000000000000001) != 0)
    {
      v8 = 0;
      v9 = a1 & 1;
      do
      {
        v10 = MEMORY[0x24267D4E0](v8++, v5);
        *(_BYTE *)(v10 + *(_QWORD *)(*(_QWORD *)v10 + 240)) = v9;
        swift_unknownObjectRelease();
      }
      while (v6 != v8);
    }
    else
    {
      for (i = 0; i != v6; ++i)
      {
        v12 = *(_QWORD *)(v5 + 8 * i + 32);
        *(_BYTE *)(v12 + *(_QWORD *)(*(_QWORD *)v12 + 240)) = a1 & 1;
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t DKPersonTracker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_release();
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId, &qword_256FB5DE8);
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, &qword_256FB5DE8);
  sub_2400800C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger;
  v5 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid;
  v7 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastSpeakingCalculationTime, v2);
  return v0;
}

uint64_t DKPersonTracker.__deallocating_deinit()
{
  DKPersonTracker.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_24013A4A8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid;
  v4 = sub_24015434C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_24013A4F0()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
}

uint64_t sub_24013A504(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) = result;
  return result;
}

uint64_t (*sub_24013A518())()
{
  return nullsub_1;
}

uint64_t sub_24013A534()
{
  return sub_240138D40() & 1;
}

BOOL sub_24013A558()
{
  return sub_240137BD0();
}

uint64_t sub_24013A57C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v4 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera;
  sub_2400800C8(v4, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_240080084(a1, v4, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v5 = *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter)
     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
  swift_retain();
  sub_2400800C8(v5, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_240080084(a1, v5, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  return swift_release();
}

uint64_t sub_24013A618(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;
  unsigned int v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 64);
  if (v1)
  {
    v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  v5 = *(_BYTE *)(a1 + 32);
  v6 = v5 & 0x3F;
  v3 = 1 << v5;
  if (v6 < 7)
    return v3;
  v1 = *(_QWORD *)(a1 + 72);
  if (v1)
  {
    v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2)
    v7 = 2;
  v8 = v7 - 2;
  v9 = (unint64_t *)(a1 + 80);
  v2 = 64;
  while (v8)
  {
    v10 = *v9++;
    v1 = v10;
    --v8;
    v2 += 64;
    if (v10)
      return __clz(__rbit64(v1)) + v2;
  }
  return v3;
}

void sub_24013A6A0(uint64_t a1)
{
  int64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  long double v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v23 = *(_QWORD *)(a1 + 16);
    v24 = MEMORY[0x24BEE4AF8];
    sub_2400E5724(0, v1, 0);
    v4 = sub_24013A618(a1);
    v5 = v23;
    v6 = 0;
    v7 = a1 + 64;
    v8 = *(_BYTE *)(a1 + 32);
    while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << v8)
    {
      v10 = (unint64_t)v4 >> 6;
      if ((*(_QWORD *)(v7 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0)
        goto LABEL_27;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v3)
        goto LABEL_28;
      v11 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v4);
      v12 = 0.5;
      if (*(_BYTE *)(v11 + 33) == 1)
      {
        if (*(_BYTE *)(v11 + 32) == 1)
        {
          v13 = v3;
          v14 = atan2(*(long double *)(v11 + 48), *(long double *)(v11 + 56));
          v3 = v13;
          v5 = v23;
          v12 = v14;
        }
        else
        {
          v12 = *(double *)(v11 + 40);
        }
      }
      v16 = *(_QWORD *)(v24 + 16);
      v15 = *(_QWORD *)(v24 + 24);
      if (v16 >= v15 >> 1)
      {
        v22 = v3;
        sub_2400E5724(v15 > 1, v16 + 1, 1);
        v3 = v22;
        v5 = v23;
      }
      *(_QWORD *)(v24 + 16) = v16 + 1;
      *(double *)(v24 + 8 * v16 + 32) = v12;
      v8 = *(_BYTE *)(a1 + 32);
      v9 = 1 << v8;
      if (v4 >= 1 << v8)
        goto LABEL_29;
      v17 = *(_QWORD *)(v7 + 8 * v10);
      if ((v17 & (1 << v4)) == 0)
        goto LABEL_30;
      if (*(_DWORD *)(a1 + 36) != (_DWORD)v3)
        goto LABEL_31;
      v18 = v17 & (-2 << (v4 & 0x3F));
      if (v18)
      {
        v9 = __clz(__rbit64(v18)) | v4 & 0xFFFFFFFFFFFFFFC0;
      }
      else
      {
        v19 = v10 + 1;
        v20 = (v9 + 63) >> 6;
        if (v10 + 1 < v20)
        {
          v21 = *(_QWORD *)(v7 + 8 * v19);
          if (v21)
          {
LABEL_24:
            v9 = __clz(__rbit64(v21)) + (v19 << 6);
          }
          else
          {
            while (v20 - 2 != v10)
            {
              v21 = *(_QWORD *)(a1 + 80 + 8 * v10++);
              if (v21)
              {
                v19 = v10 + 1;
                goto LABEL_24;
              }
            }
          }
        }
      }
      ++v6;
      v4 = v9;
      if (v6 == v5)
        return;
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
}

uint64_t sub_24013A8DC(uint64_t a1, double *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  v6 = v5;
  v61 = a5;
  v62 = a1;
  v53 = a4;
  v63 = a3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v8);
  v58 = (uint64_t)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v55 = (char *)&v52 - v11;
  v12 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v12);
  v56 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_240154310();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v54 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = v5 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId;
  v18 = sub_24015434C();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  v60 = v19;
  v20(v17, 1, 1, v18);
  v59 = v18;
  v20(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, 1, 1, v18);
  sub_2401544B4();
  v21 = (_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity);
  *v21 = -1;
  v21[1] = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker) = 0;
  v22 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history) = v22;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints) = 0;
  v23 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personSelectionFilter;
  type metadata accessor for DKPersonSelectionFilter(0);
  swift_allocObject();
  *(_QWORD *)(v6 + v23) = sub_240152C9C(1);
  v24 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personRankingFilter;
  type metadata accessor for DKPersonRankingFilter();
  swift_allocObject();
  *(_QWORD *)(v6 + v24) = sub_240148C74();
  v25 = OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_rankConfidence;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6228);
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = -1;
  *(_QWORD *)(v26 + 24) = 0x3FF0000000000000;
  *(_QWORD *)(v6 + v25) = v26;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceCropBuffer) = v22;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastObservationType) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentMotionClassification) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_currentFaceDirection) = 3;
  sub_240154274();
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v57 = v15;
  v28 = v62;
  v27(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate, v62, v14);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_configuration) = a2;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) = v53;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid, v63, v18);
  v29 = v61;
  sub_240080084(v61, v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v30 = a2[2];
  v31 = a2[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8798);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identityFilter) = sub_2400B80B4(MEMORY[0x24BEE4AF8], v30, v31);
  v32 = (uint64_t)v54;
  v52 = v14;
  v27((uint64_t)v54, v28, v14);
  v33 = v29;
  v34 = v56;
  sub_240080084(v33, v56, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  type metadata accessor for DKPersonMotionFilter(0);
  swift_allocObject();
  swift_retain();
  v35 = sub_2400D84AC(v32, a2, v34);
  swift_release();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter) = v35;
  v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  v37 = (uint64_t)v55;
  v36(v55, 1, 1, v14);
  type metadata accessor for DKBinaryProbabilityFilter();
  v38 = swift_allocObject();
  *(_BYTE *)(v38 + 49) = 0;
  *(_QWORD *)(v38 + 24) = 0;
  v39 = v58;
  sub_240070B90(v37, v58, &qword_256FB4CC8);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  v40 = sub_240148668(0, 0, 0x3FE0000000000000, 0, 0, v39, 0, 1, 0.1, 0, 1);
  sub_240070BD4(v37, &qword_256FB4CC8);
  *(_QWORD *)(v38 + 16) = v40;
  *(_QWORD *)(v38 + 32) = 0x3FE0000000000000;
  *(_QWORD *)(v38 + 40) = 0;
  *(_BYTE *)(v38 + 48) = 1;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter) = v38;
  v41 = v52;
  v36((char *)v37, 1, 1, v52);
  v42 = swift_allocObject();
  *(_BYTE *)(v42 + 49) = 0;
  *(_QWORD *)(v42 + 24) = 0;
  sub_240070B90(v37, v39, &qword_256FB4CC8);
  swift_allocObject();
  v43 = sub_240148668(0, 0, 0x3FE0000000000000, 0, 0, v39, 0, 1, 0.1, 0, 1);
  sub_240070BD4(v37, &qword_256FB4CC8);
  *(_QWORD *)(v42 + 16) = v43;
  *(_QWORD *)(v42 + 32) = 0x3FE0000000000000;
  *(_QWORD *)(v42 + 40) = 0;
  *(_BYTE *)(v42 + 48) = 1;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter) = v42;
  v44 = v37;
  v45 = v37;
  v46 = v41;
  v36((char *)v45, 1, 1, v41);
  v47 = swift_allocObject();
  *(_BYTE *)(v47 + 49) = 0;
  *(_QWORD *)(v47 + 24) = 0;
  v48 = v44;
  sub_240070B90(v44, v39, &qword_256FB4CC8);
  swift_allocObject();
  v49 = sub_240148668(0, 0, 0x3FF0000000000000, 0, 0, v39, 0, 1, 1.0, 0, 1);
  sub_240070BD4(v48, &qword_256FB4CC8);
  *(_QWORD *)(v47 + 16) = v49;
  *(_QWORD *)(v47 + 32) = 0x3FE0000000000000;
  *(_QWORD *)(v47 + 40) = 0;
  *(_BYTE *)(v47 + 48) = 1;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_saliencyFilter) = v47;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1330);
  swift_allocObject();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_motionClassificationFilter) = sub_2400B8684((uint64_t)&unk_251062130, 0.1, 0.1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1338);
  swift_allocObject();
  v50 = sub_2400B8974((uint64_t)&unk_251062158, 0.5, 0.5);
  sub_2400800C8(v61, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v63, v59);
  (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v62, v46);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceDirectionFilter) = v50;
  return v6;
}

uint64_t sub_24013B028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

double sub_24013B070@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 176);
  *a2 = result;
  return result;
}

double sub_24013B080(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 176) = *a1;
  return result;
}

double sub_24013B090@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 184);
  *a2 = result;
  return result;
}

double sub_24013B0A0(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 184) = *a1;
  return result;
}

double sub_24013B0B0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 192);
  *a2 = result;
  return result;
}

double sub_24013B0C0(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 192) = *a1;
  return result;
}

double sub_24013B0D0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 200);
  *a2 = result;
  return result;
}

double sub_24013B0E0(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 200) = *a1;
  return result;
}

double sub_24013B0F0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 208);
  *a2 = result;
  return result;
}

double sub_24013B100(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 208) = *a1;
  return result;
}

double sub_24013B110@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 216);
  *a2 = result;
  return result;
}

double sub_24013B120(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 216) = *a1;
  return result;
}

double sub_24013B130@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 224);
  *a2 = result;
  return result;
}

double sub_24013B140(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 224) = *a1;
  return result;
}

double sub_24013B150@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 232);
  *a2 = result;
  return result;
}

double sub_24013B160(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 232) = *a1;
  return result;
}

uint64_t sub_24013B170@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 240);
  return result;
}

_BYTE *sub_24013B180(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 240) = *result;
  return result;
}

double sub_24013B190@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 248);
  *a2 = result;
  return result;
}

double sub_24013B1A0(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 248) = *a1;
  return result;
}

double sub_24013B1B0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 256);
  *a2 = result;
  return result;
}

double sub_24013B1C0(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 256) = *a1;
  return result;
}

double sub_24013B1D0@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 264);
  *a2 = result;
  return result;
}

double sub_24013B1E0(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 264) = *a1;
  return result;
}

uint64_t sub_24013B1F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_24013B204(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_creationDate);
}

uint64_t sub_24013B228@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240070B90(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId, a2, &qword_256FB5DE8);
}

uint64_t sub_24013B258(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2401376B0(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastFaceObservationId);
}

uint64_t sub_24013B274@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240070B90(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId, a2, &qword_256FB5DE8);
}

uint64_t sub_24013B2A4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2401376B0(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lastBodyObservationId);
}

uint64_t sub_24013B2C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240080084(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_camera, a2, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
}

uint64_t sub_24013B2F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger, (uint64_t (*)(_QWORD))MEMORY[0x24BEE78D8], a2);
}

uint64_t sub_24013B308(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BEE78D8], &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_logger);
}

_QWORD *sub_24013B32C@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId);
  return result;
}

_QWORD *sub_24013B344(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_trackerId) = *result;
  return result;
}

double sub_24013B35C@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(double *)(a2 + 8) = result;
  return result;
}

double sub_24013B380(uint64_t a1, _QWORD *a2)
{
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t sub_24013B3A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identityFilter);
  return swift_retain();
}

uint64_t sub_24013B3BC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_identityFilter);
}

uint64_t sub_24013B3C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker, a2);
}

uint64_t sub_24013B3D4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
}

uint64_t sub_24013B3E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker, a2);
}

uint64_t sub_24013B3EC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
}

uint64_t sub_24013B3F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24013B410(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
}

uint64_t sub_24013B41C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
  return swift_retain();
}

uint64_t sub_24013B434(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
}

uint64_t sub_24013B440@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24013B458(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_history);
}

uint64_t sub_24013B464@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_19Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints, a2);
}

uint64_t sub_24013B470(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyKeypoints);
}

uint64_t sub_24013B47C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter);
  return swift_retain();
}

uint64_t sub_24013B494(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_speakingFilter);
}

uint64_t sub_24013B4A0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter);
  return swift_retain();
}

uint64_t sub_24013B4B8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_lookingFilter);
}

uint64_t type metadata accessor for DKPersonTrackerConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKPersonTrackerConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleAlpha.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleAlpha.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleAlpha.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleBeta.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleBeta.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceAngleBeta.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceAlpha.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 880))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceAlpha.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceAlpha.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceBeta.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 904))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceBeta.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceBeta.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetX.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetX.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 936))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetX.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 944))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetY.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetY.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceOffsetY.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 968))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleX.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 976))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleX.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleX.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 992))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleY.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1000))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleY.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1008))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stubFaceScaleY.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stickToEdgeEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stickToEdgeEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1032))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.stickToEdgeEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1040))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.searchMargin.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1048))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.searchMargin.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1056))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.searchMargin.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1064))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.eyeLocation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1072))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.eyeLocation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.eyeLocation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1088))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceDirectionMinConfidence.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1096))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceDirectionMinConfidence.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1104))();
}

uint64_t dispatch thunk of DKPersonTrackerConfiguration.faceDirectionMinConfidence.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1112))();
}

uint64_t sub_24013B6A0()
{
  return type metadata accessor for DKPersonTracker();
}

uint64_t type metadata accessor for DKPersonTracker()
{
  uint64_t result;

  result = qword_256FC0ED0;
  if (!qword_256FC0ED0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_24013B6E4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  sub_240154310();
  if (v0 <= 0x3F)
  {
    sub_2400FD11C();
    if (v1 <= 0x3F)
    {
      type metadata accessor for DKCamera();
      if (v2 <= 0x3F)
      {
        sub_2401544C0();
        if (v3 <= 0x3F)
        {
          sub_24015434C();
          if (v4 <= 0x3F)
            swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t method lookup function for DKPersonTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKPersonTracker.creationDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKPersonTracker.creationDate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKPersonTracker.creationDate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKPersonTracker.lastFaceObservationId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKPersonTracker.lastFaceObservationId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKPersonTracker.lastFaceObservationId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKPersonTracker.lastBodyObservationId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKPersonTracker.lastBodyObservationId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKPersonTracker.lastBodyObservationId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKPersonTracker.camera.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKPersonTracker.camera.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKPersonTracker.camera.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKPersonTracker.logger.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKPersonTracker.logger.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKPersonTracker.logger.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKPersonTracker.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKPersonTracker.trackerId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKPersonTracker.trackerId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKPersonTracker.identity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKPersonTracker.identity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKPersonTracker.identity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKPersonTracker.identityFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKPersonTracker.identityFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of DKPersonTracker.identityFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of DKPersonTracker.faceTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of DKPersonTracker.faceTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of DKPersonTracker.faceTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of DKPersonTracker.handTrackers.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of DKPersonTracker.handTrackers.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of DKPersonTracker.handTrackers.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of DKPersonTracker.personPoseFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of DKPersonTracker.personPoseFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of DKPersonTracker.personPoseFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of DKPersonTracker.history.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of DKPersonTracker.history.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of DKPersonTracker.history.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyKeypoints.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyKeypoints.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of DKPersonTracker.bodyKeypoints.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of DKPersonTracker.speakingFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of DKPersonTracker.speakingFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of DKPersonTracker.speakingFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of DKPersonTracker.lookingFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of DKPersonTracker.lookingFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of DKPersonTracker.lookingFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of DKPersonTracker.__allocating_init(currentTime:configuration:uuid:trackerId:camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 960))();
}

uint64_t dispatch thunk of DKPersonTracker.isActivated()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 968))();
}

uint64_t dispatch thunk of DKPersonTracker.update(camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 976))();
}

uint64_t dispatch thunk of DKPersonTracker.update(currentTime:face:body:hands:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t dispatch thunk of DKPersonTracker.updateSaliency(probability:time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1008))();
}

uint64_t dispatch thunk of DKPersonTracker.isExpired(currentTime:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t dispatch thunk of DKPersonTracker.getState(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t dispatch thunk of DKPersonTracker.getHistory()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1056))();
}

uint64_t dispatch thunk of DKPersonTracker.setSelected(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1064))();
}

uint64_t sub_24013BAF0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for DKIntelligentTrackingErrors(uint64_t a1)
{
  return sub_24013BB18(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_24013BB18(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s23IntelligentTrackingCore27DKIntelligentTrackingErrorsOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24013BAF0(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DKIntelligentTrackingErrors(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24013BAF0(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_24013BB18(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DKIntelligentTrackingErrors(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_24013BB18(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingErrors(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingErrors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingErrors()
{
  return &type metadata for DKIntelligentTrackingErrors;
}

uint64_t sub_24013BCAC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24013BCC4()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t i;
  uint64_t v27;
  uint64_t v28;
  void *v29;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(*(_QWORD *)(v1 + 48)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces))
    v3 = *(_QWORD *)(*(_QWORD *)(v1 + 48)
                   + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
  else
    v3 = MEMORY[0x24BEE4AF8];
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v4 = sub_240154D30();
    result = swift_bridgeObjectRelease();
    if (!v4)
      goto LABEL_13;
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v4)
      goto LABEL_13;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_45;
  }
  if ((v3 & 0xC000000000000001) != 0)
  {
    v6 = 0;
    do
    {
      v7 = MEMORY[0x24267D4E0](v6++, v3);
      *(_QWORD *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
      swift_release();
      v8 = *(void **)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
      *(_QWORD *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
      swift_unknownObjectRelease();

    }
    while (v4 != v6);
  }
  else
  {
    v9 = 0;
    do
    {
      v10 = *(_QWORD *)(v3 + 8 * v9++ + 32);
      *(_QWORD *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
      swift_retain();
      swift_release();
      v11 = *(void **)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
      *(_QWORD *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
      swift_release();

    }
    while (v4 != v9);
  }
LABEL_13:
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v1 + 48);
  if (*(_QWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies))
    v13 = *(_QWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
  else
    v13 = v2;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_240154D30();
    result = swift_bridgeObjectRelease();
    if (v14)
    {
LABEL_18:
      if (v14 >= 1)
      {
        if ((v13 & 0xC000000000000001) != 0)
        {
          v15 = 0;
          do
          {
            v16 = MEMORY[0x24267D4E0](v15++, v13);
            *(_QWORD *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
            swift_release();
            v17 = *(void **)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint);
            *(_QWORD *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
            swift_unknownObjectRelease();

          }
          while (v14 != v15);
        }
        else
        {
          v18 = 0;
          do
          {
            v19 = *(_QWORD *)(v13 + 8 * v18++ + 32);
            *(_QWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
            swift_retain();
            swift_release();
            v20 = *(void **)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint);
            *(_QWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
            swift_release();

          }
          while (v14 != v18);
        }
        goto LABEL_25;
      }
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
  }
  else
  {
    v14 = *(_QWORD *)((v13 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v14)
      goto LABEL_18;
  }
LABEL_25:
  swift_bridgeObjectRelease();
  v21 = *(_QWORD *)(v1 + 48);
  if (*(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands))
    v22 = *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
  else
    v22 = v2;
  if (!(v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v23)
      goto LABEL_30;
LABEL_37:
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(v1 + 48);
    v29 = *(void **)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
    *(_QWORD *)(v28 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = 0;

    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23 = sub_240154D30();
  result = swift_bridgeObjectRelease();
  if (!v23)
    goto LABEL_37;
LABEL_30:
  if (v23 >= 1)
  {
    if ((v22 & 0xC000000000000001) != 0)
    {
      v24 = 0;
      do
      {
        v25 = MEMORY[0x24267D4E0](v24++, v22);
        *(_QWORD *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
        swift_unknownObjectRelease();
        swift_release();
      }
      while (v23 != v24);
    }
    else
    {
      for (i = 0; i != v23; ++i)
      {
        v27 = *(_QWORD *)(v22 + 8 * i + 32);
        *(_QWORD *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
        swift_release();
      }
    }
    goto LABEL_37;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_24013C0A4()
{
  return type metadata accessor for DKCleanupTask();
}

uint64_t type metadata accessor for DKCleanupTask()
{
  uint64_t result;

  result = qword_256FC1368;
  if (!qword_256FC1368)
    return swift_getSingletonMetadata();
  return result;
}

BOOL sub_24013C0E8(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

uint64_t DKMotionStatisticsFilter.__allocating_init(duration:)(double a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = MEMORY[0x24BEE4AF8];
  *(double *)(result + 24) = a1;
  return result;
}

uint64_t DKMotionStatisticsFilter.init(duration:)(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = v1;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEE4AF8];
  *(double *)(v1 + 24) = a1;
  return result;
}

uint64_t sub_24013C14C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unint64_t v30;
  unint64_t v31;
  void (*v33)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v36 = a1;
  v3 = sub_240154310();
  v34 = *(_QWORD *)(v3 - 8);
  v35 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v33 - v7;
  v37 = type metadata accessor for DKMotion3();
  v9 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v33 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v33 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)(v1 + 16);
  v18 = *(_QWORD *)(v17 + 16);
  v38 = v9;
  if (v18)
  {
    v19 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    while (1)
    {
      sub_24013C4B8(v17 + v19, (uint64_t)v16);
      v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      v20(v16, 0, 1, v37);
      sub_2400E7240((uint64_t)v16);
      sub_24013C4B8(v36, (uint64_t)v13);
      v21 = *(_QWORD *)(v1 + 16);
      if (!*(_QWORD *)(v21 + 16))
        break;
      v22 = v34;
      v23 = v35;
      (*(void (**)(char *, unint64_t, uint64_t))(v34 + 16))(v8, v21 + v19, v35);
      sub_2401542C8();
      v9 = sub_2401542B0();
      v24 = *(void (**)(char *, uint64_t))(v22 + 8);
      v24(v5, v23);
      v24(v8, v23);
      sub_2400A4FF8((uint64_t)v13);
      if ((v9 & 1) == 0)
        goto LABEL_17;
      v17 = *(_QWORD *)(v1 + 16);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v1 + 16) = v17;
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v26 = *(_QWORD *)(v17 + 16);
        if (!v26)
          goto LABEL_14;
      }
      else
      {
        v17 = sub_24014CE5C(v17);
        *(_QWORD *)(v1 + 16) = v17;
        v26 = *(_QWORD *)(v17 + 16);
        if (!v26)
        {
LABEL_14:
          __break(1u);
          goto LABEL_15;
        }
      }
      v27 = v26 - 1;
      v2 = v17 + v19;
      sub_2400A4FF8(v17 + v19);
      v28 = *(_QWORD *)(v38 + 72);
      if (v28 > 0 || v2 >= v17 + v19 + v28 + v28 * v27)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v28)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      *(_QWORD *)(v17 + 16) = v27;
      *(_QWORD *)(v1 + 16) = v17;
      v9 = v38;
      if (!*(_QWORD *)(v17 + 16))
        goto LABEL_16;
    }
    __break(1u);
    goto LABEL_22;
  }
LABEL_15:
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
LABEL_16:
  v20(v16, 1, 1, v37);
  sub_2400E7240((uint64_t)v16);
  sub_24013C4B8(v36, (uint64_t)v13);
  sub_2400A4FF8((uint64_t)v13);
LABEL_17:
  v20 = v33;
  sub_24013C4B8(v36, (uint64_t)v33);
  v2 = *(_QWORD *)(v1 + 16);
  v29 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v1 + 16) = v2;
  if ((v29 & 1) == 0)
  {
LABEL_22:
    v2 = sub_240078F34(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
    *(_QWORD *)(v1 + 16) = v2;
  }
  v31 = *(_QWORD *)(v2 + 16);
  v30 = *(_QWORD *)(v2 + 24);
  if (v31 >= v30 >> 1)
  {
    v2 = sub_240078F34(v30 > 1, v31 + 1, 1, v2);
    *(_QWORD *)(v1 + 16) = v2;
  }
  *(_QWORD *)(v2 + 16) = v31 + 1;
  return sub_2400A4FB4((uint64_t)v20, v2+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v31);
}

uint64_t sub_24013C4B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24013C4FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  v5 = type metadata accessor for DKMotion3();
  v6 = *(_QWORD *)(v5 - 8);
  if (v4)
  {
    sub_24013C4B8(v3 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), a1);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

uint64_t sub_24013C578@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v4 - 1;
    v6 = type metadata accessor for DKMotion3();
    v7 = *(_QWORD *)(v6 - 8);
    sub_24013C4B8(v3+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v5, a1);
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    v9 = a1;
    v10 = 0;
    v11 = v6;
  }
  else
  {
    v11 = type metadata accessor for DKMotion3();
    v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
    v9 = a1;
    v10 = 1;
  }
  return v8(v9, v10, 1, v11);
}

void sub_24013C61C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = type metadata accessor for DKMotion3();
    v4 = *(_QWORD *)(v3 - 8);
    v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v6 = *(_QWORD *)(v4 + 72);
    v7 = v1 + *(int *)(v3 + 20) + v5;
    v8 = 1.79769313e308;
    v9 = -1.79769313e308;
    while (*(_QWORD *)(*(_QWORD *)v7 + 16))
    {
      v10 = *(_QWORD *)v7;
      v11 = *(double *)(*(_QWORD *)v7 + 32);
      if (v11 < v8)
        v8 = *(double *)(v10 + 32);
      if (v9 <= v11)
        v9 = *(double *)(v10 + 32);
      v7 += v6;
      if (!--v2)
        return;
    }
    __break(1u);
  }
}

void sub_24013C6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  double v11;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v3 = type metadata accessor for DKMotion3();
    v4 = *(_QWORD *)(v3 - 8);
    v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    v6 = *(_QWORD *)(v4 + 72);
    v7 = v1 + *(int *)(v3 + 20) + v5;
    v8 = 1.79769313e308;
    v9 = -1.79769313e308;
    while (*(_QWORD *)(*(_QWORD *)v7 + 16) >= 2uLL)
    {
      v10 = *(_QWORD *)v7;
      v11 = *(double *)(*(_QWORD *)v7 + 40);
      if (v11 < v8)
        v8 = *(double *)(v10 + 40);
      if (v9 <= v11)
        v9 = *(double *)(v10 + 40);
      v7 += v6;
      if (!--v2)
        return;
    }
    __break(1u);
  }
}

void sub_24013C760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;

  v1 = type metadata accessor for DKMotion3();
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v0 + 16);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = *(int *)(v2 + 24);
    v9 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v10 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    v11 = 0.0;
    v12 = 0.0;
    while (1)
    {
      sub_24013C4B8(v9, (uint64_t)v5);
      v13 = *(_QWORD *)&v5[v8];
      v14 = *(_QWORD *)(v13 + 16);
      if (!v14)
        break;
      if (v14 == 1)
        goto LABEL_9;
      v15 = *(double *)(v13 + 40);
      v12 = v12 + *(double *)(v13 + 32);
      sub_2400A4FF8((uint64_t)v5);
      v11 = v11 + v15;
      v9 += v10;
      if (!--v7)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_9:
    __break(1u);
  }
}

void sub_24013C880()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  unint64_t v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  double v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *);
  uint64_t v29;
  char *v30;
  double v31;
  double v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  char *v43;
  double v44;
  double v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char *v51;
  uint64_t v52;
  unint64_t v53;

  v49 = sub_240154310();
  v1 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v46 - v4;
  v52 = v0;
  v6 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 16);
  if (!v6)
  {
LABEL_23:
    __break(1u);
    return;
  }
  if (v6 != 1)
  {
    v7 = 0.0;
    v8 = 1;
    v9 = 0.0;
    v10 = 0.0;
    v47 = v6;
    v48 = v1;
    while (1)
    {
      v11 = *(_QWORD *)(v52 + 16);
      if (v8 >= *(_QWORD *)(v11 + 16))
        break;
      v12 = type metadata accessor for DKMotion3();
      v13 = *(_QWORD *)(v12 - 8);
      v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      v15 = v11 + v14;
      v16 = *(_QWORD *)(v13 + 72);
      v17 = v16 * v8;
      v18 = *(int *)(v12 + 24);
      v19 = *(_QWORD *)(v11 + v14 + v16 * v8 + v18);
      if (!*(_QWORD *)(v19 + 16))
        goto LABEL_16;
      v20 = v16 * (v8 - 1);
      v21 = v15 + v20;
      v22 = *(_QWORD *)(v15 + v20 + v18);
      if (!*(_QWORD *)(v22 + 16))
        goto LABEL_17;
      v23 = v12;
      v50 = v14;
      v24 = *(double *)(v19 + 32);
      v25 = *(double *)(v22 + 32);
      v26 = v5;
      v27 = v1;
      v28 = *(void (**)(char *))(v1 + 16);
      v29 = v49;
      v53 = v8 - 1;
      v28(v26);
      if (v53 >= *(_QWORD *)(v11 + 16))
        goto LABEL_18;
      v30 = v51;
      ((void (*)(char *, uint64_t, uint64_t))v28)(v51, v21, v29);
      sub_24015428C();
      v32 = v31;
      v33 = *(void (**)(char *, uint64_t))(v27 + 8);
      v33(v30, v29);
      v33(v26, v29);
      v34 = *(_QWORD *)(v52 + 16);
      if (v8 >= *(_QWORD *)(v34 + 16))
        goto LABEL_19;
      v35 = v34 + v50;
      v36 = *(int *)(v23 + 24);
      v37 = *(_QWORD *)(v34 + v50 + v17 + v36);
      if (*(_QWORD *)(v37 + 16) < 2uLL)
        goto LABEL_20;
      v38 = v35 + v20;
      v39 = *(_QWORD *)(v35 + v20 + v36);
      if (*(_QWORD *)(v39 + 16) < 2uLL)
        goto LABEL_21;
      v5 = v26;
      v40 = *(double *)(v37 + 40);
      v41 = *(double *)(v39 + 40);
      v28(v26);
      if (v53 >= *(_QWORD *)(v34 + 16))
        goto LABEL_22;
      v7 = v7 + 1.0;
      v42 = (v24 - v25) / v32;
      v43 = v51;
      ((void (*)(char *, uint64_t, uint64_t))v28)(v51, v38, v29);
      sub_24015428C();
      v45 = v44;
      v33(v43, v29);
      v33(v26, v29);
      v10 = v10 + v42;
      v9 = v9 + (v40 - v41) / v45;
      ++v8;
      v1 = v48;
      if (v47 == v8)
        return;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
}

uint64_t DKMotionStatisticsFilter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKMotionStatisticsFilter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKMotionStatisticsFilter()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKMotionStatisticsFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.__allocating_init(duration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.add(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getFirst()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getLast()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getMinMaxYaw()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getMinMaxPitch()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getAverageVelocity()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKMotionStatisticsFilter.getAverageAcceleration()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t sub_24013CC30(unint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v8;
  _QWORD *v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t result;
  uint64_t v12;

  if ((~*(_QWORD *)&a2 & 0x7FF0000000000000) == 0)
    goto LABEL_13;
  v5 = v3;
  sub_240084408(&v12, a1);
  v8 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement;
  v9 = *(_QWORD **)(v3 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v5 + v8) = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((a1 & 0x8000000000000000) == 0)
      goto LABEL_4;
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = sub_24014CD20(v9);
  if ((a1 & 0x8000000000000000) != 0)
    goto LABEL_9;
LABEL_4:
  if (v9[2] <= a1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  *(double *)&v9[a1 + 4] = a2;
  *(_QWORD *)(v5 + v8) = v9;
  v8 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance;
  v9 = *(_QWORD **)(v5 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance);
  result = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v5 + v8) = v9;
  if ((result & 1) == 0)
  {
LABEL_11:
    result = (uint64_t)sub_24014CD20(v9);
    v9 = (_QWORD *)result;
  }
  if (v9[2] > a1)
  {
    *(double *)&v9[a1 + 4] = a3;
    *(_QWORD *)(v5 + v8) = v9;
    return result;
  }
  __break(1u);
LABEL_13:
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t DKKalmanFilter.Measurement.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKKalmanFilter.Configuration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24013CE14()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_24013CE1C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t DKKalmanFilter.init(configuration:stateSize:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_240141688(a1, a2);
  v3 = v2;
  swift_release();
  return v3;
}

uint64_t sub_24013CE54(uint64_t a1, uint64_t a2, double a3)
{
  return sub_240071B8C(a1, a2, a3);
}

uint64_t sub_24013CE7C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(_QWORD *)(v2 + 16) <= result || result < 0 || *(uint64_t *)(v2 + 24) <= 0)
  {
    result = sub_240154D00();
    __break(1u);
  }
  return result;
}

uint64_t sub_24013CF00(uint64_t a1, double a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v3 = *(_QWORD **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (v3[2] <= a1 || a1 < 0 || (uint64_t)v3[3] <= 0)
  {
    result = sub_240154D00();
    __break(1u);
  }
  else
  {
    *(double *)(v3[4] + 8 * a1) = a2;
    return sub_24013E288();
  }
  return result;
}

uint64_t sub_24013CF84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  char v13;
  void (*v14)(char *, uint64_t);
  uint64_t result;
  double v16;
  double v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  double v46;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v52 - v9;
  v11 = (char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime);
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v12((char *)&v52 - v9, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4);
  sub_240154274();
  v13 = sub_2401542EC();
  v14 = *(void (**)(char *, uint64_t))(v5 + 8);
  v14(v8, v4);
  result = ((uint64_t (*)(char *, uint64_t))v14)(v10, v4);
  if ((v13 & 1) == 0)
  {
    v12(v10, (uint64_t)v11, v4);
    v53 = a1;
    sub_24015428C();
    v17 = v16;
    v14(v10, v4);
    v18 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F;
    v19 = *(_QWORD **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
    v20 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
    v21 = *(_QWORD **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
    swift_retain();
    swift_retain();
    v22 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v19, v21);
    swift_release();
    swift_release();
    *(_QWORD *)(v2 + v20) = v22;
    swift_release();
    if (*(_BYTE *)(*(_QWORD *)(v2 + 16) + 32) == 1)
      v18 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J;
    v23 = *(_QWORD **)(v2 + v18);
    v24 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P;
    v25 = *(_QWORD **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P);
    swift_retain();
    swift_retain();
    v26 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v23, v25);
    swift_release();
    swift_release();
    swift_retain();
    v27 = (_QWORD *)DKMatrix<>.transpose()();
    swift_release();
    v28 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v26, v27);
    swift_release();
    swift_release();
    v29 = (_QWORD *)swift_retain();
    v30 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGSd_AEtFZ_0(v29, v17);
    swift_release();
    v31 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(v28, v30);
    swift_release();
    swift_release();
    *(_QWORD *)(v2 + v24) = v31;
    swift_release();
    sub_24013E288();
    sub_24013E44C();
    v32 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_stateSize);
    v33 = v53;
    if ((v32 & 0x8000000000000000) == 0)
    {
      if (!v32)
      {
LABEL_30:
        v14(v11, v4);
        return ((uint64_t (*)(char *, uint64_t, uint64_t))v12)(v11, v33, v4);
      }
      v34 = 0;
      v35 = *(_QWORD **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P);
      v36 = v35[2];
      while (v34 != v32)
      {
        if (v34 == (v36 & ~(v36 >> 63)))
          goto LABEL_40;
        v37 = v35[3];
        if (v37 < 1)
          goto LABEL_40;
        v38 = v35[4];
        if ((~*(_QWORD *)(v38 + 8 * v34) & 0x7FF0000000000000) == 0)
          goto LABEL_40;
        v39 = v34 + 1;
        v40 = *(_QWORD *)(v2 + 16);
        v41 = v35[2];
        v42 = 1;
        v43 = v36;
        while (1)
        {
          v44 = v42 - 1;
          v45 = (v42 - 1) * v43;
          if ((unsigned __int128)((v42 - 1) * (__int128)v43) >> 64 != v45 >> 63)
          {
            __break(1u);
LABEL_33:
            __break(1u);
LABEL_34:
            __break(1u);
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
            goto LABEL_38;
          }
          if (__OFADD__(v45, v34))
            goto LABEL_33;
          v46 = *(double *)(v38 + 8 * (v45 + v34));
          if (*(double *)(v40 + 16) > v46)
            v46 = *(double *)(v40 + 16);
          if (*(double *)(v40 + 24) < v46)
            v46 = *(double *)(v40 + 24);
          if (v34 >= v41 || v44 >= v37)
            goto LABEL_40;
          v47 = v44 * v41;
          if ((unsigned __int128)(v44 * (__int128)v41) >> 64 != (v44 * v41) >> 63)
            goto LABEL_34;
          v48 = __OFADD__(v47, v34);
          v49 = v47 + v34;
          if (v48)
            goto LABEL_35;
          *(double *)(v38 + 8 * v49) = v46;
          if (v32 == v42)
            break;
          v43 = v35[2];
          if (v34 >= v43)
            goto LABEL_40;
          v37 = v35[3];
          if (v42 >= v37)
            goto LABEL_40;
          v50 = v42 * v43;
          if ((unsigned __int128)(v42 * (__int128)v43) >> 64 != (v42 * v43) >> 63)
            goto LABEL_36;
          v48 = __OFADD__(v50, v34);
          v51 = v50 + v34;
          if (v48)
            goto LABEL_37;
          ++v42;
          if ((~*(_QWORD *)(v35[4] + 8 * v51) & 0x7FF0000000000000) == 0)
            goto LABEL_40;
        }
        ++v34;
        if (v39 == v32)
          goto LABEL_30;
      }
LABEL_38:
      __break(1u);
    }
    __break(1u);
LABEL_40:
    result = sub_240154D00();
    __break(1u);
  }
  return result;
}

void sub_24013D400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, double);
  char v14;
  void (*v15)(char *, uint64_t);
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  unint64_t v27;
  unint64_t i;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  int64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD **)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v41 - v9;
  v12 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_updateIndices;
  if (!*(_QWORD *)(*(_QWORD *)(a1
                              + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_updateIndices)
                  + 16))
    return;
  v13 = (void (*)(char *, double))v5[2];
  v42 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime;
  v13((char *)&v41 - v9, v10);
  sub_240154274();
  sub_2400707A8((unint64_t *)&qword_256FBA988, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE958]);
  v14 = sub_240154610();
  v15 = (void (*)(char *, uint64_t))v5[1];
  v15(v7, v4);
  v15(v11, v4);
  if ((v14 & 1) == 0)
  {
    ((void (*)(char *, uint64_t, uint64_t))v13)(v11, a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time, v4);
    (*(void (**)(char *))(*(_QWORD *)v2 + 456))(v11);
    v15(v11, v4);
    sub_24013D9EC(a1);
LABEL_33:
    v39 = a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
    ((void (*)(char *, uint64_t, uint64_t))v13)(v11, a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time, v4);
    v40 = (void (*)(uint64_t, char *, uint64_t))v5[5];
    v40(v42, v11, v4);
    ((void (*)(char *, uint64_t, uint64_t))v13)(v11, v39, v4);
    v40(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v11, v4);
    return;
  }
  v16 = 0;
  v17 = *(_QWORD *)(a1 + v12);
  v18 = v17 + 56;
  v19 = 1 << *(_BYTE *)(v17 + 32);
  v20 = -1;
  if (v19 < 64)
    v20 = ~(-1 << v19);
  v21 = v20 & *(_QWORD *)(v17 + 56);
  v22 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
  v23 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement;
  v24 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P;
  v25 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance;
  v26 = (unint64_t)(v19 + 63) >> 6;
  if (!v21)
    goto LABEL_7;
LABEL_6:
  v27 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  for (i = v27 | (v16 << 6); ; i = __clz(__rbit64(v30)) + (v16 << 6))
  {
    v32 = *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * i);
    if (v32 < 0)
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    v33 = *(_QWORD *)(a1 + v23);
    if ((unint64_t)v32 >= *(_QWORD *)(v33 + 16))
      goto LABEL_36;
    v34 = *(_QWORD **)(v2 + v22);
    if (v32 >= v34[2] || (uint64_t)v34[3] <= 0)
      goto LABEL_42;
    *(_QWORD *)(v34[4] + 8 * v32) = *(_QWORD *)(v33 + 8 * v32 + 32);
    v35 = *(_QWORD *)(a1 + v25);
    if ((unint64_t)v32 >= *(_QWORD *)(v35 + 16))
      goto LABEL_37;
    v36 = *(_QWORD **)(v2 + v24);
    v37 = v36[2];
    if (v32 >= v37 || v32 >= v36[3])
      goto LABEL_42;
    v38 = v32 * v37;
    if ((unsigned __int128)(v32 * (__int128)v37) >> 64 != (v32 * v37) >> 63)
      goto LABEL_38;
    if (__OFADD__(v38, v32))
      goto LABEL_39;
    *(_QWORD *)(v36[4] + 8 * (v38 + v32)) = *(_QWORD *)(v35 + 8 * v32 + 32);
    if (v21)
      goto LABEL_6;
LABEL_7:
    v29 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_40;
    if (v29 >= v26)
      goto LABEL_33;
    v30 = *(_QWORD *)(v18 + 8 * v29);
    ++v16;
    if (!v30)
    {
      v16 = v29 + 1;
      if (v29 + 1 >= v26)
        goto LABEL_33;
      v30 = *(_QWORD *)(v18 + 8 * v16);
      if (!v30)
      {
        v16 = v29 + 2;
        if (v29 + 2 >= v26)
          goto LABEL_33;
        v30 = *(_QWORD *)(v18 + 8 * v16);
        if (!v30)
          break;
      }
    }
LABEL_20:
    v21 = (v30 - 1) & v30;
  }
  v31 = v29 + 3;
  if (v31 >= v26)
    goto LABEL_33;
  v30 = *(_QWORD *)(v18 + 8 * v31);
  if (v30)
  {
    v16 = v31;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v16 >= v26)
      goto LABEL_33;
    v30 = *(_QWORD *)(v18 + 8 * v16);
    ++v31;
    if (v30)
      goto LABEL_20;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  sub_240154D00();
  __break(1u);
}

uint64_t DKKalmanFilter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

BOOL sub_24013D898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  char v10;
  void (*v11)(char *, uint64_t);
  uint64_t v13;

  v1 = sub_240154310();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900];
  v3 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v13 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))((char *)&v13 - v8, v0 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v1, v7);
  sub_240154274();
  sub_2400707A8((unint64_t *)&qword_256FBA988, v2, MEMORY[0x24BDCE958]);
  v10 = sub_240154610();
  v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v1);
  v11(v9, v1);
  return (v10 & 1) == 0;
}

uint64_t sub_24013D99C(uint64_t a1, uint64_t a2, double a3)
{
  return sub_240071B8C(a1, a2, a3);
}

uint64_t sub_24013D9C4(uint64_t a1, uint64_t a2, double a3)
{
  return sub_240071B8C(a1, a2, a3);
}

uint64_t sub_24013D9EC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *inited;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  double v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  double v29;
  int v30;
  double v31;
  int v32;
  _QWORD *v33;
  uint64_t v34;
  double v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  double i;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  _QWORD *v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96[33];

  v96[31] = *MEMORY[0x24BDAC8D0];
  v1 = swift_bridgeObjectRetain();
  v2 = sub_24013FBB4(v1);
  swift_bridgeObjectRelease();
  v96[0] = (uint64_t)v2;
  swift_retain();
  sub_24013FB4C(v96);
  swift_release();
  v3 = v96[0];
  v4 = *(_QWORD *)(v96[0] + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  inited = (_QWORD *)swift_initStackObject();
  inited[2] = v4;
  inited[3] = 1;
  if (v4 >> 60)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  v6 = inited;
  inited[4] = swift_slowAlloc();
  v6[5] = v4;
  v85 = (uint64_t)v6;
  sub_24013E8A4(0.0);
  v7 = (_QWORD *)swift_initStackObject();
  v7[2] = v4;
  v7[3] = 1;
  v7[4] = swift_slowAlloc();
  v7[5] = v4;
  v91 = v7;
  sub_24013E8A4(0.0);
  v8 = (_QWORD *)swift_initStackObject();
  v8[2] = v4;
  v8[3] = v4;
  v92 = v8;
  v9 = v4 * v4;
  if ((unsigned __int128)((uint64_t)v4 * (__int128)(uint64_t)v4) >> 64 != (uint64_t)(v4 * v4) >> 63)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  if ((unint64_t)(v9 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  v8[4] = swift_slowAlloc();
  v92[5] = v9;
  sub_24013E8A4(0.0);
  v10 = *(_QWORD *)(v93 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_stateSize);
  v11 = swift_initStackObject();
  *(_QWORD *)(v11 + 16) = v4;
  *(_QWORD *)(v11 + 24) = v10;
  v12 = v4 * v10;
  v88 = v10;
  if ((unsigned __int128)((uint64_t)v4 * (__int128)v10) >> 64 != (uint64_t)(v4 * v10) >> 63)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  if ((unint64_t)(v12 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
  }
  v13 = (_QWORD *)v11;
  v90 = swift_slowAlloc();
  v13[4] = v90;
  v13[5] = v12;
  v83 = v13;
  sub_24013E8A4(0.0);
  v84 = v3;
  v14 = v85;
  v94 = *(_QWORD *)(v3 + 16);
  if (v94)
  {
    v15 = 0;
    v86 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
    v16 = OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance;
    v17 = v3 + 32;
    v18 = *(_QWORD *)(a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement);
    v19 = v18 + 32;
    v20 = *(_QWORD *)(v93 + 16);
    v21 = *(_QWORD *)(v18 + 16);
    v22 = *(_QWORD *)(v20 + 40);
    v23 = *(_QWORD *)(v22 + 16);
    do
    {
      v24 = *(_QWORD *)(v17 + 8 * v15);
      if (v24 >= v21)
        goto LABEL_66;
      v25 = *(double *)(v19 + 8 * v24);
      if (v23)
      {
        v26 = sub_24013EF5C(*(_QWORD *)(v17 + 8 * v15));
        if ((v27 & 1) != 0)
        {
          v28 = *(_QWORD *)(v22 + 56) + 32 * v26;
          v29 = *(double *)v28;
          v30 = *(unsigned __int8 *)(v28 + 8);
          v31 = *(double *)(v28 + 16);
          v32 = *(unsigned __int8 *)(v28 + 24);
          if (v30)
            v29 = -1.79769313e308;
          if (v32)
            v31 = 1.79769313e308;
          if (v29 <= v25)
            v29 = v25;
          if (v31 >= v29)
            v25 = v29;
          else
            v25 = v31;
        }
        v14 = v85;
      }
      if (v4 == v15)
        goto LABEL_79;
      *(double *)(v91[4] + 8 * v15) = v25;
      v33 = *(_QWORD **)(v93 + v86);
      if ((int64_t)v24 >= v33[2] || (uint64_t)v33[3] <= 0)
        goto LABEL_79;
      *(_QWORD *)(*(_QWORD *)(v14 + 32) + 8 * v15) = *(_QWORD *)(v33[4] + 8 * v24);
      v34 = *(_QWORD *)(a1 + v16);
      if (v24 >= *(_QWORD *)(v34 + 16))
        goto LABEL_67;
      v35 = *(double *)(v34 + 8 * v24 + 32);
      if (*(double *)(v20 + 16) > v35)
        v35 = *(double *)(v20 + 16);
      if (*(double *)(v20 + 24) < v35)
        v35 = *(double *)(v20 + 24);
      v36 = v15 * v4;
      if ((unsigned __int128)(v15 * (__int128)(uint64_t)v4) >> 64 != (uint64_t)(v15 * v4) >> 63)
        goto LABEL_68;
      v37 = __OFADD__(v36, v15);
      v38 = v36 + v15;
      if (v37)
        goto LABEL_69;
      *(double *)(v92[4] + 8 * v38) = v35;
      if ((uint64_t)v24 >= v88)
        goto LABEL_79;
      v39 = v24 * v4;
      if ((unsigned __int128)((uint64_t)v24 * (__int128)(uint64_t)v4) >> 64 != (uint64_t)(v24 * v4) >> 63)
        goto LABEL_70;
      v37 = __OFADD__(v39, v15);
      v40 = v39 + v15;
      if (v37)
        goto LABEL_71;
      ++v15;
      *(_QWORD *)(v90 + 8 * v40) = 0x3FF0000000000000;
    }
    while (v94 != v15);
  }
  v41 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P;
  v42 = *(_QWORD **)(v93 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P);
  swift_retain();
  v43 = (_QWORD *)DKMatrix<>.transpose()();
  v44 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v42, v43);
  swift_release();
  swift_release();
  v45 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v83, v44);
  v46 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(v45, (uint64_t)v92);
  swift_release();
  swift_initStackObject();
  v47 = (_QWORD *)swift_retain();
  v48 = (_QWORD *)sub_240141A08(v47);
  swift_release();
  if (!v48[4])
  {
    while (1)
    {
LABEL_79:
      sub_240154D00();
      __break(1u);
      swift_release();
      __break(1u);
    }
  }
  v49 = *(_QWORD *)(v46 + 16);
  if (v49 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_77;
  if (v49 > 0x7FFFFFFF)
    goto LABEL_78;
  LODWORD(v96[0]) = *(_QWORD *)(v46 + 16);
  sub_240074208((uint64_t)v96, v46);
  swift_release();
  v87 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v44, v48);
  v50 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1soiyACySdGAE_AEtFZ_0(v91, v85);
  if (v94)
  {
    v82 = v41;
    v51 = 0;
    v52 = *(_QWORD *)(v84 + 16);
    v53 = *(_QWORD *)(*(_QWORD *)(v93 + 16) + 48);
    v54 = *(_QWORD *)(v53 + 16);
    v55 = v53 + 56;
    while (v51 != v52)
    {
      if (v54)
      {
        v56 = *(_QWORD *)(v84 + 32 + 8 * v51);
        v57 = sub_240154FDC();
        v58 = -1 << *(_BYTE *)(v53 + 32);
        v59 = v57 & ~v58;
        if (((*(_QWORD *)(v55 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) != 0)
        {
          v60 = *(_QWORD *)(v53 + 48);
          if (*(_QWORD *)(v60 + 8 * v59) == v56)
          {
LABEL_48:
            if (v51 >= v50[2] || (uint64_t)v50[3] <= 0)
              goto LABEL_79;
            v62 = v50[4];
            for (i = *(double *)(v62 + 8 * v51); i > 3.14159265; i = i + -6.28318531)
              ;
            while (i < -3.14159265)
              i = i + 6.28318531;
            *(double *)(v62 + 8 * v51) = i;
          }
          else
          {
            v61 = ~v58;
            while (1)
            {
              v59 = (v59 + 1) & v61;
              if (((*(_QWORD *)(v55 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
                break;
              if (*(_QWORD *)(v60 + 8 * v59) == v56)
                goto LABEL_48;
            }
          }
        }
      }
      if (++v51 == v94)
      {
        v64 = v83;
        swift_release();
        v41 = v82;
        goto LABEL_58;
      }
    }
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  v64 = v83;
  swift_release();
LABEL_58:
  v65 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
  v66 = *(_QWORD **)(v93 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  swift_retain();
  v67 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v87, v50);
  v68 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(v66, v67);
  swift_release();
  swift_release();
  *(_QWORD *)(v93 + v65) = v68;
  swift_release();
  sub_24013E44C();
  v69 = *(_QWORD **)(v93 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_I);
  swift_retain();
  v70 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v87, v64);
  v95 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1soiyACySdGAE_AEtFZ_0(v69, v70);
  swift_release();
  swift_release();
  v71 = *(_QWORD **)(v93 + v41);
  swift_retain();
  v72 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v95, v71);
  swift_release();
  v73 = (_QWORD *)DKMatrix<>.transpose()();
  v74 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v72, v73);
  swift_release();
  swift_release();
  v75 = (_QWORD *)_s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v87, v92);
  v76 = (_QWORD *)DKMatrix<>.transpose()();
  v77 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(v75, v76);
  swift_release();
  swift_release();
  v78 = _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(v74, v77);
  swift_release();
  swift_release();
  *(_QWORD *)(v93 + v41) = v78;
  swift_release();
  sub_24013E288();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_setDeallocating();
  MEMORY[0x24267E17C](v90, -1, -1);
  swift_setDeallocating();
  v79 = v92[4];
  if (v79)
    MEMORY[0x24267E17C](v79, -1, -1);
  swift_setDeallocating();
  v80 = v91[4];
  if (v80)
    MEMORY[0x24267E17C](v80, -1, -1);
  swift_setDeallocating();
  result = *(_QWORD *)(v85 + 32);
  if (result)
    return MEMORY[0x24267E17C](result, -1, -1);
  return result;
}

uint64_t sub_24013E288()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double j;
  uint64_t result;

  v1 = 0;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  v3 = 1 << *(_BYTE *)(v2 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v5 = v2 + 56;
  v6 = v4 & *(_QWORD *)(v2 + 56);
  v7 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
  v8 = (unint64_t)(v3 + 63) >> 6;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v1 << 6); ; i = __clz(__rbit64(v12)) + (v1 << 6))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v15 = *(_QWORD **)(v0 + v7);
    if (v14 >= v15[2] || v14 < 0 || (uint64_t)v15[3] <= 0)
      break;
    v16 = v15[4];
    for (j = *(double *)(v16 + 8 * v14); j > 3.14159265; j = j + -6.28318531)
      ;
    while (j < -3.14159265)
      j = j + 6.28318531;
    *(double *)(v16 + 8 * v14) = j;
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
      break;
    }
    if (v11 >= v8)
      return result;
    v12 = *(_QWORD *)(v5 + 8 * v11);
    ++v1;
    if (!v12)
    {
      v1 = v11 + 1;
      if (v11 + 1 >= v8)
        return result;
      v12 = *(_QWORD *)(v5 + 8 * v1);
      if (!v12)
      {
        v1 = v11 + 2;
        if (v11 + 2 >= v8)
          return result;
        v12 = *(_QWORD *)(v5 + 8 * v1);
        if (!v12)
        {
          v13 = v11 + 3;
          if (v13 >= v8)
            return result;
          v12 = *(_QWORD *)(v5 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              v1 = v13 + 1;
              if (__OFADD__(v13, 1))
                goto LABEL_31;
              if (v1 >= v8)
                return result;
              v12 = *(_QWORD *)(v5 + 8 * v1);
              ++v13;
              if (v12)
                goto LABEL_18;
            }
          }
          v1 = v13;
        }
      }
    }
LABEL_18:
    v6 = (v12 - 1) & v12;
  }
  result = sub_240154D00();
  __break(1u);
  return result;
}

void sub_24013E44C()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  double v17;
  int v18;
  double v19;
  int v20;
  uint64_t v21;
  uint64_t v22;

  v1 = 0;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40);
  v3 = v2 + 64;
  v4 = 1 << *(_BYTE *)(v2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(v2 + 64);
  v7 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x;
  v8 = (unint64_t)(v4 + 63) >> 6;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (i = v9 | (v1 << 6); ; i = __clz(__rbit64(v12)) + (v1 << 6))
  {
    v14 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * i);
    v15 = *(_QWORD **)(v0 + v7);
    if (v14 >= v15[2] || v14 < 0 || (uint64_t)v15[3] <= 0)
      break;
    v16 = *(_QWORD *)(v2 + 56) + 32 * i;
    v17 = *(double *)v16;
    v18 = *(unsigned __int8 *)(v16 + 8);
    v19 = *(double *)(v16 + 16);
    v20 = *(unsigned __int8 *)(v16 + 24);
    v21 = v15[4];
    v22 = 8 * v14;
    if (v18)
      v17 = -1.79769313e308;
    if (v20)
      v19 = 1.79769313e308;
    if (v17 <= *(double *)(v21 + v22))
      v17 = *(double *)(v21 + v22);
    if (v19 < v17)
      v17 = v19;
    *(double *)(v21 + v22) = v17;
    if (v6)
      goto LABEL_4;
LABEL_5:
    v11 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      break;
    }
    if (v11 >= v8)
      return;
    v12 = *(_QWORD *)(v3 + 8 * v11);
    ++v1;
    if (!v12)
    {
      v1 = v11 + 1;
      if (v11 + 1 >= v8)
        return;
      v12 = *(_QWORD *)(v3 + 8 * v1);
      if (!v12)
      {
        v1 = v11 + 2;
        if (v11 + 2 >= v8)
          return;
        v12 = *(_QWORD *)(v3 + 8 * v1);
        if (!v12)
        {
          v13 = v11 + 3;
          if (v13 >= v8)
            return;
          v12 = *(_QWORD *)(v3 + 8 * v13);
          if (!v12)
          {
            while (1)
            {
              v1 = v13 + 1;
              if (__OFADD__(v13, 1))
                goto LABEL_34;
              if (v1 >= v8)
                return;
              v12 = *(_QWORD *)(v3 + 8 * v1);
              ++v13;
              if (v12)
                goto LABEL_18;
            }
          }
          v1 = v13;
        }
      }
    }
LABEL_18:
    v6 = (v12 - 1) & v12;
  }
  sub_240154D00();
  __break(1u);
}

double sub_24013E620(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  double v8;
  int v9;
  double v10;
  int v11;
  double v12;
  double v13;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 16) + 40);
  if (*(_QWORD *)(v4 + 16))
  {
    v5 = sub_24013EF5C(a1);
    if ((v6 & 1) != 0)
    {
      v7 = *(_QWORD *)(v4 + 56) + 32 * v5;
      v8 = *(double *)v7;
      v9 = *(unsigned __int8 *)(v7 + 8);
      v10 = *(double *)(v7 + 16);
      v11 = *(unsigned __int8 *)(v7 + 24);
      v12 = -1.79769313e308;
      if (!v9)
        v12 = v8;
      v13 = 1.79769313e308;
      if (!v11)
        v13 = v10;
      if (v12 > a2)
        a2 = v12;
      if (v13 < a2)
        return v13;
    }
  }
  return a2;
}

void sub_24013E6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __asm { BR              X11 }
}

uint64_t sub_24013E6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = BYTE6(a7);
  if (!BYTE6(a7))
    return 0;
  if ((a5 & 1) != 0)
    goto LABEL_11;
  if (v8 != a4)
  {
    if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
    {
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    v9 = a4 - v8;
    if (__OFSUB__(a4, v8))
    {
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v7 = 8 * a2;
    if (v9 >= 8 * a2)
      v9 = 8 * a2;
    v10 = v8 + v9;
    if (__OFADD__(v8, v9))
      goto LABEL_32;
    if (v10 >= v8)
      goto LABEL_21;
    __break(1u);
LABEL_11:
    if (v7)
    {
      if (v7 == 1)
        v8 = (int)a6;
      else
        v8 = *(_QWORD *)(a6 + 16);
    }
    else
    {
      v8 = 0;
    }
    if ((unint64_t)(a2 - 0x1000000000000000) >> 61 == 7)
    {
      if (v9 >= 8 * a2)
        v9 = 8 * a2;
      v10 = v8 + v9;
      if (!__OFADD__(v8, v9))
      {
        if (v10 >= v8)
        {
LABEL_21:
          if (v8 == v10)
            return 0;
          if (!a1)
          {
LABEL_33:
            __break(1u);
            JUMPOUT(0x24013E80CLL);
          }
          sub_24015422C();
          v11 = v10 - v8;
          if (!__OFSUB__(v10, v8))
            return v11;
          goto LABEL_29;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  return 0;
}

uint64_t sub_24013E81C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  int64_t v6;
  _BOOL4 v7;

  if (!result)
    return result;
  v3 = a3 * a3;
  if ((unsigned __int128)(a3 * (__int128)a3) >> 64 != (a3 * a3) >> 63)
  {
    __break(1u);
    goto LABEL_17;
  }
  v4 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a3 == -1)
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v5 = v3 >= 0;
  if (v4 > 0)
    v5 = v3 < 1;
  if (!v5)
  {
    v6 = 0;
    do
    {
      *(_QWORD *)(result + 8 * v6) = 0x3FF0000000000000;
      if (__OFADD__(v6, v4))
        v6 = ((v6 + v4) >> 63) ^ 0x8000000000000000;
      else
        v6 += v4;
      v7 = v3 >= v6;
      if (v4 > 0)
        v7 = v6 >= v3;
    }
    while (!v7);
  }
  return result;
}

void sub_24013E8A4(double a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  v2 = v1[2];
  v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v3 < 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v4 = v1[3];
  if (__OFSUB__(v4, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (((v4 - 1) & 0x8000000000000000) == 0)
  {
    v5 = 0;
    v6 = v1[4];
    while (1)
    {
      *(double *)(v6 + 8 * v5) = a1;
      if (v4 != 1)
        break;
LABEL_11:
      if (v5 == v3)
        return;
      v9 = __OFADD__(v5++, 1);
      if (v9)
      {
        __break(1u);
        return;
      }
    }
    v7 = 1;
    while (1)
    {
      v8 = v7 * v2;
      if ((unsigned __int128)(v7 * (__int128)v2) >> 64 != (v7 * v2) >> 63)
        break;
      v9 = __OFADD__(v8, v5);
      v10 = v8 + v5;
      if (v9)
        goto LABEL_17;
      *(double *)(v6 + 8 * v10) = a1;
      if (v4 == ++v7)
        goto LABEL_11;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
}

BOOL sub_24013E930(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  v4 = sub_240154FDC();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_24013E9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_240154FE8();
  sub_240154FF4();
  v4 = sub_240155018();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_24013EAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v3 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_240154FE8();
  sub_240154310();
  sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  sub_2401545C8();
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  v7 = sub_240155018();
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
    return 0;
  v10 = ~v8;
  v11 = *(_QWORD *)(v4 + 72);
  while (1)
  {
    sub_240080084(*(_QWORD *)(a2 + 48) + v11 * v9, (uint64_t)v6, type metadata accessor for DKPersonGroupFilter.StampedPerson);
    if ((sub_2401542EC() & 1) != 0 && (sub_240154328() & 1) != 0)
      break;
    sub_240086BE8((uint64_t)v6);
    v9 = (v9 + 1) & v10;
    if (((*(_QWORD *)(a2 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
      return 0;
  }
  sub_240086BE8((uint64_t)v6);
  return 1;
}

uint64_t sub_24013ECAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_24015434C();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
        v6 = sub_2401545BC(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v12 = sub_240154610();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t DKKalmanFilter.Measurement.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKKalmanFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKKalmanFilter.__allocating_init(configuration:stateSize:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_allocObject();
  sub_240141688(a1, a2);
  v5 = v4;
  swift_release();
  return v5;
}

uint64_t DKKalmanFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  return swift_deallocClassInstance();
}

unint64_t sub_24013EF5C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240154FDC();
  return sub_24013F2BC(a1, v2);
}

unint64_t sub_24013EF8C(uint64_t a1)
{
  uint64_t v2;

  sub_240154FE8();
  type metadata accessor for CFString(0);
  sub_2400707A8(&qword_256FC1A50, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_240156230);
  sub_2401543AC();
  v2 = sub_240155018();
  return sub_24013F358(a1, v2);
}

unint64_t sub_24013F014(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_240154FE8();
  sub_2401546B8();
  v4 = sub_240155018();
  return sub_24013F498(a1, a2, v4);
}

unint64_t sub_24013F078(char a1)
{
  char v1;
  uint64_t v2;

  v1 = a1 & 1;
  sub_240154FE8();
  sub_240154FF4();
  v2 = sub_240155018();
  return sub_24013F578(v1, v2);
}

unint64_t sub_24013F0E4(unsigned __int8 a1)
{
  uint64_t v2;

  sub_240154FE8();
  sub_240154FF4();
  v2 = sub_240155018();
  return sub_24013F938(a1, v2);
}

unint64_t sub_24013F148(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240154AE4();
  return sub_24013F634(a1, v2);
}

unint64_t sub_24013F178(uint64_t a1)
{
  uint64_t v2;

  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_2401545BC();
  return sub_24013F6F8(a1, v2);
}

unint64_t sub_24013F1E4(uint64_t a1)
{
  uint64_t v2;
  __int128 v4[4];

  sub_240154FE8();
  sub_2400B086C(v4, a1);
  v2 = sub_240155018();
  return sub_24013F838(a1, v2);
}

unint64_t sub_24013F23C(uint64_t a1)
{
  uint64_t v2;

  sub_24015464C();
  sub_240154FE8();
  sub_2401546B8();
  v2 = sub_240155018();
  swift_bridgeObjectRelease();
  return sub_24013F9D8(a1, v2);
}

unint64_t sub_24013F2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_24013F358(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  void *v6;
  id v7;
  char v8;
  uint64_t v9;
  id v10;
  char v11;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    type metadata accessor for CFString(0);
    v6 = *(void **)(*(_QWORD *)(v2 + 48) + 8 * i);
    sub_2400707A8(&qword_256FC1A50, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_240156230);
    v7 = v6;
    v8 = sub_2401543A0();

    if ((v8 & 1) == 0)
    {
      v9 = ~v4;
      for (i = (i + 1) & v9; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v9)
      {
        v10 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * i);
        v11 = sub_2401543A0();

        if ((v11 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_24013F498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_240154EF8() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_240154EF8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_24013F578(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (((((a1 & 1) == 0) ^ *(unsigned __int8 *)(v7 + result)) & 1) == 0)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (((((a1 & 1) == 0) ^ *(_BYTE *)(v7 + result)) & 1) != 0)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_24013F634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v6;
  char v7;
  _BYTE v9[40];

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v6 = ~v3;
    do
    {
      sub_240141E8C(*(_QWORD *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      v7 = MEMORY[0x24267D438](v9, a1);
      sub_240141EC8((uint64_t)v9);
      if ((v7 & 1) != 0)
        break;
      v4 = (v4 + 1) & v6;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_24013F6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, unint64_t, uint64_t, __n128);
  char v15;
  _QWORD v17[2];

  v3 = v2;
  v17[1] = a1;
  v5 = sub_24015434C();
  v6 = *(_QWORD *)(v5 - 8);
  v7.n128_f64[0] = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = -1 << *(_BYTE *)(v3 + 32);
  v11 = a2 & ~v10;
  if (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
  {
    v12 = ~v10;
    v13 = *(_QWORD *)(v6 + 72);
    v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v6 + 16);
    do
    {
      v14(v9, *(_QWORD *)(v3 + 48) + v13 * v11, v5, v7);
      sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v15 = sub_240154610();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      if ((v15 & 1) != 0)
        break;
      v11 = (v11 + 1) & v12;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_24013F838(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t i;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  i = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    sub_2400FA944(v7, a1);
    v9 = v8;
    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0)
    {
      v10 = ~v4;
      for (i = (i + 1) & v10; ((*(_QWORD *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v10)
      {
        v11 = swift_bridgeObjectRetain();
        sub_2400FA944(v11, a1);
        v13 = v12;
        swift_bridgeObjectRelease();
        if ((v13 & 1) != 0)
          break;
      }
    }
  }
  return i;
}

unint64_t sub_24013F938(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1)
          break;
      }
    }
  }
  return result;
}

unint64_t sub_24013F9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;

  v3 = v2 + 64;
  v4 = -1 << *(_BYTE *)(v2 + 32);
  v5 = a2 & ~v4;
  if (((*(_QWORD *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
  {
    v6 = sub_24015464C();
    v8 = v7;
    if (v6 == sub_24015464C() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    v11 = sub_240154EF8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      v12 = ~v4;
      v5 = (v5 + 1) & v12;
      if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      {
        while (1)
        {
          v13 = sub_24015464C();
          v15 = v14;
          if (v13 == sub_24015464C() && v15 == v16)
            break;
          v18 = sub_240154EF8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            v5 = (v5 + 1) & v12;
            if (((*(_QWORD *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
              continue;
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t sub_24013FB4C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_2401356F4(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_240140184(v5);
  *a1 = v2;
  return result;
}

_QWORD *sub_24013FBB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EF0);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 25;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  v6 = sub_240141020(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24008FD1C();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

size_t sub_24013FC9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  size_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1A58);
  v3 = *(_QWORD *)(type metadata accessor for DKPersonGroup(0) - 8);
  v4 = *(_QWORD *)(v3 + 72);
  v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v6 = (_QWORD *)swift_allocObject();
  result = _swift_stdlib_malloc_size(v6);
  if (v4)
  {
    if (result - v5 != 0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)(result - v5) / v4);
      sub_2401411B4(&v11, (uint64_t)v6 + v5, v1, a1);
      v10 = v9;
      swift_bridgeObjectRetain();
      sub_24008FD1C();
      if (v10 == v1)
        return (size_t)v6;
      __break(1u);
      return MEMORY[0x24BEE4AF8];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

_QWORD *sub_24013FDB4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  int64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E38);
  v3 = (_QWORD *)swift_allocObject();
  v4 = _swift_stdlib_malloc_size(v3);
  v5 = v4 - 32;
  if (v4 < 32)
    v5 = v4 - 1;
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  v6 = sub_240141460(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24008FD1C();
  if (v6 != (_QWORD *)v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

_QWORD *sub_24013FE98(unint64_t a1)
{
  return sub_24013FEE0(a1, (void (*)(_QWORD))type metadata accessor for DKPersonTracker, &qword_256FC1A40, &qword_256FC1A38, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_240095AEC);
}

_QWORD *sub_24013FEBC(unint64_t a1)
{
  return sub_24013FEE0(a1, (void (*)(_QWORD))type metadata accessor for DKPersonTrackerState, &qword_256FC1A48, &qword_256FB4E68, (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))sub_240095A94);
}

_QWORD *sub_24013FEE0(unint64_t a1, void (*a2)(_QWORD), unint64_t *a3, uint64_t *a4, uint64_t (*a5)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t);

  if (a1 >> 62)
    goto LABEL_10;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  while (1)
  {
    if (v10 <= 0)
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB9BC0);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v13 = v12 - 32;
      if (v12 < 32)
        v13 = v12 - 25;
      v11[2] = v10;
      v11[3] = (2 * (v13 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_240140E18((unint64_t)(v11 + 4), v10, a1, a2, a3, a4, a5);
    a5 = v14;
    swift_bridgeObjectRelease();
    if (a5 == (uint64_t (*)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))v10)
      break;
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    v10 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (!v10)
      return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v11;
}

uint64_t sub_240140004(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4;
  uint64_t v5;
  char *v8;
  size_t v9;
  char *v10;
  char *v11;
  uint64_t result;

  v4 = a4 >> 1;
  v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5)
      return MEMORY[0x24BEE4AF8];
    if (v5 <= 0)
    {
      v8 = (char *)MEMORY[0x24BEE4AF8];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0)
          goto LABEL_17;
        v10 = v8 + 32;
        v11 = (char *)(a2 + 24 * a3);
        if (v11 < &v8[24 * v5 + 32] && v10 < &v11[24 * v5])
          goto LABEL_17;
        memcpy(v10, v11, 24 * v5);
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E70);
      v8 = (char *)swift_allocObject();
      v9 = _swift_stdlib_malloc_size(v8);
      *((_QWORD *)v8 + 2) = v5;
      *((_QWORD *)v8 + 3) = 2 * ((uint64_t)(v9 - 32) / 24);
      if (v4 != a3)
        goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_240140184(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  BOOL v42;
  unint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  char v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  unint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t i;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_240154EB0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v78 = 0;
      v79 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v81 = *(_QWORD *)(v79 + 8 * i);
        v82 = v78;
        do
        {
          v83 = *(_QWORD *)(v79 + v82);
          if (v81 >= v83)
            break;
          if (!v79)
            goto LABEL_141;
          *(_QWORD *)(v79 + v82 + 8) = v83;
          *(_QWORD *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v95 = result;
  v96 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v94 = v8;
      if (v12 >= 2)
      {
        v84 = *v2;
        do
        {
          v85 = v12 - 2;
          if (v12 < 2)
            goto LABEL_132;
          if (!v84)
            goto LABEL_145;
          v86 = v11;
          v87 = v11 + 32;
          v88 = *(_QWORD *)&v11[16 * v85 + 32];
          v89 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_24014080C((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(_QWORD *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1)
            break;
          if (v89 < v88)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v86 = sub_2401356E0((uint64_t)v86);
          if (v85 >= *((_QWORD *)v86 + 2))
            goto LABEL_134;
          v90 = &v86[16 * v85 + 32];
          *(_QWORD *)v90 = v88;
          *((_QWORD *)v90 + 1) = v89;
          v91 = *((_QWORD *)v86 + 2);
          if (v12 > v91)
            goto LABEL_135;
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          v11 = v86;
          *((_QWORD *)v86 + 2) = v91 - 1;
          v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v94 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_2401547FC();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v96;
    v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v92 = v2;
  v93 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v97 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(_QWORD *)(v10 + 8 * v9);
      v15 = *(_QWORD *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = *(_QWORD *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16)
            break;
          ++v9;
          v16 = v17;
          if (v3 == v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_138;
        if (v13 < v9)
        {
          v18 = v9 - 1;
          v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10)
                goto LABEL_144;
              v20 = *(_QWORD *)(v10 + 8 * v19);
              *(_QWORD *)(v10 + 8 * v19) = *(_QWORD *)(v10 + 8 * v18);
              *(_QWORD *)(v10 + 8 * v18) = v20;
            }
            v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_47;
    if (__OFSUB__(v9, v13))
      goto LABEL_136;
    if (v9 - v13 >= v95)
      goto LABEL_47;
    v21 = v13 + v95;
    if (__OFADD__(v13, v95))
      goto LABEL_139;
    if (v21 >= v3)
      v21 = v3;
    if (v21 < v13)
      break;
    if (v9 != v21)
    {
      v22 = (uint64_t *)(v93 + 8 * v9);
      do
      {
        v23 = *(_QWORD *)(v10 + 8 * v9);
        v24 = v13;
        v25 = v22;
        do
        {
          v26 = *v25;
          if (v23 >= *v25)
            break;
          if (!v10)
            goto LABEL_142;
          *v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      v9 = v21;
    }
LABEL_47:
    if (v9 < v13)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_240135220(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v28 = *((_QWORD *)v11 + 2);
    v27 = *((_QWORD *)v11 + 3);
    v12 = v28 + 1;
    v10 = v97;
    if (v28 >= v27 >> 1)
    {
      v77 = sub_240135220((char *)(v27 > 1), v28 + 1, 1, v11);
      v10 = v97;
      v11 = v77;
    }
    *((_QWORD *)v11 + 2) = v12;
    v29 = v11 + 32;
    v30 = &v11[16 * v28 + 32];
    *(_QWORD *)v30 = v13;
    *((_QWORD *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        v31 = v12 - 1;
        if (v12 >= 4)
        {
          v36 = &v29[16 * v12];
          v37 = *((_QWORD *)v36 - 8);
          v38 = *((_QWORD *)v36 - 7);
          v42 = __OFSUB__(v38, v37);
          v39 = v38 - v37;
          if (v42)
            goto LABEL_120;
          v41 = *((_QWORD *)v36 - 6);
          v40 = *((_QWORD *)v36 - 5);
          v42 = __OFSUB__(v40, v41);
          v34 = v40 - v41;
          v35 = v42;
          if (v42)
            goto LABEL_121;
          v43 = v12 - 2;
          v44 = &v29[16 * v12 - 32];
          v46 = *(_QWORD *)v44;
          v45 = *((_QWORD *)v44 + 1);
          v42 = __OFSUB__(v45, v46);
          v47 = v45 - v46;
          if (v42)
            goto LABEL_123;
          v42 = __OFADD__(v34, v47);
          v48 = v34 + v47;
          if (v42)
            goto LABEL_126;
          if (v48 >= v39)
          {
            v66 = &v29[16 * v31];
            v68 = *(_QWORD *)v66;
            v67 = *((_QWORD *)v66 + 1);
            v42 = __OFSUB__(v67, v68);
            v69 = v67 - v68;
            if (v42)
              goto LABEL_130;
            v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v60 = *((_QWORD *)v11 + 4);
            v61 = *((_QWORD *)v11 + 5);
            v42 = __OFSUB__(v61, v60);
            v53 = v61 - v60;
            v54 = v42;
            goto LABEL_78;
          }
          v33 = *((_QWORD *)v11 + 4);
          v32 = *((_QWORD *)v11 + 5);
          v42 = __OFSUB__(v32, v33);
          v34 = v32 - v33;
          v35 = v42;
        }
        if ((v35 & 1) != 0)
          goto LABEL_122;
        v43 = v12 - 2;
        v49 = &v29[16 * v12 - 32];
        v51 = *(_QWORD *)v49;
        v50 = *((_QWORD *)v49 + 1);
        v52 = __OFSUB__(v50, v51);
        v53 = v50 - v51;
        v54 = v52;
        if (v52)
          goto LABEL_125;
        v55 = &v29[16 * v31];
        v57 = *(_QWORD *)v55;
        v56 = *((_QWORD *)v55 + 1);
        v42 = __OFSUB__(v56, v57);
        v58 = v56 - v57;
        if (v42)
          goto LABEL_128;
        if (__OFADD__(v53, v58))
          goto LABEL_129;
        if (v53 + v58 >= v34)
        {
          v59 = v34 < v58;
LABEL_84:
          if (v59)
            v31 = v43;
          goto LABEL_86;
        }
LABEL_78:
        if ((v54 & 1) != 0)
          goto LABEL_124;
        v62 = &v29[16 * v31];
        v64 = *(_QWORD *)v62;
        v63 = *((_QWORD *)v62 + 1);
        v42 = __OFSUB__(v63, v64);
        v65 = v63 - v64;
        if (v42)
          goto LABEL_127;
        if (v65 < v53)
          goto LABEL_15;
LABEL_86:
        v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10)
          goto LABEL_143;
        v71 = &v29[16 * v70];
        v72 = *(_QWORD *)v71;
        v73 = v29;
        v74 = &v29[16 * v31];
        v75 = *((_QWORD *)v74 + 1);
        sub_24014080C((char *)(v10 + 8 * *(_QWORD *)v71), (char *)(v10 + 8 * *(_QWORD *)v74), v10 + 8 * v75, __dst);
        if (v1)
          goto LABEL_114;
        if (v75 < v72)
          goto LABEL_117;
        if (v31 > *((_QWORD *)v11 + 2))
          goto LABEL_118;
        *(_QWORD *)v71 = v72;
        *(_QWORD *)&v73[16 * v70 + 8] = v75;
        v76 = *((_QWORD *)v11 + 2);
        if (v31 >= v76)
          goto LABEL_119;
        v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        v29 = v73;
        *((_QWORD *)v11 + 2) = v76 - 1;
        v10 = v97;
        if (v76 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v96;
    if (v9 >= v96)
    {
      v8 = v94;
      v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_24014080C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 8;
          v19 = v6 - 8;
          v20 = *((_QWORD *)v6 - 1);
          if (*((_QWORD *)v16 - 1) >= v20)
          {
            v22 = v16 - 8;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v20;
            v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)v6 >= *(_QWORD *)v4)
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_240135318((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

void sub_240140A78(uint64_t a1)
{
  __asm { BR              X12 }
}

void sub_240140AD8(unint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  int64_t v10;
  _BOOL4 v11;
  unint64_t v12;
  uint64_t v13;
  unsigned int v14;
  char v15;
  char v16;
  char v17;

  v13 = v1;
  LOWORD(v14) = a1;
  BYTE2(v14) = BYTE2(a1);
  v4 = HIDWORD(a1);
  HIBYTE(v14) = BYTE3(a1);
  v5 = a1 >> 40;
  v15 = BYTE4(a1);
  v6 = HIWORD(a1);
  v7 = v3 * v3;
  v16 = v5;
  v17 = v6;
  if ((unsigned __int128)(v3 * (__int128)v3) >> 64 != (v3 * v3) >> 63)
  {
    __break(1u);
    JUMPOUT(0x240140D44);
  }
  v8 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    JUMPOUT(0x240140D50);
  }
  if (v3 == -1)
  {
    __break(1u);
    JUMPOUT(0x240140D5CLL);
  }
  v9 = v7 >= 0;
  if (v8 > 0)
    v9 = v7 < 1;
  if (!v9)
  {
    v10 = 0;
    do
    {
      *(&v13 + v10) = 0x3FF0000000000000;
      if (__OFADD__(v10, v8))
        v10 = ((v10 + v8) >> 63) ^ 0x8000000000000000;
      else
        v10 += v8;
      v11 = v7 >= v10;
      if (v8 > 0)
        v11 = v10 >= v7;
    }
    while (!v11);
    LOBYTE(v4) = v15;
    LOBYTE(v5) = v16;
    LOBYTE(v6) = v17;
  }
  v12 = v14 | ((unint64_t)v4 << 32) | ((unint64_t)v5 << 40);
  *v2 = v13;
  v2[1] = v12 | ((unint64_t)v6 << 48);
}

uint64_t sub_240140D78(int *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = sub_2401541FC();
  v5 = *a1;
  v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = sub_2401540D0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v7 = result;
  result = sub_2401540F4();
  v8 = v5 - result;
  if (__OFSUB__(v5, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = v6 - v5;
  v10 = sub_2401540E8();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  return sub_24013E81C(v7 + v8, v7 + v8 + v11, a2);
}

uint64_t sub_240140E18(unint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), unint64_t *a5, uint64_t *a6, uint64_t (*a7)(_BYTE *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t i;
  uint64_t v21;
  void (*v22)(_BYTE *, _QWORD);
  uint64_t *v23;
  uint64_t v24;
  uint64_t result;
  _BYTE v26[32];

  v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v15 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (!v15)
      return a3;
  }
  else
  {
    v15 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v15)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    v18 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        v19 = sub_240141E4C(a5, a6);
        swift_bridgeObjectRetain();
        for (i = 0; i != v15; ++i)
        {
          v21 = __swift_instantiateConcreteTypeFromMangledName(a6);
          v22 = (void (*)(_BYTE *, _QWORD))a7(v26, i, a3, v21, v19);
          v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(_QWORD *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v17 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    a4(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_240154D60();
  __break(1u);
  return result;
}

_QWORD *sub_240141020(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;

  v4 = a4 + 56;
  v5 = -1;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & *(_QWORD *)(a4 + 56);
  if (!a2)
  {
    v8 = 0;
    a3 = 0;
LABEL_35:
    *result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (_QWORD *)a3;
  }
  if (!a3)
  {
    v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v8 = 0;
  v9 = 0;
  v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_QWORD *)(*(_QWORD *)(a4 + 48) + 8 * v12);
    if (v9 == a3)
      goto LABEL_35;
  }
  v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v13);
  if (v14)
    goto LABEL_19;
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    v7 = 0;
    v8 = v13;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    v13 = v8;
LABEL_19:
    v16 = __clz(__rbit64(v14));
    v7 = (v14 - 1) & v14;
    v12 = v16 + (v13 << 6);
    v8 = v13;
    goto LABEL_8;
  }
  v15 = v13 + 2;
  if (v13 + 2 >= v10)
    goto LABEL_30;
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    v13 = v15;
    goto LABEL_19;
  }
  v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    v7 = 0;
    v8 = v13 + 2;
    goto LABEL_34;
  }
  v14 = *(_QWORD *)(v4 + 8 * v8);
  if (v14)
    goto LABEL_15;
  v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  v14 = *(_QWORD *)(v4 + 8 * v15);
  if (v14)
    goto LABEL_18;
  while (1)
  {
    v13 = v15 + 1;
    if (__OFADD__(v15, 1))
      break;
    if (v13 >= v10)
    {
      v7 = 0;
      v8 = v10 - 1;
      goto LABEL_34;
    }
    v14 = *(_QWORD *)(v4 + 8 * v13);
    ++v15;
    if (v14)
      goto LABEL_19;
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_2401411B4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v8 = type metadata accessor for DKPersonGroup(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v28 - v13;
  v16 = a4 + 64;
  v15 = *(_QWORD *)(a4 + 64);
  v31 = -1 << *(_BYTE *)(a4 + 32);
  if (-v31 < 64)
    v17 = ~(-1 << -(char)v31);
  else
    v17 = -1;
  v18 = v17 & v15;
  if (!a2)
  {
    v19 = 0;
LABEL_34:
    v27 = ~v31;
    *a1 = a4;
    a1[1] = v16;
    a1[2] = v27;
    a1[3] = v19;
    a1[4] = v18;
    return;
  }
  if (!a3)
  {
    v19 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  v30 = a1;
  v19 = 0;
  v20 = 0;
  v32 = a4 + 64;
  v33 = (unint64_t)(63 - v31) >> 6;
  v29 = v33 - 1;
  if (!v18)
    goto LABEL_9;
LABEL_8:
  v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v20;
    v26 = *(_QWORD *)(v9 + 72);
    sub_240080084(*(_QWORD *)(a4 + 56) + v26 * v22, (uint64_t)v11, type metadata accessor for DKPersonGroup);
    sub_2400E80C0((uint64_t)v11, (uint64_t)v14);
    sub_2400E80C0((uint64_t)v14, a2);
    if (v20 == a3)
      goto LABEL_33;
    a2 += v26;
    if (v18)
      goto LABEL_8;
LABEL_9:
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v23 >= v33)
    {
      v18 = 0;
LABEL_33:
      a1 = v30;
      v16 = v32;
      goto LABEL_34;
    }
    v16 = v32;
    v24 = *(_QWORD *)(v32 + 8 * v23);
    if (!v24)
      break;
LABEL_18:
    v18 = (v24 - 1) & v24;
    v22 = __clz(__rbit64(v24)) + (v23 << 6);
    v19 = v23;
  }
  v19 += 2;
  if (v23 + 1 >= v33)
  {
    v18 = 0;
    v19 = v23;
LABEL_39:
    a1 = v30;
    goto LABEL_34;
  }
  v24 = *(_QWORD *)(v32 + 8 * v19);
  if (v24)
    goto LABEL_14;
  v25 = v23 + 2;
  if (v23 + 2 >= v33)
    goto LABEL_36;
  v24 = *(_QWORD *)(v32 + 8 * v25);
  if (v24)
    goto LABEL_17;
  v19 = v23 + 3;
  if (v23 + 3 >= v33)
  {
    v18 = 0;
    v19 = v23 + 2;
    goto LABEL_39;
  }
  v24 = *(_QWORD *)(v32 + 8 * v19);
  if (v24)
  {
LABEL_14:
    v23 = v19;
    goto LABEL_18;
  }
  v25 = v23 + 4;
  if (v23 + 4 >= v33)
  {
LABEL_36:
    v18 = 0;
    goto LABEL_39;
  }
  v24 = *(_QWORD *)(v32 + 8 * v25);
  if (v24)
  {
LABEL_17:
    v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    v23 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v23 >= v33)
    {
      v18 = 0;
      v19 = v29;
      goto LABEL_39;
    }
    v24 = *(_QWORD *)(v32 + 8 * v23);
    ++v25;
    if (v24)
      goto LABEL_18;
  }
LABEL_42:
  __break(1u);
}

_QWORD *sub_240141460(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;

  v5 = a4 + 64;
  v6 = -1 << *(_BYTE *)(a4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v11 = 0;
    v9 = 0;
LABEL_39:
    *result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (_QWORD *)v9;
  }
  v9 = a3;
  if (!a3)
  {
    v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0)
    goto LABEL_41;
  v10 = a2;
  v23 = -1 << *(_BYTE *)(a4 + 32);
  v24 = result;
  v11 = 0;
  v12 = 0;
  v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8)
    goto LABEL_9;
LABEL_8:
  v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    v19 = (_QWORD *)(*(_QWORD *)(a4 + 56) + 32 * v15);
    v20 = v19[1];
    v21 = v19[2];
    v22 = v19[3];
    *v10 = *v19;
    v10[1] = v20;
    v10[2] = v21;
    v10[3] = v22;
    if (v12 == v9)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_38;
    }
    v10 += 4;
    swift_retain();
    swift_bridgeObjectRetain();
    result = (_QWORD *)swift_retain();
    if (v8)
      goto LABEL_8;
LABEL_9:
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v16 >= v13)
      goto LABEL_33;
    v17 = *(_QWORD *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        v8 = 0;
        v11 = v16;
      }
      else
      {
        v17 = *(_QWORD *)(v5 + 8 * v11);
        if (v17)
          goto LABEL_14;
        v18 = v16 + 2;
        if (v16 + 2 >= v13)
          goto LABEL_33;
        v17 = *(_QWORD *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          v16 = v18;
          goto LABEL_18;
        }
        v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          v17 = *(_QWORD *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            v16 = v11;
            goto LABEL_18;
          }
          v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            v8 = 0;
            goto LABEL_37;
          }
          v17 = *(_QWORD *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              v16 = v18 + 1;
              if (__OFADD__(v18, 1))
                goto LABEL_42;
              if (v16 >= v13)
              {
                v8 = 0;
                v11 = v13 - 1;
                goto LABEL_37;
              }
              v17 = *(_QWORD *)(v5 + 8 * v16);
              ++v18;
              if (v17)
                goto LABEL_18;
            }
          }
          goto LABEL_17;
        }
        v8 = 0;
        v11 = v16 + 2;
      }
LABEL_37:
      v9 = v12;
LABEL_38:
      v6 = v23;
      result = v24;
      goto LABEL_39;
    }
LABEL_18:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v16 << 6);
    v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void sub_240141688(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v3 = v2;
  sub_240154274();
  sub_240154274();
  v6 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_stateSize;
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + v6) = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = 1;
  if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
  {
    __break(1u);
    goto LABEL_6;
  }
  v8 = v7;
  swift_retain();
  *(_QWORD *)(v8 + 32) = swift_slowAlloc();
  *(_QWORD *)(v8 + 40) = a2;
  sub_24013E8A4(0.0);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x) = v8;
  v9 = a2 * a2;
  if ((unsigned __int128)(a2 * (__int128)a2) >> 64 != (a2 * a2) >> 63)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if ((unint64_t)(v9 - 0x1000000000000000) >> 61 == 7)
  {
    v35 = sub_2400759E4(8 * v9);
    v36 = v10;
    sub_240140A78((uint64_t)&v35);
    v11 = v35;
    v12 = v36;
    v13 = (_QWORD *)swift_allocObject();
    v13[2] = a2;
    v13[3] = a2;
    v14 = swift_slowAlloc();
    v13[4] = v14;
    v13[5] = v9;
    sub_24013E6AC(v14, a2 * a2, 0, 0, 1, v11, v12);
    sub_240075D14(v11, v12);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_P) = v13;
    v35 = sub_2400759E4(8 * v9);
    v36 = v15;
    sub_240140A78((uint64_t)&v35);
    v16 = v35;
    v17 = v36;
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = a2;
    v18[3] = a2;
    v19 = swift_slowAlloc();
    v18[4] = v19;
    v18[5] = v9;
    sub_24013E6AC(v19, a2 * a2, 0, 0, 1, v16, v17);
    sub_240075D14(v16, v17);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_I) = v18;
    v35 = sub_2400759E4(8 * v9);
    v36 = v20;
    sub_240140A78((uint64_t)&v35);
    v21 = v35;
    v22 = v36;
    v23 = (_QWORD *)swift_allocObject();
    v23[2] = a2;
    v23[3] = a2;
    v24 = swift_slowAlloc();
    v23[4] = v24;
    v23[5] = v9;
    sub_24013E6AC(v24, a2 * a2, 0, 0, 1, v21, v22);
    sub_240075D14(v21, v22);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q) = v23;
    v35 = sub_2400759E4(8 * v9);
    v36 = v25;
    sub_240140A78((uint64_t)&v35);
    v26 = v35;
    v27 = v36;
    v28 = (_QWORD *)swift_allocObject();
    v28[2] = a2;
    v28[3] = a2;
    v29 = swift_slowAlloc();
    v28[4] = v29;
    v28[5] = v9;
    sub_24013E6AC(v29, a2 * a2, 0, 0, 1, v26, v27);
    sub_240075D14(v26, v27);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F) = v28;
    v35 = sub_2400759E4(8 * v9);
    v36 = v30;
    sub_240140A78((uint64_t)&v35);
    v31 = v35;
    v32 = v36;
    v33 = (_QWORD *)swift_allocObject();
    v33[2] = a2;
    v33[3] = a2;
    v34 = swift_slowAlloc();
    v33[4] = v34;
    v33[5] = v9;
    sub_24013E6AC(v34, a2 * a2, 0, 0, 1, v31, v32);
    sub_240075D14(v31, v32);
    *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J) = v33;
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_240141A08(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v6;
  const void *v7;
  uint64_t result;

  v2 = a1[2];
  v1[2] = v2;
  v3 = a1[3];
  v1[3] = v3;
  v4 = v2 * v3;
  if ((unsigned __int128)(v2 * (__int128)v3) >> 64 != (v2 * v3) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = (void *)swift_slowAlloc();
  v1[4] = v6;
  v1[5] = v4;
  v7 = (const void *)a1[4];
  if (!v7)
    return (uint64_t)v1;
  if (((8 * v4) & 0x8000000000000000) == 0)
  {
    memmove(v6, v7, 8 * v4);
    return (uint64_t)v1;
  }
LABEL_9:
  result = sub_240154D60();
  __break(1u);
  return result;
}

double sub_240141AE4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 16);
  *a2 = result;
  return result;
}

double sub_240141AF4(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 16) = *a1;
  return result;
}

double sub_240141B04@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 24);
  *a2 = result;
  return result;
}

double sub_240141B14(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 24) = *a1;
  return result;
}

uint64_t sub_240141B24@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 32);
  return result;
}

_BYTE *sub_240141B34(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 32) = *result;
  return result;
}

uint64_t sub_240141B44()
{
  return type metadata accessor for DKKalmanFilter(0);
}

uint64_t type metadata accessor for DKKalmanFilter(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FC15A0);
}

uint64_t sub_240141B60()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKKalmanFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKKalmanFilter.__allocating_init(configuration:stateSize:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t dispatch thunk of DKKalmanFilter.isInitialized()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKKalmanFilter.updateF(row:column:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKKalmanFilter.updateQ(row:column:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKKalmanFilter.updateJ(row:column:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKKalmanFilter.getState(index:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKKalmanFilter.setState(index:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKKalmanFilter.predict(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKKalmanFilter.correct(measurement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKKalmanFilter.update(measurement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKKalmanFilter.wrapStateAngles()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKKalmanFilter.clampStateToLimits()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of DKKalmanFilter.clampMeasurementToLimits(index:measurement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t sub_240141C9C()
{
  return type metadata accessor for DKKalmanFilter.Measurement(0);
}

uint64_t type metadata accessor for DKKalmanFilter.Measurement(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FC17E8);
}

uint64_t sub_240141CB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKKalmanFilter.Measurement()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for DKKalmanFilter.Configuration()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKKalmanFilter.Configuration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.minCovariance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.minCovariance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.minCovariance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.maxCovariance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.maxCovariance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.maxCovariance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.isEKF.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.isEKF.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKKalmanFilter.Configuration.isEKF.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DKKalmanFilter.Configuration.Limit(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DKKalmanFilter.Configuration.Limit(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DKKalmanFilter.Configuration.Limit()
{
  return &type metadata for DKKalmanFilter.Configuration.Limit;
}

uint64_t sub_240141E4C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12E0], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240141E8C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_240141EC8(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x24BEE23D0] - 8) + 8))();
  return a1;
}

uint64_t sub_240141EFC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v6;
  const void *v7;
  uint64_t result;

  v2 = a1[2];
  v1[2] = v2;
  v3 = a1[3];
  v1[3] = v3;
  v4 = v2 * v3;
  if ((unsigned __int128)(v2 * (__int128)v3) >> 64 != (v2 * v3) >> 63)
  {
    __break(1u);
    goto LABEL_8;
  }
  if ((unint64_t)(v4 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  v6 = (void *)swift_slowAlloc();
  v1[4] = v6;
  v1[5] = v4;
  v7 = (const void *)a1[4];
  if (!v7)
    return (uint64_t)v1;
  if (((4 * v4) & 0x8000000000000000) == 0)
  {
    memmove(v6, v7, 4 * v4);
    return (uint64_t)v1;
  }
LABEL_9:
  result = sub_240154D60();
  __break(1u);
  return result;
}

void *static DKOmni3DMotionFilter.Index.allCases.getter()
{
  return &unk_2510632F8;
}

uint64_t DKOmni3DMotionFilter.Index.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t DKOmni3DMotionFilter.Measurement.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKOmni3DMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

IntelligentTrackingCore::DKOmni3DMotionFilter::Index_optional __swiftcall DKOmni3DMotionFilter.Index.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 15;
  if ((unint64_t)rawValue < 0xF)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligentTrackingCore::DKOmni3DMotionFilter::Index_optional)rawValue;
}

IntelligentTrackingCore::DKOmni3DMotionFilter::Index_optional sub_240142118(Swift::Int *a1)
{
  return DKOmni3DMotionFilter.Index.init(rawValue:)(*a1);
}

void sub_240142120(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510632F8;
}

uint64_t DKOmni3DMotionFilter.Configuration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKOmni3DMotionFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKOmni3DMotionFilter.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_allocObject();
  sub_240142B88(a1);
  v3 = v2;
  swift_release();
  return v3;
}

uint64_t DKOmni3DMotionFilter.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_240142B88(a1);
  v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_2401421F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  _QWORD *v11;
  uint64_t v12;
  double *v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  __double2 v22;
  __double2 v23;
  __double2 v24;
  _QWORD *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  double v41;
  double v42;
  double *v43;
  double *v44;
  BOOL v45;
  uint64_t v46;
  double v47;
  double v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  double v55;
  double v56;
  double v57;
  double v58;
  double v59;
  double v60;
  double v61;
  double v62;
  double v63;
  double v64;
  double v65;
  double v66;
  double v67;
  double v68;
  double v69;
  uint64_t v70;
  double v71;
  double v72;
  uint64_t v73;
  double v74;
  double v75;
  double v76;
  double v77;
  double v78;
  double v79;
  uint64_t v80;
  uint64_t result;
  double v82;
  double v83;
  double v84;
  double v85;
  double v86;
  double v87;
  double v88;
  double v89;
  double v90;
  double v91;
  double v92;
  double cosval;
  double v94;
  double v95;
  double v96;
  double v97;
  double v98;
  double v99;
  double v100;
  double sinval;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4, v6);
  sub_24015428C();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v11 = *(_QWORD **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  v12 = v11[2];
  if (v12 < 6)
    goto LABEL_55;
  if ((uint64_t)v11[3] <= 0)
    goto LABEL_55;
  if ((unint64_t)v12 <= 0xE)
    goto LABEL_55;
  v13 = (double *)v11[4];
  v15 = v13[3];
  v14 = v13[4];
  v17 = v13[5];
  v16 = v13[6];
  v18 = v13[7];
  v97 = v13[8];
  v98 = v16;
  v19 = v13[10];
  v95 = v13[9];
  v96 = v18;
  v20 = v13[12];
  v21 = v13[13];
  v99 = v13[14];
  v100 = v20;
  v22 = __sincos_stret(v14);
  sinval = v22.__sinval;
  v23 = __sincos_stret(v17);
  v24 = __sincos_stret(v15);
  v25 = *(_QWORD **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
  v26 = v25[2];
  if (v26 < 1)
    goto LABEL_55;
  v27 = v25[3];
  if ((uint64_t)v27 <= 6)
    goto LABEL_55;
  v28 = 6 * v26;
  if ((unsigned __int128)(v26 * (__int128)6) >> 64 != (6 * v26) >> 63)
  {
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  v29 = v25[4];
  *(double *)(v29 + 48 * v26) = v10 * (v22.__cosval * v24.__cosval);
  if (v27 <= 7)
    goto LABEL_55;
  v30 = 8 * v26;
  v31 = 7 * v26;
  v32 = sinval;
  if ((unsigned __int128)(v26 * (__int128)7) >> 64 != (7 * v26) >> 63)
    goto LABEL_40;
  v33 = sinval * v24.__cosval;
  v34 = v23.__sinval * (sinval * v24.__cosval) - v23.__cosval * v24.__sinval;
  *(double *)(v29 + 56 * v26) = v10 * v34;
  if (v27 <= 8)
    goto LABEL_55;
  if ((unint64_t)(v26 - 0x1000000000000000) >> 61 != 7)
    goto LABEL_41;
  v35 = v23.__sinval * v24.__sinval + v23.__cosval * v33;
  *(double *)(v29 + (v26 << 6)) = v10 * v35;
  if (v27 <= 0xC)
    goto LABEL_55;
  v36 = 12 * v26;
  if ((unsigned __int128)(v26 * (__int128)12) >> 64 != (12 * v26) >> 63)
    goto LABEL_42;
  *(double *)(v29 + 96 * v26) = v10 * (*(double *)(v29 + 48 * v26) * 0.5);
  if (v27 <= 0xD)
    goto LABEL_55;
  v37 = 13 * v26;
  if ((unsigned __int128)(v26 * (__int128)13) >> 64 != (13 * v26) >> 63)
    goto LABEL_43;
  *(double *)(v29 + 104 * v26) = v10 * (*(double *)(v29 + 56 * v26) * 0.5);
  if (v27 <= 0xE)
    goto LABEL_55;
  v38 = 14 * v26;
  if ((unsigned __int128)(v26 * (__int128)14) >> 64 != (14 * v26) >> 63)
    goto LABEL_44;
  *(double *)(v29 + 112 * v26) = v10 * (*(double *)(v29 + (v26 << 6)) * 0.5);
  if ((unint64_t)v26 <= 1)
    goto LABEL_55;
  v39 = v28 | 1;
  *(double *)(v29 + 8 * (v28 | 1)) = v10 * (v22.__cosval * v24.__sinval);
  v40 = v31 + 1;
  if (__OFADD__(v31, 1))
    goto LABEL_45;
  *(double *)(v29 + 8 * v40) = v10 * (v23.__cosval * v24.__cosval + v23.__sinval * (v32 * v24.__sinval));
  *(double *)(v29 + 8 * (v30 | 1)) = v10 * (v23.__cosval * (v32 * v24.__sinval) - v23.__sinval * v24.__cosval);
  *(double *)(v29 + ((96 * v26) | 8)) = v10 * (*(double *)(v29 + 8 * v39) * 0.5);
  if (__OFADD__(v37, 1))
  {
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  *(double *)(v29 + 8 * (v37 + 1)) = v10 * (*(double *)(v29 + 8 * v40) * 0.5);
  *(double *)(v29 + ((112 * v26) | 8)) = v10 * (*(double *)(v29 + 8 * (v30 | 1)) * 0.5);
  if ((unint64_t)v26 <= 2)
    goto LABEL_55;
  if (__OFADD__(v38, 2))
    goto LABEL_47;
  v94 = v19;
  *(double *)(v29 + 8 * (v38 + 2)) = v10 * (*(double *)(v29 + ((v26 << 6) | 0x10)) * 0.5);
  if ((unint64_t)v26 <= 5)
    goto LABEL_55;
  v41 = 1.0 / v22.__cosval;
  v42 = v32 * (1.0 / v22.__cosval);
  *(double *)(v29 + 88 * v26 + 40) = v10;
  v43 = (double *)(v29 + 80 * v26);
  v43[5] = v10 * (v23.__sinval * v42);
  v44 = (double *)(v29 + 72 * v26);
  v44[5] = v10 * (v23.__cosval * v42);
  v43[4] = v10 * v23.__cosval;
  v44[4] = -(v23.__sinval * v10);
  v43[3] = v10 * (v23.__sinval * (1.0 / v22.__cosval));
  v44[3] = v10 * (v23.__cosval * (1.0 / v22.__cosval));
  if (v26 == 6)
    goto LABEL_55;
  v45 = __OFADD__(v36, 6);
  v46 = v36 + 6;
  if (v45)
    goto LABEL_48;
  *(double *)(v29 + 8 * v46) = v10;
  if ((unint64_t)v26 <= 7)
    goto LABEL_55;
  if (__OFADD__(v37, 7))
    goto LABEL_49;
  *(double *)(v29 + 8 * (v37 + 7)) = v10;
  if ((unint64_t)v26 <= 8)
    goto LABEL_55;
  if (__OFADD__(v38, 8))
    goto LABEL_50;
  v89 = v23.__sinval * v24.__cosval;
  v90 = v23.__cosval * v24.__cosval;
  v86 = v23.__cosval * (v32 * v24.__sinval) - v23.__sinval * v24.__cosval;
  v87 = v22.__cosval * v24.__sinval;
  v82 = v23.__cosval * (1.0 / v22.__cosval);
  v83 = v23.__sinval * (1.0 / v22.__cosval);
  v84 = v23.__cosval * v24.__sinval;
  v85 = v23.__sinval * v24.__sinval;
  v92 = v24.__sinval;
  cosval = v22.__cosval;
  v47 = v35;
  v88 = v34;
  v91 = v21;
  v48 = v22.__cosval * v24.__cosval;
  *(double *)(v29 + 8 * (v38 + 8)) = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  swift_allocObject();
  v49 = (_QWORD *)swift_retain();
  v50 = sub_240141A08(v49);
  swift_release();
  v51 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J) = v50;
  swift_release();
  v52 = *(_QWORD **)(v2 + v51);
  v53 = v52[2];
  if (v53 < 1 || (uint64_t)v52[3] <= 5)
    goto LABEL_55;
  v54 = 5 * v53;
  v56 = v99;
  v55 = v100;
  v58 = v97;
  v57 = v98;
  v59 = sinval;
  if ((unsigned __int128)(v53 * (__int128)5) >> 64 != (5 * v53) >> 63)
    goto LABEL_51;
  v60 = v10 * (v10 * 0.5);
  v61 = -(v24.__cosval * sinval);
  v62 = v96;
  v63 = v91;
  v64 = v10 * (v47 * v96 + (v23.__cosval * v24.__sinval + v23.__sinval * v61) * v97)
      + v60 * (v47 * v91 + (v23.__cosval * v24.__sinval + v23.__sinval * v61) * v99);
  v65 = v10 * (v61 * v98 + v23.__sinval * v48 * v96 + v23.__cosval * v48 * v97)
      + v60 * (v61 * v100 + v23.__sinval * v48 * v91 + v23.__cosval * v48 * v99);
  v66 = cosval;
  v67 = -(v92 * sinval);
  v68 = v23.__sinval * v67 - v90;
  v69 = v10 * (-(v92 * cosval) * v98 + v68 * v96 + (v89 + v23.__cosval * v67) * v97)
      + v60 * (-(v92 * cosval) * v100 + v68 * v91 + (v89 + v23.__cosval * v67) * v99);
  v70 = v52[4];
  *(double *)(v70 + 40 * v53) = v64;
  *(double *)(v70 + 32 * v53) = v65;
  *(double *)(v70 + 24 * v53) = v69;
  if ((unint64_t)v53 <= 1)
    goto LABEL_55;
  if (__OFADD__(v54, 1))
    goto LABEL_52;
  v71 = v10 * (v67 * v57 + v23.__sinval * v87 * v62 + v23.__cosval * v87 * v58)
      + v60 * (v67 * v55 + v23.__sinval * v87 * v63 + v23.__cosval * v87 * v56);
  v72 = v10 * (v48 * v57 + v88 * v62 + v47 * v58) + v60 * (v48 * v55 + v88 * v63 + v47 * v56);
  *(double *)(v70 + 8 * (v54 + 1)) = v10 * (v86 * v62 + v68 * v58) + v60 * (v86 * v63 + v68 * v56);
  v73 = 32 * v53;
  *(double *)(v70 + ((32 * v53) | 8)) = v71;
  *(double *)(v70 + 24 * v53 + 8) = v72;
  if ((unint64_t)v53 <= 2)
    goto LABEL_55;
  if (__OFADD__(v54, 2))
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  *(double *)(v70 + 8 * (v54 + 2)) = v10 * (v23.__cosval * v66 * v62 + -(v66 * v23.__sinval) * v58)
                                   + v60 * (v23.__cosval * v66 * v63 + -(v66 * v23.__sinval) * v56);
  *(double *)(v70 + (v73 | 0x10)) = v10 * (-(v59 * v23.__sinval) * v62 - v66 * v57 + -(v59 * v23.__cosval) * v58)
                                  + v60 * (-(v59 * v23.__sinval) * v63 - v66 * v55 + -(v59 * v23.__cosval) * v56);
  if ((unint64_t)v53 > 5)
  {
    v74 = v85;
    v75 = v84;
    v76 = v83;
    v77 = v82;
    if (!__OFADD__(v54, 5))
    {
      v78 = v94;
      v79 = v95;
      *(double *)(v70 + 8 * (v54 + 5)) = v10 * (v84 * v94 - v85 * v95) + 1.0;
      *(double *)(v73 + v70 + 40) = v10 * (v23.__sinval * (v41 * v41) * v78 + v23.__cosval * (v41 * v41) * v79);
      v80 = v70 + 40 * v53;
      *(double *)(v80 + 24) = v10 * (v77 * v78 - v76 * v79);
      *(double *)(v80 + 32) = v10 * (v78 * -v23.__sinval - v23.__cosval * v79);
      *(double *)(v70 + (v73 | 0x18)) = v10 * (v41 * v74 * v78 + v41 * v75 * v79);
      return sub_24013CF84(a1);
    }
    goto LABEL_54;
  }
LABEL_55:
  result = sub_240154D00();
  __break(1u);
  return result;
}

void DKOmni3DMotionFilter.__allocating_init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DKOmni3DMotionFilter.init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_240142B04()
{
  return swift_release();
}

uint64_t DKOmni3DMotionFilter.deinit()
{
  uint64_t v0;

  v0 = DKKalmanFilter.deinit();
  swift_release();
  return v0;
}

uint64_t DKOmni3DMotionFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_240142B88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKOmni3DMotionFilter_omni3DConfiguration) = a1;
  v2 = swift_retain();
  sub_240141688(v2, 15);
  v4 = *(_QWORD **)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  v5 = v4[2];
  if ((uint64_t)v5 < 1)
    goto LABEL_73;
  v6 = v4[3];
  if ((uint64_t)v6 <= 0)
    goto LABEL_73;
  v7 = (_QWORD *)v4[4];
  *v7 = 0x3FAEB851EB851EB8;
  if (v5 < 2 || v6 == 1)
    goto LABEL_73;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v7[v5 + 1] = 0x3FAEB851EB851EB8;
  if (v5 < 3 || v6 <= 2)
    goto LABEL_73;
  if ((uint64_t)(v5 + 0x4000000000000000) < 0)
    goto LABEL_55;
  if (__OFADD__(2 * v5, 2))
  {
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  v7[2 * v5 + 2] = 0x3FAEB851EB851EB8;
  if (v5 < 6 || v6 <= 5)
    goto LABEL_73;
  v11 = 5 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)5) >> 64 != (uint64_t)(5 * v5) >> 63)
    goto LABEL_57;
  v12 = __OFADD__(v11, 5);
  v13 = v11 + 5;
  if (v12)
  {
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  v7[v13] = 0x3F9EB851EB851EB8;
  v7[4 * v5 + 4] = 0x3F9EB851EB851EB8;
  v7[3 * v5 + 3] = 0x3FE1EB851EB851ECLL;
  if (v5 < 7 || v6 <= 6)
    goto LABEL_73;
  v15 = 6 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)6) >> 64 != (uint64_t)(6 * v5) >> 63)
    goto LABEL_59;
  v12 = __OFADD__(v15, 6);
  v16 = v15 + 6;
  if (v12)
  {
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  v7[v16] = 0x3F9999999999999ALL;
  if (v5 < 8 || v6 <= 7)
    goto LABEL_73;
  v17 = 8 * v5;
  v18 = 7 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)7) >> 64 != (uint64_t)(7 * v5) >> 63)
    goto LABEL_61;
  v12 = __OFADD__(v18, 7);
  v19 = v18 + 7;
  if (v12)
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  v7[v19] = 0x3F9999999999999ALL;
  if (v5 < 9 || v6 <= 8)
    goto LABEL_73;
  if ((v5 - 0x1000000000000000) >> 61 != 7)
    goto LABEL_63;
  v12 = __OFADD__(v17, 8);
  v20 = v17 + 8;
  if (v12)
  {
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  v7[v20] = 0x3FA47AE147AE147BLL;
  if (v5 < 0xC || v6 <= 0xB)
    goto LABEL_73;
  v21 = 11 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)11) >> 64 != (uint64_t)(11 * v5) >> 63)
    goto LABEL_65;
  v12 = __OFADD__(v21, 11);
  v22 = v21 + 11;
  if (v12)
  {
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  v7[v22] = 0x3F847AE147AE147BLL;
  v7[10 * v5 + 10] = 0x3F847AE147AE147BLL;
  v7[9 * v5 + 9] = 0x3F947AE147AE147BLL;
  if (v5 < 0xD || v6 <= 0xC)
    goto LABEL_73;
  v23 = 12 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)12) >> 64 != (uint64_t)(12 * v5) >> 63)
    goto LABEL_67;
  v12 = __OFADD__(v23, 12);
  v24 = v23 + 12;
  if (v12)
  {
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  v7[v24] = 0x3F847AE147AE147BLL;
  if (v5 < 0xE || v6 <= 0xD)
    goto LABEL_73;
  v25 = 13 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)13) >> 64 != (uint64_t)(13 * v5) >> 63)
    goto LABEL_69;
  v12 = __OFADD__(v25, 13);
  v26 = v25 + 13;
  if (v12)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  v7[v26] = 0x3F847AE147AE147BLL;
  if (v5 < 0xF || v6 <= 0xE)
    goto LABEL_73;
  v27 = 14 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)14) >> 64 == (uint64_t)(14 * v5) >> 63)
  {
    if (!__OFADD__(v27, 14))
    {
      v7[v27 + 14] = 0x3F8EB851EB851EB8;
      return;
    }
    goto LABEL_72;
  }
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  sub_240154D00();
  __break(1u);
}

unint64_t sub_240142F30()
{
  unint64_t result;

  result = qword_256FC1A60;
  if (!qword_256FC1A60)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKOmni3DMotionFilter.Index, &type metadata for DKOmni3DMotionFilter.Index);
    atomic_store(result, (unint64_t *)&qword_256FC1A60);
  }
  return result;
}

unint64_t sub_240142F78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FC1A68;
  if (!qword_256FC1A68)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FC1A70);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256FC1A68);
  }
  return result;
}

uint64_t sub_240142FC4()
{
  return type metadata accessor for DKOmni3DMotionFilter(0);
}

uint64_t type metadata accessor for DKOmni3DMotionFilter(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FC1AA0);
}

uint64_t method lookup function for DKOmni3DMotionFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKOmni3DMotionFilter.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t dispatch thunk of DKOmni3DMotionFilter.updateQ(row:column:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKOmni3DMotionFilter.getState(index:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKOmni3DMotionFilter.setState(index:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t sub_240143018()
{
  return type metadata accessor for DKOmni3DMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKOmni3DMotionFilter.Measurement(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FC1D10);
}

uint64_t method lookup function for DKOmni3DMotionFilter.Measurement()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for DKOmni3DMotionFilter.Index(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF2)
    goto LABEL_17;
  if (a2 + 14 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 14) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 14;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 14;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 14;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xF;
  v8 = v6 - 15;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKOmni3DMotionFilter.Index(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 14 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 14) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF2)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF1)
    return ((uint64_t (*)(void))((char *)&loc_24014311C + 4 * byte_24015FCF5[v4]))();
  *a1 = a2 + 14;
  return ((uint64_t (*)(void))((char *)sub_240143150 + 4 * asc_24015FCF0[v4]))();
}

uint64_t sub_240143150(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240143158(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240143160);
  return result;
}

uint64_t sub_24014316C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240143174);
  *(_BYTE *)result = a2 + 14;
  return result;
}

uint64_t sub_240143178(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240143180(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKOmni3DMotionFilter.Index()
{
  return &type metadata for DKOmni3DMotionFilter.Index;
}

uint64_t type metadata accessor for DKOmni3DMotionFilter.Configuration()
{
  return objc_opt_self();
}

BOOL static DKIntelligentTrackingConfig.PipelineMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void __swiftcall DKPIDConfig.init(kp:kd:ki:kv:clampIntegralZero:integralLimits:)(IntelligentTrackingCore::DKPIDConfig *__return_ptr retstr, Swift::OpaquePointer kp, Swift::OpaquePointer kd, Swift::OpaquePointer ki, Swift::OpaquePointer kv, Swift::Bool clampIntegralZero, Swift::OpaquePointer integralLimits)
{
  retstr->kp = kp;
  retstr->kd = kd;
  retstr->ki = ki;
  retstr->kv = kv;
  retstr->clampIntegralZero = clampIntegralZero;
  retstr->integralLimits = integralLimits;
}

uint64_t DKIntelligentTrackingConfig.PipelineMode.hash(into:)()
{
  return sub_240154FF4();
}

uint64_t sub_24014320C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x657069506574696CLL;
  if (*v0 != 1)
    v1 = 0x657265666E496F6ELL;
  if (*v0)
    return v1;
  else
    return 0x657069506C6C7566;
}

uint64_t sub_240143274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_240144C58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240143298()
{
  sub_24014363C();
  return sub_240155048();
}

uint64_t sub_2401432C0()
{
  sub_24014363C();
  return sub_240155054();
}

uint64_t sub_2401432E8()
{
  sub_240143708();
  return sub_240155048();
}

uint64_t sub_240143310()
{
  sub_240143708();
  return sub_240155054();
}

uint64_t sub_240143338()
{
  sub_2401436C4();
  return sub_240155048();
}

uint64_t sub_240143360()
{
  sub_2401436C4();
  return sub_240155054();
}

uint64_t sub_240143388()
{
  sub_240143680();
  return sub_240155048();
}

uint64_t sub_2401433B0()
{
  sub_240143680();
  return sub_240155054();
}

uint64_t DKIntelligentTrackingConfig.PipelineMode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1F70);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1F78);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1F80);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1F88);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24014363C();
  sub_240155030();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_2401436C4();
      sub_240154E20();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_240143680();
      v16 = v21;
      sub_240154E20();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_240143708();
    sub_240154E20();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

unint64_t sub_24014363C()
{
  unint64_t result;

  result = qword_256FC1F90;
  if (!qword_256FC1F90)
  {
    result = MEMORY[0x24267E0BC](&unk_240160380, &type metadata for DKIntelligentTrackingConfig.PipelineMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC1F90);
  }
  return result;
}

unint64_t sub_240143680()
{
  unint64_t result;

  result = qword_256FC1F98;
  if (!qword_256FC1F98)
  {
    result = MEMORY[0x24267E0BC](&unk_240160330, &type metadata for DKIntelligentTrackingConfig.PipelineMode.NoInferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC1F98);
  }
  return result;
}

unint64_t sub_2401436C4()
{
  unint64_t result;

  result = qword_256FC1FA0;
  if (!qword_256FC1FA0)
  {
    result = MEMORY[0x24267E0BC](&unk_2401602E0, &type metadata for DKIntelligentTrackingConfig.PipelineMode.LitePipelineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC1FA0);
  }
  return result;
}

unint64_t sub_240143708()
{
  unint64_t result;

  result = qword_256FC1FA8;
  if (!qword_256FC1FA8)
  {
    result = MEMORY[0x24267E0BC](&unk_240160290, &type metadata for DKIntelligentTrackingConfig.PipelineMode.FullPipelineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC1FA8);
  }
  return result;
}

uint64_t DKIntelligentTrackingConfig.PipelineMode.hashValue.getter()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t DKIntelligentTrackingConfig.PipelineMode.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1FB0);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1FB8);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1FC0);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC1FC8);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24014363C();
  v13 = v41;
  sub_240155024();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_240154E08();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_240154BC8();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v25 = &type metadata for DKIntelligentTrackingConfig.PipelineMode;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_2401436C4();
      v20 = v9;
      sub_240154D90();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_240143680();
      v28 = v15;
      sub_240154D90();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_240143708();
    sub_240154D90();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_240143BD4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DKIntelligentTrackingConfig.PipelineMode.init(from:)(a1, a2);
}

uint64_t sub_240143BE8(_QWORD *a1)
{
  return DKIntelligentTrackingConfig.PipelineMode.encode(to:)(a1);
}

uint64_t sub_240143BFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v5 = *(_BYTE *)(*(_QWORD *)a1 + 48);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 32) = v5;
  *(_QWORD *)(a2 + 40) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_240143C60(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v5 = *(_BYTE *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v7 = *a2;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)a1;
  *(_QWORD *)(v7 + 24) = v2;
  *(_QWORD *)(v7 + 32) = v3;
  *(_QWORD *)(v7 + 40) = v4;
  *(_BYTE *)(v7 + 48) = v5;
  *(_QWORD *)(v7 + 56) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240143D14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_BYTE *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_240143D74(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  __int128 v4;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 32) = v4;
  *(_BYTE *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240143DE4()
{
  return swift_retain();
}

uint64_t sub_240143DEC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return swift_release();
}

uint64_t sub_240143DFC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t sub_240143E04(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = result;
  return result;
}

uint64_t sub_240143E0C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t sub_240143E14(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 73) = result;
  return result;
}

uint64_t (*sub_240143E1C())()
{
  return nullsub_1;
}

uint64_t sub_240143E2C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_240143E38(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_240143E48()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 88);
}

uint64_t sub_240143E50(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 88) = result;
  return result;
}

void sub_240143E58(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 89);
}

_BYTE *sub_240143E64(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 89) = *result;
  return result;
}

uint64_t (*sub_240143E70())()
{
  return nullsub_1;
}

uint64_t sub_240143E80()
{
  return swift_retain();
}

uint64_t sub_240143E88(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 96) = a1;
  return swift_release();
}

double sub_240143E98()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void sub_240143EA0(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 112) = a1;
}

__n128 sub_240143EA8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(v1 + 136);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 152);
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 sub_240143EC0(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 120) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 136) = v2;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 152) = result;
  return result;
}

uint64_t DKIntelligentTrackingConfig.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DKIntelligentTrackingConfig.init()();
  return v0;
}

uint64_t DKIntelligentTrackingConfig.init()()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 88) = 0;
  *(_OWORD *)(v0 + 104) = xmmword_24015FE90;
  *(_OWORD *)(v0 + 168) = xmmword_24015FEA0;
  *(_QWORD *)(v0 + 16) = &unk_251063328;
  *(_QWORD *)(v0 + 24) = &unk_251063358;
  *(_QWORD *)(v0 + 32) = &unk_251063388;
  *(_QWORD *)(v0 + 40) = &unk_2510633B8;
  *(_BYTE *)(v0 + 48) = 1;
  *(_QWORD *)(v0 + 56) = &unk_2510633E8;
  type metadata accessor for DKMultiSubjectTrackerConfiguration();
  swift_allocObject();
  *(_QWORD *)(v0 + 64) = DKMultiSubjectTrackerConfiguration.init()();
  *(_WORD *)(v0 + 72) = 0;
  *(_QWORD *)(v0 + 80) = &unk_251063418;
  *(_BYTE *)(v0 + 89) = 0;
  type metadata accessor for DKFramingEngine.Config();
  *(_QWORD *)(v0 + 96) = swift_allocObject();
  *(_OWORD *)(v0 + 120) = xmmword_24015FEB0;
  *(_OWORD *)(v0 + 136) = xmmword_24015FEC0;
  *(_OWORD *)(v0 + 152) = xmmword_24015FED0;
  return v0;
}

uint64_t DKIntelligentTrackingConfig.__allocating_init(pid:tracker:debugEnabled:imageLogEnabled:homePosition:mode:framing:adaptiveFramerate:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t *a5, char *a6, uint64_t a7, _OWORD *a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  DKIntelligentTrackingConfig.init(pid:tracker:debugEnabled:imageLogEnabled:homePosition:mode:framing:adaptiveFramerate:)(a1, a2, a3, a4, a5, a6, a7, a8);
  return v16;
}

uint64_t DKIntelligentTrackingConfig.init(pid:tracker:debugEnabled:imageLogEnabled:homePosition:mode:framing:adaptiveFramerate:)(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t *a5, char *a6, uint64_t a7, _OWORD *a8)
{
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  *(_OWORD *)(v8 + 104) = xmmword_24015FE90;
  *(_OWORD *)(v8 + 168) = xmmword_24015FEA0;
  v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  v10 = a8[1];
  *(_OWORD *)(v8 + 120) = *a8;
  v11 = *(_BYTE *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *a5;
  v14 = *a6;
  *(_BYTE *)(v8 + 88) = 0;
  *(_BYTE *)(v8 + 48) = v11;
  *(_QWORD *)(v8 + 56) = v12;
  *(_QWORD *)(v8 + 64) = a2;
  *(_BYTE *)(v8 + 72) = a3;
  *(_BYTE *)(v8 + 73) = a4;
  *(_QWORD *)(v8 + 80) = v13;
  *(_BYTE *)(v8 + 89) = v14;
  *(_QWORD *)(v8 + 96) = a7;
  *(_OWORD *)(v8 + 136) = v10;
  *(_OWORD *)(v8 + 152) = a8[2];
  return v8;
}

uint64_t DKIntelligentTrackingConfig.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t DKIntelligentTrackingConfig.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_2401441E8()
{
  unint64_t result;

  result = qword_256FC1FD0;
  if (!qword_256FC1FD0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingConfig.PipelineMode, &type metadata for DKIntelligentTrackingConfig.PipelineMode);
    atomic_store(result, (unint64_t *)&qword_256FC1FD0);
  }
  return result;
}

uint64_t sub_240144234@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 64);
  return swift_retain();
}

uint64_t sub_240144244(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 64) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_240144274@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 72);
  return result;
}

_BYTE *sub_240144284(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 72) = *result;
  return result;
}

uint64_t sub_240144294@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 73);
  return result;
}

_BYTE *sub_2401442A4(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 73) = *result;
  return result;
}

uint64_t sub_2401442B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2401442C4(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 80) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2401442F4@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 88);
  return result;
}

_BYTE *sub_240144304(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 88) = *result;
  return result;
}

uint64_t sub_240144314@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 89);
  return result;
}

_BYTE *sub_240144324(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 89) = *result;
  return result;
}

uint64_t sub_240144334@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  return swift_retain();
}

uint64_t sub_240144344(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 96) = *a1;
  swift_retain();
  return swift_release();
}

double sub_240144374@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 104);
  *a2 = result;
  return result;
}

double sub_240144384(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 104) = *a1;
  return result;
}

double sub_240144394@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 112);
  *a2 = result;
  return result;
}

double sub_2401443A4(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 112) = *a1;
  return result;
}

__n128 sub_2401443B4@<Q0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __n128 result;

  v2 = *a1;
  v3 = *(_OWORD *)(*a1 + 136);
  *(_OWORD *)a2 = *(_OWORD *)(*a1 + 120);
  *(_OWORD *)(a2 + 16) = v3;
  result = *(__n128 *)(v2 + 152);
  *(__n128 *)(a2 + 32) = result;
  return result;
}

__n128 sub_2401443D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  __int128 v3;
  __n128 result;

  v2 = *a2;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 120) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 136) = v3;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v2 + 152) = result;
  return result;
}

double sub_2401443EC@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 168);
  *a2 = result;
  return result;
}

double sub_2401443FC(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 168) = *a1;
  return result;
}

double sub_24014440C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 176);
  *a2 = result;
  return result;
}

double sub_24014441C(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 176) = *a1;
  return result;
}

uint64_t destroy for DKPIDConfig()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DKPIDConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DKPIDConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for DKPIDConfig(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKPIDConfig(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKPIDConfig(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKPIDConfig()
{
  return &type metadata for DKPIDConfig;
}

uint64_t type metadata accessor for DKIntelligentTrackingConfig()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKIntelligentTrackingConfig()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.pid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.pid.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.pid.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.tracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.tracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.tracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.debugEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.debugEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.debugEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.imageLogEnabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.imageLogEnabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.imageLogEnabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.homePosition.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.homePosition.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.homePosition.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.flipCamera.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.flipCamera.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.flipCamera.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.mode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.mode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.mode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.framing.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.framing.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.framing.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.printExtractionPeriod.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.printExtractionPeriod.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.printExtractionPeriod.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.vuRecognitionScoreThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.vuRecognitionScoreThreshold.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.vuRecognitionScoreThreshold.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.adaptiveFramerate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.adaptiveFramerate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.adaptiveFramerate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.ignoredSubjectTimeout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.ignoredSubjectTimeout.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.ignoredSubjectTimeout.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.cameraStationarySpeed.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.cameraStationarySpeed.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.cameraStationarySpeed.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 496))();
}

uint64_t dispatch thunk of DKIntelligentTrackingConfig.__allocating_init(pid:tracker:debugEnabled:imageLogEnabled:homePosition:mode:framing:adaptiveFramerate:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 504))();
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode;
}

uint64_t _s23IntelligentTrackingCore27DKIntelligentTrackingConfigC12PipelineModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_240144920 + 4 * byte_24015FEE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_240144954 + 4 * byte_24015FEE0[v4]))();
}

uint64_t sub_240144954(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24014495C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240144964);
  return result;
}

uint64_t sub_240144970(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240144978);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24014497C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240144984(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode.CodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode.FullPipelineCodingKeys()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode.FullPipelineCodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode.LitePipelineCodingKeys()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode.LitePipelineCodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingConfig.PipelineMode.NoInferenceCodingKeys()
{
  return &type metadata for DKIntelligentTrackingConfig.PipelineMode.NoInferenceCodingKeys;
}

unint64_t sub_2401449D4()
{
  unint64_t result;

  result = qword_256FC2218;
  if (!qword_256FC2218)
  {
    result = MEMORY[0x24267E0BC](&unk_240160268, &type metadata for DKIntelligentTrackingConfig.PipelineMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2218);
  }
  return result;
}

unint64_t sub_240144A1C()
{
  unint64_t result;

  result = qword_256FC2220;
  if (!qword_256FC2220)
  {
    result = MEMORY[0x24267E0BC](&unk_240160188, &type metadata for DKIntelligentTrackingConfig.PipelineMode.FullPipelineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2220);
  }
  return result;
}

unint64_t sub_240144A64()
{
  unint64_t result;

  result = qword_256FC2228;
  if (!qword_256FC2228)
  {
    result = MEMORY[0x24267E0BC](&unk_2401601B0, &type metadata for DKIntelligentTrackingConfig.PipelineMode.FullPipelineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2228);
  }
  return result;
}

unint64_t sub_240144AAC()
{
  unint64_t result;

  result = qword_256FC2230;
  if (!qword_256FC2230)
  {
    result = MEMORY[0x24267E0BC](&unk_240160138, &type metadata for DKIntelligentTrackingConfig.PipelineMode.LitePipelineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2230);
  }
  return result;
}

unint64_t sub_240144AF4()
{
  unint64_t result;

  result = qword_256FC2238;
  if (!qword_256FC2238)
  {
    result = MEMORY[0x24267E0BC](&unk_240160160, &type metadata for DKIntelligentTrackingConfig.PipelineMode.LitePipelineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2238);
  }
  return result;
}

unint64_t sub_240144B3C()
{
  unint64_t result;

  result = qword_256FC2240;
  if (!qword_256FC2240)
  {
    result = MEMORY[0x24267E0BC](&unk_2401600E8, &type metadata for DKIntelligentTrackingConfig.PipelineMode.NoInferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2240);
  }
  return result;
}

unint64_t sub_240144B84()
{
  unint64_t result;

  result = qword_256FC2248;
  if (!qword_256FC2248)
  {
    result = MEMORY[0x24267E0BC](&unk_240160110, &type metadata for DKIntelligentTrackingConfig.PipelineMode.NoInferenceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2248);
  }
  return result;
}

unint64_t sub_240144BCC()
{
  unint64_t result;

  result = qword_256FC2250;
  if (!qword_256FC2250)
  {
    result = MEMORY[0x24267E0BC](&unk_2401601D8, &type metadata for DKIntelligentTrackingConfig.PipelineMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2250);
  }
  return result;
}

unint64_t sub_240144C14()
{
  unint64_t result;

  result = qword_256FC2258;
  if (!qword_256FC2258)
  {
    result = MEMORY[0x24267E0BC](&unk_240160200, &type metadata for DKIntelligentTrackingConfig.PipelineMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2258);
  }
  return result;
}

uint64_t sub_240144C58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x657069506C6C7566 && a2 == 0xEC000000656E696CLL;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657069506574696CLL && a2 == 0xEC000000656E696CLL || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x657265666E496F6ELL && a2 == 0xEB0000000065636ELL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t DKLogVideoRecorder.__allocating_init(url:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  swift_allocObject();
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24010E068;
  return DKLogVideoRecorder.init(url:)(a1);
}

uint64_t DKLogVideoRecorder.init(url:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[24] = a1;
  v2[25] = v1;
  v3 = sub_2401541D8();
  v2[26] = v3;
  v2[27] = *(_QWORD *)(v3 - 8);
  v2[28] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240144EB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;

  v2 = *(_QWORD *)(v0 + 216);
  v1 = *(_QWORD *)(v0 + 224);
  v3 = *(_QWORD *)(v0 + 208);
  v4 = *(_QWORD *)(v0 + 192);
  *(_BYTE *)(*(_QWORD *)(v0 + 200) + 32) = 0;
  sub_2401544B4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  v5 = (void *)*MEMORY[0x24BDB1C40];
  v6 = objc_allocWithZone(MEMORY[0x24BDB2400]);
  v7 = v5;
  v8 = sub_2401470FC(v1, (uint64_t)v7);

  v9 = *(_QWORD *)(v0 + 216);
  v11 = *(_QWORD *)(v0 + 200);
  v10 = *(_QWORD *)(v0 + 208);
  v12 = *(_QWORD *)(v0 + 192);
  *(_QWORD *)(v11 + 16) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC2270);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240155A50;
  *(_QWORD *)(inited + 32) = sub_24015464C();
  *(_QWORD *)(inited + 40) = v14;
  v15 = (void *)*MEMORY[0x24BDB2298];
  type metadata accessor for AVVideoCodecType(0);
  *(_QWORD *)(inited + 72) = v16;
  *(_QWORD *)(inited + 48) = v15;
  *(_QWORD *)(inited + 80) = sub_24015464C();
  *(_QWORD *)(inited + 88) = v17;
  v18 = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 120) = MEMORY[0x24BEE1768];
  *(_QWORD *)(inited + 96) = 1920;
  *(_QWORD *)(inited + 128) = sub_24015464C();
  *(_QWORD *)(inited + 136) = v19;
  *(_QWORD *)(inited + 168) = v18;
  *(_QWORD *)(inited + 144) = 1080;
  v20 = v15;
  sub_24010657C(inited);
  v21 = (void *)*MEMORY[0x24BDB1D50];
  v22 = objc_allocWithZone(MEMORY[0x24BDB2408]);
  v23 = v21;
  v24 = (void *)sub_240154544();
  swift_bridgeObjectRelease();
  v25 = objc_msgSend(v22, sel_initWithMediaType_outputSettings_, v23, v24);

  *(_QWORD *)(v11 + 24) = v25;
  objc_msgSend(*(id *)(v11 + 16), sel_addInput_, v25);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v10);
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 200));
}

uint64_t sub_240145190()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = v0;
  return swift_task_switch();
}

uint64_t sub_2401451A8()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[15];
  objc_msgSend(*(id *)(v1 + 24), sel_markAsFinished);
  v2 = *(void **)(v1 + 16);
  v0[16] = v2;
  v0[2] = v0;
  v0[3] = sub_24014524C;
  v3 = swift_continuation_init();
  v0[10] = MEMORY[0x24BDAC760];
  v4 = v0 + 10;
  v4[1] = 0x40000000;
  v4[2] = sub_24014533C;
  v4[3] = &block_descriptor_0;
  v4[4] = v3;
  objc_msgSend(v2, sel_finishWritingWithCompletionHandler_, v4);
  return swift_continuation_await();
}

uint64_t sub_24014524C()
{
  return swift_task_switch();
}

uint64_t sub_240145298()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 120);

  if (objc_msgSend(*(id *)(v1 + 16), sel_status) != (id)2)
  {
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v2 = 0xD000000000000014;
    *(_QWORD *)(v2 + 8) = 0x8000000240166420;
    *(_BYTE *)(v2 + 16) = 0;
    swift_willThrow();
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24014533C()
{
  return swift_continuation_resume();
}

void sub_240145344(__CVBuffer *a1, Float64 a2)
{
  uint64_t v2;
  CMSampleBufferRef v3;
  CMSampleBufferRef v4;

  v3 = sub_240147220(a1, a2);
  if (v3)
  {
    v4 = v3;
    objc_msgSend(*(id *)(v2 + 24), sel_appendSampleBuffer_);

  }
}

uint64_t DKLogVideoRecorder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKLogVideoRecorder_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKLogVideoRecorder.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKLogVideoRecorder_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t DKLogKeyframeRecorder.__allocating_init(logFolder:startTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  swift_allocObject();
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_240114398;
  return DKLogKeyframeRecorder.init(logFolder:startTime:)(a1, a2);
}

uint64_t DKLogKeyframeRecorder.init(logFolder:startTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v4 = sub_24015449C();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  v5 = sub_2401541D8();
  v3[9] = v5;
  v3[10] = *(_QWORD *)(v5 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  v3[13] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240145588()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  void (*v14)(uint64_t, uint64_t);
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;

  v1 = v0[13];
  v3 = v0[9];
  v2 = v0[10];
  v5 = v0[7];
  v4 = v0[8];
  v6 = v0[5];
  v17 = v0[6];
  v18 = v0[12];
  v7 = v0[3];
  v8 = v0[4];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_keyframes) = MEMORY[0x24BEE4AF8];
  sub_2401544B4();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe) = 0;
  v9 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_videoLogger;
  v0[14] = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_videoLogger;
  *(_QWORD *)(v6 + v9) = 0;
  v10 = v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_startTime;
  v11 = sub_240154310();
  v0[15] = v11;
  v12 = *(_QWORD *)(v11 - 8);
  v0[16] = v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v10, v8, v11);
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v13(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logFolder, v7, v3);
  sub_240154484();
  sub_24015419C();
  v14 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v0[17] = v14;
  v14(v4, v17);
  v13(v18, v1, v3);
  type metadata accessor for DKLogVideoRecorder(0);
  swift_allocObject();
  v15 = (_QWORD *)swift_task_alloc();
  v0[18] = v15;
  *v15 = v0;
  v15[1] = sub_240145768;
  return DKLogVideoRecorder.init(url:)(v0[12]);
}

uint64_t sub_240145768(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 160) = a1;
  return swift_task_switch();
}

uint64_t sub_240145820()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);

  v1 = *(void (**)(uint64_t, uint64_t))(v0 + 136);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 48);
  *(_QWORD *)(*(_QWORD *)(v0 + 40) + *(_QWORD *)(v0 + 112)) = *(_QWORD *)(v0 + 160);
  swift_release();
  sub_240154490();
  sub_24015419C();
  v1(v2, v3);
  v4 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v5 = (void *)sub_240154190();
  *(_QWORD *)(v0 + 16) = 0;
  LODWORD(v3) = objc_msgSend(v4, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v5, 0, 0, v0 + 16);

  v6 = *(void **)(v0 + 16);
  if ((_DWORD)v3)
  {
    v7 = v6;
  }
  else
  {
    v8 = v6;
    v9 = (void *)sub_240154160();

    swift_willThrow();
  }
  v10 = *(_QWORD *)(v0 + 104);
  v12 = *(_QWORD *)(v0 + 80);
  v11 = *(_QWORD *)(v0 + 88);
  v13 = *(_QWORD *)(v0 + 72);
  v14 = *(_QWORD *)(v0 + 24);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 128) + 8))(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 120));
  v15 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v15(v14, v13);
  v15(v11, v13);
  v15(v10, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_2401459EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 104);
  v4 = *(_QWORD *)(v0 + 80);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 32);
  v7 = *(_QWORD *)(v0 + 24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v1);
  v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(v7, v5);
  v8(v3, v5);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240145AD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v1[3] = v0;
  v2 = sub_24015449C();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v3 = sub_2401541D8();
  v1[7] = v3;
  v1[8] = *(_QWORD *)(v3 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240145B68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_keyframes;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_keyframes);
  if (!(v3 >> 62))
  {
    if (*(uint64_t *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10) < 1)
      goto LABEL_5;
    goto LABEL_3;
  }
  swift_bridgeObjectRetain();
  v13 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (v13 >= 1)
  {
LABEL_3:
    sub_240154094();
    swift_allocObject();
    sub_240154088();
    *(_QWORD *)(v0 + 16) = *(_QWORD *)(v1 + v2);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBE710);
    sub_240147318();
    v4 = sub_24015407C();
    v6 = v5;
    v7 = *(_QWORD *)(v0 + 72);
    v8 = *(_QWORD *)(v0 + 56);
    v9 = *(_QWORD *)(v0 + 64);
    v10 = *(_QWORD *)(v0 + 48);
    v17 = *(_QWORD *)(v0 + 40);
    v11 = *(_QWORD *)(v0 + 24);
    v18 = *(_QWORD *)(v0 + 32);
    v19 = v4;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v11 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logFolder, v8);
    sub_240154484();
    sub_24015419C();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v10, v18);
    v12 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v12(v7, v8);
    sub_24015425C();
    v12(*(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 56));
    sub_240075D14(v19, v6);
    swift_release();
  }
LABEL_5:
  v14 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_videoLogger);
  *(_QWORD *)(v0 + 88) = v14;
  if (v14)
  {
    swift_retain();
    v15 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v15;
    *v15 = v0;
    v15[1] = sub_240145E18;
    v15[15] = v14;
    return swift_task_switch();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_240145E18()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 104) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240145E7C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240145ECC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240145F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;

  v1 = v0;
  v2 = sub_240154310();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe;
  if (!*(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe))
    goto LABEL_4;
  v7 = (_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_keyframes);
  v8 = swift_retain_n();
  MEMORY[0x24267D0CC](v8);
  if (*(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    goto LABEL_7;
  while (1)
  {
    sub_240154814();
    sub_2401547B4();
    swift_release();
LABEL_4:
    sub_2401542F8();
    type metadata accessor for DKKeyframeStorage(0);
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x24BEE4AF8];
    v10 = (_QWORD *)(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
    *v10 = 0;
    v10[1] = 0;
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v5, v2);
    *v10 = 0;
    v10[1] = 0;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + v6) = v9;
    result = swift_release();
    v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex);
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (!v13)
      break;
    __break(1u);
LABEL_7:
    sub_2401547D8();
  }
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex) = v14;
  return result;
}

uint64_t sub_2401460A4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  _QWORD *v4;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe))
  {
    v2 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EE0);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_240156510;
    sub_24008BA98(v2, inited + 32);
    swift_retain();
    v4 = _s23IntelligentTrackingCore17DKKeyframeStorageC7convert4logsSayAA12DKLogCodableOGSayAA10DKLoggable_pG_tFZ_0(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EE8);
    swift_arrayDestroy();
    sub_240095514((uint64_t)v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_240146170(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe))
  {
    v2 = result;
    swift_retain();
    v3 = _s23IntelligentTrackingCore17DKKeyframeStorageC7convert4logsSayAA12DKLogCodableOGSayAA10DKLoggable_pG_tFZ_0(v2);
    sub_240095514((uint64_t)v3);
    return swift_release();
  }
  return result;
}

uint64_t sub_2401461DC(__CVBuffer *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t, uint64_t, double);
  void (*v21)(char *, uint64_t);
  char *v22;
  __CVBuffer *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  double v37;
  Float64 v38;
  void (*v39)(char *, uint64_t);
  CMSampleBufferRef v40;
  CMSampleBufferRef v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __CVBuffer *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;

  v51 = a1;
  v2 = sub_240154310();
  v47 = *(_QWORD *)(v2 - 8);
  v48 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v46 = (char *)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v45 = (char *)&v43 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_24015449C();
  v9 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2401541D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v43 - v18;
  v49 = v1;
  v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16);
  v20(v15, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logFolder, v12, v17);
  v53 = 0x2F6567616D69;
  v54 = 0xE600000000000000;
  v44 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex;
  v52 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframeIndex);
  sub_240154EBC();
  sub_2401546D0();
  swift_bridgeObjectRelease();
  sub_2401546D0();
  sub_240154484();
  sub_24015419C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v50);
  v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22 = v15;
  v23 = v51;
  v21(v22, v12);
  ((void (*)(char *, char *, uint64_t))v20)(v8, v19, v12);
  v24 = v49;
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(v23, (uint64_t)v8);
  v26 = v25;
  sub_240076FF8((uint64_t)v8);
  if (v26)
  {
    swift_bridgeObjectRelease();
    v27 = *(_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe);
    if (v27)
    {
      v53 = *(_QWORD *)(v24 + v44);
      swift_retain();
      v28 = sub_240154EBC();
      v29 = (uint64_t *)(v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
      *v29 = v28;
      v29[1] = v30;
      swift_release();
      swift_bridgeObjectRelease();
    }
  }
  v31 = *(_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_videoLogger);
  if (v31)
  {
    swift_retain();
    v32 = v45;
    sub_240154304();
    v33 = v24 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_startTime;
    v35 = v46;
    v34 = v47;
    v36 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v33, v48);
    sub_24015428C();
    v38 = v37;
    v39 = *(void (**)(char *, uint64_t))(v34 + 8);
    v39(v35, v36);
    v39(v32, v36);
    v40 = sub_240147220(v23, v38);
    if (v40)
    {
      v41 = v40;
      objc_msgSend(*(id *)(v31 + 24), sel_appendSampleBuffer_, v40);
      swift_release();

    }
    else
    {
      swift_release();
    }
  }
  return ((uint64_t (*)(char *, uint64_t))v21)(v19, v12);
}

uint64_t DKLogKeyframeRecorder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logFolder;
  v2 = sub_2401541D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_startTime;
  v4 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v5 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logger;
  v6 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKLogKeyframeRecorder.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logFolder;
  v2 = sub_2401541D8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_startTime;
  v4 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  v5 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_logger;
  v6 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t DKLogRecorder.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  sub_2401544B4();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLogRecorder_keyframeLogger) = 0;
  return v0;
}

uint64_t DKLogRecorder.init()()
{
  uint64_t v0;

  sub_2401544B4();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLogRecorder_keyframeLogger) = 0;
  return v0;
}

uint64_t sub_2401467FC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for DKLoggerMetafile(0);
  v2[5] = swift_task_alloc();
  v3 = sub_240154310();
  v2[6] = v3;
  v2[7] = *(_QWORD *)(v3 - 8);
  v2[8] = swift_task_alloc();
  v2[9] = swift_task_alloc();
  v4 = sub_24015449C();
  v2[10] = v4;
  v2[11] = *(_QWORD *)(v4 - 8);
  v2[12] = swift_task_alloc();
  v5 = sub_2401541D8();
  v2[13] = v5;
  v2[14] = *(_QWORD *)(v5 - 8);
  v2[15] = swift_task_alloc();
  v2[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2401468F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  _QWORD *v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0[13];
  v2 = v0[14];
  v4 = v0[11];
  v3 = v0[12];
  v6 = v0[9];
  v5 = v0[10];
  v7 = v0[7];
  v14 = v0[8];
  v12 = v0[15];
  v13 = v0[6];
  v8 = v0[2];
  sub_240154484();
  sub_24015419C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_2401542F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v12, v8, v1);
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v0[17] = v9;
  v9(v14, v6, v13);
  type metadata accessor for DKLogKeyframeRecorder(0);
  swift_allocObject();
  v10 = (_QWORD *)swift_task_alloc();
  v0[18] = v10;
  *v10 = v0;
  v10[1] = sub_240146A0C;
  return DKLogKeyframeRecorder.init(logFolder:startTime:)(v0[15], v0[8]);
}

uint64_t sub_240146A0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 152) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 160) = a1;
  return swift_task_switch();
}

uint64_t sub_240146A80()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v1 = *(_QWORD *)(v0 + 152);
  v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v7 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v0 + 40);
  *(_QWORD *)(*(_QWORD *)(v0 + 24) + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLogRecorder_keyframeLogger) = *(_QWORD *)(v0 + 160);
  swift_release();
  sub_240154094();
  swift_allocObject();
  sub_240154088();
  v2(v6, v3, v4);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v6, 0, 1, v4);
  *(_OWORD *)(v6 + *(int *)(v7 + 20)) = xmmword_2401603D0;
  *(_OWORD *)(v6 + *(int *)(v7 + 24)) = xmmword_2401603E0;
  sub_2400707A8((unint64_t *)&unk_256FC22B0, type metadata accessor for DKLoggerMetafile, (uint64_t)&protocol conformance descriptor for DKLoggerMetafile);
  v8 = sub_24015407C();
  if (v1)
  {
    v10 = *(_QWORD *)(v0 + 40);
    swift_release();
    sub_2400D0248(v10);
    v11 = *(_QWORD *)(v0 + 128);
    v12 = *(_QWORD *)(v0 + 104);
    v13 = *(_QWORD *)(v0 + 112);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  else
  {
    v14 = v8;
    v15 = v9;
    v16 = *(_QWORD *)(v0 + 128);
    v17 = *(_QWORD *)(v0 + 112);
    v22 = *(_QWORD *)(v0 + 104);
    v18 = *(_QWORD *)(v0 + 72);
    v20 = *(_QWORD *)(v0 + 48);
    v19 = *(_QWORD *)(v0 + 56);
    sub_2400D0248(*(_QWORD *)(v0 + 40));
    sub_24015425C();
    sub_240075D14(v14, v15);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v22);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240146CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 56) + 8))(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 48));
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240146D64()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_240146D7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLogRecorder_keyframeLogger);
  *(_QWORD *)(v0 + 24) = v1;
  if (!v1)
    return (*(uint64_t (**)(void))(v0 + 8))();
  swift_retain();
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 32) = v2;
  *v2 = v0;
  v2[1] = sub_240146DF8;
  return sub_240145AD0();
}

uint64_t sub_240146DF8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_240146E5C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240146E90()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240146EC4()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLogRecorder_keyframeLogger))
  {
    swift_retain();
    sub_240145F24();
    return swift_release();
  }
  return result;
}

uint64_t sub_240146F08(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  _QWORD *v5;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLogRecorder_keyframeLogger);
  if (v2)
  {
    if (*(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKLogKeyframeRecorder_currentKeyframe))
    {
      v3 = result;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EE0);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_240156510;
      sub_24008BA98(v3, inited + 32);
      swift_retain();
      swift_retain();
      v5 = _s23IntelligentTrackingCore17DKKeyframeStorageC7convert4logsSayAA12DKLogCodableOGSayAA10DKLoggable_pG_tFZ_0(inited);
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EE8);
      swift_arrayDestroy();
      sub_240095514((uint64_t)v5);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_240146FFC(uint64_t result)
{
  uint64_t v1;
  __CVBuffer *v2;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLogRecorder_keyframeLogger))
  {
    v2 = (__CVBuffer *)result;
    swift_retain();
    sub_2401461DC(v2);
    return swift_release();
  }
  return result;
}

uint64_t DKLogRecorder.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLogRecorder_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t DKLogRecorder.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKLogRecorder_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return swift_deallocClassInstance();
}

id sub_2401470FC(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  id v11;
  id v12;
  uint64_t v13;
  id v15[2];

  v3 = v2;
  v15[1] = *(id *)MEMORY[0x24BDAC8D0];
  v6 = (void *)sub_240154190();
  v15[0] = 0;
  v7 = objc_msgSend(v3, sel_initWithURL_fileType_error_, v6, a2, v15);

  v8 = v15[0];
  if (v7)
  {
    v9 = sub_2401541D8();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v11 = v8;
    v10(a1, v9);
  }
  else
  {
    v12 = v15[0];
    sub_240154160();

    swift_willThrow();
    v13 = sub_2401541D8();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

uint64_t type metadata accessor for DKLogVideoRecorder(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FC22E8);
}

CMSampleBufferRef sub_240147220(__CVBuffer *a1, Float64 a2)
{
  CMTimeValue value;
  CMTimeEpoch epoch;
  CMTimeScale v5;
  CMTimeFlags v6;
  CMTimeEpoch v7;
  const __CFAllocator *v8;
  CMVideoFormatDescriptionRef v9;
  CMSampleBufferRef v10;
  CMSampleTimingInfo v12;
  CMSampleBufferRef sampleBufferOut;
  CMVideoFormatDescriptionRef formatDescriptionOut[2];

  formatDescriptionOut[1] = *(CMVideoFormatDescriptionRef *)MEMORY[0x24BDAC8D0];
  CMTimeMakeWithSeconds(&v12.duration, a2, 30);
  value = v12.duration.value;
  epoch = v12.duration.epoch;
  *(_QWORD *)&v12.presentationTimeStamp.timescale = *(_QWORD *)&v12.duration.timescale;
  v5 = *(_DWORD *)(MEMORY[0x24BDC0D40] + 8);
  v6 = *(_DWORD *)(MEMORY[0x24BDC0D40] + 12);
  v7 = *(_QWORD *)(MEMORY[0x24BDC0D40] + 16);
  v12.duration.value = *MEMORY[0x24BDC0D40];
  v12.duration.timescale = v5;
  v12.duration.flags = v6;
  v12.duration.epoch = v7;
  v12.presentationTimeStamp.value = value;
  v12.presentationTimeStamp.epoch = epoch;
  v12.decodeTimeStamp.value = v12.duration.value;
  v12.decodeTimeStamp.timescale = v5;
  v12.decodeTimeStamp.flags = v6;
  v12.decodeTimeStamp.epoch = v7;
  formatDescriptionOut[0] = 0;
  v8 = (const __CFAllocator *)*MEMORY[0x24BDBD240];
  CMVideoFormatDescriptionCreateForImageBuffer((CFAllocatorRef)*MEMORY[0x24BDBD240], a1, formatDescriptionOut);
  v9 = formatDescriptionOut[0];
  sampleBufferOut = 0;
  if (!formatDescriptionOut[0])
    return 0;
  CMSampleBufferCreateReadyWithImageBuffer(v8, a1, formatDescriptionOut[0], &v12, &sampleBufferOut);
  v10 = sampleBufferOut;

  return v10;
}

unint64_t sub_240147318()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FC2298;
  if (!qword_256FC2298)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FBE710);
    v2 = sub_2400707A8((unint64_t *)&unk_256FC22A0, type metadata accessor for DKKeyframeStorage, (uint64_t)&protocol conformance descriptor for DKKeyframeStorage);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FC2298);
  }
  return result;
}

uint64_t type metadata accessor for DKLogKeyframeRecorder(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FC2420);
}

uint64_t sub_2401473A8()
{
  return type metadata accessor for DKLogVideoRecorder(0);
}

uint64_t sub_2401473B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2401544C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKLogVideoRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKLogVideoRecorder.__allocating_init(url:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 184) + *(_QWORD *)(v1 + 184));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240113D7C;
  return v6(a1);
}

uint64_t dispatch thunk of DKLogVideoRecorder.save()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 192) + *(_QWORD *)(*(_QWORD *)v0 + 192));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240086C70;
  return v4();
}

uint64_t dispatch thunk of DKLogVideoRecorder.log(image:duration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKLogVideoRecorder.getCMSampleBuffer(pixelBuffer:duration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_240147514()
{
  return type metadata accessor for DKLogKeyframeRecorder(0);
}

uint64_t sub_24014751C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_2401541D8();
  if (v1 <= 0x3F)
  {
    result = sub_240154310();
    if (v2 <= 0x3F)
    {
      result = sub_2401544C0();
      if (v3 <= 0x3F)
        return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for DKLogKeyframeRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKLogKeyframeRecorder.__allocating_init(logFolder:startTime:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  v8 = (uint64_t (*)(uint64_t, uint64_t))(**(int **)(v2 + 280) + *(_QWORD *)(v2 + 280));
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v6;
  *v6 = v3;
  v6[1] = sub_24011439C;
  return v8(a1, a2);
}

uint64_t dispatch thunk of DKLogKeyframeRecorder.save()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 288) + *(_QWORD *)(*(_QWORD *)v0 + 288));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240086C70;
  return v4();
}

uint64_t dispatch thunk of DKLogKeyframeRecorder.addNewKeyframe()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKLogKeyframeRecorder.log(item:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKLogKeyframeRecorder.log(items:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKLogKeyframeRecorder.log(image:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t sub_2401476E0()
{
  return type metadata accessor for DKLogRecorder(0);
}

uint64_t type metadata accessor for DKLogRecorder(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FC25C8);
}

uint64_t sub_2401476FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2401544C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKLogRecorder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKLogRecorder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of DKLogRecorder.startRecording(logFolder:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 128) + *(_QWORD *)(*(_QWORD *)v1 + 128));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086C70;
  return v6(a1);
}

uint64_t dispatch thunk of DKLogRecorder.saveRecording()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 136) + *(_QWORD *)(*(_QWORD *)v0 + 136));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_24008670C;
  return v4();
}

uint64_t dispatch thunk of DKLogRecorder.addNewKeyframe()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKLogRecorder.log(item:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKLogRecorder.log(image:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t DKBoundingBoxFilter.__allocating_init(alpha:)(double a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKBoundingBoxFilter.init(alpha:)(a1);
  return v2;
}

void sub_2401478A8(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  double v4;
  double v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  double v11;
  char v12;
  double v13;

  v3 = v1[2];
  v4 = 0.0;
  if (*(_BYTE *)(v3 + 33) == 1
    && (*(_BYTE *)(v3 + 32) != 1
      ? (v5 = *(double *)(v3 + 40))
      : (v5 = atan2(*(long double *)(v3 + 48), *(long double *)(v3 + 56))),
        (v6 = v1[3], *(_BYTE *)(v6 + 33) == 1)
     && (*(_BYTE *)(v6 + 32) != 1
       ? (v7 = *(double *)(v6 + 40))
       : (v7 = atan2(*(long double *)(v6 + 48), *(long double *)(v6 + 56))),
         (v8 = v1[4], *(_BYTE *)(v8 + 33) == 1)
      && (*(_BYTE *)(v8 + 32) != 1
        ? (v9 = *(double *)(v8 + 40))
        : (v9 = atan2(*(long double *)(v8 + 48), *(long double *)(v8 + 56))),
          v10 = v1[5],
          *(_BYTE *)(v10 + 33) == 1))))
  {
    if (*(_BYTE *)(v10 + 32) == 1)
      v11 = atan2(*(long double *)(v10 + 48), *(long double *)(v10 + 56));
    else
      v11 = *(double *)(v10 + 40);
    v12 = 0;
    v4 = v5 - v9 * 0.5;
    v13 = v7 - v11 * 0.5;
  }
  else
  {
    v12 = 1;
    v13 = 0.0;
    v9 = 0.0;
    v11 = 0.0;
  }
  *(double *)a1 = v4;
  *(double *)(a1 + 8) = v13;
  *(double *)(a1 + 16) = v9;
  *(double *)(a1 + 24) = v11;
  *(_BYTE *)(a1 + 32) = v12;
}

uint64_t DKBoundingBoxFilter.init(alpha:)(double a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  void (*v7)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_BYTE *)(v1 + 80) = 1;
  v6 = sub_240154310();
  v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  type metadata accessor for DKSmoothingFilter();
  v8 = swift_allocObject();
  *(_BYTE *)(v8 + 33) = 0;
  *(_QWORD *)(v8 + 40) = 0;
  *(_QWORD *)(v8 + 48) = 0;
  *(_QWORD *)(v8 + 56) = 0x3FF0000000000000;
  v9 = v8 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v7((char *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v6);
  v10 = v8 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = v8 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  *(_BYTE *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(double *)(v8 + 16) = a1;
  *(double *)(v8 + 24) = a1;
  *(_BYTE *)(v8 + 32) = 0;
  sub_24008FCD4((uint64_t)v5, v9);
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  *(_QWORD *)(v1 + 16) = v8;
  v7(v5, 1, 1, v6);
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 33) = 0;
  *(_QWORD *)(v12 + 40) = 0;
  *(_QWORD *)(v12 + 48) = 0;
  *(_QWORD *)(v12 + 56) = 0x3FF0000000000000;
  v13 = v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v7((char *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v6);
  v14 = v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  *(_BYTE *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(double *)(v12 + 16) = a1;
  *(double *)(v12 + 24) = a1;
  *(_BYTE *)(v12 + 32) = 0;
  sub_24008FCD4((uint64_t)v5, v13);
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  *(_QWORD *)(v1 + 24) = v12;
  v7(v5, 1, 1, v6);
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 33) = 0;
  *(_QWORD *)(v16 + 40) = 0;
  *(_QWORD *)(v16 + 48) = 0;
  *(_QWORD *)(v16 + 56) = 0x3FF0000000000000;
  v17 = v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v7((char *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v6);
  v18 = v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v18 = 0;
  *(_BYTE *)(v18 + 8) = 1;
  v19 = v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  *(_BYTE *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(double *)(v16 + 16) = a1;
  *(double *)(v16 + 24) = a1;
  *(_BYTE *)(v16 + 32) = 0;
  sub_24008FCD4((uint64_t)v5, v17);
  *(_QWORD *)v18 = 0;
  *(_BYTE *)(v18 + 8) = 1;
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  *(_QWORD *)(v1 + 32) = v16;
  v7(v5, 1, 1, v6);
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 33) = 0;
  *(_QWORD *)(v20 + 40) = 0;
  *(_QWORD *)(v20 + 48) = 0;
  *(_QWORD *)(v20 + 56) = 0x3FF0000000000000;
  v21 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v7((char *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v6);
  v22 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  v23 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  *(_BYTE *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(double *)(v20 + 16) = a1;
  *(double *)(v20 + 24) = a1;
  *(_BYTE *)(v20 + 32) = 0;
  sub_24008FCD4((uint64_t)v5, v21);
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  *(_QWORD *)v23 = 0;
  *(_BYTE *)(v23 + 8) = 1;
  *(_QWORD *)(v1 + 40) = v20;
  return v1;
}

uint64_t sub_240147D8C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double MidX;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  double MidY;
  double Width;
  double Height;
  uint64_t result;
  uint64_t v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  MidX = CGRectGetMidX(v20);
  v13 = sub_240154310();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v11, 1, 1, v13);
  sub_240148324(0, 1, (uint64_t)v11, MidX);
  swift_release();
  sub_240077EAC((uint64_t)v11);
  swift_retain();
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  MidY = CGRectGetMidY(v21);
  v14(v11, 1, 1, v13);
  sub_240148324(0, 1, (uint64_t)v11, MidY);
  swift_release();
  sub_240077EAC((uint64_t)v11);
  swift_retain();
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  Width = CGRectGetWidth(v22);
  v14(v11, 1, 1, v13);
  sub_240148324(0, 1, (uint64_t)v11, Width);
  swift_release();
  sub_240077EAC((uint64_t)v11);
  swift_retain();
  v23.origin.x = a1;
  v23.origin.y = a2;
  v23.size.width = a3;
  v23.size.height = a4;
  Height = CGRectGetHeight(v23);
  v14(v11, 1, 1, v13);
  sub_240148324(0, 1, (uint64_t)v11, Height);
  swift_release();
  result = sub_240077EAC((uint64_t)v11);
  *(CGFloat *)(v4 + 48) = a1;
  *(CGFloat *)(v4 + 56) = a2;
  *(CGFloat *)(v4 + 64) = a3;
  *(CGFloat *)(v4 + 72) = a4;
  *(_BYTE *)(v4 + 80) = 0;
  return result;
}

uint64_t DKBoundingBoxFilter.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKBoundingBoxFilter.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKBoundingBoxFilter()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKBoundingBoxFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKBoundingBoxFilter.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKBoundingBoxFilter.__allocating_init(alpha:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t dispatch thunk of DKBoundingBoxFilter.update(rect:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t DKSmoothingFilter.__allocating_init(value:alpha:beta:isAngle:lastUpdated:lowThreshold:highThreshold:initialBooleanValue:)(uint64_t a1, char a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, char a8, double a9, uint64_t a10, char a11)
{
  char v16;
  char v17;
  char v18;

  v16 = a2 & 1;
  v17 = a4 & 1;
  v18 = a8 & 1;
  swift_allocObject();
  return sub_240148668(a1, v16, a3, v17, a5, a6, a7, v18, a9, a10, a11 & 1);
}

uint64_t sub_240148124()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 33) != 1)
    return 0;
  if (*(_BYTE *)(v0 + 32) == 1)
    return atan2(*(long double *)(v0 + 48), *(long double *)(v0 + 56));
  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_240148174()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_24014817C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 33) = result;
  return result;
}

uint64_t (*sub_240148184())()
{
  return nullsub_1;
}

uint64_t sub_240148194(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24008BFDC(a1, (uint64_t)v6);
  return sub_24008FCD4((uint64_t)v6, *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated);
}

uint64_t sub_24014821C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24008BFDC(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, a1);
}

uint64_t sub_240148230(uint64_t a1)
{
  uint64_t v1;

  return sub_24008FCD4(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated);
}

uint64_t (*sub_240148240())()
{
  return nullsub_1;
}

uint64_t sub_240148258()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold);
}

uint64_t sub_240148270(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_24014828C())()
{
  return nullsub_1;
}

uint64_t sub_2401482A4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold);
}

uint64_t sub_2401482BC(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2401482D8())()
{
  return nullsub_1;
}

uint64_t sub_2401482F0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue);
}

uint64_t DKSmoothingFilter.init(value:alpha:beta:isAngle:lastUpdated:lowThreshold:highThreshold:initialBooleanValue:)(uint64_t a1, char a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, char a8, double a9, uint64_t a10, char a11)
{
  return sub_240148668(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8 & 1, a9, a10, a11 & 1);
}

void sub_240148324(uint64_t a1, char a2, uint64_t a3, double a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  char *v17;
  int v18;
  double v19;
  __double2 v20;
  uint64_t v21;
  double v22;
  double v23;
  double v24;
  char v25;
  __int128 v26;
  __int128 v27;

  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_240154310();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(unsigned __int8 *)(v4 + 32);
  if (*(_BYTE *)(v4 + 33) != 1)
  {
    if (*(_BYTE *)(v4 + 32))
      *(__double2 *)(v4 + 48) = __sincos_stret(a4);
    else
      *(double *)(v4 + 40) = a4;
    goto LABEL_15;
  }
  if (*(_BYTE *)(v4 + 32))
  {
    v19 = atan2(*(long double *)(v4 + 48), *(long double *)(v4 + 56));
    if ((a2 & 1) != 0)
      goto LABEL_4;
  }
  else
  {
    v19 = *(double *)(v4 + 40);
    if ((a2 & 1) != 0)
    {
LABEL_4:
      if (fabs(v19) >= fabs(a4))
        *(_QWORD *)&v14 = *(_QWORD *)(v4 + 24);
      else
        *(_QWORD *)&v14 = *(_QWORD *)(v4 + 16);
      goto LABEL_12;
    }
  }
  *(_QWORD *)&v14 = a1;
LABEL_12:
  *(double *)&v15 = 1.0 - *(double *)&v14;
  if (v18)
  {
    v26 = v14;
    v27 = v15;
    v20 = __sincos_stret(a4);
    *(float64x2_t *)(v4 + 48) = vaddq_f64(vmulq_n_f64((float64x2_t)v20, *(double *)&v26), vmulq_n_f64(*(float64x2_t *)(v4 + 48), *(double *)&v27));
  }
  else
  {
    *(double *)(v4 + 40) = *(double *)&v14 * a4 + *(double *)&v15 * *(double *)(v4 + 40);
  }
LABEL_15:
  *(_BYTE *)(v4 + 33) = 1;
  sub_24008BFDC(a3, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_240077EAC((uint64_t)v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    v21 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    sub_240077EAC(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated);
    (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v21, v17, v12);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  }
  if ((*(_BYTE *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold + 8) & 1) == 0
    && (*(_BYTE *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold + 8) & 1) == 0
    && *(_BYTE *)(v4 + 33) == 1)
  {
    v22 = *(double *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold);
    v23 = *(double *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold);
    if (*(_BYTE *)(v4 + 32) == 1)
    {
      v24 = atan2(*(long double *)(v4 + 48), *(long double *)(v4 + 56));
      if (v24 >= v22)
      {
LABEL_23:
        if (v23 >= v24)
          return;
        v25 = 1;
        goto LABEL_27;
      }
    }
    else
    {
      v24 = *(double *)(v4 + 40);
      if (v24 >= v22)
        goto LABEL_23;
    }
    v25 = 0;
LABEL_27:
    *(_BYTE *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = v25;
  }
}

uint64_t sub_2401485C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v0 + 33) = 0;
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  sub_240077EAC(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated);
  v2 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t DKSmoothingFilter.deinit()
{
  uint64_t v0;

  sub_240077EAC(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated);
  return v0;
}

uint64_t DKSmoothingFilter.__deallocating_deinit()
{
  uint64_t v0;

  sub_240077EAC(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated);
  return swift_deallocClassInstance();
}

uint64_t sub_240148668(uint64_t a1, char a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, char a8, double a9, uint64_t a10, char a11)
{
  uint64_t v11;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;

  *(_BYTE *)(v11 + 33) = 0;
  *(_QWORD *)(v11 + 40) = 0;
  *(_QWORD *)(v11 + 48) = 0;
  *(_QWORD *)(v11 + 56) = 0x3FF0000000000000;
  v17 = v11 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v18 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  v19 = v11 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  v20 = v11 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  *(_BYTE *)(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  v21 = *(double *)&a3;
  if ((a4 & 1) != 0)
    v21 = a9;
  *(double *)(v11 + 16) = a9;
  *(double *)(v11 + 24) = v21;
  *(_BYTE *)(v11 + 32) = a5;
  if ((a2 & 1) == 0)
  {
    if ((a5 & 1) != 0)
      *(__double2 *)(v11 + 48) = __sincos_stret(*(double *)&a1);
    else
      *(_QWORD *)(v11 + 40) = a1;
    *(_BYTE *)(v11 + 33) = 1;
  }
  sub_24008FCD4(a6, v17);
  *(_QWORD *)v19 = a7;
  *(_BYTE *)(v19 + 8) = a8 & 1;
  *(_QWORD *)v20 = a10;
  *(_BYTE *)(v20 + 8) = a11 & 1;
  return v11;
}

double sub_2401487D4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 16);
  *a2 = result;
  return result;
}

double sub_2401487E4(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 16) = *a1;
  return result;
}

double sub_2401487F4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 24);
  *a2 = result;
  return result;
}

double sub_240148804(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 24) = *a1;
  return result;
}

uint64_t sub_240148814@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 32);
  return result;
}

_BYTE *sub_240148824(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 32) = *result;
  return result;
}

uint64_t sub_240148834@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 33);
  return result;
}

_BYTE *sub_240148844(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 33) = *result;
  return result;
}

double sub_240148854@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 40);
  *a2 = result;
  return result;
}

double sub_240148864(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 40) = *a1;
  return result;
}

double sub_240148874@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 48);
  *a2 = result;
  return result;
}

double sub_240148884(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 48) = *a1;
  return result;
}

double sub_240148894@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 56);
  *a2 = result;
  return result;
}

double sub_2401488A4(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 56) = *a1;
  return result;
}

uint64_t sub_2401488B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24008BFDC(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, a2);
}

_QWORD *sub_2401488D0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2401488F4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold);
}

_QWORD *sub_240148900@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_240148924(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold);
}

_QWORD *sub_240148930@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue);
  return result;
}

_BYTE *sub_240148948(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = *result;
  return result;
}

uint64_t sub_240148960()
{
  return type metadata accessor for DKSmoothingFilter();
}

uint64_t type metadata accessor for DKSmoothingFilter()
{
  uint64_t result;

  result = qword_256FC2818;
  if (!qword_256FC2818)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2401489A4()
{
  unint64_t v0;

  sub_2400A15A8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for DKSmoothingFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKSmoothingFilter.alpha.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKSmoothingFilter.alpha.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKSmoothingFilter.alpha.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKSmoothingFilter.beta.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKSmoothingFilter.beta.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKSmoothingFilter.beta.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKSmoothingFilter.value.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKSmoothingFilter.isAngle.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKSmoothingFilter.isAngle.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKSmoothingFilter.isAngle.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKSmoothingFilter.isInitialized.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKSmoothingFilter.isInitialized.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKSmoothingFilter.isInitialized.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKSmoothingFilter._value.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKSmoothingFilter._value.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKSmoothingFilter._value.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKSmoothingFilter._valueSin.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKSmoothingFilter._valueSin.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKSmoothingFilter._valueSin.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKSmoothingFilter._valueCos.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKSmoothingFilter._valueCos.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKSmoothingFilter._valueCos.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKSmoothingFilter.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKSmoothingFilter.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKSmoothingFilter.lastUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKSmoothingFilter.lowThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKSmoothingFilter.lowThreshold.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 376))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKSmoothingFilter.lowThreshold.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKSmoothingFilter.highThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKSmoothingFilter.highThreshold.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 400))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKSmoothingFilter.highThreshold.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKSmoothingFilter.BOOLeanValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKSmoothingFilter.__allocating_init(value:alpha:beta:isAngle:lastUpdated:lowThreshold:highThreshold:initialBooleanValue:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9)
{
  uint64_t v9;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))(v9 + 440))(a1, a2 & 1, a3, a4 & 1, a5, a6, a7, a8 & 1, a9);
}

uint64_t dispatch thunk of DKSmoothingFilter.update(_:smoothingFactor:updateTime:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 448))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKSmoothingFilter.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t sub_240148C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v11 - v6;
  *(_OWORD *)(v1 + 56) = xmmword_2401605C0;
  *(_QWORD *)(v1 + 72) = 0x3FB999999999999ALL;
  v8 = sub_240154310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  *(_BYTE *)(v1 + 49) = 0;
  *(_QWORD *)(v1 + 24) = 0x3FE0000000000000;
  sub_24008BFDC((uint64_t)v7, (uint64_t)v4);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  v9 = sub_240148668(0x3FE0000000000000, 0, 0x3FB999999999999ALL, 0, 0, (uint64_t)v4, 0, 1, 0.1, 0, 1);
  sub_240077EAC((uint64_t)v7);
  *(_QWORD *)(v1 + 16) = v9;
  *(_QWORD *)(v1 + 32) = 0x3FE0000000000000;
  *(_QWORD *)(v1 + 40) = 0;
  *(_BYTE *)(v1 + 48) = 1;
  return v1;
}

void sub_240148DD0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_240148DFC()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKPersonRankingFilter()
{
  return objc_opt_self();
}

Swift::Double __swiftcall wrapAngle(_:)(Swift::Double result)
{
  for (; result > 3.14159265; result = result + -6.28318531)
    ;
  for (; result < -3.14159265; result = result + 6.28318531)
    ;
  return result;
}

Swift::Double __swiftcall clamp(value:minValue:maxValue:)(Swift::Double value, Swift::Double minValue, Swift::Double maxValue)
{
  if (minValue > value)
    value = minValue;
  if (value > maxValue)
    return maxValue;
  return value;
}

uint64_t FloatingPoint.toRadians()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];

  v13[1] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v13 - v9;
  sub_2401545B0();
  sub_2401548E0();
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, a1);
  swift_getAssociatedConformanceWitness();
  sub_240154F34();
  sub_240154EEC();
  sub_2401545A4();
  v11(v7, a1);
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, a1);
}

Swift::Double __swiftcall wrapAngle(_:around:)(Swift::Double _, Swift::Double around)
{
  double i;

  for (; around + 3.14159265 < _; _ = _ + -6.28318531)
    ;
  for (i = around + -3.14159265; _ < i; _ = _ + 6.28318531)
    ;
  return _;
}

Swift::Double __swiftcall handleZero(_:eps:)(Swift::Double _, Swift::Double eps)
{
  if (fabs(_) < eps)
  {
    if (_ <= 0.0)
      return -eps;
    else
      return eps;
  }
  return _;
}

uint64_t FloatingPoint.toDegrees()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void (*v11)(char *, uint64_t);
  _QWORD v13[2];

  v13[1] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v4 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v13 - v9;
  swift_getAssociatedConformanceWitness();
  sub_240154F34();
  sub_240154EEC();
  sub_2401548E0();
  v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, a1);
  sub_2401545B0();
  sub_2401545A4();
  v11(v7, a1);
  return ((uint64_t (*)(char *, uint64_t))v11)(v10, a1);
}

uint64_t FloatingPoint.isEqual(to:precision:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t);
  char v11;
  uint64_t v13;

  v4 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - v8;
  sub_240154D24();
  sub_240154F4C();
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, a3);
  v11 = sub_2401545EC();
  v10(v9, a3);
  return v11 & 1;
}

Swift::Double __swiftcall wrapAngle(_:minValue:maxValue:)(Swift::Double _, Swift::Double minValue, Swift::Double maxValue)
{
  for (; _ > maxValue; _ = _ + -6.28318531)
    ;
  for (; _ < minValue; _ = _ + 6.28318531)
    ;
  return _;
}

Swift::Int __swiftcall clamp(value:minValue:maxValue:)(Swift::Int value, Swift::Int minValue, Swift::Int maxValue)
{
  Swift::Int v3;

  if (value <= minValue)
    v3 = minValue;
  else
    v3 = value;
  if (v3 >= maxValue)
    return maxValue;
  else
    return v3;
}

uint64_t DKMotion3.init(time:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t result;

  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  v6 = (int *)type metadata accessor for DKMotion3();
  *(_QWORD *)(a2 + v6[5]) = &unk_251061B98;
  *(_QWORD *)(a2 + v6[6]) = &unk_251061BD0;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  *(_QWORD *)(a2 + v6[7]) = &unk_251061C08;
  return result;
}

uint64_t type metadata accessor for DKMotion3()
{
  uint64_t result;

  result = qword_256FC2BD8;
  if (!qword_256FC2BD8)
    return swift_getSingletonMetadata();
  return result;
}

int *DKMotion3.init(time:position:velocity:acceleration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *result;

  v7 = *a2;
  v8 = *a3;
  v9 = *a4;
  v10 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(a5, a1, v10);
  result = (int *)type metadata accessor for DKMotion3();
  *(_QWORD *)(a5 + result[5]) = v7;
  *(_QWORD *)(a5 + result[6]) = v8;
  *(_QWORD *)(a5 + result[7]) = v9;
  return result;
}

uint64_t DKMotion3.time.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t DKMotion3.time.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*DKMotion3.time.modify())()
{
  return nullsub_1;
}

uint64_t DKMotion3.position.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for DKMotion3() + 20));
  return swift_bridgeObjectRetain();
}

uint64_t DKMotion3.position.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *(int *)(type metadata accessor for DKMotion3() + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v2;
  return result;
}

uint64_t (*DKMotion3.position.modify())(_QWORD)
{
  type metadata accessor for DKMotion3();
  return nullsub_1;
}

uint64_t DKMotion3.velocity.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for DKMotion3() + 24));
  return swift_bridgeObjectRetain();
}

uint64_t DKMotion3.velocity.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *(int *)(type metadata accessor for DKMotion3() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v2;
  return result;
}

uint64_t (*DKMotion3.velocity.modify())(_QWORD)
{
  type metadata accessor for DKMotion3();
  return nullsub_1;
}

uint64_t DKMotion3.acceleration.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for DKMotion3() + 28));
  return swift_bridgeObjectRetain();
}

uint64_t DKMotion3.acceleration.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *(int *)(type metadata accessor for DKMotion3() + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v2;
  return result;
}

uint64_t (*DKMotion3.acceleration.modify())(_QWORD)
{
  type metadata accessor for DKMotion3();
  return nullsub_1;
}

uint64_t sub_24014975C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_240149784 + 4 * byte_240160610[*v0]))(1701669236, 0xE400000000000000);
}

uint64_t sub_240149784()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_24014979C()
{
  return 0x797469636F6C6576;
}

uint64_t sub_2401497B4()
{
  return 0x6172656C65636361;
}

uint64_t sub_2401497D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24014A518(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2401497F8()
{
  sub_240149E3C();
  return sub_240155048();
}

uint64_t sub_240149820()
{
  sub_240149E3C();
  return sub_240155054();
}

uint64_t DKMotion3.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC2B68);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240149E3C();
  sub_240155030();
  LOBYTE(v12) = 0;
  sub_240154310();
  sub_240149E80(&qword_256FB66E0, MEMORY[0x24BDCE920]);
  sub_240154E80();
  if (!v2)
  {
    v9 = (int *)type metadata accessor for DKMotion3();
    v12 = *(_QWORD *)(v3 + v9[5]);
    HIBYTE(v11) = 1;
    sub_24009C6BC();
    sub_240154E80();
    v12 = *(_QWORD *)(v3 + v9[6]);
    HIBYTE(v11) = 2;
    sub_240154E80();
    v12 = *(_QWORD *)(v3 + v9[7]);
    HIBYTE(v11) = 3;
    sub_240154E80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DKMotion3.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  char v23;
  uint64_t v24;

  v17 = a2;
  v3 = sub_240154310();
  v20 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v21 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC2B78);
  v5 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (int *)type metadata accessor for DKMotion3();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240149E3C();
  v19 = v7;
  v11 = (uint64_t)v22;
  sub_240155024();
  if (v11)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v22 = a1;
  v12 = (uint64_t)v10;
  v13 = v20;
  LOBYTE(v24) = 0;
  sub_240149E80(&qword_256FB67F0, MEMORY[0x24BDCE960]);
  v14 = v18;
  sub_240154DFC();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v21, v3);
  v23 = 1;
  sub_24009CC64();
  sub_240154DFC();
  *(_QWORD *)(v12 + v8[5]) = v24;
  v23 = 2;
  sub_240154DFC();
  *(_QWORD *)(v12 + v8[6]) = v24;
  v23 = 3;
  sub_240154DFC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v19, v14);
  *(_QWORD *)(v12 + v8[7]) = v24;
  sub_24013C4B8(v12, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return sub_2400A4FF8(v12);
}

uint64_t sub_240149D8C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKMotion3.init(from:)(a1, a2);
}

uint64_t sub_240149DA0(_QWORD *a1)
{
  return DKMotion3.encode(to:)(a1);
}

BOOL _s23IntelligentTrackingCore9DKMotion3V2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;

  if ((sub_2401542EC() & 1) != 0
    && (v4 = (int *)type metadata accessor for DKMotion3(),
        sub_2400ECA00(*(_QWORD *)(a1 + v4[5]), *(_QWORD *)(a2 + v4[5])))
    && sub_2400ECA00(*(_QWORD *)(a1 + v4[6]), *(_QWORD *)(a2 + v4[6])))
  {
    return sub_2400ECA00(*(_QWORD *)(a1 + v4[7]), *(_QWORD *)(a2 + v4[7]));
  }
  else
  {
    return 0;
  }
}

unint64_t sub_240149E3C()
{
  unint64_t result;

  result = qword_256FC2B70;
  if (!qword_256FC2B70)
  {
    result = MEMORY[0x24267E0BC](&unk_240160798, &type metadata for DKMotion3.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2B70);
  }
  return result;
}

uint64_t sub_240149E80(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_240154310();
    result = MEMORY[0x24267E0BC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DKMotion3(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_240154310();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DKMotion3(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DKMotion3(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DKMotion3(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for DKMotion3(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for DKMotion3(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKMotion3()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24014A1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for DKMotion3()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24014A284(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_240154310();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_24014A2FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DKMotion3.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24014A3C0 + 4 * byte_240160619[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24014A3F4 + 4 * byte_240160614[v4]))();
}

uint64_t sub_24014A3F4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24014A3FC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24014A404);
  return result;
}

uint64_t sub_24014A410(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24014A418);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24014A41C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24014A424(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKMotion3.CodingKeys()
{
  return &type metadata for DKMotion3.CodingKeys;
}

unint64_t sub_24014A444()
{
  unint64_t result;

  result = qword_256FC2C18;
  if (!qword_256FC2C18)
  {
    result = MEMORY[0x24267E0BC](&unk_240160770, &type metadata for DKMotion3.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2C18);
  }
  return result;
}

unint64_t sub_24014A48C()
{
  unint64_t result;

  result = qword_256FC2C20;
  if (!qword_256FC2C20)
  {
    result = MEMORY[0x24267E0BC](&unk_2401606E0, &type metadata for DKMotion3.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2C20);
  }
  return result;
}

unint64_t sub_24014A4D4()
{
  unint64_t result;

  result = qword_256FC2C28;
  if (!qword_256FC2C28)
  {
    result = MEMORY[0x24267E0BC](&unk_240160708, &type metadata for DKMotion3.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2C28);
  }
  return result;
}

uint64_t sub_24014A518(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x797469636F6C6576 && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6172656C65636361 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

void DKVector3.x.getter()
{
  uint64_t v0;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16))
    __break(1u);
}

void DKVector3.y.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16) < 2uLL)
    __break(1u);
}

uint64_t DKVector3.x.setter(double a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if (*(_QWORD *)(v3 + 16))
    {
LABEL_3:
      *(double *)(v3 + 32) = a1;
      *v1 = v3;
      return result;
    }
  }
  else
  {
    result = (uint64_t)sub_24014CD20((_QWORD *)v3);
    v3 = result;
    if (*(_QWORD *)(result + 16))
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t DKVector3.y.setter(double a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_24014CD20((_QWORD *)v3);
    v3 = result;
  }
  if (*(_QWORD *)(v3 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    *(double *)(v3 + 40) = a1;
    *v1 = v3;
  }
  return result;
}

IntelligentTrackingCore::DKVector3 __swiftcall DKVector3.init()()
{
  _QWORD *v0;
  IntelligentTrackingCore::DKVector3 result;

  *v0 = &unk_251061A08;
  return result;
}

uint64_t DKVectorProtocol.l2Norm()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t);
  _QWORD v17[8];

  v17[1] = a3;
  swift_getAssociatedTypeWitness();
  v17[0] = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v6 = swift_checkMetadataState();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v17 - v12;
  v17[7] = (*(uint64_t (**)(uint64_t, uint64_t, double))(a2 + 40))(a1, a2, v11);
  swift_getAssociatedConformanceWitness();
  sub_240154F34();
  sub_240154EEC();
  v17[4] = a1;
  v17[5] = a2;
  v14 = sub_240154844();
  MEMORY[0x24267E0BC](MEMORY[0x24BEE12C8], v14);
  sub_24015473C();
  v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, v6);
  swift_bridgeObjectRelease();
  sub_240154598();
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v6);
}

void DKVector3.z.getter()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16) < 3uLL)
    __break(1u);
}

IntelligentTrackingCore::DKVector3 __swiftcall DKVector3.init(x:y:z:)(Swift::Double x, Swift::Double y, Swift::Double z)
{
  IntelligentTrackingCore::DKVector3 *v3;
  IntelligentTrackingCore::DKVector3 *v7;
  IntelligentTrackingCore::DKVector3 result;

  v7 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
  result.elements._rawValue = (void *)swift_allocObject();
  *((_OWORD *)result.elements._rawValue + 1) = xmmword_240155A50;
  *((Swift::Double *)result.elements._rawValue + 4) = x;
  *((Swift::Double *)result.elements._rawValue + 5) = y;
  *((Swift::Double *)result.elements._rawValue + 6) = z;
  v7->elements._rawValue = result.elements._rawValue;
  return result;
}

BOOL static DKVector3.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2400ECA00(*a1, *a2);
}

uint64_t DKVector3.elements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKVector3.elements.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*DKVector3.elements.modify())()
{
  return nullsub_1;
}

IntelligentTrackingCore::DKVector3 __swiftcall DKVector3.init(elements:)(IntelligentTrackingCore::DKVector3 elements)
{
  IntelligentTrackingCore::DKVector3 *v1;

  v1->elements._rawValue = elements.elements._rawValue;
  return elements;
}

IntelligentTrackingCore::DKVector3 __swiftcall DKVector3.init(repeating:count:)(Swift::Double repeating, Swift::Int count)
{
  IntelligentTrackingCore::DKVector3 *v2;
  IntelligentTrackingCore::DKVector3 *v4;
  IntelligentTrackingCore::DKVector3 result;
  Swift::Double *v6;
  unint64_t v7;
  Swift::Double v8;
  int64x2_t v9;
  int64x2_t *v10;
  unint64_t v11;
  unint64_t v12;

  if ((count & 0x8000000000000000) == 0)
  {
    v4 = v2;
    if (count)
    {
      result.elements._rawValue = (void *)sub_2401547FC();
      *((_QWORD *)result.elements._rawValue + 2) = count;
      v6 = (Swift::Double *)((char *)result.elements._rawValue + 32);
      if ((unint64_t)count >= 4)
      {
        v7 = count & 0xFFFFFFFFFFFFFFFCLL;
        v6 += count & 0xFFFFFFFFFFFFFFFCLL;
        v8 = repeating;
        v9 = vdupq_lane_s64(*(uint64_t *)&repeating, 0);
        v10 = (int64x2_t *)((char *)result.elements._rawValue + 48);
        v11 = count & 0xFFFFFFFFFFFFFFFCLL;
        do
        {
          v10[-1] = v9;
          *v10 = v9;
          v10 += 2;
          v11 -= 4;
        }
        while (v11);
        if (v7 == count)
          goto LABEL_11;
      }
      else
      {
        v7 = 0;
        v8 = repeating;
      }
      v12 = count - v7;
      do
      {
        *v6++ = v8;
        --v12;
      }
      while (v12);
    }
    else
    {
      result.elements._rawValue = (void *)MEMORY[0x24BEE4AF8];
    }
LABEL_11:
    v4->elements._rawValue = result.elements._rawValue;
    return result;
  }
  result.elements._rawValue = (void *)sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_24014ABCC(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v4 = *a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) != 0)
  {
    if (v4[2])
    {
LABEL_3:
      v4[4] = v3;
      *a2 = v4;
      return result;
    }
  }
  else
  {
    result = (uint64_t)sub_24014CD20(v4);
    v4 = (_QWORD *)result;
    if (*(_QWORD *)(result + 16))
      goto LABEL_3;
  }
  __break(1u);
  return result;
}

uint64_t (*DKVector3.x.modify(uint64_t (*result)(uint64_t *a1, char a2)))(uint64_t *a1, char a2)
{
  uint64_t v1;

  *((_QWORD *)result + 1) = v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    *(_QWORD *)result = *(_QWORD *)(*(_QWORD *)v1 + 32);
    return sub_24014AC58;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24014AC58(uint64_t *a1, char a2)
{
  _QWORD **v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v3 = (_QWORD **)a1[1];
  v4 = *a1;
  v5 = *v3;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) != 0)
  {
    if ((result & 1) != 0)
    {
      if (v5[2])
      {
LABEL_7:
        v5[4] = v4;
        *v3 = v5;
        return result;
      }
    }
    else
    {
      result = (uint64_t)sub_24014CD20(v5);
      v5 = (_QWORD *)result;
      if (*(_QWORD *)(result + 16))
        goto LABEL_7;
    }
    __break(1u);
  }
  if ((result & 1) != 0)
  {
    if (v5[2])
      goto LABEL_7;
  }
  else
  {
    result = (uint64_t)sub_24014CD20(v5);
    v5 = (_QWORD *)result;
    if (*(_QWORD *)(result + 16))
      goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_24014ACF0(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v4 = *a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_24014CD20(v4);
    v4 = (_QWORD *)result;
  }
  if (v4[2] < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v4[5] = v3;
    *a2 = v4;
  }
  return result;
}

uint64_t (*DKVector3.y.modify(uint64_t (*result)(uint64_t *a1, char a2)))(uint64_t *a1, char a2)
{
  uint64_t v1;

  *((_QWORD *)result + 1) = v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = *(_QWORD *)(*(_QWORD *)v1 + 40);
    return sub_24014AD80;
  }
  return result;
}

uint64_t sub_24014AD80(uint64_t *a1, char a2)
{
  _QWORD **v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v3 = (_QWORD **)a1[1];
  v4 = *a1;
  v5 = *v3;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) != 0)
  {
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_24014CD20(v5);
      v5 = (_QWORD *)result;
    }
    if (v5[2] >= 2uLL)
      goto LABEL_9;
    __break(1u);
  }
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_24014CD20(v5);
    v5 = (_QWORD *)result;
  }
  if (v5[2] >= 2uLL)
  {
LABEL_9:
    v5[5] = v4;
    *v3 = v5;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24014AE14(uint64_t *a1, _QWORD **a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t result;

  v3 = *a1;
  v4 = *a2;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_24014CD20(v4);
    v4 = (_QWORD *)result;
  }
  if (v4[2] < 3uLL)
  {
    __break(1u);
  }
  else
  {
    v4[6] = v3;
    *a2 = v4;
  }
  return result;
}

uint64_t DKVector3.z.setter(double a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_24014CD20((_QWORD *)v3);
    v3 = result;
  }
  if (*(_QWORD *)(v3 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    *(double *)(v3 + 48) = a1;
    *v1 = v3;
  }
  return result;
}

uint64_t (*DKVector3.z.modify(uint64_t (*result)(uint64_t *a1, char a2)))(uint64_t *a1, char a2)
{
  uint64_t v1;

  *((_QWORD *)result + 1) = v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) < 3uLL)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = *(_QWORD *)(*(_QWORD *)v1 + 48);
    return sub_24014AF00;
  }
  return result;
}

uint64_t sub_24014AF00(uint64_t *a1, char a2)
{
  _QWORD **v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v3 = (_QWORD **)a1[1];
  v4 = *a1;
  v5 = *v3;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) != 0)
  {
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_24014CD20(v5);
      v5 = (_QWORD *)result;
    }
    if (v5[2] >= 3uLL)
      goto LABEL_9;
    __break(1u);
  }
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_24014CD20(v5);
    v5 = (_QWORD *)result;
  }
  if (v5[2] >= 3uLL)
  {
LABEL_9:
    v5[6] = v4;
    *v3 = v5;
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24014AF94()
{
  return 0x73746E656D656C65;
}

uint64_t sub_24014AFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x73746E656D656C65 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_240154EF8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24014B040()
{
  sub_24014CD4C();
  return sub_240155048();
}

uint64_t sub_24014B068()
{
  sub_24014CD4C();
  return sub_240155054();
}

uint64_t DKVector3.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC2C30);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24014CD4C();
  sub_240155030();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E30);
  sub_2400A56DC(&qword_256FB7950, MEMORY[0x24BEE13D8], MEMORY[0x24BEE12A0]);
  sub_240154E80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKVector3.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC2C40);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24014CD4C();
  sub_240155024();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E30);
    sub_2400A56DC(&qword_256FB7960, MEMORY[0x24BEE1400], MEMORY[0x24BEE12D0]);
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24014B2F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24014B2F8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_24014B320())()
{
  return nullsub_1;
}

void sub_24014B330(_QWORD *a1@<X8>)
{
  *a1 = &unk_251063450;
}

unint64_t sub_24014B340@<X0>(unint64_t result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  if ((result & 0x8000000000000000) != 0 || *(_QWORD *)(*(_QWORD *)v2 + 16) <= result)
  {
    result = sub_240154D00();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(*(_QWORD *)v2 + 8 * result + 32);
  }
  return result;
}

uint64_t DKVectorProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (sub_24014C5E4(a1, a2, a3))
  {
    (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
    swift_getAssociatedTypeWitness();
    sub_240154850();
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = sub_240154D00();
    __break(1u);
  }
  return result;
}

uint64_t sub_24014B480(double *a1, unint64_t a2)
{
  return sub_24014B48C(a2, *a1);
}

uint64_t sub_24014B48C(unint64_t a1, double a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t result;

  if ((a1 & 0x8000000000000000) == 0)
  {
    v4 = *(_QWORD **)v2;
    if (*(_QWORD *)(*(_QWORD *)v2 + 16) > a1)
    {
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (uint64_t)sub_24014CD20(v4);
        v4 = (_QWORD *)result;
      }
      if (v4[2] > a1)
      {
        *(double *)&v4[a1 + 4] = a2;
        *(_QWORD *)v2 = v4;
        return result;
      }
      __break(1u);
    }
  }
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t DKVectorProtocol.subscript.setter(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;

  sub_24014CE70(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

void (*sub_24014B5A8(_QWORD *a1, unint64_t a2))(_QWORD *)
{
  _QWORD *v4;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_24014B5F4(v4, a2);
  return sub_240095AE8;
}

uint64_t (*sub_24014B5F4(_QWORD *a1, unint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t (*result)(uint64_t *, char);

  a1[1] = a2;
  a1[2] = v2;
  if ((a2 & 0x8000000000000000) != 0 || *(_QWORD *)(*(_QWORD *)v2 + 16) <= a2)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_240154D00();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(*(_QWORD *)v2 + 8 * a2 + 32);
    return sub_24014B67C;
  }
  return result;
}

uint64_t sub_24014B67C(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  unint64_t v6;
  BOOL v7;
  uint64_t result;
  unint64_t v9;

  v3 = a1[1];
  v2 = a1[2];
  v4 = *a1;
  v5 = *(_QWORD **)v2;
  v6 = *(_QWORD *)(*(_QWORD *)v2 + 16);
  v7 = v6 > v3;
  if ((a2 & 1) != 0)
  {
    if (v6 <= v3)
      goto LABEL_14;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = (uint64_t)sub_24014CD20(v5);
      v5 = (_QWORD *)result;
    }
    v9 = v5[2];
    v7 = v9 > v3;
    if (v9 > v3)
      goto LABEL_12;
    __break(1u);
  }
  if (!v7)
    goto LABEL_14;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    result = (uint64_t)sub_24014CD20(v5);
    v5 = (_QWORD *)result;
  }
  if (v5[2] > v3)
  {
LABEL_12:
    v5[v3 + 4] = v4;
    *(_QWORD *)v2 = v5;
    return result;
  }
  __break(1u);
LABEL_14:
  result = sub_240154D00();
  __break(1u);
  return result;
}

void (*DKVectorProtocol.subscript.modify(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(unint64_t **a1, char a2)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  size_t v12;

  v9 = malloc(0x40uLL);
  *a1 = v9;
  v9[2] = a4;
  v9[3] = v4;
  *v9 = a2;
  v9[1] = a3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[4] = AssociatedTypeWitness;
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9[5] = v11;
  v12 = *(_QWORD *)(v11 + 64);
  v9[6] = malloc(v12);
  v9[7] = malloc(v12);
  DKVectorProtocol.subscript.getter(a2, a3, a4);
  return sub_24014B824;
}

void sub_24014B824(unint64_t **a1, char a2)
{
  unint64_t *v2;
  void *v3;
  void *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void (*v10)(void *, unint64_t);

  v2 = *a1;
  v3 = (void *)(*a1)[6];
  v4 = (void *)(*a1)[7];
  v5 = (*a1)[4];
  v6 = (*a1)[5];
  v7 = (*a1)[2];
  v9 = **a1;
  v8 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    (*(void (**)(unint64_t, void *, unint64_t))(v6 + 16))((*a1)[6], v4, v5);
    sub_24014CE70((uint64_t)v3, v9, v8, v7);
    v10 = *(void (**)(void *, unint64_t))(v6 + 8);
    v10(v3, v5);
  }
  else
  {
    sub_24014CE70((*a1)[7], v9, v8, v7);
    v10 = *(void (**)(void *, unint64_t))(v6 + 8);
  }
  v10(v4, v5);
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_24014B8E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DKVector3.init(from:)(a1, a2);
}

uint64_t sub_24014B8FC(_QWORD *a1)
{
  return DKVector3.encode(to:)(a1);
}

BOOL sub_24014B910(uint64_t *a1, uint64_t *a2)
{
  return sub_2400ECA00(*a1, *a2);
}

uint64_t sub_24014B920(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness;

  sub_24014CE70(a1, a2, a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
}

void (*sub_24014B980(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4))(_QWORD *)
{
  _QWORD *v8;

  v8 = malloc(0x28uLL);
  *a1 = v8;
  v8[4] = DKVectorProtocol.subscript.modify(v8, a2, a3, a4);
  return sub_240095AE8;
}

uint64_t static DKVectorProtocol.* infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24014BFBC(a1, a2, a3, a4, (uint64_t)sub_24014D01C, (void (*)(char *, char *))sub_24014D024);
}

{
  return sub_24014C300(a1, a2, a3, a4, (void (*)(char *, char *))sub_24014D0FC);
}

{
  return sub_24014C424(a1, a2, a3, a4, (void (*)(char *, char *))sub_24014D44C);
}

uint64_t sub_24014B9F8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_2401548E0();
}

uint64_t sub_24014BA9C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v52 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_240154A30();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  MEMORY[0x24BDAC7A8](v19);
  v49 = (char *)v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v23 = (char *)v37 - v22;
  MEMORY[0x24BDAC7A8](v24);
  v37[1] = (char *)v37 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v26);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x24BDAC7A8](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_240154730();
  v57 = sub_240154538();
  v53 = sub_240154C40();
  sub_240154BF8();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_240154724();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_240154A60();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v23, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v23, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v23, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v23, AssociatedTypeWitness);
      sub_240154C28();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_240154A60();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_240154C28();
      sub_240154A60();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t static DKVectorProtocol.+ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24014BFBC(a1, a2, a3, a4, (uint64_t)sub_24014D038, (void (*)(char *, char *))sub_24014D024);
}

uint64_t sub_24014BFBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(char *, char *))
{
  void (*v10)(uint64_t, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[6];
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;

  v10 = *(void (**)(uint64_t, uint64_t))(a4 + 40);
  v10(a3, a4);
  v10(a3, a4);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = sub_240154844();
  v13 = MEMORY[0x24267E0BC](MEMORY[0x24BEE12C8], v12);
  sub_240154F58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = v28;
  v21 = a3;
  v22 = a4;
  v19[2] = a3;
  v19[3] = a4;
  v19[4] = a5;
  v19[5] = &v20;
  v23 = v12;
  v24 = v12;
  v25 = v13;
  v26 = v13;
  v14 = sub_240154B80();
  v15 = MEMORY[0x24267E0BC](MEMORY[0x24BEE2620], v14);
  v17 = sub_24014BA9C(a6, (uint64_t)v19, v14, AssociatedTypeWitness, MEMORY[0x24BEE4078], v15, MEMORY[0x24BEE40A8], v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 64))(a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 48))(v17, a3, a4);
}

uint64_t static DKVectorProtocol.- infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24014BFBC(a1, a2, a3, a4, (uint64_t)sub_24014D058, (void (*)(char *, char *))sub_24014D024);
}

uint64_t sub_24014C184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return a5(a1, a2, AssociatedTypeWitness, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(AssociatedConformanceWitness + 16) + 8) + 8));
}

uint64_t sub_24014C248()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_2401548E0();
}

uint64_t static DKVectorProtocol./ infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24014C300(a1, a2, a3, a4, (void (*)(char *, char *))sub_24014D11C);
}

{
  return sub_24014C424(a1, a2, a3, a4, (void (*)(char *, char *))sub_24014D460);
}

uint64_t sub_24014C300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, char *))
{
  char *AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[8];

  v15[7] = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a1;
  AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
  v10 = sub_240154844();
  v11 = MEMORY[0x24267E0BC](MEMORY[0x24BEE12E0], v10);
  v13 = sub_24008BB24(a5, (uint64_t)v15, v10, AssociatedTypeWitness, MEMORY[0x24BEE4078], v11, MEMORY[0x24BEE40A8], v12);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 64))(a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 48))(v13, a3, a4);
}

uint64_t sub_24014C424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *, char *))
{
  char *AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[8];

  v15[7] = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = a2;
  AssociatedTypeWitness = (char *)swift_getAssociatedTypeWitness();
  v10 = sub_240154844();
  v11 = MEMORY[0x24267E0BC](MEMORY[0x24BEE12E0], v10);
  v13 = sub_24008BB24(a5, (uint64_t)v15, v10, AssociatedTypeWitness, MEMORY[0x24BEE4078], v11, MEMORY[0x24BEE40A8], v12);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(a4 + 64))(a3, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a4 + 48))(v13, a3, a4);
}

uint64_t sub_24014C53C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_2401545A4();
}

BOOL sub_24014C5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = MEMORY[0x24BDAC7A8](a1);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))(v9, v10, a2, v7);
  if (a1 < 0)
  {
    v14 = 0;
  }
  else
  {
    v11 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v13 = MEMORY[0x24267D168](v11, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    v14 = v13 > a1;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, a2);
  return v14;
}

uint64_t DKVectorProtocol.isEqual(_:tolerance:)(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t TupleTypeMetadata2;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  void (*v33)(char *, char *, uint64_t);
  char *v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t);
  char *v43;
  void *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  __int128 v59;

  v51 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v50 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v49 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v48 = (char *)&v40 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v47 = (char *)&v40 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v46 = (char *)&v40 - v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v17 = sub_240154A30();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v40 - v19;
  v21 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 40);
  v41 = v4;
  v52 = a3;
  v53 = a4;
  v40 = v21;
  ((void (*)(uint64_t, uint64_t, double))v21)(a3, a4, v18);
  v45 = MEMORY[0x24267D168]();
  swift_bridgeObjectRelease();
  v23 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v42 = *(void (**)(uint64_t, uint64_t))(v22 + 40);
  v42(v23, v22);
  v44 = &associated type descriptor for DKVectorProtocol.DataType;
  swift_getAssociatedTypeWitness();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FC2C48);
  v24 = sub_240154C88();
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(v24 + 16);
  swift_bridgeObjectRelease();
  if (v45 != v25)
    return 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v42(v23, v22);
  swift_getAssociatedTypeWitness();
  sub_240154C88();
  swift_bridgeObjectRelease();
  v26 = sub_240154D78();
  swift_bridgeObjectRelease();
  if (!v26)
    return 0;
  v54 = v40(v52, v53);
  *(_QWORD *)&v58 = v26;
  v27 = sub_240154844();
  v28 = MEMORY[0x24267E0BC](MEMORY[0x24BEE12C8], v27);
  sub_240154F58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v58 = v59;
  v54 = v27;
  v55 = v27;
  v45 = v27;
  v56 = v28;
  v57 = v28;
  v44 = (void *)v28;
  sub_240154B80();
  sub_240154B5C();
  v43 = v20;
  v29 = v50;
  v31 = v46;
  v30 = v47;
  while (1)
  {
    v54 = v45;
    v55 = v45;
    v56 = (uint64_t)v44;
    v57 = (uint64_t)v44;
    sub_240154B74();
    sub_240154B68();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(TupleTypeMetadata2 - 8) + 48))(v20, 1, TupleTypeMetadata2) == 1)break;
    v32 = &v20[*(int *)(TupleTypeMetadata2 + 48)];
    v33 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v33(v31, v20, AssociatedTypeWitness);
    v33(v30, v32, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    v34 = v48;
    sub_240154D24();
    v35 = TupleTypeMetadata2;
    v36 = v49;
    sub_2401548EC();
    v37 = *(void (**)(char *, uint64_t))(v29 + 8);
    v37(v34, AssociatedTypeWitness);
    LOBYTE(v32) = sub_2401545E0();
    v38 = v36;
    TupleTypeMetadata2 = v35;
    v20 = v43;
    v37(v38, AssociatedTypeWitness);
    v37(v30, AssociatedTypeWitness);
    v37(v31, AssociatedTypeWitness);
    if ((v32 & 1) != 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_24014CBC4()
{
  uint64_t AssociatedTypeWitness;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v3 = (char *)&v5 - v2;
  swift_getAssociatedConformanceWitness();
  sub_2401548E0();
  sub_240154D18();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
}

uint64_t sub_24014CCD0(unint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  v5 = a2 & 0xFFFFFFFFFFFFF8;
  if ((result & 1) == 0)
    v5 = a2;
  if (*(_QWORD *)(v5 + 16) <= a1)
    goto LABEL_7;
  return result;
}

_QWORD *sub_24014CD20(_QWORD *a1)
{
  return sub_240077968(0, a1[2], 0, a1);
}

uint64_t sub_24014CD34()
{
  return sub_24014CBC4();
}

unint64_t sub_24014CD4C()
{
  unint64_t result;

  result = qword_256FC2C38;
  if (!qword_256FC2C38)
  {
    result = MEMORY[0x24267E0BC](&unk_2401609A0, &type metadata for DKVector3.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2C38);
  }
  return result;
}

char *sub_24014CD90(uint64_t a1)
{
  return sub_240077B80(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

_QWORD *sub_24014CDA4(_QWORD *a1)
{
  return sub_240078534(0, a1[2], 0, a1);
}

_QWORD *sub_24014CDB8(_QWORD *a1)
{
  return sub_2400788A4(0, a1[2], 0, a1);
}

_QWORD *sub_24014CDCC(_QWORD *a1)
{
  return sub_240078AB0(0, a1[2], 0, a1);
}

_QWORD *sub_24014CDE0(_QWORD *a1)
{
  return sub_240078BD4(0, a1[2], 0, a1);
}

void sub_24014CDF4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_240154D30();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x24267D4ECLL);
}

uint64_t sub_24014CE5C(unint64_t a1)
{
  return sub_240078F34(0, *(_QWORD *)(a1 + 16), 0, a1);
}

uint64_t sub_24014CE70(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  double v11;
  uint64_t v12;
  _BYTE *v13;
  BOOL v14;
  uint64_t (*v15)(_BYTE *, _QWORD);
  uint64_t *v16;
  uint64_t *v17;
  uint64_t AssociatedTypeWitness;
  uint64_t v19;
  char isClassOrObjCExistentialType;
  uint64_t v21;
  uint64_t result;
  _BYTE v23[32];

  v5 = v4;
  v10 = *(_QWORD *)(a3 - 8);
  v11 = MEMORY[0x24BDAC7A8](a1);
  v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(_BYTE *, uint64_t, double))(v10 + 16))(v13, v5, v11);
  v14 = sub_24014C5E4(a2, a3, a4);
  (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v13, a3);
  if (v14)
  {
    v15 = (uint64_t (*)(_BYTE *, _QWORD))(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(a4 + 56))(v23, a3, a4);
    v17 = v16;
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    sub_240154844();
    sub_2401547E4();
    v19 = *v17;
    sub_24014CCD0(a2, v19);
    isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
    v21 = v19 & 0xFFFFFFFFFFFFFF8;
    if ((isClassOrObjCExistentialType & 1) == 0)
      v21 = v19;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 24))(v21+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 72) * a2, a1, AssociatedTypeWitness);
    return v15(v23, 0);
  }
  else
  {
    result = sub_240154D00();
    __break(1u);
  }
  return result;
}

uint64_t sub_24014D01C()
{
  return sub_24014B9F8();
}

uint64_t sub_24014D024(uint64_t a1)
{
  return sub_24014D078(a1);
}

uint64_t sub_24014D038(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24014C184(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE2F68]);
}

uint64_t sub_24014D058(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24014C184(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE2F70]);
}

uint64_t sub_24014D078(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t TupleTypeMetadata2;

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32);
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v3(a1, a1 + *(int *)(TupleTypeMetadata2 + 48));
}

uint64_t sub_24014D0FC()
{
  return sub_24014C248();
}

uint64_t sub_24014D11C()
{
  return sub_24014C53C();
}

unint64_t sub_24014D140()
{
  unint64_t result;

  result = qword_256FC2C50;
  if (!qword_256FC2C50)
  {
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE13E0], MEMORY[0x24BEE13C8]);
    atomic_store(result, (unint64_t *)&qword_256FC2C50);
  }
  return result;
}

unint64_t sub_24014D184(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_24009CC64();
  result = sub_24009C6BC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24014D1B0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_QWORD *)(*(_QWORD *)result + 16))
    *a2 = *(_QWORD *)(*(_QWORD *)result + 32);
  else
    __break(1u);
  return result;
}

uint64_t sub_24014D1D0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_QWORD *)(*(_QWORD *)result + 16) <= 1uLL)
    __break(1u);
  else
    *a2 = *(_QWORD *)(*(_QWORD *)result + 40);
  return result;
}

uint64_t sub_24014D1F4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if (*(_QWORD *)(*(_QWORD *)result + 16) <= 2uLL)
    __break(1u);
  else
    *a2 = *(_QWORD *)(*(_QWORD *)result + 48);
  return result;
}

uint64_t sub_24014D218(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return DKVectorProtocol.subscript.getter(*a2, *(uint64_t *)((char *)a2 + a3 - 16), *(uint64_t *)((char *)a2 + a3 - 8));
}

uint64_t sub_24014D248(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t a4)
{
  return sub_24014CE70(a1, *a3, *(unint64_t *)((char *)a3 + a4 - 16), *(unint64_t *)((char *)a3 + a4 - 8));
}

uint64_t sub_24014D278()
{
  return 16;
}

__n128 sub_24014D284(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

ValueMetadata *type metadata accessor for DKVector3()
{
  return &type metadata for DKVector3;
}

uint64_t dispatch thunk of DKVectorProtocol.elements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DKVectorProtocol.elements.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DKVectorProtocol.elements.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of DKVectorProtocol.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DKVectorProtocol.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of DKVectorProtocol.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of DKVectorProtocol.subscript.modify(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t storeEnumTagSinglePayload for DKVector3.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24014D318 + 4 * byte_2401607F0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24014D338 + 4 * byte_2401607F5[v4]))();
}

_BYTE *sub_24014D318(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24014D338(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24014D340(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24014D348(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24014D350(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24014D358(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DKVector3.CodingKeys()
{
  return &type metadata for DKVector3.CodingKeys;
}

unint64_t sub_24014D378()
{
  unint64_t result;

  result = qword_256FC2CB8;
  if (!qword_256FC2CB8)
  {
    result = MEMORY[0x24267E0BC](&unk_240160978, &type metadata for DKVector3.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2CB8);
  }
  return result;
}

unint64_t sub_24014D3C0()
{
  unint64_t result;

  result = qword_256FC2CC0;
  if (!qword_256FC2CC0)
  {
    result = MEMORY[0x24267E0BC](&unk_2401608E8, &type metadata for DKVector3.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2CC0);
  }
  return result;
}

unint64_t sub_24014D408()
{
  unint64_t result;

  result = qword_256FC2CC8;
  if (!qword_256FC2CC8)
  {
    result = MEMORY[0x24267E0BC](&unk_240160910, &type metadata for DKVector3.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FC2CC8);
  }
  return result;
}

uint64_t sub_24014D44C()
{
  return sub_24014D0FC();
}

uint64_t sub_24014D460()
{
  return sub_24014D11C();
}

void *static DKConstantVelocityFilter.Index.allCases.getter()
{
  return &unk_251063488;
}

uint64_t DKConstantVelocityFilter.Index.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t DKConstantVelocityFilter.Measurement.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKConstantVelocityFilter.Measurement.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

IntelligentTrackingCore::DKConstantVelocityFilter::Index_optional __swiftcall DKConstantVelocityFilter.Index.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (IntelligentTrackingCore::DKConstantVelocityFilter::Index_optional)rawValue;
}

_QWORD *sub_24014D5B8@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

void sub_24014D5D8(_QWORD *a1@<X8>)
{
  *a1 = &unk_2510634B0;
}

uint64_t DKConstantVelocityFilter.Configuration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKConstantVelocityFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKConstantVelocityFilter.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(swift_allocObject() + OBJC_IVAR____TtC23IntelligentTrackingCore24DKConstantVelocityFilter_cvConfiguration) = a1;
  v1 = swift_retain();
  sub_240141688(v1, 2);
  v3 = v2;
  swift_release();
  return v3;
}

uint64_t DKConstantVelocityFilter.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore24DKConstantVelocityFilter_cvConfiguration) = a1;
  v2 = swift_retain();
  sub_240141688(v2, 2);
  v4 = v3;
  swift_release();
  return v4;
}

uint64_t sub_24014D6D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4, v6);
  sub_24015428C();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v11 = *(_QWORD **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
  v12 = v11[2];
  if (v12 < 1 || (uint64_t)v11[3] <= 1)
  {
    result = sub_240154D00();
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v11[4] + 8 * v12) = v10;
    return sub_24013CF84(a1);
  }
  return result;
}

void DKConstantVelocityFilter.__allocating_init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DKConstantVelocityFilter.init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_24014D860()
{
  return swift_release();
}

uint64_t DKConstantVelocityFilter.deinit()
{
  uint64_t v0;

  v0 = DKKalmanFilter.deinit();
  swift_release();
  return v0;
}

uint64_t DKConstantVelocityFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

unint64_t sub_24014D8E8()
{
  unint64_t result;

  result = qword_256FC2CD0;
  if (!qword_256FC2CD0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKConstantVelocityFilter.Index, &type metadata for DKConstantVelocityFilter.Index);
    atomic_store(result, (unint64_t *)&qword_256FC2CD0);
  }
  return result;
}

unint64_t sub_24014D930()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FC2CD8;
  if (!qword_256FC2CD8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FC2CE0);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256FC2CD8);
  }
  return result;
}

uint64_t sub_24014D97C()
{
  return type metadata accessor for DKConstantVelocityFilter(0);
}

uint64_t type metadata accessor for DKConstantVelocityFilter(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FC2D10);
}

uint64_t method lookup function for DKConstantVelocityFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKConstantVelocityFilter.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t dispatch thunk of DKConstantVelocityFilter.updateQ(row:column:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKConstantVelocityFilter.getState(index:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKConstantVelocityFilter.setState(index:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t sub_24014D9D0()
{
  return type metadata accessor for DKConstantVelocityFilter.Measurement(0);
}

uint64_t type metadata accessor for DKConstantVelocityFilter.Measurement(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FC2F80);
}

uint64_t method lookup function for DKConstantVelocityFilter.Measurement()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for DKConstantVelocityFilter.Index(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24014DA44 + 4 * byte_240160A05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24014DA78 + 4 * byte_240160A00[v4]))();
}

uint64_t sub_24014DA78(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24014DA80(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24014DA88);
  return result;
}

uint64_t sub_24014DA94(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24014DA9CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24014DAA0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24014DAA8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKConstantVelocityFilter.Index()
{
  return &type metadata for DKConstantVelocityFilter.Index;
}

uint64_t type metadata accessor for DKConstantVelocityFilter.Configuration()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKConstantVelocityFilter.Configuration()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for DKConfig()
{
  return objc_opt_self();
}

void sub_24014DB10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t context;
  void *v12;
  id v13;
  id v14;
  char *v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  void *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  void *v24;
  uint64_t v25;
  int v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t inited;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t plan;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;

  v1 = v0;
  v50 = *MEMORY[0x24BDAC8D0];
  v47 = sub_2401541D8();
  v2 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v39 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v39 - v9;
  *(_OWORD *)(v1 + 216) = 0u;
  *(_QWORD *)(v1 + 16) = 0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_QWORD *)(v1 + 384) = 0;
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 32) = 0;
  *(_DWORD *)(v1 + 40) = 0;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 80) = 0u;
  *(_OWORD *)(v1 + 96) = 0u;
  *(_OWORD *)(v1 + 112) = 0u;
  *(_OWORD *)(v1 + 128) = 0u;
  *(_OWORD *)(v1 + 144) = 0u;
  *(_OWORD *)(v1 + 160) = 0u;
  *(_OWORD *)(v1 + 176) = 0u;
  *(_OWORD *)(v1 + 192) = 0u;
  *(_DWORD *)(v1 + 208) = 0;
  *(_OWORD *)(v1 + 232) = 0u;
  *(_OWORD *)(v1 + 248) = 0u;
  *(_OWORD *)(v1 + 264) = 0u;
  *(_OWORD *)(v1 + 280) = 0u;
  *(_OWORD *)(v1 + 296) = 0u;
  *(_OWORD *)(v1 + 312) = 0u;
  *(_OWORD *)(v1 + 328) = 0u;
  *(_OWORD *)(v1 + 344) = 0u;
  *(_OWORD *)(v1 + 360) = 0u;
  *(_DWORD *)(v1 + 376) = 0;
  context = espresso_create_context();
  if (!context)
  {
    swift_release();
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v22 = 0xD000000000000018;
    *(_QWORD *)(v22 + 8) = 0x80000002401669C0;
    *(_BYTE *)(v22 + 16) = 0;
    swift_willThrow();
    return;
  }
  v41 = (_QWORD *)(v1 + 16);
  v42 = v1 + 48;
  v45 = v10;
  v46 = v7;
  v44 = v1;
  v40 = context;
  plan = espresso_create_plan();
  v48 = 0;
  v49 = 0;
  v12 = (void *)sub_240154628();
  v13 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v12);

  if (v13)
  {
    v14 = objc_msgSend(v13, sel_bundleURL);
    v15 = v45;
    sub_2401541C0();

    sub_2401541A8();
    v16 = v46;
    sub_2401541A8();
    v17 = *(void (**)(char *, uint64_t))(v2 + 8);
    v18 = v47;
    v17(v4, v47);
    sub_2401541B4();
    sub_2401541CC();
    v19 = v13;
    v17(v4, v18);
    sub_2401546A0();
    swift_bridgeObjectRelease();
    v20 = espresso_plan_add_network();
    swift_release();
    if (v20)
    {
      swift_release();
      sub_240080040();
      swift_allocError();
      *(_QWORD *)v21 = 0xD000000000000016;
      *(_QWORD *)(v21 + 8) = 0x8000000240166A00;
      *(_BYTE *)(v21 + 16) = 0;
      swift_willThrow();

      v17(v16, v18);
      v17(v15, v18);
      return;
    }
    v23 = v17;
    v24 = v19;
    if (espresso_plan_build())
    {
      swift_release();
      sub_240080040();
      swift_allocError();
      *(_QWORD *)v25 = 0xD000000000000014;
      *(_QWORD *)(v25 + 8) = 0x8000000240166A20;
      *(_BYTE *)(v25 + 16) = 0;
      swift_willThrow();

      v23(v46, v18);
      v23(v45, v18);
      return;
    }
    v26 = espresso_network_bind_buffer();
    v27 = v46;
    if (v26)
    {
      swift_release();
      sub_240080040();
      swift_allocError();
      v29 = 0x8000000240166A40;
      *(_QWORD *)v28 = 0xD000000000000014;
LABEL_10:
      *(_QWORD *)(v28 + 8) = v29;
      *(_BYTE *)(v28 + 16) = 0;
      swift_willThrow();

      v30 = v47;
      v23(v27, v47);
      v23(v45, v30);
      return;
    }
    *(_QWORD *)(v44 + 384) = 1572864;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FC33E8);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 32) = xmmword_240160B90;
    v39 = inited + 32;
    *(_OWORD *)(inited + 16) = xmmword_240155A50;
    *(_OWORD *)(inited + 48) = xmmword_240160BA0;
    *(_QWORD *)(inited + 64) = 0;
    *(_QWORD *)(inited + 72) = 0;
    v42 = sub_2401546A0();
    v32 = espresso_network_bind_buffer();
    swift_release();
    if (v32)
    {
      v42 = sub_2401546A0();
      v33 = espresso_network_bind_buffer();
      swift_release();
      if (v33)
      {
        if (espresso_network_bind_buffer())
        {
          swift_release();
          swift_setDeallocating();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256FC33F0);
          swift_arrayDestroy();
          sub_240080040();
          swift_allocError();
          v29 = 0x8000000240166A80;
          *(_QWORD *)v28 = 0xD000000000000015;
          goto LABEL_10;
        }
      }
    }
    swift_release();
    v34 = v44;
    if (*(_QWORD *)(v44 + 24))
      espresso_plan_destroy();
    v35 = plan;
    v36 = v45;
    v37 = v47;
    if (*v41)
      espresso_context_destroy();

    v23(v27, v37);
    v23(v36, v37);
    *(_QWORD *)(v34 + 16) = v40;
    *(_QWORD *)(v34 + 24) = v35;
    v38 = v49;
    *(_QWORD *)(v34 + 32) = v48;
    *(_DWORD *)(v34 + 40) = v38;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24014E214()
{
  espresso_plan_destroy();
  espresso_context_destroy();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKSpeechDetectionModel()
{
  return objc_opt_self();
}

unint64_t sub_24014E260(unint64_t result)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  uint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  char *v31;
  uint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v36;
  char *v37;
  unint64_t v38;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  uint64_t v51;
  float v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  os_log_type_t v56;
  uint64_t v57;
  int v58;

  v2 = v1[6];
  if (!v2)
    goto LABEL_97;
  v3 = result;
  if (result >> 62)
    goto LABEL_88;
  v4 = *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (v4)
    goto LABEL_4;
  while (1)
  {
LABEL_51:
    swift_bridgeObjectRelease();
    result = espresso_plan_execute_sync();
    if ((_DWORD)result)
    {
      v40 = result;
      sub_240154B38();
      swift_bridgeObjectRelease();
      v58 = v40;
      type metadata accessor for espresso_return_status_t(0);
      sub_240154694();
      sub_2401546D0();
      swift_bridgeObjectRelease();
      sub_240080040();
      swift_allocError();
      *(_QWORD *)v41 = 0xD000000000000020;
      *(_QWORD *)(v41 + 8) = 0x8000000240166990;
      *(_BYTE *)(v41 + 16) = 0;
      return swift_willThrow();
    }
    v42 = v1[38];
    if ((unsigned __int128)((uint64_t)v1[37] * (__int128)v42) >> 64 != (v1[37] * v42) >> 63)
    {
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
      goto LABEL_93;
    }
    v43 = v1[27];
    if (!v43)
      goto LABEL_98;
    if (v42 < 0)
      goto LABEL_92;
    if (!v42)
      break;
    v44 = 0;
    v3 = MEMORY[0x24BEE4AF8];
    v57 = v1[38];
    while (v44 != v42)
    {
      v45 = v1[37];
      if (v45 < 0)
        goto LABEL_87;
      if (v45)
      {
        v46 = sub_240077968(0, 1, 1, MEMORY[0x24BEE4AF8]);
        v47 = 0;
        while (1)
        {
          v48 = v1[37];
          v49 = v44 * v48;
          if ((unsigned __int128)(v44 * (__int128)v48) >> 64 != (v44 * v48) >> 63)
            break;
          v50 = __OFADD__(v49, v47);
          v51 = v49 + v47;
          if (v50)
            goto LABEL_81;
          v52 = *(float *)(v43 + 4 * v51);
          v2 = v46[2];
          v53 = v46[3];
          if (v2 >= v53 >> 1)
            v46 = sub_240077968((_QWORD *)(v53 > 1), v2 + 1, 1, v46);
          ++v47;
          v46[2] = v2 + 1;
          *(double *)&v46[v2 + 4] = v52;
          if (v45 == v47)
            goto LABEL_69;
        }
        __break(1u);
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      v46 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_69:
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        result = (unint64_t)sub_240078778(0, *(_QWORD *)(v3 + 16) + 1, 1, (_QWORD *)v3);
        v3 = result;
      }
      v42 = v57;
      v2 = *(_QWORD *)(v3 + 16);
      v54 = *(_QWORD *)(v3 + 24);
      if (v2 >= v54 >> 1)
      {
        result = (unint64_t)sub_240078778((_QWORD *)(v54 > 1), v2 + 1, 1, (_QWORD *)v3);
        v3 = result;
      }
      ++v44;
      *(_QWORD *)(v3 + 16) = v2 + 1;
      *(_QWORD *)(v3 + 8 * v2 + 32) = v46;
      if (v44 == v57)
        goto LABEL_76;
    }
    while (1)
    {
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      swift_bridgeObjectRetain();
      result = sub_240154D30();
      v4 = result;
      if (!result)
        break;
LABEL_4:
      if (v4 < 1)
      {
        __break(1u);
        goto LABEL_91;
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        v5 = 0;
        v6 = (char *)(v2 + 0x20000);
        v7 = 0x8000;
        v2 = 65568;
        while (1)
        {
          v8 = MEMORY[0x24267D4E0](v5, v3);
          v9 = v6 - 0x20000;
          v10 = *(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_redBuffer);
          v11 = (char *)(v10 + 32);
          v12 = v10 + 65568;
          if (v6 - 0x20000 != v11 || (unint64_t)v9 >= v12)
            memmove(v9, v11, 0x10000uLL);
          v14 = v6 - 0x10000;
          v15 = *(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_greenBuffer);
          v16 = (char *)(v15 + 32);
          v17 = v15 + 65568;
          if (v6 - 0x10000 != v16 || (unint64_t)v14 >= v17)
            memmove(v14, v16, 0x10000uLL);
          if (v5 == 0xAAAAAAAAAAAALL)
            break;
          v19 = *(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_blueBuffer);
          v20 = (char *)(v19 + 32);
          v21 = v19 + 65568;
          if (v6 != v20 || (unint64_t)v6 >= v21)
            memmove(v6, v20, 0x10000uLL);
          swift_unknownObjectRelease();
          if (__OFADD__(v7, 0x4000))
            goto LABEL_83;
          ++v5;
          v6 += 196608;
          v7 += 49152;
          if (v4 == v5)
            goto LABEL_51;
        }
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
      }
      else
      {
        v23 = 0;
        v24 = (char *)(v2 + 0x20000);
        v2 = 0x8000;
        while (1)
        {
          v25 = *(_QWORD *)(v3 + 32 + 8 * v23);
          v26 = v24 - 0x20000;
          v27 = *(_QWORD *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_redBuffer);
          v28 = (char *)(v27 + 32);
          v29 = v27 + 65568;
          if (v24 - 0x20000 != v28 || (unint64_t)v26 >= v29)
            memmove(v26, v28, 0x10000uLL);
          swift_retain();
          v31 = v24 - 0x10000;
          v32 = *(_QWORD *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_greenBuffer);
          v33 = (char *)(v32 + 32);
          v34 = v32 + 65568;
          if (v24 - 0x10000 != v33 || (unint64_t)v31 >= v34)
            memmove(v31, v33, 0x10000uLL);
          if (v23 == 0xAAAAAAAAAAAALL)
            break;
          v36 = *(_QWORD *)(v25 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_blueBuffer);
          v37 = (char *)(v36 + 32);
          v38 = v36 + 65568;
          if (v24 != v37 || (unint64_t)v24 >= v38)
            memmove(v24, v37, 0x10000uLL);
          swift_release();
          if (__OFADD__(v2, 0x4000))
            goto LABEL_85;
          ++v23;
          v24 += 196608;
          v2 += 49152;
          if (v4 == v23)
            goto LABEL_51;
        }
      }
      __break(1u);
LABEL_85:
      __break(1u);
    }
  }
  v3 = MEMORY[0x24BEE4AF8];
  if (!*(_QWORD *)(MEMORY[0x24BEE4AF8] + 16))
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
LABEL_76:
  v55 = *(_QWORD *)(*(_QWORD *)(v3 + 32) + 16);
  if (v55 < 2)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  if (v55 < 4)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  if (v55 != 4)
  {
    LOBYTE(v58) = 5;
    sub_240154B38();
    sub_2401546D0();
    sub_2401548C8();
    sub_2401546D0();
    sub_2401548C8();
    v56 = sub_24015494C();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v58, 0, 0xE000000000000000, v56);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
  return result;
}

uint64_t DKBodyTrackerConfiguration.__allocating_init()()
{
  swift_allocObject();
  return DKTrackerConfiguration.init()();
}

uint64_t DKBodyTracker.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a6;
  v25 = a2;
  v26 = a4;
  v27 = a5;
  v23 = a1;
  v8 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24015434C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_240154310();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  v19 = v24;
  sub_240080084(v24, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v20 = sub_24014EA4C((uint64_t)v18, v25, (uint64_t)v14, v26, v27, (uint64_t)v10);
  sub_2400800C8(v19, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v11);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v23, v15);
  return v20;
}

uint64_t sub_24014EA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v7 = v6;
  v36 = a6;
  v37 = a5;
  v40 = a1;
  v11 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = sub_240154310();
  v14 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (_QWORD *)(v6 + qword_256FC4868);
  *v17 = -1;
  v17[1] = 0;
  *(_QWORD *)(v6 + qword_256FC4870) = -1;
  sub_2401544B4();
  v18 = qword_256FC4880;
  type metadata accessor for DKBoundingBoxFilter();
  swift_allocObject();
  *(_QWORD *)(v6 + v18) = DKBoundingBoxFilter.init(alpha:)(0.9);
  sub_240154274();
  *(_BYTE *)(v6 + qword_256FC4898) = 0;
  v19 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v7 + qword_256FC48A0) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 200)) = 0;
  *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 216)) = 0;
  v20 = v7 + *(_QWORD *)(*(_QWORD *)v7 + 232);
  v21 = type metadata accessor for DKPersonGroupFilter.Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_BYTE *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 240)) = 0;
  *(_QWORD *)(v7 + qword_256FC4888) = a2;
  *(_QWORD *)(v7 + qword_256FC4860) = a4;
  v22 = v7 + qword_256FC4858;
  v23 = sub_24015434C();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16);
  v38 = a3;
  v26 = a3;
  v27 = v36;
  v25(v22, v26, v23);
  *(_QWORD *)(v7 + qword_256FC4870) = v37;
  sub_240080084(v27, v7 + *(_QWORD *)(*(_QWORD *)v7 + 224), (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v28 = *(double *)(a2 + 16);
  v29 = *(double *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8798);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 208)) = sub_2400B80B4(v19, v28, v29);
  if (*(_BYTE *)(a2 + 136) == 1)
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
    v31 = v40;
    v37 = v14;
    v32 = v39;
    v30(v16, v40, v39);
    sub_240080084(v27, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    type metadata accessor for DKSphericalMotionFilter(0);
    swift_allocObject();
    v33 = sub_240116BE0((uint64_t)v16, (_QWORD *)a2, (uint64_t)v13);
    swift_release();
    sub_2400800C8(v27, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v38, v23);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v31, v32);
    *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 216)) = v33;
    swift_release();
  }
  else
  {
    swift_release();
    sub_2400800C8(v27, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v38, v23);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v40, v39);
  }
  return v7;
}

uint64_t DKBodyTrackerConfiguration.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_2400B8C64(a1);
  swift_release();
  return v2;
}

uint64_t DKBodyTrackerConfiguration.init(configuration:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_2400B8C64(a1);
  swift_release();
  return v1;
}

uint64_t DKBodyTrackerConfiguration.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKBodyTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24014EEF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  double v28;
  double v29;
  double v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void (*v38)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v39;
  uint64_t v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  void (*v46)(char *, uint64_t, uint64_t);
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v68;
  uint64_t v69;
  void (*v70)(uint64_t, _QWORD, uint64_t, int *);
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  int *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85[2];
  _BYTE v86[40];
  _QWORD v87[4];
  char v88;

  v79 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v2);
  v81 = (uint64_t *)((char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v84 = sub_24015434C();
  v80 = *(_QWORD *)(v84 - 8);
  MEMORY[0x24BDAC7A8](v84);
  v83 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = sub_240154310();
  v77 = *(_QWORD *)(v78 - 8);
  MEMORY[0x24BDAC7A8](v78);
  v82 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v68 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v68 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v68 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v68 - v19;
  v21 = type metadata accessor for DKMotion3();
  v22 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v1;
  sub_2401478A8((uint64_t)v86);
  sub_24008BADC((uint64_t)v86, (uint64_t)v87);
  v26 = 0;
  if ((v88 & 1) != 0)
    return v26;
  v69 = v22;
  v72 = v20;
  v68 = v11;
  v71 = v14;
  v75 = (int *)v21;
  v76 = v24;
  v27 = v78;
  v73 = v17;
  v74 = v8;
  v28 = *(double *)v87;
  v29 = *(double *)&v87[1];
  v30 = *(double *)&v87[2];
  v31 = *(double *)&v87[3];
  v32 = v25;
  v33 = *(_QWORD *)(v25 + *(_QWORD *)(*(_QWORD *)v25 + 216));
  v34 = v79;
  if (!v33)
    goto LABEL_5;
  swift_retain();
  swift_retain();
  sub_240071824(v34);
  swift_release();
  swift_retain();
  sub_240071824(v34);
  swift_release();
  swift_retain();
  sub_240071824(v34);
  swift_release();
  sub_2401161D8(v34);
  v35 = *(_QWORD *)(v33 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState);
  swift_retain();
  swift_release();
  if (v35)
  {
    v36 = (uint64_t)v72;
    sub_240080084(v35 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
    swift_release();
    v37 = v69;
    v38 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v69 + 56);
    v39 = v36;
    v40 = 0;
  }
  else
  {
LABEL_5:
    v37 = v69;
    v38 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v69 + 56);
    v36 = (uint64_t)v72;
    v39 = (uint64_t)v72;
    v40 = 1;
  }
  v41 = v75;
  v70 = v38;
  v38(v39, v40, 1, v75);
  v42 = v27;
  v43 = (uint64_t)v76;
  v44 = v77;
  v45 = v71;
  v46 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
  v46(v71, v34, v42);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v37 + 48))(v36, 1, v41) == 1)
  {
    v47 = v68;
    v46(v68, (uint64_t)v45, v42);
    v48 = v43;
    v46((char *)v43, (uint64_t)v47, v42);
    *(_QWORD *)(v43 + v41[5]) = &unk_251061B98;
    *(_QWORD *)(v43 + v41[6]) = &unk_251061BD0;
    v49 = *(void (**)(char *, uint64_t))(v44 + 8);
    v49(v47, v42);
    *(_QWORD *)(v43 + v41[7]) = &unk_251061C08;
    v49(v45, v42);
    sub_240070BD4((uint64_t)v72, &qword_256FB4438);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v42);
    v48 = v43;
    sub_2400A4FB4(v36, v43);
  }
  v50 = v84;
  v46(v74, v34, v42);
  v51 = (uint64_t)v83;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v83, v32 + qword_256FC4858, v50);
  v52 = *(_QWORD *)(v32 + qword_256FC4868 + 8);
  v85[0] = *(_QWORD *)(v32 + qword_256FC4868);
  v85[1] = v52;
  v53 = *(_QWORD *)(v32 + qword_256FC4870);
  v54 = *(_QWORD *)(v32 + qword_256FC4860);
  v55 = v81;
  sub_2400B8D80(v32 + *(_QWORD *)(*(_QWORD *)v32 + 232), (uint64_t)v81);
  v56 = type metadata accessor for DKPersonGroupFilter.Track(0);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
  {
    sub_240070BD4((uint64_t)v55, &qword_256FB65E8);
LABEL_12:
    v58 = -1;
    goto LABEL_13;
  }
  v57 = (uint64_t)v55;
  v58 = *v55;
  v59 = *(unsigned __int8 *)(v57 + 8);
  sub_240070BD4(v57, &qword_256FB65E8);
  if (v59 == 1)
    goto LABEL_12;
LABEL_13:
  v60 = (uint64_t)v73;
  sub_240080084(v48, (uint64_t)v73, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  v70(v60, 0, 1, v75);
  v61 = (uint64_t)v82;
  v46(v82, v32 + qword_256FC4890, v42);
  v62 = *(_QWORD *)(v32 + qword_256FC48A0);
  v63 = *(_QWORD *)(v62 + 16);
  if (v63)
  {
    v64 = *(_QWORD *)(v62 + 8 * v63 + 24);
    swift_retain();
  }
  else
  {
    v64 = 0;
  }
  v65 = (uint64_t)v74;
  v66 = (uint64_t)v73;
  type metadata accessor for DKBodyTrackerState(0);
  swift_allocObject();
  v26 = DKBodyTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(v65, v51, v85, v53, v54, v58, v66, v61, v28, v29, v30, v31, 0, v64);
  sub_2400800C8((uint64_t)v76, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  return v26;
}

uint64_t DKBodyTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a5;
  v25 = a2;
  v26 = a4;
  v24 = a1;
  v9 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24015434C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_240154310();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v20, a1, v16, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  sub_240080084(a6, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v21 = sub_24014EA4C((uint64_t)v20, v25, (uint64_t)v15, v26, v27, (uint64_t)v11);
  sub_2400800C8(a6, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a3, v12);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v24, v16);
  return v21;
}

uint64_t DKBodyTracker.__deallocating_deinit()
{
  _s23IntelligentTrackingCore13DKBodyTrackerCfd_0();
  return swift_deallocClassInstance();
}

uint64_t sub_24014F76C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_24014EEF4(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for DKBodyTrackerConfiguration()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DKBodyTracker()
{
  uint64_t result;

  result = qword_256FC3740;
  if (!qword_256FC3740)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24014F7EC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[12] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  v1[13] = swift_task_alloc();
  v2 = type metadata accessor for DKCamera();
  v1[14] = v2;
  v1[15] = *(_QWORD *)(v2 - 8);
  v1[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24014F870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  double v15;
  double v16;
  uint64_t v17;
  double v18;
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  unint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  os_log_type_t v31;
  double v32;
  double v33;
  double v34;
  char v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  unint64_t v41;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (!v3)
    goto LABEL_4;
  v4 = *(_QWORD *)(v0 + 112);
  v5 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 104);
  sub_240070B90(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v6, &qword_256FB4430);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    sub_240070BD4(*(_QWORD *)(v0 + 104), &qword_256FB4430);
LABEL_4:
    v7 = 0;
LABEL_5:
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v7);
  }
  v9 = *(_QWORD *)(v0 + 128);
  v10 = *(_QWORD *)(v0 + 96);
  sub_240070AF8(*(_QWORD *)(v0 + 104), v9);
  v11 = *(_QWORD *)(*(_QWORD *)(v10 + 40)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_framingEngine);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_240120E14(v2);
  swift_release();
  v12 = *(_QWORD *)(v1 + 48);
  *(_BYTE *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = *(_BYTE *)(v11 + 41);
  *(_BYTE *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = *(_BYTE *)(v11 + 43);
  *(_BYTE *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = *(_BYTE *)(v11 + 42);
  *(_BYTE *)(*(_QWORD *)(v10 + 40)
           + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastHorizontalFraming) = *(_BYTE *)(v11 + 42);
  v13 = *(double *)(v11 + 48);
  v14 = *(double *)(v11 + 56) - v13;
  v15 = *(double *)(v11 + 64);
  v16 = *(double *)(v11 + 72) - v15;
  v17 = v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D;
  *(double *)v17 = v13;
  *(double *)(v17 + 8) = v15;
  *(double *)(v17 + 16) = v14;
  *(double *)(v17 + 24) = v16;
  *(_BYTE *)(v17 + 32) = 0;
  v18 = *(double *)(v9 + 8);
  LOBYTE(v40) = *(_BYTE *)v9;
  v19 = sub_24012290C((unsigned __int8 *)&v40, v18);
  v21 = v20;
  v23 = v22;
  v25 = v24;
  v39 = 3;
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_240154B38();
  v26 = v41;
  *(_QWORD *)(v0 + 80) = v40;
  *(_QWORD *)(v0 + 88) = v26;
  result = sub_2401546D0();
  v27 = *(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D;
  if ((*(_BYTE *)(v27 + 32) & 1) == 0)
  {
    v38 = *(_QWORD *)(v0 + 128);
    v28 = *(_OWORD *)(v27 + 16);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)v27;
    *(_OWORD *)(v0 + 32) = v28;
    type metadata accessor for CGRect(0);
    sub_240154C94();
    sub_2401546D0();
    *(double *)(v0 + 48) = v19;
    *(double *)(v0 + 56) = v21;
    *(double *)(v0 + 64) = v23;
    *(double *)(v0 + 72) = v25;
    sub_240154C94();
    v29 = *(_QWORD *)(v0 + 80);
    v30 = *(_QWORD *)(v0 + 88);
    v31 = sub_24015494C();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v39, v29, v30, v31);
    swift_bridgeObjectRelease();
    v32 = COERCE_DOUBLE(sub_24014FC4C(v3));
    v34 = v33;
    v36 = v35;
    swift_bridgeObjectRelease();
    swift_release();
    sub_240070B3C(v38);
    v37 = *(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D;
    if ((v36 & 1) != 0)
    {
      *(_OWORD *)v37 = 0u;
      *(_OWORD *)(v37 + 16) = 0u;
      v7 = 1;
      *(_BYTE *)(v37 + 32) = 1;
    }
    else
    {
      *(double *)v37 = v19 + v32 - v23 * 0.5;
      *(double *)(v37 + 8) = v21 + v34 - v25 * 0.5;
      *(double *)(v37 + 16) = v23;
      *(double *)(v37 + 24) = v25;
      *(_BYTE *)(v37 + 32) = 0;
      v7 = 1;
    }
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_24014FC08()
{
  return type metadata accessor for DKFramingTask();
}

uint64_t type metadata accessor for DKFramingTask()
{
  uint64_t result;

  result = qword_256FC3A58;
  if (!qword_256FC3A58)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_24014FC4C(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  int64_t v14;
  char *v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, unint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  double *v23;
  double v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  double *v28;
  double v29;
  unint64_t v30;
  unint64_t result;
  uint64_t v32;
  unint64_t v33;
  double v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (unint64_t)&v40 - v6;
  MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v40 - v11;
  v13 = a1 >> 62;
  if (a1 >> 62)
    goto LABEL_61;
  v14 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (v14 < 1)
  {
LABEL_62:
    *(double *)&result = 0.0;
    return result;
  }
LABEL_3:
  v43 = (char *)v7;
  v44 = v13;
  v42 = v10;
  v40 = v4;
  v47 = MEMORY[0x24BEE4AF8];
  sub_2400E5724(0, v14, 0);
  v15 = 0;
  v45 = v14;
  v46 = a1 & 0xC000000000000001;
  v4 = (char *)v14;
  do
  {
    if (v46)
    {
      v16 = MEMORY[0x24267D4E0](v15, a1);
    }
    else
    {
      v16 = *(_QWORD *)(a1 + 8 * (_QWORD)v15 + 32);
      swift_retain();
    }
    sub_240070B90(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, (uint64_t)v12, &qword_256FB4438);
    v13 = type metadata accessor for DKMotion3();
    v17 = *(unsigned int (**)(char *, uint64_t, unint64_t))(*(_QWORD *)(v13 - 8) + 48);
    v18 = 0;
    if (!v17(v12, 1, v13))
    {
      v19 = *(_QWORD *)&v12[*(int *)(v13 + 20)];
      if (!*(_QWORD *)(v19 + 16))
      {
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        v39 = v10;
        swift_bridgeObjectRetain();
        v14 = sub_240154D30();
        swift_bridgeObjectRelease();
        v10 = v39;
        if (v14 < 1)
          goto LABEL_62;
        goto LABEL_3;
      }
      v18 = *(_QWORD *)(v19 + 32);
    }
    sub_240070BD4((uint64_t)v12, &qword_256FB4438);
    swift_release();
    v20 = v47;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_2400E5724(0, *(_QWORD *)(v20 + 16) + 1, 1);
      v4 = (char *)v45;
      v20 = v47;
    }
    v7 = *(_QWORD *)(v20 + 16);
    v21 = *(_QWORD *)(v20 + 24);
    if (v7 >= v21 >> 1)
    {
      sub_2400E5724(v21 > 1, v7 + 1, 1);
      v4 = (char *)v45;
      v20 = v47;
    }
    ++v15;
    *(_QWORD *)(v20 + 16) = v7 + 1;
    *(_QWORD *)(v20 + 8 * v7 + 32) = v18;
  }
  while (v4 != v15);
  if (!v7)
  {
    v22 = 0;
    v24 = 0.0;
    v26 = v44;
LABEL_21:
    v27 = v7 - v22 + 1;
    v28 = (double *)(v20 + 8 * v22 + 32);
    do
    {
      v29 = *v28++;
      v24 = v24 + v29;
      --v27;
    }
    while (v27);
    goto LABEL_23;
  }
  v22 = (v7 + 1) & 0x7FFFFFFFFFFFFFFELL;
  v23 = (double *)(v20 + 40);
  v24 = 0.0;
  v25 = v22;
  v26 = v44;
  do
  {
    v24 = v24 + *(v23 - 1) + *v23;
    v23 += 2;
    v25 -= 2;
  }
  while (v25);
  if (v7 + 1 != v22)
    goto LABEL_21;
LABEL_23:
  swift_bridgeObjectRelease();
  if (!v26)
  {
    v30 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    *(double *)&result = COERCE_DOUBLE(swift_bridgeObjectRetain());
    v7 = (unint64_t)v43;
    v44 = v30;
    if (v30)
      goto LABEL_25;
LABEL_50:
    swift_bridgeObjectRelease();
LABEL_54:
    *(double *)&result = v24 / (double)v45;
    return result;
  }
  swift_bridgeObjectRetain();
  *(double *)&result = COERCE_DOUBLE(sub_240154D30());
  v7 = (unint64_t)v43;
  v44 = result;
  if (*(double *)&result == 0.0)
    goto LABEL_50;
LABEL_25:
  if (v46)
  {
    v12 = (char *)MEMORY[0x24267D4E0](0, a1);
    goto LABEL_28;
  }
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v12 = *(char **)(a1 + 32);
    swift_retain();
LABEL_28:
    if (v44 != 1)
    {
      v41 = a1 & 0xFFFFFFFFFFFFFF8;
      v32 = 1;
      v4 = v42;
      do
      {
        v43 = v12;
        v33 = v32;
        while (1)
        {
          if (v46)
          {
            v12 = (char *)MEMORY[0x24267D4E0](v33, a1);
            v32 = v33 + 1;
            if (__OFADD__(v33, 1))
              goto LABEL_56;
          }
          else
          {
            if ((v33 & 0x8000000000000000) != 0)
              goto LABEL_57;
            if (v33 >= *(_QWORD *)(v41 + 16))
              goto LABEL_58;
            v12 = *(char **)(a1 + 8 * v33 + 32);
            swift_retain();
            v32 = v33 + 1;
            if (__OFADD__(v33, 1))
              goto LABEL_56;
          }
          sub_240070B90((uint64_t)&v12[OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion], (uint64_t)v4, &qword_256FB4438);
          v34 = 0.0;
          v35 = 0.0;
          if (!v17(v4, 1, v13))
          {
            v36 = *(_QWORD *)&v4[*(int *)(v13 + 20)];
            if (*(_QWORD *)(v36 + 16) < 2uLL)
              goto LABEL_59;
            v35 = *(double *)(v36 + 40);
          }
          sub_240070BD4((uint64_t)v4, &qword_256FB4438);
          sub_240070B90((uint64_t)&v43[OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion], v7, &qword_256FB4438);
          if (!v17((char *)v7, 1, v13))
          {
            v37 = *(_QWORD *)(v7 + *(int *)(v13 + 20));
            if (*(_QWORD *)(v37 + 16) < 2uLL)
              goto LABEL_60;
            v34 = *(double *)(v37 + 40);
          }
          sub_240070BD4(v7, &qword_256FB4438);
          if (v35 < v34)
            break;
          swift_release();
          ++v33;
          if (v32 == v44)
          {
            v12 = v43;
            goto LABEL_51;
          }
        }
        swift_release();
      }
      while (v32 != v44);
    }
LABEL_51:
    swift_bridgeObjectRelease();
    v38 = (uint64_t)v40;
    sub_240070B90((uint64_t)&v12[OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion], (uint64_t)v40, &qword_256FB4438);
    swift_release();
    *(double *)&result = COERCE_DOUBLE(((uint64_t (*)(uint64_t, uint64_t, unint64_t))v17)(v38, 1, v13));
    if ((_DWORD)result || *(_QWORD *)(*(_QWORD *)(v38 + *(int *)(v13 + 20)) + 16) >= 2uLL)
    {
      sub_240070BD4(v38, &qword_256FB4438);
      goto LABEL_54;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24015021C(double *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  double v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a1;
  v7 = *((_QWORD *)a1 + 1);
  v9 = a1[2];
  v10 = *((_QWORD *)a1 + 3);
  v11 = *((_QWORD *)a1 + 4);
  v12 = *((_QWORD *)a1 + 5);
  sub_240154274();
  sub_240154274();
  v13 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lock;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB73A8);
  v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  *(_QWORD *)(v2 + v13) = v14;
  v15 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_statsFilter;
  type metadata accessor for DKStatisticsFilter();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 32) = 0;
  *(_BYTE *)(v16 + 40) = 1;
  v17 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v16 + 48) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v16 + 56) = v17;
  *(_QWORD *)(v16 + 16) = 30;
  *(_BYTE *)(v16 + 24) = 0;
  *(_QWORD *)(v2 + v15) = v16;
  v18 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastThermalStateStamped;
  v19 = __swift_instantiateConcreteTypeFromMangledName(qword_256FC3BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(double *)(v2 + 16) = v8;
  *(_QWORD *)(v2 + 24) = v7;
  *(double *)(v2 + 32) = v9;
  *(_QWORD *)(v2 + 40) = v10;
  *(_QWORD *)(v2 + 48) = v11;
  *(_QWORD *)(v2 + 56) = v12;
  *(_QWORD *)(v2 + 64) = v7;
  *(_BYTE *)(v2 + 72) = 0;
  sub_240154274();
  v20 = sub_240154310();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v6, 0, 1, v20);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  *(_QWORD *)(v2 + 80) = sub_240148668(COERCE__INT64(1.0 / (double)v7), 0, v10, 0, 0, (uint64_t)v6, 0, 1, v9, 0, 1);
  return v2;
}

void sub_240150414(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint64_t v18;
  char v19;
  double v20;
  uint64_t v21;
  double v22;
  void (*v23)(char *, uint64_t);
  double v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  os_log_type_t v32;
  BOOL v33;
  void (*v34)(char *, char *, uint64_t);
  char *v35;
  char *v36;
  char *v37;
  double v38;
  double v39;
  uint64_t v40;
  unint64_t v41;
  os_log_type_t v42;
  uint64_t v43;
  os_log_type_t v44;
  uint64_t v45;
  os_unfair_lock_s *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  char v52;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_240154310();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v48 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v47 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v47 - v14;
  v16 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lock;
  v17 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lock);
  swift_retain();
  os_unfair_lock_lock(v17 + 4);
  swift_release();
  sub_2401542F8();
  swift_retain();
  sub_2400771B4(a1);
  swift_release();
  v18 = sub_240077648();
  if ((v19 & 1) == 0)
  {
    v20 = *(double *)&v18;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    swift_retain();
    sub_240148324(0, 1, (uint64_t)v6, v20);
    swift_release();
    sub_240070BD4((uint64_t)v6, &qword_256FB4CC8);
  }
  v21 = *(_QWORD *)(v2 + 80);
  if ((*(_BYTE *)(v21 + 33) & 1) == 0)
  {
    v23 = *(void (**)(char *, uint64_t))(v8 + 8);
    goto LABEL_34;
  }
  if (*(_BYTE *)(v21 + 32) == 1)
    v22 = atan2(*(long double *)(v21 + 48), *(long double *)(v21 + 56));
  else
    v22 = *(double *)(v21 + 40);
  if (fabs(v22) < 0.00001)
    v22 = dbl_24015DB10[v22 > 0.0];
  v24 = 1.0 / v22;
  if ((~*(_QWORD *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v25 = *(_QWORD *)(v2 + 16);
  v26 = __OFSUB__(v25, 2);
  v27 = v25 - 2;
  if (v26)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (v27 <= (uint64_t)v24)
    v27 = (uint64_t)v24;
  if (*(_QWORD *)(v2 + 24) >= v27)
    v28 = v27;
  else
    v28 = *(_QWORD *)(v2 + 24);
  v29 = *(_QWORD *)(v2 + 64);
  if (!__OFSUB__(v29, v28))
  {
    if (v29 != v28)
    {
      v52 = 13;
      v50 = 0;
      v51 = 0xE000000000000000;
      sub_240154B38();
      swift_bridgeObjectRelease();
      v50 = 0xD000000000000018;
      v51 = 0x8000000240166C00;
      v49 = *(_QWORD *)(v2 + 64);
      sub_240154EBC();
      sub_2401546D0();
      swift_bridgeObjectRelease();
      sub_2401546D0();
      v49 = v28;
      sub_240154EBC();
      sub_2401546D0();
      swift_bridgeObjectRelease();
      v30 = v50;
      v31 = v51;
      v32 = sub_240154964();
      _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v52, v30, v31, v32);
      swift_bridgeObjectRelease();
      *(_QWORD *)(v2 + 64) = v28;
    }
    if (*(_BYTE *)(v2 + 72))
    {
      if (*(_BYTE *)(v2 + 72) != 1)
        goto LABEL_32;
      goto LABEL_24;
    }
    if (v28 >= *(_QWORD *)(v2 + 16) && !sub_240150A30())
    {
      if (*(_BYTE *)(v2 + 72) != 1)
        goto LABEL_32;
LABEL_24:
      if (*(_QWORD *)(v2 + 64) == *(_QWORD *)(v2 + 24))
      {
        v33 = sub_240150A30();
        v34 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v34(v12, v15, v7);
        if (!v33)
        {
          v35 = (char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastModeSwitchTime);
          v36 = v48;
          v34(v48, (char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastModeSwitchTime), v7);
          sub_24015428C();
          v37 = v36;
          v39 = v38;
          v23 = *(void (**)(char *, uint64_t))(v8 + 8);
          v23(v37, v7);
          v23(v12, v7);
          if (*(double *)(v2 + 48) < v39)
          {
            *(_BYTE *)(v2 + 72) = 0;
            LOBYTE(v49) = 13;
            v50 = 0;
            v51 = 0xE000000000000000;
            sub_240154B38();
            sub_2401546D0();
            v34(v37, v35, v7);
            sub_24015428C();
            v23(v37, v7);
            sub_2401548C8();
            sub_2401546D0();
            v40 = v50;
            v41 = v51;
            v42 = sub_240154964();
            _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v49, v40, v41, v42);
            swift_bridgeObjectRelease();
            v23(v35, v7);
            v34(v35, v15, v7);
          }
          goto LABEL_34;
        }
        goto LABEL_33;
      }
LABEL_32:
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v15, v7);
LABEL_33:
      v23 = *(void (**)(char *, uint64_t))(v8 + 8);
      v23(v12, v7);
      goto LABEL_34;
    }
    *(_BYTE *)(v2 + 72) = 1;
    v43 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastModeSwitchTime;
    v23 = *(void (**)(char *, uint64_t))(v8 + 8);
    v23((char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastModeSwitchTime), v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v43, v15, v7);
    LOBYTE(v50) = 13;
    v44 = sub_240154964();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v50, 0xD00000000000001FLL, 0x8000000240166C70, v44);
LABEL_34:
    v45 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastProcessTime;
    v23((char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastProcessTime), v7);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 16))(v45, v15, v7);
    v46 = *(os_unfair_lock_s **)(v2 + v16);
    swift_retain();
    os_unfair_lock_unlock(v46 + 4);
    swift_release();
    v23(v15, v7);
    return;
  }
LABEL_39:
  __break(1u);
}

BOOL sub_240150A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  double v30;
  double v31;
  uint64_t v32;
  id v33;
  id v34;
  _BOOL8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  unsigned int (*v45)(char *, uint64_t, uint64_t);

  v1 = v0;
  v44 = sub_240154310();
  v2 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC3BA0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v40 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v40 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_256FC3BE8);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v43 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v40 - v18;
  v20 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastThermalStateStamped;
  sub_2401510E0(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastThermalStateStamped, (uint64_t)v13);
  v45 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v45(v13, 1, v14) == 1)
  {
    sub_240070BD4((uint64_t)v13, &qword_256FC3BA0);
    v21 = *(int *)(v14 + 48);
    sub_2401542F8();
    v22 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
    v23 = v2;
    v24 = objc_msgSend(v22, sel_thermalState);

    *(_QWORD *)&v10[v21] = v24;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
    sub_240151128((uint64_t)v10, v20);
    v25 = v44;
  }
  else
  {
    v41 = v7;
    v42 = v20;
    v26 = *(int *)(v14 + 48);
    v27 = *(void (**)(char *, char *, uint64_t))(v2 + 32);
    v28 = v1;
    v23 = v2;
    v29 = v44;
    v27(v19, v13, v44);
    *(_QWORD *)&v19[v26] = *(_QWORD *)&v13[v26];
    sub_2401542F8();
    sub_24015428C();
    v31 = v30;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v29);
    v25 = v29;
    if (*(double *)(v28 + 56) >= v31)
    {
      sub_240070BD4((uint64_t)v19, qword_256FC3BE8);
      v7 = v41;
      v20 = v42;
    }
    else
    {
      v32 = *(int *)(v14 + 48);
      sub_2401542F8();
      v33 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
      v34 = objc_msgSend(v33, sel_thermalState);

      *(_QWORD *)&v10[v32] = v34;
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v10, 0, 1, v14);
      v20 = v42;
      sub_240151128((uint64_t)v10, v42);
      sub_240070BD4((uint64_t)v19, qword_256FC3BE8);
      v7 = v41;
    }
  }
  sub_2401510E0(v20, (uint64_t)v7);
  if (v45(v7, 1, v14) == 1)
  {
    sub_240070BD4((uint64_t)v7, &qword_256FC3BA0);
    return 0;
  }
  else
  {
    v36 = *(int *)(v14 + 48);
    v37 = (uint64_t)v43;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v43, v7, v25);
    v38 = *(_QWORD *)&v7[v36];
    *(_QWORD *)(v37 + v36) = v38;
    v35 = v38 == 3;
    sub_240070BD4(v37, qword_256FC3BE8);
  }
  return v35;
}

uint64_t DKAdaptiveFramerate.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastModeSwitchTime;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastProcessTime, v2);
  swift_release();
  swift_release();
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastThermalStateStamped, &qword_256FC3BA0);
  return v0;
}

uint64_t DKAdaptiveFramerate.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastModeSwitchTime;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastProcessTime, v2);
  swift_release();
  swift_release();
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKAdaptiveFramerate_lastThermalStateStamped, &qword_256FC3BA0);
  return swift_deallocClassInstance();
}

uint64_t sub_240150F14()
{
  return type metadata accessor for DKAdaptiveFramerate();
}

uint64_t type metadata accessor for DKAdaptiveFramerate()
{
  uint64_t result;

  result = qword_256FC3BD0;
  if (!qword_256FC3BD0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_240150F58()
{
  unint64_t v0;
  unint64_t v1;

  sub_240154310();
  if (v0 <= 0x3F)
  {
    sub_240151020();
    if (v1 <= 0x3F)
      swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DKAdaptiveFramerate()
{
  return swift_lookUpClassMethod();
}

void sub_240151020()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256FC3BE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_256FC3BE8);
    v0 = sub_240154A30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256FC3BE0);
  }
}

uint64_t getEnumTagSinglePayload for DKAdaptiveFramerate.Config(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 48))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DKAdaptiveFramerate.Config(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DKAdaptiveFramerate.Config()
{
  return &type metadata for DKAdaptiveFramerate.Config;
}

uint64_t sub_2401510E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC3BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240151128(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FC3BA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t DKProbabilityValue.__allocating_init(variable:probability:)(uint64_t a1, double a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4 + 80) - 8) + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 104), a1);
  *(double *)(v4 + *(_QWORD *)(*(_QWORD *)v4 + 112)) = a2;
  return v4;
}

uint64_t DKProbabilityDistribution.__allocating_init(variables:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t sub_24015120C(uint64_t a1)
{
  double v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v6;

  v1 = MEMORY[0x24BDAC7A8](a1);
  v3 = (char *)&v6 - v2;
  (*(void (**)(char *, double))(v4 + 16))((char *)&v6 - v2, v1);
  return sub_2401512A0((uint64_t)v3);
}

uint64_t sub_240151280@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 16))(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 104));
}

uint64_t sub_2401512A0(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 40))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 104), a1);
}

uint64_t (*sub_2401512C0())()
{
  return nullsub_1;
}

double sub_2401512D8()
{
  uint64_t v0;

  return *(double *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112));
}

void sub_2401512E8(double a1)
{
  uint64_t v1;

  *(double *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112)) = a1;
}

uint64_t (*sub_2401512F8())()
{
  return nullsub_1;
}

uint64_t DKProbabilityValue.init(variable:probability:)(uint64_t a1, double a2)
{
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 80) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 104), a1);
  *(double *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 112)) = a2;
  return v2;
}

BOOL sub_24015135C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24015136C()
{
  return sub_240154FF4();
}

uint64_t sub_240151390(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656C626169726176 && a2 == 0xE800000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C696261626F7270 && a2 == 0xEB00000000797469)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_240151498()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t sub_2401514DC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6C696261626F7270;
  else
    return 0x656C626169726176;
}

BOOL sub_24015151C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24015135C(*a1, *a2);
}

uint64_t sub_240151534()
{
  return sub_240151498();
}

uint64_t sub_240151548()
{
  return sub_24015136C();
}

uint64_t sub_24015155C()
{
  sub_240154FE8();
  sub_24015136C();
  return sub_240155018();
}

uint64_t sub_2401515A4()
{
  char *v0;

  return sub_2401514DC(*v0);
}

uint64_t sub_2401515B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_240151390(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2401515E8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_240152940();
  *a1 = result;
  return result;
}

uint64_t sub_240151618(uint64_t a1)
{
  MEMORY[0x24267E0BC](&unk_240160FF8, a1);
  return sub_240155048();
}

uint64_t sub_24015164C(uint64_t a1)
{
  MEMORY[0x24267E0BC](&unk_240160FF8, a1);
  return sub_240155054();
}

uint64_t DKProbabilityValue.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  return v0;
}

uint64_t DKProbabilityValue.__deallocating_deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 104));
  return swift_deallocClassInstance();
}

uint64_t sub_2401516EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v21 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v6 + 88);
  v18 = *(_QWORD *)(v6 + 96);
  v8 = type metadata accessor for DKProbabilityValue.CodingKeys(255, v3, v7, v18);
  MEMORY[0x24267E0BC](&unk_240160FF8, v8);
  v9 = sub_240154E8C();
  v17 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = v19;
  sub_240155030();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v12 + 80) - 8) + 16))(v5, v12 + *(_QWORD *)(*(_QWORD *)v12 + 104));
  v23 = 0;
  v13 = v20;
  sub_240154E80();
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v11, v9);
  }
  else
  {
    v15 = v17;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v3);
    v22 = 1;
    sub_240154E68();
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v9);
  }
}

uint64_t DKProbabilityValue.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKProbabilityValue.init(from:)(a1);
  return v2;
}

uint64_t DKProbabilityValue.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v22 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v7 = *(_QWORD *)(v5 + 88);
  v6 = *(_QWORD *)(v5 + 96);
  v24 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = v6;
  v8 = type metadata accessor for DKProbabilityValue.CodingKeys(255, v3, v7, v6);
  MEMORY[0x24267E0BC](&unk_240160FF8, v8);
  v23 = sub_240154E14();
  v9 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v11 = (char *)&v22 - v10;
  v12 = a1[3];
  v26 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v13 = v28;
  sub_240155024();
  if (v13)
  {
    v18 = v27;
    v16 = (uint64_t)v26;
    type metadata accessor for DKProbabilityValue(0, v3, v7, v25);
    swift_deallocPartialClassInstance();
    v21 = v16;
  }
  else
  {
    v28 = v9;
    v14 = v22;
    v15 = v23;
    v30 = 0;
    sub_240154DFC();
    v18 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v18 + *(_QWORD *)(*(_QWORD *)v18 + 104), v24, v3);
    v29 = 1;
    sub_240154DE4();
    v20 = v19;
    (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v15);
    *(_QWORD *)(v18 + *(_QWORD *)(*(_QWORD *)v18 + 112)) = v20;
    v21 = (uint64_t)v26;
  }
  __swift_destroy_boxed_opaque_existential_1(v21);
  return v18;
}

uint64_t sub_240151B80@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = DKProbabilityValue.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_240151BA8(_QWORD *a1)
{
  return sub_2401516EC(a1);
}

uint64_t sub_240151BC8()
{
  sub_2400A5228();
  return swift_bridgeObjectRetain();
}

uint64_t DKProbabilityDistribution.init(variables:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t type metadata accessor for DKProbabilityValue.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DKProbabilityValue.CodingKeys);
}

uint64_t type metadata accessor for DKProbabilityValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DKProbabilityValue);
}

uint64_t sub_240151C00()
{
  double *v0;
  double *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[15];
  double v14;

  v1 = v0;
  v2 = *(_QWORD **)v0;
  v3 = *((_QWORD *)v0 + 2);
  v13[13] = 0;
  v13[14] = v3;
  v4 = v2[10];
  v5 = v2[11];
  v13[8] = v4;
  v13[9] = v5;
  v6 = v2[12];
  v13[10] = v6;
  v7 = (char *)type metadata accessor for DKProbabilityValue(255, v4, v5, v6);
  v8 = sub_240154844();
  swift_bridgeObjectRetain();
  MEMORY[0x24267E0BC](MEMORY[0x24BEE12C8], v8);
  sub_24015473C();
  result = swift_bridgeObjectRelease();
  if (v14 != 0.0)
  {
    v14 = v1[2];
    v13[2] = v4;
    v13[3] = v5;
    v13[4] = v6;
    v13[5] = MEMORY[0x24BDAC7A8](*(_QWORD *)&v14);
    swift_bridgeObjectRetain();
    v10 = MEMORY[0x24267E0BC](MEMORY[0x24BEE12E0], v8);
    v12 = sub_24008BB24((void (*)(char *, char *))sub_240152420, (uint64_t)v13, v8, v7, MEMORY[0x24BEE4078], v10, MEMORY[0x24BEE40A8], v11);
    swift_bridgeObjectRelease();
    *((_QWORD *)v1 + 2) = v12;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240151D78()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v3;

  v3 = v0[2];
  type metadata accessor for DKProbabilityValue(255, *(_QWORD *)(*v0 + 80), *(_QWORD *)(*v0 + 88), *(_QWORD *)(*v0 + 96));
  v1 = sub_240154844();
  swift_bridgeObjectRetain();
  MEMORY[0x24267E0BC](MEMORY[0x24BEE12C8], v1);
  sub_240154748();
  swift_bridgeObjectRelease();
  MEMORY[0x24267E0BC](MEMORY[0x24BEE12B0], v1);
  sub_2401545D4();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_240151E4C(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x656C626169726176 && a2 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_240154EF8();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_240151EDC()
{
  return 0x656C626169726176;
}

uint64_t sub_240151EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_240151E4C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_240151F2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24009AB30();
  *a1 = result & 1;
  return result;
}

uint64_t sub_240151F60(uint64_t a1)
{
  MEMORY[0x24267E0BC](&unk_240160FA8, a1);
  return sub_240155048();
}

uint64_t sub_240151F94(uint64_t a1)
{
  MEMORY[0x24267E0BC](&unk_240160FA8, a1);
  return sub_240155054();
}

uint64_t DKProbabilityDistribution.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKProbabilityDistribution.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_240152008(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];

  v2 = v1;
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v15 = *(_QWORD *)(*v2 + 88);
  v16 = v5;
  v6 = *(_QWORD *)(v4 + 96);
  v7 = type metadata accessor for DKProbabilityDistribution.CodingKeys(255, v5, v15, v6);
  MEMORY[0x24267E0BC](&unk_240160FA8, v7);
  v8 = sub_240154E8C();
  v17 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240155030();
  v18[2] = v2[2];
  v11 = type metadata accessor for DKProbabilityValue(255, v16, v15, v6);
  v12 = sub_240154844();
  v18[0] = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKProbabilityValue<A>, v11);
  MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v12, v18);
  sub_240154E80();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, v8);
}

uint64_t DKProbabilityDistribution.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKProbabilityDistribution.init(from:)(a1);
  return v2;
}

uint64_t *DKProbabilityDistribution.init(from:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD v24[3];

  v2 = v1;
  v4 = *v1;
  v5 = *(_QWORD *)(*v1 + 80);
  v6 = *(_QWORD *)(v4 + 88);
  v7 = *(_QWORD *)(v4 + 96);
  v8 = type metadata accessor for DKProbabilityDistribution.CodingKeys(255, v5, v6, v7);
  MEMORY[0x24267E0BC](&unk_240160FA8, v8);
  v9 = sub_240154E14();
  v20 = *(_QWORD *)(v9 - 8);
  v21 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v19 - v10;
  v12 = type metadata accessor for DKProbabilityValue(0, v5, v6, v7);
  v2[2] = sub_2401547F0();
  v13 = a1[3];
  v23 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v14 = v22;
  sub_240155024();
  if (v14)
  {
    swift_release();
  }
  else
  {
    v15 = v20;
    v16 = sub_240154844();
    v24[0] = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKProbabilityValue<A>, v12);
    MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v16, v24);
    v17 = v21;
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v17);
    v2[2] = v24[2];
    swift_bridgeObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  return v2;
}

uint64_t sub_2401523B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = DKProbabilityDistribution.__allocating_init(from:)(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_2401523E0(_QWORD *a1)
{
  return sub_240152008(a1);
}

double sub_240152400@<D0>(double *a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  double result;

  result = *a1 + *(double *)(*(_QWORD *)a2 + *(_QWORD *)(**(_QWORD **)a2 + 112));
  *a3 = result;
  return result;
}

uint64_t sub_240152420@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  *(double *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112)) = *(double *)(v3 + *(_QWORD *)(*(_QWORD *)v3 + 112))
                                                       / *(double *)(v2 + 40);
  *a2 = v3;
  return swift_retain();
}

BOOL sub_240152454(uint64_t a1, uint64_t a2)
{
  return *(double *)(*(_QWORD *)a1 + *(_QWORD *)(**(_QWORD **)a1 + 112)) < *(double *)(*(_QWORD *)a2
                                                                                       + *(_QWORD *)(**(_QWORD **)a2 + 112));
}

uint64_t type metadata accessor for DKProbabilityDistribution.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DKProbabilityDistribution.CodingKeys);
}

uint64_t sub_24015248C@<X0>(uint64_t a1@<X8>)
{
  return sub_240151280(a1);
}

uint64_t sub_2401524B0()
{
  return 24;
}

__n128 sub_2401524BC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void sub_2401524D0(double *a1@<X8>)
{
  *a1 = sub_2401512D8();
}

void sub_2401524F8(double *a1)
{
  sub_2401512E8(*a1);
}

uint64_t sub_24015251C()
{
  return 24;
}

__n128 sub_240152528(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_24015253C@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_2400A5228();
  return swift_bridgeObjectRetain();
}

uint64_t sub_240152564()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_2400E1840(v0);
}

uint64_t sub_24015258C()
{
  return 24;
}

__n128 sub_240152598(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_2401525AC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKProbabilityValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKProbabilityValue.variable.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKProbabilityValue.variable.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKProbabilityValue.variable.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKProbabilityValue.probability.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKProbabilityValue.probability.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKProbabilityValue.probability.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKProbabilityValue.__allocating_init(variable:probability:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DKProbabilityValue.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKProbabilityValue.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_2401526B8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for DKProbabilityDistribution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DKProbabilityDistribution);
}

uint64_t method lookup function for DKProbabilityDistribution()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKProbabilityDistribution.variables.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKProbabilityDistribution.variables.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKProbabilityDistribution.variables.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKProbabilityDistribution.__allocating_init(variables:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of DKProbabilityDistribution.normalize()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKProbabilityDistribution.max(threshold:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 152))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKProbabilityDistribution.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKProbabilityDistribution.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_240152790()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_240152798(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2401527D8 + 4 * asc_240160CF0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2401527F8 + 4 * byte_240160CF5[v4]))();
}

_BYTE *sub_2401527D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2401527F8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_240152800(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_240152808(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_240152810(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_240152818(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_240152824(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_240152870 + 4 * byte_240160CFF[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2401528A4 + 4 * byte_240160CFA[v4]))();
}

uint64_t sub_2401528A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2401528AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2401528B4);
  return result;
}

uint64_t sub_2401528C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2401528C8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2401528CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2401528D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_2401528E0()
{
  JUMPOUT(0x24267E0BCLL);
}

void sub_2401528F0()
{
  JUMPOUT(0x24267E0BCLL);
}

void sub_240152900()
{
  JUMPOUT(0x24267E0BCLL);
}

void sub_240152910()
{
  JUMPOUT(0x24267E0BCLL);
}

void sub_240152920()
{
  JUMPOUT(0x24267E0BCLL);
}

void sub_240152930()
{
  JUMPOUT(0x24267E0BCLL);
}

uint64_t sub_240152940()
{
  return 2;
}

uint64_t sub_240152948()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  v2 = sub_240154310();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2401529DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition);
  if (v3
    && (*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKReturnToBaseTask_returnToBaseIssued) & 1) == 0)
  {
    v5 = *(_QWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 56);
    v7 = *(_QWORD *)(v0 + 32);
    v6 = *(_QWORD *)(v0 + 40);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKReturnToBaseTask_returnToBaseIssued) = 1;
    v8 = *(_QWORD *)(v1 + 48);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v9(v4, v8 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v6);
    type metadata accessor for DKIntelligentTrackingCommand(0);
    v10 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v4, v6);
    v11 = v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
    *(_QWORD *)v11 = v3;
    *(_QWORD *)(v11 + 8) = 0x4008000000000000;
    *(_WORD *)(v11 + 16) = 0x4000;
    *(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = v10;
    swift_bridgeObjectRetain();
    swift_release();
    v12 = *(_QWORD *)(v1 + 40);
    v9(v7, *(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v6);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v7, 0, 1, v6);
    sub_24008FCD4(v7, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime);
    v2 = *(_QWORD *)(v1 + 40);
  }
  v13 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 24);
  sub_24008BFDC(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime, v15);
  LODWORD(v13) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13);
  sub_240077EAC(v15);
  if ((_DWORD)v13 == 1)
  {
    v16 = *(_QWORD *)(v0 + 40);
    v17 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 32);
    v19 = *(_QWORD *)(v1 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48)+ OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v18, 0, 1, v16);
    sub_24008FCD4(v18, v19 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_240152C18()
{
  return type metadata accessor for DKReturnToBaseTask();
}

uint64_t type metadata accessor for DKReturnToBaseTask()
{
  uint64_t result;

  result = qword_256FC3FC8;
  if (!qword_256FC3FC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240152C5C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_240152C9C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v13 - v8;
  *(_OWORD *)(v2 + 56) = xmmword_240161080;
  *(_OWORD *)(v2 + 72) = xmmword_240161090;
  *(_OWORD *)(v2 + 88) = xmmword_240161090;
  *(_OWORD *)(v2 + 104) = xmmword_2401610A0;
  *(_OWORD *)(v2 + 120) = xmmword_2401610B0;
  *(_BYTE *)(v2 + 136) = 0;
  swift_retain();
  sub_2401544B4();
  *(_BYTE *)(v2 + 137) = a1;
  swift_release();
  v10 = sub_240154310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(_BYTE *)(v2 + 49) = 0;
  *(_QWORD *)(v2 + 24) = 0x3FE0000000000000;
  sub_24008BFDC((uint64_t)v9, (uint64_t)v6);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  v11 = sub_240148668(0x3FE0000000000000, 0, 0x3FB999999999999ALL, 0, 0, (uint64_t)v6, 0, 1, 0.2, 0, 1);
  sub_240077EAC((uint64_t)v9);
  *(_QWORD *)(v2 + 16) = v11;
  *(_QWORD *)(v2 + 32) = 0x3FE6666666666666;
  *(_QWORD *)(v2 + 40) = 0x3FD3333333333333;
  *(_BYTE *)(v2 + 48) = 0;
  return v2;
}

BOOL sub_240152E84(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double *v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  uint64_t v25;
  uint64_t v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;
  uint64_t v31;
  uint64_t v32;
  double *v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  uint64_t v37;
  int v38;
  double v39;
  double v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  int v50;
  double v51;
  uint64_t v52;
  double v53;
  double v54;
  double v55;
  double v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  NSObject *v62;
  os_log_type_t v63;
  uint8_t *v64;
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  _BOOL4 v70;
  double v71;
  uint64_t v72;
  uint64_t v73;
  double v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint8_t *v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _BOOL4 v93;

  v2 = sub_2401544C0();
  v3 = *(char **)(v2 - 8);
  v89 = v2;
  v90 = v3;
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v83 = (char *)&v82 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v85 = (char *)&v82 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v84 = (char *)&v82 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v12);
  v87 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DKPersonSelectionFilter.Signals(0);
  MEMORY[0x24BDAC7A8](v14);
  v86 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (double *)((char *)&v82 - v17);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (double *)((char *)&v82 - v20);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (double *)((char *)&v82 - v23);
  MEMORY[0x24BDAC7A8](v25);
  v27 = (double *)((char *)&v82 - v26);
  MEMORY[0x24BDAC7A8](v28);
  v30 = (double *)((char *)&v82 - v29);
  MEMORY[0x24BDAC7A8](v31);
  v33 = (double *)((char *)&v82 - v32);
  MEMORY[0x24BDAC7A8](v34);
  v36 = (double *)((char *)&v82 - v35);
  v88 = v37;
  v91 = *(int *)(v37 + 44);
  v38 = *(unsigned __int8 *)(a1 + v91);
  sub_2401539C0(a1, (uint64_t)&v82 - v35);
  if (v38 != 1)
  {
    sub_240153A04((uint64_t)v36);
    sub_2401539C0(a1, (uint64_t)v33);
    goto LABEL_8;
  }
  v39 = *v36;
  sub_240153A04((uint64_t)v36);
  sub_2401539C0(a1, (uint64_t)v33);
  if (v39 <= 0.75)
  {
LABEL_8:
    sub_240153A04((uint64_t)v33);
    v41 = v90;
    goto LABEL_9;
  }
  v40 = v33[1];
  sub_240153A04((uint64_t)v33);
  v41 = v90;
  if (v40 > 0.75)
  {
    v42 = sub_240154310();
    v43 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v87, 1, 1, v42);
    v44 = v92;
    swift_retain();
    sub_240148324(0, 1, v43, 1.0);
    swift_release();
    sub_240077EAC(v43);
    v45 = v84;
    v46 = v89;
    (*((void (**)(char *, uint64_t, uint64_t))v41 + 2))(v84, v44 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKPersonSelectionFilter_logger, v89);
    v47 = sub_2401544A8();
    v48 = sub_24015494C();
    if (os_log_type_enabled(v47, v48))
    {
      v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v49 = 0;
      _os_log_impl(&dword_24006B000, v47, v48, "hybrid selection: always select if speaking and looking", v49, 2u);
      MEMORY[0x24267E17C](v49, -1, -1);
    }

    (*((void (**)(char *, uint64_t))v41 + 1))(v45, v46);
    return *(double *)(a1 + *(int *)(v88 + 40)) < 0.5;
  }
LABEL_9:
  v50 = *(unsigned __int8 *)(a1 + v91);
  sub_2401539C0(a1, (uint64_t)v30);
  if (v50 != 1)
  {
    sub_240153A04((uint64_t)v30);
    sub_2401539C0(a1, (uint64_t)v27);
    v52 = v89;
    goto LABEL_14;
  }
  v51 = v30[2];
  sub_240153A04((uint64_t)v30);
  sub_2401539C0(a1, (uint64_t)v27);
  v52 = v89;
  if (v51 >= 1.5)
  {
LABEL_14:
    sub_240153A04((uint64_t)v27);
    goto LABEL_15;
  }
  v53 = v27[1];
  sub_240153A40((uint64_t)v27, (uint64_t)v24);
  if (v53 > 0.75)
  {
    sub_240153A04((uint64_t)v24);
LABEL_31:
    v75 = sub_240154310();
    v76 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v75 - 8) + 56))(v87, 1, 1, v75);
    v77 = v92;
    swift_retain();
    sub_240148324(0, 1, v76, 1.0);
    swift_release();
    sub_240077EAC(v76);
    v78 = v85;
    (*((void (**)(char *, uint64_t, uint64_t))v41 + 2))(v85, v77 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKPersonSelectionFilter_logger, v52);
    v79 = sub_2401544A8();
    v80 = sub_24015494C();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v81 = 0;
      _os_log_impl(&dword_24006B000, v79, v80, "hybrid selection: always select if near camera and speaking or looking", v81, 2u);
      MEMORY[0x24267E17C](v81, -1, -1);
    }

    (*((void (**)(char *, uint64_t))v41 + 1))(v78, v52);
    return *(double *)(a1 + *(int *)(v88 + 40)) < 0.5;
  }
  v74 = *v24;
  sub_240153A04((uint64_t)v24);
  if (v74 > 0.75)
    goto LABEL_31;
LABEL_15:
  v54 = *(double *)(a1 + 16);
  sub_2401539C0(a1, (uint64_t)v21);
  if (v54 <= 2.0)
  {
    sub_240153A04((uint64_t)v21);
    sub_2401539C0(a1, (uint64_t)v18);
    goto LABEL_22;
  }
  v55 = v21[1];
  sub_240153A04((uint64_t)v21);
  sub_2401539C0(a1, (uint64_t)v18);
  if (v55 >= 0.25)
  {
LABEL_22:
    sub_240153A04((uint64_t)v18);
    v57 = (uint64_t)v86;
    goto LABEL_23;
  }
  v56 = *v18;
  sub_240153A04((uint64_t)v18);
  v57 = (uint64_t)v86;
  if (v56 < 0.25)
  {
    v58 = sub_240154310();
    v59 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v87, 1, 1, v58);
    v60 = v92;
    swift_retain();
    sub_240148324(0, 1, v59, 0.0);
    swift_release();
    sub_240077EAC(v59);
    v61 = v83;
    (*((void (**)(char *, uint64_t, uint64_t))v41 + 2))(v83, v60 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKPersonSelectionFilter_logger, v52);
    v62 = sub_2401544A8();
    v63 = sub_24015494C();
    if (os_log_type_enabled(v62, v63))
    {
      v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v64 = 0;
      _os_log_impl(&dword_24006B000, v62, v63, "hybrid selection: never select if far from camera and not looking and not speeking", v64, 2u);
      MEMORY[0x24267E17C](v64, -1, -1);
    }

    (*((void (**)(char *, uint64_t))v41 + 1))(v61, v52);
    return *(double *)(a1 + *(int *)(v88 + 40)) >= 0.5;
  }
LABEL_23:
  (*((void (**)(char *, uint64_t, uint64_t))v41 + 2))(v5, v92 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKPersonSelectionFilter_logger, v52);
  sub_2401539C0(a1, v57);
  v66 = sub_2401544A8();
  v67 = sub_24015494C();
  if (os_log_type_enabled(v66, v67))
  {
    v68 = (uint8_t *)swift_slowAlloc();
    v90 = v5;
    *(_DWORD *)v68 = 67109120;
    v69 = v88;
    v70 = *(double *)(v57 + *(int *)(v88 + 40)) >= 0.5;
    sub_240153A04(v57);
    v93 = v70;
    v5 = v90;
    sub_240154A6C();
    _os_log_impl(&dword_24006B000, v66, v67, "hybrid selection: select using iss %{BOOL}d", v68, 8u);
    MEMORY[0x24267E17C](v68, -1, -1);
  }
  else
  {
    sub_240153A04(v57);
    v69 = v88;
  }

  (*((void (**)(char *, uint64_t))v41 + 1))(v5, v52);
  v71 = *(double *)(a1 + *(int *)(v69 + 40));
  if (v71 <= 0.5 || *(_BYTE *)(a1 + v91) == 1)
  {
    v72 = sub_240154310();
    v73 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v87, 1, 1, v72);
    swift_retain();
    sub_240148324(0x3FB999999999999ALL, 0, v73, v71);
    swift_release();
    sub_240077EAC(v73);
  }
  return 0;
}

void sub_24015371C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_240153748()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKPersonSelectionFilter_logger;
  v2 = sub_2401544C0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t sub_240153784()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKPersonSelectionFilter_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2401537DC()
{
  return type metadata accessor for DKPersonSelectionFilter(0);
}

uint64_t type metadata accessor for DKPersonSelectionFilter(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FC4138);
}

uint64_t sub_2401537F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2401544C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DKPersonSelectionFilter.SelectionCriteria(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2401538E4 + 4 * byte_2401610D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_240153918 + 4 * byte_2401610D0[v4]))();
}

uint64_t sub_240153918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240153920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240153928);
  return result;
}

uint64_t sub_240153934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24015393CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_240153940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240153948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKPersonSelectionFilter.SelectionCriteria()
{
  return &type metadata for DKPersonSelectionFilter.SelectionCriteria;
}

unint64_t sub_240153968()
{
  unint64_t result;

  result = qword_256FC4310;
  if (!qword_256FC4310)
  {
    result = MEMORY[0x24267E0BC](&unk_2401611E4, &type metadata for DKPersonSelectionFilter.SelectionCriteria);
    atomic_store(result, (unint64_t *)&qword_256FC4310);
  }
  return result;
}

uint64_t type metadata accessor for DKPersonSelectionFilter.Signals(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FC4370);
}

uint64_t sub_2401539C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKPersonSelectionFilter.Signals(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240153A04(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DKPersonSelectionFilter.Signals(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240153A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKPersonSelectionFilter.Signals(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_240153A84(char *a1, uint64_t *a2, int *a3)
{
  char *v4;
  int v5;
  __int128 v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v7;
    v8 = a3[8];
    v9 = &a1[v8];
    v10 = (uint64_t)a2 + v8;
    v11 = sub_240154310();
    v12 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&v4[a3[9]], (uint64_t)a2 + a3[9], v11);
    v13 = a3[11];
    *(_QWORD *)&v4[a3[10]] = *(uint64_t *)((char *)a2 + a3[10]);
    v4[v13] = *((_BYTE *)a2 + v13);
  }
  return v4;
}

uint64_t sub_240153B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 32);
  v5 = sub_240154310();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v7(v4, v5);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(a1 + *(int *)(a2 + 36), v5);
}

char *sub_240153BC0(char *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  v7 = a3[8];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_240154310();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  v11(&a1[a3[9]], &a2[a3[9]], v10);
  v12 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  a1[v12] = a2[v12];
  return a1;
}

char *sub_240153C60(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
  *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
  v6 = a3[8];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_240154310();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[9]], &a2[a3[9]], v9);
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  a1[a3[11]] = a2[a3[11]];
  return a1;
}

char *sub_240153D1C(char *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  v7 = a3[8];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_240154310();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[a3[9]], &a2[a3[9]], v10);
  v12 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  a1[v12] = a2[v12];
  return a1;
}

char *sub_240153DBC(char *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v6 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v6;
  v7 = a3[8];
  v8 = &a1[v7];
  v9 = &a2[v7];
  v10 = sub_240154310();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[9]], &a2[a3[9]], v10);
  v12 = a3[11];
  *(_QWORD *)&a1[a3[10]] = *(_QWORD *)&a2[a3[10]];
  a1[v12] = a2[v12];
  return a1;
}

uint64_t sub_240153E5C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240153E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 32), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 44));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_240153EF8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240153F04(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_240154310();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 32), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 44)) = a2 + 1;
  return result;
}

uint64_t sub_240153F80()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return objc_opt_self();
}

uint64_t sub_240154028()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_240154034()
{
  return MEMORY[0x24BDCB260]();
}

uint64_t sub_240154040()
{
  return MEMORY[0x24BDCB268]();
}

uint64_t sub_24015404C()
{
  return MEMORY[0x24BDCB288]();
}

uint64_t sub_240154058()
{
  return MEMORY[0x24BDCB290]();
}

uint64_t sub_240154064()
{
  return MEMORY[0x24BDCB2A8]();
}

uint64_t sub_240154070()
{
  return MEMORY[0x24BDCB2E0]();
}

uint64_t sub_24015407C()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_240154088()
{
  return MEMORY[0x24BDCB400]();
}

uint64_t sub_240154094()
{
  return MEMORY[0x24BDCB410]();
}

uint64_t sub_2401540A0()
{
  return MEMORY[0x24BDCB728]();
}

uint64_t sub_2401540AC()
{
  return MEMORY[0x24BDCB750]();
}

uint64_t sub_2401540B8()
{
  return MEMORY[0x24BDCBBA0]();
}

uint64_t sub_2401540C4()
{
  return MEMORY[0x24BDCBBB0]();
}

uint64_t sub_2401540D0()
{
  return MEMORY[0x24BDCBBC8]();
}

uint64_t sub_2401540DC()
{
  return MEMORY[0x24BDCBBD0]();
}

uint64_t sub_2401540E8()
{
  return MEMORY[0x24BDCBBD8]();
}

uint64_t sub_2401540F4()
{
  return MEMORY[0x24BDCBBF0]();
}

uint64_t sub_240154100()
{
  return MEMORY[0x24BDCBC10]();
}

uint64_t sub_24015410C()
{
  return MEMORY[0x24BDCC1E0]();
}

uint64_t sub_240154118()
{
  return MEMORY[0x24BDCCA20]();
}

uint64_t sub_240154124()
{
  return MEMORY[0x24BDCCA40]();
}

uint64_t sub_240154130()
{
  return MEMORY[0x24BDCCA48]();
}

uint64_t sub_24015413C()
{
  return MEMORY[0x24BDCCA60]();
}

uint64_t sub_240154148()
{
  return MEMORY[0x24BDCCA88]();
}

uint64_t sub_240154154()
{
  return MEMORY[0x24BDCCA90]();
}

uint64_t sub_240154160()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_24015416C()
{
  return MEMORY[0x24BDCD820]();
}

uint64_t sub_240154178()
{
  return MEMORY[0x24BDCD860]();
}

uint64_t sub_240154184()
{
  return MEMORY[0x24BDCD8C0]();
}

uint64_t sub_240154190()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_24015419C()
{
  return MEMORY[0x24BEE6120]();
}

uint64_t sub_2401541A8()
{
  return MEMORY[0x24BDCD918]();
}

uint64_t sub_2401541B4()
{
  return MEMORY[0x24BDCD928]();
}

uint64_t sub_2401541C0()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_2401541CC()
{
  return MEMORY[0x24BDCD9F8]();
}

uint64_t sub_2401541D8()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2401541E4()
{
  return MEMORY[0x24BDCDB60]();
}

uint64_t sub_2401541F0()
{
  return MEMORY[0x24BDCDB78]();
}

uint64_t sub_2401541FC()
{
  return MEMORY[0x24BDCDBC8]();
}

uint64_t sub_240154208()
{
  return MEMORY[0x24BDCDC10]();
}

uint64_t sub_240154214()
{
  return MEMORY[0x24BDCDC28]();
}

uint64_t sub_240154220()
{
  return MEMORY[0x24BDCDC40]();
}

uint64_t sub_24015422C()
{
  return MEMORY[0x24BDCDC88]();
}

uint64_t sub_240154238()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_240154244()
{
  return MEMORY[0x24BDCDCD8]();
}

uint64_t sub_240154250()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_24015425C()
{
  return MEMORY[0x24BDCDD20]();
}

uint64_t sub_240154268()
{
  return MEMORY[0x24BDCDDA0]();
}

uint64_t sub_240154274()
{
  return MEMORY[0x24BDCE2D8]();
}

uint64_t sub_240154280()
{
  return MEMORY[0x24BDCE2F8]();
}

uint64_t sub_24015428C()
{
  return MEMORY[0x24BDCE330]();
}

uint64_t sub_240154298()
{
  return MEMORY[0x24BDCE468]();
}

uint64_t sub_2401542A4()
{
  return MEMORY[0x24BDCE5D8]();
}

uint64_t sub_2401542B0()
{
  return MEMORY[0x24BDCE5F0]();
}

uint64_t sub_2401542BC()
{
  return MEMORY[0x24BDCE600]();
}

uint64_t sub_2401542C8()
{
  return MEMORY[0x24BDCE608]();
}

uint64_t sub_2401542D4()
{
  return MEMORY[0x24BDCE628]();
}

uint64_t sub_2401542E0()
{
  return MEMORY[0x24BDCE780]();
}

uint64_t sub_2401542EC()
{
  return MEMORY[0x24BDCE858]();
}

uint64_t sub_2401542F8()
{
  return MEMORY[0x24BDCE880]();
}

uint64_t sub_240154304()
{
  return MEMORY[0x24BDCE8F8]();
}

uint64_t sub_240154310()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_24015431C()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_240154328()
{
  return MEMORY[0x24BDCE9E0]();
}

uint64_t sub_240154334()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_240154340()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_24015434C()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_240154358()
{
  return MEMORY[0x24BDCF4D8]();
}

uint64_t sub_240154364()
{
  return MEMORY[0x24BDCF500]();
}

uint64_t sub_240154370()
{
  return MEMORY[0x24BDCF510]();
}

uint64_t sub_24015437C()
{
  return MEMORY[0x24BEDF3E0]();
}

uint64_t sub_240154388()
{
  return MEMORY[0x24BEDF3F0]();
}

uint64_t sub_240154394()
{
  return MEMORY[0x24BEDF408]();
}

uint64_t sub_2401543A0()
{
  return MEMORY[0x24BEE5118]();
}

uint64_t sub_2401543AC()
{
  return MEMORY[0x24BEE5120]();
}

uint64_t sub_2401543B8()
{
  return MEMORY[0x24BEE5130]();
}

uint64_t sub_2401543C4()
{
  return MEMORY[0x24BEC0AB0]();
}

uint64_t sub_2401543D0()
{
  return MEMORY[0x24BEC0AB8]();
}

uint64_t sub_2401543DC()
{
  return MEMORY[0x24BEC0AC0]();
}

uint64_t sub_2401543E8()
{
  return MEMORY[0x24BEC0AC8]();
}

uint64_t sub_2401543F4()
{
  return MEMORY[0x24BEC0AD0]();
}

uint64_t sub_240154400()
{
  return MEMORY[0x24BEC0AD8]();
}

uint64_t sub_24015440C()
{
  return MEMORY[0x24BEC0AE0]();
}

uint64_t sub_240154418()
{
  return MEMORY[0x24BEC0AF0]();
}

uint64_t sub_240154424()
{
  return MEMORY[0x24BEC0AF8]();
}

uint64_t sub_240154430()
{
  return MEMORY[0x24BEC0B08]();
}

uint64_t sub_24015443C()
{
  return MEMORY[0x24BEC0B10]();
}

uint64_t sub_240154448()
{
  return MEMORY[0x24BEC0B18]();
}

uint64_t sub_240154454()
{
  return MEMORY[0x24BEC0BD0]();
}

uint64_t sub_240154460()
{
  return MEMORY[0x24BEC0BD8]();
}

uint64_t sub_24015446C()
{
  return MEMORY[0x24BEE6190]();
}

uint64_t sub_240154478()
{
  return MEMORY[0x24BEE62D8]();
}

uint64_t sub_240154484()
{
  return MEMORY[0x24BEE6350]();
}

uint64_t sub_240154490()
{
  return MEMORY[0x24BEE6390]();
}

uint64_t sub_24015449C()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_2401544A8()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2401544B4()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_2401544C0()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2401544CC()
{
  return MEMORY[0x24BEE5428]();
}

uint64_t sub_2401544D8()
{
  return MEMORY[0x24BEE5458]();
}

uint64_t sub_2401544E4()
{
  return MEMORY[0x24BEE54C8]();
}

uint64_t sub_2401544F0()
{
  return MEMORY[0x24BEE5500]();
}

uint64_t sub_2401544FC()
{
  return MEMORY[0x24BEE5570]();
}

uint64_t sub_240154508()
{
  return MEMORY[0x24BEE5590]();
}

uint64_t sub_240154514()
{
  return MEMORY[0x24BEE5628]();
}

uint64_t sub_240154520()
{
  return MEMORY[0x24BEE51B0]();
}

uint64_t sub_24015452C()
{
  return MEMORY[0x24BEE51C0]();
}

uint64_t sub_240154538()
{
  return MEMORY[0x24BEE01B8]();
}

uint64_t sub_240154544()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_240154550()
{
  return MEMORY[0x24BEE0278]();
}

uint64_t sub_24015455C()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_240154568()
{
  return MEMORY[0x24BEE03B0]();
}

uint64_t sub_240154574()
{
  return MEMORY[0x24BEE0460]();
}

uint64_t sub_240154580()
{
  return MEMORY[0x24BEE04A8]();
}

uint64_t sub_24015458C()
{
  return MEMORY[0x24BEE04B0]();
}

uint64_t sub_240154598()
{
  return MEMORY[0x24BEE0518]();
}

uint64_t sub_2401545A4()
{
  return MEMORY[0x24BEE0548]();
}

uint64_t sub_2401545B0()
{
  return MEMORY[0x24BEE0570]();
}

uint64_t sub_2401545BC()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_2401545C8()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2401545D4()
{
  return MEMORY[0x24BEE0780]();
}

uint64_t sub_2401545E0()
{
  return MEMORY[0x24BEE07D8]();
}

uint64_t sub_2401545EC()
{
  return MEMORY[0x24BEE07E0]();
}

uint64_t sub_2401545F8()
{
  return MEMORY[0x24BEE07E8]();
}

uint64_t sub_240154604()
{
  return MEMORY[0x24BEE07F0]();
}

uint64_t sub_240154610()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_24015461C()
{
  return MEMORY[0x24BDCF870]();
}

uint64_t sub_240154628()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_240154634()
{
  return MEMORY[0x24BDCFA08]();
}

uint64_t sub_240154640()
{
  return MEMORY[0x24BDCFA18]();
}

uint64_t sub_24015464C()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_240154658()
{
  return MEMORY[0x24BDCFA38]();
}

uint64_t sub_240154664()
{
  return MEMORY[0x24BDCFA48]();
}

uint64_t sub_240154670()
{
  return MEMORY[0x24BDCFA78]();
}

uint64_t sub_24015467C()
{
  return MEMORY[0x24BDCFAC8]();
}

uint64_t sub_240154688()
{
  return MEMORY[0x24BDCFAF8]();
}

uint64_t sub_240154694()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2401546A0()
{
  return MEMORY[0x24BEE0A30]();
}

uint64_t sub_2401546AC()
{
  return MEMORY[0x24BEE0A50]();
}

uint64_t sub_2401546B8()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2401546C4()
{
  return MEMORY[0x24BEE0B80]();
}

uint64_t sub_2401546D0()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2401546DC()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2401546E8()
{
  return MEMORY[0x24BEE0C18]();
}

uint64_t sub_2401546F4()
{
  return MEMORY[0x24BEE0C30]();
}

uint64_t sub_240154700()
{
  return MEMORY[0x24BEE0C40]();
}

uint64_t sub_24015470C()
{
  return MEMORY[0x24BEE0CA0]();
}

uint64_t sub_240154718()
{
  return MEMORY[0x24BEE0DE0]();
}

uint64_t sub_240154724()
{
  return MEMORY[0x24BEE0DE8]();
}

uint64_t sub_240154730()
{
  return MEMORY[0x24BEE0DF8]();
}

uint64_t sub_24015473C()
{
  return MEMORY[0x24BEE0EB8]();
}

uint64_t sub_240154748()
{
  return MEMORY[0x24BEE0EC0]();
}

uint64_t sub_240154754()
{
  return MEMORY[0x24BEE0EE8]();
}

uint64_t sub_240154760()
{
  return MEMORY[0x24BEE0F30]();
}

uint64_t sub_24015476C()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_240154778()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_240154784()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_240154790()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_24015479C()
{
  return MEMORY[0x24BDCFBC0]();
}

uint64_t sub_2401547A8()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_2401547B4()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2401547C0()
{
  return MEMORY[0x24BEE1138]();
}

uint64_t sub_2401547CC()
{
  return MEMORY[0x24BEE1140]();
}

uint64_t sub_2401547D8()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_2401547E4()
{
  return MEMORY[0x24BEE1178]();
}

uint64_t sub_2401547F0()
{
  return MEMORY[0x24BEE1180]();
}

uint64_t sub_2401547FC()
{
  return MEMORY[0x24BEE1190]();
}

uint64_t sub_240154808()
{
  return MEMORY[0x24BEE11A0]();
}

uint64_t sub_240154814()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_240154820()
{
  return MEMORY[0x24BEE11C8]();
}

uint64_t sub_24015482C()
{
  return MEMORY[0x24BEE11F8]();
}

uint64_t sub_240154838()
{
  return MEMORY[0x24BEE1220]();
}

uint64_t sub_240154844()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_240154850()
{
  return MEMORY[0x24BEE1308]();
}

uint64_t sub_24015485C()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_240154868()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_240154874()
{
  return MEMORY[0x24BEE6830]();
}

uint64_t sub_240154880()
{
  return MEMORY[0x24BEE6920]();
}

uint64_t sub_24015488C()
{
  return MEMORY[0x24BEE6928]();
}

uint64_t sub_240154898()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_2401548A4()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_2401548B0()
{
  return MEMORY[0x24BEE6B28]();
}

uint64_t sub_2401548BC()
{
  return MEMORY[0x24BEE1370]();
}

uint64_t sub_2401548C8()
{
  return MEMORY[0x24BEE13A8]();
}

uint64_t sub_2401548D4()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_2401548E0()
{
  return MEMORY[0x24BEE17F8]();
}

uint64_t sub_2401548EC()
{
  return MEMORY[0x24BEE1820]();
}

uint64_t sub_2401548F8()
{
  return MEMORY[0x24BEE18A0]();
}

uint64_t sub_240154904()
{
  return MEMORY[0x24BEE18D0]();
}

uint64_t sub_240154910()
{
  return MEMORY[0x24BEE1918]();
}

uint64_t sub_24015491C()
{
  return MEMORY[0x24BEE1A28]();
}

uint64_t sub_240154928()
{
  return MEMORY[0x24BEE1A78]();
}

uint64_t sub_240154934()
{
  return MEMORY[0x24BDCFE60]();
}

uint64_t sub_240154940()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_24015494C()
{
  return MEMORY[0x24BEE7908]();
}

uint64_t sub_240154958()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_240154964()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_240154970()
{
  return MEMORY[0x24BEE57B8]();
}

uint64_t sub_24015497C()
{
  return MEMORY[0x24BEE57C0]();
}

uint64_t sub_240154988()
{
  return MEMORY[0x24BEE5828]();
}

uint64_t sub_240154994()
{
  return MEMORY[0x24BEE58B8]();
}

uint64_t sub_2401549A0()
{
  return MEMORY[0x24BEE58D0]();
}

uint64_t sub_2401549AC()
{
  return MEMORY[0x24BEE58D8]();
}

uint64_t sub_2401549B8()
{
  return MEMORY[0x24BEE58E0]();
}

uint64_t sub_2401549C4()
{
  return MEMORY[0x24BEDF448]();
}

uint64_t sub_2401549D0()
{
  return MEMORY[0x24BEE5958]();
}

uint64_t sub_2401549DC()
{
  return MEMORY[0x24BEE5960]();
}

uint64_t sub_2401549E8()
{
  return MEMORY[0x24BEDF468]();
}

uint64_t sub_2401549F4()
{
  return MEMORY[0x24BEE5310]();
}

uint64_t sub_240154A00()
{
  return MEMORY[0x24BEE5320]();
}

uint64_t sub_240154A0C()
{
  return MEMORY[0x24BEE5328]();
}

uint64_t sub_240154A18()
{
  return MEMORY[0x24BDD0150]();
}

uint64_t sub_240154A24()
{
  return MEMORY[0x24BEE1BE8]();
}

uint64_t sub_240154A30()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_240154A3C()
{
  return MEMORY[0x24BEE1C90]();
}

uint64_t sub_240154A48()
{
  return MEMORY[0x24BEE1CB0]();
}

uint64_t sub_240154A54()
{
  return MEMORY[0x24BEE1CE8]();
}

uint64_t sub_240154A60()
{
  return MEMORY[0x24BEE1E70]();
}

uint64_t sub_240154A6C()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_240154A78()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_240154A84()
{
  return MEMORY[0x24BEE1F50]();
}

uint64_t sub_240154A90()
{
  return MEMORY[0x24BDD04B8]();
}

uint64_t sub_240154A9C()
{
  return MEMORY[0x24BDD0568]();
}

uint64_t sub_240154AA8()
{
  return MEMORY[0x24BDD0608]();
}

uint64_t sub_240154AB4()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_240154AC0()
{
  return MEMORY[0x24BEE22C0]();
}

uint64_t sub_240154ACC()
{
  return MEMORY[0x24BEE22D0]();
}

uint64_t sub_240154AD8()
{
  return MEMORY[0x24BEE22E0]();
}

uint64_t sub_240154AE4()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_240154AF0()
{
  return MEMORY[0x24BEE23A8]();
}

uint64_t sub_240154AFC()
{
  return MEMORY[0x24BEE23E8]();
}

uint64_t sub_240154B08()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_240154B14()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_240154B20()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_240154B2C()
{
  return MEMORY[0x24BEE24F0]();
}

uint64_t sub_240154B38()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_240154B44()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_240154B50()
{
  return MEMORY[0x24BEE2578]();
}

uint64_t sub_240154B5C()
{
  return MEMORY[0x24BEE25F0]();
}

uint64_t sub_240154B68()
{
  return MEMORY[0x24BEE25F8]();
}

uint64_t sub_240154B74()
{
  return MEMORY[0x24BEE2600]();
}

uint64_t sub_240154B80()
{
  return MEMORY[0x24BEE2610]();
}

uint64_t sub_240154B8C()
{
  return MEMORY[0x24BEE2650]();
}

uint64_t sub_240154B98()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_240154BA4()
{
  return MEMORY[0x24BEE2660]();
}

uint64_t sub_240154BB0()
{
  return MEMORY[0x24BEE2668]();
}

uint64_t sub_240154BBC()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_240154BC8()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_240154BD4()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_240154BE0()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_240154BEC()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_240154BF8()
{
  return MEMORY[0x24BEE2950]();
}

uint64_t sub_240154C04()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_240154C10()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_240154C1C()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_240154C28()
{
  return MEMORY[0x24BEE29C0]();
}

uint64_t sub_240154C34()
{
  return MEMORY[0x24BEE2A00]();
}

uint64_t sub_240154C40()
{
  return MEMORY[0x24BEE2A08]();
}

uint64_t sub_240154C4C()
{
  return MEMORY[0x24BEE2A20]();
}

uint64_t sub_240154C58()
{
  return MEMORY[0x24BEE6DC8]();
}

uint64_t sub_240154C64()
{
  return MEMORY[0x24BEE6E08]();
}

uint64_t sub_240154C70()
{
  return MEMORY[0x24BEE6E10]();
}

uint64_t sub_240154C7C()
{
  return MEMORY[0x24BEE2AE0]();
}

uint64_t sub_240154C88()
{
  return MEMORY[0x24BEE2BD8]();
}

uint64_t sub_240154C94()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_240154CA0()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_240154CAC()
{
  return MEMORY[0x24BEE2E60]();
}

uint64_t sub_240154CB8()
{
  return MEMORY[0x24BEE2E78]();
}

uint64_t sub_240154CC4()
{
  return MEMORY[0x24BEE2E90]();
}

uint64_t sub_240154CD0()
{
  return MEMORY[0x24BEE2EA8]();
}

uint64_t sub_240154CDC()
{
  return MEMORY[0x24BEE2F18]();
}

uint64_t sub_240154CE8()
{
  return MEMORY[0x24BEE2F20]();
}

uint64_t sub_240154CF4()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_240154D00()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_240154D0C()
{
  return MEMORY[0x24BEE2F58]();
}

uint64_t sub_240154D18()
{
  return MEMORY[0x24BEE2F68]();
}

uint64_t sub_240154D24()
{
  return MEMORY[0x24BEE2F70]();
}

uint64_t sub_240154D30()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_240154D3C()
{
  return MEMORY[0x24BEE3080]();
}

uint64_t sub_240154D48()
{
  return MEMORY[0x24BEE3088]();
}

uint64_t sub_240154D54()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_240154D60()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_240154D6C()
{
  return MEMORY[0x24BEE31D0]();
}

uint64_t sub_240154D78()
{
  return MEMORY[0x24BEE3280]();
}

uint64_t sub_240154D84()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_240154D90()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_240154D9C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_240154DA8()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_240154DB4()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_240154DC0()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_240154DCC()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_240154DD8()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_240154DE4()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_240154DF0()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_240154DFC()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_240154E08()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_240154E14()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_240154E20()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_240154E2C()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_240154E38()
{
  return MEMORY[0x24BEE3438]();
}

uint64_t sub_240154E44()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_240154E50()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_240154E5C()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_240154E68()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_240154E74()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_240154E80()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_240154E8C()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_240154E98()
{
  return MEMORY[0x24BEE3538]();
}

uint64_t sub_240154EA4()
{
  return MEMORY[0x24BEE3540]();
}

uint64_t sub_240154EB0()
{
  return MEMORY[0x24BEE3548]();
}

uint64_t sub_240154EBC()
{
  return MEMORY[0x24BEE3568]();
}

uint64_t sub_240154EC8()
{
  return MEMORY[0x24BEE3598]();
}

uint64_t sub_240154ED4()
{
  return MEMORY[0x24BEE7040]();
}

uint64_t sub_240154EE0()
{
  return MEMORY[0x24BEE39B0]();
}

uint64_t sub_240154EEC()
{
  return MEMORY[0x24BEE39E0]();
}

uint64_t sub_240154EF8()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_240154F04()
{
  return MEMORY[0x24BEE3B90]();
}

uint64_t sub_240154F10()
{
  return MEMORY[0x24BEE3B98]();
}

uint64_t sub_240154F1C()
{
  return MEMORY[0x24BEE3D50]();
}

uint64_t sub_240154F28()
{
  return MEMORY[0x24BEE3D98]();
}

uint64_t sub_240154F34()
{
  return MEMORY[0x24BEE3DD8]();
}

uint64_t sub_240154F40()
{
  return MEMORY[0x24BEE3DE0]();
}

uint64_t sub_240154F4C()
{
  return MEMORY[0x24BEE3DE8]();
}

uint64_t sub_240154F58()
{
  return MEMORY[0x24BEE3E18]();
}

uint64_t sub_240154F64()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_240154F70()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_240154F7C()
{
  return MEMORY[0x24BEE7110]();
}

uint64_t sub_240154F88()
{
  return MEMORY[0x24BEE7118]();
}

uint64_t sub_240154F94()
{
  return MEMORY[0x24BDD0708]();
}

uint64_t sub_240154FA0()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_240154FAC()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_240154FB8()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_240154FC4()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_240154FD0()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_240154FDC()
{
  return MEMORY[0x24BEE42D8]();
}

uint64_t sub_240154FE8()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_240154FF4()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_240155000()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_24015500C()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_240155018()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_240155024()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_240155030()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_24015503C()
{
  return MEMORY[0x24BEE4838]();
}

uint64_t sub_240155048()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_240155054()
{
  return MEMORY[0x24BEE4A10]();
}

CFTimeInterval CACurrentMediaTime(void)
{
  CFTimeInterval result;

  MEMORY[0x24BDE5410]();
  return result;
}

CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return (CFMutableDataRef)MEMORY[0x24BDBBCB0](allocator, capacity);
}

CGColorRef CGColorCreateGenericRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x24BDBDAA8](red, green, blue, alpha);
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x24BDD9048](idst, image, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x24BDD9078](data, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x24BDD9090](idst);
}

CFDictionaryRef CGRectCreateDictionaryRepresentation(CGRect a1)
{
  return (CFDictionaryRef)MEMORY[0x24BDBEFD0]((__n128)a1.origin, *(__n128 *)&a1.origin.y, (__n128)a1.size, *(__n128 *)&a1.size.height);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBEFE0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFE8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFF0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBEFF8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF000]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF008]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF010]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF018]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  CGFloat result;

  MEMORY[0x24BDBF020]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x24BDBF040]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x24BDBF048]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGRect CGRectUnion(CGRect r1, CGRect r2)
{
  double v2;
  double v3;
  double v4;
  double v5;
  CGRect result;

  MEMORY[0x24BDBF088]((__n128)r1.origin, *(__n128 *)&r1.origin.y, (__n128)r1.size, *(__n128 *)&r1.size.height, (__n128)r2.origin, *(__n128 *)&r2.origin.y, (__n128)r2.size, *(__n128 *)&r2.size.height);
  result.size.height = v5;
  result.size.width = v4;
  result.origin.y = v3;
  result.origin.x = v2;
  return result;
}

OSStatus CMSampleBufferCreateReadyWithImageBuffer(CFAllocatorRef allocator, CVImageBufferRef imageBuffer, CMVideoFormatDescriptionRef formatDescription, const CMSampleTimingInfo *sampleTiming, CMSampleBufferRef *sampleBufferOut)
{
  return MEMORY[0x24BDC02A0](allocator, imageBuffer, formatDescription, sampleTiming, sampleBufferOut);
}

CMTime *__cdecl CMTimeMakeWithSeconds(CMTime *__return_ptr retstr, Float64 seconds, int32_t preferredTimescale)
{
  return (CMTime *)MEMORY[0x24BDC04C0](retstr, *(_QWORD *)&preferredTimescale, seconds);
}

OSStatus CMVideoFormatDescriptionCreateForImageBuffer(CFAllocatorRef allocator, CVImageBufferRef imageBuffer, CMVideoFormatDescriptionRef *formatDescriptionOut)
{
  return MEMORY[0x24BDC0648](allocator, imageBuffer, formatDescriptionOut);
}

CVReturn CVPixelBufferCreate(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x24BDC5248](allocator, width, height, *(_QWORD *)&pixelFormatType, pixelBufferAttributes, pixelBufferOut);
}

void *__cdecl CVPixelBufferGetBaseAddress(CVPixelBufferRef pixelBuffer)
{
  return (void *)MEMORY[0x24BDC5278](pixelBuffer);
}

size_t CVPixelBufferGetBytesPerRow(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC5290](pixelBuffer);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52B0](pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x24BDC52E8](pixelBuffer);
}

CVReturn CVPixelBufferLockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags lockFlags)
{
  return MEMORY[0x24BDC5308](pixelBuffer, lockFlags);
}

CVReturn CVPixelBufferUnlockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags unlockFlags)
{
  return MEMORY[0x24BDC53B0](pixelBuffer, unlockFlags);
}

CGRect VNImageRectForNormalizedRect(CGRect normalizedRect, size_t imageWidth, size_t imageHeight)
{
  double v3;
  double v4;
  double v5;
  double v6;
  CGRect result;

  MEMORY[0x24BDF9F50](imageWidth, imageHeight, (__n128)normalizedRect.origin, *(__n128 *)&normalizedRect.origin.y, (__n128)normalizedRect.size, *(__n128 *)&normalizedRect.size.height);
  result.size.height = v6;
  result.size.width = v5;
  result.origin.y = v4;
  result.origin.x = v3;
  return result;
}

OSStatus VTCreateCGImageFromCVPixelBuffer(CVPixelBufferRef pixelBuffer, CFDictionaryRef options, CGImageRef *imageOut)
{
  return MEMORY[0x24BDF9020](pixelBuffer, options, imageOut);
}

OSStatus VTPixelRotationSessionCreate(CFAllocatorRef allocator, VTPixelRotationSessionRef *pixelRotationSessionOut)
{
  return MEMORY[0x24BDF9148](allocator, pixelRotationSessionOut);
}

void VTPixelRotationSessionInvalidate(VTPixelRotationSessionRef session)
{
  MEMORY[0x24BDF9150](session);
}

OSStatus VTPixelRotationSessionRotateImage(VTPixelRotationSessionRef session, CVPixelBufferRef sourceBuffer, CVPixelBufferRef destinationBuffer)
{
  return MEMORY[0x24BDF9158](session, sourceBuffer, destinationBuffer);
}

OSStatus VTPixelTransferSessionCreate(CFAllocatorRef allocator, VTPixelTransferSessionRef *pixelTransferSessionOut)
{
  return MEMORY[0x24BDF9168](allocator, pixelTransferSessionOut);
}

void VTPixelTransferSessionInvalidate(VTPixelTransferSessionRef session)
{
  MEMORY[0x24BDF9170](session);
}

OSStatus VTPixelTransferSessionTransferImage(VTPixelTransferSessionRef session, CVPixelBufferRef sourceBuffer, CVPixelBufferRef destinationBuffer)
{
  return MEMORY[0x24BDF9178](session, sourceBuffer, destinationBuffer);
}

OSStatus VTSessionSetProperty(VTSessionRef session, CFStringRef propertyKey, CFTypeRef propertyValue)
{
  return MEMORY[0x24BDF91A8](session, propertyKey, propertyValue);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

__double2 __sincos_stret(double a1)
{
  double v1;
  double v2;
  __double2 result;

  MEMORY[0x24BDAC890](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return MEMORY[0x24BEE4B28]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

uint64_t _swift_stdlib_strtod_clocale()
{
  return MEMORY[0x24BEE4B48]();
}

long double atan(long double __x)
{
  long double result;

  MEMORY[0x24BDAD218](__x);
  return result;
}

long double atan2(long double __y, long double __x)
{
  long double result;

  MEMORY[0x24BDAD220](__y, __x);
  return result;
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

uint64_t cblas_ddot_NEWLAPACK()
{
  return MEMORY[0x24BDB2AC0]();
}

uint64_t cblas_dgemm_NEWLAPACK()
{
  return MEMORY[0x24BDB2AD0]();
}

uint64_t cblas_sdot_NEWLAPACK()
{
  return MEMORY[0x24BDB2BC0]();
}

uint64_t cblas_sgemm_NEWLAPACK()
{
  return MEMORY[0x24BDB2BD0]();
}

long double cos(long double __x)
{
  long double result;

  MEMORY[0x24BDADBE0](__x);
  return result;
}

uint64_t dgetrf_NEWLAPACK()
{
  return MEMORY[0x24BDB2D30]();
}

uint64_t dgetri_NEWLAPACK()
{
  return MEMORY[0x24BDB2D40]();
}

uint64_t espresso_context_destroy()
{
  return MEMORY[0x24BE2FB00]();
}

uint64_t espresso_create_context()
{
  return MEMORY[0x24BE2FB18]();
}

uint64_t espresso_create_plan()
{
  return MEMORY[0x24BE2FB38]();
}

uint64_t espresso_network_bind_buffer()
{
  return MEMORY[0x24BE2FB88]();
}

uint64_t espresso_plan_add_network()
{
  return MEMORY[0x24BE2FC70]();
}

uint64_t espresso_plan_build()
{
  return MEMORY[0x24BE2FC80]();
}

uint64_t espresso_plan_destroy()
{
  return MEMORY[0x24BE2FC90]();
}

uint64_t espresso_plan_execute_sync()
{
  return MEMORY[0x24BE2FCA0]();
}

long double exp(long double __x)
{
  long double result;

  MEMORY[0x24BDAE270](__x);
  return result;
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void memset_pattern16(void *__b, const void *__pattern16, size_t __len)
{
  MEMORY[0x24BDAEEB0](__b, __pattern16, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x24BDAF4B0]();
}

uint64_t sgetrf_NEWLAPACK()
{
  return MEMORY[0x24BDB2FB0]();
}

uint64_t sgetri_NEWLAPACK()
{
  return MEMORY[0x24BDB2FC0]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x24BEE4B78]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x24BEE71B8]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x24BEE71C0]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x24BEE71C8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x24BEE71E0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x24BEE71E8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x24BEE71F0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x24BEE4C40]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x24BEE4C60]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x24BEE4D18]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x24BEE4DF8]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x24BEE4E00]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x24BEE4E28]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isClassType()
{
  return MEMORY[0x24BEE4E60]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x24BEE4E90]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x24BEE4EB0]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x24BEE4F10]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x24BEE4F30]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x24BEE4F48]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x24BEE4F88]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

long double tan(long double __x)
{
  long double result;

  MEMORY[0x24BDB0138](__x);
  return result;
}

void vDSP_mtrans(const float *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __M, vDSP_Length __N)
{
  MEMORY[0x24BDB3298](__A, __IA, __C, __IC, __M, __N);
}

void vDSP_mtransD(const double *__A, vDSP_Stride __IA, double *__C, vDSP_Stride __IC, vDSP_Length __M, vDSP_Length __N)
{
  MEMORY[0x24BDB32A0](__A, __IA, __C, __IC, __M, __N);
}

void vDSP_vadd(const float *__A, vDSP_Stride __IA, const float *__B, vDSP_Stride __IB, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB3308](__A, __IA, __B, __IB, __C, __IC, __N);
}

void vDSP_vaddD(const double *__A, vDSP_Stride __IA, const double *__B, vDSP_Stride __IB, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB3310](__A, __IA, __B, __IB, __C, __IC, __N);
}

void vDSP_vfill(const float *__A, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB3368](__A, __C, __IC, __N);
}

void vDSP_vfillD(const double *__A, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB3370](__A, __C, __IC, __N);
}

void vDSP_vfltu8(const unsigned __int8 *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB33E8](__A, __IA, __C, __IC, __N);
}

void vDSP_vsdiv(const float *__A, vDSP_Stride __IA, const float *__B, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB34C0](__A, __IA, __B, __C, __IC, __N);
}

void vDSP_vsmul(const float *__A, vDSP_Stride __IA, const float *__B, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB34F0](__A, __IA, __B, __C, __IC, __N);
}

void vDSP_vsmulD(const double *__A, vDSP_Stride __IA, const double *__B, double *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB34F8](__A, __IA, __B, __C, __IC, __N);
}

void vDSP_vsub(const float *__B, vDSP_Stride __IB, const float *__A, vDSP_Stride __IA, float *__C, vDSP_Stride __IC, vDSP_Length __N)
{
  MEMORY[0x24BDB3530](__B, __IB, __A, __IA, __C, __IC, __N);
}

