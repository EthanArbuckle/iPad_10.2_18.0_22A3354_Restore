BOOL sub_24006CC40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t _s23IntelligentTrackingCore15DKFaceDirectionO9hashValueSivg_0()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t sub_24006CC98()
{
  return sub_240154FF4();
}

uint64_t sub_24006CCC0()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

BOOL sub_24006CD00(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

_QWORD *sub_24006CD18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  char *v23;
  unint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  void (*v31)(uint64_t, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = v5;
  v42 = a4;
  v39 = a1;
  v40 = a2;
  v9 = sub_240154310();
  v37 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v38 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_240154280();
  sub_240154280();
  sub_240154280();
  sub_240154280();
  *((_BYTE *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastHorizontalFraming) = 0;
  *((_BYTE *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming) = 0;
  v11 = *(_QWORD *)(a3 + 16);
  v12 = *(_QWORD *)(a3 + 24);
  v14 = *(_QWORD *)(a3 + 32);
  v13 = *(_QWORD *)(a3 + 40);
  v15 = *(_QWORD *)(a3 + 56);
  v41 = a3;
  LOBYTE(a3) = *(_BYTE *)(a3 + 48);
  objc_allocWithZone((Class)type metadata accessor for DKPIDController());
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_pid) = DKPIDController.init(kp:ki:kd:kv:integralLimit:clampIntegralZero:)(v11, v14, v12, v13, v15, a3);
  *((_BYTE *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_controlMethod) = 0;
  v16 = sub_240077858(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v18 = *((_QWORD *)v16 + 2);
  v17 = *((_QWORD *)v16 + 3);
  v19 = v17 >> 1;
  v20 = v18 + 1;
  if (v17 >> 1 <= v18)
  {
    v16 = sub_240077858((char *)(v17 > 1), v18 + 1, 1, v16);
    v17 = *((_QWORD *)v16 + 3);
    v19 = v17 >> 1;
  }
  *((_QWORD *)v16 + 2) = v20;
  v21 = &v16[3 * v18];
  *((_WORD *)v21 + 16) = 256;
  v21[34] = 1;
  v22 = v18 + 2;
  if (v19 < (uint64_t)(v18 + 2))
    v16 = sub_240077858((char *)(v17 > 1), v18 + 2, 1, v16);
  *((_QWORD *)v16 + 2) = v22;
  v23 = &v16[3 * v20];
  *((_WORD *)v23 + 16) = 1;
  v23[34] = 0;
  v24 = *((_QWORD *)v16 + 3);
  if ((uint64_t)(v18 + 3) > (uint64_t)(v24 >> 1))
    v16 = sub_240077858((char *)(v24 > 1), v18 + 3, 1, v16);
  *((_QWORD *)v16 + 2) = v18 + 3;
  v25 = &v16[3 * v22];
  *((_WORD *)v25 + 16) = 256;
  v25[34] = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4448);
  swift_allocObject();
  swift_bridgeObjectRetain();
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM) = sub_24006F938(0, (uint64_t)v16);
  swift_allocObject();
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM) = sub_24006F938(0, (uint64_t)v16);
  v26 = a5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  v27 = v37;
  v28 = v38;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
  v29(v38, a5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v9);
  type metadata accessor for DKAccelerationLimiter();
  v30 = swift_allocObject();
  sub_240154274();
  v36 = xmmword_240155A30;
  *(_OWORD *)(v30 + 16) = xmmword_240155A30;
  *(_QWORD *)(v30 + 32) = 0;
  v31 = *(void (**)(uint64_t, char *, uint64_t))(v27 + 32);
  v31(v30 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime, v28, v9);
  *(_BYTE *)(v30 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) = 1;
  v37 = a5;
  *(_BYTE *)(v30 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 1;
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalAccelerationFilter) = v30;
  v29(v28, v26, v9);
  v32 = swift_allocObject();
  sub_240154274();
  *(_OWORD *)(v32 + 16) = v36;
  *(_QWORD *)(v32 + 32) = 0;
  v31(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime, v28, v9);
  *(_BYTE *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) = 1;
  *(_BYTE *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 1;
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalAccelerationFilter) = v32;
  swift_release();
  sub_2401544B4();
  v33 = v40;
  v6[2] = v39;
  v6[3] = v33;
  v34 = v42;
  v6[4] = v41;
  v6[5] = v34;
  v6[6] = v37;
  return v6;
}

uint64_t sub_24006D1BC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_240154310();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24006D21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *(_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_controlMethod) & 1) != 0)
    return sub_240154D00();
  v3 = swift_retain();
  sub_24006D3DC(v3, &v12);
  swift_release();
  v4 = v12;
  if (v12)
  {
    v6 = *(_QWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 40);
    v8 = *(_QWORD *)(v0 + 16);
    v7 = *(_QWORD *)(v0 + 24);
    v9 = *(_QWORD *)(v1 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v5, v9 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v7);
    type metadata accessor for DKIntelligentTrackingCommand(0);
    v10 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v5, v7);
    v11 = v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
    *(_QWORD *)v11 = v4;
    *(_QWORD *)(v11 + 8) = 0;
    *(_WORD *)(v11 + 16) = 0;
    *(_QWORD *)(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = v10;
    swift_release();
    *(_QWORD *)(*(_QWORD *)(v8 + 40)
              + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastCommand) = *(_QWORD *)(*(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command);
    swift_retain();
    swift_release();
  }
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_24006D3DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  double v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unsigned int (*v30)(char *, uint64_t, uint64_t);
  uint64_t result;
  char v32;
  char v33;
  char v34;
  uint64_t v35;
  int v36;
  double *v37;
  void **v38;
  int v39;
  int v40;
  char *v41;
  uint64_t v42;
  char v43;
  void **v44;
  void (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  void **p_weak_ivar_lyt;
  __objc2_class **p_superclass;
  int v54;
  uint64_t v55;
  int v56;
  _BYTE *v57;
  uint64_t v58;
  char v59;
  char v60;
  uint64_t v61;
  void (*v62)(uint64_t, char *, uint64_t);
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void (*v72)(double *, uint64_t, uint64_t);
  uint64_t v73;
  double v74;
  void **v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  void (*v81)(double *, uint64_t, uint64_t);
  uint64_t v82;
  double v83;
  uint64_t v84;
  uint64_t v85;
  void *v86;
  void *v87;
  void (*v88)(double *, uint64_t, uint64_t);
  double v89;
  uint64_t v90;
  void *v91;
  char *v92;
  void (*v93)(double *, uint64_t, uint64_t);
  double v94;
  double *v95;
  void **v96;
  uint64_t v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  double v103;
  int v104;
  uint64_t v105;
  char *v106;
  double v107;
  int v108;
  uint64_t v109;
  int v110;
  int v111;
  void (*v112)(uint64_t, char *, uint64_t);
  _QWORD *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  void **v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(char *, uint64_t, uint64_t);
  double *v127;

  v5 = sub_240154310();
  v122 = *(void ***)(v5 - 8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v119 = (char *)&v109 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v120 = (char *)&v109 - v9;
  v10 = MEMORY[0x24BDAC7A8](v8);
  v115 = (char *)&v109 - v11;
  v12 = MEMORY[0x24BDAC7A8](v10);
  v114 = (char *)&v109 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (double *)((char *)&v109 - v15);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v109 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = 0;
  v22 = type metadata accessor for DKCamera();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x24BDAC7A8](v22);
  v116 = (uint64_t)&v109 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x24BDAC7A8](v24);
  v118 = (uint64_t)&v109 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v109 - v28;
  sub_240070B90(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v21, &qword_256FB4430);
  v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v117 = v22;
  if (v30(v21, 1, v22) == 1)
  {
    result = sub_240070BD4((uint64_t)v21, &qword_256FB4430);
    *a2 = 0;
    return result;
  }
  sub_240070AF8((uint64_t)v21, (uint64_t)v29);
  v32 = sub_240070C10(a1);
  v125 = a1;
  v33 = sub_240070E1C(a1);
  v34 = v33;
  v123 = v29;
  v113 = a2;
  if ((v32 & 1) != 0)
  {
    v35 = v124;
    sub_24006EA24();
    v111 = v36;
    v37 = v16;
    v38 = v122;
    if ((v34 & 1) != 0)
    {
      sub_24006ECB8();
      v110 = v39;
    }
    else
    {
      v110 = 0;
    }
    v41 = v18;
    v42 = v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime;
    v126 = (void (*)(char *, uint64_t, uint64_t))v38[2];
    v126(v18, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime, v5);
    sub_240154280();
    v43 = sub_2401542EC();
    v44 = (void **)v38[1];
    ((void (*)(double *, uint64_t))v44)(v37, v5);
    ((void (*)(char *, uint64_t))v44)(v18, v5);
    if ((v43 & 1) != 0)
      ((void (*)(uint64_t, uint64_t, uint64_t))v38[3])(v42, v125 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
    sub_240154280();
    v45 = (void (*)(uint64_t, char *, uint64_t))v38[5];
    v45(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v41, v5);
    if ((v34 & 1) == 0)
      goto LABEL_12;
LABEL_24:
    v46 = v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime;
    v126(v41, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v5);
    sub_240154280();
    v60 = sub_2401542EC();
    ((void (*)(double *, uint64_t))v44)(v37, v5);
    ((void (*)(char *, uint64_t))v44)(v41, v5);
    v48 = &OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime;
    if ((v60 & 1) == 0)
      goto LABEL_14;
    goto LABEL_13;
  }
  v35 = v124;
  v37 = v16;
  v38 = v122;
  if ((v33 & 1) != 0)
  {
    sub_24006ECB8();
    v110 = v40;
  }
  else
  {
    v110 = 0;
  }
  v41 = v18;
  v58 = v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime;
  v126 = (void (*)(char *, uint64_t, uint64_t))v38[2];
  v126(v18, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v5);
  sub_240154280();
  v59 = sub_2401542EC();
  v44 = (void **)v38[1];
  ((void (*)(double *, uint64_t))v44)(v37, v5);
  ((void (*)(char *, uint64_t))v44)(v18, v5);
  if ((v59 & 1) != 0)
    ((void (*)(uint64_t, uint64_t, uint64_t))v38[3])(v58, v125 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
  sub_240154280();
  v45 = (void (*)(uint64_t, char *, uint64_t))v38[5];
  v45(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime, v41, v5);
  v111 = 0;
  if ((v34 & 1) != 0)
    goto LABEL_24;
LABEL_12:
  v46 = v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime;
  v126(v41, v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime, v5);
  sub_240154280();
  v47 = sub_2401542EC();
  ((void (*)(double *, uint64_t))v44)(v37, v5);
  ((void (*)(char *, uint64_t))v44)(v41, v5);
  v48 = &OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime;
  if ((v47 & 1) != 0)
LABEL_13:
    ((void (*)(uint64_t, uint64_t, uint64_t))v38[3])(v46, v125 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
LABEL_14:
  sub_240154280();
  v49 = v35 + *v48;
  v112 = v45;
  v45(v49, v41, v5);
  v50 = v125;
  v51 = *(unsigned __int8 *)(v125
                           + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming);
  p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
  p_superclass = (__objc2_class **)(_TtC23IntelligentTrackingCore18DKReturnToBaseTask + 8);
  v122 = v44;
  if (v51 == 4
    || v51 == *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastHorizontalFraming))
  {
    v54 = *(unsigned __int8 *)(v125
                             + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
    if (v54 == 3)
    {
      v55 = 0;
      goto LABEL_41;
    }
    v56 = 0;
    v57 = (_BYTE *)(v124 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming);
    if (v54 == *(unsigned __int8 *)(v124 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming))
    {
      v55 = 0;
      goto LABEL_41;
    }
    v62 = (void (*)(uint64_t, char *, uint64_t))v126;
  }
  else
  {
    *(_BYTE *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastHorizontalFraming) = v51;
    v61 = *(_QWORD *)(v35 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalAccelerationFilter);
    v62 = (void (*)(uint64_t, char *, uint64_t))v126;
    v126(v41, v50 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
    swift_retain();
    v63 = v114;
    sub_240154298();
    ((void (*)(char *, uint64_t))v44)(v41, v5);
    if (*(_BYTE *)(v61 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1)
    {
      *(_BYTE *)(v61 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 0;
      v64 = v61 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout;
      ((void (*)(uint64_t, uint64_t))v44)(v61 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v5);
      v62(v64, v63, v5);
    }
    swift_release();
    ((void (*)(char *, uint64_t))v44)(v63, v5);
    v54 = *(unsigned __int8 *)(v50
                             + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
    p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
    if (v54 == 3
      || (v57 = (_BYTE *)(v124 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming),
          v54 == *(unsigned __int8 *)(v124 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_lastVerticalFraming)))
    {
      LOBYTE(v55) = 0;
      goto LABEL_36;
    }
    v56 = 1;
    p_superclass = _TtC23IntelligentTrackingCore18DKReturnToBaseTask.superclass;
    v44 = v122;
  }
  *v57 = v54;
  v65 = *(uint64_t *)((char *)&p_superclass[148]->isa + v124);
  v62((uint64_t)v41, (char *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time), v5);
  swift_retain();
  v66 = v115;
  sub_240154298();
  ((void (*)(char *, uint64_t))v44)(v41, v5);
  if (*(_BYTE *)(v65 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1)
  {
    *(_BYTE *)(v65 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 0;
    v67 = v65 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout;
    ((void (*)(uint64_t, uint64_t))v44)(v65 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v5);
    v62(v67, v66, v5);
  }
  swift_release();
  ((void (*)(char *, uint64_t))v44)(v66, v5);
  v55 = 1;
  if (!v56)
  {
LABEL_41:
    v81 = (void (*)(double *, uint64_t, uint64_t))v126;
    v82 = v125 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    v126(v41, v125 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
    v68 = v124;
    v81(v37, v124 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime, v5);
    sub_24015428C();
    v2 = v83;
    ((void (*)(double *, uint64_t))v44)(v37, v5);
    ((void (*)(char *, uint64_t))v44)(v41, v5);
    v71 = v118;
    sub_240071030((uint64_t)v123, v118);
    if (v2 <= 1.0)
    {
      sub_240070B3C(v71);
      v71 = v121;
    }
    else
    {
      v76 = (_QWORD *)(v71 + *(int *)(v117 + 32));
      v84 = *(_QWORD *)((char *)v76 + *(int *)(type metadata accessor for DKMotion3() + 24));
      if (!*(_QWORD *)(v84 + 16))
      {
LABEL_92:
        __break(1u);
        goto LABEL_93;
      }
      v2 = fabs(*(double *)(v84 + 32));
      sub_240070B3C(v71);
      v71 = v121;
      if (v2 < *(double *)(*(_QWORD *)(v68 + 32) + 176))
      {
        v85 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
        v86 = *(void **)(v85 + 32);
        swift_retain();
        objc_msgSend(v86, sel_lock);
        v87 = &unk_2510618F0;
LABEL_50:
        sub_2400A430C(v85, (uint64_t)v87);
        v44 = &ResourceBundleClass.weak_ivar_lyt;
        p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
        objc_msgSend(v86, sel_unlock);
        swift_release();
        if ((v55 & 1) != 0)
          goto LABEL_51;
        goto LABEL_37;
      }
    }
    v88 = (void (*)(double *, uint64_t, uint64_t))v126;
    v126(v41, v82, v5);
    v88(v37, v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v5);
    sub_24015428C();
    v2 = v89;
    ((void (*)(double *, uint64_t))v44)(v37, v5);
    ((void (*)(char *, uint64_t))v44)(v41, v5);
    if (v2 <= 0.0)
    {
      if ((v111 & 1) == 0)
      {
        v44 = &ResourceBundleClass.weak_ivar_lyt;
        p_weak_ivar_lyt = (void **)(&ResourceBundleClass + 56);
        if ((_DWORD)v55)
          goto LABEL_51;
        goto LABEL_37;
      }
      v85 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
      v86 = *(void **)(v85 + 32);
      swift_retain();
      objc_msgSend(v86, sel_lock);
      v87 = &unk_251061940;
    }
    else
    {
      v85 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
      v86 = *(void **)(v85 + 32);
      swift_retain();
      objc_msgSend(v86, sel_lock);
      v87 = &unk_251061918;
    }
    goto LABEL_50;
  }
LABEL_36:
  v68 = v124;
  v69 = *(_QWORD *)(v124 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
  v70 = *(void **)(v69 + 32);
  swift_retain();
  objc_msgSend(v70, sel_lock);
  v71 = v121;
  sub_2400A430C(v69, (uint64_t)&unk_2510618C8);
  v44 = &ResourceBundleClass.weak_ivar_lyt;
  p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
  objc_msgSend(v70, sel_unlock);
  swift_release();
  sub_240154280();
  v112(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime, v41, v5);
  if ((v55 & 1) != 0)
  {
LABEL_51:
    v90 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
    v91 = *(void **)(v90 + 32);
    swift_retain();
    objc_msgSend(v91, (SEL)0x251075AC8);
    sub_2400A430C(v90, (uint64_t)&unk_251061968);
    objc_msgSend(v91, (SEL)p_weak_ivar_lyt[13]);
    swift_release();
    sub_240154280();
    v112(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v41, v5);
    v92 = v120;
    goto LABEL_58;
  }
LABEL_37:
  v72 = (void (*)(double *, uint64_t, uint64_t))v126;
  v73 = v125 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  v126(v41, v125 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v5);
  v72(v37, v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v5);
  sub_24015428C();
  v2 = v74;
  v75 = v122;
  ((void (*)(double *, uint64_t))v122)(v37, v5);
  ((void (*)(char *, uint64_t))v75)(v41, v5);
  v55 = v116;
  sub_240071030((uint64_t)v123, v116);
  if (v2 <= 1.0)
  {
    sub_240070B3C(v55);
  }
  else
  {
    v76 = (_QWORD *)(v55 + *(int *)(v117 + 32));
    v77 = *(_QWORD *)((char *)v76 + *(int *)(type metadata accessor for DKMotion3() + 24));
    if (*(_QWORD *)(v77 + 16) < 2uLL)
    {
LABEL_93:
      __break(1u);
      goto LABEL_94;
    }
    v2 = fabs(*(double *)(v77 + 40));
    sub_240070B3C(v55);
    if (v2 < *(double *)(*(_QWORD *)(v68 + 32) + 176))
    {
      v78 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
      v79 = *(void **)(v78 + 32);
      swift_retain();
      objc_msgSend(v79, (SEL)0x251075AC8);
      v80 = &unk_251061990;
LABEL_55:
      sub_2400A430C(v78, (uint64_t)v80);
      objc_msgSend(v79, (SEL)p_weak_ivar_lyt[13]);
      swift_release();
      v92 = v120;
      goto LABEL_58;
    }
  }
  v93 = (void (*)(double *, uint64_t, uint64_t))v126;
  v126(v41, v73, v5);
  v93(v37, v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime, v5);
  sub_24015428C();
  v2 = v94;
  v95 = v37;
  v96 = v122;
  ((void (*)(double *, uint64_t))v122)(v95, v5);
  ((void (*)(char *, uint64_t))v96)(v41, v5);
  if (v2 > 0.0)
  {
    v78 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
    v79 = *(void **)(v78 + 32);
    swift_retain();
    objc_msgSend(v79, (SEL)0x251075AC8);
    v80 = &unk_2510619B8;
    goto LABEL_55;
  }
  v92 = v120;
  v97 = v125;
  if ((v110 & 1) == 0)
    goto LABEL_59;
  v98 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
  v99 = *(void **)(v98 + 32);
  swift_retain();
  objc_msgSend(v99, (SEL)0x251075AC8);
  sub_2400A430C(v98, (uint64_t)&unk_2510619E0);
  objc_msgSend(v99, (SEL)p_weak_ivar_lyt[13]);
  swift_release();
LABEL_58:
  v97 = v125;
LABEL_59:
  v55 = v97;
  sub_24006E3A8(v97, (uint64_t *)&v127);
  v100 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalTrackingFSM);
  v76 = *(_QWORD **)(v100 + 32);
  swift_retain();
  objc_msgSend(v76, (SEL)0x251075AC8);
  v71 = *(unsigned __int8 *)(v100 + 16);
  objc_msgSend(v76, (SEL)p_weak_ivar_lyt[13]);
  swift_release();
  if ((v71 & 1) != 0)
    goto LABEL_63;
  v37 = v127;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v37 = (double *)sub_24014CD20(v37);
    if (*((_QWORD *)v37 + 2))
      goto LABEL_62;
LABEL_89:
    __break(1u);
LABEL_90:
    v37 = (double *)sub_24014CD20(v37);
    goto LABEL_65;
  }
  if (!*((_QWORD *)v37 + 2))
    goto LABEL_89;
LABEL_62:
  v37[4] = 0.0;
  v127 = v37;
LABEL_63:
  v101 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalTrackingFSM);
  v76 = *(_QWORD **)(v101 + 32);
  swift_retain();
  objc_msgSend(v76, (SEL)0x251075AC8);
  v71 = *(unsigned __int8 *)(v101 + 16);
  objc_msgSend(v76, (SEL)p_weak_ivar_lyt[13]);
  swift_release();
  v44 = v122;
  if ((v71 & 1) != 0)
    goto LABEL_67;
  v37 = v127;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_90;
LABEL_65:
  if (*((_QWORD *)v37 + 2) < 2uLL)
  {
    __break(1u);
    goto LABEL_92;
  }
  v37[5] = 0.0;
  v127 = v37;
LABEL_67:
  v71 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_horizontalAccelerationFilter);
  v37 = (double *)(v55 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time);
  v102 = v55 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  v55 = (uint64_t)v126;
  v126(v92, v102, v5);
  p_weak_ivar_lyt = (void **)&OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled;
  if (*(_BYTE *)(v71 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1)
  {
    ((void (*)(char *, uint64_t, uint64_t))v55)(v41, v71 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v5);
    swift_retain();
    sub_24015428C();
    v2 = v103;
    ((void (*)(char *, uint64_t))v44)(v41, v5);
    if (v2 > 0.0)
    {
      v104 = *(unsigned __int8 *)(v71 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile);
      swift_release();
      ((void (*)(char *, uint64_t))v44)(v92, v5);
      if (v104)
        goto LABEL_76;
      v76 = v127;
      if (*((_QWORD *)v127 + 2))
      {
        v2 = v127[4];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        {
          if (v76[2])
          {
LABEL_73:
            *((double *)v76 + 4) = v2 * 0.5;
            v127 = (double *)v76;
            goto LABEL_76;
          }
LABEL_96:
          __break(1u);
          goto LABEL_97;
        }
LABEL_95:
        v76 = sub_24014CD20(v76);
        if (v76[2])
          goto LABEL_73;
        goto LABEL_96;
      }
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
    swift_release();
  }
  ((void (*)(char *, uint64_t))v44)(v92, v5);
LABEL_76:
  v105 = *(_QWORD *)(v68 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_verticalAccelerationFilter);
  v106 = v119;
  ((void (*)(char *, double *, uint64_t))v55)(v119, v37, v5);
  if (*((_BYTE *)*p_weak_ivar_lyt + v105) != 1)
  {
LABEL_84:
    ((void (*)(char *, uint64_t))v44)(v106, v5);
    v76 = v113;
    v71 = (uint64_t)v123;
    goto LABEL_85;
  }
  ((void (*)(char *, uint64_t, uint64_t))v55)(v41, v105 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v5);
  swift_retain();
  sub_24015428C();
  v2 = v107;
  ((void (*)(char *, uint64_t))v44)(v41, v5);
  if (v2 <= 0.0)
  {
    swift_release();
    goto LABEL_84;
  }
  v108 = *(unsigned __int8 *)(v105 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile);
  swift_release();
  ((void (*)(char *, uint64_t))v44)(v106, v5);
  v76 = v113;
  v71 = (uint64_t)v123;
  if (v108)
  {
LABEL_85:
    result = sub_240070B3C(v71);
    *v76 = v127;
    return result;
  }
  v37 = v127;
  if (*((_QWORD *)v127 + 2) >= 2uLL)
  {
    v2 = v127[5];
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) != 0)
      goto LABEL_81;
    goto LABEL_98;
  }
LABEL_97:
  __break(1u);
LABEL_98:
  result = (uint64_t)sub_24014CD20(v37);
  v37 = (double *)result;
LABEL_81:
  if (*((_QWORD *)v37 + 2) >= 2uLL)
  {
    v37[5] = v2 * 0.5;
    v127 = v37;
    goto LABEL_85;
  }
  __break(1u);
  return result;
}

void sub_24006E3A8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  double *v16;
  CGFloat *v17;
  CGFloat v18;
  CGFloat v19;
  CGFloat v20;
  CGFloat v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t inited;
  double MidX;
  uint64_t v29;
  double i;
  double MidY;
  double j;
  double v33;
  double v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  id v39;
  double *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  double v44;
  double v45;
  double v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  double v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  double v53;
  uint64_t v54;
  double v55;
  __int128 v56;
  uint64_t *v57;
  uint64_t v58;
  CGRect v59;
  CGRect v60;

  v3 = v2;
  v58 = sub_240154310();
  v6 = *(_QWORD *)(v58 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for DKCamera();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8]();
  v16 = (double *)((char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (CGFloat *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32) & 1) != 0)
    goto LABEL_45;
  v19 = v17[2];
  v18 = v17[3];
  v21 = *v17;
  v20 = v17[1];
  sub_240070B90(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v12, &qword_256FB4430);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_240070BD4((uint64_t)v12, &qword_256FB4430);
LABEL_45:
    *a2 = (uint64_t)&unk_251061890;
    return;
  }
  sub_240070AF8((uint64_t)v12, (uint64_t)v16);
  v22 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
  if (!v22)
  {
    sub_240070B3C((uint64_t)v16);
    goto LABEL_45;
  }
  v57 = a2;
  if (!(v22 >> 62))
  {
    v23 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v23)
      goto LABEL_7;
LABEL_43:
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  if (!sub_240154D30())
    goto LABEL_43;
LABEL_7:
  if ((v22 & 0xC000000000000001) != 0)
  {
    v24 = MEMORY[0x24267D4E0](0, v22);
  }
  else
  {
    if (!*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    v24 = *(_QWORD *)(v22 + 32);
    swift_retain();
  }
  swift_bridgeObjectRelease();
  sub_240070B90(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion, (uint64_t)v10, &qword_256FB4438);
  swift_release();
  v25 = type metadata accessor for DKMotion3();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v10, 1, v25))
  {
    sub_240070BD4((uint64_t)v10, &qword_256FB4438);
LABEL_44:
    sub_240070B3C((uint64_t)v16);
    a2 = v57;
    goto LABEL_45;
  }
  v26 = *(_QWORD **)&v10[*(int *)(v25 + 24)];
  swift_bridgeObjectRetain();
  sub_240070BD4((uint64_t)v10, &qword_256FB4438);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
  inited = swift_initStackObject();
  v56 = xmmword_240155A40;
  *(_OWORD *)(inited + 16) = xmmword_240155A40;
  v59.origin.x = v21;
  v59.origin.y = v20;
  v59.size.width = v19;
  v59.size.height = v18;
  MidX = CGRectGetMidX(v59);
  v29 = *(_QWORD *)((char *)v16 + *(int *)(v13 + 32) + *(int *)(v25 + 20));
  if (!*(_QWORD *)(v29 + 16))
    goto LABEL_48;
  for (i = MidX - *(double *)(v29 + 32); i > 3.14159265; i = i + -6.28318531)
    ;
  for (; i < -3.14159265; i = i + 6.28318531)
    ;
  *(double *)(inited + 32) = i;
  v60.origin.x = v21;
  v60.origin.y = v20;
  v60.size.width = v19;
  v60.size.height = v18;
  MidY = CGRectGetMidY(v60);
  if (*(_QWORD *)(v29 + 16) < 2uLL)
    goto LABEL_49;
  for (j = MidY - *(double *)(v29 + 40); j > 3.14159265; j = j + -6.28318531)
    ;
  for (; j < -3.14159265; j = j + 6.28318531)
    ;
  v33 = -j;
  *(double *)(inited + 40) = -j;
  if (j < 0.0)
  {
    if (*(_QWORD *)(inited + 16) < 2uLL)
    {
LABEL_56:
      __break(1u);
      goto LABEL_57;
    }
    v34 = 1.0 - fabs(*(double *)(inited + 32)) / v16[1];
    if (v34 < 0.0)
      v34 = 0.0;
    *(double *)(inited + 40) = v34 * v33;
  }
  v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = v56;
  v36 = v26[2];
  if (!v36)
    goto LABEL_50;
  v37 = (_QWORD *)v35;
  *(_QWORD *)(v35 + 32) = v26[4];
  if (v36 == 1)
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v38 = v26[5];
  swift_bridgeObjectRelease();
  v37[5] = v38;
  v39 = *(id *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_pid);
  v40 = (double *)sub_2401321F8(inited, v37);
  swift_setDeallocating();

  v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_240155A50;
  *(_QWORD *)(v41 + 48) = 0;
  v42 = *((_QWORD *)v40 + 2);
  if (!v42)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v43 = v41;
  v44 = v40[4];
  *(double *)(v41 + 32) = v44;
  if (*(_BYTE *)v16 == 1)
  {
    if (v42 == 1)
    {
LABEL_57:
      __break(1u);
      goto LABEL_58;
    }
    v45 = v40[5];
    swift_bridgeObjectRelease();
LABEL_36:
    *(double *)(v43 + 40) = v45;
    if (*((_BYTE *)v16 + 1) == 1)
    {
      v44 = v44 * 1.5;
      *(double *)(v43 + 32) = v44;
    }
    v47 = a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
    v48 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v49 = v58;
    v48(v8, v47, v58);
    swift_retain();
    v50 = sub_2400B3764((uint64_t)v8, v44);
    swift_release();
    v51 = *(void (**)(char *, uint64_t))(v6 + 8);
    v51(v8, v49);
    v52 = *(_QWORD *)(v43 + 16);
    if (v52)
    {
      *(double *)(v43 + 32) = v50;
      if (v52 != 1)
      {
        v53 = *(double *)(v43 + 40);
        v54 = v58;
        v48(v8, v47, v58);
        swift_retain();
        v55 = sub_2400B3764((uint64_t)v8, v53);
        swift_release();
        v51(v8, v54);
        if (*(_QWORD *)(v43 + 16) >= 2uLL)
        {
          *(double *)(v43 + 40) = v55;
          sub_240070B3C((uint64_t)v16);
          swift_setDeallocating();
          *v57 = v43;
          return;
        }
        goto LABEL_55;
      }
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  if (v42 != 1)
  {
    v46 = v40[5];
    swift_bridgeObjectRelease();
    v45 = -v46;
    goto LABEL_36;
  }
LABEL_58:
  __break(1u);
}

void sub_24006EA24()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  CGFloat *v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  uint64_t v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  double v21;
  uint64_t v22;
  CGRect v23;
  CGRect v24;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8]();
  v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DKCamera();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = (CGFloat *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32) & 1) == 0)
  {
    v10 = v8[2];
    v9 = v8[3];
    v12 = *v8;
    v11 = v8[1];
    sub_240070B90(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v2, &qword_256FB4430);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_240070BD4((uint64_t)v2, &qword_256FB4430);
      return;
    }
    sub_240070AF8((uint64_t)v2, (uint64_t)v6);
    v13 = *(_QWORD *)(*(_QWORD *)(v0 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastCommand);
    if (!v13
      || (v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command),
          v15 = *(unsigned __int16 *)(v13
                                    + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command
                                    + 16),
          v15 >= 0x4000))
    {
LABEL_15:
      sub_240070B3C((uint64_t)v6);
      return;
    }
    v17 = *v14;
    v16 = v14[1];
    v18 = &v6[*(int *)(v3 + 32)];
    v19 = *(_QWORD *)&v18[*(int *)(type metadata accessor for DKMotion3() + 20)];
    if (*(_QWORD *)(v19 + 16))
    {
      v20 = *(double *)(v19 + 32);
      swift_retain();
      sub_240070B78(v17, v16, v15);
      v23.origin.x = v12;
      v23.origin.y = v11;
      v23.size.width = v10;
      v23.size.height = v9;
      if (v20 - CGRectGetMidX(v23) <= 0.0)
      {
LABEL_11:
        v21 = *(double *)(v19 + 32);
        v24.origin.x = v12;
        v24.origin.y = v11;
        v24.size.width = v10;
        v24.size.height = v9;
        if (v21 - CGRectGetMidX(v24) < 0.0)
        {
          if (*(_QWORD *)(v17 + 16))
          {
            swift_release();
            sub_240070B84(v17, v16, v15);
            sub_240070B3C((uint64_t)v6);
            return;
          }
          goto LABEL_19;
        }
        swift_release();
        sub_240070B84(v17, v16, v15);
        goto LABEL_15;
      }
      if (*(_QWORD *)(v17 + 16))
      {
        if (*(double *)(v17 + 32) > 0.0)
        {
          sub_240070B3C((uint64_t)v6);
          sub_240070B84(v17, v16, v15);
          swift_release();
          return;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
}

void sub_24006ECB8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  CGFloat *v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  uint64_t v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned __int8 *v19;
  uint64_t v20;
  unint64_t v21;
  double v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8]();
  v2 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = type metadata accessor for DKCamera();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (unsigned __int8 *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(v0 + 48);
  v8 = (CGFloat *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if ((*(_BYTE *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32) & 1) == 0)
  {
    v10 = v8[2];
    v9 = v8[3];
    v12 = *v8;
    v11 = v8[1];
    sub_240070B90(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v2, &qword_256FB4430);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_240070BD4((uint64_t)v2, &qword_256FB4430);
      return;
    }
    sub_240070AF8((uint64_t)v2, (uint64_t)v6);
    v13 = *(_QWORD *)(*(_QWORD *)(v0 + 40)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastCommand);
    if (!v13)
      goto LABEL_23;
    v14 = (uint64_t *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
    v15 = *(unsigned __int16 *)(v13
                              + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command
                              + 16);
    if (v15 >= 0x4000)
      goto LABEL_23;
    v17 = *v14;
    v16 = v14[1];
    v18 = *v6;
    v19 = &v6[*(int *)(v3 + 32)];
    v20 = *(_QWORD *)&v19[*(int *)(type metadata accessor for DKMotion3() + 20)];
    v21 = *(_QWORD *)(v20 + 16);
    if (v18 == 1)
    {
      if (v21 >= 2)
      {
        v22 = *(double *)(v20 + 40);
        swift_retain();
        sub_240070B78(v17, v16, v15);
        v27.origin.x = v12;
        v27.origin.y = v11;
        v27.size.width = v10;
        v27.size.height = v9;
        if (v22 - CGRectGetMidY(v27) <= 0.0)
          goto LABEL_11;
        if (*(_QWORD *)(v17 + 16) >= 2uLL)
        {
          if (*(double *)(v17 + 40) >= 0.0)
          {
LABEL_11:
            v23 = *(double *)(v20 + 40);
            v28.origin.x = v12;
            v28.origin.y = v11;
            v28.size.width = v10;
            v28.size.height = v9;
            if (v23 - CGRectGetMidY(v28) < 0.0)
            {
              if (*(_QWORD *)(v17 + 16) >= 2uLL)
              {
LABEL_13:
                swift_release();
                sub_240070B84(v17, v16, v15);
                sub_240070B3C((uint64_t)v6);
                return;
              }
              goto LABEL_29;
            }
            goto LABEL_22;
          }
LABEL_18:
          sub_240070B3C((uint64_t)v6);
          sub_240070B84(v17, v16, v15);
          swift_release();
          return;
        }
        goto LABEL_27;
      }
      __break(1u);
    }
    else if (v21 >= 2)
    {
      v24 = *(double *)(v20 + 40);
      swift_retain();
      sub_240070B78(v17, v16, v15);
      v29.origin.x = v12;
      v29.origin.y = v11;
      v29.size.width = v10;
      v29.size.height = v9;
      if (v24 - CGRectGetMidY(v29) > 0.0)
      {
        if (*(_QWORD *)(v17 + 16) < 2uLL)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
LABEL_30:
          __break(1u);
          return;
        }
        if (*(double *)(v17 + 40) > 0.0)
          goto LABEL_18;
      }
      v25 = *(double *)(v20 + 40);
      v30.origin.x = v12;
      v30.origin.y = v11;
      v30.size.width = v10;
      v30.size.height = v9;
      if (v25 - CGRectGetMidY(v30) < 0.0)
      {
        if (*(_QWORD *)(v17 + 16) >= 2uLL)
          goto LABEL_13;
        goto LABEL_30;
      }
LABEL_22:
      swift_release();
      sub_240070B84(v17, v16, v15);
LABEL_23:
      sub_240070B3C((uint64_t)v6);
      return;
    }
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
}

uint64_t sub_24006F034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_24006F108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  swift_release();
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideHorizontalTime;
  v4 = sub_240154310();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_insideVerticalTime, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideHorizontalTime, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKControlTask_outsideVerticalTime, v4);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_24006F230()
{
  sub_24006F108();
  return swift_deallocClassInstance();
}

uint64_t sub_24006F254()
{
  return type metadata accessor for DKControlTask();
}

uint64_t type metadata accessor for DKControlTask()
{
  uint64_t result;

  result = qword_256FB4050;
  if (!qword_256FB4050)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24006F298()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4378);
}

uint64_t initializeBufferWithCopyOfBuffer for DKPIDConfig(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t sub_24006F3CC(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 168))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24006F3EC(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 168) = v3;
  return result;
}

void type metadata accessor for espresso_buffer_t(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4380);
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DKIdentityConfidence(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DKIdentityConfidence(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for espresso_network_t(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4388);
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4390);
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for DKPersonSelectionFilter.SelectionCriteria(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKControlTask.Event(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24006F5B8 + 4 * byte_240155A85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24006F5EC + 4 * byte_240155A80[v4]))();
}

uint64_t sub_24006F5EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24006F5F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24006F5FCLL);
  return result;
}

uint64_t sub_24006F608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24006F610);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24006F614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24006F61C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24006F628(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_24006F634(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DKControlTask.Event()
{
  return &type metadata for DKControlTask.Event;
}

ValueMetadata *type metadata accessor for DKControlTask.State()
{
  return &type metadata for DKControlTask.State;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingCommand.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23IntelligentTrackingCore13DKControlTaskC13ControlMethodOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24006F740 + 4 * byte_240155A8F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24006F774 + 4 * byte_240155A8A[v4]))();
}

uint64_t sub_24006F774(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24006F77C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24006F784);
  return result;
}

uint64_t sub_24006F790(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24006F798);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24006F79C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24006F7A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_24006F7B0(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for DKControlTask.ControlMethod()
{
  return &type metadata for DKControlTask.ControlMethod;
}

void type metadata accessor for ThermalState(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4398);
}

void type metadata accessor for AVVideoCodecType(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB43A0);
}

__n128 __swift_memcpy24_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for DKBodyKeyPoint(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DKBodyKeyPoint(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

void type metadata accessor for CMTime(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB43A8);
}

void type metadata accessor for CMSampleBuffer(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB43B0);
}

void type metadata accessor for CMFormatDescription(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB43B8);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB43C0);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB43C8);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB43D0);
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_24006F8D8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24006F8F8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB43D8);
}

uint64_t sub_24006F938(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t (*v8)@<X0>(uint64_t *@<X8>);
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t (*v36)();
  uint64_t result;
  uint64_t (*v38)@<X0>(uint64_t *@<X8>);
  uint64_t v39;
  char v40;

  v3 = v2;
  v5 = a1 & 1;
  *(_QWORD *)(v3 + 24) = sub_2401071C8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  *(_BYTE *)(v3 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v7 = 0;
    v8 = 0;
    v9 = (char *)(a2 + 34);
    v38 = sub_240071264;
    v39 = v3;
    while (1)
    {
      v10 = *(v9 - 2);
      v11 = *(v9 - 1);
      v40 = *v9;
      sub_240071094((uint64_t)v7);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = sub_240070208;
      *(_QWORD *)(v12 + 24) = 0;
      sub_240071094((uint64_t)v8);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v14 = *(_QWORD *)(v3 + 24);
      *(_QWORD *)(v3 + 24) = 0x8000000000000000;
      v16 = sub_24013EF58(v10);
      v17 = *(_QWORD *)(v14 + 16);
      v18 = (v15 & 1) == 0;
      v19 = v17 + v18;
      if (__OFADD__(v17, v18))
        break;
      v20 = v15;
      if (*(_QWORD *)(v14 + 24) >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_2400ADFC4();
      }
      else
      {
        sub_2400AA618(v19, isUniquelyReferenced_nonNull_native);
        v21 = sub_24013EF58(v10);
        if ((v20 & 1) != (v22 & 1))
          goto LABEL_22;
        v16 = v21;
      }
      *(_QWORD *)(v3 + 24) = v14;
      swift_bridgeObjectRelease();
      v23 = *(_QWORD **)(v3 + 24);
      v24 = swift_bridgeObjectRetain();
      if ((v20 & 1) == 0)
      {
        v25 = (*(uint64_t (**)(uint64_t))(v12 + 16))(v24);
        v23[(v16 >> 6) + 8] |= 1 << v16;
        *(_BYTE *)(v23[6] + v16) = v10;
        *(_QWORD *)(v23[7] + 8 * v16) = v25;
        v26 = v23[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
          goto LABEL_21;
        v23[2] = v28;
      }
      v29 = v23[7];
      swift_bridgeObjectRelease();
      v30 = *(char **)(v29 + 8 * v16);
      v31 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v29 + 8 * v16) = v30;
      v32 = v11;
      if ((v31 & 1) == 0)
      {
        v30 = sub_240077858(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
        *(_QWORD *)(v29 + 8 * v16) = v30;
      }
      v34 = *((_QWORD *)v30 + 2);
      v33 = *((_QWORD *)v30 + 3);
      if (v34 >= v33 >> 1)
      {
        v30 = sub_240077858((char *)(v33 > 1), v34 + 1, 1, v30);
        *(_QWORD *)(v29 + 8 * v16) = v30;
      }
      v9 += 3;
      *((_QWORD *)v30 + 2) = v34 + 1;
      v35 = &v30[3 * v34];
      v35[32] = v10;
      v35[33] = v32;
      v35[34] = v40;
      v36 = sub_240070208;
      v7 = sub_240070208;
      v8 = sub_240071264;
      --v6;
      v3 = v39;
      if (!v6)
        goto LABEL_19;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    result = sub_240154F70();
    __break(1u);
  }
  else
  {
    v36 = 0;
    v38 = 0;
LABEL_19:
    swift_bridgeObjectRelease();
    sub_240071094((uint64_t)v36);
    sub_240071094((uint64_t)v38);
    return v3;
  }
  return result;
}

uint64_t sub_24006FC28(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t (*v8)@<X0>(uint64_t *@<X8>);
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t (*v36)();
  uint64_t result;
  uint64_t (*v38)@<X0>(uint64_t *@<X8>);
  uint64_t v39;
  char v40;

  v3 = v2;
  *(_QWORD *)(v3 + 24) = sub_2401074D0(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  *(_BYTE *)(v3 + 16) = a1;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v7 = 0;
    v8 = 0;
    v9 = (char *)(a2 + 34);
    v38 = sub_2400710B4;
    v39 = v3;
    while (1)
    {
      v10 = *(v9 - 2);
      v11 = *(v9 - 1);
      v40 = *v9;
      sub_240071094((uint64_t)v7);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = sub_240070208;
      *(_QWORD *)(v12 + 24) = 0;
      sub_240071094((uint64_t)v8);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v14 = *(_QWORD *)(v3 + 24);
      *(_QWORD *)(v3 + 24) = 0x8000000000000000;
      v16 = sub_24013F0E0(v10);
      v17 = *(_QWORD *)(v14 + 16);
      v18 = (v15 & 1) == 0;
      v19 = v17 + v18;
      if (__OFADD__(v17, v18))
        break;
      v20 = v15;
      if (*(_QWORD *)(v14 + 24) >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_2400AE180();
      }
      else
      {
        sub_2400AA8EC(v19, isUniquelyReferenced_nonNull_native);
        v21 = sub_24013F0E0(v10);
        if ((v20 & 1) != (v22 & 1))
          goto LABEL_22;
        v16 = v21;
      }
      *(_QWORD *)(v3 + 24) = v14;
      swift_bridgeObjectRelease();
      v23 = *(_QWORD **)(v3 + 24);
      v24 = swift_bridgeObjectRetain();
      if ((v20 & 1) == 0)
      {
        v25 = (*(uint64_t (**)(uint64_t))(v12 + 16))(v24);
        v23[(v16 >> 6) + 8] |= 1 << v16;
        *(_BYTE *)(v23[6] + v16) = v10;
        *(_QWORD *)(v23[7] + 8 * v16) = v25;
        v26 = v23[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
          goto LABEL_21;
        v23[2] = v28;
      }
      v29 = v23[7];
      swift_bridgeObjectRelease();
      v30 = *(char **)(v29 + 8 * v16);
      v31 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v29 + 8 * v16) = v30;
      v32 = v11;
      if ((v31 & 1) == 0)
      {
        v30 = sub_240077F00(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
        *(_QWORD *)(v29 + 8 * v16) = v30;
      }
      v34 = *((_QWORD *)v30 + 2);
      v33 = *((_QWORD *)v30 + 3);
      if (v34 >= v33 >> 1)
      {
        v30 = sub_240077F00((char *)(v33 > 1), v34 + 1, 1, v30);
        *(_QWORD *)(v29 + 8 * v16) = v30;
      }
      v9 += 3;
      *((_QWORD *)v30 + 2) = v34 + 1;
      v35 = &v30[3 * v34];
      v35[32] = v10;
      v35[33] = v32;
      v35[34] = v40;
      v36 = sub_240070208;
      v7 = sub_240070208;
      v8 = sub_2400710B4;
      --v6;
      v3 = v39;
      if (!v6)
        goto LABEL_19;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    result = sub_240154F70();
    __break(1u);
  }
  else
  {
    v36 = 0;
    v38 = 0;
LABEL_19:
    swift_bridgeObjectRelease();
    sub_240071094((uint64_t)v36);
    sub_240071094((uint64_t)v38);
    return v3;
  }
  return result;
}

uint64_t sub_24006FF18(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t (*v8)@<X0>(uint64_t *@<X8>);
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char v31;
  char v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  uint64_t (*v36)();
  uint64_t result;
  uint64_t (*v38)@<X0>(uint64_t *@<X8>);
  uint64_t v39;
  char v40;

  v3 = v2;
  *(_QWORD *)(v3 + 24) = sub_2401074E4(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  *(_BYTE *)(v3 + 16) = a1;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6)
  {
    v7 = 0;
    v8 = 0;
    v9 = (char *)(a2 + 34);
    v38 = sub_240071264;
    v39 = v3;
    while (1)
    {
      v10 = *(v9 - 2);
      v11 = *(v9 - 1);
      v40 = *v9;
      sub_240071094((uint64_t)v7);
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = sub_240070208;
      *(_QWORD *)(v12 + 24) = 0;
      sub_240071094((uint64_t)v8);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v14 = *(_QWORD *)(v3 + 24);
      *(_QWORD *)(v3 + 24) = 0x8000000000000000;
      v16 = sub_24013F0E0(v10);
      v17 = *(_QWORD *)(v14 + 16);
      v18 = (v15 & 1) == 0;
      v19 = v17 + v18;
      if (__OFADD__(v17, v18))
        break;
      v20 = v15;
      if (*(_QWORD *)(v14 + 24) >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_2400AE18C();
      }
      else
      {
        sub_2400AA8F8(v19, isUniquelyReferenced_nonNull_native);
        v21 = sub_24013F0E0(v10);
        if ((v20 & 1) != (v22 & 1))
          goto LABEL_22;
        v16 = v21;
      }
      *(_QWORD *)(v3 + 24) = v14;
      swift_bridgeObjectRelease();
      v23 = *(_QWORD **)(v3 + 24);
      v24 = swift_bridgeObjectRetain();
      if ((v20 & 1) == 0)
      {
        v25 = (*(uint64_t (**)(uint64_t))(v12 + 16))(v24);
        v23[(v16 >> 6) + 8] |= 1 << v16;
        *(_BYTE *)(v23[6] + v16) = v10;
        *(_QWORD *)(v23[7] + 8 * v16) = v25;
        v26 = v23[2];
        v27 = __OFADD__(v26, 1);
        v28 = v26 + 1;
        if (v27)
          goto LABEL_21;
        v23[2] = v28;
      }
      v29 = v23[7];
      swift_bridgeObjectRelease();
      v30 = *(char **)(v29 + 8 * v16);
      v31 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v29 + 8 * v16) = v30;
      v32 = v11;
      if ((v31 & 1) == 0)
      {
        v30 = sub_240077F0C(0, *((_QWORD *)v30 + 2) + 1, 1, v30);
        *(_QWORD *)(v29 + 8 * v16) = v30;
      }
      v34 = *((_QWORD *)v30 + 2);
      v33 = *((_QWORD *)v30 + 3);
      if (v34 >= v33 >> 1)
      {
        v30 = sub_240077F0C((char *)(v33 > 1), v34 + 1, 1, v30);
        *(_QWORD *)(v29 + 8 * v16) = v30;
      }
      v9 += 3;
      *((_QWORD *)v30 + 2) = v34 + 1;
      v35 = &v30[3 * v34];
      v35[32] = v10;
      v35[33] = v32;
      v35[34] = v40;
      v36 = sub_240070208;
      v7 = sub_240070208;
      v8 = sub_240071264;
      --v6;
      v3 = v39;
      if (!v6)
        goto LABEL_19;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    result = sub_240154F70();
    __break(1u);
  }
  else
  {
    v36 = 0;
    v38 = 0;
LABEL_19:
    swift_bridgeObjectRelease();
    sub_240071094((uint64_t)v36);
    sub_240071094((uint64_t)v38);
    return v3;
  }
  return result;
}

uint64_t sub_240070208()
{
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_240070214(uint64_t a1)
{
  MEMORY[0x24267E0BC](&unk_240156230, a1);
  return sub_2401543B8();
}

uint64_t sub_240070250()
{
  MEMORY[0x24267E0BC](&unk_240156230);
  return sub_2401543AC();
}

uint64_t sub_240070298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240070578(a1, a2, a3, (uint64_t)&unk_240156230);
}

BOOL sub_2400702A4(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_2400702B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x24267E0BC](&unk_240155FC0, a3);
  return sub_2401543A0();
}

uint64_t sub_240070304(uint64_t a1, uint64_t a2)
{
  return sub_2400707E8(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_24007031C(uint64_t a1, uint64_t a2)
{
  return sub_2400707E8(a1, a2, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_240070330(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_240154634();
  *a2 = 0;
  return result;
}

uint64_t sub_2400703A4(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_240154640();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_240070420@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_24015464C();
  v2 = sub_240154628();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

_DWORD *sub_240070460@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_240070470(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_QWORD *sub_24007047C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_24007048C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x24267E0BC](&unk_240156230, a3);
  return sub_2401543A0();
}

void sub_2400704DC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_2400704E8(uint64_t a1)
{
  MEMORY[0x24267E0BC](&unk_240155FC0, a1);
  return sub_2401543B8();
}

uint64_t sub_240070524()
{
  MEMORY[0x24267E0BC](&unk_240155FC0);
  return sub_2401543AC();
}

uint64_t sub_24007056C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240070578(a1, a2, a3, (uint64_t)&unk_240155FC0);
}

uint64_t sub_240070578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240154FE8();
  MEMORY[0x24267E0BC](a4, a2);
  sub_2401543AC();
  return sub_240155018();
}

uint64_t sub_2400705DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24015464C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_240070604()
{
  sub_2400707A8(&qword_256FB44A0, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_2401562A0);
  sub_2400707A8(&qword_256FB44A8, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_240156148);
  return sub_240154D6C();
}

uint64_t sub_240070688@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_240154628();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_2400706CC()
{
  sub_2400707A8(&qword_256FB4420, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_240155D50);
  sub_2400707A8(&qword_256FB4428, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_240155CF8);
  return sub_240154D6C();
}

uint64_t sub_240070750()
{
  return sub_2400707A8(&qword_256FB43E0, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_240155CC0);
}

uint64_t sub_24007077C()
{
  return sub_2400707A8(&qword_256FB43E8, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_240155C98);
}

uint64_t sub_2400707A8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24267E0BC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2400707E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_24015464C();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_240070824()
{
  sub_24015464C();
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240070864()
{
  uint64_t v0;

  sub_24015464C();
  sub_240154FE8();
  sub_2401546B8();
  v0 = sub_240155018();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2400708D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_24015464C();
  v2 = v1;
  if (v0 == sub_24015464C() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24007095C()
{
  return sub_2400707A8(&qword_256FB43F0, (uint64_t (*)(uint64_t))type metadata accessor for AVVideoCodecType, (uint64_t)&unk_240155D28);
}

unint64_t sub_24007098C()
{
  unint64_t result;

  result = qword_256FB43F8;
  if (!qword_256FB43F8)
  {
    result = MEMORY[0x24267E0BC](&unk_240155E60, &type metadata for DKControlTask.ControlMethod);
    atomic_store(result, (unint64_t *)&qword_256FB43F8);
  }
  return result;
}

unint64_t sub_2400709D4()
{
  unint64_t result;

  result = qword_256FB4400;
  if (!qword_256FB4400)
  {
    result = MEMORY[0x24267E0BC](&unk_240155EC8, &type metadata for DKControlTask.State);
    atomic_store(result, (unint64_t *)&qword_256FB4400);
  }
  return result;
}

unint64_t sub_240070A1C()
{
  unint64_t result;

  result = qword_256FB4408;
  if (!qword_256FB4408)
  {
    result = MEMORY[0x24267E0BC](&unk_240155F30, &type metadata for DKControlTask.Event);
    atomic_store(result, (unint64_t *)&qword_256FB4408);
  }
  return result;
}

uint64_t sub_240070A60()
{
  return sub_2400707A8(&qword_256FB4410, (uint64_t (*)(uint64_t))type metadata accessor for CVBuffer, (uint64_t)&unk_240155F58);
}

uint64_t sub_240070A8C()
{
  return sub_2400707A8(&qword_256FB4418, (uint64_t (*)(uint64_t))type metadata accessor for CVBuffer, (uint64_t)&unk_240155F80);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24267E0A4]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_240070AF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240070B3C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240070B78(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t result;

  if ((a3 & 0x8000) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_240070B84(uint64_t a1, uint64_t a2, __int16 a3)
{
  uint64_t result;

  if ((a3 & 0x8000) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_240070B90(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240070BD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_240070C10(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  CGFloat *v11;
  _BOOL8 v12;
  CGFloat v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  char *v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  double v21;
  double MinX;
  uint64_t v23;
  double v24;
  uint64_t v25;
  CGRect v26;
  CGRect v27;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for DKCamera();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - v9;
  v11 = (CGFloat *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32) & 1) != 0)
    return 0;
  v14 = v11[2];
  v13 = v11[3];
  v16 = *v11;
  v15 = v11[1];
  sub_240070B90(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v3, &qword_256FB4430);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_240070BD4((uint64_t)v3, &qword_256FB4430);
    return 0;
  }
  sub_240070AF8((uint64_t)v3, (uint64_t)v10);
  v17 = &v10[*(int *)(v4 + 32)];
  result = type metadata accessor for DKMotion3();
  v19 = *(_QWORD *)&v17[*(int *)(result + 20)];
  if (*(_QWORD *)(v19 + 16))
  {
    v20 = result;
    v21 = *(double *)(v19 + 32);
    v26.origin.x = v16;
    v26.origin.y = v15;
    v26.size.width = v14;
    v26.size.height = v13;
    MinX = CGRectGetMinX(v26);
    result = sub_240071030((uint64_t)v10, (uint64_t)v8);
    if (MinX >= v21)
    {
      v12 = 0;
      goto LABEL_10;
    }
    v23 = *(_QWORD *)&v8[*(int *)(v4 + 32) + *(int *)(v20 + 20)];
    if (*(_QWORD *)(v23 + 16))
    {
      v24 = *(double *)(v23 + 32);
      v27.origin.x = v16;
      v27.origin.y = v15;
      v27.size.width = v14;
      v27.size.height = v13;
      v12 = v24 < CGRectGetMaxX(v27);
LABEL_10:
      sub_240070B3C((uint64_t)v8);
      sub_240070B3C((uint64_t)v10);
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_240070E1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  CGFloat *v12;
  _BOOL8 v13;
  CGFloat v14;
  CGFloat v15;
  CGFloat v16;
  CGFloat v17;
  char *v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  double v22;
  double MinY;
  uint64_t v24;
  double v25;
  uint64_t v26;
  CGRect v27;
  CGRect v28;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DKCamera();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v26 - v10;
  v12 = (CGFloat *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  if ((*(_BYTE *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32) & 1) != 0)
    return 0;
  v15 = v12[2];
  v14 = v12[3];
  v17 = *v12;
  v16 = v12[1];
  sub_240070B90(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, (uint64_t)v4, &qword_256FB4430);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_240070BD4((uint64_t)v4, &qword_256FB4430);
    return 0;
  }
  sub_240070AF8((uint64_t)v4, (uint64_t)v11);
  v18 = &v11[*(int *)(v5 + 32)];
  result = type metadata accessor for DKMotion3();
  v20 = *(_QWORD *)&v18[*(int *)(result + 20)];
  if (*(_QWORD *)(v20 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v21 = result;
    v22 = *(double *)(v20 + 40);
    v27.origin.x = v17;
    v27.origin.y = v16;
    v27.size.width = v15;
    v27.size.height = v14;
    MinY = CGRectGetMinY(v27);
    result = sub_240071030((uint64_t)v11, (uint64_t)v9);
    if (MinY >= v22)
    {
      v13 = 0;
      goto LABEL_10;
    }
    v24 = *(_QWORD *)&v9[*(int *)(v5 + 32) + *(int *)(v21 + 20)];
    if (*(_QWORD *)(v24 + 16) >= 2uLL)
    {
      v25 = *(double *)(v24 + 40);
      v28.origin.x = v17;
      v28.origin.y = v16;
      v28.size.width = v15;
      v28.size.height = v14;
      v13 = v25 < CGRectGetMaxY(v28);
LABEL_10:
      sub_240070B3C((uint64_t)v9);
      sub_240070B3C((uint64_t)v11);
      return v13;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240071030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240071074()
{
  return swift_deallocObject();
}

uint64_t sub_240071084()
{
  return swift_deallocObject();
}

uint64_t sub_240071094(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_2400710A4()
{
  return swift_deallocObject();
}

uint64_t sub_2400710B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4450);
}

void type metadata accessor for VNImageOption(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4458);
}

void type metadata accessor for espresso_return_status_t(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4460);
}

void type metadata accessor for espresso_storage_type_t(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4468);
}

void type metadata accessor for CMTimeFlags(uint64_t a1)
{
  sub_240071140(a1, &qword_256FB4470);
}

void sub_240071140(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_240071184()
{
  return sub_2400707A8(&qword_256FB4478, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_24015610C);
}

uint64_t sub_2400711B0()
{
  return sub_2400707A8(&qword_256FB4480, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_2401560E0);
}

uint64_t sub_2400711DC()
{
  return sub_2400707A8((unint64_t *)&qword_256FB4488, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_24015625C);
}

uint64_t sub_240071208()
{
  return sub_2400707A8(&qword_256FB4490, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_240156204);
}

uint64_t sub_240071234()
{
  return sub_2400707A8(&qword_256FB4498, (uint64_t (*)(uint64_t))type metadata accessor for VNImageOption, (uint64_t)&unk_24015617C);
}

uint64_t DKConstantAccelerationFilter.Measurement.__allocating_init(time:)(char *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKConstantAccelerationFilter.Measurement.init(time:)(a1);
  return v2;
}

uint64_t DKConstantAccelerationFilter.Measurement.init(time:)(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, char *, uint64_t);
  _QWORD *v8;
  _QWORD *v9;
  void (*v10)(char *, uint64_t);
  uint64_t v12;

  v3 = sub_240154310();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v7(v6, a1, v3);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_updateIndices) = MEMORY[0x24BEE4B08];
  v7((char *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time), v6, v3);
  v8 = (_QWORD *)sub_2401547FC();
  v8[2] = 3;
  v8[5] = 0;
  v8[6] = 0;
  v8[4] = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_measurement) = v8;
  v9 = (_QWORD *)sub_2401547FC();
  v9[2] = 3;
  v9[5] = 0;
  v9[6] = 0;
  v9[4] = 0;
  v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v6, v3);
  *(_QWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_covariance) = v9;
  v10(a1, v3);
  return v1;
}

void *static DKConstantAccelerationFilter.Index.allCases.getter()
{
  return &unk_251061A40;
}

uint64_t sub_24007140C(unsigned __int8 *a1, double a2, double a3)
{
  sub_24013CC30(*a1, a2, a3);
  return swift_retain();
}

uint64_t DKConstantAccelerationFilter.Index.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t DKConstantAccelerationFilter.Measurement.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKConstantAccelerationFilter.Measurement.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

IntelligentTrackingCore::DKConstantAccelerationFilter::Index_optional __swiftcall DKConstantAccelerationFilter.Index.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligentTrackingCore::DKConstantAccelerationFilter::Index_optional)rawValue;
}

IntelligentTrackingCore::DKConstantAccelerationFilter::Index_optional sub_240071558(Swift::Int *a1)
{
  return DKConstantAccelerationFilter.Index.init(rawValue:)(*a1);
}

void sub_240071560(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

void sub_24007156C(_QWORD *a1@<X8>)
{
  *a1 = &unk_251061A68;
}

double sub_24007157C()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void sub_240071584(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 56) = a1;
}

uint64_t (*sub_24007158C())()
{
  return nullsub_1;
}

double sub_24007159C()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

void sub_2400715A4(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 64) = a1;
}

uint64_t (*sub_2400715AC())()
{
  return nullsub_1;
}

uint64_t sub_2400715BC(uint64_t a1)
{
  sub_2400727D0(a1);
  return swift_retain();
}

uint64_t sub_2400715D0(unsigned __int8 *a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v6 = v5;
  v11 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v14 = *(_QWORD *)(v6 + 40);
  *(_QWORD *)(v6 + 40) = 0x8000000000000000;
  sub_240071EF0(a2, a3 & 1, a4, a5 & 1, v11, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v6 + 40) = v14;
  swift_bridgeObjectRelease();
  return swift_retain();
}

uint64_t DKConstantAccelerationFilter.Configuration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKConstantAccelerationFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKConstantAccelerationFilter.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = a1;
  v1 = swift_retain();
  sub_240141688(v1, 3);
  v3 = v2;
  swift_release();
  return v3;
}

uint64_t DKConstantAccelerationFilter.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = a1;
  v2 = swift_retain();
  sub_240141688(v2, 3);
  v4 = v3;
  swift_release();
  return v4;
}

uint64_t sub_240071760(unsigned __int8 *a1, unsigned __int8 *a2, double a3)
{
  return sub_240071B8C(*a1, *a2, a3);
}

unsigned __int8 *sub_240071794(unsigned __int8 *result)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(_QWORD *)(v2 + 16) <= (uint64_t)*result || *(uint64_t *)(v2 + 24) < 1)
  {
    result = (unsigned __int8 *)sub_240154D00();
    __break(1u);
  }
  return result;
}

uint64_t sub_24007181C(unsigned __int8 *a1, double a2)
{
  return sub_24013CF00(*a1, a2);
}

uint64_t sub_240071824(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t, double);
  double v10;
  double v11;
  void (*v12)(char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v28;
  double v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16);
  v9(v8, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4, v6);
  sub_24015428C();
  v11 = v10;
  v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, v4);
  v13 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F;
  v14 = *(_QWORD **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
  v15 = v14[2];
  if (v15 < 1)
    goto LABEL_29;
  v16 = v14[3];
  if (v16 <= 1)
    goto LABEL_29;
  v17 = v14[4];
  *(double *)(v17 + 8 * v15) = v11;
  if (v16 == 2)
    goto LABEL_29;
  if (v15 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  *(double *)(v17 + 16 * v15) = v11 * (v11 * 0.5);
  if ((unint64_t)v15 <= 1)
    goto LABEL_29;
  *(double *)(v17 + ((16 * v15) | 8)) = v11;
  ((void (*)(char *, uint64_t, uint64_t))v9)(v8, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v4);
  sub_24015428C();
  v19 = v18;
  v12(v8, v4);
  v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration);
  if (*(double *)(v20 + 56) >= v19)
  {
    v30 = *(_QWORD **)(v2 + v13);
    v31 = v30[2];
    if (v31 < 3)
      goto LABEL_29;
    v32 = v30[3];
    if (v32 <= 1)
      goto LABEL_29;
    if (!__OFADD__(v31, 2))
    {
      v25 = v30[4];
      *(_QWORD *)(v25 + 8 * (v31 + 2)) = 0;
      if ((unint64_t)v32 > 2)
      {
        if (v31 + 0x4000000000000000 >= 0)
        {
          v33 = 2 * v31;
          v27 = __OFADD__(v33, 2);
          v28 = v33 + 2;
          if (!v27)
          {
            v29 = 1.0;
            goto LABEL_21;
          }
          goto LABEL_28;
        }
        goto LABEL_26;
      }
      goto LABEL_29;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v21 = *(_QWORD **)(v2 + v13);
  v22 = v21[2];
  if (v22 < 3)
    goto LABEL_29;
  v23 = v21[3];
  if (v23 <= 1)
    goto LABEL_29;
  if (__OFADD__(v22, 2))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v24 = *(_QWORD *)(v20 + 64);
  v25 = v21[4];
  *(_QWORD *)(v25 + 8 * (v22 + 2)) = v24;
  if ((unint64_t)v23 > 2)
  {
    if (v22 + 0x4000000000000000 >= 0)
    {
      v26 = 2 * v22;
      v27 = __OFADD__(v26, 2);
      v28 = v26 + 2;
      if (!v27)
      {
        v29 = 0.0;
LABEL_21:
        *(double *)(v25 + 8 * v28) = v29;
        return sub_24013CF84(a1);
      }
      goto LABEL_27;
    }
    goto LABEL_25;
  }
LABEL_29:
  result = sub_240154D00();
  __break(1u);
  return result;
}

void DKConstantAccelerationFilter.__allocating_init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DKConstantAccelerationFilter.init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_240071B08()
{
  return swift_release();
}

uint64_t DKConstantAccelerationFilter.deinit()
{
  uint64_t v0;

  v0 = DKKalmanFilter.deinit();
  swift_release();
  return v0;
}

uint64_t DKConstantAccelerationFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_240071B8C(uint64_t result, uint64_t a2, double a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v4 = v3[2];
  if (v4 > result && ((a2 | result) & 0x8000000000000000) == 0 && v3[3] > a2)
  {
    v5 = a2 * v4;
    if ((unsigned __int128)(a2 * (__int128)v4) >> 64 == (a2 * v4) >> 63)
    {
      if (!__OFADD__(v5, result))
      {
        *(double *)(v3[4] + 8 * (v5 + result)) = a3;
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t sub_240071C28(unint64_t a1, double a2)
{
  uint64_t result;
  double *v4;
  unint64_t v5;
  double v6;
  int64x2_t v7;
  int64x2_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_240154CF4();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x24BEE4AF8];
  result = sub_2401547FC();
  *(_QWORD *)(result + 16) = a1;
  v4 = (double *)(result + 32);
  if (a1 < 4)
  {
    v5 = 0;
    v6 = a2;
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  v4 += a1 & 0xFFFFFFFFFFFFFFFCLL;
  v6 = a2;
  v7 = vdupq_lane_s64(*(uint64_t *)&a2, 0);
  v8 = (int64x2_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_240071D18(unsigned int a1, unint64_t a2)
{
  uint64_t result;
  unsigned int *v5;
  unint64_t v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a2 & 0x8000000000000000) != 0)
  {
    result = sub_240154CF4();
    __break(1u);
    return result;
  }
  if (!a2)
    return MEMORY[0x24BEE4AF8];
  result = sub_2401547FC();
  *(_QWORD *)(result + 16) = a2;
  v5 = (unsigned int *)(result + 32);
  if (a2 < 8)
  {
    v6 = 0;
LABEL_9:
    v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  v6 = a2 & 0xFFFFFFFFFFFFFFF8;
  v5 += a2 & 0xFFFFFFFFFFFFFFF8;
  v7 = vdupq_n_s32(a1);
  v8 = (int32x4_t *)(result + 48);
  v9 = a2 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v6 != a2)
    goto LABEL_9;
  return result;
}

uint64_t sub_240071E00(unint64_t a1, int32x2_t a2)
{
  uint64_t result;
  __int32 *v4;
  unint64_t v5;
  __int32 v6;
  int32x4_t v7;
  int32x4_t *v8;
  unint64_t v9;
  unint64_t v10;

  if ((a1 & 0x8000000000000000) != 0)
  {
    result = sub_240154CF4();
    __break(1u);
    return result;
  }
  if (!a1)
    return MEMORY[0x24BEE4AF8];
  result = sub_2401547FC();
  *(_QWORD *)(result + 16) = a1;
  v4 = (__int32 *)(result + 32);
  if (a1 < 8)
  {
    v5 = 0;
    v6 = a2.i32[0];
LABEL_9:
    v10 = a1 - v5;
    do
    {
      *v4++ = v6;
      --v10;
    }
    while (v10);
    return result;
  }
  v5 = a1 & 0xFFFFFFFFFFFFFFF8;
  v4 += a1 & 0xFFFFFFFFFFFFFFF8;
  v6 = a2.i32[0];
  v7 = vdupq_lane_s32(a2, 0);
  v8 = (int32x4_t *)(result + 48);
  v9 = a1 & 0xFFFFFFFFFFFFFFF8;
  do
  {
    v8[-1] = v7;
    *v8 = v7;
    v8 += 2;
    v9 -= 8;
  }
  while (v9);
  if (v5 != a1)
    goto LABEL_9;
  return result;
}

uint64_t sub_240071EF0(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  _QWORD *v6;
  _QWORD **v7;
  _QWORD *v14;
  char v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t result;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char v24;

  v7 = (_QWORD **)v6;
  v14 = (_QWORD *)*v6;
  v16 = sub_24013EF5C(a5);
  v17 = v14[2];
  v18 = (v15 & 1) == 0;
  result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
  }
  else
  {
    v20 = v15;
    v21 = v14[3];
    if (v21 >= result && (a6 & 1) != 0)
    {
LABEL_7:
      v22 = *v7;
      if ((v20 & 1) != 0)
      {
LABEL_8:
        v23 = v22[7] + 32 * v16;
        *(_QWORD *)v23 = a1;
        *(_BYTE *)(v23 + 8) = a2 & 1;
        *(_QWORD *)(v23 + 16) = a3;
        *(_BYTE *)(v23 + 24) = a4 & 1;
        return result;
      }
      return sub_2400ADC4C(v16, a5, a1, a2 & 1, a3, a4 & 1, v22);
    }
    if (v21 >= result && (a6 & 1) == 0)
    {
      result = (uint64_t)sub_2400ADFD0();
      goto LABEL_7;
    }
    sub_2400AA624(result, a6 & 1);
    result = sub_24013EF5C(a5);
    if ((v20 & 1) == (v24 & 1))
    {
      v16 = result;
      v22 = *v7;
      if ((v20 & 1) != 0)
        goto LABEL_8;
      return sub_2400ADC4C(v16, a5, a1, a2 & 1, a3, a4 & 1, v22);
    }
  }
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_240072048(uint64_t a1, uint64_t a2, char a3)
{
  return sub_240072090(a1, a2, a3, (void (*)(void))sub_2400AE8DC, (void (*)(void))sub_2400AB4DC, type metadata accessor for DKPersonGroupFilter.StampedPerson, (uint64_t (*)(unint64_t, char *, uint64_t, uint64_t))sub_2400ADD4C);
}

uint64_t sub_24007206C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_240072090(a1, a2, a3, (void (*)(void))sub_2400AE8C8, (void (*)(void))sub_2400AB4C8, type metadata accessor for DKPersonGroup, (uint64_t (*)(unint64_t, char *, uint64_t, uint64_t))sub_2400ADD40);
}

uint64_t sub_240072090(uint64_t a1, uint64_t a2, char a3, void (*a4)(void), void (*a5)(void), uint64_t (*a6)(_QWORD), uint64_t (*a7)(unint64_t, char *, uint64_t, uint64_t))
{
  uint64_t *v7;
  uint64_t *v9;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t result;
  unint64_t v29;
  char v30;
  void (*v31)(void);
  uint64_t (*v32)(_QWORD);
  uint64_t (*v33)(unint64_t, char *, uint64_t, uint64_t);
  uint64_t v34;

  v32 = a6;
  v33 = a7;
  v31 = a5;
  v9 = v7;
  v34 = a1;
  v12 = sub_24015434C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *v7;
  v18 = sub_24013F178(a2);
  v19 = *(_QWORD *)(v16 + 16);
  v20 = (v17 & 1) == 0;
  v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  v22 = v17;
  v23 = *(_QWORD *)(v16 + 24);
  if (v23 >= v21 && (a3 & 1) != 0)
  {
LABEL_7:
    v24 = *v9;
    if ((v22 & 1) != 0)
    {
LABEL_8:
      v25 = *(_QWORD *)(v24 + 56);
      v26 = v32;
      v27 = v32(0);
      return sub_240072CAC(v34, v25 + *(_QWORD *)(*(_QWORD *)(v27 - 8) + 72) * v18, v26);
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (a3 & 1) == 0)
  {
    a4();
    goto LABEL_7;
  }
  v31();
  v29 = sub_24013F178(a2);
  if ((v22 & 1) != (v30 & 1))
  {
LABEL_14:
    result = sub_240154F70();
    __break(1u);
    return result;
  }
  v18 = v29;
  v24 = *v9;
  if ((v22 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a2, v12);
  return v33(v18, v15, v34, v24);
}

void sub_240072214(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _QWORD *v4;
  _QWORD **v5;
  _QWORD *v10;
  char v11;
  unint64_t v12;
  uint64_t v13;
  _BOOL8 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  unint64_t v20;
  char v21;

  v5 = (_QWORD **)v4;
  v10 = (_QWORD *)*v4;
  v12 = sub_24013F014(a2, a3);
  v13 = v10[2];
  v14 = (v11 & 1) == 0;
  v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
  }
  else
  {
    v16 = v11;
    v17 = v10[3];
    if (v17 >= v15 && (a4 & 1) != 0)
    {
LABEL_7:
      v18 = *v5;
      if ((v16 & 1) != 0)
      {
LABEL_8:
        v19 = v18[7];

        *(_QWORD *)(v19 + 8 * v12) = a1;
        return;
      }
      goto LABEL_11;
    }
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2400AF0A8();
      goto LABEL_7;
    }
    sub_2400AC114(v15, a4 & 1);
    v20 = sub_24013F014(a2, a3);
    if ((v16 & 1) == (v21 & 1))
    {
      v12 = v20;
      v18 = *v5;
      if ((v16 & 1) != 0)
        goto LABEL_8;
LABEL_11:
      sub_2400ADE10(v12, a2, a3, a1, v18);
      swift_bridgeObjectRetain();
      return;
    }
  }
  sub_240154F70();
  __break(1u);
}

uint64_t sub_240072340(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  unint64_t v20;
  char v21;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_24013EF5C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        v18 = sub_240154310();
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * v10, a1, v18);
      }
      return sub_2400ADE58(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2400AF258();
      goto LABEL_7;
    }
    sub_2400AC420(v13, a3 & 1);
    v20 = sub_24013EF5C(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      v10 = v20;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_2400ADE58(v10, a2, a1, v16);
    }
  }
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_240072464(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  char v17;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_24013EF5C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= result && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        *(_QWORD *)(v16[7] + 8 * v10) = a1;
        return result;
      }
      return sub_2400ADEE4(v10, a2, a1, v16);
    }
    if (v15 >= result && (a3 & 1) == 0)
    {
      result = (uint64_t)sub_2400AF888();
      goto LABEL_7;
    }
    sub_2400ACDE4(result, a3 & 1);
    result = sub_24013EF5C(a2);
    if ((v14 & 1) == (v17 & 1))
    {
      v10 = result;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_2400ADEE4(v10, a2, a1, v16);
    }
  }
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_24007256C(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  unint64_t v19;
  char v20;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v10 = sub_24013EF5C(a2);
  v11 = v8[2];
  v12 = (v9 & 1) == 0;
  v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    v14 = v9;
    v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      v16 = *v4;
      if ((v14 & 1) != 0)
      {
LABEL_8:
        v17 = v16[7];
        result = swift_bridgeObjectRelease();
        *(_QWORD *)(v17 + 8 * v10) = a1;
        return result;
      }
      return sub_2400ADEE4(v10, a2, a1, v16);
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2400AFD58();
      goto LABEL_7;
    }
    sub_2400AD5F8(v13, a3 & 1);
    v19 = sub_24013EF5C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      v10 = v19;
      v16 = *v4;
      if ((v14 & 1) != 0)
        goto LABEL_8;
      return sub_2400ADEE4(v10, a2, a1, v16);
    }
  }
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_240072680(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD **v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t result;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  char v21;
  uint64_t v22;

  v4 = (_QWORD **)v3;
  v8 = sub_24015434C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)*v3;
  v14 = sub_24013F178(a2);
  v15 = v12[2];
  v16 = (v13 & 1) == 0;
  result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  v18 = v13;
  v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    v20 = *v4;
    if ((v18 & 1) != 0)
    {
LABEL_8:
      *(_QWORD *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    result = (uint64_t)sub_2400AFEF8();
    goto LABEL_7;
  }
  sub_2400AD8AC(result, a3 & 1);
  result = sub_24013F178(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    result = sub_240154F70();
    __break(1u);
    return result;
  }
  v14 = result;
  v20 = *v4;
  if ((v18 & 1) != 0)
    goto LABEL_8;
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_2400ADF2C(v14, (uint64_t)v11, a1, v20);
}

uint64_t sub_2400727D0(uint64_t a1)
{
  uint64_t v1;
  int64_t v2;
  uint64_t v4;
  unsigned __int8 *v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_2400E5740(0, v2, 0);
    v4 = v14;
    v5 = (unsigned __int8 *)(a1 + 32);
    v6 = *(_QWORD *)(v14 + 16);
    do
    {
      v8 = *v5++;
      v7 = v8;
      v14 = v4;
      v9 = *(_QWORD *)(v4 + 24);
      v10 = v6 + 1;
      if (v6 >= v9 >> 1)
      {
        sub_2400E5740(v9 > 1, v6 + 1, 1);
        v4 = v14;
      }
      *(_QWORD *)(v4 + 16) = v10;
      *(_QWORD *)(v4 + 8 * v6++ + 32) = v7;
      --v2;
    }
    while (v2);
  }
  else
  {
    v4 = MEMORY[0x24BEE4AF8];
    v10 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
    if (!v10)
      goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v11 = 0;
  do
  {
    v12 = *(_QWORD *)(v4 + 8 * v11++ + 32);
    sub_240084408(&v14, v12);
  }
  while (v10 != v11);
  swift_bridgeObjectRelease();
LABEL_11:
  swift_bridgeObjectRelease();
  return v1;
}

unint64_t sub_2400728EC()
{
  unint64_t result;

  result = qword_256FB4570;
  if (!qword_256FB4570)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKConstantAccelerationFilter.Index, &type metadata for DKConstantAccelerationFilter.Index);
    atomic_store(result, (unint64_t *)&qword_256FB4570);
  }
  return result;
}

unint64_t sub_240072934()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FB4578;
  if (!qword_256FB4578)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB4580);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256FB4578);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24267E0B0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

double sub_2400729C4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 56);
  *a2 = result;
  return result;
}

double sub_2400729D4(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 56) = *a1;
  return result;
}

double sub_2400729E4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 64);
  *a2 = result;
  return result;
}

double sub_2400729F4(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 64) = *a1;
  return result;
}

uint64_t sub_240072A04()
{
  return type metadata accessor for DKConstantAccelerationFilter(0);
}

uint64_t type metadata accessor for DKConstantAccelerationFilter(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FB45B0);
}

uint64_t sub_240072A20()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for DKConstantAccelerationFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.updateQ(row:column:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.getState(index:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.setState(index:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.update(measurement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t sub_240072AA8()
{
  return type metadata accessor for DKConstantAccelerationFilter.Measurement(0);
}

uint64_t type metadata accessor for DKConstantAccelerationFilter.Measurement(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FB4828);
}

uint64_t sub_240072AC4(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240072AF8()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for DKConstantAccelerationFilter.Measurement()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Measurement.__allocating_init(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Measurement.set(index:value:variance:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t storeEnumTagSinglePayload for DKConstantAccelerationFilter.Index(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_240072B98 + 4 * byte_2401562F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_240072BCC + 4 * byte_2401562F0[v4]))();
}

uint64_t sub_240072BCC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240072BD4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240072BDCLL);
  return result;
}

uint64_t sub_240072BE8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240072BF0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_240072BF4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240072BFC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKConstantAccelerationFilter.Index()
{
  return &type metadata for DKConstantAccelerationFilter.Index;
}

uint64_t type metadata accessor for DKConstantAccelerationFilter.Configuration()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKConstantAccelerationFilter.Configuration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.maxPredictionDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.maxPredictionDuration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.maxPredictionDuration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.velocityDecay.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.velocityDecay.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.velocityDecay.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.setAngleIndices(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKConstantAccelerationFilter.Configuration.setLimits(index:min:max:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)v5 + 336))(a1, a2, a3 & 1, a4, a5 & 1);
}

uint64_t sub_240072CAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t DKMatrix.rows.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t DKMatrix.columns.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_240072D00()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_240072D08(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 32) = result;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t DKMatrix.__allocating_init(rows:columns:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  DKMatrix.init(rows:columns:)(a1, a2);
  return v4;
}

uint64_t DKMatrix.init(rows:columns:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  result = a1 * a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 == result >> 63)
  {
    v2[4] = sub_240154A54();
    v2[5] = v5;
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t DKMatrix.__allocating_init(repeating:rows:columns:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;

  v4 = v3;
  swift_allocObject();
  v8 = sub_240075BE4(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v4 + 80) - 8) + 8))(a1);
  return v8;
}

uint64_t DKMatrix.init(repeating:rows:columns:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *v3;
  v6 = sub_240075BE4(a1, a2, a3);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v5 + 80) - 8) + 8))(a1);
  return v6;
}

uint64_t DKMatrix.__allocating_init(rows:columns:array:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  DKMatrix.init(rows:columns:array:)(a1, a2, a3);
  return v6;
}

uint64_t *DKMatrix.init(rows:columns:array:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v6 = *v4;
  v4[2] = a1;
  v4[3] = a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 != (a1 * a2) >> 63)
  {
    __break(1u);
    goto LABEL_16;
  }
  v5 = a3;
  v3 = *(_QWORD *)(v6 + 80);
  v4[4] = sub_240154A54();
  v4[5] = v7;
  if (sub_240154A48())
  {
    swift_bridgeObjectRetain();
    if ((_swift_isClassOrObjCExistentialType() & 1) == 0
      || (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
    {
      swift_bridgeObjectRelease();
      _swift_isClassOrObjCExistentialType();
      goto LABEL_8;
    }
LABEL_16:
    if (MEMORY[0x24267D180](v5, v3))
    {
      v9 = sub_240154BB0();
      MEMORY[0x24267E0BC](MEMORY[0x24BEE2670], v9);
      sub_240154C4C();
      swift_unknownObjectRetain();
      sub_240154E98();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_13:
      sub_240154A24();
      swift_unknownObjectRelease();
      return v4;
    }
    swift_bridgeObjectRelease();
LABEL_8:
    if ((_swift_isClassOrObjCExistentialType() & 1) != 0 && (v5 < 0 || (v5 & 0x4000000000000000) != 0))
    {
      swift_unknownObjectRetain();
    }
    else
    {
      _swift_isClassOrObjCExistentialType();
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t DKMatrix.__allocating_init(rows:columns:buffer:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;

  v6 = sub_240075CAC(a1, a2, a3, a4);
  sub_240075D14(a3, a4);
  return v6;
}

uint64_t DKMatrix.init(rows:columns:buffer:)(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6;

  v6 = sub_240075C34(a1, a2);
  sub_240075D14(a3, a4);
  return v6;
}

uint64_t DKMatrix.deinit()
{
  uint64_t v0;

  sub_240154A3C();
  return v0;
}

uint64_t DKMatrix.__deallocating_deinit()
{
  sub_240154A3C();
  return swift_deallocClassInstance();
}

uint64_t sub_24007317C(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  MEMORY[0x24BDAC7A8](a1);
  v2 = (char *)&v8 - v1;
  v4 = *v3;
  v5 = v3[1];
  (*(void (**)(char *))(v6 + 16))((char *)&v8 - v1);
  return sub_2400732BC((uint64_t)v2, v4, v5);
}

uint64_t sub_240073208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = v3[2];
  if (v4 > a1 && ((a2 | a1) & 0x8000000000000000) == 0 && v3[3] > a2)
  {
    v5 = a2 * v4;
    if ((unsigned __int128)(a2 * (__int128)v4) >> 64 == (a2 * v4) >> 63)
    {
      v6 = v5 + a1;
      if (!__OFADD__(v5, a1))
      {
        v7 = *(_QWORD *)(*(_QWORD *)(*v3 + 80) - 8);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 16))(a3, v3[4] + *(_QWORD *)(v7 + 72) * v6);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t sub_2400732BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = v3[2];
  if (v4 > a2 && ((a3 | a2) & 0x8000000000000000) == 0 && v3[3] > a3)
  {
    v5 = a3 * v4;
    if ((unsigned __int128)(a3 * (__int128)v4) >> 64 == (a3 * v4) >> 63)
    {
      v6 = v5 + a2;
      if (!__OFADD__(v5, a2))
      {
        v7 = *(_QWORD *)(*(_QWORD *)(*v3 + 80) - 8);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 40))(v3[4] + *(_QWORD *)(v7 + 72) * v6, a1);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  result = sub_240154D00();
  __break(1u);
  return result;
}

void (*sub_240073374(_QWORD *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  size_t v10;
  void *v11;

  v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  v7[2] = v3;
  *v7 = a2;
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v7[3] = v8;
  v9 = *(_QWORD *)(v8 - 8);
  v7[4] = v9;
  v10 = *(_QWORD *)(v9 + 64);
  v7[5] = malloc(v10);
  v11 = malloc(v10);
  v7[6] = v11;
  sub_240073208(a2, a3, (uint64_t)v11);
  return sub_240073410;
}

void sub_240073410(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *a1;
  v3 = (void *)(*a1)[5];
  v4 = (void *)(*a1)[6];
  if ((a2 & 1) != 0)
  {
    v5 = v2[3];
    v6 = v2[4];
    v7 = v2[1];
    v8 = *v2;
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_2400732BC((uint64_t)v3, v8, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    sub_2400732BC((*a1)[6], *v2, v2[1]);
  }
  free(v4);
  free(v3);
  free(v2);
}

void static DKMatrix.* infix(_:_:)()
{
  sub_240154D00();
  __break(1u);
}

{
  sub_240154D00();
  __break(1u);
}

void static DKMatrix.+ infix(_:_:)()
{
  sub_240154D00();
  __break(1u);
}

void static DKMatrix.- infix(_:_:)()
{
  sub_240154D00();
  __break(1u);
}

void static DKMatrix./ infix(_:_:)()
{
  sub_240154D00();
  __break(1u);
}

void static DKMatrix.+= infix(_:_:)()
{
  sub_240154D00();
  __break(1u);
}

void static DKMatrix.-= infix(_:_:)()
{
  sub_240154D00();
  __break(1u);
}

uint64_t sub_24007371C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for DKMatrix(0, *(_QWORD *)(*(_QWORD *)v4 + 80), *(_QWORD *)(*(_QWORD *)v4 + 88), a4);
  v5 = swift_retain();
  v9 = sub_240075E68(v5, v6, v7, v8);
  swift_release();
  return v9;
}

BOOL sub_240073768(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;
  BOOL v6;

  if (*(_QWORD *)(v2 + 16) <= a1)
    return 0;
  v3 = *(_QWORD *)(v2 + 24);
  if ((a2 | a1) >= 0)
  {
    v6 = __OFSUB__(v3, a2);
    v4 = v3 == a2;
    v5 = v3 - a2 < 0;
  }
  else
  {
    v6 = 0;
    v4 = 1;
    v5 = 0;
  }
  return !(v5 ^ v6 | v4);
}

uint64_t static DKMatrix.zeros(rows:columns:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = result * a2;
  if ((unsigned __int128)(result * (__int128)a2) >> 64 == (result * a2) >> 63)
  {
    v4 = result;
    v5 = *(_QWORD *)(v2 + 80);
    v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
    result = v3 * v6;
    if ((unsigned __int128)(v3 * (__int128)v6) >> 64 == (v3 * v6) >> 63)
    {
      v8 = sub_2400759E4(result);
      v10 = v9;
      type metadata accessor for DKMatrix(0, v5, *(_QWORD *)(v2 + 88), v11);
      v12 = sub_240075CAC(v4, a2, v8, v10);
      sub_240075D14(v8, v10);
      return v12;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t static DKMatrix.ones(rows:columns:)(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v3 = result * a2;
  if ((unsigned __int128)(result * (__int128)a2) >> 64 == (result * a2) >> 63)
  {
    v4 = result;
    v5 = *(_QWORD *)(v2 + 80);
    v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
    result = v3 * v6;
    if ((unsigned __int128)(v3 * (__int128)v6) >> 64 == (v3 * v6) >> 63)
    {
      v12 = sub_2400759E4(result);
      v13 = v8;
      MEMORY[0x24BDAC7A8](v12);
      v9 = *(_QWORD *)(v2 + 88);
      sub_240074EEC();
      type metadata accessor for DKMatrix(0, v5, v9, v10);
      v11 = sub_240075CAC(v4, a2, v12, v13);
      sub_240075D14(v12, v13);
      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_240073940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v10 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 16) + 16) + 8) + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  if (a1)
  {
    v16 = *(_QWORD *)(v10 + 72);
    if (!v16)
    {
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    if (a2 - a1 == 0x8000000000000000 && v16 == -1)
      goto LABEL_19;
  }
  result = sub_240154A48();
  v22 = result;
  if (!result)
    return result;
  v17 = a3 * a4;
  if ((unsigned __int128)(a3 * (__int128)a4) >> 64 != (a3 * a4) >> 63)
    goto LABEL_16;
  v18 = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v18 < 0)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  swift_getAssociatedConformanceWitness();
  v19 = 0;
  while (1)
  {
    sub_240154F34();
    sub_240154EEC();
    result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 40))(v22 + *(_QWORD *)(v10 + 72) * v19, v12, a5);
    if (v18 == v19)
      break;
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      return result;
    }
  }
  return result;
}

uint64_t static DKMatrix.identity(_:)(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = result * result;
  if ((unsigned __int128)(result * (__int128)result) >> 64 == (result * result) >> 63)
  {
    v3 = result;
    v4 = *(_QWORD *)(v1 + 80);
    v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
    result = v2 * v5;
    if ((unsigned __int128)(v2 * (__int128)v5) >> 64 == (v2 * v5) >> 63)
    {
      v10 = sub_2400759E4(result);
      v11 = v6;
      MEMORY[0x24BDAC7A8](v10);
      v7 = *(_QWORD *)(v1 + 88);
      sub_240074EEC();
      type metadata accessor for DKMatrix(0, v4, v7, v8);
      v9 = sub_240075CAC(v3, v3, v10, v11);
      sub_240075D14(v10, v11);
      return v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_240073C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  int64_t v18;
  uint64_t v19;
  int64_t v20;
  int64_t v21;
  uint64_t v22;
  _BOOL4 v23;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;

  v7 = *(_QWORD *)(a4 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v24[0] = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 16) + 16) + 8) + 16);
  v11 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  result = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  if (a1)
  {
    v13 = *(_QWORD *)(v7 + 72);
    if (!v13)
    {
      __break(1u);
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    if (a2 - a1 == 0x8000000000000000 && v13 == -1)
      goto LABEL_24;
  }
  result = sub_240154A48();
  if (!result)
    return result;
  v14 = a3 * a3;
  if ((unsigned __int128)(a3 * (__int128)a3) >> 64 != (a3 * a3) >> 63)
    goto LABEL_21;
  v15 = a3 + 1;
  if (__OFADD__(a3, 1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (a3 == -1)
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
    return result;
  }
  v16 = v14 >= 0;
  if (v15 > 0)
    v16 = v14 < 1;
  v17 = v24[0];
  v26 = v11;
  if (!v16)
  {
    v18 = a3 * a3;
    v19 = result;
    v24[2] = swift_getAssociatedConformanceWitness();
    v25 = v7;
    v20 = 0;
    do
    {
      if (__OFADD__(v20, v15))
        v21 = ((v20 + v15) >> 63) ^ 0x8000000000000000;
      else
        v21 = v20 + v15;
      sub_240154F34();
      v22 = v26;
      sub_240154EEC();
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 40))(v19 + *(_QWORD *)(v25 + 72) * v20, v17, v22);
      v23 = v18 >= v21;
      if (v15 > 0)
        v23 = v21 >= v18;
      v20 = v21;
    }
    while (!v23);
  }
  return result;
}

uint64_t static DKMatrix.diagonal(_:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = MEMORY[0x24BDAC7A8](a1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *(_QWORD *)(v1 + 16);
  result = static DKMatrix.zeros(rows:columns:)(v4, v4);
  v6 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v6 < 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v7 = result;
  v8 = 0;
  while (1)
  {
    sub_240073208(v8, 0, (uint64_t)v3);
    sub_2400732BC((uint64_t)v3, v8, v8);
    if (v6 == v8)
      break;
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      return v7;
    }
  }
  return v7;
}

uint64_t sub_240073F30(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  uint64_t v15;

  v2 = v1[2];
  v3 = v2 - 1;
  if (__OFSUB__(v2, 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v3 < 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v4 = v1[3];
  v5 = v4 - 1;
  if (__OFSUB__(v4, 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = result;
    v7 = 0;
    v8 = *(_QWORD *)(*v1 + 80);
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(_QWORD *)(v9 + 72);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 24);
    while (1)
    {
      result = v11(v1[4] + v10 * v7, v6, v8);
      if (v5)
        break;
LABEL_11:
      if (v7 == v3)
        return result;
      v14 = __OFADD__(v7++, 1);
      v5 = v4 - 1;
      if (v14)
      {
        __break(1u);
        return result;
      }
    }
    v12 = 1;
    while (1)
    {
      v13 = v12 * v2;
      if ((unsigned __int128)(v12 * (__int128)v2) >> 64 != (v12 * v2) >> 63)
        break;
      v14 = __OFADD__(v13, v7);
      v15 = v13 + v7;
      if (v14)
        goto LABEL_17;
      result = v11(v1[4] + v15 * v10, v6, v8);
      if (v4 == ++v12)
        goto LABEL_11;
    }
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_240074034(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  v3 = *(_QWORD *)(*v1 + 80);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DKMatrix(0, v3, *(_QWORD *)(v7 + 88), v8);
  v9 = v1[2];
  v10 = v1[3];
  v11 = swift_allocObject();
  result = DKMatrix.init(rows:columns:)(v10, v9);
  v19 = v10 - 1;
  if (__OFSUB__(v10, 1))
    goto LABEL_20;
  v13 = v9 - 1;
  if (__OFSUB__(v9, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if ((v13 | v19) < 0)
  {
LABEL_22:
    __break(1u);
    return result;
  }
  v14 = 0;
  while (2)
  {
    v15 = v14 * v9;
    if ((unsigned __int128)(v14 * (__int128)v9) >> 64 != (v14 * v9) >> 63)
    {
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    v16 = 0;
    while (1)
    {
      if (__OFADD__(v15, v16))
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v2[4] + *(_QWORD *)(v4 + 72) * (v15 + v16), v3);
      result = sub_2400732BC((uint64_t)v6, v14, v16);
      if (v13 == v16)
        break;
      v17 = __OFADD__(v16++, 1);
      if (v17)
        goto LABEL_18;
    }
    if (v14 != v19)
    {
      v17 = __OFADD__(v14++, 1);
      if (!v17)
        continue;
      __break(1u);
    }
    return v11;
  }
}

uint64_t DKMatrix<>.inverse()()
{
  return sub_240074A58(&qword_256FB4AD8, (uint64_t (*)(uint64_t))sub_240141A08, (void (*)(int *, uint64_t))sub_240074208);
}

{
  return sub_240074A58(qword_256FB4AE0, (uint64_t (*)(uint64_t))sub_240141EFC, (void (*)(int *, uint64_t))sub_240074B6C);
}

uint64_t sub_240074208(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = sub_240071D18(0, v2);
  v4 = (_QWORD *)sub_240071C28(v2, 0.0);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_240077A74(0, *(_QWORD *)(v3 + 16), 0, (char *)v3);
  dgetrf_NEWLAPACK();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_240077968(0, v4[2], 0, v4);
  dgetri_NEWLAPACK();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t DKMatrix<>.transpose()()
{
  _QWORD *v0;
  int64_t v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  double *v6;
  const double *v7;
  uint64_t result;

  v2 = v0[2];
  v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = v1 * v2;
  if ((unsigned __int128)(v1 * (__int128)v2) >> 64 != (v1 * v2) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v4 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = v3;
  v6 = (double *)swift_slowAlloc();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v4;
  v7 = (const double *)v0[4];
  if (!v7)
    return v5;
  if ((v2 & 0x8000000000000000) == 0 && (v1 & 0x8000000000000000) == 0)
  {
    vDSP_mtransD(v7, 1, v6, 1, v2, v1);
    return v5;
  }
LABEL_10:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

{
  _QWORD *v0;
  int64_t v1;
  int64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  float *v6;
  const float *v7;
  uint64_t result;

  v2 = v0[2];
  v1 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(qword_256FB4AE0);
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  v4 = v1 * v2;
  if ((unsigned __int128)(v1 * (__int128)v2) >> 64 != (v1 * v2) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v4 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v5 = v3;
  v6 = (float *)swift_slowAlloc();
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v4;
  v7 = (const float *)v0[4];
  if (!v7)
    return v5;
  if ((v2 & 0x8000000000000000) == 0 && (v1 & 0x8000000000000000) == 0)
  {
    vDSP_mtrans(v7, 1, v6, 1, v2, v1);
    return v5;
  }
LABEL_10:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t DKMatrix<>.dot(matrix:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  if (*(_QWORD *)(v1 + 32) && *(_QWORD *)(a1 + 32))
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v2 <= 0x7FFFFFFF)
    {
      return cblas_ddot_NEWLAPACK();
    }
    __break(1u);
  }
  result = sub_240154D00();
  __break(1u);
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  if (*(_QWORD *)(v1 + 32) && *(_QWORD *)(a1 + 32))
  {
    v2 = *(_QWORD *)(v1 + 16);
    if (v2 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v2 <= 0x7FFFFFFF)
    {
      return cblas_sdot_NEWLAPACK();
    }
    __break(1u);
  }
  result = sub_240154D00();
  __break(1u);
  return result;
}

void DKMatrix<>.fill(repeating:)(double a1)
{
  _QWORD *v1;
  double *v2;
  uint64_t v3;
  uint64_t v4;
  vDSP_Length v5;
  double __A[2];

  __A[1] = *(double *)MEMORY[0x24BDAC8D0];
  __A[0] = a1;
  v2 = (double *)v1[4];
  if (v2)
  {
    v3 = v1[2];
    v4 = v1[3];
    v5 = v3 * v4;
    if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63)
      __break(1u);
    if ((v5 & 0x8000000000000000) != 0)
    {
      sub_240154CF4();
      __break(1u);
    }
    else
    {
      vDSP_vfillD(__A, v2, 1, v5);
    }
  }
}

uint64_t static DKMatrix<>.* infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = a1[2];
  v5 = a2[3];
  __swift_instantiateConcreteTypeFromMangledName(qword_256FB4AE0);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v5;
  v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)(v7 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = v6;
  v6[4] = swift_slowAlloc();
  v8[5] = v7;
  if (!a1[4] || !a2[4])
    goto LABEL_23;
  if (v4 > 0x7FFFFFFF)
    goto LABEL_16;
  if (v4 < (uint64_t)0xFFFFFFFF80000000 || v5 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_17;
  if (v5 > 0x7FFFFFFF)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v9 = a1[3];
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 > 0x7FFFFFFF)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v10 = a2[2];
  if (v10 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v10 <= 0x7FFFFFFF)
    {
      cblas_sgemm_NEWLAPACK();
      return (uint64_t)v8;
    }
    goto LABEL_22;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t static DKMatrix<>.+ infix(_:_:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float *v9;
  const float *v10;
  const float *v11;
  uint64_t v12;
  vDSP_Length v13;
  uint64_t result;

  v4 = a1[2];
  v5 = *(_QWORD *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(qword_256FB4AE0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v7 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v6;
  v9 = (float *)swift_slowAlloc();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v7;
  v10 = (const float *)a1[4];
  if (!v10)
    goto LABEL_11;
  v11 = *(const float **)(a2 + 32);
  if (!v11)
    goto LABEL_11;
  v12 = a1[3];
  v13 = v4 * v12;
  if ((unsigned __int128)(v4 * (__int128)v12) >> 64 != (v4 * v12) >> 63)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_240154D00();
    __break(1u);
    goto LABEL_12;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    vDSP_vadd(v10, 1, v11, 1, v9, 1, v13);
    return v8;
  }
LABEL_12:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t static DKMatrix<>.- infix(_:_:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const float *v10;
  float *v11;
  const float *v12;
  uint64_t v13;
  vDSP_Length v14;
  uint64_t result;

  v4 = a1[2];
  v5 = *(_QWORD *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(qword_256FB4AE0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v7 - 0x2000000000000000) >> 62 != 3)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v6;
  v9 = swift_slowAlloc();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v7;
  v10 = (const float *)a1[4];
  if (!v10)
    goto LABEL_11;
  v11 = (float *)v9;
  v12 = *(const float **)(a2 + 32);
  if (!v12)
    goto LABEL_11;
  v13 = a1[3];
  v14 = v4 * v13;
  if ((unsigned __int128)(v4 * (__int128)v13) >> 64 != (v4 * v13) >> 63)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_240154D00();
    __break(1u);
    goto LABEL_12;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    vDSP_vsub(v12, 1, v10, 1, v11, 1, v14);
    return v8;
  }
LABEL_12:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_240074A58(uint64_t *a1, uint64_t (*a2)(uint64_t), void (*a3)(int *, uint64_t))
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  int v11;
  uint64_t v12;

  v6 = v3;
  v12 = *MEMORY[0x24BDAC8D0];
  __swift_instantiateConcreteTypeFromMangledName(a1);
  swift_allocObject();
  v7 = swift_retain();
  v8 = a2(v7);
  swift_release();
  if (*(_QWORD *)(v8 + 32))
  {
    v9 = *(_QWORD *)(v6 + 16);
    if (v9 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v9 <= 0x7FFFFFFF)
    {
      v11 = *(_QWORD *)(v6 + 16);
      a3(&v11, v6);
      return v8;
    }
    __break(1u);
  }
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t sub_240074B6C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  int32x2_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = sub_240071D18(0, v2);
  v4.i32[0] = 0;
  v5 = sub_240071E00(v2, v4);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_240077A74(0, *(_QWORD *)(v3 + 16), 0, (char *)v3);
  sgetrf_NEWLAPACK();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    sub_240077B80(0, *(_QWORD *)(v5 + 16), 0, (char *)v5);
  sgetri_NEWLAPACK();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void DKMatrix<>.fill(repeating:)(float a1)
{
  _QWORD *v1;
  float *v2;
  uint64_t v3;
  uint64_t v4;
  vDSP_Length v5;
  float __A;
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  __A = a1;
  v2 = (float *)v1[4];
  if (v2)
  {
    v3 = v1[2];
    v4 = v1[3];
    v5 = v3 * v4;
    if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63)
      __break(1u);
    if ((v5 & 0x8000000000000000) != 0)
    {
      sub_240154CF4();
      __break(1u);
    }
    else
    {
      vDSP_vfill(&__A, v2, 1, v5);
    }
  }
}

void sub_240074EEC()
{
  __asm { BR              X12 }
}

uint64_t sub_240074F4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *, char *);
  _QWORD *v3;
  uint64_t result;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned __int8 v8;
  unsigned __int8 v9;
  unsigned __int8 v10;

  v6 = v1;
  LOWORD(v7) = a1;
  BYTE2(v7) = BYTE2(a1);
  HIBYTE(v7) = BYTE3(a1);
  v8 = BYTE4(a1);
  v9 = BYTE5(a1);
  v10 = BYTE6(a1);
  result = v2(&v6, (char *)&v6 + BYTE6(a1));
  v5 = v7 | ((unint64_t)v8 << 32) | ((unint64_t)v9 << 40) | ((unint64_t)v10 << 48);
  *v3 = v6;
  v3[1] = v5;
  return result;
}

void sub_240075120()
{
  __asm { BR              X11 }
}

_QWORD *sub_240075180@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

uint64_t sub_240075410(uint64_t (*a1)(uint64_t, uint64_t))
{
  int *v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  result = sub_2401541FC();
  v4 = *v1;
  v5 = v1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = sub_2401540D0();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v6 = result;
  result = sub_2401540F4();
  v7 = v4 - result;
  if (__OFSUB__(v4, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v5 - v4;
  v9 = sub_2401540E8();
  if (v9 >= v8)
    v10 = v8;
  else
    v10 = v9;
  return a1(v6 + v7, v6 + v7 + v10);
}

char *sub_2400754B8(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_2401540D0();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_2401540F4();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_2401540E8();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v4 = a1[2];
  v5 = a2[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  v6 = (_QWORD *)swift_allocObject();
  v6[2] = v4;
  v6[3] = v5;
  v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_15;
  }
  if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v8 = v6;
  v6[4] = swift_slowAlloc();
  v8[5] = v7;
  if (!a1[4] || !a2[4])
    goto LABEL_23;
  if (v4 > 0x7FFFFFFF)
    goto LABEL_16;
  if (v4 < (uint64_t)0xFFFFFFFF80000000 || v5 < (uint64_t)0xFFFFFFFF80000000)
    goto LABEL_17;
  if (v5 > 0x7FFFFFFF)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v9 = a1[3];
  if (v9 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 > 0x7FFFFFFF)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v10 = a2[2];
  if (v10 >= (uint64_t)0xFFFFFFFF80000000)
  {
    if (v10 <= 0x7FFFFFFF)
    {
      cblas_dgemm_NEWLAPACK();
      return (uint64_t)v8;
    }
    goto LABEL_22;
  }
LABEL_21:
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1moiyACySdGSd_AEtFZ_0(_QWORD *a1, double a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  const double *v10;
  uint64_t result;
  double __B[2];

  __B[1] = *(double *)MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  v5 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7)
    goto LABEL_7;
  v8 = v6;
  v9 = (double *)swift_slowAlloc();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v7;
  v10 = (const double *)a1[4];
  if (v10)
  {
    __B[0] = a2;
    if ((v7 & 0x8000000000000000) == 0)
    {
      vDSP_vsmulD(v10, 1, __B, v9, 1, v4 * v5);
      return v8;
    }
  }
  else
  {
    sub_240154D00();
    __break(1u);
  }
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1poiyACySdGAE_AEtFZ_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  const double *v10;
  const double *v11;
  uint64_t v12;
  vDSP_Length v13;
  uint64_t result;

  v4 = a1[2];
  v5 = *(_QWORD *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v6;
  v9 = (double *)swift_slowAlloc();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v7;
  v10 = (const double *)a1[4];
  if (!v10)
    goto LABEL_11;
  v11 = *(const double **)(a2 + 32);
  if (!v11)
    goto LABEL_11;
  v12 = a1[3];
  v13 = v4 * v12;
  if ((unsigned __int128)(v4 * (__int128)v12) >> 64 != (v4 * v12) >> 63)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_240154D00();
    __break(1u);
    goto LABEL_12;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    vDSP_vaddD(v10, 1, v11, 1, v9, 1, v13);
    return v8;
  }
LABEL_12:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_2400759E4(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_240154100();
      swift_allocObject();
      sub_2401540DC();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_240154208();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASdRszrlE1soiyACySdGAE_AEtFZ_0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const double *v10;
  double *v11;
  const double *v12;
  uint64_t v13;
  vDSP_Length v14;
  uint64_t result;

  v4 = a1[2];
  v5 = *(_QWORD *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((unint64_t)(v7 - 0x1000000000000000) >> 61 != 7)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v8 = v6;
  v9 = swift_slowAlloc();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v7;
  v10 = (const double *)a1[4];
  if (!v10)
    goto LABEL_11;
  v11 = (double *)v9;
  v12 = *(const double **)(a2 + 32);
  if (!v12)
    goto LABEL_11;
  v13 = a1[3];
  v14 = v4 * v13;
  if ((unsigned __int128)(v4 * (__int128)v13) >> 64 != (v4 * v13) >> 63)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    sub_240154D00();
    __break(1u);
    goto LABEL_12;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    vDSP_vsubD(v12, 1, v10, 1, v11, 1, v14);
    return v8;
  }
LABEL_12:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_240075BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t result;
  uint64_t v6;

  v3[2] = a2;
  v3[3] = a3;
  result = a2 * a3;
  if ((unsigned __int128)(a2 * (__int128)a3) >> 64 == (a2 * a3) >> 63)
  {
    v3[4] = sub_240154A54();
    v3[5] = v6;
    sub_240073F30(a1);
    return (uint64_t)v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240075C34(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;
  uint64_t v5;

  v2[2] = a1;
  v2[3] = a2;
  result = a1 * a2;
  if ((unsigned __int128)(a1 * (__int128)a2) >> 64 == result >> 63)
  {
    v2[4] = sub_240154A54();
    v2[5] = v5;
    sub_240154268();
    return (uint64_t)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240075CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for DKMatrix(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  swift_allocObject();
  return sub_240075C34(a1, a2);
}

uint64_t sub_240075D14(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for DKMatrix(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DKMatrix);
}

uint64_t sub_240075D64(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  const void *v8;
  void *v9;
  BOOL v10;
  uint64_t v11;
  size_t v12;
  uint64_t result;

  v2 = *v1;
  v3 = *(_QWORD *)(a1 + 16);
  v1[2] = v3;
  v4 = *(_QWORD *)(a1 + 24);
  v1[3] = v4;
  v5 = v3 * v4;
  if ((unsigned __int128)(v3 * (__int128)v4) >> 64 != (v3 * v4) >> 63)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v6 = *(_QWORD *)(v2 + 80);
  v1[4] = sub_240154A54();
  v1[5] = v7;
  v8 = (const void *)sub_240154A48();
  v9 = (void *)sub_240154A48();
  if (v9)
    v10 = v8 == 0;
  else
    v10 = 1;
  if (v10)
    return (uint64_t)v1;
  v11 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v12 = v5 * v11;
  if ((unsigned __int128)(v5 * (__int128)v11) >> 64 != (v5 * v11) >> 63)
    goto LABEL_11;
  if ((v12 & 0x8000000000000000) == 0)
  {
    memmove(v9, v8, v12);
    return (uint64_t)v1;
  }
LABEL_12:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_240075E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for DKMatrix(0, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  swift_allocObject();
  return sub_240075D64(a1);
}

uint64_t sub_240075EA8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  return sub_240073940(a1, a2, v2[4], v2[5], v2[2]);
}

uint64_t sub_240075EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_240073C20(a1, a2, *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 16));
}

uint64_t _s23IntelligentTrackingCore8DKMatrixCAASfRszrlE1moiyACySfGSf_AEtFZ_0(_QWORD *a1, float a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  float *v9;
  const float *v10;
  uint64_t result;
  float __B;
  uint64_t v13;

  v13 = *MEMORY[0x24BDAC8D0];
  v4 = a1[2];
  v5 = a1[3];
  __swift_instantiateConcreteTypeFromMangledName(qword_256FB4AE0);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v4;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = v4 * v5;
  if ((unsigned __int128)(v4 * (__int128)v5) >> 64 != (v4 * v5) >> 63)
  {
    __break(1u);
LABEL_7:
    __break(1u);
  }
  if ((unint64_t)(v7 - 0x2000000000000000) >> 62 != 3)
    goto LABEL_7;
  v8 = v6;
  v9 = (float *)swift_slowAlloc();
  *(_QWORD *)(v8 + 32) = v9;
  *(_QWORD *)(v8 + 40) = v7;
  v10 = (const float *)a1[4];
  if (v10)
  {
    __B = a2;
    if ((v7 & 0x8000000000000000) == 0)
    {
      vDSP_vsmul(v10, 1, &__B, v9, 1, v4 * v5);
      return v8;
    }
  }
  else
  {
    sub_240154D00();
    __break(1u);
  }
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_24007605C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_240072D00();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_240076084(uint64_t *a1)
{
  return sub_240072D08(*a1, a1[1]);
}

uint64_t sub_2400760B0()
{
  return 16;
}

__n128 sub_2400760BC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2400760C8@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_240073208(*a1, a1[1], a2);
}

uint64_t sub_2400760F0()
{
  return 16;
}

__n128 sub_2400760FC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24007610C()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for DKMatrix()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKMatrix.buffer.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKMatrix.__allocating_init(rows:columns:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKMatrix.__allocating_init(repeating:rows:columns:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DKMatrix.__allocating_init(rows:columns:array:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of DKMatrix.__allocating_init(rows:columns:buffer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of DKMatrix.subscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKMatrix.subscript.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKMatrix.subscript.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKMatrix.copy()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKMatrix.fill(repeating:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKMatrix.transpose()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24267E050](a1, v6, a5);
}

double sub_240076208(double a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double MinX;
  double v11;
  double v12;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;

  v14.origin.x = a2;
  v14.origin.y = a3;
  v14.size.width = a4;
  v14.size.height = a5;
  MinX = CGRectGetMinX(v14);
  v15.origin.x = a2;
  v15.origin.y = a3;
  v15.size.width = a4;
  v15.size.height = a5;
  v11 = fmin(MinX - CGRectGetWidth(v15) * a1 * 0.5, 1.0);
  if (v11 < 0.0)
    v12 = 0.0;
  else
    v12 = v11;
  v16.origin.x = a2;
  v16.origin.y = a3;
  v16.size.width = a4;
  v16.size.height = a5;
  CGRectGetMinY(v16);
  v17.origin.x = a2;
  v17.origin.y = a3;
  v17.size.width = a4;
  v17.size.height = a5;
  CGRectGetHeight(v17);
  v18.origin.x = a2;
  v18.origin.y = a3;
  v18.size.width = a4;
  v18.size.height = a5;
  CGRectGetWidth(v18);
  v19.origin.x = a2;
  v19.origin.y = a3;
  v19.size.width = a4;
  v19.size.height = a5;
  CGRectGetHeight(v19);
  return v12;
}

double CGRect.area.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double Width;
  CGRect v10;

  Width = CGRectGetWidth(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  return Width * CGRectGetHeight(v10);
}

double CGRect.center.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double MidX;
  CGRect v10;

  MidX = CGRectGetMidX(*(CGRect *)&a1);
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetMidY(v10);
  return MidX;
}

CGFloat CGRect.bottomRight.getter(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  CGFloat v8;
  CGRect v10;

  v8 = CGRectGetWidth(*(CGRect *)&a1) + a1;
  v10.origin.x = a1;
  v10.origin.y = a2;
  v10.size.width = a3;
  v10.size.height = a4;
  CGRectGetHeight(v10);
  return v8;
}

__C::CGRect __swiftcall CGRect.init(topLeft:bottomRight:)(CGPoint topLeft, CGPoint bottomRight)
{
  double v2;
  double v3;
  __C::CGRect result;

  v2 = bottomRight.x - topLeft.x;
  v3 = bottomRight.y - topLeft.y;
  result.origin.y = topLeft.y;
  result.origin.x = topLeft.x;
  result.size.height = v3;
  result.size.width = v2;
  return result;
}

Swift::Double __swiftcall CGRect.iouGeneralized(rect2:)(__C::CGRect rect2)
{
  double v1;
  double v2;
  double v3;
  double v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  double v13;
  double v14;
  double v15;
  double v16;
  CGFloat v17;
  CGFloat v18;
  double v19;
  double v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat v24;
  CGFloat v25;
  CGFloat v26;
  CGFloat v27;
  double v28;
  double v29;
  CGFloat v31;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat r1;
  CGFloat x;
  double v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;
  CGRect v47;

  v5 = v4;
  height = rect2.size.height;
  r1 = v4;
  v6 = v3;
  v7 = v2;
  v8 = v1;
  y = rect2.origin.y;
  width = rect2.size.width;
  x = rect2.origin.x;
  v38.origin.x = v8;
  v38.origin.y = v7;
  v38.size.width = v6;
  v38.size.height = v5;
  v39 = CGRectIntersection(v38, (CGRect)rect2);
  v9 = v39.origin.x;
  v10 = v39.origin.y;
  v11 = v39.size.width;
  v12 = v39.size.height;
  v13 = CGRectGetWidth(v39);
  v40.origin.x = v9;
  v40.origin.y = v10;
  v40.size.width = v11;
  v40.size.height = v12;
  v37 = v13 * CGRectGetHeight(v40);
  v41.origin.x = v8;
  v31 = v7;
  v41.origin.y = v7;
  v41.size.width = v6;
  v41.size.height = r1;
  v14 = CGRectGetWidth(v41);
  v42.origin.x = v8;
  v42.origin.y = v7;
  v42.size.width = v6;
  v42.size.height = r1;
  v15 = v14 * CGRectGetHeight(v42);
  v43.origin.x = x;
  v43.origin.y = y;
  v43.size.width = width;
  v43.size.height = height;
  v16 = CGRectGetWidth(v43);
  v44.origin.x = x;
  v44.origin.y = y;
  v44.size.width = width;
  v44.size.height = height;
  v17 = CGRectGetHeight(v44);
  v18 = x;
  v19 = v15 + v16 * v17 - v37;
  if (v19 > 2.22044605e-16)
    v20 = v19;
  else
    v20 = 2.22044605e-16;
  v45.origin.x = v8;
  v45.origin.y = v31;
  v45.size.width = v6;
  v45.size.height = r1;
  v21 = y;
  v22 = width;
  v23 = height;
  v46 = CGRectUnion(v45, *(CGRect *)&v18);
  v24 = v46.origin.x;
  v25 = v46.origin.y;
  v26 = v46.size.width;
  v27 = v46.size.height;
  v28 = CGRectGetWidth(v46);
  v47.origin.x = v24;
  v47.origin.y = v25;
  v47.size.width = v26;
  v47.size.height = v27;
  v29 = v28 * CGRectGetHeight(v47);
  if (v29 <= 2.22044605e-16)
    v29 = 2.22044605e-16;
  return v37 / v20 - (v29 - v20) / v29;
}

Swift::Double __swiftcall CGRect.minSizeNormalizedDistance(rect2:)(__C::CGRect rect2)
{
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat height;
  CGFloat width;
  CGFloat v10;
  CGFloat x;
  double v12;
  double v13;
  double v14;
  double v15;
  double MidX;
  CGFloat v17;
  double MidY;
  CGFloat v19;
  CGFloat y;
  CGFloat v22;
  double v23;
  double v24;
  double v25;
  CGFloat v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;

  v26 = v4;
  v5 = v3;
  v6 = v2;
  v7 = v1;
  height = rect2.size.height;
  y = rect2.origin.y;
  v22 = rect2.size.height;
  width = rect2.size.width;
  v10 = rect2.origin.y;
  x = rect2.origin.x;
  v27.origin.x = v1;
  v27.origin.y = v2;
  v27.size.width = v3;
  v27.size.height = v4;
  v12 = CGRectGetWidth(v27);
  v28.origin.x = x;
  v28.origin.y = v10;
  v28.size.width = width;
  v28.size.height = height;
  v13 = CGRectGetWidth(v28);
  if (v13 >= v12)
    v13 = v12;
  v24 = fmax(v13, 0.01);
  v29.origin.x = v7;
  v29.origin.y = v6;
  v29.size.width = v5;
  v29.size.height = v26;
  v14 = CGRectGetHeight(v29);
  v30.origin.x = x;
  v30.origin.y = y;
  v30.size.width = width;
  v30.size.height = v22;
  v15 = CGRectGetHeight(v30);
  if (v15 >= v14)
    v15 = v14;
  v23 = fmax(v15, 0.01);
  v31.origin.x = v7;
  v31.origin.y = v6;
  v31.size.width = v5;
  v31.size.height = v26;
  MidX = CGRectGetMidX(v31);
  v32.origin.x = x;
  v32.origin.y = y;
  v32.size.width = width;
  v32.size.height = v22;
  v17 = CGRectGetMidX(v32);
  v33.size.height = v26;
  v25 = (MidX - v17) / v24;
  v33.origin.x = v7;
  v33.origin.y = v6;
  v33.size.width = v5;
  MidY = CGRectGetMidY(v33);
  v34.origin.x = x;
  v34.origin.y = y;
  v34.size.width = width;
  v34.size.height = v22;
  v19 = CGRectGetMidY(v34);
  return sqrt(v25 * v25 + (MidY - v19) / v23 * ((MidY - v19) / v23));
}

double static CGPoint.+ infix(_:_:)(double a1, double a2, double a3)
{
  return a1 + a3;
}

double static CGPoint.- infix(_:_:)(double a1, double a2, double a3)
{
  return a1 - a3;
}

CGPoint __swiftcall CGPoint.mirrored(xAxis:yAxis:)(Swift::Bool xAxis, Swift::Bool yAxis)
{
  double v2;
  double v3;
  CGPoint result;

  if (xAxis)
    v2 = 1.0 - v2;
  if (yAxis)
    v3 = 1.0 - v3;
  result.y = v3;
  result.x = v2;
  return result;
}

uint64_t sub_2400767D4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double *v10;
  uint64_t v11;
  double v12;
  double v13;
  double v14;
  double *v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double *v20;
  uint64_t v21;
  double v22;
  double v23;
  double *v24;
  double v25;
  double v26;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = *(double *)(result + 32);
    v4 = v2 - 1;
    if (v2 == 1)
    {
      v5 = *(double *)(result + 40);
      v6 = v5;
      v7 = *(double *)(result + 32);
    }
    else
    {
      v10 = (double *)(result + 48);
      v11 = v2 - 1;
      v7 = *(double *)(result + 32);
      v12 = v7;
      do
      {
        v13 = *v10;
        v10 += 2;
        v14 = v13;
        if (v13 < v12)
        {
          v7 = v14;
          v12 = v14;
        }
        --v11;
      }
      while (v11);
      v5 = *(double *)(result + 40);
      v15 = (double *)(result + 56);
      v16 = v2 - 1;
      v6 = v5;
      v17 = v5;
      do
      {
        v18 = *v15;
        v15 += 2;
        v19 = v18;
        if (v18 < v17)
        {
          v6 = v19;
          v17 = v19;
        }
        --v16;
      }
      while (v16);
      v20 = (double *)(result + 48);
      v21 = v2 - 1;
      do
      {
        v22 = *v20;
        v20 += 2;
        v23 = v22;
        if (v3 < v22)
          v3 = v23;
        --v21;
      }
      while (v21);
      v24 = (double *)(result + 56);
      do
      {
        v25 = *v24;
        v24 += 2;
        v26 = v25;
        if (v5 < v25)
          v5 = v26;
        --v4;
      }
      while (v4);
    }
    v8 = v3 - v7;
    v9 = v5 - v6;
  }
  else
  {
    v7 = 0.0;
    v6 = 0.0;
    v8 = 0.0;
    v9 = 0.0;
  }
  *(double *)a2 = v7;
  *(double *)(a2 + 8) = v6;
  *(double *)(a2 + 16) = v8;
  *(double *)(a2 + 24) = v9;
  *(_BYTE *)(a2 + 32) = v2 == 0;
  return result;
}

double Array<A>.average()(uint64_t a1)
{
  return (double)*(uint64_t *)(a1 + 16);
}

uint64_t sub_2400768D0(uint64_t a1, uint64_t a2)
{
  CGImage *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  float v16;
  uint64_t inited;
  void *v18;
  id v19;
  void *v20;
  CFMutableDataRef Mutable;
  __CFData *v22;
  CGImage *v23;
  __CFString *v24;
  CGImageDestination *v25;
  CGImage *v26;
  CFDictionaryRef v27;
  __CFData *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  CFDictionaryRef v37;
  char *v38;
  __int128 v39;

  v5 = sub_24015449C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2401541D8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240076FB0(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_240076FF8((uint64_t)v11);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  v16 = (float)a2 / 100.0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB8);
  inited = swift_initStackObject();
  v39 = xmmword_240156510;
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  v18 = (void *)*MEMORY[0x24BDD9220];
  *(_QWORD *)(inited + 32) = *MEMORY[0x24BDD9220];
  *(float *)(inited + 40) = v16;
  v19 = v18;
  sub_240105D28(inited);
  type metadata accessor for CFString(0);
  sub_240077038();
  v20 = (void *)sub_240154544();
  swift_bridgeObjectRelease();
  Mutable = CFDataCreateMutable((CFAllocatorRef)*MEMORY[0x24BDBD240], 0);
  if (!Mutable)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC0);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = v39;
    *(_QWORD *)(v33 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v33 + 32) = 0xD000000000000014;
    *(_QWORD *)(v33 + 40) = 0x8000000240161BD0;
    sub_240154FD0();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return 0;
  }
  v22 = Mutable;
  v37 = (CFDictionaryRef)v20;
  v38 = v15;
  v23 = v2;
  sub_240154478();
  sub_24015446C();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v24 = (__CFString *)sub_240154628();
  swift_bridgeObjectRelease();
  v25 = CGImageDestinationCreateWithData(v22, v24, 1uLL, 0);

  if (!v25)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC0);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v39;
    *(_QWORD *)(v34 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v34 + 32) = 0xD000000000000020;
    *(_QWORD *)(v34 + 40) = 0x8000000240161BF0;
    sub_240154FD0();

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);
    return 0;
  }
  v26 = v23;
  v27 = v37;
  CGImageDestinationAddImage(v25, v26, v37);
  if (!CGImageDestinationFinalize(v25))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v38, v12);

    return 0;
  }
  v28 = v22;
  v29 = sub_240154250();
  v31 = v30;

  v32 = v38;
  sub_24015425C();
  sub_240075D14(v29, v31);
  v36 = sub_24015416C();

  (*(void (**)(char *, uint64_t))(v13 + 8))(v32, v12);
  return v36;
}

int64_t sub_240076D20(__CVBuffer *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t Width;
  int64_t result;
  int32x2_t v11;
  unint64_t v12;
  uint64_t v13;
  char **v14;
  int32x2_t v15;
  uint64_t v16;
  char **v17;
  int32x2_t v18;
  uint64_t v19;
  char **v20;

  v6 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time;
  v7 = sub_240154310();
  v8 = *(_QWORD *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  Width = CVPixelBufferGetWidth(a1);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_width) = Width;
  result = CVPixelBufferGetHeight(a1);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_height) = result;
  v12 = Width * result;
  if ((unsigned __int128)(Width * (__int128)result) >> 64 == (Width * result) >> 63)
  {
    v11.i32[0] = 0;
    v13 = sub_240071E00(Width * result, v11);
    v14 = (char **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_redBuffer);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_redBuffer) = v13;
    v15.i32[0] = 0;
    v16 = sub_240071E00(v12, v15);
    v17 = (char **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_greenBuffer);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_greenBuffer) = v16;
    v18.i32[0] = 0;
    v19 = sub_240071E00(v12, v18);
    v20 = (char **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_blueBuffer);
    *v20 = (char *)v19;
    sub_2400B4BDC(a1, v14, v17, v20);
    if (v3)
      swift_release();

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a2, v7);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240076E60()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKImageRGBBufferStamped_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_240076EE0()
{
  return type metadata accessor for DKImageRGBBufferStamped();
}

uint64_t type metadata accessor for DKImageRGBBufferStamped()
{
  uint64_t result;

  result = qword_256FB4B90;
  if (!qword_256FB4B90)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240076F24()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_240076FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240076FF8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240077038()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FB4488;
  if (!qword_256FB4488)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x24267E0BC](&unk_24015625C, v1);
    atomic_store(result, (unint64_t *)&qword_256FB4488);
  }
  return result;
}

uint64_t DKStatisticsFilter.__allocating_init(maxNumElements:)(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_allocObject();
  *(_QWORD *)(result + 32) = 0;
  v3 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(result + 40) = 1;
  *(_QWORD *)(result + 48) = v3;
  *(_QWORD *)(result + 56) = v3;
  *(_QWORD *)(result + 16) = a1;
  *(_BYTE *)(result + 24) = 0;
  return result;
}

uint64_t DKStatisticsFilter.init(maxNumElements:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 32) = 0;
  v2 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v1 + 40) = 1;
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 16) = a1;
  *(_BYTE *)(v1 + 24) = 0;
  return v1;
}

uint64_t DKStatisticsFilter.__allocating_init(maxTimeInterval:)(double a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  v3 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(result + 24) = 1;
  *(_QWORD *)(result + 48) = v3;
  *(_QWORD *)(result + 56) = v3;
  *(double *)(result + 32) = a1;
  *(_BYTE *)(result + 40) = 0;
  return result;
}

uint64_t DKStatisticsFilter.init(maxTimeInterval:)(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = v1;
  *(_QWORD *)(v1 + 16) = 0;
  v3 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 48) = v3;
  *(_QWORD *)(v1 + 56) = v3;
  *(double *)(v1 + 32) = a1;
  *(_BYTE *)(v1 + 40) = 0;
  return result;
}

uint64_t sub_240077168()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  if (*(_QWORD *)(v1 + 16))
    return *(_QWORD *)(v1 + 32);
  else
    return 0;
}

uint64_t sub_24007718C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
    return *(_QWORD *)(v1 + 8 * v2 + 24);
  else
    return 0;
}

uint64_t sub_2400771B4(double a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  _QWORD *v17;
  uint64_t result;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v29)(char *, uint64_t, uint64_t);
  double v30;
  int64_t v31;
  uint64_t v32;
  void (*v33)(unint64_t, char *, uint64_t);
  unint64_t v34;
  char *v35;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v32 - v8;
  v10 = sub_240154310();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v35 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v32 - v14;
  v16 = v2 + 48;
  v17 = (_QWORD *)*((_QWORD *)v2 + 6);
  result = swift_isUniquelyReferenced_nonNull_native();
  *((_QWORD *)v2 + 6) = v17;
  if ((result & 1) == 0)
    goto LABEL_37;
  while (1)
  {
    v20 = v17[2];
    v19 = v17[3];
    if (v20 >= v19 >> 1)
    {
      result = (uint64_t)sub_240077968((_QWORD *)(v19 > 1), v20 + 1, 1, v17);
      v17 = (_QWORD *)result;
    }
    v17[2] = v20 + 1;
    *(double *)&v17[v20 + 4] = a1;
    *((_QWORD *)v2 + 6) = v17;
    if ((v2[24] & 1) != 0)
      break;
    v15 = (char *)*((_QWORD *)v2 + 2);
    if ((uint64_t)v15 > (uint64_t)v20)
      return result;
    while (1)
    {
      v31 = v17[2];
      if (!v31)
        break;
      *(_QWORD *)v16 = v17;
      if ((unint64_t)(v31 - 1) > v17[3] >> 1)
      {
        v17 = sub_240077968((_QWORD *)1, v31, 1, v17);
        *(_QWORD *)v16 = v17;
        v2 = (char *)v17[2];
        if (!v2)
        {
LABEL_27:
          sub_240154D60();
          __break(1u);
          goto LABEL_28;
        }
      }
      else
      {
        v2 = (char *)v17[2];
        if (!v2)
          goto LABEL_27;
      }
      result = (uint64_t)memmove(v17 + 4, v17 + 5, 8 * (_QWORD)v2 - 8);
      v17[2] = v2 - 1;
      *(_QWORD *)v16 = v17;
      if ((uint64_t)v15 >= (uint64_t)(v2 - 1))
        return result;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    result = (uint64_t)sub_240077968(0, v17[2] + 1, 1, v17);
    v17 = (_QWORD *)result;
    *(_QWORD *)v16 = result;
  }
  if ((v2[40] & 1) == 0)
  {
    a1 = *((double *)v2 + 4);
    sub_240154304();
    v22 = *((_QWORD *)v2 + 7);
    v2 += 56;
    v21 = v22;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)v2 = v22;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v21 = sub_240077CA0(0, *(_QWORD *)(v21 + 16) + 1, 1, v21, &qword_256FB4F90, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
      *(_QWORD *)v2 = v21;
    }
    v25 = *(_QWORD *)(v21 + 16);
    v24 = *(_QWORD *)(v21 + 24);
    if (v25 >= v24 >> 1)
    {
      v21 = sub_240077CA0(v24 > 1, v25 + 1, 1, v21, &qword_256FB4F90, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
      *(_QWORD *)v2 = v21;
    }
    *(_QWORD *)(v21 + 16) = v25 + 1;
    v34 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v26 = v21 + v34 + *(_QWORD *)(v11 + 72) * v25;
    v33 = *(void (**)(unint64_t, char *, uint64_t))(v11 + 32);
    v33(v26, v15, v10);
    v27 = *(_QWORD *)v2;
    if (*(_QWORD *)(*(_QWORD *)v2 + 16))
    {
      v17 = *(_QWORD **)(v11 + 16);
      while (1)
      {
        ((void (*)(char *, unint64_t, uint64_t))v17)(v9, v27 + v34, v10);
        v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
        v28(v9, 0, 1, v10);
        v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
        if (v29(v9, 1, v10) == 1)
          break;
        v15 = v35;
        v33((unint64_t)v35, v9, v10);
        sub_2401542D4();
        if (a1 >= fabs(v30))
          return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v35, v10);
        if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
          goto LABEL_34;
        ((void (*)(char *, unint64_t, uint64_t))v17)(v6, *(_QWORD *)v2 + v34, v10);
        v28(v6, 0, 1, v10);
        result = ((uint64_t (*)(char *, uint64_t, uint64_t))v29)(v6, 1, v10);
        if ((_DWORD)result == 1)
        {
          __break(1u);
          return result;
        }
        sub_240077EAC((uint64_t)v6);
        if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
          goto LABEL_35;
        v15 = v2;
        sub_240079B70(0, 1);
        if (!*(_QWORD *)(*(_QWORD *)v16 + 16))
          goto LABEL_36;
        sub_240079D28(0, 1);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v35, v10);
        v27 = *(_QWORD *)v2;
        if (!*(_QWORD *)(*(_QWORD *)v2 + 16))
          goto LABEL_29;
      }
    }
    else
    {
LABEL_28:
      v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
LABEL_29:
      v28(v9, 1, 1, v10);
    }
    return sub_240077EAC((uint64_t)v9);
  }
  return result;
}

uint64_t sub_240077648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double *v5;
  double v6;
  double v7;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = *(double *)(v1 + 32);
  v4 = v2 - 1;
  if (v2 != 1)
  {
    v5 = (double *)(v1 + 40);
    do
    {
      v6 = *v5++;
      v7 = v6;
      if (v3 < v6)
        v3 = v7;
      --v4;
    }
    while (v4);
  }
  return *(_QWORD *)&v3;
}

uint64_t sub_240077690()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  double *v5;
  double v6;
  double v7;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    return 0;
  v3 = *(double *)(v1 + 32);
  v4 = v2 - 1;
  if (v2 != 1)
  {
    v5 = (double *)(v1 + 40);
    do
    {
      v6 = *v5++;
      v7 = v6;
      if (v6 < v3)
        v3 = v7;
      --v4;
    }
    while (v4);
  }
  return *(_QWORD *)&v3;
}

uint64_t sub_2400776D8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v4 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain_n();
  sub_240078F48(&v4);
  swift_bridgeObjectRelease();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + 16) >> 1;
  if (v1 >= *(_QWORD *)(v4 + 16))
  {
    __break(1u);
    result = swift_release();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v4 + 8 * v1 + 32);
    swift_release();
    return v2;
  }
  return result;
}

double sub_24007776C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  double *v5;
  uint64_t v6;
  uint64_t v7;
  double *v8;
  double v9;

  v1 = *(_QWORD *)(v0 + 48);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    v4 = 0.0;
    return v4 / (double)v2;
  }
  if (v2 == 1)
  {
    v3 = 0;
    v4 = 0.0;
LABEL_8:
    v7 = v2 - v3;
    v8 = (double *)(v1 + 8 * v3 + 32);
    do
    {
      v9 = *v8++;
      v4 = v4 + v9;
      --v7;
    }
    while (v7);
    return v4 / (double)v2;
  }
  v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
  v5 = (double *)(v1 + 40);
  v4 = 0.0;
  v6 = v2 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    v4 = v4 + *(v5 - 1) + *v5;
    v5 += 2;
    v6 -= 2;
  }
  while (v6);
  if (v2 != v3)
    goto LABEL_8;
  return v4 / (double)v2;
}

uint64_t DKStatisticsFilter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKStatisticsFilter.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_240077844(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240077CA0(a1, a2, a3, a4, &qword_256FB4ED8, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

char *sub_240077858(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F68);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 3);
      v12 = v10 + 32;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 32])
          memmove(v12, a4 + 32, 3 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v12 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2400798AC(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_240077968(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_240079994(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_240077A74(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F98);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_240079A88(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_240077B80(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = *((_QWORD *)a4 + 3);
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = *((_QWORD *)a4 + 2);
    if (v7 <= v8)
      v9 = *((_QWORD *)a4 + 2);
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EF8);
      v10 = (char *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 29;
      *((_QWORD *)v10 + 2) = v8;
      *((_QWORD *)v10 + 3) = 2 * (v12 >> 2);
      v13 = v10 + 32;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 32])
          memmove(v13, a4 + 32, 4 * v8);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_240079A88(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_240077C8C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240077CA0(a1, a2, a3, a4, &qword_256FB4F90, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_240077CA0(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(_QWORD))
{
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  size_t v17;
  BOOL v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v9 = *(_QWORD *)(a4 + 24);
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = *(_QWORD *)(a4 + 16);
  if (v10 <= v11)
    v12 = *(_QWORD *)(a4 + 16);
  else
    v12 = v10;
  if (!v12)
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = *(_QWORD *)(a6(0) - 8);
  v14 = *(_QWORD *)(v13 + 72);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = (_QWORD *)swift_allocObject();
  v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (v18 = v14 == -1) : (v18 = 0), v18))
  {
LABEL_29:
    result = sub_240154CF4();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  v19 = *(_QWORD *)(a6(0) - 8);
  v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (unint64_t)v16 + v20;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(_QWORD *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24007AE74(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_240077EAC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_240077EEC(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_240078058(a1, a2, a3, a4, &qword_256FB4F80, &qword_256FB4F88);
}

char *sub_240077F00(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_240077F18(a1, a2, a3, a4, &qword_256FB4F78);
}

char *sub_240077F0C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_240077F18(a1, a2, a3, a4, &qword_256FB4F70);
}

char *sub_240077F18(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 3);
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 32])
          memmove(v13, a4 + 32, 3 * v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_2400798AC(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

char *sub_240078024(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2400789BC(a1, a2, a3, a4, &qword_256FB4F60);
}

uint64_t sub_240078030(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240077CA0(a1, a2, a3, a4, &qword_256FB4E90, type metadata accessor for DKDataLogStamped);
}

_QWORD *sub_240078044(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_240078058(a1, a2, a3, a4, &qword_256FB4F50, &qword_256FB4F58);
}

_QWORD *sub_240078058(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4])
          memmove(v15, a4 + 4, 40 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24007AC64(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_240078184(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24007864C(a1, a2, a3, a4, &qword_256FB4F08);
}

_QWORD *sub_240078190(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2400781B8(a1, a2, a3, a4, &qword_256FB4F40, &qword_256FB4F48);
}

_QWORD *sub_2400781A4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2400781B8(a1, a2, a3, a4, &qword_256FB4F30, &qword_256FB4F38);
}

_QWORD *sub_2400781B8(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;
  _QWORD *v15;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
      v15 = v13 + 4;
      if ((v8 & 1) != 0)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[3 * v11 + 4])
          memmove(v15, a4 + 4, 24 * v11);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v15 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24007AA6C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2400782E8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2400781B8(a1, a2, a3, a4, &qword_256FB4F18, &qword_256FB4F20);
}

uint64_t sub_2400782FC(char a1, int64_t a2, char a3, unint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EC8);
  v10 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FB4ED0) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_29:
    result = sub_240154CF4();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FB4ED0) - 8);
  v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  v18 = (unint64_t)v13 + v17;
  if ((a1 & 1) != 0)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(_QWORD *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (_QWORD *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_24007A198(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

_QWORD *sub_24007850C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24007878C(a1, a2, a3, a4, &qword_256FB4EB8, &qword_256FB4EC0);
}

uint64_t sub_240078520(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240077CA0(a1, a2, a3, a4, &qword_256FB4F10, type metadata accessor for DKPersonGroupFilter.Track);
}

_QWORD *sub_240078534(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E38);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 1;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4])
          memmove(v13, a4 + 4, 32 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24007A2B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_240078640(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24007864C(a1, a2, a3, a4, &qword_256FB4E40);
}

_QWORD *sub_24007864C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  size_t v12;
  _QWORD *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = a4[3];
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = a4[2];
    if (v8 <= v9)
      v10 = a4[2];
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (_QWORD *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      v13 = v11 + 4;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4])
          memmove(v13, a4 + 4, 24 * v9);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24007A3A4(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_24007876C(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24007864C(a1, a2, a3, a4, &qword_256FB4E48);
}

_QWORD *sub_240078778(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24007878C(a1, a2, a3, a4, &qword_256FB4E28, &qword_256FB4E30);
}

_QWORD *sub_24007878C(_QWORD *result, int64_t a2, char a3, _QWORD *a4, uint64_t *a5, uint64_t *a6)
{
  char v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  _QWORD *v16;

  v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    v10 = a2;
    goto LABEL_8;
  }
  v9 = a4[3];
  v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2)
    goto LABEL_8;
  if (v10 + 0x4000000000000000 >= 0)
  {
    v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v10 = a2;
LABEL_8:
    v11 = a4[2];
    if (v10 <= v11)
      v12 = a4[2];
    else
      v12 = v10;
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v13 = (_QWORD *)swift_allocObject();
      v14 = _swift_stdlib_malloc_size(v13);
      v15 = v14 - 32;
      if (v14 < 32)
        v15 = v14 - 25;
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      v16 = v13 + 4;
      if ((v8 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v16 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4])
          memmove(v16, a4 + 4, 8 * v11);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24007A968(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

_QWORD *sub_2400788A4(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F00);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24007A79C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2400789B0(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_2400789BC(a1, a2, a3, a4, &qword_256FB4E78);
}

char *sub_2400789BC(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6;
  unint64_t v7;
  int64_t v8;
  int64_t v9;
  int64_t v10;
  char *v11;
  size_t v12;
  char *v13;

  v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    v8 = a2;
    goto LABEL_8;
  }
  v7 = *((_QWORD *)a4 + 3);
  v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2)
    goto LABEL_8;
  if (v8 + 0x4000000000000000 >= 0)
  {
    v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v8 = a2;
LABEL_8:
    v9 = *((_QWORD *)a4 + 2);
    if (v8 <= v9)
      v10 = *((_QWORD *)a4 + 2);
    else
      v10 = v8;
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      v11 = (char *)swift_allocObject();
      v12 = _swift_stdlib_malloc_size(v11);
      *((_QWORD *)v11 + 2) = v9;
      *((_QWORD *)v11 + 3) = 2 * v12 - 64;
      v13 = v11 + 32;
      if ((v6 & 1) != 0)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32])
          memmove(v13, a4 + 32, v9);
        *((_QWORD *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v11 = (char *)MEMORY[0x24BEE4AF8];
      v13 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24007A884(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

_QWORD *sub_240078AB0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  _QWORD *v12;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E70);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      v12 = v10 + 4;
      if ((v5 & 1) != 0)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4])
          memmove(v12, a4 + 4, 24 * v8);
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v12 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
        goto LABEL_13;
    }
    sub_24007A3A4(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_240078BD4(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_24007878C(a1, a2, a3, a4, &qword_256FB4E60, &qword_256FB4E68);
}

_QWORD *sub_240078BE8(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_2400781B8(a1, a2, a3, a4, &qword_256FB4E50, &qword_256FB4E58);
}

_QWORD *sub_240078BFC(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EF0);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_240079994(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_240078D08(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E80);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 25;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4])
          memmove(v13, a4 + 4, 8 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24007AB74(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

_QWORD *sub_240078E14(_QWORD *a1, int64_t a2, char a3, _QWORD *a4)
{
  return sub_240078058(a1, a2, a3, a4, &qword_256FB4EE0, &qword_256FB4EE8);
}

_QWORD *sub_240078E28(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    v7 = a2;
    goto LABEL_8;
  }
  v6 = a4[3];
  v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2)
    goto LABEL_8;
  if (v7 + 0x4000000000000000 >= 0)
  {
    v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
      v7 = a2;
LABEL_8:
    v8 = a4[2];
    if (v7 <= v8)
      v9 = a4[2];
    else
      v9 = v7;
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E98);
      v10 = (_QWORD *)swift_allocObject();
      v11 = _swift_stdlib_malloc_size(v10);
      v12 = v11 - 32;
      if (v11 < 32)
        v12 = v11 - 17;
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      v13 = v10 + 4;
      if ((v5 & 1) != 0)
        goto LABEL_15;
    }
    else
    {
      v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v13 = (_QWORD *)(MEMORY[0x24BEE4AF8] + 32);
      if ((result & 1) != 0)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4])
          memmove(v13, a4 + 4, 16 * v8);
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24007AD6C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_240078F34(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_240077CA0(a1, a2, a3, a4, &qword_256FB4E88, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t sub_240078F48(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  _QWORD v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_240135708(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_240078FB0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_240078FB0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  uint64_t v13;
  double v14;
  double v15;
  double v16;
  double v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  double *v24;
  double v25;
  uint64_t v26;
  double *v27;
  double v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  BOOL v44;
  unint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t i;
  double v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  unint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  double *__dst;

  v2 = a1;
  v3 = a1[1];
  result = sub_240154EB0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_136;
    if ((unint64_t)v3 >= 2)
    {
      v80 = 0;
      v81 = *v2;
      for (i = 1; i != v3; ++i)
      {
        v83 = *(double *)(v81 + 8 * i);
        v84 = v80;
        do
        {
          v85 = v81 + 8 * v84;
          if (v83 >= *(double *)v85)
            break;
          if (!v81)
            goto LABEL_140;
          *(_QWORD *)(v85 + 8) = *(_QWORD *)v85;
          *(double *)(v81 + 8 * v84--) = v83;
        }
        while (v84 != -1);
        ++v80;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_145;
  v97 = result;
  v98 = v3;
  if (v3 < 2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    __dst = (double *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v11 = (char *)MEMORY[0x24BEE4AF8];
LABEL_102:
      v96 = v8;
      if (v12 >= 2)
      {
        v86 = *v2;
        do
        {
          v87 = v12 - 2;
          if (v12 < 2)
            goto LABEL_131;
          if (!v86)
            goto LABEL_144;
          v88 = v11;
          v89 = v11 + 32;
          v90 = *(_QWORD *)&v11[16 * v87 + 32];
          v91 = *(_QWORD *)&v11[16 * v12 + 24];
          sub_240079640((double *)(v86 + 8 * v90), (double *)(v86 + 8 * *(_QWORD *)&v89[16 * v12 - 16]), v86 + 8 * v91, __dst);
          if (v1)
            break;
          if (v91 < v90)
            goto LABEL_132;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v88 = sub_2401356E0((uint64_t)v88);
          if (v87 >= *((_QWORD *)v88 + 2))
            goto LABEL_133;
          v92 = &v88[16 * v87 + 32];
          *(_QWORD *)v92 = v90;
          *((_QWORD *)v92 + 1) = v91;
          v93 = *((_QWORD *)v88 + 2);
          if (v12 > v93)
            goto LABEL_134;
          memmove(&v88[16 * v12 + 16], &v88[16 * v12 + 32], 16 * (v93 - v12));
          v11 = v88;
          *((_QWORD *)v88 + 2) = v93 - 1;
          v12 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_113:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v96 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v96 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v6 = v5 >> 1;
    v7 = sub_2401547FC();
    *(_QWORD *)(v7 + 16) = v6;
    v3 = v98;
    v96 = v7;
    __dst = (double *)(v7 + 32);
  }
  v9 = 0;
  v10 = *v2;
  v94 = v2;
  v95 = *v2 - 8;
  v11 = (char *)MEMORY[0x24BEE4AF8];
  v99 = *v2;
  while (1)
  {
    v13 = v9++;
    if (v9 < v3)
    {
      v14 = *(double *)(v10 + 8 * v9);
      v15 = *(double *)(v10 + 8 * v13);
      v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        v16 = v14;
        while (1)
        {
          v17 = v16;
          v16 = *(double *)(v10 + 8 * v9);
          if (v14 < v15 == v16 >= v17)
            break;
          if (v3 == ++v9)
          {
            v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13)
          goto LABEL_137;
        if (v13 < v9)
        {
          v18 = (uint64_t *)(v95 + 8 * v9);
          v19 = v9;
          v20 = v13;
          v21 = (uint64_t *)(v10 + 8 * v13);
          do
          {
            if (v20 != --v19)
            {
              if (!v10)
                goto LABEL_143;
              v22 = *v21;
              *v21 = *v18;
              *v18 = v22;
            }
            ++v20;
            --v18;
            ++v21;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v9, v13))
      goto LABEL_135;
    if (v9 - v13 >= v97)
      goto LABEL_46;
    v23 = v13 + v97;
    if (__OFADD__(v13, v97))
      goto LABEL_138;
    if (v23 >= v3)
      v23 = v3;
    if (v23 < v13)
      break;
    if (v9 != v23)
    {
      v24 = (double *)(v95 + 8 * v9);
      do
      {
        v25 = *(double *)(v10 + 8 * v9);
        v26 = v13;
        v27 = v24;
        do
        {
          v28 = *v27;
          if (v25 >= *v27)
            break;
          if (!v10)
            goto LABEL_141;
          *v27 = v25;
          v27[1] = v28;
          --v27;
          ++v26;
        }
        while (v9 != v26);
        ++v9;
        ++v24;
      }
      while (v9 != v23);
      v9 = v23;
    }
LABEL_46:
    if (v9 < v13)
      goto LABEL_130;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_240135220(0, *((_QWORD *)v11 + 2) + 1, 1, v11);
    v30 = *((_QWORD *)v11 + 2);
    v29 = *((_QWORD *)v11 + 3);
    v12 = v30 + 1;
    v10 = v99;
    if (v30 >= v29 >> 1)
    {
      v79 = sub_240135220((char *)(v29 > 1), v30 + 1, 1, v11);
      v10 = v99;
      v11 = v79;
    }
    *((_QWORD *)v11 + 2) = v12;
    v31 = v11 + 32;
    v32 = &v11[16 * v30 + 32];
    *(_QWORD *)v32 = v13;
    *((_QWORD *)v32 + 1) = v9;
    if (v30)
    {
      while (1)
      {
        v33 = v12 - 1;
        if (v12 >= 4)
        {
          v38 = &v31[16 * v12];
          v39 = *((_QWORD *)v38 - 8);
          v40 = *((_QWORD *)v38 - 7);
          v44 = __OFSUB__(v40, v39);
          v41 = v40 - v39;
          if (v44)
            goto LABEL_119;
          v43 = *((_QWORD *)v38 - 6);
          v42 = *((_QWORD *)v38 - 5);
          v44 = __OFSUB__(v42, v43);
          v36 = v42 - v43;
          v37 = v44;
          if (v44)
            goto LABEL_120;
          v45 = v12 - 2;
          v46 = &v31[16 * v12 - 32];
          v48 = *(_QWORD *)v46;
          v47 = *((_QWORD *)v46 + 1);
          v44 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          if (v44)
            goto LABEL_122;
          v44 = __OFADD__(v36, v49);
          v50 = v36 + v49;
          if (v44)
            goto LABEL_125;
          if (v50 >= v41)
          {
            v68 = &v31[16 * v33];
            v70 = *(_QWORD *)v68;
            v69 = *((_QWORD *)v68 + 1);
            v44 = __OFSUB__(v69, v70);
            v71 = v69 - v70;
            if (v44)
              goto LABEL_129;
            v61 = v36 < v71;
            goto LABEL_83;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v62 = *((_QWORD *)v11 + 4);
            v63 = *((_QWORD *)v11 + 5);
            v44 = __OFSUB__(v63, v62);
            v55 = v63 - v62;
            v56 = v44;
            goto LABEL_77;
          }
          v35 = *((_QWORD *)v11 + 4);
          v34 = *((_QWORD *)v11 + 5);
          v44 = __OFSUB__(v34, v35);
          v36 = v34 - v35;
          v37 = v44;
        }
        if ((v37 & 1) != 0)
          goto LABEL_121;
        v45 = v12 - 2;
        v51 = &v31[16 * v12 - 32];
        v53 = *(_QWORD *)v51;
        v52 = *((_QWORD *)v51 + 1);
        v54 = __OFSUB__(v52, v53);
        v55 = v52 - v53;
        v56 = v54;
        if (v54)
          goto LABEL_124;
        v57 = &v31[16 * v33];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v44 = __OFSUB__(v58, v59);
        v60 = v58 - v59;
        if (v44)
          goto LABEL_127;
        if (__OFADD__(v55, v60))
          goto LABEL_128;
        if (v55 + v60 >= v36)
        {
          v61 = v36 < v60;
LABEL_83:
          if (v61)
            v33 = v45;
          goto LABEL_85;
        }
LABEL_77:
        if ((v56 & 1) != 0)
          goto LABEL_123;
        v64 = &v31[16 * v33];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v44 = __OFSUB__(v65, v66);
        v67 = v65 - v66;
        if (v44)
          goto LABEL_126;
        if (v67 < v55)
          goto LABEL_15;
LABEL_85:
        v72 = v33 - 1;
        if (v33 - 1 >= v12)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v10)
          goto LABEL_142;
        v73 = &v31[16 * v72];
        v74 = *(_QWORD *)v73;
        v75 = v31;
        v76 = &v31[16 * v33];
        v77 = *((_QWORD *)v76 + 1);
        sub_240079640((double *)(v10 + 8 * *(_QWORD *)v73), (double *)(v10 + 8 * *(_QWORD *)v76), v10 + 8 * v77, __dst);
        if (v1)
          goto LABEL_113;
        if (v77 < v74)
          goto LABEL_116;
        if (v33 > *((_QWORD *)v11 + 2))
          goto LABEL_117;
        *(_QWORD *)v73 = v74;
        *(_QWORD *)&v75[16 * v72 + 8] = v77;
        v78 = *((_QWORD *)v11 + 2);
        if (v33 >= v78)
          goto LABEL_118;
        v12 = v78 - 1;
        memmove(v76, v76 + 16, 16 * (v78 - 1 - v33));
        v31 = v75;
        *((_QWORD *)v11 + 2) = v78 - 1;
        v10 = v99;
        if (v78 <= 2)
          goto LABEL_15;
      }
    }
    v12 = 1;
LABEL_15:
    v3 = v98;
    if (v9 >= v98)
    {
      v8 = v96;
      v2 = v94;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_240079640(double *__src, double *a2, unint64_t a3, double *__dst)
{
  double *v4;
  double *v6;
  double *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  double *v15;
  double *v16;
  double *v17;
  double *v18;
  double *v19;
  double v20;
  uint64_t result;
  double *v22;
  double *v23;
  double *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = (char *)a2 - (char *)__src;
  v9 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v9 = (char *)a2 - (char *)__src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (double *)(a3 - 8);
        while (1)
        {
          v18 = v17 + 1;
          v19 = v6 - 1;
          v20 = *(v6 - 1);
          if (*(v16 - 1) >= v20)
          {
            v22 = v16 - 1;
            if (v18 < v16 || v17 >= v16 || v18 != v16)
              *v17 = *(v16 - 1);
            --v16;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v18 != v6 || v17 >= v6)
              *v17 = v20;
            v24 = --v6;
            if (v19 <= v7)
              goto LABEL_42;
          }
          --v17;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*v6 >= *v4)
        {
          if (v7 != v4)
            *v7 = *v4;
          v23 = ++v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 1;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *v7 = *v6;
        }
        ++v7;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_240135318((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

char *sub_2400798AC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 3 * a1 + 32);
    v6 = 3 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_240154D60();
  __break(1u);
  return result;
}

char *sub_240079994(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 8 * a1 + 32);
    v6 = 8 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_240079A7C(uint64_t a1, uint64_t a2)
{
  return sub_24007A49C(a1, a2, (void (*)(_QWORD))type metadata accessor for DKPersonTrackerState);
}

char *sub_240079A88(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 4 * a1 + 32);
    v6 = 4 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_240079B70(uint64_t a1, int64_t a2)
{
  unint64_t *v2;
  unint64_t v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int isUniquelyReferenced_nonNull_native;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(_QWORD *)(v4 + 24) >> 1)
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    v4 = sub_240077CA0(isUniquelyReferenced_nonNull_native, v11, 1, v4, &qword_256FB4F90, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
  }
  v12 = *(_QWORD *)(sub_240154310() - 8);
  v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  v14 = *(_QWORD *)(v12 + 72);
  v15 = v14 * a1;
  v16 = v13 + v14 * a1;
  result = swift_arrayDestroy();
  if (!v7)
    goto LABEL_25;
  v18 = *(_QWORD *)(v4 + 16);
  v19 = v18 - a2;
  if (__OFSUB__(v18, a2))
    goto LABEL_31;
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      result = swift_arrayInitWithTakeBackToFront();
    }
    v21 = *(_QWORD *)(v4 + 16);
    v22 = __OFADD__(v21, v8);
    v23 = v21 - v7;
    if (!v22)
    {
      *(_QWORD *)(v4 + 16) = v23;
LABEL_25:
      *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  result = sub_240154D60();
  __break(1u);
  return result;
}

char *sub_240079D28(uint64_t a1, int64_t a2)
{
  char **v2;
  char *v4;
  int64_t v5;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  char *result;
  int64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *v2;
  v5 = *((_QWORD *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)result && v9 <= *((_QWORD *)v4 + 3) >> 1)
  {
    if (!v8)
      goto LABEL_21;
  }
  else
  {
    if (v5 <= v9)
      v11 = v5 + v8;
    else
      v11 = v5;
    result = (char *)sub_240077968(result, v11, 1, v4);
    v4 = result;
    if (!v8)
      goto LABEL_21;
  }
  v12 = *((_QWORD *)v4 + 2);
  v13 = __OFSUB__(v12, a2);
  v14 = v12 - a2;
  if (v13)
    goto LABEL_27;
  if ((v14 & 0x8000000000000000) == 0)
  {
    result = &v4[8 * a1 + 32];
    v15 = &v4[8 * a2 + 32];
    if (a1 != a2 || result >= &v15[8 * v14])
      result = (char *)memmove(result, v15, 8 * v14);
    v16 = *((_QWORD *)v4 + 2);
    v13 = __OFADD__(v16, v8);
    v17 = v16 + v8;
    if (!v13)
    {
      *((_QWORD *)v4 + 2) = v17;
LABEL_21:
      *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  result = (char *)sub_240154D60();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for DKStatisticsFilter()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKStatisticsFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKStatisticsFilter.__allocating_init(maxNumElements:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of DKStatisticsFilter.__allocating_init(maxTimeInterval:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getFirst()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getLast()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKStatisticsFilter.add(newValue:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getMax()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getMin()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getMedian()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKStatisticsFilter.getAverage()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t sub_240079FB8(uint64_t a1, uint64_t a2)
{
  return sub_24007A49C(a1, a2, (void (*)(_QWORD))type metadata accessor for DKLockActor.ContinuationWrapper);
}

uint64_t sub_240079FC4(uint64_t a1, uint64_t a2)
{
  return sub_24007A49C(a1, a2, (void (*)(_QWORD))type metadata accessor for DKObservationMetadata);
}

uint64_t sub_240079FD0(uint64_t a1, uint64_t a2)
{
  return sub_240079FF4(a1, a2, &qword_256FB4EB0);
}

uint64_t sub_240079FDC(uint64_t a1, uint64_t a2)
{
  return sub_240079FF4(a1, a2, &qword_256FB4F28);
}

uint64_t sub_240079FE8(uint64_t a1, uint64_t a2)
{
  return sub_240079FF4(a1, a2, &qword_256FB4EA8);
}

uint64_t sub_240079FF4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;

  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = a1 - a2;
  if (__OFSUB__(0, v8))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v10 = v6 - v8;
  if (__OFADD__(v6, v9))
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v3 = v5;
  if (!(_DWORD)isUniquelyReferenced_nonNull_native || v10 > *(_QWORD *)(v5 + 24) >> 1)
  {
    if (v6 <= v10)
      v6 += v9;
    swift_bridgeObjectRetain();
    *v3 = MEMORY[0x24267D4EC](isUniquelyReferenced_nonNull_native, v6, 1, v5);
    swift_bridgeObjectRelease();
    v5 = *v3;
  }
  v13 = v5 + 32;
  v14 = (char *)(v5 + 32 + 8 * a1);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  swift_arrayDestroy();
  if (!v8)
    return sub_2401547B4();
  v15 = *(_QWORD *)(*v3 + 16);
  v16 = __OFSUB__(v15, a2);
  v17 = v15 - a2;
  if (v16)
    goto LABEL_25;
  if ((v17 & 0x8000000000000000) == 0)
  {
    v18 = (char *)(v13 + 8 * a2);
    if (a1 != a2 || v14 >= &v18[8 * v17])
      memmove(v14, v18, 8 * v17);
    v19 = *(_QWORD *)(*v3 + 16);
    v16 = __OFADD__(v19, v9);
    v20 = v19 - v8;
    if (!v16)
    {
      *(_QWORD *)(*v3 + 16) = v20;
      return sub_2401547B4();
    }
    goto LABEL_26;
  }
LABEL_27:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24007A198(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_256FB4ED0) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24007A2B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

char *sub_24007A3A4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 24 * a1 + 32);
    v6 = 24 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24007A490(uint64_t a1, uint64_t a2)
{
  return sub_24007A49C(a1, a2, (void (*)(_QWORD))type metadata accessor for DKImageRGBBufferStamped);
}

uint64_t sub_24007A49C(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  void (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v6 = a3;
    v3 = a2;
    v5 = a1;
    if (!(*v4 >> 62))
    {
      if (*(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v23 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (v23 < v3)
    goto LABEL_31;
LABEL_4:
  v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v7 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v9 = sub_240154D30();
    swift_bridgeObjectRelease();
    v10 = v9 + v7;
    if (!__OFADD__(v9, v7))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v14 = sub_240154D30();
    swift_bridgeObjectRelease();
    v11 = *v4;
    goto LABEL_15;
  }
  if (*v4 >> 62)
    goto LABEL_34;
  v9 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  v10 = v9 - v8;
  if (__OFADD__(v9, v7))
    goto LABEL_36;
LABEL_8:
  v11 = *v4;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v4 = v11;
  v9 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject
    && (v11 & 0x8000000000000000) == 0
    && (v11 & 0x4000000000000000) == 0)
  {
    v13 = v11 & 0xFFFFFFFFFFFFFF8;
    if (v10 <= *(_QWORD *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v9 = 1;
  }
  if (v11 >> 62)
    goto LABEL_37;
  v14 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v14 <= v10)
    v14 = v10;
  swift_bridgeObjectRetain();
  *v4 = MEMORY[0x24267D4EC](v9, v14, 1, v11);
  swift_bridgeObjectRelease();
  v13 = *v4 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  v15 = v13 + 32;
  v16 = (char *)(v13 + 32 + 8 * v5);
  v6(0);
  swift_arrayDestroy();
  if (!v7)
    return sub_2401547B4();
  if (!(*v4 >> 62))
  {
    v17 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    v18 = v17 - v3;
    if (!__OFSUB__(v17, v3))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v24 = sub_240154D30();
  swift_bridgeObjectRelease();
  v18 = v24 - v3;
  if (__OFSUB__(v24, v3))
    goto LABEL_40;
LABEL_21:
  if ((v18 & 0x8000000000000000) == 0)
  {
    v19 = (char *)(v15 + 8 * v3);
    if (v5 != v3 || v16 >= &v19[8 * v18])
      memmove(v16, v19, 8 * v18);
    if (!(*v4 >> 62))
    {
      v20 = *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10);
      v21 = v20 + v7;
      if (!__OFADD__(v20, v7))
      {
LABEL_27:
        *(_QWORD *)((*v4 & 0xFFFFFFFFFFFFF8) + 0x10) = v21;
        return sub_2401547B4();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v25 = sub_240154D30();
    swift_bridgeObjectRelease();
    v21 = v25 + v7;
    if (!__OFADD__(v25, v7))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

char *sub_24007A79C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4;
  char *v5;
  size_t v6;
  char *v7;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 16 * a1 + 32);
    v6 = 16 * v4;
    v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  result = (char *)sub_240154D60();
  __break(1u);
  return result;
}

char *sub_24007A884(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4;
  char *v5;
  char *v6;
  char *result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + a1 + 32);
    v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  result = (char *)sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24007A968(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 8 * a1 + 32;
    v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24007AA6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 24 * a1 + 32;
    v7 = a3 + 24 * v5;
    if (v6 >= v7 || v6 + 24 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24007AB74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 8 * a1 + 32;
    v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24007AC64(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v6 = a4 + 40 * a1 + 32;
    v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24007AD6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 16 * a1 + 32;
    v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EA0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_24007AE74(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t result;

  v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    v9 = *(_QWORD *)(a5(0) - 8);
    v10 = *(unsigned __int8 *)(v9 + 80);
    v11 = *(_QWORD *)(v9 + 72);
    v12 = a4 + ((v10 + 32) & ~v10) + v11 * a1;
    v13 = v11 * v5;
    v14 = a3 + v13;
    v15 = v12 + v13;
    if (v12 >= v14 || v15 <= a3)
    {
      swift_arrayInitWithCopy();
      return v14;
    }
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t static DKConversions.convert(time:metadata:image:camera:)(uint64_t a1, unint64_t a2, void *a3, unsigned __int8 *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  objc_class *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  void *v24;
  id v25;
  void (*v26)(char *, uint64_t);
  unint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  void **p_weak_ivar_lyt;
  void *v32;
  id v33;
  uint64_t v34;
  void *v35;
  id v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  uint64_t v41;
  void *v42;
  id v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  char *v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  __int128 v57;
  char *v58;
  uint64_t v59;
  _QWORD *v60;
  char v61;
  unint64_t v62;
  unint64_t v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _OWORD *v78;
  __int128 v79;
  char *v80;
  uint64_t v81;
  _QWORD *v82;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  unsigned __int8 *v90;
  uint64_t v91;
  void (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  id v98;
  id v99;
  unint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  void *v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 v110;
  objc_super v111;
  _BYTE v112[40];
  _BYTE v113[40];
  _OWORD v114[2];
  char v115;
  __int128 v116;
  __int128 v117;
  _OWORD v118[2];
  char v119;
  __int128 v120;
  __int128 v121;

  v106 = a3;
  v100 = a2;
  v6 = sub_24015434C();
  v94 = *(_QWORD *)(v6 - 8);
  v95 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v88 = (char *)&v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v103 = (char *)&v86 - v9;
  v10 = sub_240154310();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v102 = (char *)&v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v86 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v96 = a1;
  v16((char *)&v86 - v14, a1, v10);
  v17 = (objc_class *)type metadata accessor for DKObservationMetadata(0);
  v18 = (char *)objc_allocWithZone(v17);
  v19 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image;
  v20 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition;
  v21 = &v18[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = 1;
  v22 = &v18[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID];
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v23 = &v18[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  v92 = v16;
  v16(&v18[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time], (uint64_t)v15, v10);
  *(_QWORD *)&v18[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations] = MEMORY[0x24BEE4AF8];
  v24 = v106;
  *(_QWORD *)&v18[v19] = v106;
  *(_QWORD *)&v18[v20] = 0;
  v111.receiver = v18;
  v111.super_class = v17;
  v25 = v24;
  v101 = (char *)objc_msgSendSuper2(&v111, sel_init);
  v93 = v11;
  v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v27 = v100;
  v87 = v15;
  v104 = v10;
  v26(v15, v10);
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_240154D30();
    v28 = result;
    if (result)
      goto LABEL_3;
LABEL_31:
    swift_bridgeObjectRelease();
    return (uint64_t)v101;
  }
  v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v28)
    goto LABEL_31;
LABEL_3:
  if (v28 >= 1)
  {
    v30 = 0;
    v90 = a4;
    v91 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations;
    v105 = v27 & 0xC000000000000001;
    p_weak_ivar_lyt = (void **)(&ResourceBundleClass + 56);
    v89 = v28;
    while (1)
    {
      if (v105)
        v33 = (id)MEMORY[0x24267D4E0](v30, v27);
      else
        v33 = *(id *)(v27 + 8 * v30 + 32);
      v32 = v33;
      objc_opt_self();
      v34 = swift_dynamicCastObjCClass();
      if (v34)
      {
        v35 = (void *)v34;
        v36 = v32;
        objc_msgSend(v35, (SEL)p_weak_ivar_lyt[15]);
        LOBYTE(v107) = a4[1];
        v110 = *a4;
        sub_24007C92C(&v107, &v110, (uint64_t)v112, v37, v38, v39, v40);
        sub_24007CD50((uint64_t)v112, (uint64_t)v118, &qword_256FB4FA0);
        if (v119 != 1)
        {
          v120 = v118[0];
          v121 = v118[1];
          v92(v102, v96, v104);
          sub_240154340();
          v99 = objc_msgSend(v35, sel_faceID);
          v64 = objc_msgSend(v35, sel_hasYawAngle);
          v65 = 0;
          v66 = 0;
          if (v64)
          {
            objc_msgSend(v35, sel_yawAngle);
            v66 = v67;
          }
          v106 = v32;
          LODWORD(v98) = v64 ^ 1;
          v97 = objc_msgSend(v35, sel_hasRollAngle);
          if (v97)
          {
            objc_msgSend(v35, sel_rollAngle);
            v65 = v68;
          }
          v69 = type metadata accessor for DKFaceObservation(0);
          v70 = swift_allocObject();
          v71 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
          v72 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
          v73 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
          v74 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
          v75 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
          v76 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
          *(_BYTE *)(v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType) = 0;
          *(_QWORD *)(v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
          *(_QWORD *)(v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
          v77 = v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
          *(_QWORD *)v77 = 0;
          *(_BYTE *)(v77 + 8) = 1;
          (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, v102, v104);
          (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v103, v95);
          v78 = (_OWORD *)(v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
          v79 = v121;
          *v78 = v120;
          v78[1] = v79;
          *(_QWORD *)(v70 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = MEMORY[0x24BEE4AF8];
          *(_QWORD *)v71 = v99;
          *(_BYTE *)(v71 + 8) = 0;
          *(_QWORD *)v72 = -1;
          *(_BYTE *)(v72 + 8) = 0;
          *(_QWORD *)v73 = v66;
          *(_BYTE *)(v73 + 8) = (_BYTE)v98;
          *(_QWORD *)v74 = 0;
          *(_BYTE *)(v74 + 8) = 1;
          *(_QWORD *)v75 = v65;
          *(_BYTE *)(v75 + 8) = v97 ^ 1;
          *(_QWORD *)v76 = 0;
          *(_BYTE *)(v76 + 8) = 1;
          v80 = v101;
          v81 = v91;
          v82 = *(_QWORD **)&v101[v91];
          swift_retain();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)&v80[v81] = v82;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v82 = sub_240077EEC(0, v82[2] + 1, 1, v82);
            *(_QWORD *)&v101[v91] = v82;
          }
          v85 = v82[2];
          v84 = v82[3];
          v27 = v100;
          v28 = v89;
          a4 = v90;
          if (v85 >= v84 >> 1)
          {
            v82 = sub_240077EEC((_QWORD *)(v84 > 1), v85 + 1, 1, v82);
            *(_QWORD *)&v101[v91] = v82;
          }
          v108 = v69;
          v109 = sub_2400707A8(&qword_256FB4FB0, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
          *(_QWORD *)&v107 = v70;
          v82[2] = v85 + 1;
          sub_24007CC80(&v107, (uint64_t)&v82[5 * v85 + 4]);
          v32 = v106;
          goto LABEL_6;
        }

      }
      objc_opt_self();
      v41 = swift_dynamicCastObjCClass();
      if (!v41)
        goto LABEL_8;
      v42 = (void *)v41;
      v43 = v32;
      objc_msgSend(v42, (SEL)p_weak_ivar_lyt[15]);
      LOBYTE(v107) = a4[1];
      v110 = *a4;
      sub_24007C92C(&v107, &v110, (uint64_t)v113, v44, v45, v46, v47);
      sub_24007CD50((uint64_t)v113, (uint64_t)v114, &qword_256FB4FA0);
      if ((v115 & 1) == 0)
      {
        v106 = v32;
        v116 = v114[0];
        v117 = v114[1];
        v48 = v87;
        v49 = v104;
        v92(v87, v96, v104);
        v50 = v88;
        sub_240154340();
        v98 = objc_msgSend(v42, sel_bodyID);
        v99 = (id)type metadata accessor for DKBodyObservation(0);
        v51 = swift_allocObject();
        v52 = v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
        v53 = v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
        *(_QWORD *)(v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
        *(_QWORD *)(v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
        v54 = v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprintConfidence;
        *(_QWORD *)v54 = 0;
        *(_BYTE *)(v54 + 8) = 1;
        v55 = v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
        (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, v48, v49);
        (*(void (**)(uint64_t, char *, uint64_t))(v94 + 32))(v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v50, v95);
        v56 = (_OWORD *)(v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
        v57 = v117;
        *v56 = v116;
        v56[1] = v57;
        *(_QWORD *)(v51 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = MEMORY[0x24BEE4AF8];
        *(_QWORD *)v52 = v98;
        *(_BYTE *)(v52 + 8) = 0;
        *(_QWORD *)v53 = -1;
        *(_BYTE *)(v53 + 8) = 0;
        *(_QWORD *)v55 = 0;
        *(_BYTE *)(v55 + 8) = 1;
        v58 = v101;
        v59 = v91;
        v60 = *(_QWORD **)&v101[v91];
        swift_retain();
        v61 = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)&v58[v59] = v60;
        if ((v61 & 1) == 0)
        {
          v60 = sub_240077EEC(0, v60[2] + 1, 1, v60);
          *(_QWORD *)&v101[v91] = v60;
        }
        v63 = v60[2];
        v62 = v60[3];
        v28 = v89;
        a4 = v90;
        v27 = v100;
        v32 = v106;
        if (v63 >= v62 >> 1)
        {
          v60 = sub_240077EEC((_QWORD *)(v62 > 1), v63 + 1, 1, v60);
          *(_QWORD *)&v101[v91] = v60;
        }
        v108 = (uint64_t)v99;
        v109 = sub_2400707A8(&qword_256FB4FA8, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
        *(_QWORD *)&v107 = v51;
        v60[2] = v63 + 1;
        sub_24007CC80(&v107, (uint64_t)&v60[5 * v63 + 4]);
LABEL_6:
        swift_release();
        p_weak_ivar_lyt = &ResourceBundleClass.weak_ivar_lyt;
      }

LABEL_8:
      ++v30;

      if (v28 == v30)
        goto LABEL_31;
    }
  }
  __break(1u);
  return result;
}

uint64_t static DKConversions.convert(rect:orient:port:)@<X0>(_BYTE *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>)
{
  _BYTE v9[40];

  sub_24007C92C(a1, a2, (uint64_t)v9, a4, a5, a6, a7);
  return sub_24007CD50((uint64_t)v9, a3, &qword_256FB4FA0);
}

char *static DKConversions.convert(time:observationsDict:image:cameraPortType:cameraIntrinsics:referenceDimensions:orientation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  _BYTE *v21;
  objc_class *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  void *v29;
  uint64_t v30;
  id v31;
  char *v32;
  void (*v33)(_BYTE *, uint64_t);
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  char v41;
  void *v42;
  id v43;
  unint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  id v48;
  CGFloat v49;
  id v50;
  CGFloat v51;
  id v52;
  CGFloat v53;
  id v54;
  CGFloat v55;
  id v56;
  CGFloat v57;
  id v58;
  CGFloat v59;
  id v60;
  double v61;
  double v62;
  double v63;
  double v64;
  unint64_t v65;
  char v66;
  uint64_t v67;
  double v68;
  double v69;
  double v70;
  double v71;
  unint64_t v72;
  char v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  unint64_t v78;
  char v79;
  int v80;
  double v81;
  unint64_t v82;
  char v83;
  double v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  char v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v103;
  _BYTE v104[12];
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  double v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  void (*v114)(_BYTE *, uint64_t, uint64_t);
  uint64_t v115;
  int v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  _BYTE *v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  CGFloat v124;
  __int128 v125;
  __int128 v126;
  objc_super v127;
  _BYTE v128[40];
  _BYTE v129[40];
  _QWORD v130[4];
  char v131;
  _QWORD v132[4];
  char v133;

  v12 = sub_24015434C();
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v104[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = sub_240154310();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v120 = &v104[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)&v121 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4FB8);
  sub_24015479C();
  v18 = v121;
  if (!(_QWORD)v121)
    return 0;
  DKCameraOrientation.init(rawValue:)(a7);
  if (v121 == 8)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  v117 = v121;
  static DKCamera.convertPort(portType:)(a4, a5, (char *)&v121);
  v116 = v121;
  v118 = a3;
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v16 + 16);
  v21 = v120;
  v115 = a1;
  v20(v120, a1, v15);
  v22 = (objc_class *)type metadata accessor for DKObservationMetadata(0);
  v23 = (char *)objc_allocWithZone(v22);
  v24 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image;
  v119 = v18;
  v113 = v14;
  v25 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition;
  v26 = &v23[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize];
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = 1;
  v27 = &v23[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID];
  *(_QWORD *)v27 = 0;
  *((_QWORD *)v27 + 1) = 0;
  v28 = &v23[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v114 = v20;
  v20(&v23[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time], (uint64_t)v21, v15);
  *(_QWORD *)&v23[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations] = MEMORY[0x24BEE4AF8];
  v29 = (void *)v118;
  v30 = v119;
  *(_QWORD *)&v23[v24] = v118;
  *(_QWORD *)&v23[v25] = 0;
  v127.receiver = v23;
  v127.super_class = v22;
  v31 = v29;
  v32 = (char *)objc_msgSendSuper2(&v127, sel_init);
  v33 = *(void (**)(_BYTE *, uint64_t))(v16 + 8);
  v112 = v15;
  v33(v21, v15);
  v34 = *(_QWORD *)(v30 + 16);
  if (v34)
  {
    v35 = (uint64_t *)(v30 + 32);
    v118 = MEMORY[0x24BEE4AD8] + 8;
    v111 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations;
    while (1)
    {
      v36 = *v35;
      v37 = *(_QWORD *)(*v35 + 16);
      swift_bridgeObjectRetain();
      if (v37)
      {
        v38 = sub_24013F014(0x444965636146, 0xE600000000000000);
        if ((v39 & 1) != 0)
          break;
      }
      v121 = 0u;
      v122 = 0u;
      sub_24007CC98((uint64_t)&v121);
      if (!*(_QWORD *)(v36 + 16) || (v44 = sub_24013F014(17481, 0xE200000000000000), (v45 & 1) == 0))
      {
        v121 = 0u;
        v122 = 0u;
LABEL_25:
        swift_bridgeObjectRelease();
        sub_24007CC98((uint64_t)&v121);
        goto LABEL_9;
      }
      sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v44, (uint64_t)&v121);
      sub_24007CC98((uint64_t)&v121);
      if (*(_QWORD *)(v36 + 16))
      {
        v46 = sub_24013F014(1952671058, 0xE400000000000000);
        if ((v47 & 1) != 0)
        {
          sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v46, (uint64_t)&v121);
          sub_24007CD14();
          if ((swift_dynamicCast() & 1) != 0)
          {
            v42 = (void *)v125;
            *(_QWORD *)&v125 = 88;
            *((_QWORD *)&v125 + 1) = 0xE100000000000000;
            v48 = objc_msgSend(v42, sel___swift_objectForKeyedSubscript_, sub_240154F40());
            swift_unknownObjectRelease();
            if (v48)
            {
              sub_240154AB4();
              swift_unknownObjectRelease();
            }
            else
            {
              v125 = 0u;
              v126 = 0u;
            }
            sub_24007CD50((uint64_t)&v125, (uint64_t)&v121, &qword_256FB4FC0);
            if (!*((_QWORD *)&v122 + 1))
            {
LABEL_72:

              goto LABEL_25;
            }
            if ((swift_dynamicCast() & 1) != 0)
            {
              v51 = v124;
              *(_QWORD *)&v125 = 89;
              *((_QWORD *)&v125 + 1) = 0xE100000000000000;
              v52 = objc_msgSend(v42, sel___swift_objectForKeyedSubscript_, sub_240154F40());
              swift_unknownObjectRelease();
              if (v52)
              {
                sub_240154AB4();
                swift_unknownObjectRelease();
              }
              else
              {
                v125 = 0u;
                v126 = 0u;
              }
              sub_24007CD50((uint64_t)&v125, (uint64_t)&v121, &qword_256FB4FC0);
              if (!*((_QWORD *)&v122 + 1))
                goto LABEL_72;
              if ((swift_dynamicCast() & 1) != 0)
              {
                v55 = v124;
                *(_QWORD *)&v125 = 0x6874646957;
                *((_QWORD *)&v125 + 1) = 0xE500000000000000;
                v56 = objc_msgSend(v42, sel___swift_objectForKeyedSubscript_, sub_240154F40());
                swift_unknownObjectRelease();
                if (v56)
                {
                  sub_240154AB4();
                  swift_unknownObjectRelease();
                }
                else
                {
                  v125 = 0u;
                  v126 = 0u;
                }
                sub_24007CD50((uint64_t)&v125, (uint64_t)&v121, &qword_256FB4FC0);
                if (!*((_QWORD *)&v122 + 1))
                  goto LABEL_72;
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v59 = v124;
                  *(_QWORD *)&v125 = 0x746867696548;
                  *((_QWORD *)&v125 + 1) = 0xE600000000000000;
                  v60 = objc_msgSend(v42, sel___swift_objectForKeyedSubscript_, sub_240154F40());
                  swift_unknownObjectRelease();
                  if (v60)
                  {
                    sub_240154AB4();
                    swift_unknownObjectRelease();
                  }
                  else
                  {
                    v125 = 0u;
                    v126 = 0u;
                  }
                  sub_24007CD50((uint64_t)&v125, (uint64_t)&v121, &qword_256FB4FC0);
                  if (!*((_QWORD *)&v122 + 1))
                    goto LABEL_72;
                  if ((swift_dynamicCast() & 1) != 0)
                  {
                    LOBYTE(v121) = v117;
                    LOBYTE(v125) = v116;
                    sub_24007C92C(&v121, (unsigned __int8 *)&v125, (uint64_t)v129, v51, v55, v59, v124);
                    sub_24007CD50((uint64_t)v129, (uint64_t)v130, &qword_256FB4FA0);
                    if (v131 != 1)
                    {
                      v68 = *(double *)v130;
                      v69 = *(double *)&v130[1];
                      v70 = *(double *)&v130[2];
                      v71 = *(double *)&v130[3];
                      if (*(_QWORD *)(v36 + 16)
                        && (v72 = sub_24013F014(0x444965636146, 0xE600000000000000), (v73 & 1) != 0)
                        && (sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v72, (uint64_t)&v121),
                            swift_dynamicCast()))
                      {
                        v74 = v125;
                      }
                      else
                      {
                        v74 = -1;
                      }
                      v109 = v74;
                      if (*(_QWORD *)(v36 + 16)
                        && (v85 = sub_24013F014(0x444970756F7247, 0xE700000000000000), (v86 & 1) != 0))
                      {
                        sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v85, (uint64_t)&v121);
                      }
                      else
                      {
                        v121 = 0u;
                        v122 = 0u;
                      }
                      swift_bridgeObjectRelease();
                      if (*((_QWORD *)&v122 + 1))
                      {
                        if (swift_dynamicCast())
                        {
                          v87 = v125;
                          goto LABEL_108;
                        }
                      }
                      else
                      {
                        sub_24007CC98((uint64_t)&v121);
                      }
                      v87 = -1;
LABEL_108:
                      v98 = (uint64_t)v120;
                      v114(v120, v115, v112);
                      v99 = (uint64_t)v113;
                      sub_240154340();
                      v110 = COERCE_DOUBLE(type metadata accessor for DKBodyObservation(0));
                      swift_allocObject();
                      v100 = DKBodyObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(v98, v99, MEMORY[0x24BEE4AF8], v109, 0, v87, 0, 0, v68, v69, v70, v71, 1);
                      v101 = v111;
                      v92 = *(_QWORD **)&v32[v111];
                      v109 = v100;
                      swift_retain();
                      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                      *(_QWORD *)&v32[v101] = v92;
                      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                      {
                        v92 = sub_240077EEC(0, v92[2] + 1, 1, v92);
                        *(_QWORD *)&v32[v111] = v92;
                      }
                      v96 = v92[2];
                      v103 = v92[3];
                      v108 = v96 + 1;
                      if (v96 >= v103 >> 1)
                      {
                        v92 = sub_240077EEC((_QWORD *)(v103 > 1), v96 + 1, 1, v92);
                        *(_QWORD *)&v32[v111] = v92;
                      }
                      *((double *)&v122 + 1) = v110;
                      v123 = sub_2400707A8(&qword_256FB4FA8, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
                      v97 = v108;
                      *(_QWORD *)&v121 = v109;
LABEL_113:
                      v92[2] = v97;
                      sub_24007CC80(&v121, (uint64_t)&v92[5 * v96 + 4]);
                      swift_release();

                      goto LABEL_9;
                    }
                  }
                }
              }
            }
LABEL_7:

          }
        }
      }
LABEL_8:
      swift_bridgeObjectRelease();
LABEL_9:
      ++v35;
      if (!--v34)
        goto LABEL_114;
    }
    sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v38, (uint64_t)&v121);
    sub_24007CC98((uint64_t)&v121);
    if (!*(_QWORD *)(v36 + 16))
      goto LABEL_8;
    v40 = sub_24013F014(1952671058, 0xE400000000000000);
    if ((v41 & 1) == 0)
      goto LABEL_8;
    sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v40, (uint64_t)&v121);
    sub_24007CD14();
    if ((swift_dynamicCast() & 1) == 0)
      goto LABEL_8;
    v42 = (void *)v125;
    *(_QWORD *)&v125 = 88;
    *((_QWORD *)&v125 + 1) = 0xE100000000000000;
    v43 = objc_msgSend(v42, sel___swift_objectForKeyedSubscript_, sub_240154F40());
    swift_unknownObjectRelease();
    if (v43)
    {
      sub_240154AB4();
      swift_unknownObjectRelease();
    }
    else
    {
      v125 = 0u;
      v126 = 0u;
    }
    sub_24007CD50((uint64_t)&v125, (uint64_t)&v121, &qword_256FB4FC0);
    if (!*((_QWORD *)&v122 + 1))
      goto LABEL_72;
    if ((swift_dynamicCast() & 1) != 0)
    {
      v49 = v124;
      *(_QWORD *)&v125 = 89;
      *((_QWORD *)&v125 + 1) = 0xE100000000000000;
      v50 = objc_msgSend(v42, sel___swift_objectForKeyedSubscript_, sub_240154F40());
      swift_unknownObjectRelease();
      if (v50)
      {
        sub_240154AB4();
        swift_unknownObjectRelease();
      }
      else
      {
        v125 = 0u;
        v126 = 0u;
      }
      sub_24007CD50((uint64_t)&v125, (uint64_t)&v121, &qword_256FB4FC0);
      if (!*((_QWORD *)&v122 + 1))
        goto LABEL_72;
      if ((swift_dynamicCast() & 1) != 0)
      {
        v53 = v124;
        *(_QWORD *)&v125 = 0x6874646957;
        *((_QWORD *)&v125 + 1) = 0xE500000000000000;
        v54 = objc_msgSend(v42, sel___swift_objectForKeyedSubscript_, sub_240154F40());
        swift_unknownObjectRelease();
        if (v54)
        {
          sub_240154AB4();
          swift_unknownObjectRelease();
        }
        else
        {
          v125 = 0u;
          v126 = 0u;
        }
        sub_24007CD50((uint64_t)&v125, (uint64_t)&v121, &qword_256FB4FC0);
        if (!*((_QWORD *)&v122 + 1))
          goto LABEL_72;
        if ((swift_dynamicCast() & 1) != 0)
        {
          v57 = v124;
          *(_QWORD *)&v125 = 0x746867696548;
          *((_QWORD *)&v125 + 1) = 0xE600000000000000;
          v58 = objc_msgSend(v42, sel___swift_objectForKeyedSubscript_, sub_240154F40());
          swift_unknownObjectRelease();
          if (v58)
          {
            sub_240154AB4();
            swift_unknownObjectRelease();
          }
          else
          {
            v125 = 0u;
            v126 = 0u;
          }
          sub_24007CD50((uint64_t)&v125, (uint64_t)&v121, &qword_256FB4FC0);
          if (!*((_QWORD *)&v122 + 1))
            goto LABEL_72;
          if ((swift_dynamicCast() & 1) != 0)
          {
            LOBYTE(v121) = v117;
            LOBYTE(v125) = v116;
            sub_24007C92C(&v121, (unsigned __int8 *)&v125, (uint64_t)v128, v49, v53, v57, v124);
            sub_24007CD50((uint64_t)v128, (uint64_t)v132, &qword_256FB4FA0);
            if (v133 != 1)
            {
              v61 = *(double *)v132;
              v62 = *(double *)&v132[1];
              v63 = *(double *)&v132[2];
              v64 = *(double *)&v132[3];
              if (*(_QWORD *)(v36 + 16)
                && (v65 = sub_24013F014(0x444965636146, 0xE600000000000000), (v66 & 1) != 0)
                && (sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v65, (uint64_t)&v121), swift_dynamicCast()))
              {
                v67 = v125;
              }
              else
              {
                v67 = -1;
              }
              v107 = v67;
              if (*(_QWORD *)(v36 + 16)
                && (v75 = sub_24013F014(0x444970756F7247, 0xE700000000000000), (v76 & 1) != 0)
                && (sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v75, (uint64_t)&v121), swift_dynamicCast()))
              {
                v77 = v125;
              }
              else
              {
                v77 = -1;
              }
              v106 = v77;
              if (*(_QWORD *)(v36 + 16)
                && (v78 = sub_24013F014(0x666E49656C676E41, 0xEC0000007761596FLL), (v79 & 1) != 0)
                && (sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v78, (uint64_t)&v121), (swift_dynamicCast() & 1) != 0))
              {
                v80 = 0;
                v81 = *(double *)&v125 * 3.14159265 / 180.0;
              }
              else
              {
                v81 = 0.0;
                v80 = 1;
              }
              if (*(_QWORD *)(v36 + 16)
                && (v82 = sub_24013F014(0x666E49656C676E41, 0xEE0068637469506FLL), (v83 & 1) != 0))
              {
                sub_24007CCD8(*(_QWORD *)(v36 + 56) + 32 * v82, (uint64_t)&v121);
              }
              else
              {
                v121 = 0u;
                v122 = 0u;
              }
              swift_bridgeObjectRelease();
              v110 = v81;
              LODWORD(v109) = v80;
              if (*((_QWORD *)&v122 + 1))
              {
                if ((swift_dynamicCast() & 1) != 0)
                {
                  v105 = 0;
                  v84 = *(double *)&v125 * 3.14159265 / 180.0;
LABEL_101:
                  v88 = (uint64_t)v120;
                  v114(v120, v115, v112);
                  v89 = (uint64_t)v113;
                  sub_240154340();
                  v108 = type metadata accessor for DKFaceObservation(0);
                  swift_allocObject();
                  v90 = DKFaceObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:)(v88, v89, MEMORY[0x24BEE4AF8], v107, 0, v106, 0, *(uint64_t *)&v110, v61, v62, v63, v64, v109, 0, 1, *(uint64_t *)&v84, v105, 0, 1);
                  v91 = v111;
                  v92 = *(_QWORD **)&v32[v111];
                  v93 = v90;
                  swift_retain();
                  v94 = swift_isUniquelyReferenced_nonNull_native();
                  *(_QWORD *)&v32[v91] = v92;
                  if ((v94 & 1) == 0)
                  {
                    v92 = sub_240077EEC(0, v92[2] + 1, 1, v92);
                    *(_QWORD *)&v32[v111] = v92;
                  }
                  v96 = v92[2];
                  v95 = v92[3];
                  *(_QWORD *)&v110 = v96 + 1;
                  if (v96 >= v95 >> 1)
                  {
                    v92 = sub_240077EEC((_QWORD *)(v95 > 1), v96 + 1, 1, v92);
                    *(_QWORD *)&v32[v111] = v92;
                  }
                  *((_QWORD *)&v122 + 1) = v108;
                  v123 = sub_2400707A8(&qword_256FB4FB0, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
                  *(_QWORD *)&v121 = v93;
                  v97 = *(_QWORD *)&v110;
                  goto LABEL_113;
                }
              }
              else
              {
                sub_24007CC98((uint64_t)&v121);
              }
              v84 = 0.0;
              v105 = 1;
              goto LABEL_101;
            }
          }
        }
      }
    }
    goto LABEL_7;
  }
LABEL_114:
  swift_bridgeObjectRelease();
  return v32;
}

double static DKConversions.convert(point:orient:port:)(_BYTE *a1, _BYTE *a2, double a3)
{
  return sub_24007CD94(a1, a2, a3);
}

uint64_t DKConversions.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DKConversions.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_24007C92C(_BYTE *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>, CGFloat a4@<D0>, CGFloat a5@<D1>, CGFloat a6@<D2>, CGFloat a7@<D3>)
{
  int v12;
  double MinY;
  double MinX;
  CGFloat Height;
  double Width;
  CGFloat v17;
  CGFloat v18;
  CGFloat v19;
  double v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  CGFloat v29;
  double v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;
  CGRect v40;
  CGRect v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;
  CGRect v46;

  v12 = *a2;
  if (v12 == 1)
  {
    MinY = 0.0;
    MinX = 0.0;
    Height = 0.0;
    Width = 0.0;
    switch(*a1)
    {
      case 1:
        v17 = a4;
        MinY = CGRectGetMinY(*(CGRect *)(&a5 - 1));
        goto LABEL_12;
      case 2:
        v19 = a4;
        v20 = 1.0 - CGRectGetMinY(*(CGRect *)(&a5 - 1));
        v31.origin.x = a4;
        v31.origin.y = a5;
        v31.size.width = a6;
        v31.size.height = a7;
        MinY = v20 - CGRectGetHeight(v31);
        v32.origin.x = a4;
        v32.origin.y = a5;
        v32.size.width = a6;
        v32.size.height = a7;
        v21 = 1.0 - CGRectGetMinX(v32);
        goto LABEL_14;
      case 3:
        v22 = a4;
        MinY = CGRectGetMinX(*(CGRect *)(&a5 - 1));
        v33.origin.x = a4;
        v33.origin.y = a5;
        v33.size.width = a6;
        v33.size.height = a7;
        v23 = 1.0 - CGRectGetMinY(v33);
        goto LABEL_17;
      case 4:
        v24 = a4;
        v25 = 1.0 - CGRectGetMinX(*(CGRect *)(&a5 - 1));
        v34.origin.x = a4;
        v34.origin.y = a5;
        v34.size.width = a6;
        v34.size.height = a7;
        MinY = v25 - CGRectGetWidth(v34);
        goto LABEL_9;
      case 5:
      case 6:
        break;
      case 7:
        goto LABEL_5;
      default:
        goto LABEL_10;
    }
  }
  else
  {
    LOBYTE(v12) = 1;
    MinY = 0.0;
    MinX = 0.0;
    Height = 0.0;
    Width = 0.0;
    switch(*a1)
    {
      case 1:
        v26 = a4;
        v27 = 1.0 - CGRectGetMinY(*(CGRect *)(&a5 - 1));
        v36.origin.x = a4;
        v36.origin.y = a5;
        v36.size.width = a6;
        v36.size.height = a7;
        MinY = v27 - CGRectGetHeight(v36);
LABEL_12:
        v37.origin.x = a4;
        v37.origin.y = a5;
        v37.size.width = a6;
        v37.size.height = a7;
        MinX = CGRectGetMinX(v37);
        goto LABEL_15;
      case 2:
        v28 = a4;
        MinY = CGRectGetMinY(*(CGRect *)(&a5 - 1));
        v38.origin.x = a4;
        v38.origin.y = a5;
        v38.size.width = a6;
        v38.size.height = a7;
        v21 = 1.0 - CGRectGetMinX(v38);
LABEL_14:
        v39.origin.x = a4;
        v39.origin.y = a5;
        v39.size.width = a6;
        v39.size.height = a7;
        MinX = v21 - CGRectGetWidth(v39);
LABEL_15:
        v40.origin.x = a4;
        v40.origin.y = a5;
        v40.size.width = a6;
        v40.size.height = a7;
        Height = CGRectGetHeight(v40);
        v41.origin.x = a4;
        v41.origin.y = a5;
        v41.size.width = a6;
        v41.size.height = a7;
        Width = CGRectGetWidth(v41);
        goto LABEL_19;
      case 3:
      case 7:
LABEL_5:
        v18 = a4;
        MinY = CGRectGetMinX(*(CGRect *)(&a5 - 1));
LABEL_9:
        v35.origin.x = a4;
        v35.origin.y = a5;
        v35.size.width = a6;
        v35.size.height = a7;
        MinX = CGRectGetMinY(v35);
        goto LABEL_18;
      case 4:
        v29 = a4;
        v30 = 1.0 - CGRectGetMinX(*(CGRect *)(&a5 - 1));
        v42.origin.x = a4;
        v42.origin.y = a5;
        v42.size.width = a6;
        v42.size.height = a7;
        MinY = v30 - CGRectGetWidth(v42);
        v43.origin.x = a4;
        v43.origin.y = a5;
        v43.size.width = a6;
        v43.size.height = a7;
        v23 = 1.0 - CGRectGetMinY(v43);
LABEL_17:
        v44.origin.x = a4;
        v44.origin.y = a5;
        v44.size.width = a6;
        v44.size.height = a7;
        MinX = v23 - CGRectGetHeight(v44);
LABEL_18:
        v45.origin.x = a4;
        v45.origin.y = a5;
        v45.size.width = a6;
        v45.size.height = a7;
        Height = CGRectGetWidth(v45);
        v46.origin.x = a4;
        v46.origin.y = a5;
        v46.size.width = a6;
        v46.size.height = a7;
        Width = CGRectGetHeight(v46);
LABEL_19:
        LOBYTE(v12) = 0;
        break;
      case 5:
      case 6:
        break;
      default:
LABEL_10:
        MinX = 0.0;
        Height = 0.0;
        Width = 0.0;
        break;
    }
  }
  *(double *)a3 = MinY;
  *(double *)(a3 + 8) = MinX;
  *(CGFloat *)(a3 + 16) = Height;
  *(double *)(a3 + 24) = Width;
  *(_BYTE *)(a3 + 32) = v12;
}

uint64_t sub_24007CC80(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24007CC98(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4FC0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24007CCD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

unint64_t sub_24007CD14()
{
  unint64_t result;

  result = qword_256FB4FC8;
  if (!qword_256FB4FC8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_256FB4FC8);
  }
  return result;
}

uint64_t sub_24007CD50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

double sub_24007CD94(_BYTE *a1, _BYTE *a2, double result)
{
  double v3;

  if (*a2 == 1)
  {
    switch(*a1)
    {
      case 2:
        v3 = 1.0;
        goto LABEL_7;
      case 4:
        result = 1.0 - result;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(*a1)
    {
      case 2:
        v3 = 1.0;
LABEL_7:
        result = v3 - result;
        break;
      case 4:
        result = 1.0 - result;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t type metadata accessor for DKConversions()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKConversions()
{
  return swift_lookUpClassMethod();
}

IntelligentTrackingCore::DKCameraOrientation_optional __swiftcall DKCameraOrientation.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 8;
  if ((unint64_t)rawValue < 8)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligentTrackingCore::DKCameraOrientation_optional)rawValue;
}

uint64_t static DKCamera.convertPort(portType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6;
  char v7;

  if (result == 0x6570795474726F50 && a2 == 0xEF6E776F6E6B6E55)
  {
    v7 = 0;
  }
  else
  {
    v6 = result;
    result = sub_240154EF8();
    v7 = 0;
    if ((result & 1) == 0)
    {
      if (v6 == 0x6570795474726F50 && a2 == 0xED0000746E6F7246 || (result = sub_240154EF8(), (result & 1) != 0))
      {
        v7 = 1;
      }
      else if (v6 == 0x6570795474726F50 && a2 == 0xEC0000006B636142
             || (result = sub_240154EF8(), (result & 1) != 0))
      {
        v7 = 2;
      }
      else if (v6 == 0xD000000000000015 && a2 == 0x8000000240161E00
             || (result = sub_240154EF8(), (result & 1) != 0))
      {
        v7 = 3;
      }
      else
      {
        v7 = 4;
        if (v6 != 0xD000000000000015 || a2 != 0x8000000240161E20)
        {
          result = sub_240154EF8();
          if ((result & 1) != 0)
            v7 = 4;
          else
            v7 = 1;
        }
      }
    }
  }
  *a3 = v7;
  return result;
}

void DKCamera.port.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *DKCamera.port.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*DKCamera.port.modify())()
{
  return nullsub_1;
}

void DKCamera.orientation.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *DKCamera.orientation.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*DKCamera.orientation.modify())()
{
  return nullsub_1;
}

double DKCamera.fov.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void DKCamera.fov.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 8) = a1;
  *(double *)(v2 + 16) = a2;
}

uint64_t (*DKCamera.fov.modify())()
{
  return nullsub_1;
}

double DKCamera.fNormalized.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void DKCamera.fNormalized.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 24) = a1;
  *(double *)(v2 + 32) = a2;
}

uint64_t (*DKCamera.fNormalized.modify())()
{
  return nullsub_1;
}

uint64_t DKCamera.motion.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for DKCamera();
  return sub_240080084(v1 + *(int *)(v3 + 32), a1, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t DKCamera.motion.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for DKCamera() + 32);
  return sub_24007E4F8(a1, v3);
}

uint64_t (*DKCamera.motion.modify())()
{
  type metadata accessor for DKCamera();
  return nullsub_1;
}

uint64_t DKCamera.imageSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for DKCamera() + 40));
}

uint64_t DKCamera.imageSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for DKCamera();
  v8 = v3 + *(int *)(result + 40);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*DKCamera.imageSize.modify())()
{
  type metadata accessor for DKCamera();
  return nullsub_1;
}

__n128 DKCamera.distortionCoefficients.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  __n128 result;
  __int128 v7;

  v3 = v1 + *(int *)(type metadata accessor for DKCamera() + 44);
  v4 = *(_QWORD *)(v3 + 32);
  v5 = *(_BYTE *)(v3 + 40);
  result = *(__n128 *)v3;
  v7 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = v5;
  return result;
}

__n128 DKCamera.distortionCoefficients.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;

  v6 = (__n128)a1[1];
  v7 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_BYTE *)a1 + 40);
  v4 = v1 + *(int *)(type metadata accessor for DKCamera() + 44);
  result = v6;
  *(_OWORD *)v4 = v7;
  *(__n128 *)(v4 + 16) = v6;
  *(_QWORD *)(v4 + 32) = v2;
  *(_BYTE *)(v4 + 40) = v3;
  return result;
}

uint64_t (*DKCamera.distortionCoefficients.modify())()
{
  type metadata accessor for DKCamera();
  return nullsub_1;
}

void DKCamera.init(port:orientation:f:o:distortionCoefficients:)(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, double a3@<X2>, double a4@<X3>, int a5@<W4>, double a6@<X5>, double a7@<X6>, int a8@<W7>, uint64_t a9@<X8>, __int128 *a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  __int128 v18;
  uint64_t v19;
  char v20;
  int *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  long double v35;
  long double v36;
  long double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  __int128 v42;
  __int128 v43;
  int v44;
  __int128 v45;
  unsigned __int8 v46;
  char v47;

  v40 = a6;
  v41 = a7;
  v38 = a4;
  v39 = a3;
  v44 = a5 | a8;
  v13 = sub_240154310();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)&v45 = *a1;
  v17 = *a2;
  v18 = *a10;
  v42 = a10[1];
  v43 = v18;
  v19 = *((_QWORD *)a10 + 4);
  v20 = *((_BYTE *)a10 + 40);
  v21 = (int *)type metadata accessor for DKCamera();
  v22 = a9 + v21[8];
  sub_240154304();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v22, v16, v13);
  v23 = (int *)type metadata accessor for DKMotion3();
  *(_QWORD *)(v22 + v23[5]) = &unk_251061B98;
  *(_QWORD *)(v22 + v23[6]) = &unk_251061BD0;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  *(_QWORD *)(v22 + v23[7]) = &unk_251061C08;
  *(_BYTE *)(a9 + v21[9]) = 1;
  v24 = a9 + v21[10];
  *(_QWORD *)v24 = 0;
  *(_QWORD *)(v24 + 8) = 0;
  *(_BYTE *)(v24 + 16) = 1;
  v25 = a9 + v21[11];
  v26 = v42;
  *(_OWORD *)v25 = v43;
  *(_OWORD *)(v25 + 16) = v26;
  *(_QWORD *)(v25 + 32) = v19;
  *(_BYTE *)(v25 + 40) = v20;
  if ((v44 & 1) != 0)
    __asm { BR              X9 }
  v46 = v17;
  _s23IntelligentTrackingCore8DKCameraV14fixCalibration1f1o4port11orientationSo7CGPointVAE_AjFtAJ_AjA0D4PortOAA0D11OrientationOtFZ_0(v39, v38, v40, v41, (uint64_t)&v47, &v46);
  if ((v17 - 3) > 1)
  {
    v31 = v28;
    v32 = v30;
    v28 = v27;
    v30 = v29;
  }
  else
  {
    v31 = v27;
    v32 = v29;
  }
  v33 = v31 * 0.5 / v32;
  v34 = v28 * 0.5 / v30;
  *(double *)(a9 + 24) = v33;
  *(double *)(a9 + 32) = v34;
  v35 = atan(0.5 / v33);
  v36 = v35 + v35;
  v37 = atan(0.5 / v34);
  *(long double *)(a9 + 8) = v36;
  *(long double *)(a9 + 16) = v37 + v37;
  *(_BYTE *)a9 = v45;
  *(_BYTE *)(a9 + 1) = v17;
}

double static DKCamera.defaultIntrinsicsForCamera(port:orientation:)@<D0>(unsigned __int8 *a1@<X0>, _OWORD *a2@<X8>)
{
  double result;
  __int128 v4;
  __int128 v5;
  __int128 v6;

  sub_24007FFB0(a1);
  *a2 = v4;
  a2[1] = v5;
  result = *(double *)&v6;
  a2[2] = v6;
  return result;
}

void DKCamera.init(port:orientation:intrinsics:distortionCoefficients:)(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, void *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  int *v16;
  double *v17;
  int *v18;
  void (*v19)(char *, uint64_t);
  int v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  void *v24;
  unint64_t v25;
  double *v26;
  unint64_t v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  double *v32;
  unint64_t v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  double v43;
  long double v44;
  long double v45;
  long double v46;
  uint64_t v47;
  int v48;
  __int128 v49;
  __int128 v50;
  int v51;
  void *v52;
  unsigned __int8 v53;
  char v54;
  _QWORD *v55;

  v52 = a3;
  v9 = sub_240154310();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = *a1;
  v13 = *a2;
  v14 = *a4;
  v49 = a4[1];
  v50 = v14;
  v15 = *((_QWORD *)a4 + 4);
  v48 = *((unsigned __int8 *)a4 + 40);
  v16 = (int *)type metadata accessor for DKCamera();
  v17 = (double *)(a5 + v16[8]);
  sub_240154304();
  (*(void (**)(double *, char *, uint64_t))(v10 + 16))(v17, v12, v9);
  v18 = (int *)type metadata accessor for DKMotion3();
  *(_QWORD *)((char *)v17 + v18[5]) = &unk_251061B98;
  *(_QWORD *)((char *)v17 + v18[6]) = &unk_251061BD0;
  v19 = *(void (**)(char *, uint64_t))(v10 + 8);
  v20 = v13;
  v19(v12, v9);
  *(_QWORD *)((char *)v17 + v18[7]) = &unk_251061C08;
  *(_BYTE *)(a5 + v16[9]) = 1;
  v21 = a5 + v16[10];
  *(_QWORD *)v21 = 0;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 1;
  v22 = a5 + v16[11];
  v23 = v49;
  *(_OWORD *)v22 = v50;
  *(_OWORD *)(v22 + 16) = v23;
  *(_QWORD *)(v22 + 32) = v15;
  *(_BYTE *)(v22 + 40) = v48;
  v24 = v52;
  *(_BYTE *)a5 = v51;
  *(_BYTE *)(a5 + 1) = v20;
  v55 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E30);
  sub_24015479C();
  if (!v55)
    goto LABEL_9;
  v25 = v55[2];
  if (v25 > 3)
  {
    v26 = (double *)v55[7];
    v27 = *((_QWORD *)v26 + 2);
    if (v27)
    {
      if (v25 >= 5)
      {
        v17 = (double *)v55[8];
        if (*((_QWORD *)v17 + 2) >= 2uLL)
        {
          if (v27 >= 3)
          {
            v28 = v26[4];
            v29 = v17[5];
            v30 = v26[6];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            if (*((_QWORD *)v17 + 2) < 3uLL)
            {
              __break(1u);
LABEL_9:
              sub_240080040();
              swift_allocError();
              *(_QWORD *)v31 = 0xD00000000000001BLL;
              *(_QWORD *)(v31 + 8) = 0x8000000240161E40;
              *(_BYTE *)(v31 + 16) = 0;
              swift_willThrow();

              sub_2400800C8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
              return;
            }
            goto LABEL_16;
          }
          goto LABEL_29;
        }
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_28;
  }
  if (!v25)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v32 = (double *)v55[4];
  v33 = *((_QWORD *)v32 + 2);
  if (!v33)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v25 < 2)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v17 = (double *)v55[5];
  if (*((_QWORD *)v17 + 2) < 2uLL)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v33 < 3)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v28 = v32[4];
  v29 = v17[5];
  v30 = v32[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v17 + 2) < 3uLL)
  {
LABEL_35:
    __break(1u);
    return;
  }
LABEL_16:
  v34 = v17[6];
  swift_bridgeObjectRelease();
  v53 = v20;
  _s23IntelligentTrackingCore8DKCameraV14fixCalibration1f1o4port11orientationSo7CGPointVAE_AjFtAJ_AjA0D4PortOAA0D11OrientationOtFZ_0(v28, v29, v30, v34, (uint64_t)&v54, &v53);
  if ((v20 - 3) <= 1)
    v39 = v35;
  else
    v39 = v36;
  if ((v20 - 3) <= 1)
    v40 = v37;
  else
    v40 = v38;
  if ((v20 - 3) > 1)
  {
    v41 = v37;
  }
  else
  {
    v35 = v36;
    v41 = v38;
  }
  v42 = v39 * 0.5 / v40;
  v43 = v35 * 0.5 / v41;
  *(double *)(a5 + 24) = v42;
  *(double *)(a5 + 32) = v43;

  v44 = atan(0.5 / v42);
  v45 = v44 + v44;
  v46 = atan(0.5 / v43);
  *(long double *)(a5 + 8) = v45;
  *(long double *)(a5 + 16) = v46 + v46;
}

void DKCamera.init(port:orientation:intrinsics:distortionCoefficients:)(unsigned __int8 *a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  int *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  float v24;
  float v25;
  __int128 v26;
  uint64_t v27;
  int v28;
  double v29;
  double v30;
  double v31;
  double v32;
  unsigned int v33;
  double v34;
  double v35;
  double v36;
  double v37;
  double v38;
  long double v39;
  long double v40;
  long double v41;
  int v42;
  int v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  unsigned __int8 v47;
  char v48;

  v46 = a3;
  v9 = sub_240154310();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *a1;
  v42 = *a2;
  v43 = v13;
  v14 = *a4;
  v44 = a4[1];
  v45 = v14;
  v15 = *((_QWORD *)a4 + 4);
  v16 = *((_BYTE *)a4 + 40);
  v17 = (int *)type metadata accessor for DKCamera();
  v18 = a5 + v17[8];
  sub_240154304();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v18, v12, v9);
  v19 = (int *)type metadata accessor for DKMotion3();
  *(_QWORD *)(v18 + v19[5]) = &unk_251061B98;
  *(_QWORD *)(v18 + v19[6]) = &unk_251061BD0;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v20 = v46;
  *(_QWORD *)(v18 + v19[7]) = &unk_251061C08;
  *(_BYTE *)(a5 + v17[9]) = 1;
  v21 = a5 + v17[10];
  *(_QWORD *)v21 = 0;
  *(_QWORD *)(v21 + 8) = 0;
  *(_BYTE *)(v21 + 16) = 1;
  v22 = a5 + v17[11];
  v23 = v44;
  *(_OWORD *)v22 = v45;
  *(_OWORD *)(v22 + 16) = v23;
  *(_QWORD *)(v22 + 32) = v15;
  *(_BYTE *)(v22 + 40) = v16;
  v24 = *(float *)v20;
  if (*(float *)v20 >= COERCE_FLOAT(1)
    && (v25 = *(float *)(v20 + 20), v25 >= COERCE_FLOAT(1))
    && (v26 = *(_OWORD *)(v20 + 32), *(float *)&v26 >= COERCE_FLOAT(1))
    && *((float *)&v26 + 1) >= COERCE_FLOAT(1))
  {
    v28 = v42;
    v47 = v42;
    _s23IntelligentTrackingCore8DKCameraV14fixCalibration1f1o4port11orientationSo7CGPointVAE_AjFtAJ_AjA0D4PortOAA0D11OrientationOtFZ_0(v24, v25, *(float *)&v26, *((float *)&v26 + 1), (uint64_t)&v48, &v47);
    v33 = v28 - 3;
    if ((v28 - 3) <= 1)
      v34 = v29;
    else
      v34 = v30;
    if (v33 <= 1)
      v35 = v31;
    else
      v35 = v32;
    if (v33 > 1)
    {
      v36 = v31;
    }
    else
    {
      v29 = v30;
      v36 = v32;
    }
    v37 = v34 * 0.5 / v35;
    v38 = v29 * 0.5 / v36;
    *(double *)(a5 + 24) = v37;
    *(double *)(a5 + 32) = v38;
    v39 = atan(0.5 / v37);
    v40 = v39 + v39;
    v41 = atan(0.5 / v38);
    *(long double *)(a5 + 8) = v40;
    *(long double *)(a5 + 16) = v41 + v41;
    *(_BYTE *)a5 = v43;
    *(_BYTE *)(a5 + 1) = v28;
  }
  else
  {
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v27 = 0xD00000000000001DLL;
    *(_QWORD *)(v27 + 8) = 0x8000000240161E60;
    *(_BYTE *)(v27 + 16) = 0;
    swift_willThrow();
    sub_2400800C8(v18, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  }
}

CGPoint __swiftcall DKCamera.cameraToWorldRelative(point:)(CGPoint point)
{
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  long double v5;
  double v6;
  double v7;
  CGPoint result;

  sub_24007DCF8(5, point.x, point.y);
  v3 = v2;
  v5 = atan2(-(v4 + -0.5), *(long double *)(v1 + 24));
  v6 = atan2(v3 + -0.5, *(long double *)(v1 + 32));
  v7 = v5;
  result.y = v6;
  result.x = v7;
  return result;
}

uint64_t sub_24007DCF8(uint64_t a1, float64_t a2, float64_t a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v6;
  float64x2_t v7;
  double v8;
  double v9;
  double v10;
  float64x2_t v11;
  float64x2_t v12;
  float64x2_t v13;
  uint64_t v14;
  float64x2_t v15;
  float64x2_t v16;
  float64x2_t v17;

  result = type metadata accessor for DKCamera();
  v7.f64[0] = a2;
  v6 = v3 + *(int *)(result + 44);
  v7.f64[1] = a3;
  if ((*(_BYTE *)(v6 + 40) & 1) == 0)
  {
    if (a1 < 1)
    {
LABEL_9:
      __break(1u);
    }
    else
    {
      v8 = *(double *)(v6 + 32);
      v10 = *(double *)v6;
      v9 = *(double *)(v6 + 8);
      v11 = *(float64x2_t *)(v6 + 16);
      v12 = vaddq_f64(v11, v11);
      v13 = (float64x2_t)vextq_s8((int8x16_t)v11, (int8x16_t)v11, 8uLL);
      v14 = 1;
      while (1)
      {
        v15 = vmulq_f64(v7, v7);
        v16 = vaddq_f64((float64x2_t)vdupq_laneq_s64((int64x2_t)v15, 1), v15);
        v17 = vmulq_f64(v16, v16);
        v7 = vdivq_f64(vsubq_f64(v7, vaddq_f64(vmulq_laneq_f64(vmulq_n_f64(v12, v7.f64[0]), v7, 1), vmulq_f64(v13, vaddq_f64((float64x2_t)vdupq_lane_s64(*(uint64_t *)&v16.f64[0], 0), vmulq_f64(v7, vaddq_f64(v7, v7)))))), (float64x2_t)vdupq_lane_s64(COERCE__INT64(v10 * vaddvq_f64(v15) + 1.0 + v9 * v17.f64[0] + v8* vmulq_f64(v16, v17).f64[0]), 0));
        if (a1 == v14)
          break;
        if (__OFADD__(v14++, 1))
        {
          __break(1u);
          goto LABEL_9;
        }
      }
    }
  }
  return result;
}

CGSize __swiftcall DKCamera.cameraToWorldRelative(size:distance:)(CGSize size, Swift::Double distance)
{
  uint64_t v2;
  CGFloat height;
  float64x2_t v4;
  double v5;
  CGSize result;

  height = size.height;
  v4 = vdivq_f64(vmulq_n_f64(vmulq_f64(*(float64x2_t *)(v2 + 8), (float64x2_t)__PAIR128__(*(unint64_t *)&height, *(unint64_t *)&size.width)), distance), *(float64x2_t *)(v2 + 24));
  v5 = v4.f64[1];
  result.width = v4.f64[0];
  result.height = v5;
  return result;
}

__C::CGRect __swiftcall DKCamera.cameraToWorldRelative(rect:distance:)(__C::CGRect rect, Swift::Double distance)
{
  double *v2;
  double height;
  double width;
  CGFloat y;
  CGFloat x;
  CGFloat MidX;
  CGFloat MidY;
  double v10;
  double v11;
  double v12;
  long double v13;
  double v14;
  long double v15;
  long double v16;
  long double v17;
  double v18;
  double v19;
  double v20;
  double v21;
  CGRect v22;
  __C::CGRect result;

  height = rect.size.height;
  width = rect.size.width;
  y = rect.origin.y;
  x = rect.origin.x;
  MidX = CGRectGetMidX((CGRect)rect);
  v22.origin.x = x;
  v22.origin.y = y;
  v22.size.width = width;
  v22.size.height = height;
  MidY = CGRectGetMidY(v22);
  sub_24007DCF8(5, MidX, MidY);
  v11 = v10;
  v13 = v2[3];
  v14 = atan2(-(v12 + -0.5), v13);
  v15 = v11 + -0.5;
  v16 = v2[4];
  v17 = atan2(v15, v16);
  v18 = v2[1] * width * distance / v13;
  v19 = v2[2] * height * distance / v16;
  v20 = v17 + v19 * -0.5;
  v21 = v14 + v18 * -0.5;
  result.size.height = v19;
  result.size.width = v18;
  result.origin.y = v20;
  result.origin.x = v21;
  return result;
}

void __swiftcall DKCamera.cameraToWorld(rect:distance:)(Swift::tuple_worldRect___C_CGRect_distance_Double *__return_ptr retstr, __C::CGRect rect, Swift::Double_optional distance)
{
  char v3;
  uint64_t v4;
  char v5;
  double v6;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  uint64_t v12;
  uint64_t v13;
  double *v14;
  uint64_t (*v15)(_QWORD);
  double v16;
  double v17;
  double v18;
  double v19;
  CGFloat v20;
  CGFloat v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  CGFloat v25;
  uint64_t v26;
  CGRect v27;
  CGRect v28;
  __C::CGRect v29;
  __C::CGRect v30;

  v5 = v3;
  v6 = *(double *)&distance.is_nil;
  height = rect.size.height;
  width = rect.size.width;
  y = rect.origin.y;
  x = rect.origin.x;
  v12 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (double *)((char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240080084(v4, (uint64_t)v14, v15);
  if ((v5 & 1) != 0)
  {
    v27.origin.x = x;
    v27.origin.y = y;
    v27.size.width = width;
    v27.size.height = height;
    v16 = 10.0;
    if (CGRectGetWidth(v27) >= 1.0e-10)
    {
      v17 = v14[3] * 0.115;
      v28.origin.x = x;
      v28.origin.y = y;
      v28.size.width = width;
      v28.size.height = height;
      v16 = v17 / CGRectGetWidth(v28);
    }
  }
  else
  {
    v16 = v6;
  }
  sub_2400800C8((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v29.origin.x = x;
  v29.origin.y = y;
  v29.size.width = width;
  v29.size.height = height;
  v30 = DKCamera.cameraToWorldRelative(rect:distance:)(v29, v16);
  v18 = v30.origin.x;
  v19 = v30.origin.y;
  v20 = v30.size.width;
  v21 = v30.size.height;
  v22 = v4 + *(int *)(v12 + 32);
  v23 = *(_QWORD *)(v22 + *(int *)(type metadata accessor for DKMotion3() + 20));
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    if (v24 != 1)
    {
      v25 = v19 + *(double *)(v23 + 40);
      retstr->worldRect.origin.x = v18 + *(double *)(v23 + 32);
      retstr->worldRect.origin.y = v25;
      retstr->worldRect.size.width = v20;
      retstr->worldRect.size.height = v21;
      retstr->distance = v16;
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

Swift::Double __swiftcall DKCamera.heuristicDistance(rect:type:)(__C::CGRect rect, IntelligentTrackingCore::DKObservationType type)
{
  uint64_t v2;
  CGFloat height;
  CGFloat width;
  CGFloat y;
  CGFloat x;
  int v7;
  double v8;
  Swift::Double result;
  double v10;
  double v11;
  CGRect v12;

  height = rect.size.height;
  width = rect.size.width;
  y = rect.origin.y;
  x = rect.origin.x;
  v7 = *(unsigned __int8 *)type;
  v8 = CGRectGetWidth((CGRect)rect);
  result = 10.0;
  if (v8 >= 1.0e-10)
  {
    v10 = 0.115;
    if (v7 == 1)
      v10 = 0.35;
    v11 = *(double *)(v2 + 24) * v10;
    v12.origin.x = x;
    v12.origin.y = y;
    v12.size.width = width;
    v12.size.height = height;
    return v11 / CGRectGetWidth(v12);
  }
  return result;
}

CGPoint __swiftcall DKCamera.worldToCameraRelative(point:)(CGPoint point)
{
  uint64_t v1;
  long double v2;
  double v3;
  long double v4;
  long double v5;
  double v6;
  double v7;
  CGPoint result;

  *(_QWORD *)&v2 = *(_OWORD *)&sub_24007E148(point.x, point.y);
  v4 = v3;
  v5 = 0.5 - tan(v2) * *(double *)(v1 + 24);
  v6 = tan(v4) * *(double *)(v1 + 32) + 0.5;
  v7 = v5;
  result.y = v6;
  result.x = v7;
  return result;
}

float64x2_t sub_24007E148(double a1, float64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  float64x2_t result;
  uint64_t v5;

  v3 = v2 + *(int *)(type metadata accessor for DKCamera() + 44);
  result.f64[0] = a1;
  result.f64[1] = a2;
  if ((*(_BYTE *)(v3 + 40) & 1) == 0)
  {
    *(double *)&v5 = a1 * a1 + a2 * a2;
    return vaddq_f64(vaddq_f64(vmulq_f64(vaddq_f64(vmulq_f64(vaddq_f64(result, result), result), (float64x2_t)vdupq_lane_s64(v5, 0)), (float64x2_t)vextq_s8(*(int8x16_t *)(v3 + 16), *(int8x16_t *)(v3 + 16), 8uLL)), vmulq_laneq_f64(vmulq_n_f64(vaddq_f64(*(float64x2_t *)(v3 + 16), *(float64x2_t *)(v3 + 16)), a1), result, 1)), vmulq_n_f64(result, *(double *)&v5 * (*(double *)&v5 * *(double *)&v5) * *(double *)(v3 + 32)+ *(double *)&v5 * *(double *)&v5 * *(double *)(v3 + 8)+ *(double *)&v5 * *(double *)v3+ 1.0));
  }
  return result;
}

CGSize __swiftcall DKCamera.worldToCameraRelative(size:distance:)(CGSize size, Swift::Double distance)
{
  uint64_t v2;
  CGFloat height;
  float64x2_t v4;
  double v5;
  CGSize result;

  height = size.height;
  v4 = vdivq_f64(vdivq_f64(vmulq_f64(*(float64x2_t *)(v2 + 24), (float64x2_t)__PAIR128__(*(unint64_t *)&height, *(unint64_t *)&size.width)), (float64x2_t)vdupq_lane_s64(*(uint64_t *)&distance, 0)), *(float64x2_t *)(v2 + 8));
  v5 = v4.f64[1];
  result.width = v4.f64[0];
  result.height = v5;
  return result;
}

__C::CGRect __swiftcall DKCamera.worldToCameraRelative(rect:distance:)(__C::CGRect rect, Swift::Double distance)
{
  double *v2;
  double height;
  double width;
  CGFloat y;
  CGFloat x;
  double MidX;
  CGFloat MidY;
  long double v10;
  double v11;
  long double v12;
  long double v13;
  double v14;
  long double v15;
  long double v16;
  double v17;
  double v18;
  long double v19;
  double v20;
  double v21;
  double v22;
  CGRect v23;
  __C::CGRect result;

  height = rect.size.height;
  width = rect.size.width;
  y = rect.origin.y;
  x = rect.origin.x;
  MidX = CGRectGetMidX((CGRect)rect);
  v23.origin.x = x;
  v23.origin.y = y;
  v23.size.width = width;
  v23.size.height = height;
  MidY = CGRectGetMidY(v23);
  *(_QWORD *)&v10 = *(_OWORD *)&sub_24007E148(MidX, MidY);
  v12 = v11;
  v13 = tan(v10);
  v14 = v2[3];
  v15 = 0.5 - v13 * v14;
  v16 = tan(v12);
  v17 = v14 * width / distance / v2[1];
  v18 = v2[4];
  v19 = v16 * v18 + 0.5;
  v20 = v18 * height / distance / v2[2];
  v21 = v15 - v17 * 0.5;
  v22 = v19 - v20 * 0.5;
  result.size.height = v20;
  result.size.width = v17;
  result.origin.y = v22;
  result.origin.x = v21;
  return result;
}

__C::CGRect __swiftcall DKCamera.worldToCamera(rect:distance:clampToBorders:)(__C::CGRect rect, Swift::Double distance, Swift::Bool clampToBorders)
{
  uint64_t v3;
  double height;
  double width;
  CGFloat y;
  CGFloat x;
  double MidX;
  uint64_t v11;
  uint64_t v12;
  double MidY;
  double v14;
  double v15;
  double v16;
  double i;
  double v18;
  float64x2_t v19;
  float64x2_t v20;
  float64x2_t v26;
  float64x2_t v28;
  float64x2_t v29;
  double v30;
  CGRect v31;
  CGRect v32;
  CGRect v33;
  __C::CGRect v34;
  __C::CGRect result;

  height = rect.size.height;
  width = rect.size.width;
  y = rect.origin.y;
  x = rect.origin.x;
  MidX = CGRectGetMidX((CGRect)rect);
  v31.origin.x = x;
  v31.origin.y = y;
  v31.size.width = width;
  v31.size.height = height;
  CGRectGetMidY(v31);
  v11 = v3 + *(int *)(type metadata accessor for DKCamera() + 32);
  v12 = *(_QWORD *)(v11 + *(int *)(type metadata accessor for DKMotion3() + 20));
  if (!*(_QWORD *)(v12 + 16))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto _$s23IntelligentTrackingCore8DKCameraV13worldToCamera4rect8distance05clampF7BordersSo6CGRectVAI_SdSbtF;
  }
  for (i = MidX - *(double *)(v12 + 32); i > 3.14159265; i = i + -6.28318531)
    ;
  for (; i < -3.14159265; i = i + 6.28318531)
    ;
  v30 = i;
  v32.origin.x = x;
  v32.origin.y = y;
  v32.size.width = width;
  v32.size.height = height;
  CGRectGetMidX(v32);
  v33.origin.x = x;
  v33.origin.y = y;
  v33.size.width = width;
  v33.size.height = height;
  MidY = CGRectGetMidY(v33);
  if (*(_QWORD *)(v12 + 16) < 2uLL)
    goto LABEL_18;
  v18 = MidY - *(double *)(v12 + 40);
  if (v18 > 3.14159265)
  {
    v19.f64[0] = v30;
    do
      v18 = v18 + -6.28318531;
    while (v18 > 3.14159265);
    if (v18 >= -3.14159265)
      goto LABEL_14;
    goto LABEL_13;
  }
  for (v19.f64[0] = v30; v18 < -3.14159265; v18 = v18 + 6.28318531)
LABEL_13:
    ;
LABEL_14:
  v19.f64[1] = v18;
  if (clampToBorders)
  {
    v20 = *(float64x2_t *)(v3 + 8);
    __asm { FMOV            V1.2D, #-0.5 }
    v26 = vmulq_f64(v20, _Q1);
    __asm { FMOV            V2.2D, #0.5 }
    v28 = vmulq_f64(v20, _Q2);
    v29 = (float64x2_t)vbslq_s8((int8x16_t)vcgeq_f64(v19, v26), (int8x16_t)v19, (int8x16_t)v26);
    v19 = (float64x2_t)vbslq_s8((int8x16_t)vcgtq_f64(v29, v28), (int8x16_t)v28, (int8x16_t)v29);
  }
  v34.origin.x = v19.f64[0] - width * 0.5;
  v34.origin.y = v19.f64[1] - height * 0.5;
  v34.size.width = width;
  v34.size.height = height;
  *(__C::CGRect *)&MidY = DKCamera.worldToCameraRelative(rect:distance:)(v34, distance);
_$s23IntelligentTrackingCore8DKCameraV13worldToCamera4rect8distance05clampF7BordersSo6CGRectVAI_SdSbtF:
  result.size.height = v16;
  result.size.width = v15;
  result.origin.y = v14;
  result.origin.x = MidY;
  return result;
}

uint64_t type metadata accessor for DKCamera()
{
  uint64_t result;

  result = qword_256FB5168;
  if (!qword_256FB5168)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24007E4F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

CGImagePropertyOrientation __swiftcall DKCamera.getCGImagePropertyOrientation()()
{
  _BYTE *v0;
  _DWORD *v1;

  if ((v0[1] - 1) > 3u)
    return 1;
  v1 = &unk_2401566C0;
  if (*v0 == 1)
    v1 = &unk_2401566B0;
  return v1[(char)(v0[1] - 1)];
}

uint64_t sub_24007E584(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24007E5B0 + 4 * byte_2401566D5[a1]))(1953656688, 0xE400000000000000);
}

uint64_t sub_24007E5B0()
{
  return 0x7461746E6569726FLL;
}

uint64_t sub_24007E5D0()
{
  return 7761766;
}

uint64_t sub_24007E5E0()
{
  return 0x696C616D726F4E66;
}

uint64_t sub_24007E600()
{
  return 0x6E6F69746F6DLL;
}

uint64_t sub_24007E614()
{
  return 0x6F69746174537369;
}

uint64_t sub_24007E634()
{
  return 0x7A69536567616D69;
}

unint64_t sub_24007E650()
{
  return 0xD000000000000016;
}

uint64_t sub_24007E66C()
{
  unsigned __int8 *v0;

  return sub_24007E584(*v0);
}

uint64_t sub_24007E674@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_240081090(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24007E698()
{
  return 0;
}

void sub_24007E6A4(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_24007E6B0()
{
  sub_240080128();
  return sub_240155048();
}

uint64_t sub_24007E6D8()
{
  sub_240080128();
  return sub_240155054();
}

uint64_t DKCamera.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  __int128 *v10;
  char v11;
  __int128 *v12;
  uint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  char v23;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5070);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240080128();
  sub_240155030();
  LOBYTE(v19) = *(_BYTE *)v3;
  v23 = 0;
  sub_24008016C();
  sub_240154E80();
  if (!v2)
  {
    LOBYTE(v19) = *(_BYTE *)(v3 + 1);
    v23 = 1;
    sub_2400801B0();
    sub_240154E80();
    v19 = *(_OWORD *)(v3 + 8);
    v23 = 2;
    type metadata accessor for CGSize(0);
    sub_2400707A8(&qword_256FB5090, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD848]);
    sub_240154E80();
    v19 = *(_OWORD *)(v3 + 24);
    v23 = 3;
    type metadata accessor for CGPoint(0);
    sub_2400707A8(&qword_256FB5098, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDBD878]);
    sub_240154E80();
    v18 = type metadata accessor for DKCamera();
    LOBYTE(v19) = 4;
    type metadata accessor for DKMotion3();
    sub_2400707A8(&qword_256FB50A0, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    sub_240154E80();
    v9 = v18;
    LOBYTE(v19) = 5;
    sub_240154E5C();
    v10 = (__int128 *)(v3 + *(int *)(v9 + 40));
    v11 = *((_BYTE *)v10 + 16);
    v19 = *v10;
    LOBYTE(v20) = v11;
    v23 = 6;
    sub_240154E50();
    v12 = (__int128 *)(v3 + *(int *)(v9 + 44));
    v13 = *((_QWORD *)v12 + 4);
    v14 = *((_BYTE *)v12 + 40);
    v15 = v12[1];
    v19 = *v12;
    v20 = v15;
    v21 = v13;
    v22 = v14;
    v23 = 7;
    sub_2400801F4();
    sub_240154E50();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t DKCamera.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  char *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  _BYTE *v47;
  char *v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  char v52;
  char v53;

  v41 = a2;
  v3 = (int *)type metadata accessor for DKMotion3();
  MEMORY[0x24BDAC7A8](v3);
  v43 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB50B0);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v48 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for DKCamera();
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t)&v13[*(int *)(v11 + 32)];
  sub_240154304();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(v14, v9, v6);
  *(_QWORD *)(v14 + v3[5]) = &unk_251061B98;
  *(_QWORD *)(v14 + v3[6]) = &unk_251061BD0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v15 = v3[7];
  v45 = a1;
  v46 = v14;
  *(_QWORD *)(v14 + v15) = &unk_251061C08;
  v16 = v10[9];
  v13[v16] = 1;
  v17 = &v13[v10[10]];
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = 1;
  v18 = &v13[v10[11]];
  *((_QWORD *)v18 + 4) = 0;
  *(_OWORD *)v18 = 0u;
  *((_OWORD *)v18 + 1) = 0u;
  v18[40] = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240080128();
  v19 = v47;
  sub_240155024();
  if (v19)
  {
    v25 = v46;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    v36 = type metadata accessor for DKMotion3;
    v35 = v25;
  }
  else
  {
    v38 = v18;
    v39 = v17;
    v40 = v16;
    v47 = v13;
    v21 = v42;
    v20 = (uint64_t)v43;
    v53 = 0;
    sub_240080258();
    v22 = v44;
    sub_240154DFC();
    v23 = v47;
    *v47 = v49;
    v53 = 1;
    sub_24008029C();
    sub_240154DFC();
    v23[1] = v49;
    type metadata accessor for CGSize(0);
    v53 = 2;
    v24 = sub_2400707A8(&qword_256FB50C8, (uint64_t (*)(uint64_t))type metadata accessor for CGSize, MEMORY[0x24BDBD860]);
    sub_240154DFC();
    v37 = v24;
    *(_OWORD *)(v23 + 8) = v49;
    type metadata accessor for CGPoint(0);
    v53 = 3;
    sub_2400707A8(&qword_256FB50D0, (uint64_t (*)(uint64_t))type metadata accessor for CGPoint, MEMORY[0x24BDBD888]);
    sub_240154DFC();
    *(_OWORD *)(v23 + 24) = v49;
    LOBYTE(v49) = 4;
    sub_2400707A8(&qword_256FB50D8, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    sub_240154DFC();
    sub_24007E4F8(v20, v46);
    LOBYTE(v49) = 5;
    v47[v40] = sub_240154DD8() & 1;
    v53 = 6;
    sub_240154DCC();
    v27 = v50;
    v28 = v39;
    *(_OWORD *)v39 = v49;
    v28[16] = v27;
    v53 = 7;
    sub_2400802E0();
    v29 = v48;
    sub_240154DCC();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v29, v22);
    v30 = v51;
    v31 = v52;
    v32 = v50;
    v33 = v38;
    *(_OWORD *)v38 = v49;
    *((_OWORD *)v33 + 1) = v32;
    *((_QWORD *)v33 + 4) = v30;
    v33[40] = v31;
    v34 = v47;
    sub_240080084((uint64_t)v47, v41, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
    v35 = (uint64_t)v34;
    v36 = type metadata accessor for DKCamera;
  }
  return sub_2400800C8(v35, (uint64_t (*)(_QWORD))v36);
}

uint64_t sub_24007EF88@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKCamera.init(from:)(a1, a2);
}

uint64_t sub_24007EF9C(_QWORD *a1)
{
  return DKCamera.encode(to:)(a1);
}

void __swiftcall DKCameraDistortionParameters.init(k1:k2:p1:p2:k3:)(IntelligentTrackingCore::DKCameraDistortionParameters *__return_ptr retstr, Swift::Double k1, Swift::Double k2, Swift::Double p1, Swift::Double p2, Swift::Double k3)
{
  retstr->k1 = k1;
  retstr->k2 = k2;
  retstr->p1 = p1;
  retstr->p2 = p2;
  retstr->k3 = k3;
}

uint64_t sub_24007EFC8()
{
  char *v0;

  return qword_240156DA8[*v0];
}

uint64_t sub_24007EFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_240081400(a1, a2);
  *a3 = result;
  return result;
}

void sub_24007F004(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24007F010()
{
  sub_240080324();
  return sub_240155048();
}

uint64_t sub_24007F038()
{
  sub_240080324();
  return sub_240155054();
}

uint64_t DKCameraDistortionParameters.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;
  char v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB50E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240080324();
  sub_240155030();
  v13 = 0;
  sub_240154E68();
  if (!v1)
  {
    v12 = 1;
    sub_240154E68();
    v11 = 2;
    sub_240154E68();
    v10 = 3;
    sub_240154E68();
    v9 = 4;
    sub_240154E68();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKCameraDistortionParameters.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v20[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB50F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v20[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240080324();
  sub_240155024();
  if (!v2)
  {
    v20[15] = 0;
    sub_240154DE4();
    v10 = v9;
    v20[14] = 1;
    sub_240154DE4();
    v12 = v11;
    v20[13] = 2;
    sub_240154DE4();
    v14 = v13;
    v20[12] = 3;
    sub_240154DE4();
    v17 = v16;
    v20[11] = 4;
    sub_240154DE4();
    v19 = v18;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
    a2[2] = v14;
    a2[3] = v17;
    a2[4] = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24007F3EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DKCameraDistortionParameters.init(from:)(a1, a2);
}

uint64_t sub_24007F400(_QWORD *a1)
{
  return DKCameraDistortionParameters.encode(to:)(a1);
}

IntelligentTrackingCore::DKCameraPort_optional __swiftcall DKCameraPort.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  BOOL v3;
  void *object;
  uint64_t countAndFlagsBits;
  IntelligentTrackingCore::DKCameraPort_optional result;
  char v7;
  char v8;

  v2 = v1;
  v3 = rawValue._countAndFlagsBits == 0x6570795474726F50 && rawValue._object == (void *)0xEF6E776F6E6B6E55;
  if (v3 || (object = rawValue._object, countAndFlagsBits = rawValue._countAndFlagsBits, (sub_240154EF8() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else if (countAndFlagsBits == 0x6570795474726F50 && object == (void *)0xED0000746E6F7246
         || (sub_240154EF8() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 1;
  }
  else if (countAndFlagsBits == 0x6570795474726F50 && object == (void *)0xEC0000006B636142
         || (sub_240154EF8() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 2;
  }
  else if (countAndFlagsBits == 0xD000000000000015 && object == (void *)0x8000000240161E00
         || (sub_240154EF8() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 3;
  }
  else if (countAndFlagsBits == 0xD000000000000015 && object == (void *)0x8000000240161E20)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 4;
  }
  else
  {
    v8 = sub_240154EF8();
    result.value = swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      v7 = 4;
    else
      v7 = 5;
  }
  *v2 = v7;
  return result;
}

IntelligentTrackingCore::DKCameraPort_optional __swiftcall DKCameraPort.init(position:deviceType:)(AVCaptureDevicePosition position, AVCaptureDeviceType deviceType)
{
  char *v2;
  char *v4;
  IntelligentTrackingCore::DKCameraPort_optional result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v4 = v2;
  if (position == AVCaptureDevicePositionFront)
  {

    v6 = 1;
    goto LABEL_20;
  }
  v7 = sub_24015464C();
  v9 = v8;
  if (v7 == sub_24015464C() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  v12 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
LABEL_17:

    v6 = 4;
    goto LABEL_20;
  }
  v13 = sub_24015464C();
  v15 = v14;
  if (v13 == sub_24015464C() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  v18 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v18 & 1) != 0)
  {
LABEL_19:

    v6 = 3;
    goto LABEL_20;
  }
  v19 = sub_24015464C();
  v21 = v20;
  if (v19 == sub_24015464C() && v21 == v22)
  {

    v6 = 2;
    result.value = swift_bridgeObjectRelease_n();
  }
  else
  {
    v23 = sub_240154EF8();

    swift_bridgeObjectRelease();
    result.value = swift_bridgeObjectRelease();
    if ((v23 & 1) != 0)
      v6 = 2;
    else
      v6 = 5;
  }
LABEL_20:
  *v4 = v6;
  return result;
}

uint64_t DKCameraPort.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24007F87C + 4 * byte_2401566DD[*v0]))(0x6570795474726F50, 0xEF6E776F6E6B6E55);
}

unint64_t sub_24007F8A0()
{
  return 0xD000000000000015;
}

IntelligentTrackingCore::DKCameraPort_optional __swiftcall DKCameraPort.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 5;
  if ((unint64_t)rawValue < 5)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligentTrackingCore::DKCameraPort_optional)rawValue;
}

uint64_t DKCameraPort.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

IntelligentTrackingCore::DKCameraPort_optional sub_24007F8E4(Swift::Int *a1)
{
  return DKCameraPort.init(rawValue:)(*a1);
}

uint64_t sub_24007F8F0()
{
  sub_2400815E8();
  return sub_240154778();
}

uint64_t sub_24007F94C()
{
  sub_2400815E8();
  return sub_24015476C();
}

uint64_t DKCameraOrientation.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24007F9D0 + 4 * byte_2401566E2[*v0]))(0x6574636572726F43, 0xE900000000000064);
}

uint64_t sub_24007F9D0()
{
  return 0x6E776F6E6B6E5528;
}

uint64_t sub_24007F9EC()
{
  return 0x7469617274726F50;
}

unint64_t sub_24007FA04()
{
  return 0xD000000000000012;
}

uint64_t sub_24007FA20()
{
  return 0x70616373646E614CLL;
}

uint64_t sub_24007FA58()
{
  return 0x705565636146;
}

uint64_t sub_24007FA6C()
{
  return 0x6E776F4465636146;
}

IntelligentTrackingCore::DKCameraOrientation_optional sub_24007FA84(Swift::Int *a1)
{
  return DKCameraOrientation.init(rawValue:)(*a1);
}

uint64_t sub_24007FA90()
{
  sub_2400815A4();
  return sub_240154778();
}

uint64_t sub_24007FAEC()
{
  sub_2400815A4();
  return sub_24015476C();
}

BOOL _s23IntelligentTrackingCore28DKCameraDistortionParametersV2eeoiySbAC_ACtFZ_0(float64x2_t *a1, float64x2_t *a2)
{
  return (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & 1) != 0&& a1[2].f64[0] == a2[2].f64[0];
}

uint64_t _s23IntelligentTrackingCore8DKCameraV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  int *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  int *v10;
  uint64_t result;
  uint64_t v12;
  double *v13;
  unsigned __int8 v14;
  unsigned __int8 *v15;
  uint64_t v16;
  float64x2_t *v17;
  unsigned __int8 v18;
  unsigned __int8 *v19;

  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2 || *((unsigned __int8 *)a1 + 1) != *((unsigned __int8 *)a2 + 1))
    return 0;
  if (a1[1] != a2[1] || a1[2] != a2[2])
    return 0;
  if (a1[3] != a2[3] || a1[4] != a2[4])
    return 0;
  v6 = (int *)type metadata accessor for DKCamera();
  v7 = v6[8];
  v8 = (unsigned __int8 *)a1 + v7;
  v9 = (unsigned __int8 *)a2 + v7;
  if ((sub_2401542EC() & 1) == 0)
    return 0;
  v10 = (int *)type metadata accessor for DKMotion3();
  if (!sub_2400ECA00(*(_QWORD *)&v8[v10[5]], *(_QWORD *)&v9[v10[5]])
    || !sub_2400ECA00(*(_QWORD *)&v8[v10[6]], *(_QWORD *)&v9[v10[6]])
    || !sub_2400ECA00(*(_QWORD *)&v8[v10[7]], *(_QWORD *)&v9[v10[7]])
    || *((unsigned __int8 *)a1 + v6[9]) != *((unsigned __int8 *)a2 + v6[9]))
  {
    return 0;
  }
  v12 = v6[10];
  v13 = (double *)((char *)a1 + v12);
  v14 = *((_BYTE *)a1 + v12 + 16);
  v15 = (unsigned __int8 *)a2 + v12;
  if ((v14 & 1) != 0)
  {
    if (!v15[16])
      return 0;
    goto LABEL_26;
  }
  if ((v15[16] & 1) != 0)
    return 0;
  result = 0;
  if (*v13 == *(double *)v15 && v13[1] == *((double *)v15 + 1))
  {
LABEL_26:
    v16 = v6[11];
    v17 = (float64x2_t *)((char *)a1 + v16);
    v18 = *((_BYTE *)a1 + v16 + 40);
    v19 = (unsigned __int8 *)a2 + v16;
    if ((v18 & 1) != 0)
    {
      if ((v19[40] & 1) != 0)
        return 1;
    }
    else if ((v19[40] & 1) == 0
           && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v17, *(float64x2_t *)v19), (int32x4_t)vceqq_f64(v17[1], *((float64x2_t *)v19 + 1)))), 0xFuLL))) & 1) != 0&& v17[2].f64[0] == *((double *)v19 + 4))
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void _s23IntelligentTrackingCore8DKCameraV14fixCalibration1f1o4port11orientationSo7CGPointVAE_AjFtAJ_AjA0D4PortOAA0D11OrientationOtFZ_0(double a1, double a2, double a3, double a4, uint64_t a5, unsigned __int8 *a6)
{
  uint64_t v6;

  if (a1 < 1.0e-10 || a2 < 1.0e-10 || a3 < 1.0e-10 || a4 < 1.0e-10)
  {
    v6 = *a6;
    sub_240154B38();
    sub_2401546D0();
    sub_2401546D0();
    type metadata accessor for CGPoint(0);
    sub_240154C94();
    sub_2401546D0();
    sub_240154C94();
    sub_2401546D0();
    __asm { BR              X9 }
  }
}

void sub_24007FEB4()
{
  sub_2401546D0();
  swift_bridgeObjectRelease();
  sub_240154D00();
  __break(1u);
}

uint64_t sub_24007FFB0(unsigned __int8 *a1)
{
  return ((uint64_t (*)(__n128, __n128, __n128))((char *)sub_24007FFE4 + 4 * byte_2401566F2[*a1]))((__n128)xmmword_2401565F0, (__n128)xmmword_240156600, (__n128)xmmword_240156610);
}

void sub_24007FFE4(_OWORD *a1@<X8>)
{
  *a1 = xmmword_2401566A0;
  a1[1] = xmmword_240156690;
  a1[2] = xmmword_240156680;
}

unint64_t sub_240080040()
{
  unint64_t result;

  result = qword_256FB5068;
  if (!qword_256FB5068)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingErrors, &type metadata for DKIntelligentTrackingErrors);
    atomic_store(result, (unint64_t *)&qword_256FB5068);
  }
  return result;
}

uint64_t sub_240080084(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2400800C8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_240080128()
{
  unint64_t result;

  result = qword_256FB5078;
  if (!qword_256FB5078)
  {
    result = MEMORY[0x24267E0BC](&unk_240156D50, &type metadata for DKCamera.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB5078);
  }
  return result;
}

unint64_t sub_24008016C()
{
  unint64_t result;

  result = qword_256FB5080;
  if (!qword_256FB5080)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraPort, &type metadata for DKCameraPort);
    atomic_store(result, (unint64_t *)&qword_256FB5080);
  }
  return result;
}

unint64_t sub_2400801B0()
{
  unint64_t result;

  result = qword_256FB5088;
  if (!qword_256FB5088)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraOrientation, &type metadata for DKCameraOrientation);
    atomic_store(result, (unint64_t *)&qword_256FB5088);
  }
  return result;
}

unint64_t sub_2400801F4()
{
  unint64_t result;

  result = qword_256FB50A8;
  if (!qword_256FB50A8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraDistortionParameters, &type metadata for DKCameraDistortionParameters);
    atomic_store(result, (unint64_t *)&qword_256FB50A8);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_240080258()
{
  unint64_t result;

  result = qword_256FB50B8;
  if (!qword_256FB50B8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraPort, &type metadata for DKCameraPort);
    atomic_store(result, (unint64_t *)&qword_256FB50B8);
  }
  return result;
}

unint64_t sub_24008029C()
{
  unint64_t result;

  result = qword_256FB50C0;
  if (!qword_256FB50C0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraOrientation, &type metadata for DKCameraOrientation);
    atomic_store(result, (unint64_t *)&qword_256FB50C0);
  }
  return result;
}

unint64_t sub_2400802E0()
{
  unint64_t result;

  result = qword_256FB50E0;
  if (!qword_256FB50E0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraDistortionParameters, &type metadata for DKCameraDistortionParameters);
    atomic_store(result, (unint64_t *)&qword_256FB50E0);
  }
  return result;
}

unint64_t sub_240080324()
{
  unint64_t result;

  result = qword_256FB50F0;
  if (!qword_256FB50F0)
  {
    result = MEMORY[0x24267E0BC](&unk_240156D00, &type metadata for DKCameraDistortionParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB50F0);
  }
  return result;
}

unint64_t sub_24008036C()
{
  unint64_t result;

  result = qword_256FB5100;
  if (!qword_256FB5100)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraPort, &type metadata for DKCameraPort);
    atomic_store(result, (unint64_t *)&qword_256FB5100);
  }
  return result;
}

unint64_t sub_2400803B4()
{
  unint64_t result;

  result = qword_256FB5108;
  if (!qword_256FB5108)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraOrientation, &type metadata for DKCameraOrientation);
    atomic_store(result, (unint64_t *)&qword_256FB5108);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for DKCamera(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    v7 = a3[8];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_240154310();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = (int *)type metadata accessor for DKMotion3();
    *(_QWORD *)(v8 + v11[5]) = *(_QWORD *)(v9 + v11[5]);
    *(_QWORD *)(v8 + v11[6]) = *(_QWORD *)(v9 + v11[6]);
    *(_QWORD *)(v8 + v11[7]) = *(_QWORD *)(v9 + v11[7]);
    v12 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    v13 = (char *)v4 + v12;
    v14 = (uint64_t)a2 + v12;
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v13[16] = *(_BYTE *)(v14 + 16);
    v15 = a3[11];
    v16 = (_OWORD *)((char *)v4 + v15);
    v17 = (_OWORD *)((char *)a2 + v15);
    *(_OWORD *)((char *)v16 + 25) = *(_OWORD *)((char *)v17 + 25);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for DKCamera(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 32);
  v3 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  type metadata accessor for DKMotion3();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DKCamera(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = (int *)type metadata accessor for DKMotion3();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  *(_QWORD *)(v7 + v10[6]) = *(_QWORD *)(v8 + v10[6]);
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  v11 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v14 = a3[11];
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DKCamera(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _OWORD *v16;
  __int128 *v17;
  __int128 v18;
  __int128 v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  v10 = (int *)type metadata accessor for DKMotion3();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + v10[6]) = *(_QWORD *)(v8 + v10[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v11 = a3[10];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 16);
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = v14;
  v15 = a3[11];
  v16 = (_OWORD *)(a1 + v15);
  v17 = (__int128 *)(a2 + v15);
  v18 = *v17;
  v19 = v17[1];
  *(_OWORD *)((char *)v16 + 25) = *(__int128 *)((char *)v17 + 25);
  *v16 = v18;
  v16[1] = v19;
  return a1;
}

uint64_t initializeWithTake for DKCamera(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = (int *)type metadata accessor for DKMotion3();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  *(_QWORD *)(v7 + v10[6]) = *(_QWORD *)(v8 + v10[6]);
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  v11 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v14 = a3[11];
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  return a1;
}

uint64_t assignWithTake for DKCamera(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v6 = a3[8];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = (int *)type metadata accessor for DKMotion3();
  *(_QWORD *)(v7 + v10[5]) = *(_QWORD *)(v8 + v10[5]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + v10[6]) = *(_QWORD *)(v8 + v10[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + v10[7]) = *(_QWORD *)(v8 + v10[7]);
  swift_bridgeObjectRelease();
  v11 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(v13 + 16);
  v14 = a3[11];
  v15 = (_OWORD *)(a1 + v14);
  v16 = (_OWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  *(_OWORD *)((char *)v15 + 25) = *(_OWORD *)((char *)v16 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKCamera()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2400809C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = type metadata accessor for DKMotion3();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 32), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DKCamera()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240080A60(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for DKMotion3();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 32), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 36)) = a2 + 1;
  return result;
}

uint64_t sub_240080ADC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DKMotion3();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for DKCameraDistortionParameters(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DKCameraDistortionParameters(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for DKCameraDistortionParameters()
{
  return &type metadata for DKCameraDistortionParameters;
}

ValueMetadata *type metadata accessor for DKCameraPort()
{
  return &type metadata for DKCameraPort;
}

ValueMetadata *type metadata accessor for DKCameraOrientation()
{
  return &type metadata for DKCameraOrientation;
}

uint64_t getEnumTagSinglePayload for LegacySubjectSelection.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23IntelligentTrackingCore12DKCameraPortOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_240080D04 + 4 * byte_2401566FC[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_240080D38 + 4 * byte_2401566F7[v4]))();
}

uint64_t sub_240080D38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240080D40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240080D48);
  return result;
}

uint64_t sub_240080D54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240080D5CLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_240080D60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240080D68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKCameraDistortionParameters.CodingKeys()
{
  return &type metadata for DKCameraDistortionParameters.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKHandObservation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s23IntelligentTrackingCore19DKCameraOrientationOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_240080E60 + 4 * byte_240156706[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_240080E94 + 4 * byte_240156701[v4]))();
}

uint64_t sub_240080E94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240080E9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240080EA4);
  return result;
}

uint64_t sub_240080EB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240080EB8);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_240080EBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240080EC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKCamera.CodingKeys()
{
  return &type metadata for DKCamera.CodingKeys;
}

unint64_t sub_240080EE4()
{
  unint64_t result;

  result = qword_256FB51B8;
  if (!qword_256FB51B8)
  {
    result = MEMORY[0x24267E0BC](&unk_240156C20, &type metadata for DKCamera.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB51B8);
  }
  return result;
}

unint64_t sub_240080F2C()
{
  unint64_t result;

  result = qword_256FB51C0;
  if (!qword_256FB51C0)
  {
    result = MEMORY[0x24267E0BC](&unk_240156CD8, &type metadata for DKCameraDistortionParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB51C0);
  }
  return result;
}

unint64_t sub_240080F74()
{
  unint64_t result;

  result = qword_256FB51C8;
  if (!qword_256FB51C8)
  {
    result = MEMORY[0x24267E0BC](&unk_240156C48, &type metadata for DKCameraDistortionParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB51C8);
  }
  return result;
}

unint64_t sub_240080FBC()
{
  unint64_t result;

  result = qword_256FB51D0;
  if (!qword_256FB51D0)
  {
    result = MEMORY[0x24267E0BC](&unk_240156C70, &type metadata for DKCameraDistortionParameters.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB51D0);
  }
  return result;
}

unint64_t sub_240081004()
{
  unint64_t result;

  result = qword_256FB51D8;
  if (!qword_256FB51D8)
  {
    result = MEMORY[0x24267E0BC](&unk_240156B90, &type metadata for DKCamera.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB51D8);
  }
  return result;
}

unint64_t sub_24008104C()
{
  unint64_t result;

  result = qword_256FB51E0;
  if (!qword_256FB51E0)
  {
    result = MEMORY[0x24267E0BC](&unk_240156BB8, &type metadata for DKCamera.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB51E0);
  }
  return result;
}

uint64_t sub_240081090(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1953656688 && a2 == 0xE400000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 7761766 && a2 == 0xE300000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x696C616D726F4E66 && a2 == 0xEB0000000064657ALL || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F69746F6DLL && a2 == 0xE600000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F69746174537369 && a2 == 0xEC0000007972616ELL || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7A69536567616D69 && a2 == 0xE900000000000065 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000240161EA0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_240081400(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 12651 && a2 == 0xE200000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12907 && a2 == 0xE200000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12656 && a2 == 0xE200000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 12912 && a2 == 0xE200000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 13163 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_2400815A4()
{
  unint64_t result;

  result = qword_256FB51E8;
  if (!qword_256FB51E8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraOrientation, &type metadata for DKCameraOrientation);
    atomic_store(result, (unint64_t *)&qword_256FB51E8);
  }
  return result;
}

unint64_t sub_2400815E8()
{
  unint64_t result;

  result = qword_256FB51F0;
  if (!qword_256FB51F0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKCameraPort, &type metadata for DKCameraPort);
    atomic_store(result, (unint64_t *)&qword_256FB51F0);
  }
  return result;
}

void *static DKDifferential2DMotionFilter.Index.allCases.getter()
{
  return &unk_251061C40;
}

uint64_t DKDifferential2DMotionFilter.Index.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t DKDifferential2DMotionFilter.Measurement.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKDifferential2DMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore14DKKalmanFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

IntelligentTrackingCore::DKDifferential2DMotionFilter::Index_optional __swiftcall DKDifferential2DMotionFilter.Index.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 6;
  if ((unint64_t)rawValue < 6)
    v2 = rawValue;
  *v1 = v2;
  return (IntelligentTrackingCore::DKDifferential2DMotionFilter::Index_optional)rawValue;
}

IntelligentTrackingCore::DKDifferential2DMotionFilter::Index_optional sub_240081778(Swift::Int *a1)
{
  return DKDifferential2DMotionFilter.Index.init(rawValue:)(*a1);
}

void sub_240081780(_QWORD *a1@<X8>)
{
  *a1 = &unk_251061C40;
}

uint64_t DKDifferential2DMotionFilter.Configuration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKDifferential2DMotionFilter.Configuration.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t DKDifferential2DMotionFilter.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_allocObject();
  sub_240081C4C(a1);
  v3 = v2;
  swift_release();
  return v3;
}

uint64_t DKDifferential2DMotionFilter.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  sub_240081C4C(a1);
  v2 = v1;
  swift_release();
  return v2;
}

uint64_t sub_240081858(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  _QWORD *v10;
  uint64_t v11;
  double *v12;
  double v13;
  double v14;
  __double2 v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  uint64_t result;
  uint64_t v32;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastPredictionTime, v4);
  sub_24015428C();
  v9 = v8;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v10 = *(_QWORD **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  v11 = v10[2];
  if (v11 < 3)
    goto LABEL_26;
  if ((uint64_t)v10[3] <= 0)
    goto LABEL_26;
  if ((unint64_t)v11 < 6)
    goto LABEL_26;
  v12 = (double *)v10[4];
  v13 = v12[3];
  v14 = v12[5];
  v15 = __sincos_stret(v12[2]);
  v16 = *(_QWORD **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_F);
  v17 = v16[2];
  if (v17 < 1)
    goto LABEL_26;
  v18 = v16[3];
  if (v18 <= 3)
    goto LABEL_26;
  v19 = 3 * v17;
  if ((unsigned __int128)(v17 * (__int128)3) >> 64 != (3 * v17) >> 63)
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v20 = v16[4];
  *(double *)(v20 + 24 * v17) = v9 * v15.__cosval;
  if ((unint64_t)v18 <= 5)
    goto LABEL_26;
  v21 = 5 * v17;
  if ((unsigned __int128)(v17 * (__int128)5) >> 64 != (5 * v17) >> 63)
    goto LABEL_21;
  *(double *)(v20 + 40 * v17) = v9 * (v9 * v15.__cosval * 0.5);
  if ((unint64_t)v17 <= 1)
    goto LABEL_26;
  v22 = __OFADD__(v19, 1);
  v23 = v19 + 1;
  if (v22)
    goto LABEL_22;
  *(double *)(v20 + 8 * v23) = v9 * v15.__sinval;
  if (__OFADD__(v21, 1))
  {
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  *(double *)(v20 + 8 * (v21 + 1)) = v9 * (v9 * v15.__sinval * 0.5);
  if ((unint64_t)v17 <= 2)
    goto LABEL_26;
  *(double *)(v20 + 32 * v17 + 16) = v9;
  if (v17 == 3)
    goto LABEL_26;
  if (__OFADD__(v21, 3))
    goto LABEL_24;
  *(double *)(v20 + 8 * (v21 + 3)) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4AD8);
  swift_allocObject();
  v24 = (_QWORD *)swift_retain();
  v25 = sub_240141A08(v24);
  swift_release();
  v26 = OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_J) = v25;
  swift_release();
  v27 = *(_QWORD **)(v2 + v26);
  v28 = v27[2];
  if (v28 < 1 || (uint64_t)v27[3] <= 2)
    goto LABEL_26;
  if (v28 + 0x4000000000000000 < 0)
    goto LABEL_25;
  v29 = v9 * (v9 * 0.5);
  v30 = v27[4];
  *(double *)(v30 + 16 * v28) = v9 * -(v15.__sinval * v13) - v29 * (v14 * v15.__sinval);
  if ((unint64_t)v28 > 1)
  {
    *(double *)(v30 + ((16 * v28) | 8)) = v9 * (v15.__cosval * v13) + v29 * (v15.__cosval * v14);
    return sub_24013CF84(a1);
  }
LABEL_26:
  result = sub_240154D00();
  __break(1u);
  return result;
}

void DKDifferential2DMotionFilter.__allocating_init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void DKDifferential2DMotionFilter.init(configuration:stateSize:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_240081BC8()
{
  return swift_release();
}

uint64_t DKDifferential2DMotionFilter.deinit()
{
  uint64_t v0;

  v0 = DKKalmanFilter.deinit();
  swift_release();
  return v0;
}

uint64_t DKDifferential2DMotionFilter.__deallocating_deinit()
{
  DKKalmanFilter.deinit();
  swift_release();
  return swift_deallocClassInstance();
}

void sub_240081C4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKDifferential2DMotionFilter_differentialConfiguration) = a1;
  v2 = swift_retain();
  sub_240141688(v2, 6);
  v4 = *(_QWORD **)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  v5 = v4[2];
  if ((uint64_t)v5 < 1)
    goto LABEL_43;
  v6 = v4[3];
  if ((uint64_t)v6 <= 0)
    goto LABEL_43;
  v7 = (_QWORD *)v4[4];
  *v7 = 0x3FAEB851EB851EB8;
  if (v5 < 2 || v6 == 1)
    goto LABEL_43;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v7[v5 + 1] = 0x3FAEB851EB851EB8;
  if (v5 < 3 || v6 <= 2)
    goto LABEL_43;
  if ((uint64_t)(v5 + 0x4000000000000000) < 0)
    goto LABEL_35;
  if (__OFADD__(2 * v5, 2))
  {
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v7[2 * v5 + 2] = 0x3FAEB851EB851EB8;
  if (v5 < 4 || v6 <= 3)
    goto LABEL_43;
  v11 = 3 * v5;
  if ((unsigned __int128)((uint64_t)v5 * (__int128)3) >> 64 != (uint64_t)(3 * v5) >> 63)
    goto LABEL_37;
  v12 = __OFADD__(v11, 3);
  v13 = v11 + 3;
  if (v12)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  v7[v13] = 0x3F9999999999999ALL;
  if (v5 < 5 || v6 <= 4)
    goto LABEL_43;
  if ((v5 - 0x2000000000000000) >> 62 != 3)
    goto LABEL_39;
  if (__OFADD__(4 * v5, 4))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v7[4 * v5 + 4] = 0x3F947AE147AE147BLL;
  if (v5 < 6 || v6 <= 5)
    goto LABEL_43;
  v15 = (unsigned __int128)((uint64_t)v5 * (__int128)5) >> 64;
  v16 = 5 * v5;
  if (v15 == v16 >> 63)
  {
    v12 = __OFADD__(v16, 5);
    v17 = v16 + 5;
    if (!v12)
    {
      v7[v17] = 0x3F847AE147AE147BLL;
      return;
    }
    goto LABEL_42;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_240154D00();
  __break(1u);
}

unint64_t sub_240081E28()
{
  unint64_t result;

  result = qword_256FB51F8;
  if (!qword_256FB51F8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKDifferential2DMotionFilter.Index, &type metadata for DKDifferential2DMotionFilter.Index);
    atomic_store(result, (unint64_t *)&qword_256FB51F8);
  }
  return result;
}

unint64_t sub_240081E70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FB5200;
  if (!qword_256FB5200)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB5208);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_256FB5200);
  }
  return result;
}

uint64_t sub_240081EBC()
{
  return type metadata accessor for DKDifferential2DMotionFilter(0);
}

uint64_t type metadata accessor for DKDifferential2DMotionFilter(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FB5238);
}

uint64_t method lookup function for DKDifferential2DMotionFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKDifferential2DMotionFilter.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t dispatch thunk of DKDifferential2DMotionFilter.updateQ(row:column:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKDifferential2DMotionFilter.getState(index:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKDifferential2DMotionFilter.setState(index:value:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t sub_240081F10()
{
  return type metadata accessor for DKDifferential2DMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKDifferential2DMotionFilter.Measurement(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FB54A8);
}

uint64_t method lookup function for DKDifferential2DMotionFilter.Measurement()
{
  return swift_lookUpClassMethod();
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingFSM.State(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKDifferential2DMotionFilter.Index(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_240082014 + 4 * byte_240156DE5[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_240082048 + 4 * byte_240156DE0[v4]))();
}

uint64_t sub_240082048(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240082050(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240082058);
  return result;
}

uint64_t sub_240082064(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24008206CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_240082070(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240082078(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKDifferential2DMotionFilter.Index()
{
  return &type metadata for DKDifferential2DMotionFilter.Index;
}

uint64_t type metadata accessor for DKDifferential2DMotionFilter.Configuration()
{
  return objc_opt_self();
}

uint64_t sub_2400820B4()
{
  return swift_retain();
}

uint64_t sub_2400820BC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*sub_2400820CC())()
{
  return nullsub_1;
}

unint64_t DKIntelligentTrackingSession.Signal.init(rawValue:)(unint64_t a1)
{
  return sub_240084C0C(a1);
}

BOOL sub_2400820F8(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

unint64_t sub_24008210C@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result;
  char v4;

  result = sub_240084C0C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_24008213C()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t sub_240082180()
{
  return sub_240154FF4();
}

uint64_t sub_2400821A8()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t DKIntelligentTrackingSession.__allocating_init(config:camera:time:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v3[2] = a1;
  v3[3] = a2;
  swift_allocObject();
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256FB5718 + dword_256FB5718);
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_24008227C;
  return v9(a1, a2, a3);
}

uint64_t sub_24008227C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t DKIntelligentTrackingSession.init(config:camera:time:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v3[2] = a1;
  v3[3] = a2;
  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_256FB5718 + dword_256FB5718);
  v7 = (_QWORD *)swift_task_alloc();
  v3[4] = v7;
  *v7 = v3;
  v7[1] = sub_240086C74;
  return v9(a1, a2, a3);
}

uint64_t sub_240082368()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_240082380()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[3] = *(_QWORD *)(v0[2] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_2400823DC;
  return sub_2400FE4DC();
}

uint64_t sub_2400823DC()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240082438()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[2];
  swift_retain();
  v0[5] = sub_240098A04();
  swift_release();
  v0[6] = *(_QWORD *)(v1 + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_24008249C()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 40));
}

uint64_t sub_2400824D8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2400824F0()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[3] = *(_QWORD *)(v0[2] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_24008254C;
  return sub_2400FE4DC();
}

uint64_t sub_24008254C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_release();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_24008259C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2400825B4()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 24) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2400825FC()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240082634(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_24008264C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[4] = *(_QWORD *)(v0[3] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_2400826A8;
  return sub_2400FE4DC();
}

uint64_t sub_2400826A8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240082704()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;

  v1 = v0[3];
  sub_240084500(&v3, v0[2]);
  v0[6] = *(_QWORD *)(v1 + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_240082770()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2400827A8(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(*(_QWORD *)(v1 + 16)
           + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_flipClockwise) = result;
  return result;
}

uint64_t sub_2400827C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_2400827D8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 16);
  swift_retain();
  sub_240084008(v1);
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240082834()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24008284C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[3] = *(_QWORD *)(v0[2] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_2400828A8;
  return sub_2400FE4DC();
}

uint64_t sub_2400828A8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240082904()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  v1 = *(_QWORD **)(v0 + 16);
  v2 = v1[8];
  if (v2)
  {
    v3 = *(void **)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata);
    *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata) = 0;

    v1 = *(_QWORD **)(v0 + 16);
  }
  v4 = v1[7];
  if (v4)
  {
    v5 = *(void **)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata);
    *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata) = 0;

    v1 = *(_QWORD **)(v0 + 16);
  }
  *(_QWORD *)(v0 + 40) = v1[5];
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_240082994()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2400829CC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a1;
  *(_BYTE *)(v2 + 64) = *(_BYTE *)(a1 + 16);
  return swift_task_switch();
}

uint64_t sub_2400829F4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[5] = *(_QWORD *)(v0[2] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[6] = v1;
  *v1 = v0;
  v1[1] = sub_240082A50;
  return sub_2400FE4DC();
}

uint64_t sub_240082A50()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240082AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  unsigned __int8 v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 128);
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v0 + 32);
    v5 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest;
    v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest);
    v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSubjectSelectionTask_subjectSelectionRequest + 8);
    v8 = *(_BYTE *)(v0 + 64);
    *(_QWORD *)v5 = v3;
    *(_QWORD *)(v5 + 8) = v4;
    v9 = *(_BYTE *)(v5 + 16);
    *(_BYTE *)(v5 + 16) = v8;
    sub_240086478(v3, v4, v8);
    sub_24008648C(v7, v6, v9);
    v1 = *(_QWORD *)(v0 + 16);
  }
  *(_QWORD *)(v0 + 56) = *(_QWORD *)(v1 + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_240082B44()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240082B7C(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 48) = v4;
  *(double *)(v5 + 32) = a3;
  *(double *)(v5 + 40) = a4;
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_240082B9C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[7] = *(_QWORD *)(v0[6] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[8] = v1;
  *v1 = v0;
  v1[1] = sub_240082BF8;
  return sub_2400FE4DC();
}

uint64_t sub_240082BF8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240082C54()
{
  double *v0;
  uint64_t v1;
  double v2;
  double v3;
  double v4;
  double v5;

  v1 = *((_QWORD *)v0 + 6);
  v3 = v0[4];
  v2 = v0[5];
  v5 = v0[2];
  v4 = v0[3];
  swift_retain();
  sub_240121E84(1, v5, v4, v3, v2);
  v0[9] = 0.0;
  swift_release();
  v0[10] = *(double *)(v1 + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_240082D10()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240082D4C()
{
  sub_2400FF0FC();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240082D90()
{
  uint64_t v0;

  swift_willThrow();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_240082DCC(_BYTE *a1, _BYTE *a2, _BYTE *a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = v3;
  *(_BYTE *)(v4 + 48) = *a1;
  *(_BYTE *)(v4 + 49) = *a2;
  *(_BYTE *)(v4 + 50) = *a3;
  return swift_task_switch();
}

uint64_t sub_240082DFC()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[3] = *(_QWORD *)(v0[2] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[4] = v1;
  *v1 = v0;
  v1[1] = sub_240082E58;
  return sub_2400FE4DC();
}

uint64_t sub_240082E58()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240082EB4()
{
  uint64_t v0;
  int v1;
  unsigned __int8 v3;
  unsigned __int8 v4;

  v1 = *(unsigned __int8 *)(v0 + 49);
  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16)
                       + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_framingEngine)
           + 41) = *(_BYTE *)(v0 + 48);
  if (v1 == 4)
  {
    swift_retain();
  }
  else
  {
    v4 = *(_BYTE *)(v0 + 49);
    swift_retain();
    sub_240121918(&v4);
  }
  if (*(_BYTE *)(v0 + 50) != 3)
  {
    v3 = *(_BYTE *)(v0 + 50);
    sub_240121AD8(&v3);
  }
  swift_release();
  *(_QWORD *)(v0 + 40) = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_240082F6C(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 48) = v4;
  *(double *)(v5 + 32) = a3;
  *(double *)(v5 + 40) = a4;
  *(double *)(v5 + 16) = a1;
  *(double *)(v5 + 24) = a2;
  return swift_task_switch();
}

uint64_t sub_240082F8C()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[7] = *(_QWORD *)(v0[6] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[8] = v1;
  *v1 = v0;
  v1[1] = sub_240082FE8;
  return sub_2400FE4DC();
}

uint64_t sub_240082FE8()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240083044()
{
  double *v0;
  uint64_t v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;

  v1 = *((_QWORD *)v0 + 6);
  v3 = v0[4];
  v2 = v0[5];
  v5 = v0[2];
  v4 = v0[3];
  swift_retain();
  sub_24012208C(0, v5, v4, v3, v2);
  v0[9] = 0.0;
  swift_release();
  v0[10] = *(double *)(v1 + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_240083100()
{
  sub_2400FF0FC();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240083144(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2[2] = a1;
  v2[3] = v1;
  v3 = sub_240154310();
  v2[4] = v3;
  v2[5] = *(_QWORD *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2400831A4()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[7] = *(_QWORD *)(v0[3] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[8] = v1;
  *v1 = v0;
  v1[1] = sub_240083200;
  return sub_2400FE4DC();
}

uint64_t sub_240083200()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

void sub_24008325C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char *v26;
  __int16 v27;
  char v28;

  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  sub_240114C98();
  swift_release();
  swift_retain();
  v2 = sub_240084228();
  swift_release();
  if (v2)
  {
    v3 = *(_QWORD *)(v0 + 24);
    v4 = *(_QWORD *)(v3 + 64);
    if (v4)
    {
      v5 = *(void **)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata);
      *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata) = v2;
      v6 = v2;

      v3 = *(_QWORD *)(v0 + 24);
    }
    v7 = *(_QWORD *)(v3 + 56);
    if (v7)
    {
      v8 = *(void **)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata);
      *(_QWORD *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata) = v2;
      v2 = v8;
    }

  }
  v10 = *(_QWORD *)(v0 + 40);
  v9 = *(_QWORD *)(v0 + 48);
  v12 = *(_QWORD *)(v0 + 24);
  v11 = *(_QWORD *)(v0 + 32);
  v13 = *(_QWORD *)(v0 + 16);
  v14 = *(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time;
  v15 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  swift_retain();
  v15(v14, v11);
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  *(_QWORD *)(v0 + 72) = v16;
  v16(v14, v13, v11);
  swift_release();
  swift_retain();
  sub_240098A48(v13);
  swift_release();
  v17 = *(_QWORD *)(v12 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  swift_retain();
  v15(v17, v11);
  v16(v17, v13, v11);
  swift_release();
  v18 = *(_QWORD *)(v12 + 48);
  v16(v9, *(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_startTime, v11);
  swift_retain();
  sub_24015428C();
  v20 = v19;
  v15(v9, v11);
  v21 = v18 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(_QWORD *)v21 = v20;
  *(_BYTE *)(v21 + 8) = 0;
  swift_release();
  v22 = *(unsigned __int8 *)(*(_QWORD *)(v12 + 24) + 89);
  if (v22 != 2)
  {
    v23 = *(_QWORD *)(v1 + 16);
    if (*(_BYTE *)(*(_QWORD *)(v23
                              + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_adaptiveFramerate)
                  + 72) == 1)
    {
      LOBYTE(v22) = 1;
    }
    else
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v23
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        v25 = sub_240154D30();
        swift_bridgeObjectRelease();
      }
      else
      {
        v25 = *(_QWORD *)((v24 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      LOBYTE(v22) = v25 < 2;
    }
  }
  *(_BYTE *)(*(_QWORD *)(v12 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = v22;
  v26 = (char *)swift_retain();
  v27 = sub_2400D2F54(v26);
  v28 = HIBYTE(v27);
  *(_WORD *)(v0 + 136) = v27;
  swift_release();
  __asm { BR              X10 }
}

uint64_t sub_24008398C()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_2400839E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t (*v26)(void);

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 88);
  swift_release();
  if (v1 + 1 == v2)
  {
    v3 = *(_BYTE *)(v0 + 137);
    v4 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(v4 + 48);
    v6 = v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
    *(double *)v6 = (double)*(uint64_t *)(*(_QWORD *)(*(_QWORD *)(v4 + 16)
                                                   + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_adaptiveFramerate)
                                       + 64);
    *(_BYTE *)(v6 + 8) = 0;
    v7 = *(_QWORD *)(v0 + 24);
    *(_BYTE *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = v3 + 1;
    swift_retain();
    swift_retain();
    sub_240114DE4();
    v9 = v8;
    swift_release();
    v10 = v5 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
    *(_QWORD *)v10 = v9;
    *(_BYTE *)(v10 + 8) = 0;
    swift_release();
    v11 = *(_QWORD *)(v7 + 16);
    v12 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v11 + v12) = MEMORY[0x24BEE4B08];
    v13 = *(_QWORD *)(*(_QWORD *)(v7 + 48)
                    + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command);
    if (v13)
    {
      v15 = *(_QWORD *)(v0 + 40);
      v14 = *(_QWORD *)(v0 + 48);
      v16 = *(_QWORD *)(v0 + 32);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 72))(v14, v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v16);
      v17 = *(_QWORD *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
      v18 = *(_QWORD *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8);
      v19 = *(_WORD *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 16);
      type metadata accessor for DKIntelligentTrackingCommand(0);
      v13 = swift_allocObject();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v14, v16);
      v20 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
      *(_QWORD *)v20 = v17;
      *(_QWORD *)(v20 + 8) = v18;
      *(_WORD *)(v20 + 16) = v19;
      sub_240070B78(v17, v18, v19);
    }
    *(_QWORD *)(v0 + 120) = v13;
    *(_QWORD *)(v0 + 128) = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 40);
    swift_retain();
    return swift_task_switch();
  }
  else
  {
    v22 = *(_QWORD *)(v0 + 96) + 1;
    *(_QWORD *)(v0 + 96) = v22;
    v23 = *(_QWORD *)(v0 + 80);
    if ((v23 & 0xC000000000000001) != 0)
    {
      v24 = MEMORY[0x24267D4E0]();
    }
    else
    {
      v24 = *(_QWORD *)(v23 + 8 * v22 + 32);
      swift_retain();
    }
    *(_QWORD *)(v0 + 104) = v24;
    v26 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v24 + 224) + *(_QWORD *)(*(_QWORD *)v24 + 224));
    v25 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 112) = v25;
    *v25 = v0;
    v25[1] = sub_24008398C;
    return v26();
  }
}

uint64_t sub_240083C78()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 120));
}

uint64_t sub_240083CC0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return swift_task_switch();
}

uint64_t sub_240083CD8()
{
  _QWORD *v0;
  _QWORD *v1;

  v0[4] = *(_QWORD *)(v0[3] + 40);
  swift_retain();
  v1 = (_QWORD *)swift_task_alloc();
  v0[5] = v1;
  *v1 = v0;
  v1[1] = sub_240083D34;
  return sub_2400FE4DC();
}

uint64_t sub_240083D34()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240083D90()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  char v11;

  v1 = v0[2];
  v2 = v0[3];
  swift_retain();
  sub_2400972E4(v1);
  swift_release();
  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 32) + 24);
  v4 = *(void **)(v3 + 32);
  swift_retain();
  objc_msgSend(v4, sel_lock);
  *(_BYTE *)(v3 + 16) = 1;
  objc_msgSend(v4, sel_unlock);
  swift_release();
  if (*(_QWORD *)(v2 + 88))
    sub_240088AE0();
  v5 = (_QWORD *)v0[3];
  v6 = v5[22];
  if (v6)
  {
    *(_BYTE *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKReturnToBaseTask_returnToBaseIssued) = 0;
    v5 = (_QWORD *)v0[3];
  }
  v7 = v5[23];
  if (v7)
  {
    v11 = 10;
    v8 = sub_24015494C();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v11, 0xD000000000000012, 0x8000000240162090, v8);
    *(_QWORD *)(v7 + OBJC_IVAR____TtC23IntelligentTrackingCore12DKSearchTask_searchIndex) = -1;
    v5 = (_QWORD *)v0[3];
  }
  v9 = v5[24];
  if (v9)
  {
    *(_BYTE *)(v9 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKFlip180Task_flip180Issued) = 0;
    v5 = (_QWORD *)v0[3];
  }
  v0[6] = v5[5];
  swift_retain();
  return swift_task_switch();
}

uint64_t DKIntelligentTrackingSession.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKIntelligentTrackingSession.__deallocating_deinit()
{
  DKIntelligentTrackingSession.deinit();
  return swift_deallocClassInstance();
}

id *sub_240084008(void *a1)
{
  uint64_t v1;
  _QWORD *v2;
  os_unfair_lock_s *v4;
  unint64_t *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  id *result;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = (_QWORD *)v1;
  v4 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  v5 = v2 + 3;
  v6 = a1;
  MEMORY[0x24267D0CC]();
  if (*(_QWORD *)((v2[3] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v2[3] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2401547D8();
  sub_240154814();
  sub_2401547B4();
  if (*v5 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = *(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v2[4] >= v7)
    goto LABEL_16;
  v8 = *v5;
  if (!(*v5 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_8;
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  v11 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (!v11)
    goto LABEL_19;
LABEL_8:
  v8 = *v5;
  if (!(*v5 >> 62))
  {
    if (*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_10;
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  v12 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (!v12)
    goto LABEL_21;
LABEL_10:
  if ((v8 & 0xC000000000000001) != 0)
  {
LABEL_22:
    result = (id *)MEMORY[0x24267D4E0](0, v8);
    goto LABEL_13;
  }
  if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    v13 = sub_240154D30();
    result = (id *)swift_bridgeObjectRelease();
    if (v13)
      goto LABEL_15;
    goto LABEL_25;
  }
  result = (id *)*(id *)(v8 + 32);
LABEL_13:
  v8 = (unint64_t)result;
  if (*v5 >> 62)
    goto LABEL_24;
  if (*(_QWORD *)((*v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_15:
    sub_240079FC4(0, 1);

LABEL_16:
    v10 = (os_unfair_lock_s *)v2[2];
    swift_retain();
    os_unfair_lock_unlock(v10 + 4);
    return (id *)swift_release();
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_240084228()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  _QWORD *v3;
  unint64_t v4;
  id v5;
  id result;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = v0;
  v2 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  os_unfair_lock_lock(v2 + 4);
  swift_release();
  v3 = (_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 24);
  if (!(v4 >> 62))
  {
    if (*(uint64_t *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10) >= 1)
      goto LABEL_3;
LABEL_14:
    v5 = 0;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v7 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (v7 < 1)
    goto LABEL_14;
LABEL_3:
  v5 = (id)*v3;
  if (!(*v3 >> 62))
  {
    if (*(_QWORD *)(((unint64_t)v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_5;
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  v9 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (!v9)
    goto LABEL_17;
LABEL_5:
  v5 = (id)*v3;
  if (!(*v3 >> 62))
  {
    if (*(_QWORD *)(((unint64_t)v5 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_7;
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  v10 = sub_240154D30();
  swift_bridgeObjectRelease();
  if (!v10)
    goto LABEL_19;
LABEL_7:
  if (((unint64_t)v5 & 0xC000000000000001) != 0)
  {
LABEL_20:
    result = (id)MEMORY[0x24267D4E0](0, v5);
    goto LABEL_10;
  }
  if (!*(_QWORD *)(((unint64_t)v5 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_22:
    swift_bridgeObjectRetain();
    v11 = sub_240154D30();
    result = (id)swift_bridgeObjectRelease();
    if (v11)
      goto LABEL_12;
    goto LABEL_23;
  }
  result = *((id *)v5 + 4);
LABEL_10:
  v5 = result;
  if (*v3 >> 62)
    goto LABEL_22;
  if (*(_QWORD *)((*v3 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    sub_240079FC4(0, 1);
LABEL_15:
    v8 = *(os_unfair_lock_s **)(v1 + 16);
    swift_retain();
    os_unfair_lock_unlock(v8 + 4);
    swift_release();
    return v5;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_240084408(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;

  v3 = v2;
  v6 = *v2;
  v7 = sub_240154FDC();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v3;
    *v3 = 0x8000000000000000;
    sub_2400F5008(a2, v9, isUniquelyReferenced_nonNull_native);
    *v3 = v14;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v10 = *(_QWORD *)(v6 + 48);
  if (*(_QWORD *)(v10 + 8 * v9) != a2)
  {
    v11 = ~v8;
    do
    {
      v9 = (v9 + 1) & v11;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v10 + 8 * v9) != a2);
  }
  result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_240084500(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;

  v5 = *v2;
  sub_240154FE8();
  sub_240154FF4();
  v6 = sub_240155018();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13 = *v2;
    *v2 = 0x8000000000000000;
    sub_2400F5128(a2, v8, isUniquelyReferenced_nonNull_native);
    *v2 = v13;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_8;
  }
  v9 = *(_QWORD *)(v5 + 48);
  if (*(_QWORD *)(v9 + 8 * v8) != a2)
  {
    v10 = ~v7;
    do
    {
      v8 = (v8 + 1) & v10;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_7;
    }
    while (*(_QWORD *)(v9 + 8 * v8) != a2);
  }
  result = 0;
  a2 = *(_QWORD *)(*(_QWORD *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_24008461C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  v3 = v2;
  v6 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v23 = (char *)&v21 - v11;
  v12 = *v2;
  sub_240154FE8();
  sub_240154310();
  sub_2400707A8(&qword_256FB5A58, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE930]);
  swift_bridgeObjectRetain();
  sub_2401545C8();
  sub_24015434C();
  sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  sub_2401545C8();
  v13 = sub_240155018();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  v15 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0)
  {
    v21 = v2;
    v22 = a1;
    v16 = ~v14;
    v17 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_240086BA4(*(_QWORD *)(v12 + 48) + v17 * v15, (uint64_t)v9);
      if ((sub_2401542EC() & 1) != 0 && (sub_240154328() & 1) != 0)
      {
        sub_240086BE8((uint64_t)v9);
        swift_bridgeObjectRelease();
        sub_240086BE8(a2);
        sub_240086BA4(*(_QWORD *)(*v21 + 48) + v17 * v15, v22);
        return 0;
      }
      sub_240086BE8((uint64_t)v9);
      v15 = (v15 + 1) & v16;
    }
    while (((*(_QWORD *)(v12 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    swift_bridgeObjectRelease();
    v3 = v21;
    a1 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v19 = (uint64_t)v23;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_240086BA4(a2, v19);
  v24 = *v3;
  *v3 = 0x8000000000000000;
  sub_2400F5274(v19, v15, isUniquelyReferenced_nonNull_native);
  *v3 = v24;
  swift_bridgeObjectRelease();
  sub_240086C24(a2, a1);
  return 1;
}

uint64_t sub_2400848A4(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_24015434C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_2400707A8(&qword_256FB5A60, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_2401545BC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v21 = sub_240154610();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_2400F54E4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_240084B00(double *a1, double a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t result;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;

  v3 = v2;
  v6 = *v2;
  v7 = sub_240154FDC();
  v8 = -1 << *(_BYTE *)(v6 + 32);
  v9 = v7 & ~v8;
  if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_8:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v15 = *v3;
    *v3 = 0x8000000000000000;
    sub_2400F56E8(v9, isUniquelyReferenced_nonNull_native, a2);
    *v3 = v15;
    swift_bridgeObjectRelease();
    result = 1;
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(v6 + 48);
  v11 = *(double *)(v10 + 8 * v9);
  if (v11 != a2)
  {
    v13 = ~v8;
    do
    {
      v9 = (v9 + 1) & v13;
      if (((*(_QWORD *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
        goto LABEL_8;
      v11 = *(double *)(v10 + 8 * v9);
    }
    while (v11 != a2);
  }
  result = 0;
  a2 = v11;
LABEL_9:
  *a1 = a2;
  return result;
}

unint64_t sub_240084C0C(unint64_t result)
{
  if (result > 6)
    return 0;
  return result;
}

uint64_t sub_240084C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[78] = v3;
  v4[77] = a3;
  v4[76] = a2;
  v4[75] = a1;
  v5 = sub_240154310();
  v4[79] = v5;
  v4[80] = *(_QWORD *)(v5 - 8);
  v4[81] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_240084C88()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = v0[78];
  type metadata accessor for DKLockActor();
  v2 = swift_allocObject();
  v0[82] = v2;
  swift_defaultActor_initialize();
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + 112) = 1;
  *(_QWORD *)(v2 + 120) = v3;
  *(_QWORD *)(v1 + 40) = v2;
  swift_retain();
  v4 = (_QWORD *)swift_task_alloc();
  v0[83] = v4;
  *v4 = v0;
  v4[1] = sub_240084D10;
  return sub_2400FE4DC();
}

uint64_t sub_240084D10()
{
  swift_task_dealloc();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_240084D70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t inited;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t i;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t j;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t k;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;

  v1 = v0[81];
  v106 = v0[80];
  v2 = v0[79];
  v3 = (_QWORD *)v0[78];
  v4 = v0[77];
  v5 = v0[76];
  v6 = v0[75];
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v106 + 16);
  v104 = v2;
  v7(v1, v4, v2);
  type metadata accessor for DKIntelligentTrackingInternalState(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  v8 = sub_24009F8B0(v1, v6, v5);
  swift_release();
  swift_release();
  v3[2] = v8;
  v7(v1, v4, v2);
  type metadata accessor for DKIntelligentTrackingState(0);
  swift_allocObject();
  v3[6] = DKIntelligentTrackingState.init(time:)(v1);
  v3[3] = v6;
  type metadata accessor for DKIntelligentTrackingFSM();
  swift_allocObject();
  swift_retain();
  v9 = swift_retain();
  v3[4] = sub_2400D2880(v9);
  v10 = v3[2];
  v11 = v3[6];
  type metadata accessor for DKPreprocessTask();
  v12 = (_QWORD *)swift_allocObject();
  *(_QWORD *)((char *)v12 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2401544B4();
  v12[2] = 0x65636F7270657270;
  v12[3] = 0xEA00000000007373;
  v12[4] = v6;
  v12[5] = v10;
  v12[6] = v11;
  v3[7] = v12;
  v13 = v3[2];
  v14 = v3[6];
  type metadata accessor for DKPrepareInputTask();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v3[8] = sub_24008B650(0x4965726170657270, 0xEC0000007475706ELL, v6, v13, v14);
  v15 = v3[2];
  v16 = v3[6];
  type metadata accessor for DKSubjectGroupingTask();
  v17 = (_QWORD *)swift_allocObject();
  *(_QWORD *)((char *)v17 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKSubjectGroupingTask_handAssociationThreshold) = 0xBFE0000000000000;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2401544B4();
  v17[2] = 0x477463656A627573;
  v17[3] = 0xEF676E6970756F72;
  v17[4] = v6;
  v17[5] = v15;
  v17[6] = v16;
  v3[10] = v17;
  v18 = v3[2];
  v19 = v3[6];
  type metadata accessor for DKTrackerTask();
  v20 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2401544B4();
  v20[2] = 0x72656B63617274;
  v20[3] = 0xE700000000000000;
  v20[4] = v6;
  v20[5] = v18;
  v20[6] = v19;
  v3[12] = v20;
  v21 = v3[2];
  v22 = v3[6];
  type metadata accessor for DKSubjectSelectionTask();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v3[16] = sub_240125390(0xD000000000000010, 0x80000002401621C0, v6, v21, v22);
  v23 = v3[2];
  v24 = v3[6];
  type metadata accessor for DKFramingTask();
  v25 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2401544B4();
  v25[2] = 0x676E696D617266;
  v25[3] = 0xE700000000000000;
  v25[4] = v6;
  v25[5] = v23;
  v25[6] = v24;
  v3[17] = v25;
  v26 = v3[2];
  v27 = v3[6];
  type metadata accessor for DKControlTask();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v3[18] = sub_24006CD18(0x6C6F72746E6F63, 0xE700000000000000, v6, v26, v27);
  v28 = v3[2];
  v29 = v3[6];
  type metadata accessor for DKLoggingTask();
  v30 = (_QWORD *)swift_allocObject();
  v31 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKLoggingTask_logRecorder;
  type metadata accessor for DKDataLogRecorder(0);
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  *(_QWORD *)((char *)v30 + v31) = DKDataLogRecorder.init()();
  sub_2401544B4();
  v30[2] = 0x676E6967676F6CLL;
  v30[3] = 0xE700000000000000;
  v30[4] = v6;
  v30[5] = v28;
  v30[6] = v29;
  v3[19] = v30;
  v32 = v3[2];
  v33 = v3[6];
  type metadata accessor for DKUpdateStatesTask();
  v34 = swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2401544B4();
  strcpy((char *)(v34 + 16), "updateStates");
  *(_BYTE *)(v34 + 29) = 0;
  *(_WORD *)(v34 + 30) = -5120;
  *(_QWORD *)(v34 + 32) = v6;
  *(_QWORD *)(v34 + 40) = v32;
  *(_QWORD *)(v34 + 48) = v33;
  v3[15] = v34;
  v35 = v3[2];
  v36 = v3[6];
  type metadata accessor for DKCleanupTask();
  v37 = (_QWORD *)swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2401544B4();
  v37[2] = 0x70756E61656C63;
  v37[3] = 0xE700000000000000;
  v37[4] = v6;
  v37[5] = v35;
  v37[6] = v36;
  v3[20] = v37;
  v38 = v3[2];
  v39 = v3[6];
  type metadata accessor for DKStartupTask();
  v40 = (_QWORD *)swift_allocObject();
  *((_BYTE *)v40 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupCommandIssued) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))((uint64_t)v40 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupTime, 1, 1, v104);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2401544B4();
  v40[2] = 0x70757472617473;
  v40[3] = 0xE700000000000000;
  v40[4] = v6;
  v40[5] = v38;
  v40[6] = v39;
  v3[21] = v40;
  v41 = v3[2];
  v42 = v3[6];
  type metadata accessor for DKReturnToBaseTask();
  v43 = swift_allocObject();
  *(_BYTE *)(v43 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKReturnToBaseTask_returnToBaseIssued) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2401544B4();
  strcpy((char *)(v43 + 16), "returnToBase");
  *(_BYTE *)(v43 + 29) = 0;
  *(_WORD *)(v43 + 30) = -5120;
  *(_QWORD *)(v43 + 32) = v6;
  *(_QWORD *)(v43 + 40) = v41;
  *(_QWORD *)(v43 + 48) = v42;
  v3[22] = v43;
  v44 = v3[2];
  v45 = v3[6];
  type metadata accessor for DKSearchTask();
  swift_allocObject();
  swift_retain();
  swift_retain();
  swift_retain();
  v3[23] = sub_24010B300(0x686372616573, 0xE600000000000000, v6, v44, v45);
  v46 = v3[2];
  v47 = v3[6];
  type metadata accessor for DKFlip180Task();
  v48 = (_QWORD *)swift_allocObject();
  *((_BYTE *)v48 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKFlip180Task_flip180Issued) = 0;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2401544B4();
  v48[2] = 0x30383170696C66;
  v48[3] = 0xE700000000000000;
  v48[4] = v6;
  v48[5] = v46;
  v48[6] = v47;
  v49 = v107;
  v3[24] = v48;
  v50 = (_QWORD *)v107[78];
  if (*(_BYTE *)(v6 + 89))
  {
    v51 = 0;
    v50[9] = 0;
    v50[11] = 0;
    v50[14] = 0;
  }
  else
  {
    v52 = v107[75];
    v53 = v3[2];
    v54 = v3[6];
    type metadata accessor for DKPrintExtractionTask();
    v55 = (_QWORD *)swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2401544B4();
    v55[2] = 0x747845746E697270;
    v55[3] = 0xEF6E6F6974636172;
    v55[4] = v52;
    v55[5] = v53;
    v55[6] = v54;
    v50[9] = v55;
    v56 = v3[2];
    v57 = v3[6];
    type metadata accessor for DKVisualUnderstandingTask();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    v50[11] = sub_240088C9C(0xD000000000000013, 0x8000000240162170, v52, v56, v57);
    v58 = v3[2];
    v59 = v3[6];
    type metadata accessor for DKBodyPoseExtractionTask();
    swift_allocObject();
    swift_retain();
    swift_retain();
    swift_retain();
    v50[14] = sub_24010C6CC(0x65736F5079646F62, 0xE800000000000000, v52, v58, v59);
    v60 = v3[2];
    v61 = v3[6];
    type metadata accessor for DKSpeakerDetectionTask();
    v51 = (_QWORD *)swift_allocObject();
    *(_QWORD *)((char *)v51 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSpeakerDetectionTask_cachedModel) = 0;
    *(_QWORD *)((char *)v51 + OBJC_IVAR____TtC23IntelligentTrackingCore22DKSpeakerDetectionTask_timeoutDuration) = 0x4000000000000000;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2401544B4();
    v51[2] = 0xD000000000000010;
    v51[3] = 0x8000000240162190;
    v51[4] = v52;
    v51[5] = v60;
    v49 = v107;
    v51[6] = v61;
  }
  v105 = v49[78];
  *(_QWORD *)(v105 + 104) = v51;
  v108 = MEMORY[0x24BEE4AF8];
  swift_retain_n();
  v62 = swift_retain();
  MEMORY[0x24267D0CC](v62);
  if (*(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2401547D8();
  sub_240154814();
  sub_2401547B4();
  v63 = swift_retain();
  MEMORY[0x24267D0CC](v63);
  if (*(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2401547D8();
  v64 = v49[78];
  sub_240154814();
  sub_2401547B4();
  swift_release();
  swift_release();
  *(_QWORD *)(v64 + 200) = v108;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5A70);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_QWORD *)(inited + 32) = v3[7];
  v109 = inited;
  sub_2401547B4();
  v66 = v109;
  v110 = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v66 + 32))
  {
    swift_retain();
    v67 = swift_retain();
    MEMORY[0x24267D0CC](v67);
    if (*(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
    v68 = v110;
  }
  else
  {
    swift_retain();
    v68 = MEMORY[0x24BEE4AF8];
  }
  v69 = (_QWORD *)v49[78];
  swift_bridgeObjectRelease();
  v69[26] = v68;
  v70 = swift_initStackObject();
  *(_OWORD *)(v70 + 16) = xmmword_240156F70;
  *(_QWORD *)(v70 + 32) = v3[7];
  *(_QWORD *)(v70 + 40) = v3[8];
  *(_QWORD *)(v70 + 48) = v3[10];
  *(_QWORD *)(v70 + 56) = v69[9];
  *(_QWORD *)(v70 + 64) = v69[11];
  *(_QWORD *)(v70 + 72) = v3[12];
  *(_QWORD *)(v70 + 80) = *(_QWORD *)(v105 + 104);
  *(_QWORD *)(v70 + 88) = v69[14];
  *(_QWORD *)(v70 + 96) = v3[16];
  *(_QWORD *)(v70 + 104) = v3[15];
  *(_QWORD *)(v70 + 112) = v3[17];
  *(_QWORD *)(v70 + 120) = v3[18];
  *(_QWORD *)(v70 + 128) = v3[19];
  *(_QWORD *)(v70 + 136) = v3[20];
  v111 = v70;
  sub_2401547B4();
  v71 = v111;
  v112 = MEMORY[0x24BEE4AF8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  for (i = 32; i != 144; i += 8)
  {
    if (*(_QWORD *)(v71 + i))
    {
      v73 = swift_retain();
      MEMORY[0x24267D0CC](v73);
      if (*(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2401547D8();
      sub_240154814();
      sub_2401547B4();
    }
  }
  v74 = v107[78];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v74 + 216) = v112;
  v75 = swift_initStackObject();
  *(_OWORD *)(v75 + 16) = xmmword_240156F80;
  *(_QWORD *)(v75 + 32) = v3[7];
  *(_QWORD *)(v75 + 40) = v3[8];
  *(_QWORD *)(v75 + 48) = v3[10];
  *(_QWORD *)(v75 + 56) = v3[12];
  *(_QWORD *)(v75 + 64) = *(_QWORD *)(v105 + 104);
  *(_QWORD *)(v75 + 72) = v3[16];
  *(_QWORD *)(v75 + 80) = v3[15];
  *(_QWORD *)(v75 + 88) = v3[17];
  *(_QWORD *)(v75 + 96) = v3[18];
  *(_QWORD *)(v75 + 104) = v3[19];
  *(_QWORD *)(v75 + 112) = v3[20];
  v113 = v75;
  sub_2401547B4();
  v76 = v113;
  v114 = MEMORY[0x24BEE4AF8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  for (j = 32; j != 120; j += 8)
  {
    if (*(_QWORD *)(v76 + j))
    {
      v78 = swift_retain();
      MEMORY[0x24267D0CC](v78);
      if (*(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v114 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2401547D8();
      sub_240154814();
      sub_2401547B4();
    }
  }
  v79 = v107[78];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v79 + 224) = v114;
  v80 = swift_initStackObject();
  *(_OWORD *)(v80 + 16) = xmmword_240156F90;
  *(_QWORD *)(v80 + 32) = v3[7];
  *(_QWORD *)(v80 + 40) = v3[8];
  *(_QWORD *)(v80 + 48) = v3[10];
  *(_QWORD *)(v80 + 56) = v3[12];
  *(_QWORD *)(v80 + 64) = v3[16];
  *(_QWORD *)(v80 + 72) = v3[15];
  *(_QWORD *)(v80 + 80) = v3[17];
  *(_QWORD *)(v80 + 88) = v3[18];
  *(_QWORD *)(v80 + 96) = v3[19];
  *(_QWORD *)(v80 + 104) = v3[20];
  v115 = v80;
  sub_2401547B4();
  v81 = v115;
  v116 = MEMORY[0x24BEE4AF8];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  for (k = 32; k != 112; k += 8)
  {
    if (*(_QWORD *)(v81 + k))
    {
      v83 = swift_retain();
      MEMORY[0x24267D0CC](v83);
      if (*(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2401547D8();
      sub_240154814();
      sub_2401547B4();
    }
  }
  v84 = v107[78];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v84 + 232) = v116;
  v85 = swift_initStackObject();
  *(_OWORD *)(v85 + 16) = xmmword_240155A50;
  *(_QWORD *)(v85 + 32) = v3[7];
  *(_QWORD *)(v85 + 40) = v3[22];
  *(_QWORD *)(v85 + 48) = v3[19];
  v117 = (_QWORD *)v85;
  sub_2401547B4();
  v86 = v117;
  v118 = MEMORY[0x24BEE4AF8];
  if (!v86[4])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    if (!v86[5])
      goto LABEL_40;
    goto LABEL_37;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  v87 = swift_retain();
  MEMORY[0x24267D0CC](v87);
  if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2401547D8();
  sub_240154814();
  sub_2401547B4();
  if (v86[5])
  {
LABEL_37:
    v88 = swift_retain();
    MEMORY[0x24267D0CC](v88);
    if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
  }
LABEL_40:
  if (v86[6])
  {
    v89 = swift_retain();
    MEMORY[0x24267D0CC](v89);
    if (*(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
  }
  v90 = v107[78];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v90 + 240) = v118;
  v91 = swift_initStackObject();
  *(_OWORD *)(v91 + 16) = xmmword_240155A50;
  *(_QWORD *)(v91 + 32) = v3[7];
  *(_QWORD *)(v91 + 40) = v3[23];
  *(_QWORD *)(v91 + 48) = v3[19];
  v119 = (_QWORD *)v91;
  sub_2401547B4();
  v92 = v119;
  v120 = MEMORY[0x24BEE4AF8];
  if (!v92[4])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    if (!v92[5])
      goto LABEL_53;
    goto LABEL_50;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  v93 = swift_retain();
  MEMORY[0x24267D0CC](v93);
  if (*(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2401547D8();
  sub_240154814();
  sub_2401547B4();
  if (v92[5])
  {
LABEL_50:
    v94 = swift_retain();
    MEMORY[0x24267D0CC](v94);
    if (*(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
  }
LABEL_53:
  if (v92[6])
  {
    v95 = swift_retain();
    MEMORY[0x24267D0CC](v95);
    if (*(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v120 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
  }
  v96 = v107[78];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v96 + 248) = v120;
  v97 = swift_initStackObject();
  *(_OWORD *)(v97 + 16) = xmmword_240155A50;
  *(_QWORD *)(v97 + 32) = v3[7];
  *(_QWORD *)(v97 + 40) = v3[24];
  *(_QWORD *)(v97 + 48) = v3[19];
  v121 = (_QWORD *)v97;
  sub_2401547B4();
  v98 = v121;
  v122 = MEMORY[0x24BEE4AF8];
  if (!v98[4])
  {
    swift_retain();
    swift_retain();
    swift_retain();
    if (!v98[5])
      goto LABEL_66;
    goto LABEL_63;
  }
  swift_retain();
  swift_retain();
  swift_retain();
  v99 = swift_retain();
  MEMORY[0x24267D0CC](v99);
  if (*(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
    sub_2401547D8();
  sub_240154814();
  sub_2401547B4();
  if (v98[5])
  {
LABEL_63:
    v100 = swift_retain();
    MEMORY[0x24267D0CC](v100);
    if (*(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
  }
LABEL_66:
  if (v98[6])
  {
    v101 = swift_retain();
    MEMORY[0x24267D0CC](v101);
    if (*(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
  }
  v102 = v107[78];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v102 + 256) = v122;
  v107[84] = *(_QWORD *)(v102 + 40);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2400863E8()
{
  sub_2400FF0FC();
  swift_release();
  return swift_task_switch();
}

uint64_t sub_24008642C()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 640) + 8))(*(_QWORD *)(v0 + 616), *(_QWORD *)(v0 + 632));
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 624));
}

uint64_t sub_240086478(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_24008648C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_2400864A0(a1, a2, a3);
  return a1;
}

uint64_t sub_2400864A0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_2400864B8()
{
  unint64_t result;

  result = qword_256FB5788;
  if (!qword_256FB5788)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingSession.Signal, &type metadata for DKIntelligentTrackingSession.Signal);
    atomic_store(result, (unint64_t *)&qword_256FB5788);
  }
  return result;
}

uint64_t sub_2400864FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  return swift_retain();
}

uint64_t sub_24008650C(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 48) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for DKIntelligentTrackingSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKIntelligentTrackingSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.state.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.state.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.__allocating_init(config:camera:time:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 424) + *(_QWORD *)(v3 + 424));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_240086C6C;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.getState()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 432) + *(_QWORD *)(*(_QWORD *)v0 + 432));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240086C6C;
  return v4();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.lockState()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 440) + *(_QWORD *)(*(_QWORD *)v0 + 440));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240086C70;
  return v4();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.unlockState()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 448) + *(_QWORD *)(*(_QWORD *)v0 + 448));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_24008670C;
  return v4();
}

uint64_t sub_24008670C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setSignal(signal:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 456) + *(_QWORD *)(*(_QWORD *)v1 + 456));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086C70;
  return v6(a1);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setFlipDirection(clockwise:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.update(input:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 472) + *(_QWORD *)(*(_QWORD *)v1 + 472));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086C70;
  return v6(a1);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.clear()()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v4 = (uint64_t (*)(void))(**(int **)(*(_QWORD *)v0 + 480) + *(_QWORD *)(*(_QWORD *)v0 + 480));
  v2 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v2;
  *v2 = v1;
  v2[1] = sub_240086C70;
  return v4();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.selectSubject(request:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 488) + *(_QWORD *)(*(_QWORD *)v1 + 488));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086C70;
  return v6(a1);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setAspectRatio(aspectRatio:imageSize:)(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(double, double, double, double);

  v12 = (uint64_t (*)(double, double, double, double))(**(int **)(*(_QWORD *)v4 + 496)
                                                               + *(_QWORD *)(*(_QWORD *)v4 + 496));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_24008670C;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setFramingMode(mode:horizontalFraming:verticalFraming:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(*(_QWORD *)v3 + 504)
                                                          + *(_QWORD *)(*(_QWORD *)v3 + 504));
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v8;
  *v8 = v4;
  v8[1] = sub_240086C70;
  return v10(a1, a2, a3);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.setROI(roi:)(double a1, double a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v10;
  uint64_t (*v12)(double, double, double, double);

  v12 = (uint64_t (*)(double, double, double, double))(**(int **)(*(_QWORD *)v4 + 512)
                                                               + *(_QWORD *)(*(_QWORD *)v4 + 512));
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v10;
  *v10 = v5;
  v10[1] = sub_240086C70;
  return v12(a1, a2, a3, a4);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.track(time:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 520) + *(_QWORD *)(*(_QWORD *)v1 + 520));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086AD4;
  return v6(a1);
}

uint64_t sub_240086AD4(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v4;

  v4 = *v1;
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(a1);
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.dumpLogs()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKIntelligentTrackingSession.reset(time:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(*(_QWORD *)v1 + 536) + *(_QWORD *)(*(_QWORD *)v1 + 536));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_240086C70;
  return v6(a1);
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingSession.Signal()
{
  return &type metadata for DKIntelligentTrackingSession.Signal;
}

uint64_t sub_240086BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240086BE8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240086C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKPersonGroupFilter.StampedPerson(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240086C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v12)(char *);
  NSObject *v13;
  os_log_type_t v14;
  _BOOL4 v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  _QWORD v21[2];
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  uint64_t v26;

  v1 = v0;
  v2 = sub_2401544C0();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)v21 - v7;
  v9 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedStreamingGallery;
  v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedStreamingGallery);
  if (!v10)
  {
    v12 = *(void (**)(char *))(v3 + 16);
    v23 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
    v12((char *)v21 - v7);
    v13 = sub_2401544A8();
    v14 = sub_240154964();
    v15 = os_log_type_enabled(v13, v14);
    v24 = v12;
    if (v15)
    {
      v16 = swift_slowAlloc();
      v22 = v2;
      v17 = (uint8_t *)v16;
      v18 = swift_slowAlloc();
      v21[1] = v6;
      v19 = v18;
      v26 = v18;
      *(_DWORD *)v17 = 136315138;
      v21[0] = v17 + 4;
      v25 = sub_240112D54(0xD000000000000010, 0x8000000240162490, &v26);
      sub_240154A6C();
      _os_log_impl(&dword_24006B000, v13, v14, "%s Initializing VU streaming gallery", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24267E17C](v19, -1, -1);
      v20 = v17;
      v2 = v22;
      MEMORY[0x24267E17C](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    sub_240154448();
    swift_allocObject();
    v10 = sub_2401543F4();
    *(_QWORD *)(v1 + v9) = v10;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v10;
}

uint64_t sub_2400870C0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_2400870D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[2];
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuLock;
  v0[3] = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuLock;
  v0[4] = *(_QWORD *)(v1 + v2);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_24008712C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  BOOL v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 112);
  v4 = __OFSUB__(v2, 1);
  v3 = v2 - 1 < 0;
  v5 = v2 - 1;
  if (v3 != v4)
  {
    swift_release();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  else
  {
    *(_QWORD *)(v1 + 112) = v5;
    swift_release();
    return swift_task_switch();
  }
}

uint64_t sub_240087194()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v2 = v0[2];
  v1 = v0[3];
  sub_240087220();
  sub_240088BD8();
  v0[5] = *(_QWORD *)(v2 + v1);
  swift_retain();
  return swift_task_switch();
}

uint64_t sub_2400871E4()
{
  uint64_t v0;

  sub_2400FF0FC();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_240087220()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  __int128 v35;
  unint64_t v36;
  _QWORD *v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t, uint64_t, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  void (*v68)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  id v74;
  id v75;
  NSObject *v76;
  char *v77;
  os_log_type_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int64_t v88;
  uint64_t v89;
  unint64_t v90;
  unint64_t v91;
  uint64_t v92;
  void (*v93)(char *, unint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  char *v101;
  float v102;
  float v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  char v112;
  double v113;
  void *v114;
  uint64_t v115;
  uint64_t v116;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v118;
  char v119;
  uint64_t *v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char v125;
  char v126;
  char v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  char v137;
  uint64_t v138;
  char v139;
  unint64_t v140;
  char v141;
  unint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  uint64_t v146;
  unint64_t v147;
  char v148;
  unint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  char v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, uint64_t, uint64_t, uint64_t);
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  BOOL v167;
  uint64_t v168;
  uint64_t v169;
  char v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  char v175;
  uint64_t v176;
  char v177;
  uint64_t v178;
  char v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  unsigned int v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  __int128 v194;
  uint64_t v195;
  uint64_t *v196;
  char *v197;
  char *v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t (*v206)(uint64_t, uint64_t, uint64_t);
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  void (*v216)(_QWORD *@<X8>);
  void *v217;
  uint64_t v218;
  unint64_t v219;
  id v220;
  uint64_t v221;
  int v222;
  int v223;
  uint64_t v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;

  v1 = v0;
  v2 = sub_2401544C0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v180 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_240154424();
  v226 = *(_QWORD *)(v6 - 8);
  v227 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v180 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v9);
  v187 = (char *)&v180 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v180 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v229 = sub_2401543E8();
  v224 = *(_QWORD *)(v229 - 8);
  MEMORY[0x24BDAC7A8](v229);
  v228 = (char *)&v180 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v199 = (char *)&v180 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v198 = (char *)&v180 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DD8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v192 = (uint64_t)&v180 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v191 = (uint64_t)&v180 - v23;
  v24 = MEMORY[0x24BDAC7A8](v22);
  v197 = (char *)&v180 - v25;
  v26 = MEMORY[0x24BDAC7A8](v24);
  v205 = (uint64_t)&v180 - v27;
  MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)&v180 - v28;
  v30 = sub_240086C7C();
  if (!v30)
    return v30 != 0;
  if (*(_QWORD *)(*(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups))
    v31 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups);
  else
    v31 = MEMORY[0x24BEE4AF8];
  v214 = *(_QWORD *)(v31 + 16);
  if (!v214)
  {
    swift_bridgeObjectRetain();
LABEL_140:
    swift_release();
    swift_bridgeObjectRelease();
    return v30 != 0;
  }
  v201 = v2;
  v209 = v30;
  v32 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedVUContext;
  v202 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdentityConfidenceMap;
  v195 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdentityConfidenceMap;
  v185 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_identityCount;
  v182 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdMap;
  v181 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdMap;
  v33 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceRecognitionFailureCount;
  v190 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyRecognitionFailureCount;
  v200 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v184 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate;
  v213 = v31 + 32;
  v188 = *MEMORY[0x24BEC0AE8];
  result = swift_bridgeObjectRetain();
  v217 = 0;
  *(_QWORD *)&v35 = 136315394;
  v194 = v35;
  v193 = MEMORY[0x24BEE4AD8] + 8;
  v203 = v3;
  v196 = v8;
  v225 = v13;
  v36 = 0;
  v211 = v29;
  v208 = v32;
  v210 = v1;
  v186 = v5;
  v212 = v31;
  v183 = v33;
  while (v36 < *(_QWORD *)(v31 + 16))
  {
    v37 = (_QWORD *)(v213 + 32 * v36);
    v230 = v37[1];
    if (v230)
    {
      v216 = *(void (**)(_QWORD *@<X8>))(v230
                                                  + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
      v38 = *(unsigned __int8 *)(v230 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8);
    }
    else
    {
      v216 = 0;
      v38 = 1;
    }
    v223 = v38;
    v39 = v37[2];
    if (v39)
    {
      v215 = *(_QWORD *)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
      v40 = *(unsigned __int8 *)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8);
    }
    else
    {
      v215 = 0;
      v40 = 1;
    }
    v222 = v40;
    v41 = v37[3];
    v219 = v36;
    v221 = v41;
    if (!v230 || !*(_QWORD *)(v230 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint))
    {
      if (!v39)
        goto LABEL_57;
      if (!*(_QWORD *)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint))
      {
        swift_retain();
LABEL_57:
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_58;
      }
    }
    v42 = objc_allocWithZone(MEMORY[0x24BDF9BB8]);
    v43 = v230;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    v44 = objc_msgSend(v42, sel_init);
    if (v43)
    {
      v45 = *(void **)(v230 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
      v46 = v45;
    }
    else
    {
      v45 = 0;
    }
    objc_msgSend(v44, sel_setFaceprint_, v45);

    if (v39)
    {
      v47 = *(void **)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint);
      v48 = v47;
    }
    else
    {
      v47 = 0;
    }
    objc_msgSend(v44, sel_setTorsoprint_, v47);

    if (v230)
    {
      v49 = *(void **)(v230 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint);
      v50 = v49;
    }
    else
    {
      v49 = 0;
    }
    v220 = v44;
    v218 = v39;
    if (v39)
    {
      v51 = *(void **)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint);
      v52 = v51;
    }
    else
    {
      v51 = 0;
    }
    v53 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDF9BC0]), sel_initWithFaceprint_torsoprint_, v49, v51);

    objc_msgSend(v220, sel_setFaceTorsoprint_, v53);
    v54 = v205;
    sub_24008918C(v32, v205);
    v55 = sub_240154460();
    v56 = *(_QWORD *)(v55 - 8);
    v206 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
    v57 = v206(v54, 1, v55);
    v207 = v55;
    v204 = v56;
    if (v57 == 1)
    {
      sub_240070BD4(v54, &qword_256FB5DD8);
      v58 = v198;
      sub_240154340();
      v59 = sub_24015434C();
      v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56);
      v60(v58, 0, 1, v59);
      v61 = v5;
      v62 = v3;
      v63 = v8;
      v64 = v55;
      v65 = v199;
      v60(v199, 1, 1, v59);
      v66 = (uint64_t)v197;
      v67 = v58;
      v29 = v211;
      MEMORY[0x24267CD9C](v67, v65);
      v68 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56);
      v69 = v64;
      v8 = v63;
      v3 = v62;
      v5 = v61;
      v1 = v210;
      v68(v66, 0, 1, v69);
      sub_2400891D4(v66, v32);
      sub_24008918C(v32, (uint64_t)v29);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v29, v54, v55);
      v68 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v56 + 56);
      v68((uint64_t)v29, 0, 1, v55);
    }
    v70 = v217;
    v71 = sub_24015443C();
    v39 = v218;
    if (v70)
    {
      sub_240070BD4((uint64_t)v29, &qword_256FB5DD8);
      v72 = v70;
      v217 = 0;
      goto LABEL_37;
    }
    v87 = v71;
    v217 = 0;
    sub_240070BD4((uint64_t)v29, &qword_256FB5DD8);
    if (v87)
    {
      v88 = *(_QWORD *)(v87 + 16);
      v89 = (uint64_t)v225;
      if (v88)
      {
        v231 = MEMORY[0x24BEE4AF8];
        sub_2400E59A8(0, v88, 0);
        v90 = (*(unsigned __int8 *)(v224 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v224 + 80);
        v189 = v87;
        v91 = v87 + v90;
        v92 = *(_QWORD *)(v224 + 72);
        v93 = *(void (**)(char *, unint64_t, uint64_t))(v224 + 16);
        while (1)
        {
          v93(v228, v91, v229);
          sub_2401543D0();
          v95 = v226;
          v94 = v227;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v226 + 48))(v89, 1, v227) == 1)
            break;
          v96 = sub_240154418();
          v97 = v89;
          v98 = v96;
          v100 = v99;
          (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v97, v94);
          if ((v100 & 1) != 0)
            goto LABEL_45;
LABEL_46:
          v101 = v228;
          sub_2401543DC();
          v103 = v102;
          (*(void (**)(char *, uint64_t))(v224 + 8))(v101, v229);
          v104 = v231;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_2400E59A8(0, *(_QWORD *)(v104 + 16) + 1, 1);
            v104 = v231;
          }
          v106 = *(_QWORD *)(v104 + 16);
          v105 = *(_QWORD *)(v104 + 24);
          if (v106 >= v105 >> 1)
          {
            sub_2400E59A8(v105 > 1, v106 + 1, 1);
            v104 = v231;
          }
          *(_QWORD *)(v104 + 16) = v106 + 1;
          v107 = v104 + 16 * v106;
          *(_QWORD *)(v107 + 32) = v98;
          *(double *)(v107 + 40) = v103;
          v91 += v92;
          --v88;
          v89 = (uint64_t)v225;
          if (!v88)
          {
            swift_bridgeObjectRelease();
            v1 = v210;
            v3 = v203;
            v5 = v186;
            v8 = v196;
            v29 = v211;
            goto LABEL_76;
          }
        }
        sub_240070BD4(v89, &qword_256FB5DE0);
LABEL_45:
        v98 = -1;
        goto LABEL_46;
      }
      swift_bridgeObjectRelease();
      v104 = MEMORY[0x24BEE4AF8];
LABEL_76:
      swift_retain();
      v114 = v217;
      v115 = sub_24008921C(v104, v1);
      v217 = v114;
      swift_bridgeObjectRelease();
      swift_release();
      if ((v223 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v116 = v202;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v231 = *(_QWORD *)(v1 + v116);
        *(_QWORD *)(v1 + v116) = 0x8000000000000000;
        sub_24007256C(v115, (uint64_t)v216, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v1 + v116) = v231;
        swift_bridgeObjectRelease();
      }
      v32 = v208;
      if ((v222 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v118 = v195;
        v119 = swift_isUniquelyReferenced_nonNull_native();
        v231 = *(_QWORD *)(v1 + v118);
        *(_QWORD *)(v1 + v118) = 0x8000000000000000;
        sub_24007256C(v115, v215, v119);
        *(_QWORD *)(v1 + v118) = v231;
        swift_bridgeObjectRelease();
      }
      v36 = v219;
      if (*(_QWORD *)(v115 + 16))
        v113 = *(double *)(v115 + 40);
      else
        v113 = 0.0;
      swift_bridgeObjectRelease();
      v39 = v218;
    }
    else
    {
      v113 = 0.0;
      v32 = v208;
      v36 = v219;
    }
    if (v113 < *(double *)(*(_QWORD *)(v1 + 32) + 112))
    {
      v120 = v8;
      v121 = v223;
      result = sub_2400887E8(v216, v223, v215, v222);
      if ((result & 1) == 0)
      {
        if ((v121 & 1) == 0)
        {
          swift_retain();
          v128 = v187;
          sub_240154274();
          v129 = sub_240154310();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v128, 0, 1, v129);
          v130 = (uint64_t)v128;
          v39 = v218;
          sub_2400EBB94(v130, (uint64_t)v216);
          v36 = v219;
          swift_release();
        }
        if ((v222 & 1) != 0)
        {
          v127 = 1;
        }
        else
        {
          swift_retain();
          v131 = v187;
          sub_240154274();
          v132 = sub_240154310();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v132 - 8) + 56))(v131, 0, 1, v132);
          v133 = (uint64_t)v131;
          v39 = v218;
          sub_2400EBB94(v133, v215);
          v36 = v219;
          swift_release();
          v127 = 0;
        }
        v126 = v223;
        v8 = v120;
        v3 = v203;
        goto LABEL_115;
      }
      v122 = *(_QWORD *)(v1 + v185);
      v123 = v122 + 1;
      if (__OFADD__(v122, 1))
        goto LABEL_143;
      *(_QWORD *)(v1 + v185) = v123;
      if (v230)
      {
        v124 = *(_QWORD *)(v230 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
        v125 = *(_BYTE *)(v230 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8);
      }
      else
      {
        v124 = 0;
        v125 = 1;
      }
      v134 = v190;
      if (v218)
      {
        v189 = *(_QWORD *)(v218 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
        v135 = *(_BYTE *)(v218 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8);
        if ((v125 & 1) == 0)
          goto LABEL_99;
      }
      else
      {
        v189 = 0;
        v135 = 1;
        if ((v125 & 1) == 0)
        {
LABEL_99:
          v136 = v182;
          v137 = swift_isUniquelyReferenced_nonNull_native();
          v231 = *(_QWORD *)(v1 + v136);
          *(_QWORD *)(v1 + v136) = 0x8000000000000000;
          sub_240072464(v123, v124, v137);
          *(_QWORD *)(v1 + v136) = v231;
          swift_bridgeObjectRelease();
          v134 = v190;
        }
      }
      if ((v135 & 1) == 0)
      {
        v138 = v181;
        v139 = swift_isUniquelyReferenced_nonNull_native();
        v231 = *(_QWORD *)(v1 + v138);
        *(_QWORD *)(v1 + v138) = 0x8000000000000000;
        sub_240072464(v123, v189, v139);
        *(_QWORD *)(v1 + v138) = v231;
        swift_bridgeObjectRelease();
        v134 = v190;
      }
      v3 = v203;
      v8 = v196;
      if ((v223 & 1) == 0)
      {
        v140 = sub_24013EF5C((uint64_t)v216);
        v134 = v190;
        if ((v141 & 1) != 0)
        {
          v142 = v140;
          v143 = v183;
          v144 = swift_isUniquelyReferenced_nonNull_native();
          v145 = *(_QWORD *)(v1 + v143);
          v231 = v145;
          *(_QWORD *)(v1 + v143) = 0x8000000000000000;
          if ((v144 & 1) == 0)
          {
            sub_2400AF888();
            v145 = v231;
          }
          sub_2400F7BA8(v142, v145);
          *(_QWORD *)(v1 + v143) = v145;
          swift_bridgeObjectRelease();
          v134 = v190;
        }
      }
      if ((v222 & 1) != 0)
      {
        v127 = 1;
      }
      else
      {
        v146 = v134;
        v147 = sub_24013EF5C(v215);
        if ((v148 & 1) != 0)
        {
          v149 = v147;
          v150 = swift_isUniquelyReferenced_nonNull_native();
          v151 = *(_QWORD *)(v1 + v146);
          v231 = v151;
          *(_QWORD *)(v1 + v146) = 0x8000000000000000;
          if ((v150 & 1) == 0)
          {
            sub_2400AF888();
            v151 = v231;
          }
          sub_2400F7BA8(v149, v151);
          *(_QWORD *)(v1 + v146) = v151;
          swift_bridgeObjectRelease();
        }
        v127 = 0;
      }
      v39 = v218;
      v36 = v219;
      v126 = v223;
      goto LABEL_115;
    }
    v127 = v222;
    v126 = v223;
LABEL_115:
    v152 = sub_240088754((uint64_t)v216, v126, v215, v127);
    if ((v153 & 1) != 0)
    {

      goto LABEL_58;
    }
    *v8 = v152;
    v154 = v8;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v226 + 104))(v8, v188, v227);
    v155 = v192;
    sub_24008918C(v32, v192);
    v156 = v207;
    if (v206(v155, 1, v207) == 1)
    {
      sub_240070BD4(v155, &qword_256FB5DD8);
      v157 = v198;
      sub_240154340();
      v158 = sub_24015434C();
      v159 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v158 - 8) + 56);
      v159(v157, 0, 1, v158);
      v160 = v199;
      v159(v199, 1, 1, v158);
      v161 = (uint64_t)v197;
      v162 = v157;
      v29 = v211;
      v163 = v160;
      v39 = v218;
      MEMORY[0x24267CD9C](v162, v163);
      v68(v161, 0, 1, v156);
      sub_2400891D4(v161, v32);
      v164 = v191;
      sub_24008918C(v32, v191);
    }
    else
    {
      v164 = v191;
      (*(void (**)(void))(v204 + 32))();
      v68(v164, 0, 1, v156);
    }
    v8 = v154;
    v165 = v217;
    sub_24015440C();
    if (!v165)
    {
      v217 = 0;
      result = sub_240070BD4(v164, &qword_256FB5DD8);
      v166 = *(_QWORD *)(v1 + v184);
      v167 = __OFSUB__(v166, 1);
      v168 = v166 - 1;
      v3 = v203;
      if (v167)
        goto LABEL_144;
      *(_QWORD *)(v1 + v184) = v168;
      v169 = sub_240154418();
      if ((v170 & 1) == 0)
      {
        v171 = v169;
        v32 = v208;
        if (v230)
        {
          v172 = *(_QWORD *)(v230 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
          v173 = *(_BYTE *)(v230 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8);
          if (v39)
            goto LABEL_126;
LABEL_136:
          v174 = 0;
          v175 = 1;
          if ((v173 & 1) != 0)
            goto LABEL_128;
        }
        else
        {
          v172 = 0;
          v173 = 1;
          if (!v39)
            goto LABEL_136;
LABEL_126:
          v174 = *(_QWORD *)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
          v175 = *(_BYTE *)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8);
          if ((v173 & 1) != 0)
          {
LABEL_128:
            if ((v175 & 1) != 0)
            {

            }
            else
            {
              v178 = v181;
              v179 = swift_isUniquelyReferenced_nonNull_native();
              v231 = *(_QWORD *)(v1 + v178);
              *(_QWORD *)(v1 + v178) = 0x8000000000000000;
              sub_240072464(v171, v174, v179);
              *(_QWORD *)(v1 + v178) = v231;
              v39 = v218;

              swift_bridgeObjectRelease();
            }
            v3 = v203;
            v36 = v219;
            v8 = v196;
            (*(void (**)(uint64_t *, uint64_t))(v226 + 8))(v196, v227);
            goto LABEL_58;
          }
        }
        v176 = v182;
        v177 = swift_isUniquelyReferenced_nonNull_native();
        v231 = *(_QWORD *)(v1 + v176);
        *(_QWORD *)(v1 + v176) = 0x8000000000000000;
        sub_240072464(v171, v172, v177);
        *(_QWORD *)(v1 + v176) = v231;
        v39 = v218;
        swift_bridgeObjectRelease();
        goto LABEL_128;
      }
      (*(void (**)(uint64_t *, uint64_t))(v226 + 8))(v8, v227);

      goto LABEL_54;
    }
    sub_240070BD4(v164, &qword_256FB5DD8);
    (*(void (**)(uint64_t *, uint64_t))(v226 + 8))(v154, v227);
    v72 = v165;
    v217 = 0;
    v3 = v203;
LABEL_37:
    v73 = v201;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v200, v201);
    v74 = v72;
    v75 = v72;
    v76 = sub_2401544A8();
    v77 = v5;
    v78 = sub_240154958();
    if (os_log_type_enabled(v76, v78))
    {
      v79 = swift_slowAlloc();
      v80 = (_QWORD *)swift_slowAlloc();
      v81 = swift_slowAlloc();
      v231 = v81;
      *(_DWORD *)v79 = v194;
      *(_QWORD *)(v79 + 4) = sub_240112D54(0x28737365636F7270, 0xE900000000000029, &v231);
      *(_WORD *)(v79 + 12) = 2112;
      v82 = v72;
      v83 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v79 + 14) = v83;
      *v80 = v83;

      _os_log_impl(&dword_24006B000, v76, v78, "%s Error: Threw VU streaming gallery recognition error=%@", (uint8_t *)v79, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DF0);
      swift_arrayDestroy();
      v84 = v80;
      v8 = v196;
      MEMORY[0x24267E17C](v84, -1, -1);
      swift_arrayDestroy();
      v85 = v81;
      v3 = v203;
      MEMORY[0x24267E17C](v85, -1, -1);
      v86 = v79;
      v39 = v218;
      MEMORY[0x24267E17C](v86, -1, -1);

    }
    else
    {

    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v77, v73);
    v5 = v77;
    v29 = v211;
    v1 = v210;
LABEL_54:
    v32 = v208;
    v36 = v219;
LABEL_58:
    v108 = v223;
    if (!v230)
      v108 = 1;
    if ((v108 & 1) == 0)
    {
      if (*(_QWORD *)(*(_QWORD *)(v1 + v202) + 16))
      {
        sub_24013EF5C((uint64_t)v216);
        v109 = MEMORY[0x24BEE4AF8];
        if ((v110 & 1) != 0)
          v109 = swift_bridgeObjectRetain();
      }
      else
      {
        v109 = MEMORY[0x24BEE4AF8];
      }
      *(_QWORD *)(v230 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = v109;
      swift_bridgeObjectRelease();
    }
    if (v222)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v230 = v39;
    }
    else if (v39)
    {
      if (*(_QWORD *)(*(_QWORD *)(v1 + v195) + 16))
      {
        sub_24013EF5C(v215);
        v111 = MEMORY[0x24BEE4AF8];
        if ((v112 & 1) != 0)
          v111 = swift_bridgeObjectRetain();
      }
      else
      {
        v111 = MEMORY[0x24BEE4AF8];
      }
      *(_QWORD *)(v39 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = v111;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = v219;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    ++v36;
    result = swift_release();
    v31 = v212;
    if (v36 == v214)
    {
      v30 = v209;
      goto LABEL_140;
    }
  }
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
  return result;
}

uint64_t sub_240088754(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  char v11;

  v5 = v4;
  if ((a2 & 1) != 0)
  {
    if ((a4 & 1) != 0)
      return 0;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdMap);
  v8 = *(_QWORD *)(v7 + 16);
  if ((a4 & 1) == 0)
  {
    if (v8)
    {
      v9 = sub_24013EF5C(a1);
      if ((v10 & 1) != 0)
        return *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v9);
    }
LABEL_7:
    v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdMap);
    if (!*(_QWORD *)(v7 + 16))
      return 0;
    a1 = a3;
    goto LABEL_10;
  }
  if (!v8)
    return 0;
LABEL_10:
  v9 = sub_24013EF5C(a1);
  if ((v11 & 1) != 0)
    return *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v9);
  return 0;
}

uint64_t sub_2400887E8(void (*a1)(_QWORD *a1@<X8>), char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  char v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _BOOL8 v24;
  uint64_t v25;
  char v26;
  unint64_t v27;
  char v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  char v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;

  v8 = v4;
  LOBYTE(v9) = a4;
  if ((a2 & 1) != 0)
  {
    a1 = 0;
    if ((a4 & 1) == 0)
      goto LABEL_7;
LABEL_33:
    sub_240071094((uint64_t)a1);
    return 0;
  }
  v7 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceRecognitionFailureCount;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *(_QWORD *)(v4 + v7);
  v46 = *(_QWORD *)(v8 + v7);
  *(_QWORD *)(v8 + v7) = 0x8000000000000000;
  v5 = sub_24013EF5C((uint64_t)a1);
  v15 = *(_QWORD *)(v13 + 16);
  v16 = (v14 & 1) == 0;
  v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_36;
  }
  LOBYTE(v6) = v14;
  if (*(_QWORD *)(v13 + 24) < v17)
  {
    sub_2400ACDE4(v17, isUniquelyReferenced_nonNull_native);
    v13 = v46;
    v18 = sub_24013EF5C((uint64_t)a1);
    if ((v6 & 1) == (v19 & 1))
    {
      v5 = v18;
      goto LABEL_12;
    }
LABEL_40:
    result = sub_240154F70();
    __break(1u);
    return result;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_39;
  while (1)
  {
LABEL_12:
    *(_QWORD *)(v8 + v7) = v13;
    swift_bridgeObjectRelease();
    v29 = *(_QWORD **)(v8 + v7);
    swift_bridgeObjectRetain();
    if ((v6 & 1) == 0)
      sub_2400ADEE4(v5, (uint64_t)a1, 0, v29);
    v6 = v29[7];
    swift_bridgeObjectRelease();
    v30 = *(_QWORD *)(v6 + 8 * v5);
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    *(_QWORD *)(v6 + 8 * v5) = v32;
    v33 = *(_QWORD *)(v8 + v7);
    v34 = *(_QWORD *)(v33 + 16);
    if (v34)
    {
      v35 = sub_24013EF5C((uint64_t)a1);
      if ((v36 & 1) != 0)
        v34 = *(_QWORD *)(*(_QWORD *)(v33 + 56) + 8 * v35);
      else
        v34 = 0;
    }
    if (*(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_maxRecognitionFailures) < v34)
      return 1;
    a1 = sub_240088AD8;
    if ((v9 & 1) != 0)
      goto LABEL_33;
LABEL_7:
    v20 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyRecognitionFailureCount;
    LOBYTE(v6) = swift_isUniquelyReferenced_nonNull_native();
    v21 = *(_QWORD *)(v8 + v20);
    v46 = v21;
    *(_QWORD *)(v8 + v20) = 0x8000000000000000;
    v9 = sub_24013EF5C(a3);
    v23 = *(_QWORD *)(v21 + 16);
    v24 = (v22 & 1) == 0;
    v25 = v23 + v24;
    if (__OFADD__(v23, v24))
      goto LABEL_37;
    v26 = v22;
    if (*(_QWORD *)(v21 + 24) >= v25)
    {
      if ((v6 & 1) == 0)
        sub_2400AF888();
    }
    else
    {
      sub_2400ACDE4(v25, v6);
      v27 = sub_24013EF5C(a3);
      if ((v26 & 1) != (v28 & 1))
        goto LABEL_40;
      v9 = v27;
    }
    *(_QWORD *)(v8 + v20) = v21;
    swift_bridgeObjectRelease();
    v37 = *(_QWORD **)(v8 + v20);
    swift_bridgeObjectRetain();
    if ((v26 & 1) == 0)
      sub_2400ADEE4(v9, a3, 0, v37);
    v5 = v37[7];
    swift_bridgeObjectRelease();
    v38 = *(_QWORD *)(v5 + 8 * v9);
    v31 = __OFADD__(v38, 1);
    v39 = v38 + 1;
    if (!v31)
      break;
LABEL_38:
    __break(1u);
LABEL_39:
    sub_2400AF888();
    v13 = v46;
  }
  *(_QWORD *)(v5 + 8 * v9) = v39;
  v40 = *(_QWORD *)(v8 + v20);
  if (*(_QWORD *)(v40 + 16) && (v41 = sub_24013EF5C(a3), (v42 & 1) != 0))
    v43 = *(_QWORD *)(*(_QWORD *)(v40 + 56) + 8 * v41);
  else
    v43 = 0;
  v44 = *(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_maxRecognitionFailures);
  sub_240071094((uint64_t)a1);
  return v44 < v43;
}

void sub_240088AD8(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_240088AE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0;
  if (sub_240086C7C())
  {
    sub_240154430();
    swift_release();
  }
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceRecognitionFailureCount) = sub_240107B20(MEMORY[0x24BEE4AF8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyRecognitionFailureCount) = sub_240107B20(v2);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdMap) = sub_240107B20(v2);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdMap) = sub_240107B20(v2);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate) = 100;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_identityCount) = 0;
  return result;
}

uint64_t sub_240088BD8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  result = sub_240086C7C();
  if (result)
  {
    if (!sub_240086C7C())
      return swift_release();
    v2 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate;
    if ((*(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate) & 0x8000000000000000) != 0)
    {
      swift_release();
    }
    else
    {
      v3 = sub_240154400();
      swift_release();
      if (v3 <= 1000)
        return swift_release();
    }
    sub_2401543C4();
    result = swift_release();
    *(_QWORD *)(v0 + v2) = 100;
  }
  return result;
}

_QWORD *sub_240088C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedStreamingGallery) = 0;
  v11 = (char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedVUContext;
  v12 = sub_240154460();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  v13 = MEMORY[0x24BEE4B00];
  *(_QWORD *)((char *)v5
            + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceRecognitionFailureCount) = MEMORY[0x24BEE4B00];
  *(_QWORD *)((char *)v5
            + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyRecognitionFailureCount) = v13;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdMap) = v13;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdMap) = v13;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_countToUpdate) = 100;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_identityCount) = 0;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_maxRecognitionFailures) = 10;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_minRecogntionSuccess) = 5;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_frameCount) = 0;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuMaxObservations) = 100;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuMaxIdentities) = 10;
  v14 = OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_vuLock;
  type metadata accessor for DKLockActor();
  v15 = swift_allocObject();
  swift_retain();
  swift_defaultActor_initialize();
  v16 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v15 + 112) = 1;
  *(_QWORD *)(v15 + 120) = v16;
  *(_QWORD *)((char *)v5 + v14) = v15;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_faceIdentityConfidenceMap) = v13;
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_bodyIdentityConfidenceMap) = v13;
  swift_release();
  sub_2401544B4();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_240088E78()
{
  uint64_t v0;

  swift_release();
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedVUContext, &qword_256FB5DD8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240088F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKVisualUnderstandingTask_cachedVUContext, &qword_256FB5DD8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24008901C()
{
  sub_240088F1C();
  return swift_deallocClassInstance();
}

uint64_t sub_240089040()
{
  return type metadata accessor for DKVisualUnderstandingTask();
}

uint64_t type metadata accessor for DKVisualUnderstandingTask()
{
  uint64_t result;

  result = qword_256FB5AA0;
  if (!qword_256FB5AA0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_240089084()
{
  unint64_t v0;

  sub_240089138();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_240089138()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256FB5AB8[0])
  {
    sub_240154460();
    v0 = sub_240154A30();
    if (!v1)
      atomic_store(v0, qword_256FB5AB8);
  }
}

uint64_t sub_24008918C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400891D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24008921C(uint64_t result, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  double *v8;
  unint64_t v9;
  _QWORD *v10;
  double v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v3 = 0;
  v4 = *(_QWORD *)(result + 16);
  v5 = result + 40;
  v6 = MEMORY[0x24BEE4AF8];
LABEL_2:
  if (v3 <= v4)
    v7 = v4;
  else
    v7 = v3;
  v8 = (double *)(v5 + 16 * v3);
  v9 = v7 + 1;
  while (1)
  {
    if (v4 == v3)
      return v6;
    if (v9 == ++v3)
      break;
    v10 = v8 + 2;
    v11 = *v8;
    v12 = *(double *)(*(_QWORD *)(a2 + 32) + 112) < *v8;
    v8 += 2;
    if (v12)
    {
      v13 = *(v10 - 3);
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
        result = sub_2400E59A8(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v15 = *(_QWORD *)(v6 + 16);
      v14 = *(_QWORD *)(v6 + 24);
      if (v15 >= v14 >> 1)
        result = sub_2400E59A8(v14 > 1, v15 + 1, 1);
      *(_QWORD *)(v6 + 16) = v15 + 1;
      v16 = v6 + 16 * v15;
      *(_QWORD *)(v16 + 32) = v13;
      *(double *)(v16 + 40) = v11;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240089340()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1[89] = v0;
  v2 = sub_24015434C();
  v1[90] = v2;
  v1[91] = *(_QWORD *)(v2 - 8);
  v1[92] = swift_task_alloc();
  v3 = sub_24015449C();
  v1[93] = v3;
  v1[94] = *(_QWORD *)(v3 - 8);
  v1[95] = swift_task_alloc();
  v4 = sub_2401541D8();
  v1[96] = v4;
  v1[97] = *(_QWORD *)(v4 - 8);
  v1[98] = swift_task_alloc();
  v1[99] = swift_task_alloc();
  v1[100] = swift_task_alloc();
  v1[101] = swift_task_alloc();
  v1[102] = swift_task_alloc();
  v1[103] = swift_task_alloc();
  v1[104] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  v1[105] = swift_task_alloc();
  v5 = sub_240154310();
  v1[106] = v5;
  v1[107] = *(_QWORD *)(v5 - 8);
  v1[108] = swift_task_alloc();
  v1[109] = swift_task_alloc();
  v6 = type metadata accessor for DKCamera();
  v1[110] = v6;
  v1[111] = *(_QWORD *)(v6 - 8);
  v1[112] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  v1[113] = swift_task_alloc();
  v1[114] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2400894F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(uint64_t, char *, uint64_t);
  char *v27;
  id v28;
  double v29;
  double v30;
  void (*v31)(uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  os_log_type_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _OWORD *v58;
  CGFloat v59;
  CGFloat v60;
  CGFloat v61;
  CGFloat v62;
  __int128 v63;
  void *v64;
  id v65;
  void *v66;
  __CVBuffer *v67;
  size_t Width;
  size_t Height;
  CGFloat x;
  CGFloat y;
  CGFloat v72;
  CGFloat v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(uint64_t, char *, uint64_t);
  double v78;
  double v79;
  void (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void (*v85)(uint64_t, uint64_t);
  CGFloat v86;
  CGFloat v87;
  CGFloat v88;
  CGFloat v89;
  double v90;
  double v91;
  __CVBuffer *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  os_log_type_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  _OWORD *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _BYTE *v116;
  _OWORD *v117;
  CGFloat v118;
  CGFloat v119;
  CGFloat v120;
  CGFloat v121;
  __int128 v122;
  void *v123;
  id v124;
  void *v125;
  __CVBuffer *v126;
  size_t v127;
  size_t v128;
  CGFloat v129;
  CGFloat v130;
  CGFloat v131;
  CGFloat v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, char *, uint64_t);
  double v137;
  double v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(uint64_t, uint64_t);
  CGFloat v145;
  CGFloat v146;
  CGFloat v147;
  CGFloat v148;
  double v149;
  double v150;
  __CVBuffer *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  os_log_type_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  _QWORD *v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  _OWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  _BYTE *v176;
  _OWORD *v177;
  CGFloat v178;
  CGFloat v179;
  CGFloat v180;
  CGFloat v181;
  __int128 v182;
  void *v183;
  id v184;
  void *v185;
  __CVBuffer *v186;
  size_t v187;
  size_t v188;
  CGFloat v189;
  CGFloat v190;
  CGFloat v191;
  CGFloat v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  void (*v196)(uint64_t, char *, uint64_t);
  double v197;
  double v198;
  void (*v199)(uint64_t, uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(uint64_t, uint64_t);
  CGFloat v205;
  CGFloat v206;
  CGFloat v207;
  CGFloat v208;
  double v209;
  double v210;
  __CVBuffer *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  unint64_t v219;
  os_log_type_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  _QWORD *v224;
  uint64_t v225;
  uint64_t v226;
  unint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  CGFloat v235;
  CGFloat v236;
  CGFloat v237;
  CGFloat v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  CGFloat *v247;
  __int128 v248;
  void *v249;
  CGFloat *v250;
  id v251;
  void *v252;
  __CVBuffer *v253;
  size_t v254;
  size_t v255;
  CGFloat v256;
  CGFloat v257;
  CGFloat v258;
  CGFloat v259;
  uint64_t v260;
  char *v261;
  unint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char v268;
  char v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  _OWORD *v274;
  _OWORD *v275;
  _OWORD *v276;
  uint64_t v277;
  uint64_t v278;
  unint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  char *v286;
  char *v287;
  _OWORD *v288;
  _QWORD *v289;
  uint64_t v290;
  char *v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  unint64_t v300;
  unint64_t v301;
  char v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  _QWORD *v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unint64_t v317;
  unint64_t v318;
  unint64_t v319;
  uint64_t v320;
  _BYTE *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char v325;
  uint64_t v326[4];
  CGRect v327;
  CGRect v328;
  CGRect v329;
  CGRect v330;
  CGRect v331;
  CGRect v332;
  CGRect v333;
  CGRect v334;
  CGRect v335;
  CGRect v336;
  CGRect v337;
  CGRect v338;
  CGRect v339;
  CGRect v340;

  v1 = v0;
  v2 = *(_QWORD *)(v0 + 912);
  v3 = *(_QWORD *)(v0 + 888);
  v4 = *(_QWORD *)(v1 + 880);
  v5 = *(_QWORD *)(v1 + 712);
  v6 = *(void **)(v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata);
  v7 = *(_QWORD *)(v5 + 48);
  v8 = v6;
  swift_retain();
  swift_retain();
  sub_2400A09FC(v2);
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v2, 0, 1, v4);
  sub_24008BA08(v2, v7 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera);
  swift_release();
  if (!v6)
    goto LABEL_190;
  v9 = *(_QWORD *)(v1 + 904);
  v10 = *(_QWORD *)(v1 + 888);
  v11 = *(_QWORD *)(v1 + 880);
  v12 = *(_QWORD *)(v5 + 48);
  sub_24008BA50(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v9);
  v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v9, 1, v11);
  v14 = *(_QWORD *)(v1 + 904);
  if (v13 == 1)
  {

    sub_240070BD4(v14, &qword_256FB4430);
LABEL_190:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v1 + 8))(1);
  }
  sub_240070AF8(*(_QWORD *)(v1 + 904), *(_QWORD *)(v1 + 896));
  v15 = *(void **)&v8[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image];
  v16 = *(void **)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  *(_QWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = v15;
  v261 = v8;
  v17 = v15;

  v322 = MEMORY[0x24BEE4AF8];
  v323 = MEMORY[0x24BEE4AF8];
  v324 = MEMORY[0x24BEE4AF8];
  v18 = *(void **)(*(_QWORD *)(v5 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  v289 = (_QWORD *)v1;
  v290 = v5;
  v19 = v5;
  if (v18)
  {
    v20 = *(_QWORD *)(v1 + 712);
    if (*(_BYTE *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveImageToFile) == 1)
    {
      v21 = *(_QWORD *)(v1 + 872);
      v22 = *(_QWORD *)(v1 + 864);
      v23 = *(_QWORD *)(v1 + 856);
      v24 = *(_QWORD *)(v1 + 848);
      v25 = &v261[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
      v26 = *(void (**)(uint64_t, char *, uint64_t))(v23 + 16);
      v26(v21, &v261[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time], v24);
      v27 = (char *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastImageSaveTime);
      v26(v22, v27, v24);
      v28 = v18;
      sub_24015428C();
      v30 = v29;
      v31 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v31(v22, v24);
      v31(v21, v24);
      if (v30 <= 1.0)
      {

        v19 = v290;
      }
      else
      {
        v32 = *(_QWORD *)(v1 + 840);
        v33 = *(_QWORD *)(v1 + 832);
        v34 = *(_QWORD *)(v1 + 776);
        v35 = *(_QWORD *)(v1 + 768);
        v36 = *(_QWORD *)(v1 + 760);
        v37 = *(_QWORD *)(v1 + 752);
        v38 = *(_QWORD *)(v1 + 744);
        sub_240154184();
        sub_240154484();
        sub_24015419C();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v36, v38);
        (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v34 + 56))(v32, 0, 1, v35);
        _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0((__CVBuffer *)v28, v32);
        v40 = v39;
        sub_240070BD4(v32, &qword_256FB4CB0);
        if (v40)
        {
          v325 = 6;
          strcpy((char *)v326, "Saved image ");
          BYTE5(v326[1]) = 0;
          HIWORD(v326[1]) = -5120;
          sub_2401546D0();
          swift_bridgeObjectRelease();
          v41 = sub_24015494C();
          _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v325, v326[0], v326[1], v41);

          swift_bridgeObjectRelease();
        }
        else
        {

        }
        v1 = (uint64_t)v289;
        v19 = v290;
        (*(void (**)(char *, char *, _QWORD))(v289[107] + 24))(v27, v25, v289[106]);
      }
    }
  }
  v278 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations;
  v42 = *(_QWORD *)&v261[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations];
  v326[0] = MEMORY[0x24BEE4AF8];
  v43 = *(_QWORD *)(v42 + 16);
  if (v43)
  {
    v44 = v1 + 296;
    v45 = (_QWORD *)(v1 + 656);
    v46 = v42 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_24008BA98(v46, v44);
      sub_24008BA98(v44, v1 + 256);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
      type metadata accessor for DKFaceObservation(0);
      if ((swift_dynamicCast() & 1) == 0)
        *v45 = 0;
      v47 = __swift_destroy_boxed_opaque_existential_1(v44);
      if (*v45)
      {
        MEMORY[0x24267D0CC](v47);
        if (*(_QWORD *)((v326[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v326[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
      }
      v46 += 40;
      --v43;
    }
    while (v43);
    v48 = v326[0];
    v1 = (uint64_t)v289;
    v19 = v290;
  }
  else
  {
    swift_bridgeObjectRetain();
    v48 = MEMORY[0x24BEE4AF8];
  }
  result = swift_bridgeObjectRelease();
  if (v48 >> 62)
    goto LABEL_111;
  v50 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (2)
  {
    v321 = (_BYTE *)(v1 + 408);
    if (v50)
    {
      if (v50 >= 1)
      {
        v51 = 0;
        v52 = v1 + 336;
        v53 = (_OWORD *)(v1 + 456);
        v54 = *(_QWORD *)(v1 + 896);
        v303 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveFaceCropToFile;
        v307 = *(_QWORD *)(v1 + 712);
        v291 = &v261[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
        v295 = v50;
        v285 = (char *)(v307 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastCropSaveTime);
        v281 = *(_QWORD *)(v1 + 856);
        v270 = *(_QWORD *)(v1 + 776);
        v274 = (_OWORD *)(v1 + 456);
        v314 = v54;
        v317 = v48 & 0xC000000000000001;
        v265 = *(_QWORD *)(v1 + 752);
        v299 = v48;
        v311 = v1 + 336;
        while (1)
        {
          if (v317)
          {
            v56 = MEMORY[0x24267D4E0](v51, v48);
          }
          else
          {
            v56 = *(_QWORD *)(v48 + 8 * v51 + 32);
            swift_retain();
          }
          v57 = *(_BYTE **)(v1 + 896);
          v58 = (_OWORD *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
          v59 = *(double *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
          v60 = *(double *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
          v61 = *(double *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
          v62 = *(double *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
          v325 = *(_BYTE *)(v54 + 1);
          LOBYTE(v326[0]) = *v57;
          sub_24007C92C(&v325, (unsigned __int8 *)v326, v52, v59, v60, v61, v62);
          sub_24008BADC(v52, (uint64_t)v53);
          if (v321[80] != 1)
            break;
LABEL_33:
          ++v51;
          swift_release();
          if (v50 == v51)
            goto LABEL_56;
        }
        v63 = v53[1];
        *v58 = *v53;
        v58[1] = v63;
        v64 = *(void **)(*(_QWORD *)(v19 + 48)
                       + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
        if (v64)
        {
          type metadata accessor for DKImageCrop();
          v48 = swift_allocObject();
          *(_QWORD *)(v48 + 16) = 0;
          v65 = v64;
          *(_QWORD *)(v48 + 56) = sub_240105F6C(MEMORY[0x24BEE4AF8]);
          v66 = *(void **)(v48 + 16);
          *(_QWORD *)(v48 + 16) = v64;
          v67 = (__CVBuffer *)v65;

          Width = CVPixelBufferGetWidth(v67);
          Height = CVPixelBufferGetHeight(v67);
          v327.origin.x = v59;
          v327.origin.y = v60;
          v327.size.width = v61;
          v327.size.height = v62;
          v328 = VNImageRectForNormalizedRect(v327, Width, Height);
          x = v328.origin.x;
          y = v328.origin.y;
          v72 = v328.size.width;
          v73 = v328.size.height;

          *(CGFloat *)(v48 + 24) = x;
          *(CGFloat *)(v48 + 32) = y;
          *(CGFloat *)(v48 + 40) = v72;
          *(CGFloat *)(v48 + 48) = v73;
          *(_QWORD *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = v48;
          swift_retain();
          swift_release();
          if (*(_BYTE *)(v307 + v303) == 1)
          {
            v74 = *(_QWORD *)(v1 + 872);
            v75 = *(_QWORD *)(v1 + 864);
            v76 = *(_QWORD *)(v1 + 848);
            v77 = *(void (**)(uint64_t, char *, uint64_t))(v281 + 16);
            v77(v74, v291, v76);
            v77(v75, v285, v76);
            sub_24015428C();
            v79 = v78;
            v80 = *(void (**)(uint64_t, uint64_t))(v281 + 8);
            v80(v75, v76);
            v80(v74, v76);
            if (v79 <= 1.0)
            {

              swift_release();
              v19 = v290;
              v50 = v295;
              v48 = v299;
              v52 = v311;
              v53 = v274;
            }
            else
            {
              v81 = *(_QWORD *)(v1 + 816);
              v82 = *(_QWORD *)(v1 + 768);
              v19 = *(_QWORD *)(v1 + 760);
              v83 = *(_QWORD *)(v1 + 744);
              sub_240154184();
              v326[0] = 1701011814;
              v326[1] = 0xE400000000000000;
              if (*(_BYTE *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8))
                v84 = 0;
              else
                v84 = *(_QWORD *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
              *(_QWORD *)(v1 + 704) = v84;
              sub_240154EBC();
              sub_2401546D0();
              swift_bridgeObjectRelease();
              sub_2401546D0();
              v1 = v326[1];
              sub_240154484();
              sub_24015419C();
              swift_bridgeObjectRelease();
              (*(void (**)(uint64_t, uint64_t))(v265 + 8))(v19, v83);
              v85 = *(void (**)(uint64_t, uint64_t))(v270 + 8);
              v85(v81, v82);
              v86 = *(double *)(v48 + 24);
              v87 = *(double *)(v48 + 32);
              v88 = *(double *)(v48 + 40);
              v89 = *(double *)(v48 + 48);
              v329.origin.x = v86;
              v329.origin.y = v87;
              v329.size.width = v88;
              v329.size.height = v89;
              v90 = CGRectGetWidth(v329);
              if ((~*(_QWORD *)&v90 & 0x7FF0000000000000) == 0)
              {
                __break(1u);
LABEL_100:
                __break(1u);
LABEL_101:
                __break(1u);
LABEL_102:
                __break(1u);
LABEL_103:
                __break(1u);
LABEL_104:
                __break(1u);
LABEL_105:
                __break(1u);
LABEL_106:
                __break(1u);
LABEL_107:
                __break(1u);
LABEL_108:
                __break(1u);
LABEL_109:
                __break(1u);
LABEL_110:
                __break(1u);
LABEL_111:
                swift_bridgeObjectRetain();
                v50 = sub_240154D30();
                result = swift_bridgeObjectRelease();
                continue;
              }
              if (v90 <= -9.22337204e18)
                goto LABEL_100;
              v19 = 0x43E0000000000000;
              if (v90 >= 9.22337204e18)
                goto LABEL_101;
              v330.origin.x = v86;
              v330.origin.y = v87;
              v330.size.width = v88;
              v330.size.height = v89;
              v91 = CGRectGetHeight(v330);
              if ((~*(_QWORD *)&v91 & 0x7FF0000000000000) == 0)
                goto LABEL_102;
              if (v91 <= -9.22337204e18)
                goto LABEL_103;
              if (v91 >= 9.22337204e18)
                goto LABEL_104;
              v92 = sub_240106978((__CVBuffer *)(uint64_t)v90, (uint64_t)v91);
              v93 = v289[105];
              v94 = v289[103];
              v95 = v289[96];
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v270 + 16))(v93, v94, v95);
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v270 + 56))(v93, 0, 1, v95);
              _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(v92, v93);
              v97 = v96;

              sub_240070BD4(v93, &qword_256FB4CB0);
              v85(v94, v95);
              v98 = v97;
              v53 = v274;
              if (v98)
              {
                v325 = 6;
                v326[0] = 0;
                v326[1] = 0xE000000000000000;
                sub_240154B38();
                swift_bridgeObjectRelease();
                v326[0] = 0xD000000000000010;
                v326[1] = 0x8000000240162620;
                sub_2401546D0();
                swift_bridgeObjectRelease();
                v99 = v326[0];
                v100 = v326[1];
                v101 = sub_24015494C();
                _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v325, v99, v100, v101);

                swift_release();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_release();

              }
              v1 = (uint64_t)v289;
              v19 = v290;
              v52 = v311;
              (*(void (**)(char *, char *, _QWORD))(v281 + 24))(v285, v291, v289[106]);
              v50 = v295;
              v48 = v299;
            }
            goto LABEL_30;
          }

          swift_release();
          v50 = v295;
          v48 = v299;
        }
        v52 = v311;
LABEL_30:
        v55 = swift_retain();
        MEMORY[0x24267D0CC](v55);
        if (*(_QWORD *)((v322 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v322 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
        v54 = v314;
        goto LABEL_33;
      }
      __break(1u);
      goto LABEL_192;
    }
    break;
  }
LABEL_56:
  swift_bridgeObjectRelease();
  v102 = *(_QWORD *)&v261[v278];
  v326[0] = MEMORY[0x24BEE4AF8];
  v103 = *(_QWORD *)(v102 + 16);
  if (v103)
  {
    v104 = v1 + 16;
    v105 = (_QWORD *)(v1 + 680);
    v106 = v102 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_24008BA98(v106, v104);
      sub_24008BA98(v104, v1 + 216);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
      type metadata accessor for DKBodyObservation(0);
      if ((swift_dynamicCast() & 1) == 0)
        *v105 = 0;
      v107 = __swift_destroy_boxed_opaque_existential_1(v104);
      if (*v105)
      {
        MEMORY[0x24267D0CC](v107);
        if (*(_QWORD *)((v326[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v326[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
      }
      v106 += 40;
      --v103;
    }
    while (v103);
    v108 = v326[0];
    v1 = (uint64_t)v289;
    v19 = v290;
  }
  else
  {
    swift_bridgeObjectRetain();
    v108 = MEMORY[0x24BEE4AF8];
  }
  result = swift_bridgeObjectRelease();
  if (v108 >> 62)
  {
    swift_bridgeObjectRetain();
    v109 = sub_240154D30();
    result = swift_bridgeObjectRelease();
    if (v109)
      goto LABEL_69;
  }
  else
  {
    v109 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v109)
    {
LABEL_69:
      if (v109 < 1)
      {
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
        goto LABEL_194;
      }
      v110 = 0;
      v111 = v1 + 416;
      v112 = (_OWORD *)(v1 + 496);
      v113 = *(_QWORD *)(v1 + 896);
      v304 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveBodyCropToFile;
      v308 = *(_QWORD *)(v1 + 712);
      v292 = &v261[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
      v296 = v109;
      v286 = (char *)(v308 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastBodyCropSaveTime);
      v282 = *(_QWORD *)(v1 + 856);
      v271 = *(_QWORD *)(v1 + 776);
      v275 = (_OWORD *)(v1 + 496);
      v315 = v113;
      v318 = v108 & 0xC000000000000001;
      v266 = *(_QWORD *)(v1 + 752);
      v300 = v108;
      v312 = v1 + 416;
      while (1)
      {
        if (v318)
        {
          v115 = MEMORY[0x24267D4E0](v110, v108);
        }
        else
        {
          v115 = *(_QWORD *)(v108 + 8 * v110 + 32);
          swift_retain();
        }
        v116 = *(_BYTE **)(v1 + 896);
        v117 = (_OWORD *)(v115 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
        v118 = *(double *)(v115 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
        v119 = *(double *)(v115 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
        v120 = *(double *)(v115 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
        v121 = *(double *)(v115 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
        v325 = *(_BYTE *)(v113 + 1);
        LOBYTE(v326[0]) = *v116;
        sub_24007C92C(&v325, (unsigned __int8 *)v326, v111, v118, v119, v120, v121);
        sub_24008BADC(v111, (uint64_t)v112);
        if (v321[120] != 1)
          break;
LABEL_76:
        ++v110;
        swift_release();
        if (v109 == v110)
          goto LABEL_113;
      }
      v122 = v112[1];
      *v117 = *v112;
      v117[1] = v122;
      v123 = *(void **)(*(_QWORD *)(v19 + 48)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
      if (v123)
      {
        type metadata accessor for DKImageCrop();
        v48 = swift_allocObject();
        *(_QWORD *)(v48 + 16) = 0;
        v124 = v123;
        *(_QWORD *)(v48 + 56) = sub_240105F6C(MEMORY[0x24BEE4AF8]);
        v125 = *(void **)(v48 + 16);
        *(_QWORD *)(v48 + 16) = v123;
        v126 = (__CVBuffer *)v124;

        v127 = CVPixelBufferGetWidth(v126);
        v128 = CVPixelBufferGetHeight(v126);
        v331.origin.x = v118;
        v331.origin.y = v119;
        v331.size.width = v120;
        v331.size.height = v121;
        v332 = VNImageRectForNormalizedRect(v331, v127, v128);
        v129 = v332.origin.x;
        v130 = v332.origin.y;
        v131 = v332.size.width;
        v132 = v332.size.height;

        *(CGFloat *)(v48 + 24) = v129;
        *(CGFloat *)(v48 + 32) = v130;
        *(CGFloat *)(v48 + 40) = v131;
        *(CGFloat *)(v48 + 48) = v132;
        *(_QWORD *)(v115 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = v48;
        swift_retain();
        swift_release();
        if (*(_BYTE *)(v308 + v304) == 1)
        {
          v133 = *(_QWORD *)(v1 + 872);
          v134 = *(_QWORD *)(v1 + 864);
          v135 = *(_QWORD *)(v1 + 848);
          v136 = *(void (**)(uint64_t, char *, uint64_t))(v282 + 16);
          v136(v133, v292, v135);
          v136(v134, v286, v135);
          sub_24015428C();
          v138 = v137;
          v139 = *(void (**)(uint64_t, uint64_t))(v282 + 8);
          v139(v134, v135);
          v139(v133, v135);
          if (v138 <= 1.0)
          {

            swift_release();
            v19 = v290;
            v109 = v296;
            v108 = v300;
            v111 = v312;
            v112 = v275;
          }
          else
          {
            v140 = *(_QWORD *)(v1 + 800);
            v141 = *(_QWORD *)(v1 + 768);
            v19 = *(_QWORD *)(v1 + 760);
            v142 = *(_QWORD *)(v1 + 744);
            sub_240154184();
            v326[0] = 2036625250;
            v326[1] = 0xE400000000000000;
            if (*(_BYTE *)(v115 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8))
              v143 = 0;
            else
              v143 = *(_QWORD *)(v115 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
            *(_QWORD *)(v1 + 696) = v143;
            sub_240154EBC();
            sub_2401546D0();
            swift_bridgeObjectRelease();
            sub_2401546D0();
            v1 = v326[1];
            sub_240154484();
            sub_24015419C();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v266 + 8))(v19, v142);
            v144 = *(void (**)(uint64_t, uint64_t))(v271 + 8);
            v144(v140, v141);
            v145 = *(double *)(v48 + 24);
            v146 = *(double *)(v48 + 32);
            v147 = *(double *)(v48 + 40);
            v148 = *(double *)(v48 + 48);
            v333.origin.x = v145;
            v333.origin.y = v146;
            v333.size.width = v147;
            v333.size.height = v148;
            v149 = CGRectGetWidth(v333);
            if ((~*(_QWORD *)&v149 & 0x7FF0000000000000) == 0)
              goto LABEL_105;
            if (v149 <= -9.22337204e18)
              goto LABEL_106;
            if (v149 >= 9.22337204e18)
              goto LABEL_107;
            v334.origin.x = v145;
            v334.origin.y = v146;
            v334.size.width = v147;
            v334.size.height = v148;
            v150 = CGRectGetHeight(v334);
            if ((~*(_QWORD *)&v150 & 0x7FF0000000000000) == 0)
              goto LABEL_108;
            if (v150 <= -9.22337204e18)
              goto LABEL_109;
            if (v150 >= 9.22337204e18)
              goto LABEL_110;
            v151 = sub_240106978((__CVBuffer *)(uint64_t)v149, (uint64_t)v150);
            v152 = v289[105];
            v153 = v289[101];
            v154 = v289[96];
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v271 + 16))(v152, v153, v154);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v271 + 56))(v152, 0, 1, v154);
            _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(v151, v152);
            v156 = v155;

            sub_240070BD4(v152, &qword_256FB4CB0);
            v144(v153, v154);
            v157 = v156;
            v112 = v275;
            if (v157)
            {
              v325 = 6;
              v326[0] = 0;
              v326[1] = 0xE000000000000000;
              sub_240154B38();
              swift_bridgeObjectRelease();
              v326[0] = 0xD000000000000010;
              v326[1] = 0x8000000240162600;
              sub_2401546D0();
              swift_bridgeObjectRelease();
              v158 = v326[0];
              v159 = v326[1];
              v160 = sub_24015494C();
              _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v325, v158, v159, v160);

              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_release();

            }
            v1 = (uint64_t)v289;
            v19 = v290;
            v111 = v312;
            (*(void (**)(char *, char *, _QWORD))(v282 + 24))(v286, v292, v289[106]);
            v109 = v296;
            v108 = v300;
          }
          goto LABEL_73;
        }

        swift_release();
        v109 = v296;
        v108 = v300;
      }
      v111 = v312;
LABEL_73:
      v114 = swift_retain();
      MEMORY[0x24267D0CC](v114);
      if (*(_QWORD *)((v323 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v323 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2401547D8();
      sub_240154814();
      sub_2401547B4();
      v113 = v315;
      goto LABEL_76;
    }
  }
LABEL_113:
  swift_bridgeObjectRelease();
  v161 = *(_QWORD *)&v261[v278];
  v326[0] = MEMORY[0x24BEE4AF8];
  v162 = *(_QWORD *)(v161 + 16);
  if (v162)
  {
    v163 = v1 + 176;
    v164 = (_QWORD *)(v1 + 664);
    v165 = v161 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_24008BA98(v165, v163);
      sub_24008BA98(v163, v1 + 136);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
      type metadata accessor for DKHandObservation(0);
      if ((swift_dynamicCast() & 1) == 0)
        *v164 = 0;
      v166 = __swift_destroy_boxed_opaque_existential_1(v163);
      if (*v164)
      {
        MEMORY[0x24267D0CC](v166);
        if (*(_QWORD *)((v326[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v326[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
      }
      v165 += 40;
      --v162;
    }
    while (v162);
    v167 = v326[0];
    v19 = v290;
  }
  else
  {
    swift_bridgeObjectRetain();
    v167 = MEMORY[0x24BEE4AF8];
  }
  result = swift_bridgeObjectRelease();
  if (v167 >> 62)
    goto LABEL_162;
  v168 = *(_QWORD *)((v167 & 0xFFFFFFFFFFFFF8) + 0x10);
  v169 = v289;
  if (v168)
  {
    while (2)
    {
      if (v168 < 1)
        goto LABEL_193;
      v170 = 0;
      v171 = (uint64_t)(v169 + 67);
      v172 = v169 + 77;
      v173 = v169[112];
      v305 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveHandCropToFile;
      v309 = v169[89];
      v293 = &v261[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
      v297 = v168;
      v287 = (char *)(v309 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastHandCropSaveTime);
      v283 = v169[107];
      v272 = v169[97];
      v276 = v169 + 77;
      v316 = v173;
      v319 = v167 & 0xC000000000000001;
      v267 = v169[94];
      v301 = v167;
      v313 = v169 + 67;
      while (1)
      {
        if (v319)
        {
          v175 = MEMORY[0x24267D4E0](v170, v167);
        }
        else
        {
          v175 = *(_QWORD *)(v167 + 8 * v170 + 32);
          swift_retain();
        }
        v176 = (_BYTE *)v169[112];
        v177 = (_OWORD *)(v175 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
        v178 = *(double *)(v175 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
        v179 = *(double *)(v175 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 8);
        v180 = *(double *)(v175 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 16);
        v181 = *(double *)(v175 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 24);
        v325 = *(_BYTE *)(v173 + 1);
        LOBYTE(v326[0]) = *v176;
        sub_24007C92C(&v325, (unsigned __int8 *)v326, v171, v178, v179, v180, v181);
        sub_24008BADC(v171, (uint64_t)v172);
        if (v321[240] != 1)
          break;
LABEL_133:
        ++v170;
        swift_release();
        if (v168 == v170)
          goto LABEL_163;
      }
      v182 = v172[1];
      *v177 = *v172;
      v177[1] = v182;
      v183 = *(void **)(*(_QWORD *)(v19 + 48)
                      + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
      if (v183)
      {
        type metadata accessor for DKImageCrop();
        v167 = swift_allocObject();
        *(_QWORD *)(v167 + 16) = 0;
        v184 = v183;
        *(_QWORD *)(v167 + 56) = sub_240105F6C(MEMORY[0x24BEE4AF8]);
        v185 = *(void **)(v167 + 16);
        *(_QWORD *)(v167 + 16) = v183;
        v186 = (__CVBuffer *)v184;

        v187 = CVPixelBufferGetWidth(v186);
        v188 = CVPixelBufferGetHeight(v186);
        v335.origin.x = v178;
        v335.origin.y = v179;
        v335.size.width = v180;
        v335.size.height = v181;
        v336 = VNImageRectForNormalizedRect(v335, v187, v188);
        v189 = v336.origin.x;
        v190 = v336.origin.y;
        v191 = v336.size.width;
        v192 = v336.size.height;

        *(CGFloat *)(v167 + 24) = v189;
        *(CGFloat *)(v167 + 32) = v190;
        *(CGFloat *)(v167 + 40) = v191;
        *(CGFloat *)(v167 + 48) = v192;
        *(_QWORD *)(v175 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = v167;
        swift_retain();
        swift_release();
        if (*(_BYTE *)(v309 + v305) == 1)
        {
          v193 = v169[109];
          v194 = v169[108];
          v195 = v169[106];
          v196 = *(void (**)(uint64_t, char *, uint64_t))(v283 + 16);
          v196(v193, v293, v195);
          v196(v194, v287, v195);
          sub_24015428C();
          v198 = v197;
          v199 = *(void (**)(uint64_t, uint64_t))(v283 + 8);
          v199(v194, v195);
          v199(v193, v195);
          if (v198 <= 1.0)
          {

            swift_release();
            v19 = v290;
            v168 = v297;
            v167 = v301;
            v171 = (uint64_t)v313;
            v172 = v276;
          }
          else
          {
            v200 = v169[98];
            v201 = v169[96];
            v19 = v169[95];
            v202 = v169[93];
            sub_240154184();
            v326[0] = 1684955496;
            v326[1] = 0xE400000000000000;
            if (*(_BYTE *)(v175 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId + 8))
              v203 = 0;
            else
              v203 = *(_QWORD *)(v175 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
            v169[86] = v203;
            sub_240154EBC();
            sub_2401546D0();
            swift_bridgeObjectRelease();
            sub_2401546D0();
            sub_240154484();
            sub_24015419C();
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v267 + 8))(v19, v202);
            v204 = *(void (**)(uint64_t, uint64_t))(v272 + 8);
            v204(v200, v201);
            v205 = *(double *)(v167 + 24);
            v206 = *(double *)(v167 + 32);
            v207 = *(double *)(v167 + 40);
            v208 = *(double *)(v167 + 48);
            v337.origin.x = v205;
            v337.origin.y = v206;
            v337.size.width = v207;
            v337.size.height = v208;
            v209 = CGRectGetWidth(v337);
            if ((~*(_QWORD *)&v209 & 0x7FF0000000000000) == 0)
            {
              __break(1u);
LABEL_157:
              __break(1u);
LABEL_158:
              __break(1u);
LABEL_159:
              __break(1u);
LABEL_160:
              __break(1u);
LABEL_161:
              __break(1u);
LABEL_162:
              swift_bridgeObjectRetain();
              v168 = sub_240154D30();
              result = swift_bridgeObjectRelease();
              v169 = v289;
              if (!v168)
                goto LABEL_163;
              continue;
            }
            if (v209 <= -9.22337204e18)
              goto LABEL_157;
            if (v209 >= 9.22337204e18)
              goto LABEL_158;
            v338.origin.x = v205;
            v338.origin.y = v206;
            v338.size.width = v207;
            v338.size.height = v208;
            v210 = CGRectGetHeight(v338);
            if ((~*(_QWORD *)&v210 & 0x7FF0000000000000) == 0)
              goto LABEL_159;
            if (v210 <= -9.22337204e18)
              goto LABEL_160;
            if (v210 >= 9.22337204e18)
              goto LABEL_161;
            v211 = sub_240106978((__CVBuffer *)(uint64_t)v209, (uint64_t)v210);
            v212 = v289[105];
            v213 = v289[99];
            v214 = v289[96];
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v272 + 16))(v212, v213, v214);
            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v272 + 56))(v212, 0, 1, v214);
            _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(v211, v212);
            v216 = v215;

            sub_240070BD4(v212, &qword_256FB4CB0);
            v204(v213, v214);
            v217 = v216;
            v172 = v276;
            if (v217)
            {
              v325 = 6;
              v326[0] = 0;
              v326[1] = 0xE000000000000000;
              sub_240154B38();
              swift_bridgeObjectRelease();
              v326[0] = 0xD000000000000010;
              v326[1] = 0x80000002401625E0;
              sub_2401546D0();
              swift_bridgeObjectRelease();
              v218 = v326[0];
              v219 = v326[1];
              v220 = sub_24015494C();
              _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v325, v218, v219, v220);

              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_release();

            }
            v169 = v289;
            v19 = v290;
            v171 = (uint64_t)v313;
            (*(void (**)(char *, char *, _QWORD))(v283 + 24))(v287, v293, v289[106]);
            v168 = v297;
            v167 = v301;
          }
          goto LABEL_130;
        }

        swift_release();
        v168 = v297;
        v167 = v301;
      }
      break;
    }
    v171 = (uint64_t)v313;
LABEL_130:
    v174 = swift_retain();
    MEMORY[0x24267D0CC](v174);
    if (*(_QWORD *)((v324 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v324 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
    v173 = v316;
    goto LABEL_133;
  }
LABEL_163:
  swift_bridgeObjectRelease();
  v221 = *(_QWORD *)&v261[v278];
  v326[0] = MEMORY[0x24BEE4AF8];
  v222 = *(_QWORD *)(v221 + 16);
  if (v222)
  {
    v223 = (uint64_t)(v169 + 12);
    v224 = v169 + 84;
    v225 = v221 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_24008BA98(v225, v223);
      sub_24008BA98(v223, (uint64_t)(v169 + 7));
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
      type metadata accessor for DKObjectObservation(0);
      if ((swift_dynamicCast() & 1) == 0)
        *v224 = 0;
      v226 = __swift_destroy_boxed_opaque_existential_1(v223);
      if (*v224)
      {
        MEMORY[0x24267D0CC](v226);
        if (*(_QWORD *)((v326[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v326[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
      }
      v225 += 40;
      --v222;
    }
    while (v222);
    v227 = v326[0];
    v19 = v290;
  }
  else
  {
    swift_bridgeObjectRetain();
    v227 = MEMORY[0x24BEE4AF8];
  }
  result = swift_bridgeObjectRelease();
  if (!(v227 >> 62))
  {
    v228 = *(_QWORD *)((v227 & 0xFFFFFFFFFFFFF8) + 0x10);
    v1 = (uint64_t)v289;
    if (v228)
      goto LABEL_176;
LABEL_189:
    v260 = *(_QWORD *)(v1 + 896);
    swift_bridgeObjectRelease();
    *(_QWORD *)(*(_QWORD *)(v19 + 48)
              + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = v322;
    swift_bridgeObjectRelease();
    *(_QWORD *)(*(_QWORD *)(v19 + 48)
              + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = v323;
    swift_bridgeObjectRelease();
    *(_QWORD *)(*(_QWORD *)(v19 + 48)
              + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = v324;

    swift_bridgeObjectRelease();
    sub_240070B3C(v260);
    goto LABEL_190;
  }
  swift_bridgeObjectRetain();
  v228 = sub_240154D30();
  result = swift_bridgeObjectRelease();
  v1 = (uint64_t)v289;
  if (!v228)
    goto LABEL_189;
LABEL_176:
  if (v228 >= 1)
  {
    v229 = 0;
    v230 = *(char **)(v1 + 896);
    v273 = v1 + 576;
    v277 = v228;
    v288 = (_OWORD *)(v1 + 376);
    v269 = v230[1];
    v268 = *v230;
    v263 = *(_QWORD *)(v1 + 728);
    v264 = *(_QWORD *)(v1 + 856);
    v262 = v227 & 0xC000000000000001;
    v279 = v227;
    do
    {
      v320 = v229;
      if (v262)
      {
        v232 = MEMORY[0x24267D4E0](v229, v227);
      }
      else
      {
        v232 = *(_QWORD *)(v227 + 8 * v229 + 32);
        swift_retain();
      }
      v233 = *(_QWORD *)(v1 + 736);
      v310 = *(_QWORD *)(v1 + 872);
      v234 = *(_QWORD *)(v1 + 720);
      v294 = *(_QWORD *)(v1 + 848);
      v298 = v234;
      (*(void (**)(void))(v264 + 16))();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v263 + 16))(v233, v232 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, v234);
      v235 = *(double *)(v232 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
      v236 = *(double *)(v232 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect + 8);
      v237 = *(double *)(v232 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect + 16);
      v238 = *(double *)(v232 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect + 24);
      v306 = *(_QWORD *)(v232 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId);
      v302 = *(_BYTE *)(v232 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId + 8);
      type metadata accessor for DKFaceObservation(0);
      v239 = swift_allocObject();
      v240 = v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
      v241 = v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
      v242 = v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
      v243 = v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
      v244 = v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
      v245 = v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
      v284 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType;
      *(_BYTE *)(v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType) = 0;
      v280 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop;
      *(_QWORD *)(v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
      *(_QWORD *)(v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
      v246 = v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
      *(_QWORD *)v246 = 0;
      *(_BYTE *)(v246 + 8) = 1;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v264 + 32))(v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, v310, v294);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v263 + 32))(v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v233, v298);
      v247 = (CGFloat *)(v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
      *v247 = v235;
      v247[1] = v236;
      v247[2] = v237;
      v247[3] = v238;
      *(_QWORD *)(v239 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = MEMORY[0x24BEE4AF8];
      *(_QWORD *)v240 = v306;
      *(_BYTE *)(v240 + 8) = v302;
      *(_QWORD *)v241 = 0;
      *(_BYTE *)(v241 + 8) = 1;
      *(_QWORD *)v242 = 0;
      *(_BYTE *)(v242 + 8) = 1;
      *(_QWORD *)v243 = 0;
      *(_BYTE *)(v243 + 8) = 1;
      *(_QWORD *)v244 = 0;
      *(_BYTE *)(v244 + 8) = 1;
      *(_QWORD *)v245 = 0x3FF0000000000000;
      *(_BYTE *)(v245 + 8) = 0;
      v325 = v269;
      LOBYTE(v326[0]) = v268;
      sub_24007C92C(&v325, (unsigned __int8 *)v326, v273, v235, v236, v237, v238);
      sub_24008BADC(v273, (uint64_t)v288);
      v19 = v290;
      if (*v321 != 1)
      {
        v248 = v288[1];
        *(_OWORD *)v247 = *v288;
        *((_OWORD *)v247 + 1) = v248;
        v249 = *(void **)(*(_QWORD *)(v290 + 48)
                        + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
        if (v249)
        {
          type metadata accessor for DKImageCrop();
          v250 = (CGFloat *)swift_allocObject();
          v250[2] = 0.0;
          v251 = v249;
          *((_QWORD *)v250 + 7) = sub_240105F6C(MEMORY[0x24BEE4AF8]);
          v252 = (void *)*((_QWORD *)v250 + 2);
          *((_QWORD *)v250 + 2) = v249;
          v253 = (__CVBuffer *)v251;

          v254 = CVPixelBufferGetWidth(v253);
          v255 = CVPixelBufferGetHeight(v253);
          v339.origin.x = v235;
          v339.origin.y = v236;
          v339.size.width = v237;
          v339.size.height = v238;
          v340 = VNImageRectForNormalizedRect(v339, v254, v255);
          v256 = v340.origin.x;
          v257 = v340.origin.y;
          v258 = v340.size.width;
          v259 = v340.size.height;

          v250[3] = v256;
          v250[4] = v257;
          v250[5] = v258;
          v250[6] = v259;
          *(_QWORD *)(v239 + v280) = v250;

          swift_release();
        }
        *(_BYTE *)(v239 + v284) = 1;
        v231 = swift_retain();
        MEMORY[0x24267D0CC](v231);
        if (*(_QWORD *)((v322 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v322 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
      }
      v229 = v320 + 1;
      swift_release();
      swift_release();
      v227 = v279;
      v1 = (uint64_t)v289;
    }
    while (v277 != v320 + 1);
    goto LABEL_189;
  }
LABEL_194:
  __break(1u);
  return result;
}

_QWORD *sub_24008B650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastMetadata) = 0;
  *((_BYTE *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveFaceCropToFile) = 0;
  *((_BYTE *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveBodyCropToFile) = 0;
  *((_BYTE *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveHandCropToFile) = 0;
  *((_BYTE *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_saveImageToFile) = 0;
  swift_retain();
  sub_240154274();
  sub_240154274();
  sub_240154274();
  sub_240154274();
  swift_release();
  sub_2401544B4();
  v5[2] = a1;
  v5[3] = a2;
  v5[4] = a3;
  v5[5] = a4;
  v5[6] = a5;
  return v5;
}

uint64_t sub_24008B77C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v4)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastCropSaveTime;
  v2 = sub_240154310();
  v4 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v4(v1, v2);
  v4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastBodyCropSaveTime, v2);
  v4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastHandCropSaveTime, v2);
  return ((uint64_t (*)(uint64_t, uint64_t))v4)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastImageSaveTime, v2);
}

uint64_t sub_24008B82C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastCropSaveTime;
  v4 = sub_240154310();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastBodyCropSaveTime, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastHandCropSaveTime, v4);
  v5(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKPrepareInputTask_lastImageSaveTime, v4);
  return v0;
}

uint64_t sub_24008B914()
{
  sub_24008B82C();
  return swift_deallocClassInstance();
}

uint64_t sub_24008B938()
{
  return type metadata accessor for DKPrepareInputTask();
}

uint64_t type metadata accessor for DKPrepareInputTask()
{
  uint64_t result;

  result = qword_256FB5E20;
  if (!qword_256FB5E20)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24008B97C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_24008BA08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24008BA50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24008BA98(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24008BADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4FA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24008BB24(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9;
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  void (*v22)(char *, _QWORD);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  char v38[32];
  uint64_t v39;

  v27 = a5;
  v28 = a8;
  v33 = a1;
  v34 = a2;
  v26 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v35 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v31 = (char *)&v24 - v13;
  v36 = a4;
  MEMORY[0x24BDAC7A8](v12);
  v30 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = swift_getAssociatedTypeWitness();
  v29 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v24 - v16;
  v18 = sub_240154904();
  if (!v18)
    return sub_2401547F0();
  v19 = v18;
  v25 = v15;
  v39 = sub_240154538();
  v32 = sub_240154C40();
  sub_240154BF8();
  v36 = v17;
  result = sub_2401548F8();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    v21 = v31;
    while (1)
    {
      v22 = (void (*)(char *, _QWORD))sub_24015491C();
      (*(void (**)(char *))(v11 + 16))(v21);
      v22(v38, 0);
      v23 = v37;
      v33(v21, v35);
      if (v23)
        break;
      v37 = 0;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
      sub_240154C28();
      sub_240154910();
      if (!--v19)
      {
        (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
        return v39;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v21, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v36, v25);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v28, v35, v27);
  }
  return result;
}

uint64_t DKBinaryProbabilityFilter.__allocating_init(alpha:beta:threshold:initialProbability:lowThreshold:time:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8)
{
  char v14;
  char v15;
  uint64_t v16;

  v14 = a2 & 1;
  v15 = a4 & 1;
  v16 = swift_allocObject();
  DKBinaryProbabilityFilter.init(alpha:beta:threshold:initialProbability:lowThreshold:time:)(a1, v14, a3, v15, a5, a6, a7, a8);
  return v16;
}

uint64_t DKBinaryProbabilityFilter.init(alpha:beta:threshold:initialProbability:lowThreshold:time:)(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;

  v9 = v8;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  v21 = (char *)&v26 - v20;
  *(_BYTE *)(v9 + 49) = 0;
  v22 = *(double *)&a1;
  if ((a2 & 1) != 0)
    v22 = 0.5;
  *(double *)(v9 + 24) = v22;
  v23 = *(_QWORD *)&v22;
  sub_24008BFDC(a5, (uint64_t)&v26 - v20);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  v24 = sub_240148668(v23, 0, *(uint64_t *)&a7, 0, 0, (uint64_t)v21, 0, 1, a6, 0, 1);
  sub_240077EAC(a5);
  *(_QWORD *)(v9 + 16) = v24;
  *(double *)(v9 + 32) = a8;
  *(_QWORD *)(v9 + 40) = a3;
  *(_BYTE *)(v9 + 48) = a4 & 1;
  return v9;
}

uint64_t sub_24008BFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24008C024(uint64_t a1, char a2, uint64_t a3, char a4, double a5)
{
  double v7;
  uint64_t v8;
  char v9;

  if ((a2 & 1) != 0)
  {
    swift_retain();
    v7 = a5;
    v8 = 0x3FF0000000000000;
    v9 = 0;
  }
  else
  {
    swift_retain();
    v7 = a5;
    v8 = a3;
    v9 = (a4 & 1) != 0;
  }
  sub_240148324(v8, v9, a1, v7);
  return swift_release();
}

uint64_t sub_24008C0AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24008BFDC(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, a1);
}

double sub_24008C0C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v1 + 33) != 1)
    return *(double *)(v0 + 24);
  if (*(_BYTE *)(v1 + 32) == 1)
    return atan2(*(long double *)(v1 + 48), *(long double *)(v1 + 56));
  return *(double *)(v1 + 40);
}

uint64_t sub_24008C0FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(v0 + 49) = 0;
  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v1 + 33) = 0;
  v2 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  swift_retain();
  sub_240077EAC(v2);
  v3 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v2, 1, 1, v3);
  return swift_release();
}

uint64_t sub_24008C168()
{
  uint64_t v0;
  uint64_t v1;
  double v2;
  double v3;
  char v4;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  if (*(_BYTE *)(v1 + 33) == 1)
  {
    if (*(_BYTE *)(v1 + 32) == 1)
      v2 = atan2(*(long double *)(v1 + 48), *(long double *)(v1 + 56));
    else
      v2 = *(double *)(v1 + 40);
  }
  else
  {
    v2 = *(double *)(v0 + 24);
  }
  v3 = *(double *)(v0 + 32);
  if ((*(_BYTE *)(v0 + 48) & 1) != 0)
  {
    if (v3 >= v2)
    {
LABEL_12:
      v4 = 0;
      *(_BYTE *)(v0 + 49) = 0;
      goto LABEL_14;
    }
  }
  else if (v3 >= v2)
  {
    if (v2 >= *(double *)(v0 + 40))
    {
      v4 = *(_BYTE *)(v0 + 49);
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  v4 = 1;
  *(_BYTE *)(v0 + 49) = 1;
LABEL_14:
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6068);
  result = swift_allocObject();
  *(_BYTE *)(result + 16) = v4;
  *(double *)(result + 24) = v2;
  return result;
}

uint64_t DKBinaryProbabilityFilter.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t DKBinaryProbabilityFilter.__deallocating_deinit()
{
  return sub_24008FBB0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

double sub_24008C250()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double sub_24008C258()
{
  uint64_t v0;

  return *(double *)(v0 + 40);
}

uint64_t DKMultivariateProbabilityFilter.__allocating_init(variableNames:alpha:beta:)(uint64_t a1, double a2, double a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  DKMultivariateProbabilityFilter.init(variableNames:alpha:beta:)(a1, a2, a3);
  return v6;
}

uint64_t DKMultivariateProbabilityFilter.init(variableNames:alpha:beta:)(uint64_t a1, double a2, double a3)
{
  double *v3;
  double *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char v26;
  void (*v27)(char *, unint64_t, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t result;
  uint64_t v40;
  double *v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v4 = v3;
  v8 = *(_QWORD *)v3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v48 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v8 + 80);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  v15 = MEMORY[0x24BDAC7A8](v10);
  v51 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v15);
  v50 = (char *)&v40 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v40 - v18;
  v20 = type metadata accessor for DKSmoothingFilter();
  swift_getTupleTypeMetadata2();
  sub_2401547F0();
  v46 = *(_QWORD *)(v8 + 104);
  v47 = v20;
  *((_QWORD *)v4 + 2) = sub_24015455C();
  v4[3] = 0.5;
  v4[4] = a2;
  v4[5] = a3;
  v45 = v4 + 2;
  v21 = MEMORY[0x24267D168](a1, v12);
  if (v21 >= 1)
  {
    v22 = v21;
    if (MEMORY[0x24267D180](a1, v12))
    {
      v40 = v14;
      v41 = v4;
      v23 = 0;
      v24 = 1.0 / (double)v22;
      v42 = xmmword_240157220;
      v43 = a1;
      v44 = v19;
      v25 = (uint64_t)v48;
      while (1)
      {
        v26 = sub_240154808();
        sub_2401547CC();
        if ((v26 & 1) != 0)
        {
          v27 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
          v27(v19, a1+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(_QWORD *)(v13 + 72) * v23, v12);
          v28 = v23 + 1;
          if (__OFADD__(v23, 1))
            goto LABEL_11;
        }
        else
        {
          result = sub_240154B8C();
          if (v40 != 8)
          {
            __break(1u);
            return result;
          }
          v52 = result;
          v27 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
          v27(v19, (unint64_t)&v52, v12);
          swift_unknownObjectRelease();
          v28 = v23 + 1;
          if (__OFADD__(v23, 1))
          {
LABEL_11:
            __break(1u);
            break;
          }
        }
        v49 = v28;
        v29 = v50;
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v50, v19, v12);
        v27(v51, (unint64_t)v29, v12);
        v30 = sub_240154310();
        v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
        v31(v25, 1, 1, v30);
        v32 = swift_allocObject();
        *(_OWORD *)(v32 + 48) = v42;
        v33 = v12;
        v34 = v13;
        v35 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
        v31(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v30);
        v36 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
        *(_QWORD *)v36 = 0;
        *(_BYTE *)(v36 + 8) = 1;
        v4 = (double *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold);
        *v4 = 0.0;
        *((_BYTE *)v4 + 8) = 1;
        *(_BYTE *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
        *(double *)(v32 + 16) = a2;
        *(double *)(v32 + 24) = a3;
        *(_WORD *)(v32 + 32) = 256;
        *(double *)(v32 + 40) = v24;
        v37 = v35;
        v13 = v34;
        v12 = v33;
        sub_24008FCD4(v25, v37);
        *(_QWORD *)v36 = 0;
        *(_BYTE *)(v36 + 8) = 1;
        *v4 = 0.0;
        *((_BYTE *)v4 + 8) = 1;
        v52 = v32;
        a1 = v43;
        sub_240154574();
        sub_24015458C();
        v19 = v44;
        (*(void (**)(char *, uint64_t))(v13 + 8))(v50, v12);
        v38 = MEMORY[0x24267D180](a1, v12);
        ++v23;
        if (v49 == v38)
        {
          swift_bridgeObjectRelease();
          return (uint64_t)v41;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v4;
}

uint64_t sub_24008C6AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t TupleTypeMetadata2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  long double *v43;
  uint64_t v44;
  char *v45;
  long double v46;
  long double v47;
  long double v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  __int128 v58;
  int64_t v59;
  int64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;

  v1 = *(_QWORD *)(*v0 + 80);
  v53 = type metadata accessor for DKSmoothingFilter();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v3 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v4 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v62 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v50 - v7;
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v50 - v9;
  v11 = sub_240154A30();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v50 - v12;
  v66 = 0;
  v67 = 0xE000000000000000;
  v14 = v0[2];
  if ((v14 & 0xC000000000000001) != 0)
  {
    v15 = sub_240154CD0();
    v51 = 0;
    v16 = 0;
    v17 = 0;
    v18 = v15 | 0x8000000000000000;
  }
  else
  {
    v19 = -1 << *(_BYTE *)(v14 + 32);
    v16 = ~v19;
    v20 = *(_QWORD *)(v14 + 64);
    v51 = v14 + 64;
    v21 = -v19;
    if (v21 < 64)
      v22 = ~(-1 << v21);
    else
      v22 = -1;
    v17 = v22 & v20;
    v18 = v14;
  }
  v54 = v18 & 0x7FFFFFFFFFFFFFFFLL;
  v50 = v16;
  v59 = (unint64_t)(v16 + 64) >> 6;
  result = swift_bridgeObjectRetain();
  v60 = 0;
  v58 = xmmword_240155A40;
  v52 = MEMORY[0x24BEE4AD0] + 8;
  v61 = v18;
  v56 = v8;
  v57 = v13;
  v55 = TupleTypeMetadata2;
  while ((v18 & 0x8000000000000000) != 0)
  {
    if (!sub_240154CDC())
      goto LABEL_35;
    v26 = v25;
    v63 = v17;
    sub_240154EE0();
    swift_unknownObjectRelease();
    v27 = *(int *)(TupleTypeMetadata2 + 48);
    v64 = v26;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v28 = v65;
    swift_unknownObjectRelease();
    *(_QWORD *)&v13[v27] = v28;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, TupleTypeMetadata2);
    v29 = *(_QWORD *)(v1 - 8);
LABEL_28:
    v34 = *(int *)(TupleTypeMetadata2 + 48);
    v35 = *(_QWORD *)&v13[v34];
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v10, v13, v1);
    *(_QWORD *)&v10[v34] = v35;
    v36 = *(int *)(TupleTypeMetadata2 + 48);
    v37 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    v37(v8, v10, v1);
    *(_QWORD *)&v8[v36] = v35;
    swift_retain();
    v38 = MEMORY[0x24BEE1768];
    if ((swift_dynamicCast() & 1) != 0)
    {
      v39 = v3;
      v40 = v65;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6070);
      v41 = swift_allocObject();
      v42 = v38;
      v43 = (long double *)v41;
      *(_OWORD *)(v41 + 16) = v58;
      *(_QWORD *)(v41 + 56) = v42;
      *(_QWORD *)(v41 + 64) = MEMORY[0x24BEE17F0];
      *(_QWORD *)(v41 + 32) = v40;
      v44 = *(int *)(TupleTypeMetadata2 + 48);
      v45 = v62;
      v37(v62, v10, v1);
      *(_QWORD *)&v45[v44] = v35;
      if (*(_BYTE *)(v35 + 33) == 1)
      {
        if ((*(_BYTE *)(v35 + 32) & 1) != 0)
        {
          v46 = *(double *)(v35 + 48);
          v47 = *(double *)(v35 + 56);
          swift_release();
          v48 = atan2(v46, v47);
        }
        else
        {
          v48 = *(double *)(v35 + 40);
          swift_release();
        }
      }
      else
      {
        swift_release();
        v48 = 0.0;
      }
      v3 = v39;
      v8 = v56;
      v13 = v57;
      TupleTypeMetadata2 = v55;
      v18 = v61;
      v49 = v62;
      *((_QWORD *)v43 + 12) = MEMORY[0x24BEE13C8];
      *((_QWORD *)v43 + 13) = MEMORY[0x24BEE1448];
      v43[9] = v48;
      (*(void (**)(char *, uint64_t))(v29 + 8))(v49, v1);
      sub_240154670();
      sub_2401546D0();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_release();
      v18 = v61;
    }
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, TupleTypeMetadata2);
    v17 = v63;
  }
  if (v17)
  {
    v63 = (v17 - 1) & v17;
    v24 = __clz(__rbit64(v17)) | (v60 << 6);
LABEL_27:
    v29 = *(_QWORD *)(v1 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v29 + 16))(v13, *(_QWORD *)(v18 + 48) + *(_QWORD *)(v29 + 72) * v24, v1);
    *(_QWORD *)&v13[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, TupleTypeMetadata2);
    swift_retain();
    goto LABEL_28;
  }
  v30 = v60 + 1;
  if (__OFADD__(v60, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v30 >= v59)
    goto LABEL_35;
  v31 = *(_QWORD *)(v51 + 8 * v30);
  v32 = v60 + 1;
  if (v31)
    goto LABEL_26;
  v32 = v60 + 2;
  if (v60 + 2 >= v59)
    goto LABEL_35;
  v31 = *(_QWORD *)(v51 + 8 * v32);
  if (v31)
  {
LABEL_26:
    v63 = (v31 - 1) & v31;
    v24 = __clz(__rbit64(v31)) + (v32 << 6);
    v60 = v32;
    goto LABEL_27;
  }
  v33 = v60 + 3;
  if (v60 + 3 >= v59)
  {
LABEL_35:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v13, 1, 1, TupleTypeMetadata2);
    sub_24008FD1C();
    return v66;
  }
  v31 = *(_QWORD *)(v51 + 8 * v33);
  if (v31)
  {
    v32 = v60 + 3;
    goto LABEL_26;
  }
  while (1)
  {
    v32 = v33 + 1;
    if (__OFADD__(v33, 1))
      break;
    if (v32 >= v59)
      goto LABEL_35;
    v31 = *(_QWORD *)(v51 + 8 * v32);
    ++v33;
    if (v31)
      goto LABEL_26;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24008CC04()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[6];

  v1 = v0;
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 80);
  v4 = sub_240154A30();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v25 - v5;
  v7 = v0[2];
  v8 = type metadata accessor for DKSmoothingFilter();
  v9 = *(_QWORD *)(v2 + 104);
  if ((v7 & 0xC000000000000001) != 0)
  {
    v10 = sub_240154CD0() | 0x8000000000000000;
    result = swift_bridgeObjectRetain();
    v27 = 0;
    v28 = 0;
    v12 = 0;
    v13 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    result = sub_240154CAC();
    v10 = v29[1];
    v12 = v29[3];
    v27 = v29[2];
    v28 = v29[4];
    v13 = v29[5];
  }
  v25 = v12;
  v26 = (unint64_t)(v12 + 64) >> 6;
  while ((v10 & 0x8000000000000000) != 0)
  {
    if (!sub_240154CE8())
      goto LABEL_29;
    sub_240154EE0();
    swift_unknownObjectRelease();
    v16 = *(_QWORD *)(v3 - 8);
LABEL_27:
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v6, 0, 1, v3);
    v21 = v1[2];
    swift_bridgeObjectRetain();
    MEMORY[0x24267CEC8](v29, v6, v21, v3, v8, v9);
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v6, v3);
    v22 = v29[0];
    if (v29[0])
    {
      *(_BYTE *)(v29[0] + 33) = 0;
      v23 = v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
      sub_240077EAC(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated);
      v24 = sub_240154310();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 1, 1, v24);
      result = swift_release();
    }
  }
  if (v13)
  {
    v14 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    v15 = v14 | (v28 << 6);
LABEL_26:
    v16 = *(_QWORD *)(v3 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v16 + 16))(v6, *(_QWORD *)(v10 + 48) + *(_QWORD *)(v16 + 72) * v15, v3);
    goto LABEL_27;
  }
  v17 = v28 + 1;
  if (!__OFADD__(v28, 1))
  {
    if (v17 >= v26)
      goto LABEL_29;
    v18 = *(_QWORD *)(v27 + 8 * v17);
    v19 = v28 + 1;
    if (!v18)
    {
      v19 = v28 + 2;
      if (v28 + 2 >= v26)
        goto LABEL_29;
      v18 = *(_QWORD *)(v27 + 8 * v19);
      if (!v18)
      {
        v19 = v28 + 3;
        if (v28 + 3 >= v26)
          goto LABEL_29;
        v18 = *(_QWORD *)(v27 + 8 * v19);
        if (!v18)
        {
          v19 = v28 + 4;
          if (v28 + 4 >= v26)
            goto LABEL_29;
          v18 = *(_QWORD *)(v27 + 8 * v19);
          if (!v18)
          {
            v19 = v28 + 5;
            if (v28 + 5 >= v26)
              goto LABEL_29;
            v18 = *(_QWORD *)(v27 + 8 * v19);
            if (!v18)
            {
              v20 = v28 + 6;
              while (v26 != v20)
              {
                v18 = *(_QWORD *)(v27 + 8 * v20++);
                if (v18)
                {
                  v19 = v20 - 1;
                  goto LABEL_25;
                }
              }
LABEL_29:
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 56))(v6, 1, 1, v3);
              return sub_24008FD1C();
            }
          }
        }
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
    v15 = __clz(__rbit64(v18)) + (v19 << 6);
    v28 = v19;
    goto LABEL_26;
  }
  __break(1u);
  return result;
}

uint64_t sub_24008CF38(uint64_t a1, double a2)
{
  double *v2;
  double *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[2];

  v3 = v2;
  v6 = *(_QWORD *)v2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v6 + 80);
  MEMORY[0x24BDAC7A8](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v14 = *(_QWORD *)&a2;
  v15 = v3[4];
  v16 = *((_QWORD *)v3 + 5);
  v17 = sub_240154310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v10, 1, 1, v17);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  v19[1] = sub_240148668(v14, 0, v16, 0, 0, (uint64_t)v10, 0, 1, v15, 0, 1);
  sub_240154574();
  return sub_24015458C();
}

uint64_t sub_24008D0C4()
{
  type metadata accessor for DKSmoothingFilter();
  sub_240154574();
  sub_240154550();
  return swift_release();
}

uint64_t sub_24008D12C(uint64_t a1, char a2, int a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t result;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  unint64_t v50;
  int64_t v51;
  int64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, int64_t, uint64_t);
  int v60;
  uint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  unint64_t v68;
  int64_t v69;
  unint64_t v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, unint64_t, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  uint64_t v87;
  char *v88;
  uint64_t v89;
  double v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  int64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int64_t v101;
  char *v102;
  unint64_t v103;
  char *v104;
  char *v105;
  char *v106;
  int v107;
  int64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  char *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int64_t v118;
  uint64_t TupleTypeMetadata2;
  uint64_t v120;
  unsigned __int8 v121;
  uint64_t v122;
  uint64_t v123;

  v107 = a3;
  v6 = *v3;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v7);
  v106 = (char *)&v95 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v116 = v6;
  v9 = *(_QWORD *)(v6 + 80);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v109 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v112 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v111 = (char *)&v95 - v13;
  v14 = MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v95 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v110 = (char *)&v95 - v17;
  v115 = type metadata accessor for DKSmoothingFilter();
  v18 = a1;
  v19 = swift_getTupleTypeMetadata2();
  v118 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v95 - v23;
  v100 = v25;
  v26 = sub_240154A30();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&v95 - v27;
  v123 = v18;
  v113 = v3;
  if ((a2 & 1) == 0)
  {
    result = swift_bridgeObjectRetain();
    goto LABEL_35;
  }
  v114 = v18;
  v29 = v3[2];
  if ((v29 & 0xC000000000000001) != 0)
  {
    v30 = sub_240154CD0();
    v97 = 0;
    v31 = 0;
    v32 = 0;
    v33 = v30 | 0x8000000000000000;
  }
  else
  {
    v35 = -1 << *(_BYTE *)(v29 + 32);
    v31 = ~v35;
    v36 = *(_QWORD *)(v29 + 64);
    v97 = v29 + 64;
    v37 = -v35;
    if (v37 < 64)
      v38 = ~(-1 << v37);
    else
      v38 = -1;
    v32 = v38 & v36;
    v33 = v29;
  }
  v99 = v33 & 0x7FFFFFFFFFFFFFFFLL;
  v95 = v31;
  v96 = (unint64_t)(v31 + 64) >> 6;
  swift_bridgeObjectRetain();
  v39 = v114;
  result = swift_bridgeObjectRetain();
  v101 = 0;
  v98 = MEMORY[0x24BEE4AD0] + 8;
  v108 = (int64_t)v24;
  v40 = v100;
  v105 = v22;
  v104 = v16;
  v103 = v33;
  v102 = v28;
  v41 = v22;
  while ((v33 & 0x8000000000000000) == 0)
  {
    if (v32)
    {
      v117 = (v32 - 1) & v32;
      v42 = __clz(__rbit64(v32)) | (v101 << 6);
    }
    else
    {
      v49 = v101 + 1;
      if (__OFADD__(v101, 1))
        goto LABEL_64;
      if (v49 >= v96)
        goto LABEL_32;
      v50 = *(_QWORD *)(v97 + 8 * v49);
      v51 = v101 + 1;
      if (!v50)
      {
        v51 = v101 + 2;
        if (v101 + 2 >= v96)
          goto LABEL_32;
        v50 = *(_QWORD *)(v97 + 8 * v51);
        if (!v50)
        {
          v52 = v101 + 3;
          if (v101 + 3 >= v96)
            goto LABEL_32;
          v50 = *(_QWORD *)(v97 + 8 * v52);
          if (!v50)
          {
            while (1)
            {
              v51 = v52 + 1;
              if (__OFADD__(v52, 1))
                goto LABEL_65;
              if (v51 >= v96)
                break;
              v50 = *(_QWORD *)(v97 + 8 * v51);
              ++v52;
              if (v50)
                goto LABEL_28;
            }
LABEL_32:
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56))(v28, 1, 1, v40);
            goto LABEL_34;
          }
          v51 = v101 + 3;
        }
      }
LABEL_28:
      v117 = (v50 - 1) & v50;
      v42 = __clz(__rbit64(v50)) + (v51 << 6);
      v101 = v51;
    }
    v48 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v28, *(_QWORD *)(v33 + 48) + *(_QWORD *)(v48 + 72) * v42, v9);
    *(_QWORD *)&v28[*(int *)(v40 + 48)] = *(_QWORD *)(*(_QWORD *)(v33 + 56) + 8 * v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v28, 0, 1, v40);
    swift_retain();
LABEL_30:
    v53 = *(int *)(v40 + 48);
    v54 = *(_QWORD *)&v28[v53];
    v55 = v28;
    v56 = v108;
    (*(void (**)(int64_t, char *, uint64_t))(v48 + 32))(v108, v55, v9);
    *(_QWORD *)(v56 + v53) = v54;
    v57 = v40;
    v58 = *(int *)(v40 + 48);
    v59 = *(void (**)(char *, int64_t, uint64_t))(v48 + 16);
    v59(v41, v56, v9);
    *(_QWORD *)&v41[v58] = v54;
    swift_retain();
    MEMORY[0x24267CEC8](&v120, v41, v39, v9, MEMORY[0x24BEE13C8], *(_QWORD *)(v116 + 104));
    v60 = v121;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v41, v9);
    if (v60 == 1)
    {
      v61 = *(int *)(v57 + 48);
      v59(v41, v56, v9);
      swift_release();
      *(_QWORD *)&v41[v61] = v54;
      v120 = 0;
      v121 = 0;
      sub_240154574();
      sub_24015458C();
      result = (*(uint64_t (**)(int64_t, uint64_t))(v118 + 8))(v56, v57);
    }
    else
    {
      (*(void (**)(int64_t, uint64_t))(v118 + 8))(v56, v57);
      result = swift_release();
    }
    v39 = v114;
    v28 = v102;
    v40 = v57;
    v16 = v104;
    v33 = v103;
    v32 = v117;
  }
  if (sub_240154CDC())
  {
    v44 = v43;
    v117 = v32;
    sub_240154EE0();
    swift_unknownObjectRelease();
    v45 = v100;
    v46 = *(int *)(v100 + 48);
    v122 = v44;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v47 = v120;
    swift_unknownObjectRelease();
    *(_QWORD *)&v28[v46] = v47;
    v40 = v45;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v118 + 56))(v28, 0, 1, v45);
    v48 = *(_QWORD *)(v9 - 8);
    goto LABEL_30;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v118 + 56))(v28, 1, 1, v100);
LABEL_34:
  result = sub_24008FD1C();
LABEL_35:
  v62 = 0;
  v63 = *(_QWORD *)(v123 + 64);
  v105 = (char *)(v123 + 64);
  v114 = v123;
  v64 = 1 << *(_BYTE *)(v123 + 32);
  v65 = -1;
  if (v64 < 64)
    v65 = ~(-1 << v64);
  v66 = v65 & v63;
  v108 = (unint64_t)(v64 + 63) >> 6;
  v67 = TupleTypeMetadata2;
  while (2)
  {
    if (v66)
    {
      v117 = (v66 - 1) & v66;
      v118 = v62;
      v68 = __clz(__rbit64(v66)) | (v62 << 6);
LABEL_54:
      v73 = v114;
      v74 = *(_QWORD *)(v9 - 8);
      v75 = *(void (**)(char *, unint64_t, uint64_t))(v74 + 16);
      v76 = v110;
      v75(v110, *(_QWORD *)(v114 + 48) + *(_QWORD *)(v74 + 72) * v68, v9);
      v77 = *(_QWORD *)(*(_QWORD *)(v73 + 56) + 8 * v68);
      *(_QWORD *)&v76[*(int *)(v67 + 48)] = v77;
      v78 = *(int *)(v67 + 48);
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v16, v76, v9);
      *(_QWORD *)&v16[v78] = v77;
      v79 = *(int *)(v67 + 48);
      v80 = v111;
      v75(v111, (unint64_t)v16, v9);
      *(_QWORD *)&v80[v79] = v77;
      v81 = v113;
      v82 = v113[2];
      swift_bridgeObjectRetain();
      v83 = v115;
      v84 = *(_QWORD *)(v116 + 104);
      MEMORY[0x24267CEC8](&v120, v80, v82, v9, v115, v84);
      swift_bridgeObjectRelease();
      v85 = v120;
      swift_release();
      v86 = *(void (**)(char *, uint64_t))(v74 + 8);
      v86(v80, v9);
      if (!v85)
        sub_24008CF38((uint64_t)v16, 0.5);
      v87 = *(int *)(TupleTypeMetadata2 + 48);
      v88 = v112;
      v75(v112, (unint64_t)v16, v9);
      *(_QWORD *)&v88[v87] = *(_QWORD *)&v16[v78];
      v89 = v81[2];
      swift_bridgeObjectRetain();
      MEMORY[0x24267CEC8](&v120, v88, v89, v9, v83, v84);
      swift_bridgeObjectRelease();
      if (v120)
      {
        v86(v88, v9);
        v90 = *(double *)&v16[v78];
        v91 = sub_240154310();
        v92 = (uint64_t)v106;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 56))(v106, 1, 1, v91);
        if ((v107 & 1) != 0)
        {
          v93 = 0x3FF0000000000000;
          v94 = 0;
        }
        else
        {
          v93 = 0;
          v94 = 1;
        }
        sub_240148324(v93, v94, v92, v90);
        swift_release();
        sub_240077EAC(v92);
        v67 = TupleTypeMetadata2;
        result = (*(uint64_t (**)(char *, uint64_t))(v109 + 8))(v16, TupleTypeMetadata2);
      }
      else
      {
        v67 = TupleTypeMetadata2;
        (*(void (**)(char *, uint64_t))(v109 + 8))(v16, TupleTypeMetadata2);
        result = ((uint64_t (*)(char *, uint64_t))v86)(v88, v9);
      }
      v66 = v117;
      v62 = v118;
      continue;
    }
    break;
  }
  v69 = v62 + 1;
  if (__OFADD__(v62, 1))
  {
    __break(1u);
    goto LABEL_63;
  }
  if (v69 >= v108)
    return swift_release();
  v70 = *(_QWORD *)&v105[8 * v69];
  v71 = v62 + 1;
  if (v70)
    goto LABEL_53;
  v71 = v62 + 2;
  if (v62 + 2 >= v108)
    return swift_release();
  v70 = *(_QWORD *)&v105[8 * v71];
  if (v70)
  {
LABEL_53:
    v117 = (v70 - 1) & v70;
    v118 = v71;
    v68 = __clz(__rbit64(v70)) + (v71 << 6);
    goto LABEL_54;
  }
  v72 = v62 + 3;
  if (v62 + 3 >= v108)
    return swift_release();
  v70 = *(_QWORD *)&v105[8 * v72];
  if (v70)
  {
    v71 = v62 + 3;
    goto LABEL_53;
  }
  while (1)
  {
    v71 = v72 + 1;
    if (__OFADD__(v72, 1))
      break;
    if (v71 >= v108)
      return swift_release();
    v70 = *(_QWORD *)&v105[8 * v71];
    ++v72;
    if (v70)
      goto LABEL_53;
  }
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_24008DAC4(uint64_t a1, int a2)
{
  _QWORD *v2;
  unint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v45;
  char v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  char v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t result;
  _QWORD v65[2];
  int v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  __int128 v70;
  unint64_t v71;
  int64_t v72;
  _QWORD *v73;
  unint64_t v74;

  v66 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v5);
  v68 = v2;
  v69 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = a1;
  v7 = v2[2];
  v8 = *(_QWORD *)(v7 + 64);
  v71 = v7 + 64;
  v9 = -1;
  v10 = -1 << *(_BYTE *)(v7 + 32);
  v67 = ~v10;
  if (-v10 < 64)
    v9 = ~(-1 << -(char)v10);
  v11 = v9 & v8;
  v72 = (unint64_t)(63 - v10) >> 6;
  if (a1 < 0)
    v12 = a1;
  else
    v12 = a1 & 0xFFFFFFFFFFFFFF8;
  v65[1] = v12;
  *(_QWORD *)&v70 = a1 & 0xC000000000000001;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13 = 0;
  while (1)
  {
    if (v11)
    {
      v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      v15 = v14 | (v13 << 6);
    }
    else
    {
      v16 = v13 + 1;
      if (__OFADD__(v13, 1))
        goto LABEL_78;
      if (v16 >= v72)
      {
LABEL_46:
        sub_24008FD1C();
        v3 = v74;
        if (!(v74 >> 62))
        {
          v26 = *(_QWORD *)((v74 & 0xFFFFFFFFFFFFF8) + 0x10);
          v28 = v68;
          v27 = (uint64_t)v69;
          if (v26)
          {
LABEL_48:
            v71 = v3 & 0xC000000000000001;
            v29 = 4;
            v70 = xmmword_240157220;
            v67 = v26;
            do
            {
              v30 = v29 - 4;
              if (v71)
              {
                v31 = MEMORY[0x24267D4E0](v29 - 4, v3);
                v32 = v29 - 3;
                if (__OFADD__(v30, 1))
                  goto LABEL_77;
              }
              else
              {
                v31 = *(_QWORD *)(v3 + 8 * v29);
                swift_retain();
                v32 = v29 - 3;
                if (__OFADD__(v30, 1))
                  goto LABEL_77;
              }
              v33 = *(_QWORD *)(v31 + 16);
              if (!*(_QWORD *)(v28[2] + 16) || (sub_24013EF5C(*(_QWORD *)(v31 + 16)), (v34 & 1) == 0))
              {
                v72 = v32;
                v35 = v3;
                v36 = v28[4];
                v37 = v28[5];
                v38 = sub_240154310();
                v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56);
                v39(v27, 1, 1, v38);
                type metadata accessor for DKSmoothingFilter();
                v40 = swift_allocObject();
                *(_OWORD *)(v40 + 48) = v70;
                v41 = v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
                v39(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v38);
                v42 = v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
                *(_QWORD *)v42 = 0;
                *(_BYTE *)(v42 + 8) = 1;
                v43 = v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
                *(_QWORD *)v43 = 0;
                *(_BYTE *)(v43 + 8) = 1;
                *(_BYTE *)(v40 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
                *(_QWORD *)(v40 + 16) = v36;
                *(_QWORD *)(v40 + 24) = v37;
                *(_WORD *)(v40 + 32) = 256;
                *(_QWORD *)(v40 + 40) = 0x3FE0000000000000;
                sub_24008FCD4(v27, v41);
                *(_QWORD *)v42 = 0;
                *(_BYTE *)(v42 + 8) = 1;
                *(_QWORD *)v43 = 0;
                *(_BYTE *)(v43 + 8) = 1;
                isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v73 = (_QWORD *)v28[2];
                v45 = v73;
                v28[2] = 0x8000000000000000;
                v3 = sub_24013EF5C(v33);
                v47 = v45[2];
                v48 = (v46 & 1) == 0;
                v49 = v47 + v48;
                if (__OFADD__(v47, v48))
                  goto LABEL_79;
                v50 = v46;
                if (v45[3] >= v49)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                    sub_2400AE4E4();
                }
                else
                {
                  sub_2400AAECC(v49, isUniquelyReferenced_nonNull_native);
                  v51 = sub_24013EF5C(v33);
                  if ((v50 & 1) != (v52 & 1))
                    goto LABEL_85;
                  v3 = v51;
                }
                v53 = v73;
                v54 = 8 * v3;
                if ((v50 & 1) != 0)
                {
                  v55 = v73[7];
                  swift_release();
                  *(_QWORD *)(v55 + v54) = v40;
                }
                else
                {
                  v73[(v3 >> 6) + 8] |= 1 << v3;
                  *(_QWORD *)(v53[6] + 8 * v3) = v33;
                  *(_QWORD *)(v53[7] + 8 * v3) = v40;
                  v56 = v53[2];
                  v57 = __OFADD__(v56, 1);
                  v58 = v56 + 1;
                  if (v57)
                    goto LABEL_80;
                  v53[2] = v58;
                }
                v28 = v68;
                v68[2] = v53;
                swift_bridgeObjectRelease();
                v27 = (uint64_t)v69;
                v3 = v35;
                v26 = v67;
                v32 = v72;
              }
              if (*(_QWORD *)(v28[2] + 16) && (sub_24013EF5C(*(_QWORD *)(v31 + 16)), (v59 & 1) != 0))
              {
                v60 = *(double *)(v31 + 24);
                v61 = sub_240154310();
                (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v27, 1, 1, v61);
                swift_retain();
                if ((v66 & 1) != 0)
                {
                  v62 = 0x3FF0000000000000;
                  v63 = 0;
                }
                else
                {
                  v62 = 0;
                  v63 = 1;
                }
                sub_240148324(v62, v63, v27, v60);
                swift_release();
                swift_release();
                sub_240077EAC(v27);
              }
              else
              {
                swift_release();
              }
              ++v29;
            }
            while (v32 != v26);
          }
          return swift_bridgeObjectRelease();
        }
LABEL_82:
        swift_bridgeObjectRetain();
        v26 = sub_240154D30();
        swift_bridgeObjectRelease();
        v28 = v68;
        v27 = (uint64_t)v69;
        if (v26)
          goto LABEL_48;
        return swift_bridgeObjectRelease();
      }
      v17 = *(_QWORD *)(v71 + 8 * v16);
      v18 = v13 + 1;
      if (!v17)
      {
        v18 = v13 + 2;
        if (v13 + 2 >= v72)
          goto LABEL_46;
        v17 = *(_QWORD *)(v71 + 8 * v18);
        if (!v17)
        {
          v18 = v13 + 3;
          if (v13 + 3 >= v72)
            goto LABEL_46;
          v17 = *(_QWORD *)(v71 + 8 * v18);
          if (!v17)
          {
            v19 = v13 + 4;
            if (v13 + 4 >= v72)
              goto LABEL_46;
            v17 = *(_QWORD *)(v71 + 8 * v19);
            if (!v17)
            {
              while (1)
              {
                v18 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_81;
                if (v18 >= v72)
                  goto LABEL_46;
                v17 = *(_QWORD *)(v71 + 8 * v18);
                ++v19;
                if (v17)
                  goto LABEL_24;
              }
            }
            v18 = v13 + 4;
          }
        }
      }
LABEL_24:
      v11 = (v17 - 1) & v17;
      v15 = __clz(__rbit64(v17)) + (v18 << 6);
      v13 = v18;
    }
    v20 = *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v15);
    if ((unint64_t)a1 >> 62)
    {
      swift_retain_n();
      swift_bridgeObjectRetain();
      v21 = sub_240154D30();
      if (!v21)
        goto LABEL_34;
    }
    else
    {
      v21 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain_n();
      swift_bridgeObjectRetain();
      if (!v21)
        goto LABEL_34;
    }
    if (!(_QWORD)v70)
    {
      if (*(_QWORD *)(*(_QWORD *)(a1 + 32) + 16) == v20)
        goto LABEL_7;
      if (v21 != 1)
      {
        v22 = 5;
        while (1)
        {
          v23 = v22 - 3;
          if (__OFADD__(v22 - 4, 1))
            break;
          if (*(_QWORD *)(*(_QWORD *)(a1 + 8 * v22) + 16) == v20)
            goto LABEL_7;
          ++v22;
          if (v23 == v21)
            goto LABEL_34;
        }
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
        goto LABEL_82;
      }
      goto LABEL_34;
    }
    v3 = *(_QWORD *)(MEMORY[0x24267D4E0](0, a1) + 16);
    swift_unknownObjectRelease();
    if (v3 == v20)
    {
LABEL_7:
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_8;
    }
    if (v21 != 1)
      break;
LABEL_34:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6228);
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v20;
    *(_QWORD *)(v3 + 24) = 0;
    MEMORY[0x24267D0CC]();
    if (*(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
LABEL_8:
    swift_release();
  }
  v3 = 1;
  while (1)
  {
    v24 = MEMORY[0x24267D4E0](v3, a1);
    v25 = v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    v65[0] = *(_QWORD *)(v24 + 16);
    swift_unknownObjectRelease();
    if (v65[0] == v20)
      goto LABEL_7;
    ++v3;
    if (v25 == v21)
      goto LABEL_34;
  }
  __break(1u);
LABEL_85:
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_24008E228(uint64_t a1, int a2)
{
  uint64_t **v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t TupleTypeMetadata2;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  __int128 v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t **v70;
  uint64_t *v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  int64_t v92;
  uint64_t v93;
  uint64_t **v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t (*v103)(char *, char *, uint64_t);
  uint64_t v104;
  uint64_t *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  v88 = a2;
  v4 = *v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = v4;
  v8 = v4[10];
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v6);
  v93 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v95 = (uint64_t)&v85 - v12;
  v13 = type metadata accessor for DKSmoothingFilter();
  v109 = v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v15 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v16 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v91 = (char *)&v85 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v100 = (char *)&v85 - v19;
  MEMORY[0x24BDAC7A8](v18);
  v21 = (char *)&v85 - v20;
  v22 = sub_240154A30();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v85 - v23;
  v102 = a1;
  v112 = a1;
  v25 = (unint64_t)v2[2];
  v97 = v13;
  if ((v25 & 0xC000000000000001) != 0)
  {
    v26 = sub_240154CD0();
    v86 = 0;
    v27 = 0;
    v28 = 0;
    v29 = v26 | 0x8000000000000000;
  }
  else
  {
    v30 = -1 << *(_BYTE *)(v25 + 32);
    v27 = ~v30;
    v31 = *(_QWORD *)(v25 + 64);
    v86 = v25 + 64;
    v32 = -v30;
    if (v32 < 64)
      v33 = ~(-1 << v32);
    else
      v33 = -1;
    v28 = v33 & v31;
    v29 = v25;
  }
  v90 = v29 & 0x7FFFFFFFFFFFFFFFLL;
  v85 = v27;
  v92 = (unint64_t)(v27 + 64) >> 6;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRetain();
  v96 = 0;
  v108 = 0;
  v89 = MEMORY[0x24BEE4AD0] + 8;
  v94 = v2;
  v104 = v9;
  v98 = v15;
  v99 = v29;
  v101 = v24;
  while ((v29 & 0x8000000000000000) != 0)
  {
    v107 = v28;
    if (!sub_240154CDC())
      goto LABEL_31;
    v37 = v36;
    sub_240154EE0();
    swift_unknownObjectRelease();
    v38 = *(int *)(TupleTypeMetadata2 + 48);
    v110 = v37;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v39 = TupleTypeMetadata2;
    v40 = v111;
    swift_unknownObjectRelease();
    *(_QWORD *)&v24[v38] = v40;
    TupleTypeMetadata2 = v39;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, v39);
LABEL_25:
    v44 = *(int *)(TupleTypeMetadata2 + 48);
    v45 = *(_QWORD *)&v24[v44];
    v46 = v109;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v21, v24, v109);
    *(_QWORD *)&v21[v44] = v45;
    v111 = v102;
    v47 = *(int *)(TupleTypeMetadata2 + 48);
    v48 = v100;
    v103 = *(uint64_t (**)(char *, char *, uint64_t))(v9 + 16);
    v49 = v103(v100, v21, v46);
    v106 = &v85;
    *(_QWORD *)&v48[v47] = v45;
    MEMORY[0x24BDAC7A8](v49);
    v50 = v105;
    v51 = v105[11];
    *(&v85 - 6) = v46;
    *(&v85 - 5) = v51;
    v52 = *((_OWORD *)v50 + 6);
    *((_OWORD *)&v85 - 2) = v52;
    *(&v85 - 2) = (uint64_t)v48;
    type metadata accessor for DKProbabilityValue(255, v46, v51, v52);
    v53 = v21;
    v54 = sub_240154844();
    swift_retain_n();
    MEMORY[0x24267E0BC](MEMORY[0x24BEE12C8], v54);
    v55 = v108;
    LOBYTE(v47) = sub_240154754();
    v108 = v55;
    v56 = v98;
    v57 = *(void (**)(char *, uint64_t))(v98 + 8);
    v57(v48, TupleTypeMetadata2);
    if ((v47 & 1) != 0)
    {
      v57(v53, TupleTypeMetadata2);
      result = swift_release();
    }
    else
    {
      v58 = (uint64_t)v91;
      v103(v91, v53, v46);
      swift_release();
      v110 = DKProbabilityValue.__allocating_init(variable:probability:)(v58, 0.0);
      sub_24015482C();
      result = ((uint64_t (*)(char *, uint64_t))v57)(v53, TupleTypeMetadata2);
    }
    v9 = v104;
    v15 = v56;
    v24 = v101;
    v21 = v53;
    v29 = v99;
    v28 = v107;
  }
  if (v28)
  {
    v107 = (v28 - 1) & v28;
    v35 = __clz(__rbit64(v28)) | (v96 << 6);
LABEL_24:
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v24, *(_QWORD *)(v29 + 48) + *(_QWORD *)(v9 + 72) * v35, v109);
    *(_QWORD *)&v24[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)(*(_QWORD *)(v29 + 56) + 8 * v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v24, 0, 1, TupleTypeMetadata2);
    swift_retain();
    goto LABEL_25;
  }
  v41 = v96 + 1;
  if (__OFADD__(v96, 1))
  {
    __break(1u);
    goto LABEL_49;
  }
  if (v41 >= v92)
    goto LABEL_31;
  v42 = *(_QWORD *)(v86 + 8 * v41);
  if (v42)
  {
LABEL_23:
    v107 = (v42 - 1) & v42;
    v35 = __clz(__rbit64(v42)) + (v41 << 6);
    v96 = v41;
    goto LABEL_24;
  }
  v43 = v96 + 2;
  if (v96 + 2 >= v92)
    goto LABEL_31;
  v42 = *(_QWORD *)(v86 + 8 * v43);
  if (v42)
  {
LABEL_22:
    v41 = v43;
    goto LABEL_23;
  }
  v43 = v96 + 3;
  if (v96 + 3 < v92)
  {
    v42 = *(_QWORD *)(v86 + 8 * v43);
    if (!v42)
    {
      while (1)
      {
        v41 = v43 + 1;
        if (__OFADD__(v43, 1))
          break;
        if (v41 >= v92)
          goto LABEL_31;
        v42 = *(_QWORD *)(v86 + 8 * v41);
        ++v43;
        if (v42)
          goto LABEL_23;
      }
LABEL_49:
      __break(1u);
      return result;
    }
    goto LABEL_22;
  }
LABEL_31:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v24, 1, 1, TupleTypeMetadata2);
  sub_24008FD1C();
  v59 = v112;
  v60 = type metadata accessor for DKProbabilityValue(0, v109, v105[11], v105[12]);
  if (!MEMORY[0x24267D180](v59, v60))
    return swift_bridgeObjectRelease();
  v61 = 4;
  v107 = v60;
  v108 = v59;
  v62 = v109;
  while (2)
  {
    v66 = v61 - 4;
    v67 = sub_240154808();
    sub_2401547CC();
    if ((v67 & 1) != 0)
    {
      swift_retain();
      v68 = v61 - 3;
      if (__OFADD__(v66, 1))
        break;
      goto LABEL_37;
    }
    sub_240154B8C();
    v68 = v61 - 3;
    if (!__OFADD__(v66, 1))
    {
LABEL_37:
      v69 = v95;
      sub_240151280(v95);
      v70 = v94;
      v71 = v94[2];
      swift_bridgeObjectRetain();
      v72 = v105[13];
      v73 = v97;
      MEMORY[0x24267CEC8](&v111, v69, v71, v62, v97, v72);
      swift_bridgeObjectRelease();
      v74 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v74(v69, v62);
      v75 = v111;
      swift_release();
      if (!v75)
      {
        v76 = v95;
        sub_240151280(v95);
        sub_24008CF38(v76, 0.5);
        v74(v76, v109);
      }
      v77 = v93;
      sub_240151280(v93);
      v78 = v70[2];
      swift_bridgeObjectRetain();
      v79 = v109;
      MEMORY[0x24267CEC8](&v111, v77, v78, v109, v73, v72);
      swift_bridgeObjectRelease();
      v74(v77, v79);
      if (v111)
      {
        v80 = sub_2401512D8();
        v81 = sub_240154310();
        v82 = (uint64_t)v87;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v87, 1, 1, v81);
        v64 = v107;
        v63 = v108;
        if ((v88 & 1) != 0)
        {
          v83 = 0x3FF0000000000000;
          v84 = 0;
        }
        else
        {
          v83 = 0;
          v84 = 1;
        }
        sub_240148324(v83, v84, v82, v80);
        swift_release();
        swift_release();
        sub_240077EAC(v82);
      }
      else
      {
        swift_release();
        v64 = v107;
        v63 = v108;
      }
      v65 = MEMORY[0x24267D180](v63, v64);
      ++v61;
      v9 = v104;
      if (v68 == v65)
        return swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24008EAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v4 = *(_QWORD *)(a3 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240151280((uint64_t)v6);
  v7 = sub_240154610();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a3);
  return v7 & 1;
}

uint64_t sub_24008EB74()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t TupleTypeMetadata2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double v21;
  uint64_t result;
  double *v23;
  uint64_t v24;
  uint64_t v25;
  double *v26;
  double v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  double v52;
  void (*v53)(char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  _QWORD v58[2];
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  int64_t v65;
  char *v66;
  int64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v1 = v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v3 = type metadata accessor for DKSmoothingFilter();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v69 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v5 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v66 = (char *)v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v58 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v58 - v10;
  v12 = sub_240154A30();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)v58 - v13;
  v71 = v0[2];
  v62 = v3;
  v15 = sub_240154568();
  swift_bridgeObjectRetain();
  v16 = MEMORY[0x24267E0BC](MEMORY[0x24BEE03C8], v15);
  v18 = sub_24008BB24((void (*)(char *, char *))sub_24008FD48, (uint64_t)v0, v15, MEMORY[0x24BEE13C8], MEMORY[0x24BEE4078], v16, MEMORY[0x24BEE40A8], v17);
  swift_bridgeObjectRelease();
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
    return swift_bridgeObjectRelease();
  if (v19 == 1)
  {
    v20 = 0;
    v21 = 0.0;
  }
  else
  {
    v20 = v19 & 0x7FFFFFFFFFFFFFFELL;
    v23 = (double *)(v18 + 40);
    v21 = 0.0;
    v24 = v19 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      v21 = v21 + *(v23 - 1) + *v23;
      v23 += 2;
      v24 -= 2;
    }
    while (v24);
    if (v19 == v20)
      goto LABEL_10;
  }
  v25 = v19 - v20;
  v26 = (double *)(v18 + 8 * v20 + 32);
  do
  {
    v27 = *v26++;
    v21 = v21 + v27;
    --v25;
  }
  while (v25);
LABEL_10:
  result = swift_bridgeObjectRelease();
  if (v21 <= COERCE_DOUBLE(1))
    return result;
  v28 = v1[2];
  if ((v28 & 0xC000000000000001) != 0)
  {
    v29 = sub_240154CD0();
    v59 = 0;
    v30 = 0;
    v31 = 0;
    v32 = v29 | 0x8000000000000000;
  }
  else
  {
    v33 = -1 << *(_BYTE *)(v28 + 32);
    v30 = ~v33;
    v34 = *(_QWORD *)(v28 + 64);
    v59 = v28 + 64;
    v35 = -v33;
    if (v35 < 64)
      v36 = ~(-1 << v35);
    else
      v36 = -1;
    v31 = v36 & v34;
    v32 = v28;
  }
  v61 = v32 & 0x7FFFFFFFFFFFFFFFLL;
  v58[1] = v30;
  v65 = (unint64_t)(v30 + 64) >> 6;
  result = swift_bridgeObjectRetain();
  v67 = 0;
  v60 = MEMORY[0x24BEE4AD0] + 8;
  v63 = v14;
  v64 = v11;
  v68 = v32;
  while ((v32 & 0x8000000000000000) != 0)
  {
    if (!sub_240154CDC())
      goto LABEL_43;
    v40 = v39;
    v37 = v31;
    sub_240154EE0();
    swift_unknownObjectRelease();
    v41 = *(int *)(TupleTypeMetadata2 + 48);
    v70 = v40;
    swift_unknownObjectRetain();
    swift_dynamicCast();
    v42 = v71;
    swift_unknownObjectRelease();
    *(_QWORD *)&v14[v41] = v42;
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v14, 0, 1, TupleTypeMetadata2);
    v43 = *(_QWORD *)(v2 - 8);
LABEL_38:
    v48 = *(int *)(TupleTypeMetadata2 + 48);
    v49 = *(_QWORD *)&v14[v48];
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v11, v14, v2);
    *(_QWORD *)&v11[v48] = v49;
    v50 = *(int *)(TupleTypeMetadata2 + 48);
    v51 = *(void (**)(char *, char *, uint64_t))(v43 + 16);
    v51(v9, v11, v2);
    *(_QWORD *)&v9[v50] = v49;
    if (*(_BYTE *)(v49 + 33) == 1)
    {
      if (*(_BYTE *)(v49 + 32) == 1)
        v52 = atan2(*(long double *)(v49 + 48), *(long double *)(v49 + 56));
      else
        v52 = *(double *)(v49 + 40);
      v53 = *(void (**)(char *, uint64_t))(v43 + 8);
      swift_retain();
      v53(v9, v2);
      v54 = *(int *)(TupleTypeMetadata2 + 48);
      v55 = v9;
      v56 = v66;
      v11 = v64;
      v51(v66, v64, v2);
      (*(void (**)(char *, uint64_t))(v69 + 8))(v11, TupleTypeMetadata2);
      *(_QWORD *)&v56[v54] = v49;
      *(double *)(v49 + 40) = v52 / v21;
      swift_release();
      v57 = v56;
      v9 = v55;
      result = ((uint64_t (*)(char *, uint64_t))v53)(v57, v2);
      v14 = v63;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v69 + 8))(v11, TupleTypeMetadata2);
      result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v9, v2);
    }
    v32 = v68;
    v31 = v37;
  }
  if (v31)
  {
    v37 = (v31 - 1) & v31;
    v38 = __clz(__rbit64(v31)) | (v67 << 6);
LABEL_37:
    v43 = *(_QWORD *)(v2 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v14, *(_QWORD *)(v32 + 48) + *(_QWORD *)(v43 + 72) * v38, v2);
    *(_QWORD *)&v14[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)(*(_QWORD *)(v32 + 56) + 8 * v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v14, 0, 1, TupleTypeMetadata2);
    swift_retain();
    goto LABEL_38;
  }
  v44 = v67 + 1;
  if (__OFADD__(v67, 1))
  {
    __break(1u);
    goto LABEL_46;
  }
  if (v44 >= v65)
    goto LABEL_43;
  v45 = *(_QWORD *)(v59 + 8 * v44);
  v46 = v67 + 1;
  if (v45)
    goto LABEL_36;
  v46 = v67 + 2;
  if (v67 + 2 >= v65)
    goto LABEL_43;
  v45 = *(_QWORD *)(v59 + 8 * v46);
  if (v45)
  {
LABEL_36:
    v37 = (v45 - 1) & v45;
    v38 = __clz(__rbit64(v45)) + (v46 << 6);
    v67 = v46;
    goto LABEL_37;
  }
  v47 = v67 + 3;
  if (v67 + 3 >= v65)
  {
LABEL_43:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v14, 1, 1, TupleTypeMetadata2);
    return sub_24008FD1C();
  }
  v45 = *(_QWORD *)(v59 + 8 * v47);
  if (v45)
  {
    v46 = v67 + 3;
    goto LABEL_36;
  }
  while (1)
  {
    v46 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v46 >= v65)
      goto LABEL_43;
    v45 = *(_QWORD *)(v59 + 8 * v46);
    ++v47;
    if (v45)
      goto LABEL_36;
  }
LABEL_46:
  __break(1u);
  return result;
}

double sub_24008F15C(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  long double v9;
  long double v10;
  uint64_t v12;

  v3 = *v1;
  v4 = v1[2];
  v5 = *(_QWORD *)(v3 + 80);
  v6 = type metadata accessor for DKSmoothingFilter();
  v7 = *(_QWORD *)(v3 + 104);
  swift_bridgeObjectRetain();
  MEMORY[0x24267CEC8](&v12, a1, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  v8 = 0.0;
  if (v12)
  {
    if (*(_BYTE *)(v12 + 33) == 1)
    {
      if (*(_BYTE *)(v12 + 32) == 1)
      {
        v9 = *(double *)(v12 + 48);
        v10 = *(double *)(v12 + 56);
        swift_release();
        return atan2(v9, v10);
      }
      v8 = *(double *)(v12 + 40);
    }
    swift_release();
  }
  return v8;
}

uint64_t sub_24008F22C@<X0>(double a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void);
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  double v33;
  char *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int64_t v40;
  unint64_t v41;
  int64_t v42;
  int64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  char *v50;
  double v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  double v66;
  int v67;
  char *v68;
  void (*v69)(void);
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  int64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;

  v67 = a2;
  v66 = a1;
  v71 = a3;
  v4 = *(_QWORD *)(*v3 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](*(_QWORD *)&a1);
  v7 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for DKSmoothingFilter();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v10 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v70 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v86 = (char *)&v65 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v65 - v14;
  v16 = sub_240154A30();
  MEMORY[0x24BDAC7A8](v16);
  v84 = (char *)&v65 - v17;
  v18 = sub_240154A30();
  v74 = *(_QWORD *)(v18 - 8);
  v75 = v18;
  v19 = MEMORY[0x24BDAC7A8](v18);
  v73 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v21 = *(void (**)(void))(v5 + 56);
  v76 = (char *)&v65 - v22;
  v69 = v21;
  v21();
  v23 = v3[2];
  v68 = v7;
  if ((v23 & 0xC000000000000001) != 0)
  {
    v24 = sub_240154CD0();
    v78 = 0;
    v25 = 0;
    v26 = 0;
    v27 = v24 | 0x8000000000000000;
  }
  else
  {
    v28 = -1 << *(_BYTE *)(v23 + 32);
    v25 = ~v28;
    v29 = *(_QWORD *)(v23 + 64);
    v78 = v23 + 64;
    v30 = -v28;
    if (v30 < 64)
      v31 = ~(-1 << v30);
    else
      v31 = -1;
    v26 = v31 & v29;
    v27 = v23;
  }
  v72 = v25;
  v77 = (unint64_t)(v25 + 64) >> 6;
  result = swift_bridgeObjectRetain();
  v81 = 0;
  v33 = 0.0;
  v79 = MEMORY[0x24BEE4AD0] + 8;
  v82 = v27;
  v83 = v9;
  v85 = v15;
  v34 = v84;
  while (1)
  {
    if ((v27 & 0x8000000000000000) != 0)
    {
      v87 = v26;
      if (sub_240154CDC())
      {
        v37 = v36;
        sub_240154EE0();
        swift_unknownObjectRelease();
        v38 = *(int *)(TupleTypeMetadata2 + 48);
        v88 = v37;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v39 = v89;
        swift_unknownObjectRelease();
        *(_QWORD *)&v34[v38] = v39;
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v34, 0, 1, TupleTypeMetadata2);
        goto LABEL_28;
      }
      v55 = v71;
      v57 = v74;
      v56 = v75;
LABEL_37:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v34, 1, 1, TupleTypeMetadata2);
      sub_24008FD1C();
      v58 = v73;
      (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v73, v76, v56);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v58, 1, v4) == 1)
      {
        (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v56);
      }
      else
      {
        v60 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
        v61 = v68;
        v60(v68, v58, v4);
        if ((v67 & 1) != 0 || v33 > v66)
        {
          v62 = swift_getTupleTypeMetadata2();
          v63 = v4;
          v64 = *(int *)(v62 + 48);
          v60(v55, v61, v63);
          *(double *)&v55[v64] = v33;
          return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 56))(v55, 0, 1, v62);
        }
        (*(void (**)(char *, uint64_t))(v5 + 8))(v61, v4);
      }
      v59 = swift_getTupleTypeMetadata2();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 56))(v55, 1, 1, v59);
    }
    if (!v26)
      break;
    v87 = (v26 - 1) & v26;
    v35 = __clz(__rbit64(v26)) | (v81 << 6);
LABEL_27:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v34, *(_QWORD *)(v27 + 48) + *(_QWORD *)(v5 + 72) * v35, v4);
    *(_QWORD *)&v34[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)(*(_QWORD *)(v27 + 56) + 8 * v35);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v34, 0, 1, TupleTypeMetadata2);
    swift_retain();
LABEL_28:
    v44 = *(int *)(TupleTypeMetadata2 + 48);
    v45 = *(_QWORD *)&v34[v44];
    v46 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v47 = TupleTypeMetadata2;
    v48 = v85;
    v46(v85, v34, v4);
    *(_QWORD *)&v48[v44] = v45;
    v49 = *(int *)(v47 + 48);
    v50 = v86;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v86, v48, v4);
    *(_QWORD *)&v50[v49] = v45;
    if (*(_BYTE *)(v45 + 33) == 1)
    {
      v9 = v83;
      if (*(_BYTE *)(v45 + 32) == 1)
        v51 = atan2(*(long double *)(v45 + 48), *(long double *)(v45 + 56));
      else
        v51 = *(double *)(v45 + 40);
      TupleTypeMetadata2 = v47;
      v34 = v84;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v86, v4);
      if (v33 < v51)
      {
        v52 = v76;
        (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v75);
        v53 = v70;
        v46(v70, v85, v4);
        TupleTypeMetadata2 = v47;
        swift_release();
        v46(v52, v53, v4);
        v54 = v52;
        v34 = v84;
        result = ((uint64_t (*)(char *, _QWORD, uint64_t, uint64_t))v69)(v54, 0, 1, v4);
        v33 = v51;
      }
      else
      {
        result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v85, v47);
      }
    }
    else
    {
      v9 = v83;
      (*(void (**)(char *, uint64_t))(v83 + 8))(v48, v47);
      result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v50, v4);
      TupleTypeMetadata2 = v47;
      v34 = v84;
    }
    v27 = v82;
    v26 = v87;
  }
  v40 = v81 + 1;
  if (__OFADD__(v81, 1))
  {
    __break(1u);
    goto LABEL_45;
  }
  if (v40 >= v77)
    goto LABEL_35;
  v41 = *(_QWORD *)(v78 + 8 * v40);
  v42 = v81 + 1;
  if (v41)
    goto LABEL_26;
  v42 = v81 + 2;
  if (v81 + 2 >= v77)
    goto LABEL_35;
  v41 = *(_QWORD *)(v78 + 8 * v42);
  if (v41)
    goto LABEL_26;
  v43 = v81 + 3;
  if (v81 + 3 >= v77)
  {
LABEL_35:
    v55 = v71;
    v57 = v74;
    v56 = v75;
    goto LABEL_37;
  }
  v41 = *(_QWORD *)(v78 + 8 * v43);
  if (v41)
  {
    v42 = v81 + 3;
LABEL_26:
    v87 = (v41 - 1) & v41;
    v35 = __clz(__rbit64(v41)) + (v42 << 6);
    v81 = v42;
    goto LABEL_27;
  }
  while (1)
  {
    v42 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v42 >= v77)
      goto LABEL_35;
    v41 = *(_QWORD *)(v78 + 8 * v42);
    ++v43;
    if (v41)
      goto LABEL_26;
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_24008F904()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[8];

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 80);
  v3 = *(_QWORD *)(*v0 + 88);
  v4 = *(_QWORD *)(*v0 + 96);
  type metadata accessor for DKProbabilityDistribution(0, v2, v3, v4);
  v13[7] = v0[2];
  v13[2] = v2;
  v13[3] = v3;
  v5 = *(_QWORD *)(v1 + 104);
  v13[4] = v4;
  v13[5] = v5;
  type metadata accessor for DKSmoothingFilter();
  v6 = sub_240154574();
  v7 = (char *)type metadata accessor for DKProbabilityValue(0, v2, v3, v4);
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x24267E0BC](MEMORY[0x24BEE04E8], v6);
  v10 = sub_24008BB24((void (*)(char *, char *))sub_24008FDA0, (uint64_t)v13, v6, v7, MEMORY[0x24BEE4078], v8, MEMORY[0x24BEE40A8], v9);
  swift_bridgeObjectRelease();
  v11 = DKProbabilityDistribution.__allocating_init(variables:)(v10);
  sub_240151C00();
  return v11;
}

uint64_t sub_24008FA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;

  v23 = a5;
  v21 = a3;
  v22 = a4;
  type metadata accessor for DKSmoothingFilter();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v21 - v12;
  v14 = *(int *)(v11 + 48);
  v15 = *(_QWORD *)(a2 - 8);
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v16((char *)&v21 - v12, a1, a2);
  v17 = *(_QWORD *)(a1 + v14);
  *(_QWORD *)&v13[v14] = v17;
  v18 = *(int *)(TupleTypeMetadata2 + 48);
  v16(v10, a1, a2);
  *(_QWORD *)&v10[v18] = v17;
  v19 = 0.0;
  if (*(_BYTE *)(v17 + 33) == 1)
  {
    if (*(_BYTE *)(v17 + 32) == 1)
      v19 = atan2(*(long double *)(v17 + 48), *(long double *)(v17 + 56));
    else
      v19 = *(double *)(v17 + 40);
  }
  type metadata accessor for DKProbabilityValue(0, a2, v21, v22);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, a2);
  result = DKProbabilityValue.__allocating_init(variable:probability:)((uint64_t)v13, v19);
  *v23 = result;
  return result;
}

uint64_t DKMultivariateProbabilityFilter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKMultivariateProbabilityFilter.__deallocating_deinit()
{
  return sub_24008FBB0((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_24008FBB0(void (*a1)(_QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_24008FBE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_240154C04();
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      v4 += 2;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6228);
      v7 = swift_allocObject();
      *(_QWORD *)(v7 + 16) = v5;
      *(_QWORD *)(v7 + 24) = v6;
      sub_240154BE0();
      sub_240154C10();
      sub_240154C1C();
      sub_240154BEC();
      --v1;
    }
    while (v1);
    v2 = v9;
  }
  sub_24008DAC4(v2, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24008FCD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24008FD1C()
{
  return swift_release();
}

uint64_t sub_24008FD24(uint64_t a1)
{
  uint64_t v1;

  return sub_24008EAC4(a1, *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 16)) & 1;
}

void sub_24008FD48(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3;
  double v4;

  v3 = *a1;
  v4 = 0.5;
  if (*(_BYTE *)(*a1 + 33) == 1)
  {
    if (*(_BYTE *)(v3 + 32) == 1)
      v4 = atan2(*(long double *)(v3 + 48), *(long double *)(v3 + 56));
    else
      v4 = *(double *)(v3 + 40);
  }
  *a2 = v4;
}

uint64_t sub_24008FDA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_24008FA14(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t type metadata accessor for DKBinaryProbabilityFilter()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKBinaryProbabilityFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.__allocating_init(alpha:beta:threshold:initialProbability:lowThreshold:time:)(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, _QWORD))(v4 + 192))(a1, a2 & 1, a3, a4 & 1);
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.update(_:time:reset:weight:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)v4 + 200))(a1, a2, a3, a4 & 1);
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.lastUpdateTime()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.probability()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKBinaryProbabilityFilter.maximumLikelihood()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t sub_24008FE3C()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for DKMultivariateProbabilityFilter()
{
  JUMPOUT(0x24267E050);
}

uint64_t method lookup function for DKMultivariateProbabilityFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.__allocating_init(variableNames:alpha:beta:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.addVariable(name:probability:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.removeVariable(name:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.update(measurements:pad:reset:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.update(measurements:reset:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.normalize()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.probability(of:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.maximumLikelihood(threshold:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 288))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKMultivariateProbabilityFilter.getDistribution()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t sub_24008FF2C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_24008FF40(a1, a2, a3);
}

uint64_t sub_24008FF40(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t i;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v15 = MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    v5 = sub_240154D30();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      for (i = 4; ; ++i)
      {
        v7 = i - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v8 = MEMORY[0x24267D4E0](i - 4, a3);
          v9 = i - 3;
          if (__OFADD__(v7, 1))
            goto LABEL_17;
        }
        else
        {
          v8 = *(_QWORD *)(a3 + 8 * i);
          swift_retain();
          v9 = i - 3;
          if (__OFADD__(v7, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        v14 = v8;
        a1(&v13, &v14);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return swift_bridgeObjectRelease();
        }
        v10 = swift_release();
        if (v13)
        {
          MEMORY[0x24267D0CC](v10);
          if (*(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2401547D8();
          sub_240154814();
          sub_2401547B4();
        }
        if (v9 == v5)
        {
          swift_bridgeObjectRelease();
          return v15;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x24BEE4AF8];
}

_QWORD *sub_2400900EC(uint64_t (*a1)(uint64_t *), _QWORD *a2, unint64_t a3)
{
  return sub_240090100(a1, a2, a3);
}

_QWORD *sub_240090100(uint64_t (*a1)(uint64_t *), _QWORD *a2, unint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;

  v5 = a3;
  v18 = (_QWORD *)MEMORY[0x24BEE4AF8];
  if (a3 >> 62)
  {
LABEL_18:
    v8 = sub_240154D30();
    if (v8)
      goto LABEL_3;
  }
  else
  {
    v8 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v8)
    {
LABEL_3:
      v9 = 0;
      v15 = v5 & 0xFFFFFFFFFFFFFF8;
      v16 = v5 & 0xC000000000000001;
      v14 = v5;
      while (1)
      {
        if (v16)
        {
          v10 = MEMORY[0x24267D4E0](v9, v5);
          v11 = v9 + 1;
          if (__OFADD__(v9, 1))
          {
LABEL_14:
            __break(1u);
LABEL_15:
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            return v3;
          }
        }
        else
        {
          if (v9 >= *(_QWORD *)(v15 + 16))
          {
            __break(1u);
            goto LABEL_18;
          }
          v10 = *(_QWORD *)(v5 + 8 * v9 + 32);
          swift_retain();
          v11 = v9 + 1;
          if (__OFADD__(v9, 1))
            goto LABEL_14;
        }
        v17 = v10;
        v3 = a2;
        v12 = a1(&v17);
        if (v4)
          goto LABEL_15;
        if ((v12 & 1) != 0)
        {
          sub_240154BE0();
          sub_240154C10();
          v5 = v14;
          sub_240154C1C();
          v3 = &v18;
          sub_240154BEC();
        }
        else
        {
          swift_release();
        }
        ++v9;
        if (v11 == v8)
        {
          v3 = v18;
          goto LABEL_20;
        }
      }
    }
  }
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_20:
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_2400902B4()
{
  return swift_retain();
}

uint64_t sub_2400902BC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return swift_release();
}

uint64_t (*sub_2400902CC())()
{
  return nullsub_1;
}

uint64_t sub_2400902DC()
{
  return swift_retain();
}

uint64_t sub_2400902E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t (*sub_2400902F4())()
{
  return nullsub_1;
}

uint64_t sub_240090304()
{
  return swift_retain();
}

uint64_t sub_24009030C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_release();
}

uint64_t (*sub_24009031C())()
{
  return nullsub_1;
}

uint64_t sub_24009032C()
{
  return swift_retain();
}

uint64_t sub_240090334(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t (*sub_240090344())()
{
  return nullsub_1;
}

uint64_t DKMultiSubjectTrackerConfiguration.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DKMultiSubjectTrackerConfiguration.init()();
  return v0;
}

_QWORD *DKMultiSubjectTrackerConfiguration.init()()
{
  _QWORD *v0;
  _OWORD *v1;

  type metadata accessor for DKFaceTrackerConfiguration();
  *(_OWORD *)(swift_allocObject() + 176) = xmmword_2401572E0;
  v0[2] = DKTrackerConfiguration.init()();
  type metadata accessor for DKBodyTrackerConfiguration();
  swift_allocObject();
  v0[3] = DKTrackerConfiguration.init()();
  type metadata accessor for DKHandTrackerConfiguration();
  *(_QWORD *)(swift_allocObject() + 176) = 0x3FB999999999999ALL;
  v0[4] = DKTrackerConfiguration.init()();
  type metadata accessor for DKPersonTrackerConfiguration();
  swift_allocObject();
  v0[5] = DKPersonTrackerConfiguration.init()();
  type metadata accessor for DKPersonGroupConfiguration();
  v1 = (_OWORD *)swift_allocObject();
  v1[1] = xmmword_2401572F0;
  v1[2] = xmmword_240157300;
  v1[3] = xmmword_240157310;
  v0[6] = v1;
  return v0;
}

uint64_t DKMultiSubjectTrackerConfiguration.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKMultiSubjectTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t DKMultiSubjectTracker.__allocating_init(configuration:camera:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  DKMultiSubjectTracker.init(configuration:camera:)(a1, a2);
  return v4;
}

uint64_t DKMultiSubjectTracker.init(configuration:camera:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastPersonId) = 0;
  v5 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers) = v5;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers) = v5;
  sub_2401544B4();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers) = v5;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration) = a1;
  sub_240080084(a2, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v6 = *(_QWORD *)(a1 + 48);
  type metadata accessor for DKPersonGroupFilter();
  v7 = (_QWORD *)swift_allocObject();
  v8 = MEMORY[0x24BEE4B00];
  v9 = MEMORY[0x24BEE4B08];
  v7[4] = MEMORY[0x24BEE4B00];
  v7[5] = v9;
  v7[6] = v8;
  v7[7] = v5;
  v7[8] = v9;
  v7[9] = v9;
  v7[10] = v9;
  v7[2] = v6;
  v7[3] = v8;
  swift_retain();
  sub_2400800C8(a2, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_groupFilter) = v7;
  return v2;
}

uint64_t sub_240090698(uint64_t a1)
{
  return sub_240090808(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers, (uint64_t (*)(uint64_t *))sub_240096A10);
}

uint64_t sub_2400906AC(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  return sub_2400906C0(a1, a2, a3);
}

uint64_t sub_2400906C0(uint64_t (*a1)(uint64_t *), uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  char v12;
  uint64_t v14;

  if (a3 >> 62)
  {
LABEL_17:
    swift_bridgeObjectRetain();
    v6 = sub_240154D30();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6)
    {
LABEL_3:
      v7 = 4;
      do
      {
        v8 = v7 - 4;
        if ((a3 & 0xC000000000000001) != 0)
        {
          v9 = MEMORY[0x24267D4E0](v7 - 4, a3);
          v10 = __OFADD__(v8, 1);
          v11 = v7 - 3;
          if (v10)
            goto LABEL_16;
        }
        else
        {
          v9 = *(_QWORD *)(a3 + 8 * v7);
          swift_retain();
          v10 = __OFADD__(v8, 1);
          v11 = v7 - 3;
          if (v10)
          {
LABEL_16:
            __break(1u);
            goto LABEL_17;
          }
        }
        v14 = v9;
        v12 = a1(&v14);
        if (v3)
        {
          swift_bridgeObjectRelease();
          swift_release();
          return v9;
        }
        if ((v12 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return v9;
        }
        swift_release();
        ++v7;
      }
      while (v11 != v6);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2400907F4(uint64_t a1)
{
  return sub_240090808(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers, (uint64_t (*)(uint64_t *))sub_240095664);
}

uint64_t sub_240090808(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _BYTE v18[16];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_24015434C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = &v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_240070B90(a1, (uint64_t)v9, &qword_256FB5DE8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_240070BD4((uint64_t)v9, &qword_256FB5DE8);
    return 0;
  }
  else
  {
    v15 = (*(uint64_t (**)(_BYTE *, _BYTE *, uint64_t))(v11 + 32))(v13, v9, v10);
    v16 = *(_QWORD *)(v3 + *a2);
    MEMORY[0x24BDAC7A8](v15);
    *(_QWORD *)&v18[-16] = v13;
    swift_bridgeObjectRetain();
    v14 = sub_2400906C0(a3, (uint64_t)&v18[-32], v16);
    swift_bridgeObjectRelease();
    (*(void (**)(_BYTE *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v14;
}

uint64_t sub_24009098C(uint64_t a1)
{
  return sub_240090808(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers, (uint64_t (*)(uint64_t *))sub_240096A10);
}

uint64_t sub_2400909A0(uint64_t a1)
{
  return sub_240090808(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers, (uint64_t (*)(uint64_t *))sub_2400956A4);
}

uint64_t sub_2400909B4(uint64_t a1)
{
  return sub_2400909EC(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers, (uint64_t (*)(uint64_t *))sub_2400956E4, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_24009571C);
}

uint64_t sub_2400909D0(uint64_t a1)
{
  return sub_2400909EC(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers, (uint64_t (*)(uint64_t *))sub_2400956E4, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_24009575C);
}

uint64_t sub_2400909EC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t *), void (*a4)(uint64_t *__return_ptr, uint64_t *))
{
  uint64_t v4;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _QWORD v21[5];
  void (*v22)(uint64_t *__return_ptr, uint64_t *);
  _QWORD v23[4];
  unint64_t v24;

  v8 = *a2;
  v9 = *(_QWORD *)(v4 + *a2);
  v23[2] = a1;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v4 + v8) = sub_240090100(a3, v23, v9);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v4 + v8);
  v24 = MEMORY[0x24BEE4AF8];
  if (!(v10 >> 62))
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v11)
      goto LABEL_3;
LABEL_16:
    v18 = swift_bridgeObjectRelease();
LABEL_17:
    v19 = v24;
    MEMORY[0x24BDAC7A8](v18);
    v21[2] = a1;
    v20 = sub_24008FF40(a4, (uint64_t)v21, v19);
    swift_release();
    return v20;
  }
  swift_bridgeObjectRetain();
  result = sub_240154D30();
  v11 = result;
  if (!result)
    goto LABEL_16;
LABEL_3:
  if (v11 >= 1)
  {
    v22 = a4;
    if ((v10 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v11; ++i)
      {
        v14 = MEMORY[0x24267D4E0](i, v10);
        if (*(_QWORD *)(*(_QWORD *)(v14 + qword_256FC48A0) + 16) >= *(_QWORD *)(*(_QWORD *)(v14 + qword_256FC4888)
                                                                                 + 80))
        {
          sub_240154BE0();
          sub_240154C10();
          sub_240154C1C();
          sub_240154BEC();
        }
        else
        {
          swift_unknownObjectRelease();
        }
      }
    }
    else
    {
      v15 = 0;
      v16 = qword_256FC48A0;
      v17 = qword_256FC4888;
      do
      {
        if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 8 * v15 + 32) + v16) + 16) >= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v10 + 8 * v15 + 32) + v17)
                                                                                                 + 80))
        {
          swift_retain();
          sub_240154BE0();
          sub_240154C10();
          sub_240154C1C();
          sub_240154BEC();
          v16 = qword_256FC48A0;
          v17 = qword_256FC4888;
        }
        ++v15;
      }
      while (v11 != v15);
    }
    v18 = swift_bridgeObjectRelease();
    a4 = v22;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_240090C40(uint64_t a1)
{
  return sub_2400909EC(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers, (uint64_t (*)(uint64_t *))sub_2400956E4, (void (*)(uint64_t *__return_ptr, uint64_t *))sub_24009579C);
}

uint64_t sub_240090C5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _QWORD v8[4];
  _QWORD v9[4];

  v3 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  v9[2] = a1;
  swift_bridgeObjectRetain();
  *(_QWORD *)(v1 + v3) = sub_240090100((uint64_t (*)(uint64_t *))sub_2400957DC, v9, v4);
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(v1 + v3);
  v8[2] = a1;
  swift_bridgeObjectRetain();
  v6 = sub_24008FF40((void (*)(uint64_t *__return_ptr, uint64_t *))sub_240095814, (uint64_t)v8, v5);
  swift_bridgeObjectRelease();
  return v6;
}

BOOL sub_240090CFC()
{
  return (sub_240138D40() & 1) == 0;
}

uint64_t sub_240090D30@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_240138FEC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_240090D6C(double *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double *v5;
  uint64_t v6;
  char v7;
  uint64_t result;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[3];
  uint64_t v25;
  uint64_t v26;

  v3 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (double *)((char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
  sub_240080084(v6, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v7 = _s23IntelligentTrackingCore8DKCameraV2eeoiySbAC_ACtFZ_0(v5, a1);
  result = sub_2400800C8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  if ((v7 & 1) == 0)
  {
    sub_2400800C8(v6, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    sub_240080084((uint64_t)a1, v6, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    v9 = swift_bridgeObjectRetain();
    v10 = sub_240090FA4(v9, (uint64_t (*)(_QWORD))type metadata accessor for DKFaceTracker, (uint64_t)&protocol witness table for DKTrackerBase<A, B, C>);
    swift_bridgeObjectRelease();
    v11 = swift_bridgeObjectRetain();
    v12 = sub_240090FA4(v11, (uint64_t (*)(_QWORD))type metadata accessor for DKBodyTracker, (uint64_t)&protocol witness table for DKTrackerBase<A, B, C>);
    swift_bridgeObjectRelease();
    v24[0] = v10;
    sub_2400950AC(v12);
    v13 = v24[0];
    v14 = swift_bridgeObjectRetain();
    v15 = sub_240090FA4(v14, (uint64_t (*)(_QWORD))type metadata accessor for DKHandTracker, (uint64_t)&protocol witness table for DKTrackerBase<A, B, C>);
    swift_bridgeObjectRelease();
    v24[0] = v13;
    sub_2400950AC(v15);
    v16 = v24[0];
    v17 = swift_bridgeObjectRetain();
    v18 = sub_240090FA4(v17, (uint64_t (*)(_QWORD))type metadata accessor for DKPersonTracker, (uint64_t)&protocol witness table for DKPersonTracker);
    swift_bridgeObjectRelease();
    v24[0] = v16;
    sub_2400950AC(v18);
    v19 = *(_QWORD *)(v24[0] + 16);
    if (v19)
    {
      v20 = v24[0] + 32;
      do
      {
        sub_24008BA98(v20, (uint64_t)v24);
        v21 = v25;
        v22 = v26;
        __swift_project_boxed_opaque_existential_1(v24, v25);
        (*(void (**)(double *, uint64_t, uint64_t))(v22 + 56))(a1, v21, v22);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        v20 += 40;
        --v19;
      }
      while (v19);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_240090FA4(unint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v6 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v7 = MEMORY[0x24BEE4AF8];
  if (!v6)
    return v7;
  v20 = MEMORY[0x24BEE4AF8];
  result = sub_2400E5764(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    v7 = v20;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v9 = 0;
      do
      {
        v10 = MEMORY[0x24267D4E0](v9, a1);
        v20 = v7;
        v12 = *(_QWORD *)(v7 + 16);
        v11 = *(_QWORD *)(v7 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_2400E5764(v11 > 1, v12 + 1, 1);
          v7 = v20;
        }
        ++v9;
        v18 = a2(0);
        v19 = a3;
        *(_QWORD *)&v17 = v10;
        *(_QWORD *)(v7 + 16) = v12 + 1;
        sub_24007CC80(&v17, v7 + 40 * v12 + 32);
      }
      while (v6 != v9);
    }
    else
    {
      v13 = (uint64_t *)(a1 + 32);
      do
      {
        v14 = *v13;
        v20 = v7;
        v15 = *(_QWORD *)(v7 + 16);
        v16 = *(_QWORD *)(v7 + 24);
        swift_retain();
        if (v15 >= v16 >> 1)
        {
          sub_2400E5764(v16 > 1, v15 + 1, 1);
          v7 = v20;
        }
        v18 = a2(0);
        v19 = a3;
        *(_QWORD *)&v17 = v14;
        *(_QWORD *)(v7 + 16) = v15 + 1;
        sub_24007CC80(&v17, v7 + 40 * v15 + 32);
        ++v13;
        --v6;
      }
      while (v6);
    }
    return v7;
  }
  __break(1u);
  return result;
}

uint64_t sub_240091164(uint64_t a1)
{
  return sub_2400917AC(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_2400E5790, &qword_256FB4F48, &qword_256FB6610);
}

uint64_t sub_240091180(uint64_t a1)
{
  return sub_2400917AC(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_2400E57BC, &qword_256FB4F38, &qword_256FB6608);
}

uint64_t sub_24009119C(uint64_t a1)
{
  return sub_2400917AC(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_2400E57E8, &qword_256FB4F20, &qword_256FB6600);
}

uint64_t sub_2400911B8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;

  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4ED0);
  v2 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = MEMORY[0x24BEE4AF8];
  if (v9)
  {
    v17 = MEMORY[0x24BEE4AF8];
    sub_2400E5814(0, v9, 0);
    v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v12 = *(_QWORD *)(v2 + 72);
    v10 = v17;
    do
    {
      sub_240070B90(v11, (uint64_t)v4, &qword_256FB4ED0);
      swift_dynamicCast();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_2400E5814(0, *(_QWORD *)(v10 + 16) + 1, 1);
        v10 = v17;
      }
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_2400E5814(v13 > 1, v14 + 1, 1);
        v10 = v17;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      sub_24009663C((uint64_t)v8, v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14);
      v11 += v12;
      --v9;
    }
    while (v9);
  }
  return v10;
}

uint64_t sub_240091370(unint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v2 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  result = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v7 = MEMORY[0x24BEE4AF8];
    result = sub_240154C04();
    if (v2 < 0)
    {
      __break(1u);
    }
    else
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        v4 = 0;
        do
        {
          v5 = v4 + 1;
          MEMORY[0x24267D4E0]();
          type metadata accessor for DKHandObservation(0);
          swift_retain();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EA8);
          swift_dynamicCast();
          swift_release();
          sub_240154BE0();
          sub_240154C10();
          sub_240154C1C();
          sub_240154BEC();
          v4 = v5;
        }
        while (v2 != v5);
      }
      else
      {
        v6 = a1 + 32;
        type metadata accessor for DKHandObservation(0);
        do
        {
          v6 += 8;
          swift_retain_n();
          __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EA8);
          swift_dynamicCast();
          swift_release();
          sub_240154BE0();
          sub_240154C10();
          sub_240154C1C();
          sub_240154BEC();
          --v2;
        }
        while (v2);
      }
      return v7;
    }
  }
  return result;
}

uint64_t sub_240091550(unint64_t a1)
{
  return sub_240091588(a1, type metadata accessor for DKFaceObservation, &qword_256FB4FB0, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
}

uint64_t sub_24009156C(unint64_t a1)
{
  return sub_240091588(a1, type metadata accessor for DKBodyObservation, &qword_256FB4FA8, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
}

uint64_t sub_240091588(unint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v8 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v9 = MEMORY[0x24BEE4AF8];
  if (!v8)
    return v9;
  v22 = MEMORY[0x24BEE4AF8];
  result = sub_2400E5898(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    v9 = v22;
    if ((a1 & 0xC000000000000001) != 0)
    {
      v11 = 0;
      do
      {
        v12 = MEMORY[0x24267D4E0](v11, a1);
        v22 = v9;
        v14 = *(_QWORD *)(v9 + 16);
        v13 = *(_QWORD *)(v9 + 24);
        if (v14 >= v13 >> 1)
        {
          sub_2400E5898(v13 > 1, v14 + 1, 1);
          v9 = v22;
        }
        ++v11;
        v20 = a2(0);
        v21 = sub_2400707A8(a3, a2, a4);
        *(_QWORD *)&v19 = v12;
        *(_QWORD *)(v9 + 16) = v14 + 1;
        sub_24007CC80(&v19, v9 + 40 * v14 + 32);
      }
      while (v8 != v11);
    }
    else
    {
      v15 = (uint64_t *)(a1 + 32);
      do
      {
        v16 = *v15;
        v22 = v9;
        v18 = *(_QWORD *)(v9 + 16);
        v17 = *(_QWORD *)(v9 + 24);
        swift_retain();
        if (v18 >= v17 >> 1)
        {
          sub_2400E5898(v17 > 1, v18 + 1, 1);
          v9 = v22;
        }
        v20 = a2(0);
        v21 = sub_2400707A8(a3, a2, a4);
        *(_QWORD *)&v19 = v16;
        *(_QWORD *)(v9 + 16) = v18 + 1;
        sub_24007CC80(&v19, v9 + 40 * v18 + 32);
        ++v15;
        --v8;
      }
      while (v8);
    }
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_240091774(unint64_t a1)
{
  return sub_240091588(a1, type metadata accessor for DKHandObservation, &qword_256FB65D0, (uint64_t)&protocol conformance descriptor for DKHandObservation);
}

uint64_t sub_240091790(uint64_t a1)
{
  return sub_2400917AC(a1, (void (*)(BOOL, uint64_t, uint64_t))sub_2400E597C, &qword_256FB4E58, &qword_256FB65D8);
}

uint64_t sub_2400917AC(uint64_t a1, void (*a2)(BOOL, uint64_t, uint64_t), uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v18 = MEMORY[0x24BEE4AF8];
    a2(0, v4, 0);
    v5 = v18;
    v9 = a1 + 48;
    do
    {
      swift_retain_n();
      swift_retain_n();
      __swift_instantiateConcreteTypeFromMangledName(a3);
      __swift_instantiateConcreteTypeFromMangledName(a4);
      swift_dynamicCast();
      swift_release();
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        a2(0, *(_QWORD *)(v5 + 16) + 1, 1);
        v5 = v18;
      }
      v11 = *(_QWORD *)(v5 + 16);
      v10 = *(_QWORD *)(v5 + 24);
      if (v11 >= v10 >> 1)
      {
        a2(v10 > 1, v11 + 1, 1);
        v5 = v18;
      }
      *(_QWORD *)(v5 + 16) = v11 + 1;
      v12 = (_QWORD *)(v5 + 24 * v11);
      v12[4] = v15;
      v12[5] = v16;
      v12[6] = v17;
      v9 += 24;
      --v4;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_24009192C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v4;
  unint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  unint64_t *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t i;
  uint64_t v14;
  uint64_t (*v15)();
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t j;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t k;
  uint64_t v30;
  uint64_t (*v31)();
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t *v46;
  unint64_t *v47;
  unint64_t *v48;
  _QWORD v50[4];
  _QWORD v51[4];
  _QWORD v52[3];
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  _BYTE v56[40];
  unint64_t v57;
  _BYTE v58[40];
  unint64_t v59[3];

  v4 = (unint64_t *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers);
  v52[2] = a1;
  swift_bridgeObjectRetain();
  *v4 = (unint64_t)sub_240090100((uint64_t (*)(uint64_t *))sub_2400969F8, v52, v5);
  swift_bridgeObjectRelease();
  v6 = (unint64_t *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers);
  v7 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers);
  v51[2] = a1;
  swift_bridgeObjectRetain();
  v48 = v6;
  *v6 = (unint64_t)sub_240090100((uint64_t (*)(uint64_t *))sub_2400969F8, v51, v7);
  swift_bridgeObjectRelease();
  v8 = (unint64_t *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers);
  v50[2] = a1;
  swift_bridgeObjectRetain();
  v47 = v8;
  *v8 = (unint64_t)sub_240090100((uint64_t (*)(uint64_t *))sub_2400969F8, v50, v9);
  swift_bridgeObjectRelease();
  v46 = v4;
  v10 = *v4;
  if (*v4 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_240154D30();
    v11 = result;
  }
  else
  {
    v11 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
  }
  if (v11)
  {
    if (v11 < 1)
    {
      __break(1u);
      goto LABEL_64;
    }
    for (i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0)
      {
        v14 = MEMORY[0x24267D4E0](i, v10);
      }
      else
      {
        v14 = *(_QWORD *)(v10 + 8 * i + 32);
        swift_retain();
      }
      *(_BYTE *)(v14 + qword_256FC4898) = 0;
      v15 = sub_240095080();
      v17 = v16;
      v18 = type metadata accessor for DKPersonGroupFilter.Track(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 48))(v17, 1, v18))
      {
        *(_QWORD *)v17 = 0;
        *(_BYTE *)(v17 + 8) = 1;
      }
      ((void (*)(_BYTE *, _QWORD))v15)(v58, 0);
      swift_release();
    }
  }
  swift_bridgeObjectRelease();
  v19 = *v48;
  if (*v48 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_240154D30();
    v20 = result;
    if (!result)
      goto LABEL_24;
  }
  else
  {
    v20 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (!v20)
      goto LABEL_24;
  }
  if (v20 < 1)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  for (j = 0; j != v20; ++j)
  {
    if ((v19 & 0xC000000000000001) != 0)
    {
      v22 = MEMORY[0x24267D4E0](j, v19);
    }
    else
    {
      v22 = *(_QWORD *)(v19 + 8 * j + 32);
      swift_retain();
    }
    *(_BYTE *)(v22 + qword_256FC4898) = 0;
    v23 = sub_240095080();
    v25 = v24;
    v26 = type metadata accessor for DKPersonGroupFilter.Track(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 48))(v25, 1, v26))
    {
      *(_QWORD *)v25 = 0;
      *(_BYTE *)(v25 + 8) = 1;
    }
    ((void (*)(_BYTE *, _QWORD))v23)(v58, 0);
    swift_release();
  }
LABEL_24:
  swift_bridgeObjectRelease();
  v27 = *v8;
  if (*v8 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_240154D30();
    v28 = result;
    if (result)
    {
LABEL_26:
      if (v28 >= 1)
      {
        for (k = 0; k != v28; ++k)
        {
          if ((v27 & 0xC000000000000001) != 0)
          {
            v30 = MEMORY[0x24267D4E0](k, v27);
          }
          else
          {
            v30 = *(_QWORD *)(v27 + 8 * k + 32);
            swift_retain();
          }
          *(_BYTE *)(v30 + qword_256FC4898) = 0;
          v31 = sub_240095080();
          v33 = v32;
          v34 = type metadata accessor for DKPersonGroupFilter.Track(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34))
          {
            *(_QWORD *)v33 = 0;
            *(_BYTE *)(v33 + 8) = 1;
          }
          ((void (*)(_BYTE *, _QWORD))v31)(v58, 0);
          swift_release();
        }
        goto LABEL_35;
      }
LABEL_65:
      __break(1u);
      return result;
    }
  }
  else
  {
    v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v28)
      goto LABEL_26;
  }
LABEL_35:
  swift_bridgeObjectRelease();
  v35 = MEMORY[0x24BEE4AF8];
  v59[0] = MEMORY[0x24BEE4AF8];
  v36 = *(_QWORD *)(a2 + 16);
  if (v36)
  {
    v37 = a2 + 32;
    swift_bridgeObjectRetain();
    v38 = a2 + 32;
    v39 = v36;
    do
    {
      sub_24008BA98(v38, (uint64_t)v58);
      sub_24008BA98((uint64_t)v58, (uint64_t)v56);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
      type metadata accessor for DKFaceObservation(0);
      if ((swift_dynamicCast() & 1) == 0)
        v57 = 0;
      v40 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      if (v57)
      {
        MEMORY[0x24267D0CC](v40);
        if (*(_QWORD *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v59[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
      }
      v38 += 40;
      --v39;
    }
    while (v39);
    swift_bridgeObjectRelease();
    v55 = v35;
    swift_bridgeObjectRetain();
    v41 = a2 + 32;
    v42 = v36;
    do
    {
      sub_24008BA98(v41, (uint64_t)v58);
      sub_24008BA98((uint64_t)v58, (uint64_t)v56);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
      type metadata accessor for DKBodyObservation(0);
      if ((swift_dynamicCast() & 1) == 0)
        v54 = 0;
      v43 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      if (v54)
      {
        MEMORY[0x24267D0CC](v43);
        if (*(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
      }
      v41 += 40;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    v57 = v55;
    v54 = v35;
    swift_bridgeObjectRetain();
    do
    {
      sub_24008BA98(v37, (uint64_t)v58);
      sub_24008BA98((uint64_t)v58, (uint64_t)v56);
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
      type metadata accessor for DKHandObservation(0);
      if ((swift_dynamicCast() & 1) == 0)
        v53 = 0;
      v44 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      if (v53)
      {
        MEMORY[0x24267D0CC](v44);
        if (*(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
      }
      v37 += 40;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    v45 = v54;
  }
  else
  {
    v59[0] = MEMORY[0x24BEE4AF8];
    v57 = MEMORY[0x24BEE4AF8];
    v45 = MEMORY[0x24BEE4AF8];
  }
  v55 = v45;
  sub_24009363C(a1, v46, v59);
  swift_bridgeObjectRelease();
  sub_240093E20(a1, v48, &v57);
  swift_bridgeObjectRelease();
  sub_240094434(a1, v47, &v55);
  swift_bridgeObjectRelease();
  return sub_240092064(a1);
}

uint64_t sub_240092064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t result;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  BOOL v102;
  uint64_t v103;
  double *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  void (*v113)(char *, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void (*v120)(char *, uint64_t);
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  char v132;
  uint64_t *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  int *v164;
  uint64_t v165;
  uint64_t v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  char *v170;
  char *v171;
  uint64_t v172;
  uint64_t *v173;
  _QWORD v174[2];

  v159 = a1;
  v2 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v2);
  v154 = (uint64_t)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = sub_240154310();
  v152 = *(_QWORD *)(v153 - 8);
  MEMORY[0x24BDAC7A8](v153);
  v165 = (uint64_t)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v5);
  v143 = (uint64_t)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v144 = (uint64_t)&v140 - v8;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v140 - v10;
  MEMORY[0x24BDAC7A8](v12);
  v163 = (char *)&v140 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v157 = (char *)&v140 - v15;
  v16 = sub_24015434C();
  v168 = *(_QWORD *)(v16 - 8);
  v169 = v16;
  MEMORY[0x24BDAC7A8](v16);
  v147 = (char *)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v148 = (char *)&v140 - v19;
  MEMORY[0x24BDAC7A8](v20);
  v170 = (char *)&v140 - v21;
  MEMORY[0x24BDAC7A8](v22);
  v155 = (char *)&v140 - v23;
  MEMORY[0x24BDAC7A8](v24);
  v171 = (char *)&v140 - v25;
  v164 = (int *)type metadata accessor for DKPersonGroup(0);
  v158 = *((_QWORD *)v164 - 1);
  MEMORY[0x24BDAC7A8](v164);
  v172 = (uint64_t)&v140 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v27);
  v173 = (uint64_t *)((char *)&v140 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&v140 - v30;
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&v140 - v33;
  v35 = type metadata accessor for DKPersonGroupFilter.Track(0);
  v36 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v160 = (uint64_t)&v140 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v38);
  v150 = (uint64_t)&v140 - v39;
  MEMORY[0x24BDAC7A8](v40);
  v161 = (uint64_t)&v140 - v41;
  MEMORY[0x24BDAC7A8](v42);
  v151 = (uint64_t)&v140 - v43;
  MEMORY[0x24BDAC7A8](v44);
  v46 = (char *)&v140 - v45;
  MEMORY[0x24BDAC7A8](v47);
  v166 = (uint64_t)&v140 - v48;
  v162 = v1;
  v142 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers;
  v49 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers);
  if (v49 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_240154D30();
    v50 = result;
  }
  else
  {
    v50 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
  }
  v156 = v11;
  if (v50)
  {
    if (v50 < 1)
      goto LABEL_169;
    v52 = 0;
    v167 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v149 = v46;
    do
    {
      if ((v49 & 0xC000000000000001) != 0)
      {
        v53 = MEMORY[0x24267D4E0](v52, v49);
      }
      else
      {
        v53 = *(_QWORD *)(v49 + 8 * v52 + 32);
        swift_retain();
      }
      if (*(_QWORD *)(*(_QWORD *)(v53 + qword_256FC48A0) + 16) >= *(_QWORD *)(*(_QWORD *)(v53 + qword_256FC4888)
                                                                               + 80))
        sub_240070B90(v53 + *(_QWORD *)(*(_QWORD *)v53 + 232), (uint64_t)v34, &qword_256FB65E8);
      else
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v34, 1, 1, v35);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35) == 1)
      {
        sub_240070BD4((uint64_t)v34, &qword_256FB65E8);
      }
      else
      {
        v54 = v166;
        sub_2400969B4((uint64_t)v34, v166);
        sub_2400969B4(v54, (uint64_t)v46);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v167 = (_QWORD *)sub_240078520(0, v167[2] + 1, 1, (unint64_t)v167);
        v56 = v167[2];
        v55 = v167[3];
        if (v56 >= v55 >> 1)
          v167 = (_QWORD *)sub_240078520(v55 > 1, v56 + 1, 1, (unint64_t)v167);
        v57 = v167;
        v167[2] = v56 + 1;
        v58 = (uint64_t)v57
            + ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))
            + *(_QWORD *)(v36 + 72) * v56;
        v46 = v149;
        sub_2400969B4((uint64_t)v149, v58);
      }
      ++v52;
    }
    while (v50 != v52);
  }
  else
  {
    v167 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease_n();
  v141 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers;
  v59 = *(_QWORD *)(v162 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers);
  if (v59 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_240154D30();
    v60 = result;
    if (result)
      goto LABEL_23;
LABEL_41:
    v166 = MEMORY[0x24BEE4AF8];
    goto LABEL_42;
  }
  v60 = *(_QWORD *)((v59 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n();
  if (!v60)
    goto LABEL_41;
LABEL_23:
  if (v60 < 1)
    goto LABEL_170;
  v61 = 0;
  v62 = v59 & 0xC000000000000001;
  v166 = MEMORY[0x24BEE4AF8];
  v63 = &qword_256FB65E8;
  do
  {
    if (v62)
    {
      v64 = MEMORY[0x24267D4E0](v61, v59);
    }
    else
    {
      v64 = *(_QWORD *)(v59 + 8 * v61 + 32);
      swift_retain();
    }
    if (*(_QWORD *)(*(_QWORD *)(v64 + qword_256FC48A0) + 16) >= *(_QWORD *)(*(_QWORD *)(v64 + qword_256FC4888) + 80))
      sub_240070B90(v64 + *(_QWORD *)(*(_QWORD *)v64 + 232), (uint64_t)v31, v63);
    else
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v31, 1, 1, v35);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v31, 1, v35) == 1)
    {
      sub_240070BD4((uint64_t)v31, v63);
    }
    else
    {
      v65 = v60;
      v66 = v59;
      v67 = v63;
      v68 = v151;
      sub_2400969B4((uint64_t)v31, v151);
      sub_2400969B4(v68, v161);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v166 = sub_240078520(0, *(_QWORD *)(v166 + 16) + 1, 1, v166);
      v70 = *(_QWORD *)(v166 + 16);
      v69 = *(_QWORD *)(v166 + 24);
      if (v70 >= v69 >> 1)
        v166 = sub_240078520(v69 > 1, v70 + 1, 1, v166);
      v71 = v166;
      *(_QWORD *)(v166 + 16) = v70 + 1;
      sub_2400969B4(v161, v71+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v70);
      v63 = v67;
      v59 = v66;
      v60 = v65;
    }
    ++v61;
  }
  while (v60 != v61);
LABEL_42:
  swift_bridgeObjectRelease_n();
  v72 = *(_QWORD *)(v162 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers);
  if (v72 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_240154D30();
    v73 = result;
    if (result)
      goto LABEL_44;
  }
  else
  {
    v73 = *(_QWORD *)((v72 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
    if (v73)
    {
LABEL_44:
      if (v73 < 1)
        goto LABEL_171;
      v74 = 0;
      v75 = MEMORY[0x24BEE4AF8];
      do
      {
        if ((v72 & 0xC000000000000001) != 0)
        {
          v76 = MEMORY[0x24267D4E0](v74, v72);
        }
        else
        {
          v76 = *(_QWORD *)(v72 + 8 * v74 + 32);
          swift_retain();
        }
        if (*(_QWORD *)(*(_QWORD *)(v76 + qword_256FC48A0) + 16) >= *(_QWORD *)(*(_QWORD *)(v76 + qword_256FC4888)
                                                                                 + 80))
          sub_240070B90(v76 + *(_QWORD *)(*(_QWORD *)v76 + 232), (uint64_t)v173, &qword_256FB65E8);
        else
          (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v173, 1, 1, v35);
        swift_release();
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v36 + 48))(v173, 1, v35) == 1)
        {
          sub_240070BD4((uint64_t)v173, &qword_256FB65E8);
        }
        else
        {
          v77 = v150;
          sub_2400969B4((uint64_t)v173, v150);
          sub_2400969B4(v77, v160);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v75 = sub_240078520(0, *(_QWORD *)(v75 + 16) + 1, 1, v75);
          v79 = *(_QWORD *)(v75 + 16);
          v78 = *(_QWORD *)(v75 + 24);
          if (v79 >= v78 >> 1)
            v75 = sub_240078520(v78 > 1, v79 + 1, 1, v75);
          *(_QWORD *)(v75 + 16) = v79 + 1;
          sub_2400969B4(v160, v75+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(_QWORD *)(v36 + 72) * v79);
        }
        ++v74;
      }
      while (v73 != v74);
      goto LABEL_62;
    }
  }
  v75 = MEMORY[0x24BEE4AF8];
LABEL_62:
  swift_bridgeObjectRelease_n();
  v80 = v162;
  swift_retain();
  sub_2400EE704(v159, (uint64_t)v167, v166, v75, v174);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v82 = v174[0];
  v81 = v174[1];
  v83 = (uint64_t *)(v80 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v84 = swift_bridgeObjectRetain();
  v85 = sub_240096684(v84, v82, v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v167 = v83;
  *v83 = v85;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = v82;
  v166 = *(_QWORD *)(v82 + 16);
  if (!v166)
    return swift_bridgeObjectRelease();
  v146 = 0;
  v86 = 0;
  v151 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration;
  v150 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastPersonId;
  v149 = (char *)(v80 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera);
  v161 = v82 + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80));
  v87 = &OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_uuid;
  v88 = v80;
  v89 = (uint64_t)v156;
  v90 = (uint64_t)v163;
  v91 = (uint64_t)v157;
  v92 = v168;
  v93 = v169;
  v160 = v82;
  while (1)
  {
    if (v86 >= *(_QWORD *)(result + 16))
      goto LABEL_165;
    v94 = v87;
    v95 = v172;
    sub_240080084(v161 + *(_QWORD *)(v158 + 72) * v86, v172, type metadata accessor for DKPersonGroup);
    v96 = v95 + v164[7];
    sub_240070B90(v96, v91, &qword_256FB5DE8);
    v173 = *(uint64_t **)(v92 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v173)(v91, 1, v93) != 1)
      break;
    sub_240070BD4(v91, &qword_256FB5DE8);
LABEL_85:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 16))(v165, v159, v153);
    v104 = *(double **)(*(_QWORD *)(v88 + v151) + 40);
    sub_240070B90(v96, v90, &qword_256FB5DE8);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v173)(v90, 1, v93) == 1)
    {
      swift_retain();
      v105 = (uint64_t)v155;
      sub_240154340();
      sub_240070BD4(v90, &qword_256FB5DE8);
    }
    else
    {
      v105 = (uint64_t)v155;
      (*(void (**)(void))(v92 + 32))();
      swift_retain();
    }
    v106 = v150;
    v107 = *(_QWORD *)(v88 + v150);
    v108 = v154;
    sub_240080084((uint64_t)v149, v154, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    type metadata accessor for DKPersonTracker();
    swift_allocObject();
    sub_24013A8DC(v165, v104, v105, v107, v108);
    swift_release();
    v109 = swift_retain();
    v110 = v167;
    MEMORY[0x24267D0CC](v109);
    if (*(_QWORD *)((*v110 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v110 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    result = sub_2401547B4();
    v111 = *(_QWORD *)(v88 + v106);
    v102 = __OFADD__(v111, 1);
    v112 = v111 + 1;
    if (v102)
      goto LABEL_166;
    *(_QWORD *)(v88 + v106) = v112;
    v92 = v168;
    v87 = v94;
LABEL_92:
    swift_release();
    sub_240070B90(v96, v89, &qword_256FB5DE8);
    v93 = v169;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v173)(v89, 1, v169) != 1)
    {
      v113 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 32);
      v113(v170, v89, v93);
      v114 = *v167;
      if (*v167 >> 62)
      {
        swift_bridgeObjectRetain_n();
        v115 = sub_240154D30();
        if (v115)
          goto LABEL_95;
      }
      else
      {
        v115 = *(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        if (v115)
        {
LABEL_95:
          if ((v114 & 0xC000000000000001) != 0)
            MEMORY[0x24267D4E0](0, v114);
          else
            swift_retain();
          if ((sub_240154328() & 1) != 0)
            goto LABEL_111;
          swift_release();
          if (v115 != 1)
          {
            v116 = 5;
            while (1)
            {
              v117 = v116 - 4;
              if ((v114 & 0xC000000000000001) != 0)
              {
                result = MEMORY[0x24267D4E0](v116 - 4, v114);
                v102 = __OFADD__(v117, 1);
                v118 = v116 - 3;
                if (v102)
                  goto LABEL_164;
              }
              else
              {
                result = swift_retain();
                v102 = __OFADD__(v117, 1);
                v118 = v116 - 3;
                if (v102)
                  goto LABEL_164;
              }
              if ((sub_240154328() & 1) != 0)
                break;
              swift_release();
              ++v116;
              if (v118 == v115)
                goto LABEL_107;
            }
            v88 = v162;
LABEL_111:
            swift_bridgeObjectRelease_n();
            v119 = v169;
            v120 = *(void (**)(char *, uint64_t))(v168 + 8);
            v120(v170, v169);
            v121 = v144;
            sub_240070B90(v172 + v164[8], v144, &qword_256FB5DE8);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v173)(v121, 1, v119) == 1)
            {
              sub_240070BD4(v121, &qword_256FB5DE8);
              v122 = 0;
              goto LABEL_130;
            }
            v113(v148, v121, v119);
            v123 = *(_QWORD *)(v88 + v142);
            if (v123 >> 62)
            {
              swift_bridgeObjectRetain_n();
              v124 = sub_240154D30();
              if (!v124)
                goto LABEL_127;
LABEL_115:
              v145 = v123 & 0xC000000000000001;
              if ((v123 & 0xC000000000000001) != 0)
              {
                v122 = MEMORY[0x24267D4E0](0, v123);
              }
              else
              {
                v122 = *(_QWORD *)(v123 + 32);
                swift_retain();
              }
              if ((sub_240154328() & 1) == 0)
              {
                swift_release();
                if (v124 == 1)
                  goto LABEL_127;
                v125 = 5;
                while (1)
                {
                  v126 = v125 - 4;
                  if (v145)
                  {
                    result = MEMORY[0x24267D4E0](v125 - 4, v123);
                    v122 = result;
                    v102 = __OFADD__(v126, 1);
                    v127 = v125 - 3;
                    if (v102)
                      goto LABEL_167;
                  }
                  else
                  {
                    v122 = *(_QWORD *)(v123 + 8 * v125);
                    result = swift_retain();
                    v102 = __OFADD__(v126, 1);
                    v127 = v125 - 3;
                    if (v102)
                      goto LABEL_167;
                  }
                  if ((sub_240154328() & 1) != 0)
                    break;
                  swift_release();
                  ++v125;
                  if (v127 == v124)
                    goto LABEL_127;
                }
                v88 = v162;
              }
              swift_bridgeObjectRelease_n();
              v119 = v169;
              v120(v148, v169);
            }
            else
            {
              v124 = *(_QWORD *)((v123 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n();
              if (v124)
                goto LABEL_115;
LABEL_127:
              swift_bridgeObjectRelease_n();
              v119 = v169;
              v120(v148, v169);
              v122 = 0;
              v88 = v162;
            }
LABEL_130:
            v128 = v143;
            sub_240070B90(v172 + v164[9], v143, &qword_256FB5DE8);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v173)(v128, 1, v119) == 1)
            {
              sub_240070BD4(v128, &qword_256FB5DE8);
              v129 = 0;
LABEL_149:
              v137 = v146;
              swift_retain();
              v138 = swift_bridgeObjectRetain();
              v139 = sub_240095C4C(v138, v88);
              v146 = v137;
              swift_bridgeObjectRelease();
              swift_release();
              sub_240137CEC(v159, v122, v129, v139);
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              v89 = (uint64_t)v156;
              v90 = (uint64_t)v163;
              v91 = (uint64_t)v157;
              v92 = v168;
              v93 = v169;
              goto LABEL_66;
            }
            v113(v147, v128, v119);
            v130 = *(_QWORD *)(v88 + v141);
            v173 = (uint64_t *)v120;
            if (!(v130 >> 62))
            {
              v131 = *(_QWORD *)((v130 & 0xFFFFFFFFFFFFF8) + 0x10);
              swift_bridgeObjectRetain_n();
              if (v131)
                goto LABEL_134;
LABEL_146:
              swift_bridgeObjectRelease_n();
              ((void (*)(char *, uint64_t))v173)(v147, v169);
              v129 = 0;
              v88 = v162;
              goto LABEL_149;
            }
            swift_bridgeObjectRetain_n();
            v131 = sub_240154D30();
            if (!v131)
              goto LABEL_146;
LABEL_134:
            if ((v130 & 0xC000000000000001) != 0)
            {
              v129 = MEMORY[0x24267D4E0](0, v130);
            }
            else
            {
              v129 = *(_QWORD *)(v130 + 32);
              swift_retain();
            }
            v132 = sub_240154328();
            v133 = v173;
            if ((v132 & 1) == 0)
            {
              swift_release();
              if (v131 == 1)
                goto LABEL_146;
              v134 = 5;
              while (1)
              {
                v135 = v134 - 4;
                if ((v130 & 0xC000000000000001) != 0)
                {
                  result = MEMORY[0x24267D4E0](v134 - 4, v130);
                  v129 = result;
                  v102 = __OFADD__(v135, 1);
                  v136 = v134 - 3;
                  if (v102)
                    goto LABEL_168;
                }
                else
                {
                  v129 = *(_QWORD *)(v130 + 8 * v134);
                  result = swift_retain();
                  v102 = __OFADD__(v135, 1);
                  v136 = v134 - 3;
                  if (v102)
                    goto LABEL_168;
                }
                if ((sub_240154328() & 1) != 0)
                  break;
                swift_release();
                ++v134;
                if (v136 == v131)
                  goto LABEL_146;
              }
              v88 = v162;
              v133 = v173;
            }
            swift_bridgeObjectRelease_n();
            ((void (*)(char *, uint64_t))v133)(v147, v169);
            goto LABEL_149;
          }
        }
      }
LABEL_107:
      swift_bridgeObjectRelease_n();
      v92 = v168;
      v93 = v169;
      (*(void (**)(char *, uint64_t))(v168 + 8))(v170, v169);
      v88 = v162;
      v89 = (uint64_t)v156;
      goto LABEL_65;
    }
    sub_240070BD4(v89, &qword_256FB5DE8);
LABEL_65:
    v90 = (uint64_t)v163;
    v91 = (uint64_t)v157;
LABEL_66:
    ++v86;
    sub_2400800C8(v172, type metadata accessor for DKPersonGroup);
    result = v160;
    if (v86 == v166)
      return swift_bridgeObjectRelease();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v171, v91, v93);
  v97 = *v167;
  if (!(*v167 >> 62))
  {
    v98 = *(_QWORD *)((v97 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v98)
      goto LABEL_72;
LABEL_84:
    swift_bridgeObjectRelease_n();
    v92 = v168;
    v93 = v169;
    (*(void (**)(char *, uint64_t))(v168 + 8))(v171, v169);
    v88 = v162;
    v90 = (uint64_t)v163;
    v89 = (uint64_t)v156;
    goto LABEL_85;
  }
  swift_bridgeObjectRetain_n();
  v98 = sub_240154D30();
  if (!v98)
    goto LABEL_84;
LABEL_72:
  if ((v97 & 0xC000000000000001) != 0)
    MEMORY[0x24267D4E0](0, v97);
  else
    swift_retain();
  v99 = sub_240154328();
  v88 = v162;
  if ((v99 & 1) != 0)
  {
LABEL_109:
    swift_bridgeObjectRelease_n();
    v92 = v168;
    (*(void (**)(char *, uint64_t))(v168 + 8))(v171, v169);
    goto LABEL_92;
  }
  swift_release();
  if (v98 == 1)
    goto LABEL_84;
  v100 = 5;
  while (1)
  {
    v101 = v100 - 4;
    if ((v97 & 0xC000000000000001) == 0)
      break;
    result = MEMORY[0x24267D4E0](v100 - 4, v97);
    v102 = __OFADD__(v101, 1);
    v103 = v100 - 3;
    if (v102)
      goto LABEL_163;
LABEL_82:
    if ((sub_240154328() & 1) != 0)
    {
      v88 = v162;
      v89 = (uint64_t)v156;
      goto LABEL_109;
    }
    swift_release();
    ++v100;
    if (v103 == v98)
      goto LABEL_84;
  }
  result = swift_retain();
  v102 = __OFADD__(v101, 1);
  v103 = v100 - 3;
  if (!v102)
    goto LABEL_82;
LABEL_163:
  __break(1u);
LABEL_164:
  __break(1u);
LABEL_165:
  __break(1u);
LABEL_166:
  __break(1u);
LABEL_167:
  __break(1u);
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
  return result;
}

uint64_t sub_24009363C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  CGFloat v31;
  CGFloat v32;
  CGFloat v33;
  CGFloat v34;
  double v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  os_log_type_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  _QWORD *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73[9];
  CGRect v74;
  CGRect v75;

  v72 = a1;
  v6 = sub_24015434C();
  MEMORY[0x24BDAC7A8](v6);
  v62 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_240154310();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v61 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v11);
  v60 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v57 - v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_2400C74F4(*a2, *a3, 1.0);
  v20 = *(_QWORD *)(v19 + 16);
  if (!v20)
    return swift_bridgeObjectRelease();
  v69 = v3 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
  v70 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration;
  v71 = v3;
  v66 = v15;
  v67 = (_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers);
  v65 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId;
  v57 = v19;
  v21 = (uint64_t *)(v19 + 40);
  v68 = 0x8000000240162860;
  v22 = v72;
  v59 = v8;
  v58 = v9;
  while (1)
  {
    v25 = *(v21 - 1);
    v26 = *v21;
    if (v25)
    {
      if (v26)
      {
        if ((*(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw + 8) & 1) != 0)
        {
          v27 = *(_QWORD *)(v25 + qword_256FC4E20);
          *(_BYTE *)(v27 + 33) = 0;
          v28 = v27 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
          swift_retain();
          swift_retain();
          swift_retain();
          sub_240070BD4(v28, &qword_256FB4CC8);
          v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v29(v28, 1, 1, v8);
          swift_release();
        }
        else
        {
          v37 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
          v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v29((uint64_t)v18, 1, 1, v8);
          swift_retain();
          swift_retain();
          swift_retain();
          sub_240148324(0, 1, (uint64_t)v18, v37);
          swift_release();
          sub_240070BD4((uint64_t)v18, &qword_256FB4CC8);
        }
        if ((*(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch + 8) & 1) != 0)
        {
          v38 = *(_QWORD *)(v25 + qword_256FC4E28);
          *(_BYTE *)(v38 + 33) = 0;
          v39 = v38 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
          swift_retain();
          sub_240070BD4(v39, &qword_256FB4CC8);
          v29(v39, 1, 1, v8);
          swift_release();
        }
        else
        {
          v40 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
          v29((uint64_t)v18, 1, 1, v8);
          swift_retain();
          sub_240148324(0, 1, (uint64_t)v18, v40);
          swift_release();
          sub_240070BD4((uint64_t)v18, &qword_256FB4CC8);
        }
        if ((*(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll + 8) & 1) != 0)
        {
          v23 = *(_QWORD *)(v25 + qword_256FC4E30);
          *(_BYTE *)(v23 + 33) = 0;
          v24 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
          swift_retain();
          sub_240070BD4(v24, &qword_256FB4CC8);
          v29(v24, 1, 1, v8);
          swift_release();
        }
        else
        {
          v41 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
          v29((uint64_t)v18, 1, 1, v8);
          swift_retain();
          sub_240148324(0, 1, (uint64_t)v18, v41);
          swift_release();
          sub_240070BD4((uint64_t)v18, &qword_256FB4CC8);
        }
        v22 = v72;
        sub_240100E7C(v72, v26);
        swift_release();
        swift_release();
      }
      goto LABEL_5;
    }
    if (v26)
      break;
LABEL_5:
    v21 += 3;
    if (!--v20)
      return swift_bridgeObjectRelease();
  }
  if ((*(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance + 8) & 1) != 0)
  {
    v30 = (uint64_t)v66;
    sub_240080084(v69, (uint64_t)v66, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    v31 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    v32 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 8);
    v33 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
    v34 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 24);
    swift_retain_n();
    v74.origin.x = v31;
    v74.origin.y = v32;
    v74.size.width = v33;
    v74.size.height = v34;
    v35 = 10.0;
    if (CGRectGetWidth(v74) >= 1.0e-10)
    {
      v36 = *(double *)(v30 + 24) * 0.115;
      v75.origin.x = v31;
      v75.origin.y = v32;
      v75.size.width = v33;
      v75.size.height = v34;
      v35 = v36 / CGRectGetWidth(v75);
    }
    sub_2400800C8(v30, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  }
  else
  {
    v35 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
    swift_retain_n();
  }
  v42 = *(_QWORD *)(*(_QWORD *)(v71 + v70) + 16);
  if (v35 >= *(double *)(v42 + 144)
    || (*v67 >> 62
      ? (swift_bridgeObjectRetain(),
         v43 = sub_240154D30(),
         swift_bridgeObjectRelease(),
         v42 = *(_QWORD *)(*(_QWORD *)(v71 + v70) + 16))
      : (v43 = *(_QWORD *)((*v67 & 0xFFFFFFFFFFFFF8) + 0x10)),
        v43 >= *(_QWORD *)(v42 + 152)))
  {
    v73[0] = 1;
    v56 = sub_24015494C();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v73, 0xD00000000000003BLL, v68, v56);
    swift_release_n();
    goto LABEL_5;
  }
  v44 = (uint64_t)v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v61, v22, v8);
  swift_retain();
  v45 = (uint64_t)v62;
  sub_240154340();
  v46 = v22;
  v47 = v71;
  v64 = *(_QWORD *)(v71 + v65);
  if (*(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId + 8))
    v48 = -1;
  else
    v48 = *(_QWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
  v63 = v48;
  v49 = v60;
  sub_240080084(v69, v60, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  type metadata accessor for DKFaceTracker();
  swift_allocObject();
  result = DKFaceTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(v44, v42, v45, v64, v63, v49);
  v51 = *(_QWORD *)(v47 + v65);
  v52 = __OFADD__(v51, 1);
  v53 = v51 + 1;
  if (!v52)
  {
    *(_QWORD *)(v47 + v65) = v53;
    swift_retain();
    sub_24010226C(v46, v26);
    swift_release();
    v54 = swift_retain();
    v55 = v67;
    MEMORY[0x24267D0CC](v54);
    v22 = v46;
    if (*(_QWORD *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v55 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
    swift_release();
    swift_release_n();
    v8 = v59;
    v9 = v58;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_240093E20(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  os_log_type_t v25;
  uint64_t v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t, uint64_t);
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t result;
  uint64_t v47;
  BOOL v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  double *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  _QWORD *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char v74[9];
  CGRect v75;
  CGRect v76;

  v6 = sub_24015434C();
  v60 = *(_QWORD *)(v6 - 8);
  v61 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v59 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v69 = (char *)&v52 - v9;
  v10 = sub_240154310();
  v67 = *(_QWORD *)(v10 - 8);
  v68 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v58 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v66 = (char *)&v52 - v13;
  v14 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v14);
  v57 = (uint64_t)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v56 = (uint64_t)&v52 - v17;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (double *)((char *)&v52 - v19);
  v21 = sub_2400C7520(*a2, *a3, 1.0);
  v22 = *(_QWORD *)(v21 + 16);
  if (!v22)
    return swift_bridgeObjectRelease();
  v72 = v73 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
  v23 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration;
  v70 = (_QWORD *)(v73 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers);
  v65 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId;
  v52 = v21;
  v24 = (uint64_t *)(v21 + 40);
  v71 = 0x8000000240162820;
  v55 = v20;
  v54 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration;
  v53 = a1;
  while (1)
  {
    v26 = *v24;
    if (*(v24 - 1))
    {
      if (v26)
      {
        swift_retain();
        swift_retain();
        sub_2401012F8(a1, v26);
        swift_release();
        swift_release();
      }
      goto LABEL_4;
    }
    if (v26)
      break;
LABEL_4:
    v24 += 3;
    if (!--v22)
      return swift_bridgeObjectRelease();
  }
  if ((*(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance + 8) & 1) != 0)
  {
    sub_240080084(v72, (uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    v27 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
    v28 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 8);
    v29 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
    v30 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 24);
    swift_retain_n();
    v75.origin.x = v27;
    v75.origin.y = v28;
    v75.size.width = v29;
    v75.size.height = v30;
    v31 = 10.0;
    if (CGRectGetWidth(v75) >= 1.0e-10)
    {
      v32 = v20[3] * 0.35;
      v76.origin.x = v27;
      v76.origin.y = v28;
      v76.size.width = v29;
      v76.size.height = v30;
      v31 = v32 / CGRectGetWidth(v76);
    }
    sub_2400800C8((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  }
  else
  {
    v31 = *(double *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
    swift_retain_n();
  }
  v33 = *(_QWORD *)(*(_QWORD *)(v73 + v23) + 24);
  if (v31 >= *(double *)(v33 + 144)
    || (*v70 >> 62
      ? (swift_bridgeObjectRetain(),
         v34 = sub_240154D30(),
         swift_bridgeObjectRelease(),
         v33 = *(_QWORD *)(*(_QWORD *)(v73 + v23) + 24))
      : (v34 = *(_QWORD *)((*v70 & 0xFFFFFFFFFFFFF8) + 0x10)),
        v34 >= *(_QWORD *)(v33 + 152)))
  {
    v74[0] = 1;
    v25 = sub_24015494C();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v74, 0xD00000000000003BLL, v71, v25);
    swift_release_n();
    goto LABEL_4;
  }
  v35 = v66;
  v36 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
  v37 = v68;
  v36(v66, a1, v68);
  swift_retain();
  v38 = v69;
  sub_240154340();
  v64 = *(_QWORD *)(v73 + v65);
  if (*(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId + 8))
    v39 = -1;
  else
    v39 = *(_QWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
  v63 = v39;
  v40 = v56;
  sub_240080084(v72, v56, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  type metadata accessor for DKBodyTracker();
  v62 = swift_allocObject();
  v41 = v58;
  v36(v58, (uint64_t)v35, v37);
  v42 = v60;
  v43 = v61;
  v44 = v59;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v59, v38, v61);
  v45 = v57;
  sub_240080084(v40, v57, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_24014EA48(v41, v33, v44, v64, v63, v45);
  sub_2400800C8(v40, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v69, v43);
  result = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v66, v68);
  v47 = *(_QWORD *)(v73 + v65);
  v48 = __OFADD__(v47, 1);
  v49 = v47 + 1;
  if (!v48)
  {
    *(_QWORD *)(v73 + v65) = v49;
    swift_retain();
    a1 = v53;
    sub_2401012F8(v53, v26);
    swift_release();
    v50 = swift_retain();
    v51 = v70;
    MEMORY[0x24267D0CC](v50);
    if (*(_QWORD *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
    swift_release();
    swift_release_n();
    v20 = v55;
    v23 = v54;
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_240094434(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t inited;
  unint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  char *v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;

  v4 = v3;
  v8 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v8);
  v57 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v67 = (uint64_t)&v48 - v11;
  v56 = sub_24015434C();
  v66 = *(_QWORD *)(v56 - 8);
  MEMORY[0x24BDAC7A8](v56);
  v55 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v65 = (char *)&v48 - v14;
  v64 = sub_240154310();
  v63 = *(_QWORD *)(v64 - 8);
  MEMORY[0x24BDAC7A8](v64);
  v54 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v16);
  v62 = (char *)&v48 - v17;
  v18 = sub_2400C754C(*a2, *a3, 1.0);
  v19 = *(_QWORD *)(v18 + 16);
  if (!v19)
    return swift_bridgeObjectRelease();
  v52 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_configuration;
  v51 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera;
  v50 = (_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers);
  v48 = v18;
  v20 = (uint64_t *)(v18 + 40);
  v68 = xmmword_240156510;
  v53 = v4;
  v61 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId;
  v49 = a1;
  while (1)
  {
    v21 = *v20;
    if (*(v20 - 1))
    {
      if (v21)
      {
        swift_retain_n();
        swift_retain_n();
        sub_240101774(a1, v21);
        __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65F8);
        inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = v68;
        *(_BYTE *)(inited + 32) = *(_BYTE *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
        *(_QWORD *)(inited + 40) = 0x3FF0000000000000;
        v23 = sub_2401076D0(inited);
        swift_setDeallocating();
        swift_retain();
        swift_retain();
        sub_24010CA3C(v23, 1, 0);
        swift_release_n();
        swift_release_n();
        swift_release();
        swift_bridgeObjectRelease();
      }
      goto LABEL_4;
    }
    if (v21)
      break;
LABEL_4:
    v20 += 3;
    if (!--v19)
      return swift_bridgeObjectRelease();
  }
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v63 + 16);
  v25 = v62;
  v26 = a1;
  v27 = v64;
  v24(v62, v26, v64);
  v28 = *(_QWORD *)(*(_QWORD *)(v4 + v52) + 32);
  swift_retain_n();
  v58 = v28;
  swift_retain();
  sub_240154340();
  v60 = *(_QWORD *)(v4 + v61);
  if (*(_BYTE *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId + 8))
    v29 = -1;
  else
    v29 = *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
  v59 = v29;
  sub_240080084(v51, v67, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  type metadata accessor for DKHandTracker();
  v30 = swift_allocObject();
  v31 = *(double *)(v28 + 176);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65F0);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v30 + qword_256FC4E58) = sub_2400B8394((uint64_t)&unk_251062108, v31, v31);
  swift_release();
  v32 = v54;
  v24(v54, (uint64_t)v25, v27);
  v33 = v65;
  v34 = v55;
  v35 = v56;
  (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v55, v65, v56);
  v36 = v67;
  v37 = v57;
  sub_240080084(v67, v57, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v38 = v37;
  v39 = v61;
  v4 = v53;
  sub_24014EA48(v32, v58, v34, v60, v59, v38);
  sub_2400800C8(v36, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v33, v35);
  result = (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v62, v64);
  v41 = *(_QWORD *)(v4 + v39);
  v42 = __OFADD__(v41, 1);
  v43 = v41 + 1;
  if (!v42)
  {
    *(_QWORD *)(v4 + v39) = v43;
    swift_retain();
    a1 = v49;
    sub_240101774(v49, v21);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65F8);
    v44 = swift_initStackObject();
    *(_OWORD *)(v44 + 16) = v68;
    *(_BYTE *)(v44 + 32) = *(_BYTE *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
    *(_QWORD *)(v44 + 40) = 0x3FF0000000000000;
    v45 = sub_2401076D0(v44);
    swift_setDeallocating();
    swift_retain();
    swift_retain();
    sub_24010CA3C(v45, 1, 0);
    swift_release_n();
    swift_release();
    swift_bridgeObjectRelease();
    v46 = swift_retain();
    v47 = v50;
    MEMORY[0x24267D0CC](v46);
    if (*(_QWORD *)((*v47 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((*v47 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_2401547D8();
    sub_240154814();
    sub_2401547B4();
    swift_release();
    swift_release_n();
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_240094A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t i;
  uint64_t v23;
  uint64_t j;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v1 = sub_24015434C();
  v33 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_2400960A4(v4);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers);
  if (v6 >> 62)
    goto LABEL_38;
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v7; v7 = sub_240154D30())
  {
    v8 = 0;
    v30 = v7;
    v31 = v6 & 0xC000000000000001;
    v28 = v6 & 0xFFFFFFFFFFFFFF8;
    v29 = v6;
    v27[1] = v6 + 32;
    v34 = v5 + 56;
    v35 = v5;
    while (v31)
    {
      v9 = MEMORY[0x24267D4E0](v8, v29);
      v10 = __OFADD__(v8++, 1);
      if (v10)
        goto LABEL_35;
LABEL_11:
      v11 = *(_QWORD *)(v5 + 16);
      v32 = v9;
      if (v11
        && (sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
            v12 = sub_2401545BC(),
            v13 = -1 << *(_BYTE *)(v5 + 32),
            v14 = v12 & ~v13,
            ((*(_QWORD *)(v34 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0))
      {
        v15 = ~v13;
        v16 = *(_QWORD *)(v33 + 72);
        v5 = *(_QWORD *)(v33 + 16);
        do
        {
          ((void (*)(char *, unint64_t, uint64_t))v5)(v3, *(_QWORD *)(v35 + 48) + v16 * v14, v1);
          sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
          v17 = sub_240154610();
          (*(void (**)(char *, uint64_t))(v33 + 8))(v3, v1);
          if ((v17 & 1) != 0)
            break;
          v14 = (v14 + 1) & v15;
        }
        while (((*(_QWORD *)(v34 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      }
      else
      {
        v17 = 0;
      }
      v6 = v32;
      v18 = *(_QWORD *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_faceTracker);
      if (v18)
        *(_BYTE *)(v18 + *(_QWORD *)(*(_QWORD *)v18 + 240)) = v17 & 1;
      v19 = *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_bodyTracker);
      if (v19)
        *(_BYTE *)(v19 + *(_QWORD *)(*(_QWORD *)v19 + 240)) = v17 & 1;
      v20 = *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_handTrackers);
      if (v20 >> 62)
      {
        swift_bridgeObjectRetain();
        v21 = sub_240154D30();
        if (!v21)
          goto LABEL_4;
      }
      else
      {
        v21 = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v21)
          goto LABEL_4;
      }
      if (v21 < 1)
        goto LABEL_36;
      if ((v20 & 0xC000000000000001) != 0)
      {
        for (i = 0; i != v21; ++i)
        {
          v23 = MEMORY[0x24267D4E0](i, v20);
          *(_BYTE *)(v23 + *(_QWORD *)(*(_QWORD *)v23 + 240)) = v17 & 1;
          swift_unknownObjectRelease();
        }
      }
      else
      {
        for (j = 0; j != v21; ++j)
        {
          v25 = *(_QWORD *)(v20 + 8 * j + 32);
          *(_BYTE *)(v25 + *(_QWORD *)(*(_QWORD *)v25 + 240)) = v17 & 1;
        }
      }
LABEL_4:
      swift_release();
      swift_bridgeObjectRelease();
      v5 = v35;
      if (v8 == v30)
        goto LABEL_39;
    }
    if (v8 >= *(_QWORD *)(v28 + 16))
      goto LABEL_37;
    v9 = swift_retain();
    v10 = __OFADD__(v8++, 1);
    if (!v10)
      goto LABEL_11;
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    swift_bridgeObjectRetain();
  }
LABEL_39:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_240094E7C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_faceTrackers) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_bodyTrackers) = v1;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers) = v1;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_personTrackers) = v1;
  swift_bridgeObjectRelease();
  v2 = *(_QWORD **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_groupFilter);
  swift_retain();
  swift_bridgeObjectRelease();
  v3 = MEMORY[0x24BEE4B00];
  v2[6] = MEMORY[0x24BEE4B00];
  swift_bridgeObjectRelease();
  v2[3] = v3;
  swift_bridgeObjectRelease();
  v2[4] = v3;
  v4 = MEMORY[0x24BEE4B08];
  v2[7] = v1;
  v2[8] = v4;
  v2[9] = v4;
  v2[10] = v4;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastPersonId) = 0;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_lastTrackerId) = 0;
  return result;
}

uint64_t DKMultiSubjectTracker.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2400800C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKMultiSubjectTracker.__deallocating_deinit()
{
  DKMultiSubjectTracker.deinit();
  return swift_deallocClassInstance();
}

uint64_t (*sub_240095080())()
{
  return nullsub_1;
}

uint64_t sub_240095098(uint64_t a1)
{
  return sub_24009539C(a1, (uint64_t (*)(void))sub_240077844, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_2400950AC(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_240078044(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F58);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_240095220(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_240077EEC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4F88);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_240095388(uint64_t a1)
{
  return sub_24009539C(a1, (uint64_t (*)(void))sub_240078030, type metadata accessor for DKDataLogStamped);
}

uint64_t sub_24009539C(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_240095514(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_240078D08(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[v8 + 4];
  if (a1 + 32 < v9 + 8 * v2 && v9 < a1 + 32 + 8 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_240095664()
{
  return sub_240154328() & 1;
}

uint64_t sub_2400956A4()
{
  return sub_240154328() & 1;
}

BOOL sub_2400956E4()
{
  uint64_t v0;

  return (sub_2401372D8(*(_QWORD *)(v0 + 16)) & 1) == 0;
}

uint64_t sub_24009571C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_2401025FC(*(_QWORD *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_24009575C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_24014EEF4(*(_QWORD *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_24009579C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_24010D73C(*(void (**)(char *, char *, uint64_t))(v1 + 16));
  *a1 = result;
  return result;
}

BOOL sub_2400957DC()
{
  return (sub_240138D40() & 1) == 0;
}

uint64_t sub_240095814@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_240138FEC(*(_QWORD *)(v1 + 16));
  *a1 = result;
  return result;
}

uint64_t sub_240095854(uint64_t a1)
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_240154CF4();
    __break(1u);
  }
  else if (a1)
  {
    result = sub_2401547FC();
    *(_QWORD *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

uint64_t sub_2400958EC(uint64_t a1)
{
  return sub_240095904(a1, (void (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t sub_2400958F8(uint64_t a1)
{
  return sub_240095904(a1, (void (*)(_QWORD))type metadata accessor for DKPersonGroupFilter.StampedPerson);
}

uint64_t sub_240095904(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v4;
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_240154CF4();
    __break(1u);
  }
  else
  {
    if (a1)
    {
      a2(0);
      v4 = sub_2401547FC();
      *(_QWORD *)(v4 + 16) = a1;
    }
    else
    {
      v4 = MEMORY[0x24BEE4AF8];
    }
    a2(0);
    return v4;
  }
  return result;
}

uint64_t sub_2400959CC(uint64_t a1)
{
  return sub_2400959F0(a1, (void (*)(_QWORD))type metadata accessor for DKHandObservation);
}

uint64_t sub_2400959D8(uint64_t a1)
{
  return sub_2400959F0(a1, (void (*)(_QWORD))type metadata accessor for DKBodyObservation);
}

uint64_t sub_2400959E4(uint64_t a1)
{
  return sub_2400959F0(a1, (void (*)(_QWORD))type metadata accessor for DKFaceObservation);
}

uint64_t sub_2400959F0(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t result;

  if (a1 < 0)
  {
    result = sub_240154CF4();
    __break(1u);
  }
  else if (a1)
  {
    a2(0);
    result = sub_2401547FC();
    *(_QWORD *)((result & 0xFFFFFFFFFFFFF8) + 0x10) = a1;
  }
  else
  {
    return MEMORY[0x24BEE4AF8];
  }
  return result;
}

void (*sub_240095A94(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_240095B6C(v6, a2, a3);
  return sub_240095AE8;
}

void (*sub_240095AEC(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(_QWORD *)
{
  uint64_t (*v6)();

  v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((_QWORD *)v6 + 4) = sub_240095BD8(v6, a2, a3);
  return sub_240095AE8;
}

void sub_240095B40(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_240095B6C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x24267D4E0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_240096A28;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_240095BD8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t *v3;
  uint64_t v4;

  v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    v4 = MEMORY[0x24267D4E0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    v4 = swift_retain();
LABEL_5:
    *v3 = v4;
    return sub_240095C44;
  }
  __break(1u);
  return result;
}

uint64_t sub_240095C44()
{
  return swift_release();
}

uint64_t sub_240095C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  void (*v23)(char *, char *, uint64_t);
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  BOOL v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD, _QWORD);
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;

  v40 = a2;
  v3 = sub_24015434C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v50 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v36 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v49 = (uint64_t)&v36 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v36 - v15;
  v51 = MEMORY[0x24BEE4AF8];
  v46 = *(_QWORD *)(a1 + 16);
  v36 = a1;
  if (v46)
  {
    v45 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v39 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKMultiSubjectTracker_handTrackers;
    v44 = *(_QWORD *)(v4 + 72);
    v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v4 + 16);
    swift_bridgeObjectRetain();
    v18 = 0;
    v42 = v16;
    v43 = v4;
    v37 = v11;
    v38 = v8;
    v41 = v17;
    while (1)
    {
      v20 = (uint64_t)v11;
      v17(v16, v45 + v44 * v18, v3);
      v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v21(v16, 0, 1, v3);
      v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
      if (v22(v16, 1, v3) == 1)
        goto LABEL_26;
      v47 = v18;
      v23 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
      v23(v8, v16, v3);
      v24 = v21;
      v25 = v49;
      v17(v49, v8, v3);
      v48 = v24;
      v24((char *)v25, 0, 1, v3);
      v26 = v25;
      v11 = (char *)v20;
      sub_240070B90(v26, v20, &qword_256FB5DE8);
      if (v22((char *)v20, 1, v3) == 1)
      {
        sub_240070BD4(v20, &qword_256FB5DE8);
        v16 = v42;
        v4 = v43;
      }
      else
      {
        v23(v50, (char *)v20, v3);
        v27 = *(_QWORD *)(v40 + v39);
        if (v27 >> 62)
        {
          swift_bridgeObjectRetain_n();
          v28 = sub_240154D30();
        }
        else
        {
          v28 = *(_QWORD *)((v27 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain_n();
        }
        if (v28)
        {
          v29 = 4;
          while (1)
          {
            v30 = v29 - 4;
            if ((v27 & 0xC000000000000001) != 0)
            {
              result = MEMORY[0x24267D4E0](v29 - 4, v27);
              v32 = __OFADD__(v30, 1);
              v33 = v29 - 3;
              if (v32)
                goto LABEL_27;
            }
            else
            {
              result = swift_retain();
              v32 = __OFADD__(v30, 1);
              v33 = v29 - 3;
              if (v32)
              {
LABEL_27:
                __break(1u);
                return result;
              }
            }
            if ((sub_240154328() & 1) != 0)
              break;
            swift_release();
            ++v29;
            if (v33 == v28)
              goto LABEL_19;
          }
          swift_bridgeObjectRelease_n();
          v4 = v43;
          v34 = *(void (**)(char *, uint64_t))(v43 + 8);
          v34(v50, v3);
          sub_240070BD4(v49, &qword_256FB5DE8);
          v8 = v38;
          v35 = ((uint64_t (*)(char *, uint64_t))v34)(v38, v3);
          MEMORY[0x24267D0CC](v35);
          v16 = v42;
          if (*(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
            sub_2401547D8();
          sub_240154814();
          sub_2401547B4();
          v11 = v37;
          goto LABEL_5;
        }
LABEL_19:
        swift_bridgeObjectRelease_n();
        v4 = v43;
        (*(void (**)(char *, uint64_t))(v43 + 8))(v50, v3);
        v11 = v37;
        v8 = v38;
        v16 = v42;
      }
      sub_240070BD4(v49, &qword_256FB5DE8);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v8, v3);
LABEL_5:
      v17 = v41;
      v19 = v48;
      v18 = v47 + 1;
      if (v47 + 1 == v46)
        goto LABEL_25;
    }
  }
  v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  swift_bridgeObjectRetain();
LABEL_25:
  v19(v16, 1, 1, v3);
LABEL_26:
  swift_bridgeObjectRelease();
  return v51;
}

uint64_t sub_2400960A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_24015434C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_2400707A8(&qword_256FB5A60, v3, MEMORY[0x24BDCEA88]);
  v19 = sub_2401548D4();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v12, v2);
      sub_2400848A4((uint64_t)v9, v6);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_240096274@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  return swift_retain();
}

uint64_t sub_240096284(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2400962B4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  return swift_retain();
}

uint64_t sub_2400962C4(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 24) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2400962F4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  return swift_retain();
}

uint64_t sub_240096304(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 32) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_240096334@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  return swift_retain();
}

uint64_t sub_240096344(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 40) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_240096374@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 48);
  return swift_retain();
}

uint64_t sub_240096384(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 48) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t type metadata accessor for DKMultiSubjectTrackerConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKMultiSubjectTrackerConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.faceTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.faceTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.faceTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.bodyTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.bodyTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.bodyTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.handTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.handTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.handTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.personTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.personTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.personTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.groupFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.groupFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.groupFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKMultiSubjectTrackerConfiguration.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_24009649C()
{
  return type metadata accessor for DKMultiSubjectTracker();
}

uint64_t type metadata accessor for DKMultiSubjectTracker()
{
  uint64_t result;

  result = qword_256FB6390;
  if (!qword_256FB6390)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2400964E0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for DKCamera();
  if (v1 <= 0x3F)
  {
    result = sub_2401544C0();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKMultiSubjectTracker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.__allocating_init(configuration:camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getFaceTracker(uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getBodyTracker(uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getHandTracker(uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getPersonTracker(uuid:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getFaceTrackerStates(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getBodyTrackerStates(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getHandTrackerStates(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.getPersonTrackerStates(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.update(camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.update(currentTime:observations:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.setSelectedTracks(uuids:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKMultiSubjectTracker.reset()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t sub_24009663C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240096684(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v7;
  __n128 v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, unint64_t, uint64_t);
  char v21;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = v3;
  v7 = sub_24015434C();
  v31 = *(_QWORD *)(v7 - 8);
  v8.n128_f64[0] = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x24BEE4AF8];
  v24 = a1;
  if (a1 >> 62)
  {
LABEL_22:
    v11 = sub_240154D30();
    if (v11)
      goto LABEL_3;
  }
  else
  {
    v11 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v11)
    {
LABEL_3:
      v23 = v4;
      v4 = 0;
      v29 = v24 & 0xFFFFFFFFFFFFFF8;
      v30 = v24 & 0xC000000000000001;
      v28 = v24 + 32;
      v32 = a3 + 56;
      v25 = v11;
      while (1)
      {
        if (v30)
        {
          v12 = MEMORY[0x24267D4E0](v4, v24, v8);
          v13 = __OFADD__(v4++, 1);
          if (v13)
          {
LABEL_19:
            __break(1u);
            return v33;
          }
        }
        else
        {
          if (v4 >= *(_QWORD *)(v29 + 16))
          {
            __break(1u);
            goto LABEL_22;
          }
          v12 = *(_QWORD *)(v28 + 8 * v4);
          swift_retain();
          v13 = __OFADD__(v4++, 1);
          if (v13)
            goto LABEL_19;
        }
        if (*(_QWORD *)(a3 + 16)
          && (sub_2400707A8(&qword_256FB5A60, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]),
              v14 = sub_2401545BC(),
              v15 = -1 << *(_BYTE *)(a3 + 32),
              v16 = v14 & ~v15,
              ((*(_QWORD *)(v32 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) != 0))
        {
          v26 = v12;
          v27 = v4;
          v17 = a3;
          v18 = ~v15;
          v19 = *(_QWORD *)(v31 + 72);
          v20 = *(void (**)(char *, unint64_t, uint64_t))(v31 + 16);
          while (1)
          {
            v20(v10, *(_QWORD *)(v17 + 48) + v19 * v16, v7);
            sub_2400707A8((unint64_t *)&qword_256FB5A68, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
            v21 = sub_240154610();
            (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v7);
            if ((v21 & 1) != 0)
              break;
            v16 = (v16 + 1) & v18;
            if (((*(_QWORD *)(v32 + ((v16 >> 3) & 0xFFFFFFFFFFFFF8)) >> v16) & 1) == 0)
            {
              swift_release();
              goto LABEL_16;
            }
          }
          sub_240154BE0();
          sub_240154C10();
          sub_240154C1C();
          sub_240154BEC();
LABEL_16:
          a3 = v17;
          v11 = v25;
          v4 = v27;
        }
        else
        {
          swift_release();
        }
        if (v4 == v11)
          return v33;
      }
    }
  }
  return MEMORY[0x24BEE4AF8];
}

uint64_t sub_240096944(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  result = sub_2401548D4();
  v7 = result;
  if (v2)
  {
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      sub_240084408(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_2400969B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKPersonGroupFilter.Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_2400969F8()
{
  return sub_2400956E4();
}

uint64_t sub_240096A10()
{
  return sub_240095664() & 1;
}

id DKRateControl.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id DKRateControl.init()()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  objc_super v8;

  v1 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps] = 0x4024000000000000;
  v2 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps] = 0x403E000000000000;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps] = 0x4024000000000000;
  v3 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed] = 0;
  v4 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed] = 0;
  v5 = &v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastTriggerSecs];
  *(_QWORD *)v5 = 0;
  v5[8] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalTimeElapsed] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalFramesElapsed] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs] = 0;
  v6 = v0;
  sub_2401544B4();
  *(double *)&v0[v3] = 1.0 / *(double *)&v0[v2];
  *(double *)&v0[v4] = 1.0 / *(double *)&v0[v1];

  v8.receiver = v6;
  v8.super_class = (Class)type metadata accessor for DKRateControl();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for DKRateControl()
{
  uint64_t result;

  result = qword_256FB6688;
  if (!qword_256FB6688)
    return swift_getSingletonMetadata();
  return result;
}

id DKRateControl.__allocating_init(minFps:maxFps:)(double a1, double a2)
{
  objc_class *v2;
  id v5;

  v5 = objc_allocWithZone(v2);
  return DKRateControl.init(minFps:maxFps:)(a1, a2);
}

id DKRateControl.init(minFps:maxFps:)(double a1, double a2)
{
  char *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  objc_super v12;

  v5 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps] = 0x4024000000000000;
  v6 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps] = 0x403E000000000000;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps] = 0x4024000000000000;
  v7 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed] = 0;
  v8 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed] = 0;
  v9 = &v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastTriggerSecs];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalTimeElapsed] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalFramesElapsed] = 0;
  *(_QWORD *)&v2[OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs] = 0;
  v10 = v2;
  sub_2401544B4();
  *(double *)&v2[v5] = a1;
  *(double *)&v2[v6] = a2;
  *(double *)&v2[v7] = 1.0 / a2;
  *(double *)&v2[v8] = 1.0 / a1;

  v12.receiver = v10;
  v12.super_class = (Class)type metadata accessor for DKRateControl();
  return objc_msgSendSuper2(&v12, sel_init);
}

uint64_t sub_240096D80(double a1)
{
  uint64_t v1;
  uint64_t v3;

  if (*(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps) == 0.0)
    return 0;
  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastTriggerSecs;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastTriggerSecs + 8) & 1) == 0
    && *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed) > a1 - *(double *)v3)
  {
    return 0;
  }
  *(double *)v3 = a1;
  *(_BYTE *)(v3 + 8) = 0;
  return 1;
}

uint64_t sub_240096DE4(double a1)
{
  uint64_t v1;
  double v2;
  uint64_t result;
  double v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps);
  if (v2 == 0.0)
    return 0;
  v4 = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalTimeElapsed) + a1;
  *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalTimeElapsed) = v4;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalFramesElapsed);
  if ((double)v5 / v4 > v2)
    return 0;
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_totalFramesElapsed) = v7;
    return 1;
  }
  return result;
}

double sub_240096E50(char a1, double a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  double v18[2];

  v5 = sub_2401544C0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs);
  if (v9 == 0.0)
    v10 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minSecsElapsed);
  else
    v10 = a2 - v9;
  *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastSecs) = a2;
  v11 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps);
  v12 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps);
  if (v11 > 1.0 / v10)
    v13 = *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_minFps);
  else
    v13 = 1.0 / v10;
  if (v12 >= v13)
    v12 = v13;
  *(double *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps) = v12;
  if ((a1 & 1) != 0 && 1.0 / v10 < v11)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_logger, v5);
    v14 = sub_2401544A8();
    v15 = sub_240154964();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v16 = 134217984;
      v18[1] = 1.0 / v10;
      sub_240154A6C();
      _os_log_impl(&dword_24006B000, v14, v15, "Running at %f FPS. Lower than minimum required FPS", v16, 0xCu);
      MEMORY[0x24267E17C](v16, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v10;
}

double sub_240097008()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_lastFps);
}

double sub_240097018()
{
  uint64_t v0;

  return *(double *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxFps);
}

BOOL sub_240097028(double a1)
{
  uint64_t v1;

  return *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed)
       + *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKRateControl_maxSecsElapsed) < a1;
}

id DKRateControl.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DKRateControl();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2400970B4()
{
  return type metadata accessor for DKRateControl();
}

uint64_t sub_2400970BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2401544C0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKRateControl()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKRateControl.__allocating_init(minFps:maxFps:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 400))();
}

uint64_t dispatch thunk of DKRateControl.shouldTriggerConst(seconds:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x198))();
}

uint64_t dispatch thunk of DKRateControl.shouldTriggerVariable(secondsDelta:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A0))();
}

uint64_t dispatch thunk of DKRateControl.getTimeElapsed(seconds:checkFPS:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1A8))();
}

uint64_t dispatch thunk of DKRateControl.getCurrentFPS()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B0))();
}

uint64_t dispatch thunk of DKRateControl.getMaxFPS()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1B8))();
}

uint64_t dispatch thunk of DKRateControl.isTimedOut(secondsDelta:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x1C0))();
}

IntelligentTrackingCore::DKIntelligentTrackingCommand::VelocityCommand __swiftcall DKIntelligentTrackingCommand.VelocityCommand.init(velocity:)(IntelligentTrackingCore::DKIntelligentTrackingCommand::VelocityCommand velocity)
{
  _QWORD *v1;

  *v1 = *(_QWORD *)velocity.velocity.elements._rawValue;
  return velocity;
}

uint64_t DKIntelligentTrackingCommand.__allocating_init(time:command:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = swift_allocObject();
  v5 = *a2;
  v6 = a2[1];
  v7 = *((_WORD *)a2 + 8);
  v8 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
  v9 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a1, v9);
  v10 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  *(_QWORD *)v10 = v5;
  *(_QWORD *)(v10 + 8) = v6;
  *(_WORD *)(v10 + 16) = v7;
  return v4;
}

uint64_t DKIntelligentTrackingState.__allocating_init(time:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKIntelligentTrackingState.init(time:)(a1);
  return v2;
}

uint64_t sub_2400972E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time, a1, v4);
  sub_240094E7C();
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_presenceFilter);
  *(_BYTE *)(v8 + 49) = 0;
  v9 = *(_QWORD *)(v8 + 16);
  *(_BYTE *)(v9 + 33) = 0;
  v10 = v9 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  swift_retain();
  swift_retain();
  sub_240070BD4(v10, &qword_256FB4CC8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
  v11(v10, 1, 1, v4);
  swift_release();
  swift_release();
  v12 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_unselectedTracks;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v12) = MEMORY[0x24BEE4B00];
  v13 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_selectedSubject;
  sub_240070BD4(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_selectedSubject, &qword_256FB5DE8);
  v14 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition) = 0;
  swift_bridgeObjectRelease();
  v15 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime;
  sub_240070BD4(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime, &qword_256FB4CC8);
  v11(v15, 1, 1, v4);
  v16 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime;
  sub_240070BD4(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, &qword_256FB4CC8);
  v11(v16, 1, 1, v4);
  v17 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime;
  sub_240070BD4(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime, &qword_256FB4CC8);
  v11(v17, 1, 1, v4);
  v18 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime;
  sub_240070BD4(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, &qword_256FB4CC8);
  v11(v18, 1, 1, v4);
  sub_240154274();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime, v7, v4);
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastHorizontalFraming) = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects) = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRelease();
  *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_currentPipelineMode) = *(_BYTE *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_config) + 89);
  v19 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v19) = MEMORY[0x24BEE4B08];
  return result;
}

uint64_t sub_2400975A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_selectedSubject, &qword_256FB5DE8);
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime, &qword_256FB4CC8);
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, &qword_256FB4CC8);
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime, &qword_256FB4CC8);
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, &qword_256FB4CC8);
  swift_release();
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_startTime, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_240097790()
{
  return sub_240099080((void (*)(void))sub_2400975A4);
}

uint64_t sub_24009779C@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, a1);
}

uint64_t sub_2400977A8(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time);
}

uint64_t (*sub_2400977B4())()
{
  return nullsub_1;
}

uint64_t sub_2400977CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240070B90(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, a1, &qword_256FB4CC8);
}

uint64_t sub_2400977F8(uint64_t a1)
{
  uint64_t v1;

  return sub_24009C218(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, &qword_256FB4CC8);
}

uint64_t (*sub_240097820())()
{
  return nullsub_1;
}

uint64_t sub_240097838(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240070B90(a1, (uint64_t)v12, a5);
  return sub_24009C218((uint64_t)v12, *a2 + *a6, a5);
}

uint64_t sub_2400978D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240070B90(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, a1, &qword_256FB4430);
}

uint64_t sub_2400978FC(uint64_t a1)
{
  uint64_t v1;

  return sub_24009C218(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, &qword_256FB4430);
}

uint64_t (*sub_240097924())()
{
  return nullsub_1;
}

void *sub_24009793C()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  v2 = v1;
  return v1;
}

void sub_240097968(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = a1;

}

uint64_t (*sub_24009797C())()
{
  return nullsub_1;
}

uint64_t sub_240097994()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400979A4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400979BC())()
{
  return nullsub_1;
}

uint64_t sub_2400979D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400979E4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400979FC())()
{
  return nullsub_1;
}

uint64_t sub_240097A14()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_240097A24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240097A3C())()
{
  return nullsub_1;
}

uint64_t sub_240097A54()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_240097A64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240097A7C())()
{
  return nullsub_1;
}

uint64_t sub_240097A94()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_240097AA4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240097ABC())()
{
  return nullsub_1;
}

uint64_t sub_240097AD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_240097AE4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240097AFC())()
{
  return nullsub_1;
}

uint64_t sub_240097B14()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_240097B24(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240097B3C())()
{
  return nullsub_1;
}

uint64_t sub_240097B54()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_240097B64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240097B7C())()
{
  return nullsub_1;
}

uint64_t sub_240097B94()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_240097BA4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240097BBC())()
{
  return nullsub_1;
}

__n128 sub_240097BD4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_240097BF4(uint64_t a1)
{
  uint64_t v1;

  return sub_24008BADC(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D);
}

uint64_t (*sub_240097C04())()
{
  return nullsub_1;
}

__n128 sub_240097C1C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_240097C3C(uint64_t a1)
{
  uint64_t v1;

  return sub_24008BADC(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
}

uint64_t (*sub_240097C4C())()
{
  return nullsub_1;
}

uint64_t sub_240097C64()
{
  return swift_retain();
}

uint64_t sub_240097C74(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = a1;
  return swift_release();
}

uint64_t (*sub_240097C8C())()
{
  return nullsub_1;
}

uint64_t sub_240097CA4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition);
  return swift_bridgeObjectRetain();
}

uint64_t sub_240097CB8(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240097CD0())()
{
  return nullsub_1;
}

void sub_240097CE8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode);
}

_BYTE *sub_240097CFC(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = *result;
  return result;
}

uint64_t (*sub_240097D10())()
{
  return nullsub_1;
}

void sub_240097D28(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode);
}

_BYTE *sub_240097D3C(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = *result;
  return result;
}

uint64_t (*sub_240097D50())()
{
  return nullsub_1;
}

void sub_240097D68(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming);
}

_BYTE *sub_240097D7C(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = *result;
  return result;
}

uint64_t (*sub_240097D90())()
{
  return nullsub_1;
}

void sub_240097DA8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
}

_BYTE *sub_240097DBC(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = *result;
  return result;
}

uint64_t (*sub_240097DD0())()
{
  return nullsub_1;
}

uint64_t sub_240097DE8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_240097E20(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_240097E3C())()
{
  return nullsub_1;
}

uint64_t sub_240097E54()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime);
}

uint64_t sub_240097E6C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_240097E88())()
{
  return nullsub_1;
}

uint64_t sub_240097EA0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS);
}

uint64_t sub_240097EB8(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_240097ED4())()
{
  return nullsub_1;
}

uint64_t sub_240097EEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS);
}

uint64_t sub_240097F04(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_240097F20())()
{
  return nullsub_1;
}

uint64_t sub_240097F38()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS);
}

uint64_t sub_240097F50(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_240097F6C())()
{
  return nullsub_1;
}

void sub_240097F84(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode);
}

_BYTE *sub_240097F98(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = *result;
  return result;
}

uint64_t (*sub_240097FAC())()
{
  return nullsub_1;
}

uint64_t sub_240097FC4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_240097FF0 + 4 * byte_2401573F0[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_240097FF0()
{
  return 0x746176726573626FLL;
}

uint64_t sub_240098014()
{
  return 0x6172656D6163;
}

uint64_t sub_240098028()
{
  return 0x6465746365746564;
}

uint64_t sub_24009806C()
{
  return 0x7370756F7267;
}

uint64_t sub_240098080()
{
  return 0x4664656B63617274;
}

uint64_t sub_2400980A0()
{
  return 0x4264656B63617274;
}

uint64_t sub_2400980C4()
{
  return 0x4864656B63617274;
}

uint64_t sub_2400980E4()
{
  return 0x5064656B63617274;
}

unint64_t sub_240098108()
{
  return 0xD000000000000010;
}

uint64_t sub_240098124()
{
  return 0x646E616264616564;
}

uint64_t sub_240098140()
{
  return 0x646E616264616564;
}

uint64_t sub_240098160()
{
  return 0x646E616D6D6F63;
}

uint64_t sub_240098178()
{
  return 0x736F50646E617473;
}

uint64_t sub_24009819C()
{
  return 0x676E696B63617274;
}

uint64_t sub_2400982BC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_240097FC4(*a1);
  v5 = v4;
  if (v3 == sub_240097FC4(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_240098344()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_240154FE8();
  sub_240097FC4(v1);
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400983A4()
{
  unsigned __int8 *v0;

  sub_240097FC4(*v0);
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2400983E4()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_240154FE8();
  sub_240097FC4(v1);
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_240098440@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24009FDD8();
  *a1 = result;
  return result;
}

uint64_t sub_24009846C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_240097FC4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_240098494()
{
  unsigned __int8 *v0;

  return sub_240097FC4(*v0);
}

uint64_t sub_24009849C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24009FDD8();
  *a1 = result;
  return result;
}

void sub_2400984C0(_BYTE *a1@<X8>)
{
  *a1 = 26;
}

uint64_t sub_2400984CC()
{
  sub_24009C2BC();
  return sub_240155048();
}

uint64_t sub_2400984F4()
{
  sub_24009C2BC();
  return sub_240155054();
}

uint64_t DKIntelligentTrackingState.init(time:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  v6 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera;
  v7 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v6, 1, 1, v7);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = 0;
  v8 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D;
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_BYTE *)(v8 + 32) = 1;
  v9 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D;
  *(_OWORD *)v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_BYTE *)(v9 + 32) = 1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = 0;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = 7;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = 2;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = 4;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = 3;
  v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *v10 = 0;
  v10[1] = 0;
  v11 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v14 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = 3;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, a1, v4);
  return v1;
}

uint64_t static DKIntelligentTrackingState.decode(nsdata:)()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;

  sub_240154130();
  swift_allocObject();
  sub_240154124();
  v0 = sub_240154250();
  v2 = v1;
  sub_2400707A8(&qword_256FB6698, type metadata accessor for DKIntelligentTrackingState, (uint64_t)&protocol conformance descriptor for DKIntelligentTrackingState);
  sub_240154118();
  sub_240075D14(v0, v2);
  swift_release();
  return v4;
}

uint64_t sub_24009889C()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  sub_240154154();
  swift_allocObject();
  sub_240154148();
  type metadata accessor for DKIntelligentTrackingState(0);
  sub_2400707A8(&qword_256FB66A8, type metadata accessor for DKIntelligentTrackingState, (uint64_t)&protocol conformance descriptor for DKIntelligentTrackingState);
  v0 = sub_24015413C();
  v2 = v1;
  swift_release();
  v3 = sub_240154238();
  sub_240075D14(v0, v2);
  return v3;
}

uint64_t sub_240098A04()
{
  uint64_t result;
  void *v1;
  uint64_t v2;

  result = sub_24009889C();
  if (result)
  {
    v1 = (void *)result;
    v2 = static DKIntelligentTrackingState.decode(nsdata:)();

    return v2;
  }
  return result;
}

uint64_t sub_240098A48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  v6 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime;
  sub_240070BD4(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, &qword_256FB4CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, 1, 1, v4);
  v7 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera;
  sub_240070BD4(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, &qword_256FB4430);
  v8 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v9 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = 0;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = 0;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = 0;
  swift_bridgeObjectRelease();
  v10 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_BYTE *)(v10 + 32) = 1;
  v11 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D;
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_BYTE *)(v11 + 32) = 1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = 0;
  swift_release();
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = 0;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = 7;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = 2;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = 4;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = 3;
  v12 = (_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *v12 = 0;
  v12[1] = 0;
  result = swift_bridgeObjectRelease();
  v14 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  v17 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 1;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = 3;
  return result;
}

uint64_t sub_240098CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v0 = sub_240154688();
  MEMORY[0x24BDAC7A8](v0);
  v1 = sub_240154064();
  v2 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCB2A8];
  MEMORY[0x24BDAC7A8](v1);
  sub_240154094();
  swift_allocObject();
  sub_240154088();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB66B0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240155A40;
  sub_24015404C();
  sub_240154058();
  sub_2400707A8(&qword_256FB66B8, v2, MEMORY[0x24BDCB2C8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB66C0);
  sub_24009C270();
  sub_240154AC0();
  sub_240154070();
  type metadata accessor for DKIntelligentTrackingState(0);
  sub_2400707A8(&qword_256FB66A8, type metadata accessor for DKIntelligentTrackingState, (uint64_t)&protocol conformance descriptor for DKIntelligentTrackingState);
  v3 = sub_24015407C();
  v5 = v4;
  sub_24015467C();
  v6 = sub_240154664();
  v8 = v7;
  sub_240075D14(v3, v5);
  swift_release();
  if (!v8)
    return 0;
  return v6;
}

uint64_t DKIntelligentTrackingState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, &qword_256FB4CC8);
  sub_240070BD4(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, &qword_256FB4430);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKIntelligentTrackingState.__deallocating_deinit()
{
  return sub_240099080((void (*)(void))DKIntelligentTrackingState.deinit);
}

uint64_t sub_240099080(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_2400990A4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  __int128 v20;
  char v21;
  __int128 v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8](v2);
  v23 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v24 = (uint64_t)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB66D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24009C2BC();
  sub_240155030();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v6);
  LOBYTE(v27) = 0;
  sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v14 = v25;
  sub_240154E80();
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    v15 = (uint64_t)v23;
    v25 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v16 = v26;
    v17 = v24;
    sub_240070B90(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, v24, &qword_256FB4CC8);
    LOBYTE(v27) = 1;
    sub_240154E50();
    sub_240070BD4(v17, &qword_256FB4CC8);
    sub_240070B90(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v15, &qword_256FB4430);
    LOBYTE(v27) = 2;
    type metadata accessor for DKCamera();
    sub_2400707A8(&qword_256FB66E8, (uint64_t (*)(uint64_t))type metadata accessor for DKCamera, (uint64_t)&protocol conformance descriptor for DKCamera);
    sub_240154E50();
    sub_240070BD4(v15, &qword_256FB4430);
    *(_QWORD *)&v27 = *(_QWORD *)(v16
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
    v30 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB66F0);
    sub_24009C300();
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v16
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
    v30 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6708);
    sub_24009C37C();
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v16
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
    v30 = 5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6720);
    sub_24009C3F8();
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups);
    v30 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6738);
    sub_24009C9C8(&qword_256FB6740, (uint64_t (*)(void))sub_24009C474, MEMORY[0x24BEE12A0]);
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v16
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces);
    v30 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6750);
    sub_24009C4B8();
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v16
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies);
    v30 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6768);
    sub_24009C534();
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v16
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands);
    v30 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6780);
    sub_24009C5B0();
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v16
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
    v30 = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E68);
    sub_24009C62C();
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v26
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
    v30 = 11;
    sub_240154E50();
    v19 = *(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D + 32);
    v20 = *(_OWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D + 16);
    v27 = *(_OWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D);
    v28 = v20;
    v29 = v19;
    v30 = 12;
    type metadata accessor for CGRect(0);
    sub_2400707A8(&qword_256FB67A8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_240154E50();
    v21 = *(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 32);
    v22 = *(_OWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D + 16);
    v27 = *(_OWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D);
    v28 = v22;
    v29 = v21;
    v30 = 13;
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command);
    v30 = 14;
    type metadata accessor for DKIntelligentTrackingCommand(0);
    sub_2400707A8(&qword_256FB67B0, type metadata accessor for DKIntelligentTrackingCommand, (uint64_t)&protocol conformance descriptor for DKIntelligentTrackingCommand);
    sub_240154E50();
    *(_QWORD *)&v27 = *(_QWORD *)(v26
                                + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition);
    v30 = 15;
    sub_24009C6BC();
    sub_240154E50();
    LOBYTE(v27) = *(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode);
    v30 = 16;
    sub_24009C700();
    sub_240154E50();
    LOBYTE(v27) = *(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode);
    v30 = 17;
    sub_24009C744();
    sub_240154E50();
    LOBYTE(v27) = *(_BYTE *)(v26
                           + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming);
    v30 = 18;
    sub_24009C788();
    sub_240154E50();
    LOBYTE(v27) = *(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
    v30 = 19;
    sub_24009C7CC();
    sub_240154E50();
    LOBYTE(v27) = 20;
    swift_bridgeObjectRetain();
    sub_240154E2C();
    swift_bridgeObjectRelease();
    LOBYTE(v27) = 21;
    sub_240154E38();
    LOBYTE(v27) = 22;
    sub_240154E38();
    LOBYTE(v27) = 23;
    sub_240154E38();
    LOBYTE(v27) = 24;
    sub_240154E38();
    LOBYTE(v27) = *(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode);
    v30 = 25;
    sub_24009C810();
    sub_240154E50();
    return (*(uint64_t (**)(_QWORD, uint64_t))(v25 + 8))(0, v10);
  }
}

uint64_t DKIntelligentTrackingState.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKIntelligentTrackingState.init(from:));
}

uint64_t DKIntelligentTrackingState.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  void (*v12)(double);
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  _OWORD *v37;
  char v38;
  __int128 v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  char v46;
  uint64_t v47;
  uint64_t *v48;
  char v49;
  uint64_t v50;
  uint64_t *v51;
  char v52;
  uint64_t v53;
  uint64_t *v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _OWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  char *v94;
  __int128 v95;
  __int128 v96;
  char v97;
  char v98;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  MEMORY[0x24BDAC7A8](v3);
  v69 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v5);
  v70 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_240154310();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v73 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB67E8);
  v71 = *(_QWORD *)(v75 - 8);
  v10 = MEMORY[0x24BDAC7A8](v75);
  v94 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = v8;
  v12 = *(void (**)(double))(v8 + 56);
  v90 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime;
  v74 = v7;
  v12(v10);
  v13 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera;
  v14 = type metadata accessor for DKCamera();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v89 = v13;
  v68 = v14;
  v15(v13, 1, 1);
  v76 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = 0;
  v88 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces) = 0;
  v87 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies) = 0;
  v86 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands) = 0;
  v85 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups) = 0;
  v84 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces) = 0;
  v83 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies) = 0;
  v82 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands) = 0;
  v81 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople) = 0;
  v80 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects) = 0;
  v16 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D;
  *(_OWORD *)v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  v67 = (_OWORD *)v16;
  *(_BYTE *)(v16 + 32) = 1;
  v17 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D;
  *(_OWORD *)v17 = 0u;
  *(_OWORD *)(v17 + 16) = 0u;
  *(_BYTE *)(v17 + 32) = 1;
  v77 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = 0;
  v78 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = 0;
  v63 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = 7;
  v64 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = 2;
  v65 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = 4;
  v66 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = 3;
  v18 = (uint64_t *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *v18 = 0;
  v18[1] = 0;
  v79 = v18;
  v19 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  *(_QWORD *)v19 = 0;
  *(_BYTE *)(v19 + 8) = 1;
  v20 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  *(_QWORD *)v20 = 0;
  *(_BYTE *)(v20 + 8) = 1;
  v21 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  *(_QWORD *)v21 = 0;
  *(_BYTE *)(v21 + 8) = 1;
  v22 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  *(_QWORD *)v22 = 0;
  *(_BYTE *)(v22 + 8) = 1;
  v23 = OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = 3;
  v24 = a1;
  v25 = a1[3];
  v92 = v24;
  v93 = v1;
  __swift_project_boxed_opaque_existential_1(v24, v25);
  sub_24009C2BC();
  v26 = v91;
  sub_240155024();
  if (v26)
  {
    v56 = v93;
    sub_240070BD4(v90, &qword_256FB4CC8);
    sub_240070BD4(v89, &qword_256FB4430);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for DKIntelligentTrackingState(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v27 = v72;
    v91 = (_OWORD *)v17;
    v58 = (uint64_t *)v19;
    v59 = (uint64_t *)v20;
    v60 = (uint64_t *)v21;
    v61 = (uint64_t *)v22;
    v62 = v23;
    v28 = v71;
    LOBYTE(v95) = 0;
    sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v29 = v73;
    v30 = v74;
    sub_240154DFC();
    v32 = v93;
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v93 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v29, v30);
    LOBYTE(v95) = 1;
    v33 = (uint64_t)v70;
    sub_240154DCC();
    sub_24009C218(v33, v90, &qword_256FB4CC8);
    LOBYTE(v95) = 2;
    sub_2400707A8(&qword_256FB67F8, (uint64_t (*)(uint64_t))type metadata accessor for DKCamera, (uint64_t)&protocol conformance descriptor for DKCamera);
    v34 = (uint64_t)v69;
    sub_240154DCC();
    sub_24009C218(v34, v89, &qword_256FB4430);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB66F0);
    v98 = 3;
    sub_24009C854();
    sub_240154DCC();
    *(_QWORD *)(v32 + v88) = v95;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6708);
    v98 = 4;
    sub_24009C8D0();
    sub_240154DCC();
    *(_QWORD *)(v32 + v87) = v95;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6720);
    v98 = 5;
    sub_24009C94C();
    sub_240154DCC();
    *(_QWORD *)(v32 + v86) = v95;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6738);
    v98 = 6;
    sub_24009C9C8(&qword_256FB6830, (uint64_t (*)(void))sub_24009CA30, MEMORY[0x24BEE12D0]);
    sub_240154DCC();
    *(_QWORD *)(v32 + v85) = v95;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6750);
    v98 = 7;
    sub_24009CA74();
    sub_240154DCC();
    *(_QWORD *)(v32 + v84) = v95;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6768);
    v98 = 8;
    sub_24009CAF0();
    sub_240154DCC();
    *(_QWORD *)(v32 + v83) = v95;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6780);
    v98 = 9;
    sub_24009CB6C();
    sub_240154DCC();
    *(_QWORD *)(v93 + v82) = v95;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E68);
    v98 = 10;
    sub_24009CBE8();
    sub_240154DCC();
    *(_QWORD *)(v93 + v81) = v95;
    swift_bridgeObjectRelease();
    v98 = 11;
    sub_240154DCC();
    *(_QWORD *)(v93 + v80) = v95;
    swift_bridgeObjectRelease();
    type metadata accessor for CGRect(0);
    v98 = 12;
    sub_2400707A8(&qword_256FB6880, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DCC();
    v35 = v97;
    v36 = v96;
    v37 = v67;
    *v67 = v95;
    v37[1] = v36;
    *((_BYTE *)v37 + 32) = v35;
    v98 = 13;
    sub_240154DCC();
    v38 = v97;
    v39 = v96;
    v40 = v91;
    *v91 = v95;
    v40[1] = v39;
    *((_BYTE *)v40 + 32) = v38;
    type metadata accessor for DKIntelligentTrackingCommand(0);
    v98 = 14;
    sub_2400707A8(&qword_256FB6888, type metadata accessor for DKIntelligentTrackingCommand, (uint64_t)&protocol conformance descriptor for DKIntelligentTrackingCommand);
    sub_240154DCC();
    *(_QWORD *)(v93 + v77) = v95;
    swift_release();
    v98 = 15;
    sub_24009CC64();
    sub_240154DCC();
    *(_QWORD *)(v93 + v78) = v95;
    swift_bridgeObjectRelease();
    v98 = 16;
    sub_24009CCA8();
    sub_240154DCC();
    *(_BYTE *)(v93 + v63) = v95;
    v98 = 17;
    sub_24009CCEC();
    sub_240154DCC();
    *(_BYTE *)(v93 + v64) = v95;
    v98 = 18;
    sub_24009CD30();
    sub_240154DCC();
    *(_BYTE *)(v93 + v65) = v95;
    v98 = 19;
    sub_24009CD74();
    sub_240154DCC();
    *(_BYTE *)(v93 + v66) = v95;
    LOBYTE(v95) = 20;
    v41 = sub_240154DA8();
    v42 = v79;
    *v79 = v41;
    v42[1] = v43;
    swift_bridgeObjectRelease();
    LOBYTE(v95) = 21;
    v44 = sub_240154DB4();
    v45 = v58;
    *v58 = v44;
    *((_BYTE *)v45 + 8) = v46 & 1;
    LOBYTE(v95) = 22;
    v47 = sub_240154DB4();
    v48 = v59;
    *v59 = v47;
    *((_BYTE *)v48 + 8) = v49 & 1;
    LOBYTE(v95) = 23;
    v50 = sub_240154DB4();
    v51 = v60;
    *v60 = v50;
    *((_BYTE *)v51 + 8) = v52 & 1;
    LOBYTE(v95) = 24;
    v53 = sub_240154DB4();
    v54 = v61;
    *v61 = v53;
    *((_BYTE *)v54 + 8) = v55 & 1;
    v98 = 25;
    sub_24009CDB8();
    sub_240154DCC();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v94, v75);
    v56 = v93;
    *(_BYTE *)(v93 + v62) = v95;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  return v56;
}

uint64_t sub_24009AA74@<X0>(uint64_t a1@<X8>)
{
  return sub_24009D898(&OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, a1);
}

uint64_t sub_24009AA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24009D8E8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time);
}

uint64_t (*sub_24009AA8C())()
{
  return nullsub_1;
}

uint64_t sub_24009AAA8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKIntelligentTrackingState, (uint64_t (*)(uint64_t))DKIntelligentTrackingState.init(from:), a2);
}

uint64_t sub_24009AACC(_QWORD *a1)
{
  return sub_2400990A4(a1);
}

uint64_t DKIntelligentTrackingCommand.VelocityCommand.velocity.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t DKIntelligentTrackingCommand.VelocityCommand.velocity.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

uint64_t (*DKIntelligentTrackingCommand.VelocityCommand.velocity.modify())()
{
  return nullsub_1;
}

uint64_t sub_24009AB30()
{
  return 1;
}

uint64_t sub_24009AB3C()
{
  return sub_240154FF4();
}

uint64_t sub_24009AB64()
{
  return 0x797469636F6C6576;
}

uint64_t sub_24009AB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x797469636F6C6576 && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_240154EF8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_24009AC10(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_24009AC1C()
{
  sub_24009CDFC();
  return sub_240155048();
}

uint64_t sub_24009AC44()
{
  sub_24009CDFC();
  return sub_240155054();
}

uint64_t DKIntelligentTrackingCommand.VelocityCommand.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[2];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB68C0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24009CDFC();
  sub_240155030();
  v9[1] = v7;
  sub_24009C6BC();
  sub_240154E80();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKIntelligentTrackingCommand.VelocityCommand.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v10[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB68D0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24009CDFC();
  sub_240155024();
  if (!v2)
  {
    sub_24009CC64();
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_24009AE84@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return DKIntelligentTrackingCommand.VelocityCommand.init(from:)(a1, a2);
}

uint64_t sub_24009AE98(_QWORD *a1)
{
  return DKIntelligentTrackingCommand.VelocityCommand.encode(to:)(a1);
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.position.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.position.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

uint64_t (*DKIntelligentTrackingCommand.PositionCommand.position.modify())()
{
  return nullsub_1;
}

double DKIntelligentTrackingCommand.PositionCommand.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void DKIntelligentTrackingCommand.PositionCommand.duration.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*DKIntelligentTrackingCommand.PositionCommand.duration.modify())()
{
  return nullsub_1;
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.relative.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.relative.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*DKIntelligentTrackingCommand.PositionCommand.relative.modify())()
{
  return nullsub_1;
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.highPriority.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.highPriority.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*DKIntelligentTrackingCommand.PositionCommand.highPriority.modify())()
{
  return nullsub_1;
}

IntelligentTrackingCore::DKIntelligentTrackingCommand::PositionCommand __swiftcall DKIntelligentTrackingCommand.PositionCommand.init(position:duration:relative:highPriority:)(IntelligentTrackingCore::DKVector3 position, Swift::Double duration, Swift::Bool relative, Swift::Bool highPriority)
{
  uint64_t v4;
  IntelligentTrackingCore::DKIntelligentTrackingCommand::PositionCommand result;

  *(_QWORD *)v4 = *(_QWORD *)position.elements._rawValue;
  *(Swift::Double *)(v4 + 8) = duration;
  *(_BYTE *)(v4 + 16) = relative;
  *(_BYTE *)(v4 + 17) = highPriority;
  result.duration = duration;
  result.position = position;
  result.relative = relative;
  return result;
}

uint64_t sub_24009AF68()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24009AF98 + 4 * byte_24015740A[*v0]))(0x6E6F697469736F70, 0xE800000000000000);
}

uint64_t sub_24009AF98()
{
  return 0x6E6F697461727564;
}

uint64_t sub_24009AFAC()
{
  return 0x65766974616C6572;
}

uint64_t sub_24009AFC0()
{
  return 0x6F69725068676968;
}

uint64_t sub_24009AFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24009FE28(a1, a2);
  *a3 = result;
  return result;
}

void sub_24009B004(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24009B010()
{
  sub_24009CE40();
  return sub_240155048();
}

uint64_t sub_24009B038()
{
  sub_24009CE40();
  return sub_240155054();
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int v9;
  _DWORD v11[5];
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB68D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = *((unsigned __int8 *)v1 + 16);
  v11[3] = *((unsigned __int8 *)v1 + 17);
  v11[4] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24009CE40();
  sub_240155030();
  v16 = v8;
  v15 = 0;
  sub_24009C6BC();
  sub_240154E80();
  if (!v2)
  {
    v14 = 1;
    sub_240154E68();
    v13 = 2;
    sub_240154E5C();
    v12 = 3;
    sub_240154E5C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DKIntelligentTrackingCommand.PositionCommand.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v14;
  _BYTE v15[8];
  uint64_t v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB68E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24009CE40();
  sub_240155024();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v15[7] = 0;
  sub_24009CC64();
  sub_240154DFC();
  v9 = v16;
  v15[6] = 1;
  swift_bridgeObjectRetain();
  sub_240154DE4();
  v11 = v10;
  v15[5] = 2;
  v12 = sub_240154DD8();
  v15[4] = 3;
  v14 = sub_240154DD8();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  *(_QWORD *)a2 = v9;
  *(_QWORD *)(a2 + 8) = v11;
  *(_BYTE *)(a2 + 16) = v12 & 1;
  *(_BYTE *)(a2 + 17) = v14 & 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24009B400@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKIntelligentTrackingCommand.PositionCommand.init(from:)(a1, a2);
}

uint64_t sub_24009B414(_QWORD *a1)
{
  return DKIntelligentTrackingCommand.PositionCommand.encode(to:)(a1);
}

uint64_t sub_24009B428()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x797469636F6C6576;
  if (*v0 != 1)
    v1 = 0x6E6F697469736F70;
  if (*v0)
    return v1;
  else
    return 0x6E616D6D6F436F6ELL;
}

uint64_t sub_24009B488@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24009FFF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_24009B4AC(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_24009B4B8()
{
  sub_24009CE84();
  return sub_240155048();
}

uint64_t sub_24009B4E0()
{
  sub_24009CE84();
  return sub_240155054();
}

uint64_t sub_24009B508()
{
  return 0;
}

uint64_t sub_24009B514@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_24009B540()
{
  sub_24009CFD8();
  return sub_240155048();
}

uint64_t sub_24009B568()
{
  sub_24009CFD8();
  return sub_240155054();
}

uint64_t sub_24009B590()
{
  return 12383;
}

uint64_t sub_24009B5A0()
{
  sub_24009CEC8();
  return sub_240155048();
}

uint64_t sub_24009B5C8()
{
  sub_24009CEC8();
  return sub_240155054();
}

uint64_t sub_24009B5F0()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t sub_24009B630()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t sub_24009B66C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_240154EF8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24009B6E8()
{
  sub_24009CF50();
  return sub_240155048();
}

uint64_t sub_24009B710()
{
  sub_24009CF50();
  return sub_240155054();
}

uint64_t DKIntelligentTrackingCommand.Command.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unsigned int v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB68F0);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB68F8);
  v24 = *(_QWORD *)(v5 - 8);
  v25 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6900);
  v8 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6908);
  v30 = *(_QWORD *)(v11 - 8);
  v31 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *v1;
  v14 = v1[1];
  v15 = *((unsigned __int16 *)v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24009CE84();
  sub_240155030();
  if (!(v15 >> 14))
  {
    LOBYTE(v32) = 1;
    sub_24009CF50();
    v17 = v31;
    sub_240154E20();
    v32 = v29;
    sub_24009CF94();
    v19 = v25;
    sub_240154E80();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v17);
  }
  if (v15 >> 14 == 1)
  {
    LOBYTE(v32) = 2;
    sub_24009CEC8();
    v16 = v26;
    v17 = v31;
    sub_240154E20();
    v32 = v29;
    v33 = v14;
    v34 = v15 & 0x101;
    sub_24009CF0C();
    v18 = v28;
    sub_240154E80();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v17);
  }
  LOBYTE(v32) = 0;
  sub_24009CFD8();
  v21 = v31;
  sub_240154E20();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v13, v21);
}

uint64_t DKIntelligentTrackingCommand.Command.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int16 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  char v46;
  uint64_t v47;

  v39 = a2;
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6940);
  v37 = *(_QWORD *)(v35 - 8);
  MEMORY[0x24BDAC7A8](v35);
  v41 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6948);
  v38 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6950);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6958);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1[3];
  v42 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_24009CE84();
  v14 = v47;
  sub_240155024();
  if (!v14)
  {
    v34 = v5;
    v16 = v40;
    v15 = v41;
    v47 = v10;
    v17 = sub_240154E08();
    v18 = v9;
    if (*(_QWORD *)(v17 + 16) == 1)
    {
      if (*(_BYTE *)(v17 + 32))
      {
        if (*(_BYTE *)(v17 + 32) != 1)
        {
          LOBYTE(v43) = 2;
          sub_24009CEC8();
          v24 = v15;
          v25 = v18;
          sub_240154D90();
          v26 = v39;
          sub_24009D01C();
          v31 = v35;
          sub_240154DFC();
          v32 = v47;
          (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v31);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v25);
          v30 = v43;
          v28 = v44;
          if (v46)
            v33 = 256;
          else
            v33 = 0;
          v29 = v33 | v45 | 0x4000;
          v22 = (uint64_t)v42;
          goto LABEL_16;
        }
        LOBYTE(v43) = 1;
        sub_24009CF50();
        sub_240154D90();
        sub_24009D060();
        v27 = v36;
        sub_240154DFC();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v16, v27);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v9);
        v28 = 0;
        v29 = 0;
        v30 = v43;
      }
      else
      {
        LOBYTE(v43) = 0;
        sub_24009CFD8();
        sub_240154D90();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v34);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v9);
        v30 = 0;
        v28 = 0;
        v29 = 0x8000;
      }
      v22 = (uint64_t)v42;
      v26 = v39;
LABEL_16:
      *(_QWORD *)v26 = v30;
      *(_QWORD *)(v26 + 8) = v28;
      *(_WORD *)(v26 + 16) = v29;
      return __swift_destroy_boxed_opaque_existential_1(v22);
    }
    v19 = sub_240154BC8();
    swift_allocError();
    v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v21 = &type metadata for DKIntelligentTrackingCommand.Command;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 104))(v21, *MEMORY[0x24BEE26D0], v19);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v9);
  }
  v22 = (uint64_t)v42;
  return __swift_destroy_boxed_opaque_existential_1(v22);
}

uint64_t sub_24009BF64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKIntelligentTrackingCommand.Command.init(from:)(a1, a2);
}

uint64_t sub_24009BF78(_QWORD *a1)
{
  return DKIntelligentTrackingCommand.Command.encode(to:)(a1);
}

uint64_t sub_24009BF8C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v8 = sub_240154310();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v12, a1, v8, v10);
  return (*(uint64_t (**)(_QWORD, char *, uint64_t))(v9 + 40))(*a2 + *a5, v12, v8);
}

uint64_t sub_24009C02C@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, a1);
}

uint64_t sub_24009C038@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a1;
  v5 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_24009C078(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time);
}

uint64_t sub_24009C084(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *a2;
  v5 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_24009C0C4())()
{
  return nullsub_1;
}

uint64_t sub_24009C0DC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  __int16 v8;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  v5 = *(_QWORD *)v4;
  v6 = *(_QWORD *)(v4 + 8);
  *(_QWORD *)v4 = *(_QWORD *)a1;
  *(_QWORD *)(v4 + 8) = v3;
  v7 = *(_WORD *)(a1 + 16);
  v8 = *(_WORD *)(v4 + 16);
  *(_WORD *)(v4 + 16) = v7;
  sub_240070B78(v2, v3, v7);
  return sub_240070B84(v5, v6, v8);
}

uint64_t sub_24009C13C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;

  v2 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_WORD *)(v2 + 16);
  *(_WORD *)(a1 + 16) = v5;
  return sub_240070B78(v3, v4, v5);
}

uint64_t sub_24009C15C(uint64_t a1)
{
  uint64_t v1;
  __int16 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;

  v2 = *(_WORD *)(a1 + 16);
  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8);
  *(_OWORD *)v3 = *(_OWORD *)a1;
  v6 = *(_WORD *)(v3 + 16);
  *(_WORD *)(v3 + 16) = v2;
  return sub_240070B84(v5, v4, v6);
}

uint64_t (*sub_24009C188())()
{
  return nullsub_1;
}

uint64_t DKIntelligentTrackingCommand.init(time:command:)(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  v5 = a2[1];
  v6 = *((_WORD *)a2 + 8);
  v7 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
  v8 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7, a1, v8);
  v9 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  *(_QWORD *)v9 = v4;
  *(_QWORD *)(v9 + 8) = v5;
  *(_WORD *)(v9 + 16) = v6;
  return v2;
}

uint64_t sub_24009C218(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for DKIntelligentTrackingState(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FB6DD8);
}

unint64_t sub_24009C270()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FB66C8;
  if (!qword_256FB66C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB66C0);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12C8], v1);
    atomic_store(result, (unint64_t *)&qword_256FB66C8);
  }
  return result;
}

unint64_t sub_24009C2BC()
{
  unint64_t result;

  result = qword_256FB66D8;
  if (!qword_256FB66D8)
  {
    result = MEMORY[0x24267E0BC](&unk_240158004, &type metadata for DKIntelligentTrackingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB66D8);
  }
  return result;
}

unint64_t sub_24009C300()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB66F8;
  if (!qword_256FB66F8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB66F0);
    v2 = sub_2400707A8(&qword_256FB6700, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB66F8);
  }
  return result;
}

unint64_t sub_24009C37C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6710;
  if (!qword_256FB6710)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6708);
    v2 = sub_2400707A8(&qword_256FB6718, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6710);
  }
  return result;
}

unint64_t sub_24009C3F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6728;
  if (!qword_256FB6728)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6720);
    v2 = sub_2400707A8(&qword_256FB6730, type metadata accessor for DKHandObservation, (uint64_t)&protocol conformance descriptor for DKHandObservation);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6728);
  }
  return result;
}

unint64_t sub_24009C474()
{
  unint64_t result;

  result = qword_256FB6748;
  if (!qword_256FB6748)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKObservationGroup, &type metadata for DKObservationGroup);
    atomic_store(result, (unint64_t *)&qword_256FB6748);
  }
  return result;
}

unint64_t sub_24009C4B8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6758;
  if (!qword_256FB6758)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6750);
    v2 = sub_2400707A8(&qword_256FB6760, type metadata accessor for DKFaceTrackerState, (uint64_t)&protocol conformance descriptor for DKFaceTrackerState);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6758);
  }
  return result;
}

unint64_t sub_24009C534()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6770;
  if (!qword_256FB6770)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6768);
    v2 = sub_2400707A8(&qword_256FB6778, type metadata accessor for DKBodyTrackerState, (uint64_t)&protocol conformance descriptor for DKBodyTrackerState);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6770);
  }
  return result;
}

unint64_t sub_24009C5B0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6788;
  if (!qword_256FB6788)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6780);
    v2 = sub_2400707A8(&qword_256FB6790, type metadata accessor for DKHandTrackerState, (uint64_t)&protocol conformance descriptor for DKHandTrackerState);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6788);
  }
  return result;
}

unint64_t sub_24009C62C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6798;
  if (!qword_256FB6798)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB4E68);
    v2 = sub_2400707A8(&qword_256FB67A0, type metadata accessor for DKPersonTrackerState, (uint64_t)&protocol conformance descriptor for DKPersonTrackerState);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6798);
  }
  return result;
}

uint64_t type metadata accessor for DKIntelligentTrackingCommand(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FB7218);
}

unint64_t sub_24009C6BC()
{
  unint64_t result;

  result = qword_256FB67B8;
  if (!qword_256FB67B8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKVector3, &type metadata for DKVector3);
    atomic_store(result, (unint64_t *)&qword_256FB67B8);
  }
  return result;
}

unint64_t sub_24009C700()
{
  unint64_t result;

  result = qword_256FB67C0;
  if (!qword_256FB67C0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKTrackingMode, &type metadata for DKTrackingMode);
    atomic_store(result, (unint64_t *)&qword_256FB67C0);
  }
  return result;
}

unint64_t sub_24009C744()
{
  unint64_t result;

  result = qword_256FB67C8;
  if (!qword_256FB67C8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.Mode, &type metadata for DKFramingEngine.Mode);
    atomic_store(result, (unint64_t *)&qword_256FB67C8);
  }
  return result;
}

unint64_t sub_24009C788()
{
  unint64_t result;

  result = qword_256FB67D0;
  if (!qword_256FB67D0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.HorizontalFraming, &type metadata for DKFramingEngine.HorizontalFraming);
    atomic_store(result, (unint64_t *)&qword_256FB67D0);
  }
  return result;
}

unint64_t sub_24009C7CC()
{
  unint64_t result;

  result = qword_256FB67D8;
  if (!qword_256FB67D8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.VerticalFraming, &type metadata for DKFramingEngine.VerticalFraming);
    atomic_store(result, (unint64_t *)&qword_256FB67D8);
  }
  return result;
}

unint64_t sub_24009C810()
{
  unint64_t result;

  result = qword_256FB67E0;
  if (!qword_256FB67E0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingConfig.PipelineMode, &type metadata for DKIntelligentTrackingConfig.PipelineMode);
    atomic_store(result, (unint64_t *)&qword_256FB67E0);
  }
  return result;
}

unint64_t sub_24009C854()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6800;
  if (!qword_256FB6800)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB66F0);
    v2 = sub_2400707A8(&qword_256FB6808, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6800);
  }
  return result;
}

unint64_t sub_24009C8D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6810;
  if (!qword_256FB6810)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6708);
    v2 = sub_2400707A8(&qword_256FB6818, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6810);
  }
  return result;
}

unint64_t sub_24009C94C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6820;
  if (!qword_256FB6820)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6720);
    v2 = sub_2400707A8(&qword_256FB6828, type metadata accessor for DKHandObservation, (uint64_t)&protocol conformance descriptor for DKHandObservation);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6820);
  }
  return result;
}

uint64_t sub_24009C9C8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6738);
    v8 = a2();
    result = MEMORY[0x24267E0BC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24009CA30()
{
  unint64_t result;

  result = qword_256FB6838;
  if (!qword_256FB6838)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKObservationGroup, &type metadata for DKObservationGroup);
    atomic_store(result, (unint64_t *)&qword_256FB6838);
  }
  return result;
}

unint64_t sub_24009CA74()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6840;
  if (!qword_256FB6840)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6750);
    v2 = sub_2400707A8(&qword_256FB6848, type metadata accessor for DKFaceTrackerState, (uint64_t)&protocol conformance descriptor for DKFaceTrackerState);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6840);
  }
  return result;
}

unint64_t sub_24009CAF0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6850;
  if (!qword_256FB6850)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6768);
    v2 = sub_2400707A8(&qword_256FB6858, type metadata accessor for DKBodyTrackerState, (uint64_t)&protocol conformance descriptor for DKBodyTrackerState);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6850);
  }
  return result;
}

unint64_t sub_24009CB6C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6860;
  if (!qword_256FB6860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB6780);
    v2 = sub_2400707A8(&qword_256FB6868, type metadata accessor for DKHandTrackerState, (uint64_t)&protocol conformance descriptor for DKHandTrackerState);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6860);
  }
  return result;
}

unint64_t sub_24009CBE8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB6870;
  if (!qword_256FB6870)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB4E68);
    v2 = sub_2400707A8(&qword_256FB6878, type metadata accessor for DKPersonTrackerState, (uint64_t)&protocol conformance descriptor for DKPersonTrackerState);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB6870);
  }
  return result;
}

unint64_t sub_24009CC64()
{
  unint64_t result;

  result = qword_256FB6890;
  if (!qword_256FB6890)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKVector3, &type metadata for DKVector3);
    atomic_store(result, (unint64_t *)&qword_256FB6890);
  }
  return result;
}

unint64_t sub_24009CCA8()
{
  unint64_t result;

  result = qword_256FB6898;
  if (!qword_256FB6898)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKTrackingMode, &type metadata for DKTrackingMode);
    atomic_store(result, (unint64_t *)&qword_256FB6898);
  }
  return result;
}

unint64_t sub_24009CCEC()
{
  unint64_t result;

  result = qword_256FB68A0;
  if (!qword_256FB68A0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.Mode, &type metadata for DKFramingEngine.Mode);
    atomic_store(result, (unint64_t *)&qword_256FB68A0);
  }
  return result;
}

unint64_t sub_24009CD30()
{
  unint64_t result;

  result = qword_256FB68A8;
  if (!qword_256FB68A8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.HorizontalFraming, &type metadata for DKFramingEngine.HorizontalFraming);
    atomic_store(result, (unint64_t *)&qword_256FB68A8);
  }
  return result;
}

unint64_t sub_24009CD74()
{
  unint64_t result;

  result = qword_256FB68B0;
  if (!qword_256FB68B0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFramingEngine.VerticalFraming, &type metadata for DKFramingEngine.VerticalFraming);
    atomic_store(result, (unint64_t *)&qword_256FB68B0);
  }
  return result;
}

unint64_t sub_24009CDB8()
{
  unint64_t result;

  result = qword_256FB68B8;
  if (!qword_256FB68B8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingConfig.PipelineMode, &type metadata for DKIntelligentTrackingConfig.PipelineMode);
    atomic_store(result, (unint64_t *)&qword_256FB68B8);
  }
  return result;
}

unint64_t sub_24009CDFC()
{
  unint64_t result;

  result = qword_256FB68C8;
  if (!qword_256FB68C8)
  {
    result = MEMORY[0x24267E0BC](&unk_240157FB4, &type metadata for DKIntelligentTrackingCommand.VelocityCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB68C8);
  }
  return result;
}

unint64_t sub_24009CE40()
{
  unint64_t result;

  result = qword_256FB68E0;
  if (!qword_256FB68E0)
  {
    result = MEMORY[0x24267E0BC](&unk_240157F64, &type metadata for DKIntelligentTrackingCommand.PositionCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB68E0);
  }
  return result;
}

unint64_t sub_24009CE84()
{
  unint64_t result;

  result = qword_256FB6910;
  if (!qword_256FB6910)
  {
    result = MEMORY[0x24267E0BC](&unk_240157F14, &type metadata for DKIntelligentTrackingCommand.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB6910);
  }
  return result;
}

unint64_t sub_24009CEC8()
{
  unint64_t result;

  result = qword_256FB6918;
  if (!qword_256FB6918)
  {
    result = MEMORY[0x24267E0BC](&unk_240157EC4, &type metadata for DKIntelligentTrackingCommand.Command.PositionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB6918);
  }
  return result;
}

unint64_t sub_24009CF0C()
{
  unint64_t result;

  result = qword_256FB6920;
  if (!qword_256FB6920)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingCommand.PositionCommand, &type metadata for DKIntelligentTrackingCommand.PositionCommand);
    atomic_store(result, (unint64_t *)&qword_256FB6920);
  }
  return result;
}

unint64_t sub_24009CF50()
{
  unint64_t result;

  result = qword_256FB6928;
  if (!qword_256FB6928)
  {
    result = MEMORY[0x24267E0BC](&unk_240157E74, &type metadata for DKIntelligentTrackingCommand.Command.VelocityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB6928);
  }
  return result;
}

unint64_t sub_24009CF94()
{
  unint64_t result;

  result = qword_256FB6930;
  if (!qword_256FB6930)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingCommand.VelocityCommand, &type metadata for DKIntelligentTrackingCommand.VelocityCommand);
    atomic_store(result, (unint64_t *)&qword_256FB6930);
  }
  return result;
}

unint64_t sub_24009CFD8()
{
  unint64_t result;

  result = qword_256FB6938;
  if (!qword_256FB6938)
  {
    result = MEMORY[0x24267E0BC](&unk_240157E24, &type metadata for DKIntelligentTrackingCommand.Command.NoCommandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB6938);
  }
  return result;
}

unint64_t sub_24009D01C()
{
  unint64_t result;

  result = qword_256FB6968;
  if (!qword_256FB6968)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingCommand.PositionCommand, &type metadata for DKIntelligentTrackingCommand.PositionCommand);
    atomic_store(result, (unint64_t *)&qword_256FB6968);
  }
  return result;
}

unint64_t sub_24009D060()
{
  unint64_t result;

  result = qword_256FB6970;
  if (!qword_256FB6970)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingCommand.VelocityCommand, &type metadata for DKIntelligentTrackingCommand.VelocityCommand);
    atomic_store(result, (unint64_t *)&qword_256FB6970);
  }
  return result;
}

uint64_t sub_24009D0A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int16 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = sub_240154310();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v1, v3);
  v6 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
  v8 = *(_QWORD *)(v6 + 8);
  v9 = *(_WORD *)(v6 + 16);
  type metadata accessor for DKIntelligentTrackingCommand(0);
  v10 = swift_allocObject();
  (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v5, v1);
  v11 = v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  *(_QWORD *)v11 = v7;
  *(_QWORD *)(v11 + 8) = v8;
  *(_WORD *)(v11 + 16) = v9;
  sub_240070B78(v7, v8, v9);
  return v10;
}

uint64_t sub_24009D19C()
{
  _BYTE *v0;

  if (*v0)
    return 0x646E616D6D6F63;
  else
    return 1701669236;
}

uint64_t sub_24009D1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400A0158(a1, a2);
  *a3 = result;
  return result;
}

void sub_24009D1F4(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24009D200()
{
  sub_24009D504();
  return sub_240155048();
}

uint64_t sub_24009D228()
{
  sub_24009D504();
  return sub_240155054();
}

uint64_t DKIntelligentTrackingCommand.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_240070B84(*(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command), *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8), *(_WORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 16));
  return v0;
}

uint64_t DKIntelligentTrackingCommand.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_240070B84(*(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command), *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 8), *(_WORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 16));
  return swift_deallocClassInstance();
}

uint64_t sub_24009D314(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int16 v12;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int16 v17;
  char v18;

  v2 = v1;
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6978);
  v15 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24009D504();
  sub_240155030();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v4);
  LOBYTE(v16) = 0;
  sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v11 = v14;
  sub_240154E80();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v11)
  {
    v12 = *(_WORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command + 16);
    v16 = *(_OWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command);
    v17 = v12;
    v18 = 1;
    sub_24009D548();
    sub_240154E80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v10, v8);
}

unint64_t sub_24009D504()
{
  unint64_t result;

  result = qword_256FB6980;
  if (!qword_256FB6980)
  {
    result = MEMORY[0x24267E0BC](&unk_240157DD4, &type metadata for DKIntelligentTrackingCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB6980);
  }
  return result;
}

unint64_t sub_24009D548()
{
  unint64_t result;

  result = qword_256FB6988;
  if (!qword_256FB6988)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingCommand.Command, &type metadata for DKIntelligentTrackingCommand.Command);
    atomic_store(result, (unint64_t *)&qword_256FB6988);
  }
  return result;
}

uint64_t DKIntelligentTrackingCommand.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKIntelligentTrackingCommand.init(from:));
}

uint64_t sub_24009D5A8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4;

  v4 = swift_allocObject();
  a2(a1);
  return v4;
}

uint64_t DKIntelligentTrackingCommand.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int16 v19;
  char v20;

  v16 = sub_240154310();
  v3 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6990);
  v4 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24009D504();
  sub_240155024();
  if (v1)
  {
    v7 = v17;
    type metadata accessor for DKIntelligentTrackingCommand(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v4;
    LOBYTE(v18) = 0;
    sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v9 = v15;
    sub_240154DFC();
    v7 = v17;
    v10 = *(void (**)(void))(v3 + 32);
    v14 = v17 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time;
    v10();
    v20 = 1;
    sub_24009D848();
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v9);
    v12 = v19;
    v13 = v7 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
    *(_OWORD *)v13 = v18;
    *(_WORD *)(v13 + 16) = v12;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_24009D848()
{
  unint64_t result;

  result = qword_256FB6998;
  if (!qword_256FB6998)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIntelligentTrackingCommand.Command, &type metadata for DKIntelligentTrackingCommand.Command);
    atomic_store(result, (unint64_t *)&qword_256FB6998);
  }
  return result;
}

uint64_t sub_24009D88C@<X0>(uint64_t a1@<X8>)
{
  return sub_24009D898(&OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, a1);
}

uint64_t sub_24009D898@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2 + *a1;
  v5 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_24009D8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24009D8E8(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time);
}

uint64_t sub_24009D8E8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v6 = *v4 + *a4;
  v7 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v6, a1, v7);
}

uint64_t (*sub_24009D92C())()
{
  return nullsub_1;
}

uint64_t sub_24009D948@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKIntelligentTrackingCommand, (uint64_t (*)(uint64_t))DKIntelligentTrackingCommand.init(from:), a2);
}

uint64_t sub_24009D96C@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X3>, uint64_t (*a3)(uint64_t)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  a2(0);
  v8 = swift_allocObject();
  result = a3(a1);
  if (!v4)
    *a4 = v8;
  return result;
}

uint64_t sub_24009D9D0(_QWORD *a1)
{
  return sub_24009D314(a1);
}

uint64_t sub_24009D9F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, a2);
}

uint64_t sub_24009D9FC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time);
}

uint64_t sub_24009DA18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240070B90(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime, a2, &qword_256FB4CC8);
}

uint64_t sub_24009DA48(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_240097838(a1, a2, a3, a4, &qword_256FB4CC8, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime);
}

uint64_t sub_24009DA6C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240070B90(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, a2, &qword_256FB4430);
}

uint64_t sub_24009DA9C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_240097838(a1, a2, a3, a4, &qword_256FB4430, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera);
}

id sub_24009DAC0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  *a2 = v2;
  return v2;
}

void sub_24009DAD8(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_image) = *a1;
  v3 = v2;

}

uint64_t sub_24009DB14@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces, a2);
}

uint64_t sub_24009DB20(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedFaces);
}

uint64_t sub_24009DB2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies, a2);
}

uint64_t sub_24009DB38(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedBodies);
}

uint64_t sub_24009DB44@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands, a2);
}

uint64_t sub_24009DB50(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_detectedHands);
}

uint64_t sub_24009DB5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups, a2);
}

uint64_t sub_24009DB68(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_groups);
}

uint64_t sub_24009DB74@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces, a2);
}

uint64_t sub_24009DB80(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedFaces);
}

uint64_t sub_24009DB8C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies, a2);
}

uint64_t sub_24009DB98(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedBodies);
}

uint64_t sub_24009DBA4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands, a2);
}

uint64_t sub_24009DBB0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedHands);
}

uint64_t sub_24009DBBC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople, a2);
}

uint64_t sub_24009DBC8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
}

uint64_t sub_24009DBD4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects, a2);
}

uint64_t sub_24009DBE0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_selectedSubjects);
}

double sub_24009DBEC@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = keypath_get_25Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D, a2).n128_u64[0];
  return result;
}

double sub_24009DBF8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_26Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband2D).n128_u64[0];
  return result;
}

double sub_24009DC04@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = keypath_get_25Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D, a2).n128_u64[0];
  return result;
}

__n128 keypath_get_25Tm@<Q0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v3;
  char v4;
  __n128 result;
  __int128 v6;

  v3 = *a1 + *a2;
  v4 = *(_BYTE *)(v3 + 32);
  result = *(__n128 *)v3;
  v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a3 = *(_OWORD *)v3;
  *(_OWORD *)(a3 + 16) = v6;
  *(_BYTE *)(a3 + 32) = v4;
  return result;
}

double sub_24009DC30(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_26Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_deadband3D).n128_u64[0];
  return result;
}

__n128 keypath_set_26Tm(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  uint64_t v6;
  __n128 result;
  __int128 v8;

  v5 = *(_BYTE *)(a1 + 32);
  v6 = *a2 + *a5;
  result = *(__n128 *)a1;
  v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v6 = *(_OWORD *)a1;
  *(_OWORD *)(v6 + 16) = v8;
  *(_BYTE *)(v6 + 32) = v5;
  return result;
}

uint64_t sub_24009DC5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command);
  return swift_retain();
}

uint64_t sub_24009DC74(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_24009DCAC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_7Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition, a2);
}

uint64_t keypath_get_7Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  *a3 = *(_QWORD *)(*a1 + *a2);
  return swift_bridgeObjectRetain();
}

uint64_t sub_24009DCCC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition);
}

uint64_t keypath_set_8Tm(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  *(_QWORD *)(*a2 + *a5) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_24009DD0C@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode);
  return result;
}

_BYTE *sub_24009DD24(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingMode) = *result;
  return result;
}

_QWORD *sub_24009DD3C@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode);
  return result;
}

_BYTE *sub_24009DD54(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_framingMode) = *result;
  return result;
}

_QWORD *sub_24009DD6C@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming);
  return result;
}

_BYTE *sub_24009DD84(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_horizontalFraming) = *result;
  return result;
}

_QWORD *sub_24009DD9C@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming);
  return result;
}

_BYTE *sub_24009DDB4(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_verticalFraming) = *result;
  return result;
}

uint64_t sub_24009DDCC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  v3 = v2[1];
  *a2 = *v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24009DDE8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_24009DE24@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_24009DE48(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_elapsedTime);
}

_QWORD *sub_24009DE54@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_24009DE78(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_adaptiveFPS);
}

_QWORD *sub_24009DE84@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_24009DEA8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_cameraFPS);
}

_QWORD *sub_24009DEB4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_24009DED8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackingFPS);
}

uint64_t keypath_set_44Tm(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  char v5;
  uint64_t v6;

  v5 = *(_BYTE *)(result + 8);
  v6 = *a2 + *a5;
  *(_QWORD *)v6 = *(_QWORD *)result;
  *(_BYTE *)(v6 + 8) = v5;
  return result;
}

_QWORD *sub_24009DF04@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode);
  return result;
}

_BYTE *sub_24009DF1C(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_pipelineMode) = *result;
  return result;
}

uint64_t sub_24009DF34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, a2);
}

uint64_t keypath_getTm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *a1 + *a2;
  v5 = sub_240154310();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v4, v5);
}

uint64_t sub_24009DF84(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time);
}

uint64_t sub_24009DFA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
  v3 = *(_QWORD *)v2;
  v4 = *(_QWORD *)(v2 + 8);
  *(_QWORD *)a2 = *(_QWORD *)v2;
  *(_QWORD *)(a2 + 8) = v4;
  v5 = *(_WORD *)(v2 + 16);
  *(_WORD *)(a2 + 16) = v5;
  return sub_240070B78(v3, v4, v5);
}

uint64_t sub_24009DFC8()
{
  return type metadata accessor for DKIntelligentTrackingInternalState(0);
}

uint64_t type metadata accessor for DKIntelligentTrackingInternalState(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FB69C8);
}

void sub_24009DFE4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_240154310();
  if (v0 <= 0x3F)
  {
    sub_24009E780(319, (unint64_t *)&qword_256FB69D8, (void (*)(uint64_t))MEMORY[0x24BDCEA58]);
    if (v1 <= 0x3F)
    {
      sub_24009E780(319, (unint64_t *)&qword_256FB69E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_24009E12C()
{
  return type metadata accessor for DKIntelligentTrackingState(0);
}

void sub_24009E134()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_240154310();
  if (v0 <= 0x3F)
  {
    sub_24009E780(319, (unint64_t *)&qword_256FB69E0, (void (*)(uint64_t))MEMORY[0x24BDCE900]);
    if (v1 <= 0x3F)
    {
      sub_24009E780(319, qword_256FB6DE8, (void (*)(uint64_t))type metadata accessor for DKCamera);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for DKIntelligentTrackingState()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.observationTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.observationTime.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.observationTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.camera.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.camera.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.camera.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.image.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.image.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.image.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedFaces.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedFaces.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedFaces.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedBodies.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedBodies.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedBodies.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedHands.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedHands.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.detectedHands.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.groups.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.groups.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.groups.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedFaces.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedFaces.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedFaces.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedBodies.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedBodies.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedBodies.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedHands.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedHands.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedHands.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedPeople.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedPeople.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackedPeople.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.selectedSubjects.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.selectedSubjects.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.selectedSubjects.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband2D.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband2D.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  char v7;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 616);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband2D.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband3D.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband3D.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  char v7;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 640);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.deadband3D.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.command.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.command.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.command.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.standPosition.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.standPosition.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.standPosition.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.framingMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.framingMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.framingMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 744))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.horizontalFraming.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.horizontalFraming.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 760))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.horizontalFraming.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.verticalFraming.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.verticalFraming.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.verticalFraming.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.appID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.appID.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.appID.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.elapsedTime.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.elapsedTime.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 832))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.elapsedTime.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.adaptiveFPS.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.adaptiveFPS.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 856))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.adaptiveFPS.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.cameraFPS.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.cameraFPS.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 880))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.cameraFPS.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 888))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingFPS.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingFPS.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 904))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKIntelligentTrackingState.trackingFPS.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 912))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.pipelineMode.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 920))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.pipelineMode.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 928))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.pipelineMode.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 936))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.__allocating_init(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 944))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.encode()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.copy()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.reset(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 968))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 976))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 984))();
}

uint64_t dispatch thunk of DKIntelligentTrackingState.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 992))();
}

void sub_24009E780(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_240154A30();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t sub_24009E7CC()
{
  return type metadata accessor for DKIntelligentTrackingCommand(0);
}

uint64_t sub_24009E7D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKIntelligentTrackingCommand()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.command.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.command.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.command.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.__allocating_init(time:command:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.copy()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKIntelligentTrackingCommand.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.VelocityCommand()
{
  return &type metadata for DKIntelligentTrackingCommand.VelocityCommand;
}

uint64_t destroy for DKIntelligentTrackingCommand.PositionCommand()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s23IntelligentTrackingCore28DKIntelligentTrackingCommandC15PositionCommandVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DKIntelligentTrackingCommand.PositionCommand(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DKIntelligentTrackingCommand.PositionCommand(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingCommand.PositionCommand(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 18))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingCommand.PositionCommand(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 18) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.PositionCommand()
{
  return &type metadata for DKIntelligentTrackingCommand.PositionCommand;
}

uint64_t destroy for DKIntelligentTrackingCommand.Command(uint64_t a1)
{
  return sub_240070B84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_WORD *)(a1 + 16));
}

uint64_t _s23IntelligentTrackingCore28DKIntelligentTrackingCommandC7CommandOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int16 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_WORD *)(a2 + 16);
  sub_240070B78(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for DKIntelligentTrackingCommand.Command(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_WORD *)(a2 + 16);
  sub_240070B78(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v5;
  sub_240070B84(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for DKIntelligentTrackingCommand.Command(uint64_t a1, uint64_t a2)
{
  __int16 v3;
  uint64_t v4;
  uint64_t v5;
  __int16 v6;

  v3 = *(_WORD *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_WORD *)(a1 + 16);
  *(_WORD *)(a1 + 16) = v3;
  sub_240070B84(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingCommand.Command(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x3FFE && *(_BYTE *)(a1 + 18))
    return (*(_DWORD *)a1 + 16382);
  v3 = (*(_WORD *)(a1 + 16) & 0x3E00 | (*(unsigned __int16 *)(a1 + 16) >> 14) & 0xFFFFFE03 | (4
                                                                                            * (*(_WORD *)(a1 + 16) >> 1))) ^ 0x3FFF;
  if (v3 >= 0x3FFD)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingCommand.Command(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3;

  if (a2 > 0x3FFD)
  {
    *(_WORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 16382;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 18) = 1;
  }
  else
  {
    if (a3 >= 0x3FFE)
      *(_BYTE *)(result + 18) = 0;
    if (a2)
    {
      v3 = ((-a2 >> 2) & 0xFFF) - (a2 << 12);
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_WORD *)(result + 16) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_24009EC4C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int16 *)(a1 + 16);
  v2 = (__int16)v1;
  v3 = v1 >> 14;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_24009EC6C(uint64_t result)
{
  *(_WORD *)(result + 16) &= 0x3FFFu;
  return result;
}

uint64_t sub_24009EC7C(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_WORD *)(result + 16) = *(_WORD *)(result + 16) & 0x101 | ((_WORD)a2 << 14);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    *(_WORD *)(result + 16) = 0x8000;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command()
{
  return &type metadata for DKIntelligentTrackingCommand.Command;
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingCommand.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24009ED04 + 4 * byte_240157413[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24009ED38 + 4 * byte_24015740E[v4]))();
}

uint64_t sub_24009ED38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24009ED40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24009ED48);
  return result;
}

uint64_t sub_24009ED54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24009ED5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24009ED60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24009ED68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingCommand.Command.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24009EDD0 + 4 * byte_24015741D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24009EE04 + 4 * byte_240157418[v4]))();
}

uint64_t sub_24009EE04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24009EE0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24009EE14);
  return result;
}

uint64_t sub_24009EE20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24009EE28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24009EE2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24009EE34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.Command.CodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command.NoCommandCodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.Command.NoCommandCodingKeys;
}

uint64_t sub_24009EE6C()
{
  return 0;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command.VelocityCodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.Command.VelocityCodingKeys;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.Command.PositionCodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.Command.PositionCodingKeys;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingCommand.PositionCommand.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingCommand.PositionCommand.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24009EF70 + 4 * byte_240157427[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24009EFA4 + 4 * byte_240157422[v4]))();
}

uint64_t sub_24009EFA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24009EFAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24009EFB4);
  return result;
}

uint64_t sub_24009EFC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24009EFC8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24009EFCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24009EFD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.PositionCommand.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.PositionCommand.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKVector3.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s23IntelligentTrackingCore28DKIntelligentTrackingCommandC7CommandO18VelocityCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24009F080 + 4 * byte_24015742C[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24009F0A0 + 4 * byte_240157431[v4]))();
}

_BYTE *sub_24009F080(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24009F0A0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24009F0A8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24009F0B0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24009F0B8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24009F0C0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingCommand.VelocityCommand.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingCommand.VelocityCommand.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingState.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE7)
    goto LABEL_17;
  if (a2 + 25 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 25) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 25;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 25;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 25;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x1A;
  v8 = v6 - 26;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingState.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 25 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 25) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE6)
    return ((uint64_t (*)(void))((char *)&loc_24009F1B8 + 4 * byte_24015743B[v4]))();
  *a1 = a2 + 25;
  return ((uint64_t (*)(void))((char *)sub_24009F1EC + 4 * byte_240157436[v4]))();
}

uint64_t sub_24009F1EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24009F1F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24009F1FCLL);
  return result;
}

uint64_t sub_24009F208(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24009F210);
  *(_BYTE *)result = a2 + 25;
  return result;
}

uint64_t sub_24009F214(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24009F21C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingState.CodingKeys()
{
  return &type metadata for DKIntelligentTrackingState.CodingKeys;
}

unint64_t sub_24009F23C()
{
  unint64_t result;

  result = qword_256FB72F0;
  if (!qword_256FB72F0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015790C, &type metadata for DKIntelligentTrackingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB72F0);
  }
  return result;
}

unint64_t sub_24009F284()
{
  unint64_t result;

  result = qword_256FB72F8;
  if (!qword_256FB72F8)
  {
    result = MEMORY[0x24267E0BC](&unk_2401579C4, &type metadata for DKIntelligentTrackingCommand.VelocityCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB72F8);
  }
  return result;
}

unint64_t sub_24009F2CC()
{
  unint64_t result;

  result = qword_256FB7300;
  if (!qword_256FB7300)
  {
    result = MEMORY[0x24267E0BC](&unk_240157A7C, &type metadata for DKIntelligentTrackingCommand.PositionCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7300);
  }
  return result;
}

unint64_t sub_24009F314()
{
  unint64_t result;

  result = qword_256FB7308;
  if (!qword_256FB7308)
  {
    result = MEMORY[0x24267E0BC](&unk_240157B34, &type metadata for DKIntelligentTrackingCommand.Command.PositionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7308);
  }
  return result;
}

unint64_t sub_24009F35C()
{
  unint64_t result;

  result = qword_256FB7310;
  if (!qword_256FB7310)
  {
    result = MEMORY[0x24267E0BC](&unk_240157BEC, &type metadata for DKIntelligentTrackingCommand.Command.VelocityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7310);
  }
  return result;
}

unint64_t sub_24009F3A4()
{
  unint64_t result;

  result = qword_256FB7318;
  if (!qword_256FB7318)
  {
    result = MEMORY[0x24267E0BC](&unk_240157CF4, &type metadata for DKIntelligentTrackingCommand.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7318);
  }
  return result;
}

unint64_t sub_24009F3EC()
{
  unint64_t result;

  result = qword_256FB7320;
  if (!qword_256FB7320)
  {
    result = MEMORY[0x24267E0BC](&unk_240157DAC, &type metadata for DKIntelligentTrackingCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7320);
  }
  return result;
}

unint64_t sub_24009F434()
{
  unint64_t result;

  result = qword_256FB7328;
  if (!qword_256FB7328)
  {
    result = MEMORY[0x24267E0BC](&unk_240157D1C, &type metadata for DKIntelligentTrackingCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7328);
  }
  return result;
}

unint64_t sub_24009F47C()
{
  unint64_t result;

  result = qword_256FB7330;
  if (!qword_256FB7330)
  {
    result = MEMORY[0x24267E0BC](&unk_240157D44, &type metadata for DKIntelligentTrackingCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7330);
  }
  return result;
}

unint64_t sub_24009F4C4()
{
  unint64_t result;

  result = qword_256FB7338;
  if (!qword_256FB7338)
  {
    result = MEMORY[0x24267E0BC](&unk_240157C14, &type metadata for DKIntelligentTrackingCommand.Command.NoCommandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7338);
  }
  return result;
}

unint64_t sub_24009F50C()
{
  unint64_t result;

  result = qword_256FB7340;
  if (!qword_256FB7340)
  {
    result = MEMORY[0x24267E0BC](&unk_240157C3C, &type metadata for DKIntelligentTrackingCommand.Command.NoCommandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7340);
  }
  return result;
}

unint64_t sub_24009F554()
{
  unint64_t result;

  result = qword_256FB7348;
  if (!qword_256FB7348)
  {
    result = MEMORY[0x24267E0BC](&unk_240157B5C, &type metadata for DKIntelligentTrackingCommand.Command.VelocityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7348);
  }
  return result;
}

unint64_t sub_24009F59C()
{
  unint64_t result;

  result = qword_256FB7350;
  if (!qword_256FB7350)
  {
    result = MEMORY[0x24267E0BC](&unk_240157B84, &type metadata for DKIntelligentTrackingCommand.Command.VelocityCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7350);
  }
  return result;
}

unint64_t sub_24009F5E4()
{
  unint64_t result;

  result = qword_256FB7358;
  if (!qword_256FB7358)
  {
    result = MEMORY[0x24267E0BC](&unk_240157AA4, &type metadata for DKIntelligentTrackingCommand.Command.PositionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7358);
  }
  return result;
}

unint64_t sub_24009F62C()
{
  unint64_t result;

  result = qword_256FB7360;
  if (!qword_256FB7360)
  {
    result = MEMORY[0x24267E0BC](&unk_240157ACC, &type metadata for DKIntelligentTrackingCommand.Command.PositionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7360);
  }
  return result;
}

unint64_t sub_24009F674()
{
  unint64_t result;

  result = qword_256FB7368;
  if (!qword_256FB7368)
  {
    result = MEMORY[0x24267E0BC](&unk_240157C64, &type metadata for DKIntelligentTrackingCommand.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7368);
  }
  return result;
}

unint64_t sub_24009F6BC()
{
  unint64_t result;

  result = qword_256FB7370;
  if (!qword_256FB7370)
  {
    result = MEMORY[0x24267E0BC](&unk_240157C8C, &type metadata for DKIntelligentTrackingCommand.Command.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7370);
  }
  return result;
}

unint64_t sub_24009F704()
{
  unint64_t result;

  result = qword_256FB7378;
  if (!qword_256FB7378)
  {
    result = MEMORY[0x24267E0BC](&unk_2401579EC, &type metadata for DKIntelligentTrackingCommand.PositionCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7378);
  }
  return result;
}

unint64_t sub_24009F74C()
{
  unint64_t result;

  result = qword_256FB7380;
  if (!qword_256FB7380)
  {
    result = MEMORY[0x24267E0BC](&unk_240157A14, &type metadata for DKIntelligentTrackingCommand.PositionCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7380);
  }
  return result;
}

unint64_t sub_24009F794()
{
  unint64_t result;

  result = qword_256FB7388;
  if (!qword_256FB7388)
  {
    result = MEMORY[0x24267E0BC](&unk_240157934, &type metadata for DKIntelligentTrackingCommand.VelocityCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7388);
  }
  return result;
}

unint64_t sub_24009F7DC()
{
  unint64_t result;

  result = qword_256FB7390;
  if (!qword_256FB7390)
  {
    result = MEMORY[0x24267E0BC](&unk_24015795C, &type metadata for DKIntelligentTrackingCommand.VelocityCommand.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7390);
  }
  return result;
}

unint64_t sub_24009F824()
{
  unint64_t result;

  result = qword_256FB7398;
  if (!qword_256FB7398)
  {
    result = MEMORY[0x24267E0BC](&unk_240157844, &type metadata for DKIntelligentTrackingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7398);
  }
  return result;
}

unint64_t sub_24009F86C()
{
  unint64_t result;

  result = qword_256FB73A0;
  if (!qword_256FB73A0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015786C, &type metadata for DKIntelligentTrackingState.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB73A0);
  }
  return result;
}

uint64_t sub_24009F8B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  _QWORD *v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD v45[3];

  v4 = v3;
  v44 = a1;
  v7 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v7);
  v42 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v41 - v13;
  v15 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFacePrintTime) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastBodyPrintTime) = v15;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_unselectedTracks) = v15;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition) = 0;
  v16 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_selectedSubject;
  v17 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  v18 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime;
  v19 = sub_240154310();
  v43 = *(_QWORD *)(v19 - 8);
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
  v20(v18, 1, 1, v19);
  v20(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, 1, 1, v19);
  v20(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime, 1, 1, v19);
  v20(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, 1, 1, v19);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_flipClockwise) = 1;
  v21 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_presenceFilter;
  v20((uint64_t)v14, 1, 1, v19);
  type metadata accessor for DKBinaryProbabilityFilter();
  v22 = swift_allocObject();
  *(_BYTE *)(v22 + 49) = 0;
  *(_QWORD *)(v22 + 24) = 0x3FE0000000000000;
  sub_240070B90((uint64_t)v14, (uint64_t)v12, &qword_256FB4CC8);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  v23 = sub_240148668(0x3FE0000000000000, 0, 0x3FB999999999999ALL, 0, 0, (uint64_t)v12, 0, 1, 0.1, 0, 1);
  sub_240070BD4((uint64_t)v14, &qword_256FB4CC8);
  *(_QWORD *)(v22 + 16) = v23;
  *(_QWORD *)(v22 + 32) = 0x3FE8000000000000;
  *(_QWORD *)(v22 + 40) = 0x3FD0000000000000;
  *(_BYTE *)(v22 + 48) = 0;
  *(_QWORD *)(v4 + v21) = v22;
  sub_240154274();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals) = MEMORY[0x24BEE4B08];
  *(_BYTE *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastHorizontalFraming) = 0;
  v24 = (_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_appID);
  *v24 = 0;
  v24[1] = 0xE000000000000000;
  v25 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects) = MEMORY[0x24BEE4AF8];
  v26 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_trackingFPSTracker;
  type metadata accessor for DKFPSTracker();
  v27 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB73A8);
  v28 = swift_allocObject();
  *(_DWORD *)(v28 + 16) = 0;
  *(_QWORD *)(v27 + 16) = v28;
  *(_QWORD *)(v27 + 24) = v25;
  *(_QWORD *)(v4 + v26) = v27;
  v29 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_inputBuffer;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB73B0);
  v30 = (_QWORD *)swift_allocObject();
  v31 = swift_allocObject();
  *(_DWORD *)(v31 + 16) = 0;
  v30[2] = v31;
  v30[3] = v25;
  v30[4] = 1;
  *(_QWORD *)(v4 + v29) = v30;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_runSubjectSelection) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastCommand) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_config) = a2;
  v33 = v43;
  v32 = v44;
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
  v34(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time, v44, v19);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tf) = a3;
  type metadata accessor for DKMultiSubjectTrackerConfiguration();
  swift_allocObject();
  swift_retain();
  swift_retain();
  v35 = DKMultiSubjectTrackerConfiguration.init()();
  v36 = v42;
  sub_2400A09FC(v42);
  type metadata accessor for DKMultiSubjectTracker();
  swift_allocObject();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_tracker) = DKMultiSubjectTracker.init(configuration:camera:)((uint64_t)v35, v36);
  v34(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_startTime, v32, v19);
  v37 = *(_OWORD *)(a2 + 136);
  v45[0] = *(_OWORD *)(a2 + 120);
  v45[1] = v37;
  v45[2] = *(_OWORD *)(a2 + 152);
  type metadata accessor for DKAdaptiveFramerate();
  swift_allocObject();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_adaptiveFramerate) = sub_24015021C((double *)v45);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_currentPipelineMode) = *(_BYTE *)(a2 + 89);
  type metadata accessor for DKFramingEngine();
  swift_allocObject();
  v38 = swift_retain();
  v39 = sub_240122B70(v38);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v19);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_framingEngine) = v39;
  return v4;
}

uint64_t sub_24009FDD8()
{
  unint64_t v0;

  v0 = sub_240154F1C();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A)
    return 26;
  else
    return v0;
}

uint64_t sub_24009FE28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65766974616C6572 && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F69725068676968 && a2 == 0xEC00000079746972)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_24009FFF8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E616D6D6F436F6ELL && a2 == 0xE900000000000064;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469636F6C6576 && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2400A0158(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t DKCameraManager.imuEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_2400A0244()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 24);
  }
  else
  {
    type metadata accessor for DKIMUManager();
    v1 = swift_allocObject();
    *(_QWORD *)(v1 + 16) = 0;
    *(_QWORD *)(v1 + 24) = 0;
    *(_BYTE *)(v1 + 32) = 1;
    sub_2401544B4();
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDC1400]), sel_init);
    v3 = *(void **)(v1 + 16);
    *(_QWORD *)(v1 + 16) = v2;

    *(_QWORD *)(v0 + 24) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

id sub_2400A0324()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void sub_2400A032C(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + 32);
  *(_QWORD *)(v1 + 32) = a1;

}

uint64_t sub_2400A0338(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v4 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240080084(a1, (uint64_t)v6, v7);
  return sub_2400A0E30((uint64_t)v6, *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera);
}

uint64_t sub_2400A03C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240080084(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, a1, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
}

uint64_t sub_2400A03F0(uint64_t a1)
{
  uint64_t v1;

  return sub_2400A0E30(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera);
}

uint64_t (*sub_2400A0400())()
{
  return nullsub_1;
}

void sub_2400A0418(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera);
}

void sub_2400A042C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera + 1);
}

uint64_t DKCameraManager.__allocating_init(imuEnabled:camera:)(char a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  DKCameraManager.init(imuEnabled:camera:)(a1, a2);
  return v4;
}

uint64_t DKCameraManager.init(imuEnabled:camera:)(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v16 - v10;
  *(_QWORD *)(v3 + 24) = 0;
  *(_QWORD *)(v3 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDD1648]), sel_init);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_movingThreshold) = 0x3FB999999999999ALL;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_notMovingThreshold) = 0x3FA999999999999ALL;
  sub_2401544B4();
  *(_BYTE *)(v3 + 16) = a1;
  sub_240080084(a2, v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_240154304();
  v12 = sub_240154310();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  type metadata accessor for DKBinaryProbabilityFilter();
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 49) = 0;
  *(_QWORD *)(v13 + 24) = 0x3FE0000000000000;
  sub_24008BFDC((uint64_t)v11, (uint64_t)v8);
  type metadata accessor for DKSmoothingFilter();
  swift_allocObject();
  v14 = sub_240148668(0x3FE0000000000000, 0, 0x3FB999999999999ALL, 0, 0, (uint64_t)v8, 0, 1, 0.1, 0, 1);
  sub_240070BD4((uint64_t)v11, &qword_256FB4CC8);
  *(_QWORD *)(v13 + 16) = v14;
  *(_QWORD *)(v13 + 32) = 0x3FB999999999999ALL;
  *(_QWORD *)(v13 + 40) = 0x3FA999999999999ALL;
  *(_BYTE *)(v13 + 48) = 0;
  sub_2400800C8(a2, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_isMovingFilter) = v13;
  return v3;
}

id sub_2400A06E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  objc_msgSend(*(id *)(v1 + 32), sel_lock);
  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera;
  sub_2400800C8(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_240080084(a1, v3, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  return objc_msgSend(*(id *)(v1 + 32), sel_unlock);
}

uint64_t sub_2400A0754@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  double *v17;
  uint64_t v18;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for DKMotion3();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v3 + 16) & 1) == 0)
  {
    sub_240080084(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    sub_2400A0E74((uint64_t)&v14[*(int *)(v12 + 32)], a1, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
  }
  sub_2400A0244();
  sub_240124838((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_240070BD4((uint64_t)v7, &qword_256FB4438);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, 1, 1, v8);
  }
  sub_2400A0E74((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  if (*(_BYTE *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera) == 1)
    goto LABEL_13;
  v16 = *(int *)(v8 + 20);
  v17 = *(double **)&v11[v16];
  if (*((_QWORD *)v17 + 2) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v2 = v17[5];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      goto LABEL_8;
  }
  v17 = (double *)sub_24014CD20(v17);
LABEL_8:
  if (*((_QWORD *)v17 + 2) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v17[5] = -v2;
    *(_QWORD *)&v11[v16] = v17;
    v16 = *(int *)(v8 + 24);
    v17 = *(double **)&v11[v16];
    if (*((_QWORD *)v17 + 2) >= 2uLL)
    {
      v2 = v17[5];
      result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) != 0)
        goto LABEL_11;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_18:
  result = (uint64_t)sub_24014CD20(v17);
  v17 = (double *)result;
LABEL_11:
  if (*((_QWORD *)v17 + 2) >= 2uLL)
  {
    v17[5] = -v2;
    *(_QWORD *)&v11[v16] = v17;
LABEL_13:
    sub_240080084((uint64_t)v11, a1, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    return sub_2400800C8((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  }
  __break(1u);
  return result;
}

id sub_2400A09FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  double v20;
  float64x2_t *v21;
  uint64_t v22;
  float64x2_t v23;
  float64x2_t v24;
  unint64_t v25;
  double *v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v33;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DKMotion3();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(*(id *)(v1 + 32), sel_lock);
  sub_240080084(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_2400A0754((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    sub_2400A0E74((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
    sub_2400A0EB8((uint64_t)v13, (uint64_t)&v16[*(int *)(v14 + 32)]);
    v17 = *(_QWORD *)&v13[*(int *)(v10 + 24)];
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      if (v18 >= 4)
      {
        v19 = v18 & 0x7FFFFFFFFFFFFFFCLL;
        v21 = (float64x2_t *)(v17 + 48);
        v20 = 0.0;
        v22 = v18 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          v23 = vmulq_f64(v21[-1], v21[-1]);
          v24 = vmulq_f64(*v21, *v21);
          v20 = v20 + v23.f64[0] + v23.f64[1] + v24.f64[0] + v24.f64[1];
          v21 += 2;
          v22 -= 4;
        }
        while (v22);
        if (v18 == v19)
          goto LABEL_12;
      }
      else
      {
        v19 = 0;
        v20 = 0.0;
      }
      v25 = v18 - v19;
      v26 = (double *)(v17 + 8 * v19 + 32);
      do
      {
        v27 = *v26++;
        v20 = v20 + v27 * v27;
        --v25;
      }
      while (v25);
    }
    else
    {
      v20 = 0.0;
    }
LABEL_12:
    v28 = sqrt(v20);
    swift_retain();
    sub_2401542F8();
    v29 = sub_240154310();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v6, 0, 1, v29);
    swift_retain();
    sub_240148324(0, 1, (uint64_t)v6, v28);
    swift_release();
    swift_release();
    sub_240070BD4((uint64_t)v6, &qword_256FB4CC8);
    v30 = sub_24008C168();
    sub_2400800C8((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
    v31 = *(_BYTE *)(v30 + 16);
    swift_release();
    v16[*(int *)(v14 + 36)] = (v31 & 1) == 0;
    goto LABEL_13;
  }
  sub_240070BD4((uint64_t)v9, &qword_256FB4438);
LABEL_13:
  sub_2400A0E74((uint64_t)v16, a1, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  return objc_msgSend(*(id *)(v2 + 32), sel_unlock);
}

uint64_t DKCameraManager.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  sub_2400800C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKCameraManager.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();

  sub_2400800C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2400A0E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKCamera();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400A0E74(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2400A0EB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400A0EFC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  return swift_retain();
}

uint64_t sub_2400A0F0C(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 24) = *a1;
  swift_retain();
  return swift_release();
}

id sub_2400A0F3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*(_QWORD *)a1 + 32);
  *a2 = v2;
  return v2;
}

void sub_2400A0F4C(void **a1, uint64_t a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*(_QWORD *)a2 + 32);
  *(_QWORD *)(*(_QWORD *)a2 + 32) = *a1;
  v3 = v2;

}

uint64_t sub_2400A0F80@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240080084(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKCameraManager_camera, a2, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
}

uint64_t sub_2400A0FB4()
{
  return type metadata accessor for DKCameraManager();
}

uint64_t type metadata accessor for DKCameraManager()
{
  uint64_t result;

  result = qword_256FB7400;
  if (!qword_256FB7400)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2400A0FF8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for DKCamera();
  if (v1 <= 0x3F)
  {
    result = sub_2401544C0();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKCameraManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKCameraManager.cachedImuManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKCameraManager.cachedImuManager.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKCameraManager.cachedImuManager.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKCameraManager.imuManager.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKCameraManager.lock.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKCameraManager.lock.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKCameraManager.lock.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKCameraManager.camera.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKCameraManager.camera.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKCameraManager.camera.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKCameraManager.port.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKCameraManager.cameraOrientation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKCameraManager.__allocating_init(imuEnabled:camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t dispatch thunk of DKCameraManager.update(camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKCameraManager.getCamera()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t sub_2400A117C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  v2 = sub_240154310();
  v1[3] = v2;
  v1[4] = *(_QWORD *)(v2 - 8);
  v1[5] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v1[6] = swift_task_alloc();
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2400A121C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition);
  if (v3)
  {
    v4 = OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupCommandIssued;
    if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupCommandIssued) & 1) == 0)
    {
      v5 = *(_QWORD *)(v0 + 64);
      v6 = *(_QWORD *)(v0 + 24);
      v7 = *(_QWORD *)(v0 + 32);
      sub_24008BFDC(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, v5);
      v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6);
      v9 = *(_QWORD *)(v0 + 64);
      if (v8 == 1)
      {
        sub_240077EAC(*(_QWORD *)(v0 + 64));
      }
      else
      {
        v11 = *(_QWORD *)(v0 + 32);
        v10 = *(_QWORD *)(v0 + 40);
        v13 = *(_QWORD *)(v0 + 16);
        v12 = *(_QWORD *)(v0 + 24);
        swift_bridgeObjectRetain();
        sub_240077EAC(v9);
        *(_BYTE *)(v1 + v4) = 1;
        v14 = *(_QWORD *)(v13 + 48);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v14 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v12);
        type metadata accessor for DKIntelligentTrackingCommand(0);
        v15 = swift_allocObject();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v10, v12);
        v16 = v15 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
        *(_QWORD *)v16 = v3;
        *(_QWORD *)(v16 + 8) = 0x4000000000000000;
        *(_WORD *)(v16 + 16) = 0x4000;
        *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = v15;
        swift_release();
      }
    }
  }
  v17 = *(_QWORD *)(v0 + 56);
  v18 = *(_QWORD *)(v0 + 24);
  v19 = *(_QWORD *)(v0 + 32);
  sub_24008BFDC(*(_QWORD *)(v1 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, v17);
  LODWORD(v18) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18);
  sub_240077EAC(v17);
  if ((_DWORD)v18 == 1)
  {
    v20 = *(_QWORD *)(v0 + 48);
    v21 = *(_QWORD *)(v0 + 24);
    v22 = *(_QWORD *)(v0 + 32);
    v23 = *(_QWORD *)(v1 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48)+ OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
    sub_24008FCD4(v20, v23 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_2400A1458()
{
  uint64_t v0;

  return sub_240077EAC(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupTime);
}

uint64_t sub_2400A1468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_240077EAC(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKStartupTask_startupTime);
  return swift_deallocClassInstance();
}

uint64_t sub_2400A14EC()
{
  return type metadata accessor for DKStartupTask();
}

uint64_t type metadata accessor for DKStartupTask()
{
  uint64_t result;

  result = qword_256FB7590;
  if (!qword_256FB7590)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2400A1530()
{
  unint64_t v0;

  sub_2400A15A8();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_2400A15A8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256FB69E0)
  {
    sub_240154310();
    v0 = sub_240154A30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256FB69E0);
  }
}

uint64_t sub_2400A15FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid;
  v4 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_2400A1674()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  unint64_t v3;
  unint64_t v4;
  int64_t v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  unint64_t v16;
  unint64_t v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  char *v27;
  unint64_t v28;
  unint64_t v29;
  char *v30;
  unint64_t v31;
  unint64_t v32;
  char *v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  unint64_t v37;
  char *v38;

  v1 = v0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_QWORD *)(v0 + 24) = 0;
  *(_OWORD *)(v0 + 32) = xmmword_240158100;
  *(_BYTE *)(v0 + 56) = 0;
  v2 = sub_240077F0C(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v4 = *((_QWORD *)v2 + 2);
  v3 = *((_QWORD *)v2 + 3);
  v5 = v3 >> 1;
  v6 = v4 + 1;
  if (v3 >> 1 <= v4)
  {
    v2 = sub_240077F0C((char *)(v3 > 1), v4 + 1, 1, v2);
    v3 = *((_QWORD *)v2 + 3);
    v5 = v3 >> 1;
  }
  *((_QWORD *)v2 + 2) = v6;
  v7 = &v2[3 * v4];
  *((_WORD *)v7 + 16) = 256;
  v7[34] = 0;
  v8 = v4 + 2;
  if (v5 < (uint64_t)(v4 + 2))
    v2 = sub_240077F0C((char *)(v3 > 1), v4 + 2, 1, v2);
  *((_QWORD *)v2 + 2) = v8;
  v9 = &v2[3 * v6];
  *((_WORD *)v9 + 16) = 513;
  v9[34] = 1;
  v10 = *((_QWORD *)v2 + 3);
  v11 = v4 + 3;
  if ((uint64_t)(v4 + 3) > (uint64_t)(v10 >> 1))
    v2 = sub_240077F0C((char *)(v10 > 1), v4 + 3, 1, v2);
  *((_QWORD *)v2 + 2) = v11;
  v12 = &v2[3 * v8];
  *((_WORD *)v12 + 16) = 1;
  v12[34] = 2;
  v13 = *((_QWORD *)v2 + 3);
  v14 = v4 + 4;
  if ((uint64_t)(v4 + 4) > (uint64_t)(v13 >> 1))
    v2 = sub_240077F0C((char *)(v13 > 1), v4 + 4, 1, v2);
  *((_QWORD *)v2 + 2) = v14;
  v15 = &v2[3 * v11];
  *((_WORD *)v15 + 16) = 770;
  v15[34] = 3;
  v16 = *((_QWORD *)v2 + 3);
  v17 = v4 + 5;
  if ((uint64_t)(v4 + 5) > (uint64_t)(v16 >> 1))
    v2 = sub_240077F0C((char *)(v16 > 1), v4 + 5, 1, v2);
  *((_QWORD *)v2 + 2) = v17;
  v18 = &v2[3 * v14];
  *((_WORD *)v18 + 16) = 2;
  v18[34] = 2;
  v19 = *((_QWORD *)v2 + 3);
  v20 = v4 + 6;
  if ((uint64_t)(v4 + 6) > (uint64_t)(v19 >> 1))
    v2 = sub_240077F0C((char *)(v19 > 1), v4 + 6, 1, v2);
  *((_QWORD *)v2 + 2) = v20;
  v21 = &v2[3 * v17];
  *((_WORD *)v21 + 16) = 1027;
  v21[34] = 4;
  v22 = *((_QWORD *)v2 + 3);
  v23 = v4 + 7;
  if ((uint64_t)(v4 + 7) > (uint64_t)(v22 >> 1))
    v2 = sub_240077F0C((char *)(v22 > 1), v4 + 7, 1, v2);
  *((_QWORD *)v2 + 2) = v23;
  v24 = &v2[3 * v20];
  *((_WORD *)v24 + 16) = 259;
  v24[34] = 2;
  v25 = *((_QWORD *)v2 + 3);
  v26 = v4 + 8;
  if ((uint64_t)(v4 + 8) > (uint64_t)(v25 >> 1))
    v2 = sub_240077F0C((char *)(v25 > 1), v4 + 8, 1, v2);
  *((_QWORD *)v2 + 2) = v26;
  v27 = &v2[3 * v23];
  *((_WORD *)v27 + 16) = 3;
  v27[34] = 6;
  v28 = *((_QWORD *)v2 + 3);
  v29 = v4 + 9;
  if ((uint64_t)(v4 + 9) > (uint64_t)(v28 >> 1))
    v2 = sub_240077F0C((char *)(v28 > 1), v4 + 9, 1, v2);
  *((_QWORD *)v2 + 2) = v29;
  v30 = &v2[3 * v26];
  *((_WORD *)v30 + 16) = 515;
  v30[34] = 5;
  v31 = *((_QWORD *)v2 + 3);
  v32 = v4 + 10;
  if ((uint64_t)(v4 + 10) > (uint64_t)(v31 >> 1))
    v2 = sub_240077F0C((char *)(v31 > 1), v4 + 10, 1, v2);
  *((_QWORD *)v2 + 2) = v32;
  v33 = &v2[3 * v29];
  *((_WORD *)v33 + 16) = 516;
  v33[34] = 2;
  v34 = *((_QWORD *)v2 + 3);
  v35 = v4 + 11;
  if ((uint64_t)(v4 + 11) > (uint64_t)(v34 >> 1))
    v2 = sub_240077F0C((char *)(v34 > 1), v4 + 11, 1, v2);
  *((_QWORD *)v2 + 2) = v35;
  v36 = &v2[3 * v32];
  *((_WORD *)v36 + 16) = 516;
  v36[34] = 5;
  v37 = *((_QWORD *)v2 + 3);
  if ((uint64_t)(v4 + 12) > (uint64_t)(v37 >> 1))
    v2 = sub_240077F0C((char *)(v37 > 1), v4 + 12, 1, v2);
  *((_QWORD *)v2 + 2) = v4 + 12;
  v38 = &v2[3 * v35];
  *((_WORD *)v38 + 16) = 4;
  v38[34] = 6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7938);
  swift_allocObject();
  *(_QWORD *)(v1 + 48) = sub_24006FF18(0, (uint64_t)v2);
  return v1;
}

uint64_t sub_2400A1A8C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t i;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, char *);
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t result;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  void (*v54)(char *, uint64_t, uint64_t);
  unint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  unint64_t v63;

  v3 = v1;
  v5 = sub_24015434C();
  v59 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v61 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = sub_240154310();
  v60 = *(_QWORD *)(v62 - 8);
  MEMORY[0x24BDAC7A8](v62);
  v58 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v53 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v53 - v12;
  v14 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects;
  v15 = *(_QWORD *)(a1
                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSelectedSubjects);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    v21 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (!v21)
      goto LABEL_46;
  }
  else if (!*(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_46:
    v51 = v3[6];
    v52 = *(void **)(v51 + 32);
    swift_retain();
    objc_msgSend(v52, sel_lock);
    *(_BYTE *)(v51 + 16) = 0;
    objc_msgSend(v52, sel_unlock);
    swift_release();
    v3[2] = 0;
    swift_release();
    v3[3] = 0;
    return swift_release();
  }
  v57 = v10;
  v16 = *(_QWORD *)(a1 + v14);
  v63 = MEMORY[0x24BEE4AF8];
  if ((unint64_t)v16 >> 62)
  {
    if (v16 < 0)
      v15 = v16;
    else
      v15 = v16 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v17 = sub_240154D30();
    if (v17)
      goto LABEL_5;
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v17)
    goto LABEL_23;
LABEL_5:
  if (v17 < 1)
  {
    __break(1u);
    goto LABEL_48;
  }
  v56 = (void (*)(char *, uint64_t, uint64_t))v5;
  if ((v16 & 0xC000000000000001) != 0)
  {
    for (i = 0; i != v17; ++i)
    {
      if (*(_QWORD *)(*(_QWORD *)(MEMORY[0x24267D4E0](i, v16)
                                 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                     + 16) == -1)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_240154BE0();
        sub_240154C10();
        sub_240154C1C();
        sub_240154BEC();
      }
    }
  }
  else
  {
    v19 = 0;
    v20 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
    do
    {
      if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v16 + 8 * v19 + 32) + v20) + 16) != -1)
      {
        swift_retain();
        sub_240154BE0();
        sub_240154C10();
        sub_240154C1C();
        sub_240154BEC();
        v20 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence;
      }
      ++v19;
    }
    while (v17 != v19);
  }
  swift_bridgeObjectRelease();
  v5 = (uint64_t)v56;
LABEL_24:
  v22 = v63;
  swift_bridgeObjectRetain();
  if ((v22 & 0x8000000000000000) != 0 || (v23 = (_QWORD *)v22, (v22 & 0x4000000000000000) != 0))
  {
    v23 = sub_24013FEBC(v22);
    swift_release();
  }
  v63 = (unint64_t)v23;
  sub_2400A451C((uint64_t *)&v63);
  swift_release();
  v15 = v63;
  if ((v63 & 0x8000000000000000) == 0 && (v63 & 0x4000000000000000) == 0)
  {
    v24 = *(_QWORD *)(v63 + 16);
    if (v24)
      goto LABEL_29;
    goto LABEL_45;
  }
  swift_bridgeObjectRetain();
  v24 = sub_240154D30();
  swift_release();
  if (!v24)
  {
LABEL_45:
    swift_release();
    goto LABEL_46;
  }
LABEL_29:
  if (v24 == 1)
  {
    v25 = v3[6];
    v26 = *(void **)(v25 + 32);
    swift_retain();
    objc_msgSend(v26, sel_lock);
    *(_BYTE *)(v25 + 16) = 2;
    objc_msgSend(v26, sel_unlock);
    swift_release();
    v2 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v13, a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time, v62);
    if ((v15 & 0xC000000000000001) == 0)
    {
      if (*(_QWORD *)(v15 + 16))
      {
        v27 = *(_QWORD *)(v15 + 32);
        swift_retain();
LABEL_33:
        swift_release();
        v28 = v59;
        v29 = v61;
        (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v61, v27 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v5);
        swift_release();
        type metadata accessor for LegacySubjectSelection.TrackInfo();
        v30 = swift_allocObject();
        (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v30 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v13, v62);
        (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v29, v5);
        v3[2] = v30;
        swift_release();
        v3[3] = 0;
        return swift_release();
      }
      __break(1u);
      goto LABEL_51;
    }
LABEL_48:
    v27 = MEMORY[0x24267D4E0](0, v15);
    goto LABEL_33;
  }
  v31 = v3[6];
  v32 = *(void **)(v31 + 32);
  swift_retain();
  objc_msgSend(v32, sel_lock);
  *(_BYTE *)(v31 + 16) = 4;
  objc_msgSend(v32, sel_unlock);
  swift_release();
  v33 = a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time;
  v34 = v60;
  v35 = *(void (**)(char *, uint64_t, uint64_t))(v60 + 16);
  v35(v57, a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time, v62);
  v55 = v15 & 0xC000000000000001;
  v56 = v35;
  if ((v15 & 0xC000000000000001) != 0)
  {
    v36 = MEMORY[0x24267D4E0](0, v15);
  }
  else
  {
    if (!*(_QWORD *)(v15 + 16))
    {
LABEL_51:
      __break(1u);
      goto LABEL_52;
    }
    v36 = *(_QWORD *)(v15 + 32);
    swift_retain();
  }
  v37 = v59;
  v38 = v61;
  v54 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
  v54(v61, v36 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v5);
  swift_release();
  type metadata accessor for LegacySubjectSelection.TrackInfo();
  v39 = swift_allocObject();
  v40 = *(void (**)(uint64_t, char *, uint64_t))(v34 + 32);
  v41 = v62;
  v40(v39 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v57, v62);
  v42 = v5;
  v43 = *(void (**)(uint64_t, char *))(v37 + 32);
  v44 = v38;
  v45 = v42;
  v43(v39 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v44);
  v3[2] = v39;
  swift_release();
  v46 = v58;
  v56(v58, v33, v41);
  if (v55)
  {
    v47 = MEMORY[0x24267D4E0](1, v15);
LABEL_41:
    swift_release();
    v48 = v61;
    v54(v61, v47 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v45);
    swift_release();
    v49 = swift_allocObject();
    v40(v49 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_startTime, v46, v62);
    ((void (*)(uint64_t, char *, uint64_t))v43)(v49 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid, v48, v45);
    v3[3] = v49;
    return swift_release();
  }
  if (*(_QWORD *)(v15 + 16) >= 2uLL)
  {
    v47 = *(_QWORD *)(v15 + 40);
    swift_retain();
    goto LABEL_41;
  }
LABEL_52:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

void sub_2400A2198(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD v28[14];

  v5 = sub_240154310();
  v28[10] = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v28[9] = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v28[11] = (char *)v28 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v9);
  MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  v28[13] = 0;
  v13 = sub_24015434C();
  MEMORY[0x24BDAC7A8](v13);
  MEMORY[0x24BDAC7A8](v14);
  MEMORY[0x24BDAC7A8](v15);
  MEMORY[0x24BDAC7A8](v16);
  MEMORY[0x24BDAC7A8](v17);
  v28[12] = a1;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople))
  {
    v28[3] = v19;
    v28[4] = v20;
    v28[6] = v21;
    v28[7] = v23;
    v28[2] = v22;
    v28[5] = v5;
    v28[8] = v18;
    v24 = *(_BYTE *)(v2 + 56);
    swift_bridgeObjectRetain();
    if ((v24 & 1) == 0)
    {
      sub_2400A1A8C(a2);
      *(_BYTE *)(v2 + 56) = 1;
    }
    v25 = *(_QWORD *)(v2 + 48);
    v26 = *(void **)(v25 + 32);
    swift_retain();
    objc_msgSend(v26, sel_lock);
    v27 = *(unsigned __int8 *)(v25 + 16);
    objc_msgSend(v26, sel_unlock);
    swift_release();
    __asm { BR              X9 }
  }
}

uint64_t sub_2400A336C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t i;
  uint64_t v37;
  double v38;
  void (*v39)(unint64_t, uint64_t, uint64_t);
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  CGFloat v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  double v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  unint64_t v56;
  CGRect v57;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DKMotion3();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v11);
  v50 = (uint64_t)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v49 - v14;
  v16 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
  if (v16)
  {
    v51 = v8;
    v17 = sub_24015434C();
    v55 = *(_QWORD *)(v17 - 8);
    v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
    v18(v15, 1, 1, v17);
    v56 = v16;
    if (v16 >> 62)
      goto LABEL_36;
    v19 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain_n();
LABEL_4:
    v53 = v17;
    v54 = v15;
    v49 = a2;
    v52 = v18;
    if (v19)
    {
      if (v19 >= 1)
      {
        v21 = 0;
        v18 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v56;
        a2 = v56 & 0xC000000000000001;
        v22 = INFINITY;
        v17 = v51;
        while (1)
        {
          if (a2)
          {
            v15 = (char *)MEMORY[0x24267D4E0](v21, v18);
          }
          else
          {
            v15 = (char *)*((_QWORD *)v18 + v21 + 4);
            swift_retain();
          }
          sub_240070B90((uint64_t)&v15[OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_motion], (uint64_t)v6, &qword_256FB4438);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v6, 1, v7) == 1)
          {
            swift_release();
            sub_240070BD4((uint64_t)v6, &qword_256FB4438);
          }
          else
          {
            sub_2400A4FB4((uint64_t)v6, (uint64_t)v10);
            v23 = *(_QWORD *)&v10[*(int *)(v7 + 20)];
            if (*(_QWORD *)(v23 + 16) < 3uLL)
            {
              __break(1u);
LABEL_36:
              swift_bridgeObjectRetain_n();
              result = sub_240154D30();
              v19 = result;
              goto LABEL_4;
            }
            v24 = *(double *)(v23 + 48);
            if (v24 < v22 && v15[OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection] == 3)
            {
              sub_2400A4FF8((uint64_t)v10);
              v25 = (uint64_t)v54;
              sub_240070BD4((uint64_t)v54, &qword_256FB5DE8);
              v26 = v53;
              (*(void (**)(uint64_t, char *, uint64_t))(v55 + 16))(v25, &v15[OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid], v53);
              swift_release();
              v27 = v25;
              v17 = v51;
              v28 = v26;
              v18 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v56;
              v52((char *)v27, 0, 1, v28);
              v22 = v24;
            }
            else
            {
              sub_2400A4FF8((uint64_t)v10);
              swift_release();
            }
          }
          if (v19 == ++v21)
            goto LABEL_20;
        }
      }
      __break(1u);
      __break(1u);
    }
    else
    {
      v22 = INFINITY;
LABEL_20:
      swift_bridgeObjectRelease();
      v30 = (uint64_t)v54;
      v31 = v50;
      sub_240070B90((uint64_t)v54, v50, &qword_256FB5DE8);
      v32 = v55;
      v33 = v53;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v31, 1, v53) == 1)
      {
        sub_240070BD4(v31, &qword_256FB5DE8);
        v34 = v49;
        v35 = v52;
        if (v19)
        {
          if ((v56 & 0xC000000000000001) != 0)
          {
            for (i = 0; i != v19; ++i)
            {
              v37 = MEMORY[0x24267D4E0](i, v56);
              v38 = fabs(CGRectGetMidX(*(CGRect *)(v37+ OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect))+ -0.5);
              if (v38 < v22)
              {
                sub_240070BD4(v30, &qword_256FB5DE8);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v30, v37 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v33);
                swift_unknownObjectRelease();
                v35((char *)v30, 0, 1, v33);
                v22 = v38;
              }
              else
              {
                swift_unknownObjectRelease();
              }
            }
          }
          else
          {
            v41 = (uint64_t *)(v56 + 32);
            do
            {
              v42 = *v41;
              v43 = *v41 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect;
              v44 = *(double *)v43;
              v45 = *(double *)(v43 + 8);
              v46 = *(double *)(v43 + 16);
              v47 = *(double *)(v43 + 24);
              swift_retain();
              v57.origin.x = v44;
              v57.origin.y = v45;
              v57.size.width = v46;
              v57.size.height = v47;
              v48 = fabs(CGRectGetMidX(v57) + -0.5);
              if (v48 >= v22)
              {
                swift_release();
              }
              else
              {
                sub_240070BD4(v30, &qword_256FB5DE8);
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 16))(v30, v42 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v33);
                swift_release();
                v35((char *)v30, 0, 1, v33);
                v22 = v48;
              }
              ++v41;
              --v19;
            }
            while (v19);
          }
        }
        swift_bridgeObjectRelease();
        return sub_2400A4F6C(v30, v34);
      }
      else
      {
        sub_240070BD4(v30, &qword_256FB5DE8);
        swift_bridgeObjectRelease();
        v39 = *(void (**)(unint64_t, uint64_t, uint64_t))(v32 + 32);
        v40 = v49;
        v39(v49, v31, v33);
        return ((uint64_t (*)(unint64_t, _QWORD, uint64_t, uint64_t))v52)(v40, 0, 1, v33);
      }
    }
  }
  else
  {
    v29 = sub_24015434C();
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(a2, 1, 1, v29);
  }
  return result;
}

uint64_t sub_2400A3950@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  CGRect *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CGRect *v20;
  double MidX;
  double v22;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  double v30;
  CGFloat v31;
  double v32;
  double MidY;
  CGFloat v34;
  double v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  double v39;
  uint64_t v40;
  uint64_t v41;
  CGFloat v42;
  CGFloat v43;
  CGFloat v44;
  CGFloat v45;
  double v46;
  double v47;
  CGFloat v48;
  CGFloat v49;
  CGFloat v50;
  CGFloat v51;
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  double v57;
  double v58;
  CGFloat v59;
  double v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(char *, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  double v66;
  CGFloat v67;
  double v68;
  CGRect v69;
  CGRect v70;
  CGRect v71;
  CGRect v72;
  CGRect v73;
  CGRect v74;
  CGRect v75;
  CGRect v76;
  CGRect v77;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v62 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_trackedPeople);
  if (!v10)
    goto LABEL_17;
  MEMORY[0x24BDAC7A8](v7);
  *(&v62 - 2) = a2;
  swift_bridgeObjectRetain();
  v11 = sub_2400906AC(sub_2400A4F50, (uint64_t)(&v62 - 4), v10);
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_17:
    v37 = sub_24015434C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(a3, 1, 1, v37);
  }
  v12 = v11;
  v62 = a3;
  v13 = sub_24015434C();
  v64 = *(_QWORD *)(v13 - 8);
  v65 = v13;
  v63 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 56);
  result = v63(v9, 1, 1);
  if (!(v10 >> 62))
  {
    v15 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15)
      goto LABEL_5;
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return sub_2400A4F6C((uint64_t)v9, v62);
  }
  swift_bridgeObjectRetain();
  v15 = sub_240154D30();
  result = swift_bridgeObjectRelease();
  if (!v15)
    goto LABEL_29;
LABEL_5:
  if (v15 >= 1)
  {
    v16 = (CGRect *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
    v17 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_faceDirection;
    if ((v10 & 0xC000000000000001) != 0)
    {
      v18 = 0;
      v66 = INFINITY;
      do
      {
        v19 = MEMORY[0x24267D4E0](v18, v10);
        v20 = (CGRect *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect);
        MidX = CGRectGetMidX(*(CGRect *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect));
        if (CGRectGetMidX(*v16) >= MidX || *(_BYTE *)(v12 + v17) != 2)
        {
          v22 = CGRectGetMidX(*v20);
          if (v22 >= CGRectGetMidX(*v16) || *(_BYTE *)(v12 + v17) != 1)
            goto LABEL_8;
        }
        x = v16->origin.x;
        y = v16->origin.y;
        width = v16->size.width;
        height = v16->size.height;
        v27 = v20->origin.x;
        v28 = v20->origin.y;
        v29 = v20->size.width;
        v67 = v20->size.height;
        v68 = v27;
        v69.origin.x = x;
        v69.origin.y = y;
        v69.size.width = width;
        v69.size.height = height;
        v30 = CGRectGetMidX(v69);
        v70.origin.x = v27;
        v70.origin.y = v28;
        v70.size.width = v29;
        v31 = v67;
        v70.size.height = v67;
        v32 = v30 - CGRectGetMidX(v70);
        v71.origin.x = x;
        v71.origin.y = y;
        v71.size.width = width;
        v71.size.height = height;
        MidY = CGRectGetMidY(v71);
        v72.origin.x = v68;
        v72.origin.y = v28;
        v72.size.width = v29;
        v72.size.height = v31;
        v34 = CGRectGetMidY(v72);
        v35 = sqrt(v32 * v32 + (MidY - v34) * (MidY - v34));
        if (v35 < v66)
        {
          sub_240070BD4((uint64_t)v9, &qword_256FB5DE8);
          v36 = v65;
          (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v9, v19 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v65);
          swift_unknownObjectRelease();
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v63)(v9, 0, 1, v36);
          v66 = v35;
        }
        else
        {
LABEL_8:
          swift_unknownObjectRelease();
        }
        ++v18;
      }
      while (v15 != v18);
    }
    else
    {
      v38 = (uint64_t *)(v10 + 32);
      v39 = INFINITY;
      do
      {
        v68 = v39;
        v40 = *v38;
        v41 = *v38 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rect;
        v42 = *(double *)v41;
        v43 = *(double *)(v41 + 8);
        v44 = *(double *)(v41 + 16);
        v45 = *(double *)(v41 + 24);
        swift_retain();
        v73.origin.x = v42;
        v73.origin.y = v43;
        v73.size.width = v44;
        v73.size.height = v45;
        v46 = CGRectGetMidX(v73);
        if (CGRectGetMidX(*v16) < v46 && *(_BYTE *)(v12 + v17) == 2
          || (v47 = CGRectGetMidX(*(CGRect *)v41), v47 < CGRectGetMidX(*v16)) && *(_BYTE *)(v12 + v17) == 1)
        {
          v48 = v16->origin.x;
          v49 = v16->origin.y;
          v50 = v16->size.width;
          v51 = v16->size.height;
          v52 = *(double *)v41;
          v53 = *(double *)(v41 + 8);
          v54 = *(double *)(v41 + 16);
          v66 = *(double *)(v41 + 24);
          v67 = v52;
          v74.origin.x = v48;
          v74.origin.y = v49;
          v74.size.width = v50;
          v74.size.height = v51;
          v55 = CGRectGetMidX(v74);
          v75.origin.x = v52;
          v75.origin.y = v53;
          v75.size.width = v54;
          v56 = v66;
          v75.size.height = v66;
          v57 = v55 - CGRectGetMidX(v75);
          v76.origin.x = v48;
          v76.origin.y = v49;
          v76.size.width = v50;
          v76.size.height = v51;
          v58 = CGRectGetMidY(v76);
          v77.origin.x = v67;
          v77.origin.y = v53;
          v77.size.width = v54;
          v77.size.height = v56;
          v59 = CGRectGetMidY(v77);
          v39 = sqrt(v57 * v57 + (v58 - v59) * (v58 - v59));
          v60 = v68;
          if (v39 >= v68)
          {
            swift_release();
            v39 = v60;
          }
          else
          {
            sub_240070BD4((uint64_t)v9, &qword_256FB5DE8);
            v61 = v65;
            (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v9, v40 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v65);
            swift_release();
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v63)(v9, 0, 1, v61);
          }
        }
        else
        {
          swift_release();
          v39 = v68;
        }
        ++v38;
        --v15;
      }
      while (v15);
    }
    goto LABEL_29;
  }
  __break(1u);
  return result;
}

uint64_t sub_2400A3E78(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v9;

  v2 = sub_24015434C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v3 + 16))(v6, *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v2, v4);
  v7 = sub_240154328();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v7 & 1;
}

uint64_t sub_2400A3F34()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacySubjectSelection()
{
  return objc_opt_self();
}

uint64_t sub_2400A3F88()
{
  return type metadata accessor for LegacySubjectSelection.TrackInfo();
}

uint64_t type metadata accessor for LegacySubjectSelection.TrackInfo()
{
  uint64_t result;

  result = qword_256FB7868;
  if (!qword_256FB7868)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2400A3FCC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = sub_24015434C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LegacySubjectSelection.Event(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LegacySubjectSelection.Event(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2400A4130 + 4 * byte_24015811A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2400A4164 + 4 * byte_240158115[v4]))();
}

uint64_t sub_2400A4164(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400A416C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400A4174);
  return result;
}

uint64_t sub_2400A4180(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400A4188);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2400A418C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400A4194(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacySubjectSelection.Event()
{
  return &type metadata for LegacySubjectSelection.Event;
}

uint64_t storeEnumTagSinglePayload for LegacySubjectSelection.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2400A41FC + 4 * byte_240158124[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2400A4230 + 4 * byte_24015811F[v4]))();
}

uint64_t sub_2400A4230(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400A4238(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400A4240);
  return result;
}

uint64_t sub_2400A424C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400A4254);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2400A4258(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400A4260(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LegacySubjectSelection.State()
{
  return &type metadata for LegacySubjectSelection.State;
}

unint64_t sub_2400A4280()
{
  unint64_t result;

  result = qword_256FB7928;
  if (!qword_256FB7928)
  {
    result = MEMORY[0x24267E0BC](&unk_2401581D0, &type metadata for LegacySubjectSelection.State);
    atomic_store(result, (unint64_t *)&qword_256FB7928);
  }
  return result;
}

unint64_t sub_2400A42C8()
{
  unint64_t result;

  result = qword_256FB7930;
  if (!qword_256FB7930)
  {
    result = MEMORY[0x24267E0BC](&unk_240158238, &type metadata for LegacySubjectSelection.Event);
    atomic_store(result, (unint64_t *)&qword_256FB7930);
  }
  return result;
}

uint64_t sub_2400A430C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;

  v2 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v2 + 16))
    return 0;
  result = sub_24013EF58(*(unsigned __int8 *)(a1 + 16));
  if ((v6 & 1) == 0)
    return 0;
  v7 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * result);
  v8 = *(_QWORD *)(v7 + 16);
  if (!v8)
    return 0;
  v9 = 0;
  v10 = *(_QWORD *)(a2 + 16);
  v11 = v7 + 32;
  while (1)
  {
    if (v10)
    {
      v12 = *(unsigned __int8 *)(v11 + 3 * v9 + 2);
      if (*(unsigned __int8 *)(a2 + 32) == v12)
        goto LABEL_17;
      if (v10 != 1)
      {
        if (*(unsigned __int8 *)(a2 + 33) == v12)
        {
LABEL_17:
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(v11 + 3 * v9 + 1);
          return 1;
        }
        if (v10 != 2)
          break;
      }
    }
LABEL_5:
    if (++v9 == v8)
      return 0;
  }
  v13 = 34;
  while (1)
  {
    v14 = v13 - 31;
    if (__OFADD__(v13 - 32, 1))
      break;
    if (*(unsigned __int8 *)(a2 + v13) == v12)
      goto LABEL_17;
    ++v13;
    if (v14 == v10)
      goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_2400A4404(uint64_t a1, uint64_t a2)
{
  return sub_2400A4424(a1, a2, sub_24013F0E0) & 1;
}

uint64_t sub_2400A4424(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;

  v3 = *(_QWORD *)(a1 + 24);
  if (!*(_QWORD *)(v3 + 16))
    return 0;
  result = a3(*(unsigned __int8 *)(a1 + 16));
  if ((v7 & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * result);
  v9 = *(_QWORD *)(v8 + 16);
  if (!v9)
    return 0;
  v10 = 0;
  v11 = *(_QWORD *)(a2 + 16);
  v12 = v8 + 32;
  while (1)
  {
    if (v11)
    {
      v13 = *(unsigned __int8 *)(v12 + 3 * v10 + 2);
      if (*(unsigned __int8 *)(a2 + 32) == v13)
        goto LABEL_17;
      if (v11 != 1)
      {
        if (*(unsigned __int8 *)(a2 + 33) == v13)
        {
LABEL_17:
          *(_BYTE *)(a1 + 16) = *(_BYTE *)(v12 + 3 * v10 + 1);
          return 1;
        }
        if (v11 != 2)
          break;
      }
    }
LABEL_5:
    if (++v10 == v9)
      return 0;
  }
  v14 = 34;
  while (1)
  {
    v15 = v14 - 31;
    if (__OFADD__(v14 - 32, 1))
      break;
    if (*(unsigned __int8 *)(a2 + v14) == v13)
      goto LABEL_17;
    ++v14;
    if (v15 == v11)
      goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_2400A451C(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_240136E34();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_2400A4594(v6);
  return sub_240154BEC();
}

uint64_t sub_2400A4594(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  BOOL v45;
  unint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  BOOL v55;
  uint64_t v56;
  char v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  BOOL v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  unint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *__dst;
  uint64_t v95;

  v2 = v1;
  v4 = a1[1];
  result = sub_240154EB0();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_129;
    if (v4)
      return sub_2400A4C30(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_137;
  v7 = result;
  v89 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
    v95 = MEMORY[0x24BEE4AF8];
    __dst = (char *)((MEMORY[0x24BEE4AF8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
LABEL_95:
      v81 = v10;
      if (v13 >= 2)
      {
        v82 = *v89;
        do
        {
          v83 = v13 - 2;
          if (v13 < 2)
            goto LABEL_124;
          if (!v82)
            goto LABEL_136;
          v84 = v81;
          v85 = *(_QWORD *)&v81[16 * v83 + 32];
          v86 = *(_QWORD *)&v81[16 * v13 + 24];
          sub_2400A4CAC((char *)(v82 + 8 * v85), (char *)(v82 + 8 * *(_QWORD *)&v81[16 * v13 + 16]), v82 + 8 * v86, __dst);
          if (v2)
            break;
          if (v86 < v85)
            goto LABEL_125;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v84 = sub_2401356E0((uint64_t)v84);
          if (v83 >= *((_QWORD *)v84 + 2))
            goto LABEL_126;
          v87 = &v84[16 * v83 + 32];
          *(_QWORD *)v87 = v85;
          *((_QWORD *)v87 + 1) = v86;
          v88 = *((_QWORD *)v84 + 2);
          if (v13 > v88)
            goto LABEL_127;
          memmove(&v84[16 * v13 + 16], &v84[16 * v13 + 32], 16 * (v88 - v13));
          v81 = v84;
          *((_QWORD *)v84 + 2) = v88 - 1;
          v13 = v88 - 1;
        }
        while (v88 > 2);
      }
LABEL_92:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v95 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_2401547B4();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v8 = v6 >> 1;
    type metadata accessor for DKPersonTrackerState(0);
    v9 = sub_2401547FC();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    __dst = (char *)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v95 = v9;
  }
  v11 = 0;
  v12 = *a1;
  v90 = *a1 - 8;
  v10 = (char *)MEMORY[0x24BEE4AF8];
  v91 = v7;
  v92 = v4;
  v93 = *a1;
  while (1)
  {
    v14 = v11++;
    if (v11 < v4)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 8 * v11)
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                      + 16);
      v16 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 8 * v14)
                                  + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                      + 16);
      v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        v17 = v15;
        while (1)
        {
          v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 8 * v11)
                                      + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                          + 16);
          if (v16 < v15 == v17 >= v18)
            break;
          ++v11;
          v17 = v18;
          if (v4 == v11)
          {
            v11 = v4;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v11 < v14)
          goto LABEL_130;
        if (v14 < v11)
        {
          v19 = (uint64_t *)(v90 + 8 * v11);
          v20 = v11;
          v21 = v14;
          v22 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v21 != --v20)
            {
              if (!v12)
                goto LABEL_135;
              v23 = *v22;
              *v22 = *v19;
              *v19 = v23;
            }
            ++v21;
            --v19;
            ++v22;
          }
          while (v21 < v20);
        }
      }
    }
    if (v11 >= v4)
      goto LABEL_45;
    if (__OFSUB__(v11, v14))
      goto LABEL_128;
    if (v11 - v14 >= v7)
      goto LABEL_45;
    v24 = v14 + v7;
    if (__OFADD__(v14, v7))
      goto LABEL_131;
    if (v24 >= v4)
      v24 = v4;
    if (v24 < v14)
      break;
    if (v11 != v24)
    {
      v25 = (uint64_t *)(v90 + 8 * v11);
      do
      {
        v26 = *(_QWORD *)(v12 + 8 * v11);
        v27 = v14;
        v28 = v25;
        do
        {
          v29 = *v28;
          if (*(_QWORD *)(*(_QWORD *)(*v28
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                         + 16) >= *(_QWORD *)(*(_QWORD *)(v26
                                                          + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                                              + 16))
            break;
          if (!v12)
            goto LABEL_133;
          *v28 = v26;
          v28[1] = v29;
          --v28;
          ++v27;
        }
        while (v11 != v27);
        ++v11;
        ++v25;
      }
      while (v11 != v24);
      v11 = v24;
    }
LABEL_45:
    if (v11 < v14)
      goto LABEL_123;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_240135220(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v31 = *((_QWORD *)v10 + 2);
    v30 = *((_QWORD *)v10 + 3);
    v13 = v31 + 1;
    v12 = v93;
    if (v31 >= v30 >> 1)
    {
      v80 = sub_240135220((char *)(v30 > 1), v31 + 1, 1, v10);
      v12 = v93;
      v10 = v80;
    }
    *((_QWORD *)v10 + 2) = v13;
    v32 = v10 + 32;
    v33 = &v10[16 * v31 + 32];
    *(_QWORD *)v33 = v14;
    *((_QWORD *)v33 + 1) = v11;
    if (v31)
    {
      while (1)
      {
        v34 = v13 - 1;
        if (v13 >= 4)
        {
          v39 = &v32[16 * v13];
          v40 = *((_QWORD *)v39 - 8);
          v41 = *((_QWORD *)v39 - 7);
          v45 = __OFSUB__(v41, v40);
          v42 = v41 - v40;
          if (v45)
            goto LABEL_112;
          v44 = *((_QWORD *)v39 - 6);
          v43 = *((_QWORD *)v39 - 5);
          v45 = __OFSUB__(v43, v44);
          v37 = v43 - v44;
          v38 = v45;
          if (v45)
            goto LABEL_113;
          v46 = v13 - 2;
          v47 = &v32[16 * v13 - 32];
          v49 = *(_QWORD *)v47;
          v48 = *((_QWORD *)v47 + 1);
          v45 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          if (v45)
            goto LABEL_115;
          v45 = __OFADD__(v37, v50);
          v51 = v37 + v50;
          if (v45)
            goto LABEL_118;
          if (v51 >= v42)
          {
            v69 = &v32[16 * v34];
            v71 = *(_QWORD *)v69;
            v70 = *((_QWORD *)v69 + 1);
            v45 = __OFSUB__(v70, v71);
            v72 = v70 - v71;
            if (v45)
              goto LABEL_122;
            v62 = v37 < v72;
            goto LABEL_82;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v63 = *((_QWORD *)v10 + 4);
            v64 = *((_QWORD *)v10 + 5);
            v45 = __OFSUB__(v64, v63);
            v56 = v64 - v63;
            v57 = v45;
            goto LABEL_76;
          }
          v36 = *((_QWORD *)v10 + 4);
          v35 = *((_QWORD *)v10 + 5);
          v45 = __OFSUB__(v35, v36);
          v37 = v35 - v36;
          v38 = v45;
        }
        if ((v38 & 1) != 0)
          goto LABEL_114;
        v46 = v13 - 2;
        v52 = &v32[16 * v13 - 32];
        v54 = *(_QWORD *)v52;
        v53 = *((_QWORD *)v52 + 1);
        v55 = __OFSUB__(v53, v54);
        v56 = v53 - v54;
        v57 = v55;
        if (v55)
          goto LABEL_117;
        v58 = &v32[16 * v34];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        v45 = __OFSUB__(v59, v60);
        v61 = v59 - v60;
        if (v45)
          goto LABEL_120;
        if (__OFADD__(v56, v61))
          goto LABEL_121;
        if (v56 + v61 >= v37)
        {
          v62 = v37 < v61;
LABEL_82:
          if (v62)
            v34 = v46;
          goto LABEL_84;
        }
LABEL_76:
        if ((v57 & 1) != 0)
          goto LABEL_116;
        v65 = &v32[16 * v34];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v45 = __OFSUB__(v66, v67);
        v68 = v66 - v67;
        if (v45)
          goto LABEL_119;
        if (v68 < v56)
          goto LABEL_14;
LABEL_84:
        v73 = v34 - 1;
        if (v34 - 1 >= v13)
        {
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
          goto LABEL_132;
        }
        if (!v12)
          goto LABEL_134;
        v74 = v10;
        v75 = &v32[16 * v73];
        v76 = *(_QWORD *)v75;
        v77 = &v32[16 * v34];
        v78 = *((_QWORD *)v77 + 1);
        sub_2400A4CAC((char *)(v12 + 8 * *(_QWORD *)v75), (char *)(v12 + 8 * *(_QWORD *)v77), v12 + 8 * v78, __dst);
        if (v1)
          goto LABEL_92;
        if (v78 < v76)
          goto LABEL_109;
        if (v34 > *((_QWORD *)v74 + 2))
          goto LABEL_110;
        *(_QWORD *)v75 = v76;
        *(_QWORD *)&v32[16 * v73 + 8] = v78;
        v79 = *((_QWORD *)v74 + 2);
        if (v34 >= v79)
          goto LABEL_111;
        v10 = v74;
        v13 = v79 - 1;
        memmove(&v32[16 * v34], v77 + 16, 16 * (v79 - 1 - v34));
        *((_QWORD *)v74 + 2) = v79 - 1;
        v12 = v93;
        if (v79 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v7 = v91;
    v4 = v92;
    if (v11 >= v92)
    {
      v2 = v1;
      goto LABEL_95;
    }
  }
LABEL_132:
  __break(1u);
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_2400A4C30(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;

  if (a3 != a2)
  {
    v4 = *a4;
    v5 = *a4 + 8 * a3 - 8;
LABEL_5:
    v6 = *(_QWORD *)(v4 + 8 * a3);
    v7 = result;
    v8 = (uint64_t *)v5;
    while (1)
    {
      v9 = *v8;
      if (*(_QWORD *)(*(_QWORD *)(*v8 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                     + 16) >= *(_QWORD *)(*(_QWORD *)(v6
                                                      + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                                          + 16))
      {
LABEL_4:
        ++a3;
        v5 += 8;
        if (a3 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v4)
        break;
      *v8 = v6;
      v8[1] = v9;
      --v8;
      if (a3 == ++v7)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2400A4CAC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  char *v22;
  char *v23;
  char *v24;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = a2 - __src + 7;
  if (a2 - __src >= 0)
    v9 = a2 - __src;
  v10 = v9 >> 3;
  v11 = a3 - (_QWORD)a2;
  v12 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v12 = a3 - (_QWORD)a2;
  v13 = v12 >> 3;
  v24 = __src;
  v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst)
        memmove(__dst, a2, 8 * v13);
      v16 = &v4[8 * v13];
      v22 = v16;
      v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        v17 = (char *)(a3 - 8);
        while (1)
        {
          v18 = v6 - 8;
          v19 = *((_QWORD *)v6 - 1);
          v20 = v17 + 8;
          if (*(_QWORD *)(*(_QWORD *)(v19
                                     + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                         + 16) >= *(_QWORD *)(*(_QWORD *)(*((_QWORD *)v16 - 1)
                                                          + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                                              + 16))
          {
            v22 = v16 - 8;
            if (v20 < v16 || v17 >= v16 || v20 != v16)
              *(_QWORD *)v17 = *((_QWORD *)v16 - 1);
            v16 -= 8;
            if (v6 <= v7)
              goto LABEL_42;
          }
          else
          {
            if (v20 != v6 || v17 >= v6)
              *(_QWORD *)v17 = v19;
            v24 = v6 - 8;
            v6 -= 8;
            if (v18 <= v7)
              goto LABEL_42;
          }
          v17 -= 8;
          if (v16 <= v4)
            goto LABEL_42;
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst)
      memmove(__dst, __src, 8 * v10);
    v14 = &v4[8 * v10];
    v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v4
                                   + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                       + 16) >= *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6
                                                        + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_rankConfidence)
                                            + 16))
        {
          if (v7 != v4)
            *(_QWORD *)v7 = *(_QWORD *)v4;
          v4 += 8;
          v23 = v4;
          v15 = v6;
        }
        else
        {
          v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6)
            *(_QWORD *)v7 = *(_QWORD *)v6;
        }
        v7 += 8;
        if (v4 >= v14)
          break;
        v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      v24 = v7;
    }
LABEL_42:
    sub_240135528((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400A4F50(_QWORD *a1)
{
  return sub_2400A3E78(a1) & 1;
}

uint64_t sub_2400A4F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400A4FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400A4FF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2400A5034(unint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, unint64_t, uint64_t);
  uint64_t v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = sub_24015434C();
  v22 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - v10;
  if (a1 >> 62)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    v12 = sub_240154D30();
    if (v12)
      goto LABEL_3;
  }
  else
  {
    v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v12)
    {
LABEL_3:
      v18 = v3;
      v19 = a1;
      v20 = (char *)a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore22LegacySubjectSelection9TrackInfo_uuid;
      v21 = a1 & 0xC000000000000001;
      v13 = 4;
      do
      {
        v14 = v13 - 4;
        if (v21)
        {
          a1 = MEMORY[0x24267D4E0](v13 - 4, a1);
          v3 = v13 - 3;
          if (__OFADD__(v14, 1))
            goto LABEL_13;
        }
        else
        {
          a1 = *(_QWORD *)(a1 + 8 * v13);
          swift_retain();
          v3 = v13 - 3;
          if (__OFADD__(v14, 1))
          {
LABEL_13:
            __break(1u);
            goto LABEL_14;
          }
        }
        v15 = v22;
        v16 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
        v16(v11, a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonTrackerState_uuid, v6);
        v16(v8, (unint64_t)v20, v6);
        LOBYTE(v16) = sub_240154328();
        a2 = *(void (**)(char *, uint64_t))(v15 + 8);
        a2(v8, v6);
        a2(v11, v6);
        if ((v16 & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return a1;
        }
        swift_release();
        ++v13;
        a1 = v19;
      }
      while (v3 != v12);
    }
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_2400A5228()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_2400A5230(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t DKISSTrackVector.__allocating_init(trackerID:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t DKISSTrackVector.init(trackerID:features:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

uint64_t sub_2400A5280()
{
  _BYTE *v0;

  if (*v0)
    return 0x7365727574616566;
  else
    return 0x4964656B63617274;
}

uint64_t sub_2400A52C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400B1910(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400A52E4()
{
  sub_2400A5488();
  return sub_240155048();
}

uint64_t sub_2400A530C()
{
  sub_2400A5488();
  return sub_240155054();
}

uint64_t sub_2400A5338(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7940);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A5488();
  sub_240155030();
  v12 = 0;
  sub_240154E74();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 24);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E30);
    sub_2400A56DC(&qword_256FB7950, MEMORY[0x24BEE13D8], MEMORY[0x24BEE12A0]);
    sub_240154E80();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2400A5488()
{
  unint64_t result;

  result = qword_256FB7948;
  if (!qword_256FB7948)
  {
    result = MEMORY[0x24267E0BC](&unk_240158C94, &type metadata for DKISSTrackVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7948);
  }
  return result;
}

uint64_t DKISSTrackVector.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKISSTrackVector.init(from:)(a1);
  return v2;
}

uint64_t DKISSTrackVector.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD v9[2];
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7958);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A5488();
  sub_240155024();
  if (v2)
  {
    type metadata accessor for DKISSTrackVector();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v11 = 0;
    *(_QWORD *)(v1 + 16) = sub_240154DF0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4E30);
    v10 = 1;
    sub_2400A56DC(&qword_256FB7960, MEMORY[0x24BEE1400], MEMORY[0x24BEE12D0]);
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)(v1 + 24) = v9[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t type metadata accessor for DKISSTrackVector()
{
  return objc_opt_self();
}

uint64_t sub_2400A56DC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB4E30);
    v8 = a2;
    result = MEMORY[0x24267E0BC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2400A573C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2400A7848(a1, (void (*)(void))type metadata accessor for DKISSTrackVector, (uint64_t (*)(uint64_t))DKISSTrackVector.init(from:), a2);
}

uint64_t sub_2400A5764(_QWORD *a1)
{
  return sub_2400A5338(a1);
}

uint64_t sub_2400A5784@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKISSTrackVector();
  result = sub_240154B50();
  *a1 = result;
  return result;
}

double sub_2400A57C0()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void sub_2400A57C8(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t sub_2400A57D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400A57D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t DKISSFeatureVector.__allocating_init(framenum:time:tracks:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(double *)(result + 24) = a3;
  *(_QWORD *)(result + 32) = a2;
  return result;
}

uint64_t DKISSFeatureVector.init(framenum:time:tracks:)(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = a1;
  *(double *)(v3 + 24) = a3;
  *(_QWORD *)(v3 + 32) = a2;
  return v3;
}

uint64_t sub_2400A584C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701669236;
  if (*v0 != 1)
    v1 = 0x736B63617274;
  if (*v0)
    return v1;
  else
    return 0x6D756E656D617266;
}

uint64_t sub_2400A589C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400B1A0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400A58C0()
{
  sub_2400A5AB0();
  return sub_240155048();
}

uint64_t sub_2400A58E8()
{
  sub_2400A5AB0();
  return sub_240155054();
}

uint64_t DKISSFeatureVector.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKISSFeatureVector.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2400A5950(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;
  char v13;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7968);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A5AB0();
  sub_240155030();
  v13 = 0;
  sub_240154E74();
  if (!v2)
  {
    v12 = 1;
    sub_240154E68();
    v11 = *(_QWORD *)(v3 + 32);
    v10[15] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7978);
    sub_2400A5AF4();
    sub_240154E80();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2400A5AB0()
{
  unint64_t result;

  result = qword_256FB7970;
  if (!qword_256FB7970)
  {
    result = MEMORY[0x24267E0BC](&unk_240158C44, &type metadata for DKISSFeatureVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7970);
  }
  return result;
}

unint64_t sub_2400A5AF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256FB7980;
  if (!qword_256FB7980)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB7978);
    v3 = sub_2400B3490(&qword_256FB7988, v2, (uint64_t (*)(uint64_t))type metadata accessor for DKISSTrackVector, (uint64_t)&protocol conformance descriptor for DKISSTrackVector);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256FB7980);
  }
  return result;
}

uint64_t DKISSFeatureVector.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKISSFeatureVector.init(from:)(a1);
  return v2;
}

_QWORD *DKISSFeatureVector.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7990);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A5AB0();
  sub_240155024();
  if (v2)
  {
    type metadata accessor for DKISSFeatureVector();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v13 = 0;
    v1[2] = sub_240154DF0();
    v12 = 1;
    sub_240154DE4();
    v1[3] = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7978);
    v11 = 2;
    sub_2400A5D90();
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v1[4] = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t type metadata accessor for DKISSFeatureVector()
{
  return objc_opt_self();
}

unint64_t sub_2400A5D90()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256FB7998;
  if (!qword_256FB7998)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB7978);
    v3 = sub_2400B3490(&qword_256FB79A0, v2, (uint64_t (*)(uint64_t))type metadata accessor for DKISSTrackVector, (uint64_t)&protocol conformance descriptor for DKISSTrackVector);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256FB7998);
  }
  return result;
}

uint64_t sub_2400A5E0C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2400A7848(a1, (void (*)(void))type metadata accessor for DKISSFeatureVector, (uint64_t (*)(uint64_t))DKISSFeatureVector.init(from:), a2);
}

uint64_t sub_2400A5E34(_QWORD *a1)
{
  return sub_2400A5950(a1);
}

uint64_t sub_2400A5E54@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKISSFeatureVector();
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400A5E90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2400A5EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

_QWORD *DKISSFeatureVectors.__allocating_init(videoName:frames:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a1;
  result[3] = a2;
  result[4] = a3;
  return result;
}

_QWORD *DKISSFeatureVectors.init(videoName:frames:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t sub_2400A5F20()
{
  _BYTE *v0;

  if (*v0)
    return 0x73656D617266;
  else
    return 0x6D614E6F65646976;
}

uint64_t sub_2400A5F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400B1B48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400A5F80()
{
  sub_2400A618C();
  return sub_240155048();
}

uint64_t sub_2400A5FA8()
{
  sub_2400A618C();
  return sub_240155054();
}

uint64_t DKISSFeatureVectors.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKISSFeatureVectors.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2400A6020(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB79A8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A618C();
  sub_240155030();
  v12 = 0;
  swift_bridgeObjectRetain();
  sub_240154E2C();
  if (v2)
  {
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v11 = *(_QWORD *)(v3 + 32);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB79B8);
    sub_2400A61D0();
    sub_240154E80();
    return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  }
}

unint64_t sub_2400A618C()
{
  unint64_t result;

  result = qword_256FB79B0;
  if (!qword_256FB79B0)
  {
    result = MEMORY[0x24267E0BC](&unk_240158BF4, &type metadata for DKISSFeatureVectors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB79B0);
  }
  return result;
}

unint64_t sub_2400A61D0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256FB79C0;
  if (!qword_256FB79C0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB79B8);
    v3 = sub_2400B3490(&qword_256FB79C8, v2, (uint64_t (*)(uint64_t))type metadata accessor for DKISSFeatureVector, (uint64_t)&protocol conformance descriptor for DKISSFeatureVector);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256FB79C0);
  }
  return result;
}

uint64_t DKISSFeatureVectors.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKISSFeatureVectors.init(from:)(a1);
  return v2;
}

_QWORD *DKISSFeatureVectors.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB79D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[2] = 0;
  v1[3] = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A618C();
  sub_240155024();
  if (v2)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for DKISSFeatureVectors();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v12 = 0;
    v1[2] = sub_240154DA8();
    v1[3] = v8;
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB79B8);
    v11 = 1;
    sub_2400A645C();
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v1[4] = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t type metadata accessor for DKISSFeatureVectors()
{
  return objc_opt_self();
}

unint64_t sub_2400A645C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256FB79D8;
  if (!qword_256FB79D8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB79B8);
    v3 = sub_2400B3490(&qword_256FB79E0, v2, (uint64_t (*)(uint64_t))type metadata accessor for DKISSFeatureVector, (uint64_t)&protocol conformance descriptor for DKISSFeatureVector);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256FB79D8);
  }
  return result;
}

uint64_t sub_2400A64D8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2400A7848(a1, (void (*)(void))type metadata accessor for DKISSFeatureVectors, (uint64_t (*)(uint64_t))DKISSFeatureVectors.init(from:), a2);
}

uint64_t sub_2400A6500(_QWORD *a1)
{
  return sub_2400A6020(a1);
}

uint64_t sub_2400A6520@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKISSFeatureVectors();
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400A655C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400A6564(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t DKISSDetections.__allocating_init(time:detections:)(uint64_t a1, double a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(double *)(result + 16) = a2;
  *(_QWORD *)(result + 24) = a1;
  return result;
}

uint64_t DKISSDetections.init(time:detections:)(uint64_t a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a2;
  *(_QWORD *)(v2 + 24) = a1;
  return v2;
}

uint64_t sub_2400A65C4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6F69746365746564;
  else
    return 1701669236;
}

uint64_t sub_2400A65FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400B1C3C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400A6620()
{
  sub_2400A67EC();
  return sub_240155048();
}

uint64_t sub_2400A6648()
{
  sub_2400A67EC();
  return sub_240155054();
}

uint64_t DKISSDetections.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t _s23IntelligentTrackingCore16DKISSTrackVectorCfD_0()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2400A66B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB79E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A67EC();
  sub_240155030();
  v12 = 0;
  sub_240154E68();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 24);
    v10[15] = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB79F8);
    sub_2400A6830();
    sub_240154E80();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2400A67EC()
{
  unint64_t result;

  result = qword_256FB79F0;
  if (!qword_256FB79F0)
  {
    result = MEMORY[0x24267E0BC](&unk_240158BA4, &type metadata for DKISSDetections.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB79F0);
  }
  return result;
}

unint64_t sub_2400A6830()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256FB7A00;
  if (!qword_256FB7A00)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB79F8);
    v3 = sub_2400B3490(&qword_256FB7A08, v2, (uint64_t (*)(uint64_t))type metadata accessor for DKISSDetection, (uint64_t)&protocol conformance descriptor for DKISSDetection);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256FB7A00);
  }
  return result;
}

uint64_t type metadata accessor for DKISSDetection()
{
  return objc_opt_self();
}

uint64_t DKISSDetections.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKISSDetections.init(from:)(a1);
  return v2;
}

uint64_t DKISSDetections.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7A10);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A67EC();
  sub_240155024();
  if (v2)
  {
    type metadata accessor for DKISSDetections();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v12 = 0;
    sub_240154DE4();
    *(_QWORD *)(v1 + 16) = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB79F8);
    v11 = 1;
    sub_2400A6AC4();
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(_QWORD *)(v1 + 24) = v10[1];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

uint64_t type metadata accessor for DKISSDetections()
{
  return objc_opt_self();
}

unint64_t sub_2400A6AC4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_256FB7A18;
  if (!qword_256FB7A18)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB79F8);
    v3 = sub_2400B3490(&qword_256FB7A20, v2, (uint64_t (*)(uint64_t))type metadata accessor for DKISSDetection, (uint64_t)&protocol conformance descriptor for DKISSDetection);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_256FB7A18);
  }
  return result;
}

uint64_t sub_2400A6B40@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2400A7848(a1, (void (*)(void))type metadata accessor for DKISSDetections, (uint64_t (*)(uint64_t))DKISSDetections.init(from:), a2);
}

uint64_t sub_2400A6B68(_QWORD *a1)
{
  return sub_2400A66B4(a1);
}

uint64_t sub_2400A6B88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKISSDetections();
  result = sub_240154B50();
  *a1 = result;
  return result;
}

double sub_2400A6BC4()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void sub_2400A6BCC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

double sub_2400A6BD4()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void sub_2400A6BE0(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

uint64_t sub_2400A6BEC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 56);
}

uint64_t sub_2400A6BF8(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 56) = result;
  *(_BYTE *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t sub_2400A6C08()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t sub_2400A6C10(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*sub_2400A6C18())()
{
  return nullsub_1;
}

uint64_t sub_2400A6C28()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_2400A6C34(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_BYTE *)(v2 + 88) = a2 & 1;
  return result;
}

uint64_t (*sub_2400A6C44())()
{
  return nullsub_1;
}

uint64_t sub_2400A6C54()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 96);
}

uint64_t sub_2400A6C60(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 96) = result;
  *(_BYTE *)(v2 + 104) = a2 & 1;
  return result;
}

uint64_t (*sub_2400A6C70())()
{
  return nullsub_1;
}

uint64_t sub_2400A6C80()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 112);
}

uint64_t sub_2400A6C8C(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 112) = result;
  *(_BYTE *)(v2 + 120) = a2 & 1;
  return result;
}

uint64_t (*sub_2400A6C9C())()
{
  return nullsub_1;
}

uint64_t sub_2400A6CAC()
{
  return swift_retain();
}

uint64_t sub_2400A6CB4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 128) = a1;
  return swift_release();
}

uint64_t (*sub_2400A6CC4())()
{
  return nullsub_1;
}

uint64_t sub_2400A6CD4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 136);
}

uint64_t sub_2400A6CE0(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 136) = result;
  *(_BYTE *)(v2 + 144) = a2 & 1;
  return result;
}

uint64_t (*sub_2400A6CF0())()
{
  return nullsub_1;
}

uint64_t sub_2400A6D00()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

uint64_t sub_2400A6D0C(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 152) = result;
  *(_BYTE *)(v2 + 160) = a2 & 1;
  return result;
}

uint64_t (*sub_2400A6D1C())()
{
  return nullsub_1;
}

uint64_t DKISSDetection.__allocating_init(time:rect:trackerId:framesSinceLastUpdate:faceYaw:facePitch:faceRoll:bodyKeypoints:speaking:looking:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  uint64_t result;

  result = swift_allocObject();
  *(double *)(result + 16) = a9;
  *(double *)(result + 24) = a10;
  *(double *)(result + 32) = a11;
  *(double *)(result + 40) = a12;
  *(double *)(result + 48) = a13;
  *(_QWORD *)(result + 56) = a1;
  *(_BYTE *)(result + 64) = a2 & 1;
  *(_QWORD *)(result + 72) = a3;
  *(_QWORD *)(result + 80) = a4;
  *(_BYTE *)(result + 88) = a5 & 1;
  *(_QWORD *)(result + 96) = a6;
  *(_BYTE *)(result + 104) = a7 & 1;
  *(_QWORD *)(result + 112) = a8;
  *(_BYTE *)(result + 120) = a14 & 1;
  *(_QWORD *)(result + 128) = a15;
  *(_QWORD *)(result + 136) = a16;
  *(_BYTE *)(result + 144) = a17 & 1;
  *(_QWORD *)(result + 152) = a18;
  *(_BYTE *)(result + 160) = a19 & 1;
  return result;
}

uint64_t DKISSDetection.init(time:rect:trackerId:framesSinceLastUpdate:faceYaw:facePitch:faceRoll:bodyKeypoints:speaking:looking:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  uint64_t v19;

  *(double *)(v19 + 16) = a9;
  *(double *)(v19 + 24) = a10;
  *(double *)(v19 + 32) = a11;
  *(double *)(v19 + 40) = a12;
  *(double *)(v19 + 48) = a13;
  *(_QWORD *)(v19 + 56) = a1;
  *(_BYTE *)(v19 + 64) = a2 & 1;
  *(_QWORD *)(v19 + 72) = a3;
  *(_QWORD *)(v19 + 80) = a4;
  *(_BYTE *)(v19 + 88) = a5 & 1;
  *(_QWORD *)(v19 + 96) = a6;
  *(_BYTE *)(v19 + 104) = a7 & 1;
  *(_QWORD *)(v19 + 112) = a8;
  *(_BYTE *)(v19 + 120) = a14 & 1;
  *(_QWORD *)(v19 + 128) = a15;
  *(_QWORD *)(v19 + 136) = a16;
  *(_BYTE *)(v19 + 144) = a17 & 1;
  *(_QWORD *)(v19 + 152) = a18;
  *(_BYTE *)(v19 + 160) = a19 & 1;
  return v19;
}

uint64_t sub_2400A6EBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400A6EE8 + 4 * byte_240158260[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400A6EE8()
{
  return 1952671090;
}

uint64_t sub_2400A6EF4()
{
  return 0x4972656B63617274;
}

unint64_t sub_2400A6F10()
{
  return 0xD000000000000015;
}

uint64_t sub_2400A6F2C()
{
  return 0x77615965636166;
}

uint64_t sub_2400A6F44()
{
  return 0x6374695065636166;
}

uint64_t sub_2400A6F64()
{
  return 0x6C6C6F5265636166;
}

uint64_t sub_2400A6F7C()
{
  return 0x7079654B79646F62;
}

uint64_t sub_2400A6FA0()
{
  return 0x676E696B61657073;
}

uint64_t sub_2400A6FB8()
{
  return 0x676E696B6F6F6CLL;
}

uint64_t sub_2400A6FD0()
{
  unsigned __int8 *v0;

  return sub_2400A6EBC(*v0);
}

uint64_t sub_2400A6FD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400B1D28(a1, a2);
  *a3 = result;
  return result;
}

void sub_2400A6FFC(_BYTE *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_2400A7008()
{
  sub_2400A7380();
  return sub_240155048();
}

uint64_t sub_2400A7030()
{
  sub_2400A7380();
  return sub_240155054();
}

uint64_t DKISSDetection.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t DKISSDetection.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2400A7098(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7A28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A7380();
  sub_240155030();
  LOBYTE(v13) = 0;
  sub_240154E68();
  if (!v2)
  {
    v9 = *(_OWORD *)(v3 + 40);
    v13 = *(_OWORD *)(v3 + 24);
    v14 = v9;
    v12 = 1;
    type metadata accessor for CGRect(0);
    sub_2400B3490(&qword_256FB67A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_240154E80();
    LOBYTE(v13) = 2;
    sub_240154E44();
    LOBYTE(v13) = 3;
    sub_240154E74();
    LOBYTE(v13) = 4;
    sub_240154E38();
    LOBYTE(v13) = 5;
    sub_240154E38();
    LOBYTE(v13) = 6;
    sub_240154E38();
    *(_QWORD *)&v13 = *(_QWORD *)(v3 + 128);
    v12 = 7;
    type metadata accessor for DKBodyKeyPointList();
    sub_2400B3490(&qword_256FB7A38, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKBodyKeyPointList, (uint64_t)&protocol conformance descriptor for DKBodyKeyPointList);
    sub_240154E50();
    LOBYTE(v13) = 8;
    sub_240154E38();
    LOBYTE(v13) = 9;
    sub_240154E38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_2400A7380()
{
  unint64_t result;

  result = qword_256FB7A30;
  if (!qword_256FB7A30)
  {
    result = MEMORY[0x24267E0BC](&unk_240158B54, &type metadata for DKISSDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB7A30);
  }
  return result;
}

uint64_t DKISSDetection.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKISSDetection.init(from:)(a1);
  return v2;
}

uint64_t DKISSDetection.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  char v10;
  char v12;
  char v13;
  char v14;
  char v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  char v23;

  v3 = v1;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB7A40);
  v5 = *(_QWORD *)(v20 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v1 + 128) = 0;
  *(_QWORD *)(v1 + 56) = 0;
  *(_BYTE *)(v1 + 64) = 1;
  *(_QWORD *)(v1 + 80) = 0;
  *(_BYTE *)(v1 + 88) = 1;
  *(_QWORD *)(v1 + 96) = 0;
  *(_BYTE *)(v1 + 104) = 1;
  *(_QWORD *)(v1 + 112) = 0;
  *(_BYTE *)(v1 + 120) = 1;
  *(_QWORD *)(v1 + 136) = 0;
  *(_BYTE *)(v1 + 144) = 1;
  *(_QWORD *)(v1 + 152) = 0;
  *(_BYTE *)(v1 + 160) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400A7380();
  sub_240155024();
  if (v2)
  {
    swift_release();
    type metadata accessor for DKISSDetection();
    swift_deallocPartialClassInstance();
  }
  else
  {
    LOBYTE(v21) = 0;
    sub_240154DE4();
    *(_QWORD *)(v1 + 16) = v8;
    type metadata accessor for CGRect(0);
    v23 = 1;
    sub_2400B3490(&qword_256FB6880, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    v9 = v22;
    *(_OWORD *)(v1 + 24) = v21;
    *(_OWORD *)(v1 + 40) = v9;
    LOBYTE(v21) = 2;
    *(_QWORD *)(v1 + 56) = sub_240154DC0();
    *(_BYTE *)(v1 + 64) = v10 & 1;
    LOBYTE(v21) = 3;
    *(_QWORD *)(v1 + 72) = sub_240154DF0();
    LOBYTE(v21) = 4;
    *(_QWORD *)(v1 + 80) = sub_240154DB4();
    *(_BYTE *)(v1 + 88) = v12 & 1;
    LOBYTE(v21) = 5;
    *(_QWORD *)(v1 + 96) = sub_240154DB4();
    *(_BYTE *)(v1 + 104) = v13 & 1;
    LOBYTE(v21) = 6;
    *(_QWORD *)(v1 + 112) = sub_240154DB4();
    *(_BYTE *)(v1 + 120) = v14 & 1;
    type metadata accessor for DKBodyKeyPointList();
    v23 = 7;
    sub_2400B3490(&qword_256FB7A48, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKBodyKeyPointList, (uint64_t)&protocol conformance descriptor for DKBodyKeyPointList);
    sub_240154DCC();
    *(_QWORD *)(v1 + 128) = v21;
    swift_release();
    LOBYTE(v21) = 8;
    *(_QWORD *)(v1 + 136) = sub_240154DB4();
    *(_BYTE *)(v1 + 144) = v15 & 1;
    LOBYTE(v21) = 9;
    v16 = sub_240154DB4();
    v18 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v20);
    *(_QWORD *)(v3 + 152) = v16;
    *(_BYTE *)(v3 + 160) = v18 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

uint64_t sub_2400A7820@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2400A7848(a1, (void (*)(void))type metadata accessor for DKISSDetection, (uint64_t (*)(uint64_t))DKISSDetection.init(from:), a2);
}

uint64_t sub_2400A7848@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X3>, uint64_t (*a3)(uint64_t)@<X5>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t result;

  a2();
  v8 = swift_allocObject();
  result = a3(a1);
  if (!v4)
    *a4 = v8;
  return result;
}

uint64_t sub_2400A78AC(_QWORD *a1)
{
  return sub_2400A7098(a1);
}

uint64_t sub_2400A78CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKISSDetection();
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t DKISSPrediction.trackerId.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DKISSPrediction.trackerId.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*DKISSPrediction.trackerId.modify())()
{
  return nullsub_1;
}

uint64_t DKISSPrediction.rank.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t DKISSPrediction.rank.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*DKISSPrediction.rank.modify())()
{
  return nullsub_1;
}

uint64_t DKISSPrediction.probabilities.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKISSPrediction.probabilities.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*DKISSPrediction.probabilities.modify())()
{
  return nullsub_1;
}

uint64_t DKISSModel.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DKISSModel.init()();
  return v0;
}

uint64_t DKISSModel.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  *(_QWORD *)(v0 + 48) = 120;
  *(_QWORD *)(v0 + 56) = 0xE100000000000000;
  *(_QWORD *)(v0 + 64) = 0x6E695F7868;
  *(_QWORD *)(v0 + 72) = 0xE500000000000000;
  *(_QWORD *)(v0 + 80) = 0x6E695F7863;
  *(_QWORD *)(v0 + 88) = 0xE500000000000000;
  *(_QWORD *)(v0 + 96) = 1802723693;
  *(_QWORD *)(v0 + 104) = 0xE400000000000000;
  *(_QWORD *)(v0 + 112) = 0x74756F5F7868;
  *(_QWORD *)(v0 + 120) = 0xE600000000000000;
  *(_QWORD *)(v0 + 128) = 0x74756F5F7863;
  *(_QWORD *)(v0 + 136) = 0xE600000000000000;
  *(_QWORD *)(v0 + 144) = 1684370032;
  *(_QWORD *)(v0 + 152) = 0xE400000000000000;
  *(_OWORD *)(v0 + 160) = 0u;
  *(_OWORD *)(v0 + 176) = 0u;
  *(_OWORD *)(v0 + 192) = 0u;
  *(_OWORD *)(v0 + 208) = 0u;
  *(_OWORD *)(v0 + 224) = 0u;
  *(_OWORD *)(v0 + 240) = 0u;
  *(_OWORD *)(v0 + 256) = 0u;
  *(_OWORD *)(v0 + 272) = 0u;
  *(_OWORD *)(v0 + 288) = 0u;
  *(_OWORD *)(v0 + 304) = 0u;
  *(_DWORD *)(v0 + 320) = 0;
  *(_DWORD *)(v0 + 488) = 0;
  *(_OWORD *)(v0 + 456) = 0u;
  *(_OWORD *)(v0 + 472) = 0u;
  *(_OWORD *)(v0 + 424) = 0u;
  *(_OWORD *)(v0 + 440) = 0u;
  *(_OWORD *)(v0 + 392) = 0u;
  *(_OWORD *)(v0 + 408) = 0u;
  *(_OWORD *)(v0 + 360) = 0u;
  *(_OWORD *)(v0 + 376) = 0u;
  *(_OWORD *)(v0 + 328) = 0u;
  *(_OWORD *)(v0 + 344) = 0u;
  *(_DWORD *)(v0 + 656) = 0;
  *(_OWORD *)(v0 + 624) = 0u;
  *(_OWORD *)(v0 + 640) = 0u;
  *(_OWORD *)(v0 + 592) = 0u;
  *(_OWORD *)(v0 + 608) = 0u;
  *(_OWORD *)(v0 + 560) = 0u;
  *(_OWORD *)(v0 + 576) = 0u;
  *(_OWORD *)(v0 + 528) = 0u;
  *(_OWORD *)(v0 + 544) = 0u;
  *(_OWORD *)(v0 + 496) = 0u;
  *(_OWORD *)(v0 + 512) = 0u;
  *(_DWORD *)(v0 + 824) = 0;
  *(_OWORD *)(v0 + 792) = 0u;
  *(_OWORD *)(v0 + 808) = 0u;
  *(_OWORD *)(v0 + 760) = 0u;
  *(_OWORD *)(v0 + 776) = 0u;
  *(_OWORD *)(v0 + 728) = 0u;
  *(_OWORD *)(v0 + 744) = 0u;
  *(_OWORD *)(v0 + 696) = 0u;
  *(_OWORD *)(v0 + 712) = 0u;
  *(_OWORD *)(v0 + 664) = 0u;
  *(_OWORD *)(v0 + 680) = 0u;
  *(_DWORD *)(v0 + 992) = 0;
  *(_OWORD *)(v0 + 960) = 0u;
  *(_OWORD *)(v0 + 976) = 0u;
  *(_OWORD *)(v0 + 928) = 0u;
  *(_OWORD *)(v0 + 944) = 0u;
  *(_OWORD *)(v0 + 896) = 0u;
  *(_OWORD *)(v0 + 912) = 0u;
  *(_OWORD *)(v0 + 864) = 0u;
  *(_OWORD *)(v0 + 880) = 0u;
  *(_OWORD *)(v0 + 832) = 0u;
  *(_OWORD *)(v0 + 848) = 0u;
  *(_DWORD *)(v0 + 1160) = 0;
  *(_OWORD *)(v0 + 1128) = 0u;
  *(_OWORD *)(v0 + 1144) = 0u;
  *(_OWORD *)(v0 + 1096) = 0u;
  *(_OWORD *)(v0 + 1112) = 0u;
  *(_OWORD *)(v0 + 1064) = 0u;
  *(_OWORD *)(v0 + 1080) = 0u;
  *(_OWORD *)(v0 + 1032) = 0u;
  *(_OWORD *)(v0 + 1048) = 0u;
  *(_OWORD *)(v0 + 1000) = 0u;
  *(_OWORD *)(v0 + 1016) = 0u;
  *(_DWORD *)(v0 + 1328) = 0;
  *(_OWORD *)(v0 + 1312) = 0u;
  *(_OWORD *)(v0 + 1296) = 0u;
  *(_OWORD *)(v0 + 1280) = 0u;
  *(_OWORD *)(v0 + 1264) = 0u;
  *(_OWORD *)(v0 + 1248) = 0u;
  *(_OWORD *)(v0 + 1232) = 0u;
  *(_OWORD *)(v0 + 1216) = 0u;
  *(_OWORD *)(v0 + 1200) = 0u;
  *(_OWORD *)(v0 + 1184) = 0u;
  v2 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_logger;
  *(_OWORD *)(v0 + 1168) = 0u;
  sub_2401544B4();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_maxNumTrackers) = 10;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_forgetDetectionThreshold) = 0x3FF0000000000000;
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_unusedIndexes) = MEMORY[0x24BEE4B08];
  v3 = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRowMap) = v3;
  *(_DWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_poseNormalisation) = 1050857701;
  v4 = sub_2400B0AFC(0xD000000000000021, 0x8000000240162FF0, 0x737465737341, 0xE600000000000000, (void *)0xD000000000000010, 0x8000000240161500);
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = sub_2401544C0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v2, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for DKISSModel();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(_QWORD *)(v0 + 16) = v4;
    *(_QWORD *)(v0 + 24) = v5;
    *(_QWORD *)(v0 + 32) = v6;
    *(_DWORD *)(v0 + 40) = v7;
    v9 = (_QWORD *)sub_2401547FC();
    v9[2] = 10;
    v9[4] = -1;
    v9[5] = 0;
    v9[6] = -1;
    v9[7] = 0;
    v9[8] = -1;
    v9[9] = 0;
    v9[10] = -1;
    v9[11] = 0;
    v9[12] = -1;
    v9[13] = 0;
    v9[14] = -1;
    v9[15] = 0;
    v9[16] = -1;
    v9[17] = 0;
    v9[18] = -1;
    v9[19] = 0;
    v9[20] = -1;
    v9[21] = 0;
    v9[22] = -1;
    v9[23] = 0;
    *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections) = v9;
    sub_240084408(&v11, 0);
    sub_240084408(&v11, 1);
    sub_240084408(&v11, 2);
    sub_240084408(&v11, 3);
    sub_240084408(&v11, 4);
    sub_240084408(&v11, 5);
    sub_240084408(&v11, 6);
    sub_240084408(&v11, 7);
    sub_240084408(&v11, 8);
    sub_240084408(&v11, 9);
    sub_2400A7E98();
  }
  return v0;
}

uint64_t DKISSModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  espresso_plan_destroy();
  espresso_context_destroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKISSModel.__deallocating_deinit()
{
  DKISSModel.deinit();
  return swift_deallocClassInstance();
}

void sub_2400A7E98()
{
  void **v0;
  uint64_t v1;
  void **v2;
  uint64_t v3;
  uint64_t v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void **v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  BOOL v28;
  BOOL v29;
  void *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void **v41;
  void **v42;

  v2 = v0;
  v3 = (uint64_t)v0[6];
  v4 = (uint64_t)v2[7];
  v5 = v2 + 20;
  swift_bridgeObjectRetain();
  sub_2400B10C0((uint64_t)(v2 + 4), v3, v4, (uint64_t)(v2 + 20), 0x10000, 29, 0xD00000000000001BLL, 0x8000000240163410);
  swift_bridgeObjectRelease();
  if (!v1)
  {
    v6 = (uint64_t)v2[8];
    v7 = (uint64_t)v2[9];
    swift_bridgeObjectRetain();
    sub_2400B10C0((uint64_t)(v2 + 4), v6, v7, (uint64_t)(v2 + 41), 0x10000, 29, 0xD00000000000001BLL, 0x8000000240163410);
    swift_bridgeObjectRelease();
    v8 = (uint64_t)v2[10];
    v9 = (uint64_t)v2[11];
    swift_bridgeObjectRetain();
    sub_2400B10C0((uint64_t)(v2 + 4), v8, v9, (uint64_t)(v2 + 62), 0x10000, 29, 0xD00000000000001BLL, 0x8000000240163410);
    swift_bridgeObjectRelease();
    v10 = (uint64_t)v2[12];
    v11 = (uint64_t)v2[13];
    swift_bridgeObjectRetain();
    sub_2400B10C0((uint64_t)(v2 + 4), v10, v11, (uint64_t)(v2 + 83), 0x10000, 29, 0xD00000000000001BLL, 0x8000000240163410);
    swift_bridgeObjectRelease();
    v12 = (uint64_t)v2[14];
    v13 = (uint64_t)v2[15];
    v42 = v2 + 83;
    swift_bridgeObjectRetain();
    v41 = v2 + 104;
    sub_2400B10C0((uint64_t)(v2 + 4), v12, v13, (uint64_t)(v2 + 104), 0x20000, 30, 0xD00000000000001CLL, 0x80000002401633F0);
    swift_bridgeObjectRelease();
    v14 = (uint64_t)v2[16];
    v15 = (uint64_t)v2[17];
    swift_bridgeObjectRetain();
    sub_2400B10C0((uint64_t)(v2 + 4), v14, v15, (uint64_t)(v2 + 125), 0x20000, 30, 0xD00000000000001CLL, 0x80000002401633F0);
    swift_bridgeObjectRelease();
    v16 = (uint64_t)v2[18];
    v17 = (uint64_t)v2[19];
    v18 = v2 + 125;
    swift_bridgeObjectRetain();
    sub_2400B10C0((uint64_t)(v2 + 4), v16, v17, (uint64_t)(v2 + 146), 0x20000, 30, 0xD00000000000001CLL, 0x80000002401633F0);
    swift_bridgeObjectRelease();
    v19 = (uint64_t)v2[31];
    if (v19 <= 0)
    {
      sub_240154B38();
      swift_bridgeObjectRelease();
      sub_240154EBC();
      sub_2401546D0();
      swift_bridgeObjectRelease();
      sub_240080040();
      swift_allocError();
      *(_QWORD *)v40 = 0xD00000000000001FLL;
      *(_QWORD *)(v40 + 8) = 0x80000002401633D0;
      *(_BYTE *)(v40 + 16) = 0;
      swift_willThrow();
      return;
    }
    v20 = *v5;
    if (!*v5)
      goto LABEL_41;
    v21 = (uint64_t)v2[30];
    v22 = v21 * v19;
    if ((unsigned __int128)(v21 * (__int128)v19) >> 64 != (v21 * v19) >> 63)
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    v23 = *v42;
    if (!*v42)
    {
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    v24 = (uint64_t)v2[93];
    v25 = (uint64_t)v2[94];
    v26 = v24 * v25;
    v27 = (unsigned __int128)(v24 * (__int128)v25) >> 64;
    v28 = v27 == v26 >> 63;
    v29 = v27 != v26 >> 63;
    if (!v28)
      goto LABEL_31;
    v30 = *v41;
    if (!*v41)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if ((unsigned __int128)((uint64_t)v2[114] * (__int128)(uint64_t)v2[115]) >> 64 != (uint64_t)((_QWORD)v2[114]
                                                                                             * (_QWORD)v2[115]) >> 63)
      goto LABEL_32;
    v31 = *v18;
    if (!*v18)
    {
LABEL_44:
      __break(1u);
      return;
    }
    if ((unsigned __int128)((uint64_t)v2[135] * (__int128)(uint64_t)v2[136]) >> 64 != (uint64_t)((_QWORD)v2[135]
                                                                                             * (_QWORD)v2[136]) >> 63)
      goto LABEL_33;
    if (v22 < 0)
    {
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v22)
    {
      bzero(v20, 4 * v22);
      v32 = (uint64_t)v2[93];
      v33 = (uint64_t)v2[94];
      v26 = v32 * v33;
      v29 = (unsigned __int128)(v32 * (__int128)v33) >> 64 != (v32 * v33) >> 63;
    }
    if (v29)
      goto LABEL_35;
    if (v26 < 0)
    {
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    if (v26)
      bzero(v23, 4 * v26);
    v34 = (uint64_t)v2[114];
    v35 = (uint64_t)v2[115];
    v36 = v34 * v35;
    if ((unsigned __int128)(v34 * (__int128)v35) >> 64 != (v34 * v35) >> 63)
      goto LABEL_37;
    if (v36 < 0)
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v36)
      bzero(v30, 4 * v36);
    v37 = (uint64_t)v2[135];
    v38 = (uint64_t)v2[136];
    v39 = v37 * v38;
    if ((unsigned __int128)(v37 * (__int128)v38) >> 64 != (v37 * v38) >> 63)
      goto LABEL_39;
    if (v39 < 0)
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v39)
      bzero(v31, 4 * v39);
  }
}

uint64_t sub_2400A8358(uint64_t a1)
{
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  BOOL v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t i;
  unint64_t v21;
  double v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  size_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  size_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  int64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  float *v81;
  double v82;
  _QWORD *v83;
  uint64_t v84;
  double v85;
  char isUniquelyReferenced_nonNull_native;
  char v87;
  unint64_t v88;
  uint64_t v89;
  _BOOL8 v90;
  uint64_t v91;
  char v92;
  unint64_t v93;
  char v94;
  double v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  char v100;
  unint64_t v101;
  uint64_t v102;
  _BOOL8 v103;
  uint64_t v104;
  char v105;
  unint64_t v106;
  char v107;
  _QWORD *v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  _QWORD *v114;
  char v115;
  unint64_t v116;
  uint64_t v117;
  _BOOL8 v118;
  uint64_t v119;
  char v120;
  unint64_t v121;
  char v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t *v133;
  unint64_t v134;
  unint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char v143;
  _QWORD *v144;
  char v145;
  unint64_t v146;
  uint64_t v147;
  _BOOL8 v148;
  uint64_t v149;
  char v150;
  unint64_t v151;
  char v152;
  _QWORD *v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t result;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void *v163;
  _QWORD *v164;
  void *v165;
  void *v166;
  void *v167;
  unint64_t v169;
  unint64_t v170;
  _QWORD *v171;
  unint64_t v172;

  v165 = (void *)v1[20];
  if (!v165)
  {
LABEL_229:
    __break(1u);
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
LABEL_232:
    __break(1u);
LABEL_233:
    __break(1u);
LABEL_234:
    __break(1u);
    goto LABEL_235;
  }
  v4 = v1[30];
  v3 = v1[31];
  v5 = v4 * v3;
  v161 = v4;
  if ((unsigned __int128)(v4 * (__int128)v3) >> 64 != (v4 * v3) >> 63)
    goto LABEL_43;
  v163 = (void *)v1[83];
  if (!v163)
    goto LABEL_230;
  if (v5 < 0)
    goto LABEL_44;
  if (v5)
    bzero(v165, 4 * v5);
  v6 = v1[94];
  if (v6 < 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  if (v6)
    bzero(v163, 4 * v6);
  v171 = v1;
  v172 = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >> 62)
  {
LABEL_46:
    swift_bridgeObjectRetain();
    v7 = sub_240154D30();
    if (v7)
      goto LABEL_12;
    goto LABEL_47;
  }
  v7 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v7)
  {
LABEL_12:
    v8 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
    if ((v2 & 0xC000000000000001) != 0)
    {
      v9 = 0;
      while (1)
      {
        v11 = MEMORY[0x24267D4E0](v9, v2);
        v12 = __OFADD__(v9++, 1);
        if (v12)
        {
          __break(1u);
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          goto LABEL_45;
        }
        v13 = *(_QWORD **)((char *)v171 + v8);
        v14 = v13[2];
        if (v14)
        {
          v15 = *(_QWORD *)(v11 + 16);
          if (v15 == v13[4])
          {
            v10 = 0;
LABEL_15:
            sub_2400B2144(v11, v10, (uint64_t)v165, (uint64_t)v163, v161, *(double *)(a1 + 24));
            goto LABEL_16;
          }
          v10 = 0;
          v16 = v13 + 6;
          v17 = v14 - 1;
          while (v17 != v10)
          {
            v18 = *v16;
            v16 += 2;
            ++v10;
            if (v15 == v18)
              goto LABEL_15;
          }
        }
        v19 = swift_retain();
        MEMORY[0x24267D0CC](v19);
        if (*(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_2401547D8();
        sub_240154814();
        sub_2401547B4();
LABEL_16:
        swift_unknownObjectRelease();
        if (v9 == v7)
          goto LABEL_47;
      }
    }
    for (i = 0; i != v7; ++i)
    {
      if (i >= *(_QWORD *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_42;
      v24 = *(_QWORD **)((char *)v171 + v8);
      v25 = v24[2];
      if (v25)
      {
        v26 = *(_QWORD *)(*(_QWORD *)(v2 + 32 + 8 * i) + 16);
        if (v26 == v24[4])
        {
          v21 = 0;
LABEL_29:
          v22 = *(double *)(a1 + 24);
          v23 = swift_retain();
          sub_2400B2144(v23, v21, (uint64_t)v165, (uint64_t)v163, v161, v22);
          goto LABEL_30;
        }
        v21 = 0;
        v27 = v24 + 6;
        v28 = v25 - 1;
        while (v28 != v21)
        {
          v29 = *v27;
          v27 += 2;
          ++v21;
          if (v26 == v29)
            goto LABEL_29;
        }
      }
      v30 = swift_retain_n();
      MEMORY[0x24267D0CC](v30);
      if (*(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_2401547D8();
      sub_240154814();
      sub_2401547B4();
LABEL_30:
      swift_release();
    }
  }
LABEL_47:
  swift_bridgeObjectRelease();
  sub_2400AA374(1.0, *(double *)(a1 + 24));
  if (v172 >> 62)
    goto LABEL_83;
  v31 = *(_QWORD *)((v172 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v31; v31 = sub_240154D30())
  {
    v32 = 0;
    v33 = (char *)v171 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_unusedIndexes;
    while ((v172 & 0xC000000000000001) != 0)
    {
      v35 = MEMORY[0x24267D4E0](v32, v172);
      v12 = __OFADD__(v32++, 1);
      if (v12)
        goto LABEL_79;
LABEL_58:
      v36 = *(_QWORD **)v33;
      v37 = *(_BYTE *)(*(_QWORD *)v33 + 32);
      v38 = 1 << v37;
      v39 = *(_QWORD *)(*(_QWORD *)v33 + 56);
      if (v39)
      {
        v40 = 0;
      }
      else
      {
        v43 = v37 & 0x3F;
        if (v43 < 7)
          goto LABEL_51;
        v39 = v36[8];
        if (v39)
        {
          v40 = 1;
        }
        else
        {
          if (v43 < 8)
            goto LABEL_51;
          v39 = v36[9];
          if (v39)
          {
            v40 = 2;
          }
          else
          {
            v39 = v36[10];
            if (!v39)
            {
              v44 = 0;
              v45 = (unint64_t)(v38 + 63) >> 6;
              if (v45 <= 4)
                v45 = 4;
              v46 = v45 - 4;
              while (v46 != v44)
              {
                v39 = v36[v44++ + 11];
                if (v39)
                {
                  v40 = v44 + 3;
                  goto LABEL_60;
                }
              }
              goto LABEL_51;
            }
            v40 = 3;
          }
        }
      }
LABEL_60:
      v41 = __clz(__rbit64(v39));
      v42 = v41 + (v40 << 6);
      if (v42 != v38)
      {
        if (v42 < 0 || v42 >= v38)
          goto LABEL_80;
        if (((*(_QWORD *)(*(_QWORD *)v33 + 56 + (((unint64_t)v42 >> 3) & 0xFFFFFFFFFFFFF8)) >> v41) & 1) == 0)
          goto LABEL_81;
        v34 = *(_QWORD *)(v36[6] + 8 * v42);
        sub_2400B2144(v35, v34, (uint64_t)v165, (uint64_t)v163, v161, *(double *)(a1 + 24));
        sub_2400B0360(v34);
      }
LABEL_51:
      swift_release();
      if (v32 == v31)
        goto LABEL_84;
    }
    if (v32 >= *(_QWORD *)((v172 & 0xFFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_82;
    v35 = *(_QWORD *)(v172 + 32 + 8 * v32);
    swift_retain();
    v12 = __OFADD__(v32++, 1);
    if (!v12)
      goto LABEL_58;
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    swift_bridgeObjectRetain();
  }
LABEL_84:
  swift_bridgeObjectRelease();
  v47 = v171;
  v48 = (char *)v171[41];
  if (!v48)
    goto LABEL_231;
  v49 = v171[51];
  v50 = v171[52];
  v51 = v49 * v50;
  if ((unsigned __int128)(v49 * (__int128)v50) >> 64 != (v49 * v50) >> 63)
    goto LABEL_222;
  v52 = (char *)v171[104];
  if (!v52)
    goto LABEL_232;
  if ((unsigned __int128)((uint64_t)v171[114] * (__int128)(uint64_t)v171[115]) >> 64 != (uint64_t)(v171[114] * v171[115]) >> 63)
    goto LABEL_223;
  v53 = (char *)v171[62];
  if (!v53)
    goto LABEL_233;
  if ((unsigned __int128)((uint64_t)v171[72] * (__int128)(uint64_t)v171[73]) >> 64 != (uint64_t)(v171[72] * v171[73]) >> 63)
    goto LABEL_224;
  v54 = (char *)v171[125];
  if (!v54)
    goto LABEL_234;
  if ((unsigned __int128)((uint64_t)v171[135] * (__int128)(uint64_t)v171[136]) >> 64 != (uint64_t)(v171[135] * v171[136]) >> 63)
    goto LABEL_225;
  if (v51 < 0)
    goto LABEL_237;
  v55 = 4 * v51;
  if (&v48[4 * v51] > v52 && &v52[v55] > v48)
    goto LABEL_237;
  memcpy(v48, v52, v55);
  v56 = v171[72];
  v57 = v171[73];
  v58 = v56 * v57;
  if ((unsigned __int128)(v56 * (__int128)v57) >> 64 != (v56 * v57) >> 63)
    goto LABEL_226;
  if (v58 < 0)
    goto LABEL_237;
  v59 = 4 * v58;
  if (&v53[4 * v58] > v54 && &v54[v59] > v53)
    goto LABEL_237;
  memcpy(v53, v54, v59);
  espresso_plan_execute_sync();
  v158 = v171[146];
  if (v158)
  {
    swift_bridgeObjectRelease();
    if ((unsigned __int128)((uint64_t)v171[156] * (__int128)(uint64_t)v171[157]) >> 64 != (uint64_t)(v171[156] * v171[157]) >> 63)
      goto LABEL_227;
    v60 = sub_240107918(MEMORY[0x24BEE4AF8]);
    v61 = v171[157];
    if ((v61 & 0x8000000000000000) == 0)
    {
      v62 = v60;
      if (v61)
      {
        v63 = 0;
        v159 = v171[157];
        v160 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRowMap;
        v162 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
        while (1)
        {
          if (v63 == v61)
            goto LABEL_209;
          v64 = v47[156];
          v65 = v63 * v64;
          if ((unsigned __int128)(v63 * (__int128)v64) >> 64 != (v63 * v64) >> 63)
            goto LABEL_210;
          v66 = *(_QWORD *)((char *)v47 + v162);
          if ((unint64_t)v63 >= *(_QWORD *)(v66 + 16))
            goto LABEL_211;
          v67 = *(_QWORD *)(v66 + 16 * v63 + 32);
          if ((v67 & 0x8000000000000000) == 0)
            break;
LABEL_106:
          if (++v63 == v61)
            goto LABEL_169;
        }
        v12 = __OFADD__(v65, v64);
        v68 = v65 + v64;
        if (v12)
          goto LABEL_212;
        v166 = (void *)v67;
        v69 = v68 - v65;
        if (v68 < v65)
          goto LABEL_213;
        v70 = (char *)MEMORY[0x24BEE4AF8];
        if (v68 != v65)
        {
          if (v69 >= 1)
          {
            __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EF8);
            v70 = (char *)swift_allocObject();
            v71 = _swift_stdlib_malloc_size(v70);
            v72 = v71 - 32;
            if (v71 < 32)
              v72 = v71 - 29;
            *((_QWORD *)v70 + 2) = v69;
            *((_QWORD *)v70 + 3) = 2 * (v72 >> 2);
          }
          v73 = v65 + v69;
          if (__OFADD__(v65, v69))
            goto LABEL_216;
          if (v73 < v65)
            goto LABEL_217;
          if (v73 == v65)
          {
            v74 = 0;
          }
          else
          {
            v74 = v69;
            if (v69 < 0)
              goto LABEL_237;
            v75 = v70 + 32;
            v76 = (char *)(v158 + 4 * v65);
            if (v76 < &v70[4 * v69 + 32] && v75 < &v76[4 * v69])
              goto LABEL_237;
            memcpy(v75, v76, 4 * v69);
          }
          if (v74 != v69)
            goto LABEL_218;
        }
        v169 = v62;
        v78 = *((_QWORD *)v70 + 2);
        v79 = 0;
        if (v78)
        {
          v80 = 0;
          v81 = (float *)(v70 + 32);
          v82 = -INFINITY;
          v83 = (_QWORD *)MEMORY[0x24BEE4B00];
          while (1)
          {
            v85 = exp(-v81[v80]);
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v88 = sub_24013EF5C(v80);
            v89 = v83[2];
            v90 = (v87 & 1) == 0;
            v91 = v89 + v90;
            if (__OFADD__(v89, v90))
              break;
            v92 = v87;
            if (v83[3] >= v91)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                sub_2400AFA14();
            }
            else
            {
              sub_2400AD088(v91, isUniquelyReferenced_nonNull_native);
              v93 = sub_24013EF5C(v80);
              if ((v92 & 1) != (v94 & 1))
                goto LABEL_236;
              v88 = v93;
            }
            v95 = 1.0 / (v85 + 1.0);
            if ((v92 & 1) != 0)
            {
              *(double *)(v83[7] + 8 * v88) = v95;
            }
            else
            {
              v83[(v88 >> 6) + 8] |= 1 << v88;
              v96 = 8 * v88;
              *(_QWORD *)(v83[6] + v96) = v80;
              *(double *)(v83[7] + v96) = v95;
              v97 = v83[2];
              v12 = __OFADD__(v97, 1);
              v98 = v97 + 1;
              if (v12)
                goto LABEL_205;
              v83[2] = v98;
            }
            v84 = v80 + 1;
            swift_bridgeObjectRelease();
            if (v82 < v81[v80])
            {
              v82 = v81[v80];
              v79 = v80;
            }
            ++v80;
            if (v78 == v84)
              goto LABEL_147;
          }
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
LABEL_212:
          __break(1u);
LABEL_213:
          __break(1u);
LABEL_214:
          __break(1u);
LABEL_215:
          __break(1u);
LABEL_216:
          __break(1u);
LABEL_217:
          __break(1u);
LABEL_218:
          __break(1u);
LABEL_219:
          __break(1u);
LABEL_220:
          __break(1u);
          goto LABEL_221;
        }
        v83 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_147:
        swift_release();
        v99 = swift_isUniquelyReferenced_nonNull_native();
        v101 = sub_24013EF5C(v63);
        v102 = *(_QWORD *)(v169 + 16);
        v103 = (v100 & 1) == 0;
        v104 = v102 + v103;
        if (__OFADD__(v102, v103))
          goto LABEL_214;
        v105 = v100;
        if (*(_QWORD *)(v169 + 24) < v104)
        {
          sub_2400AD330(v104, v99);
          v106 = sub_24013EF5C(v63);
          if ((v105 & 1) != (v107 & 1))
            goto LABEL_236;
          v101 = v106;
          v47 = v171;
          v62 = v169;
          if ((v105 & 1) == 0)
            goto LABEL_156;
LABEL_154:
          v108 = (_QWORD *)(*(_QWORD *)(v62 + 56) + 24 * v101);
          swift_bridgeObjectRelease();
          *v108 = v166;
          v108[1] = v79;
          v108[2] = v83;
          v109 = (uint64_t)v166;
          goto LABEL_158;
        }
        if ((v99 & 1) != 0)
        {
          v47 = v171;
          v62 = v169;
          if ((v100 & 1) != 0)
            goto LABEL_154;
        }
        else
        {
          sub_2400AFBA0();
          v47 = v171;
          v62 = v169;
          if ((v105 & 1) != 0)
            goto LABEL_154;
        }
LABEL_156:
        *(_QWORD *)(v62 + 8 * (v101 >> 6) + 64) |= 1 << v101;
        *(_QWORD *)(*(_QWORD *)(v62 + 48) + 8 * v101) = v63;
        v110 = (_QWORD *)(*(_QWORD *)(v62 + 56) + 24 * v101);
        v109 = (uint64_t)v166;
        *v110 = v166;
        v110[1] = v79;
        v110[2] = v83;
        v111 = *(_QWORD *)(v62 + 16);
        v12 = __OFADD__(v111, 1);
        v112 = v111 + 1;
        if (v12)
          goto LABEL_219;
        *(_QWORD *)(v62 + 16) = v112;
LABEL_158:
        swift_bridgeObjectRelease();
        v113 = swift_isUniquelyReferenced_nonNull_native();
        v114 = *(_QWORD **)((char *)v47 + v160);
        *(_QWORD *)((char *)v47 + v160) = 0x8000000000000000;
        v116 = sub_24013EF5C(v109);
        v117 = v114[2];
        v118 = (v115 & 1) == 0;
        v119 = v117 + v118;
        if (__OFADD__(v117, v118))
          goto LABEL_215;
        v120 = v115;
        if (v114[3] < v119)
        {
          sub_2400ACDE4(v119, v113);
          v121 = sub_24013EF5C(v109);
          if ((v120 & 1) != (v122 & 1))
            goto LABEL_236;
          v116 = v121;
          v123 = v114;
          if ((v120 & 1) == 0)
            goto LABEL_165;
LABEL_104:
          *(_QWORD *)(v123[7] + 8 * v116) = v63;
LABEL_105:
          *(_QWORD *)((char *)v47 + v160) = v123;
          swift_bridgeObjectRelease();
          v61 = v159;
          goto LABEL_106;
        }
        if ((v113 & 1) != 0)
        {
          v123 = v114;
          if ((v115 & 1) != 0)
            goto LABEL_104;
        }
        else
        {
          sub_2400AF888();
          v123 = v114;
          if ((v120 & 1) != 0)
            goto LABEL_104;
        }
LABEL_165:
        v123[(v116 >> 6) + 8] |= 1 << v116;
        v124 = 8 * v116;
        *(_QWORD *)(v123[6] + v124) = v109;
        *(_QWORD *)(v123[7] + v124) = v63;
        v125 = v123[2];
        v12 = __OFADD__(v125, 1);
        v126 = v125 + 1;
        if (v12)
          goto LABEL_220;
        v123[2] = v126;
        goto LABEL_105;
      }
LABEL_169:
      v164 = (_QWORD *)(v62 + 64);
      v127 = 1 << *(_BYTE *)(v62 + 32);
      v128 = -1;
      if (v127 < 64)
        v128 = ~(-1 << v127);
      v129 = v128 & *(_QWORD *)(v62 + 64);
      v130 = v62;
      v131 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap;
      v167 = (void *)((unint64_t)(v127 + 63) >> 6);
      v170 = v130;
      swift_bridgeObjectRetain();
      v132 = 0;
      while (1)
      {
        if (v129)
        {
          v134 = __clz(__rbit64(v129));
          v129 &= v129 - 1;
          v135 = v134 | (v132 << 6);
        }
        else
        {
          v136 = v132 + 1;
          if (__OFADD__(v132, 1))
            goto LABEL_208;
          if (v136 >= (uint64_t)v167)
          {
LABEL_203:
            swift_release();
            return v170;
          }
          v137 = v164[v136];
          ++v132;
          if (!v137)
          {
            v132 = v136 + 1;
            if (v136 + 1 >= (uint64_t)v167)
              goto LABEL_203;
            v137 = v164[v132];
            if (!v137)
            {
              v132 = v136 + 2;
              if (v136 + 2 >= (uint64_t)v167)
                goto LABEL_203;
              v137 = v164[v132];
              if (!v137)
              {
                v132 = v136 + 3;
                if (v136 + 3 >= (uint64_t)v167)
                  goto LABEL_203;
                v137 = v164[v132];
                if (!v137)
                {
                  v138 = v136 + 4;
                  if (v138 >= (uint64_t)v167)
                    goto LABEL_203;
                  v137 = v164[v138];
                  if (!v137)
                  {
                    while (1)
                    {
                      v132 = v138 + 1;
                      if (__OFADD__(v138, 1))
                        break;
                      if (v132 >= (uint64_t)v167)
                        goto LABEL_203;
                      v137 = v164[v132];
                      ++v138;
                      if (v137)
                        goto LABEL_191;
                    }
LABEL_221:
                    __break(1u);
LABEL_222:
                    __break(1u);
LABEL_223:
                    __break(1u);
LABEL_224:
                    __break(1u);
LABEL_225:
                    __break(1u);
LABEL_226:
                    __break(1u);
LABEL_227:
                    __break(1u);
                    break;
                  }
                  v132 = v138;
                }
              }
            }
          }
LABEL_191:
          v129 = (v137 - 1) & v137;
          v135 = __clz(__rbit64(v137)) + (v132 << 6);
        }
        v139 = (uint64_t *)(*(_QWORD *)(v170 + 56) + 24 * v135);
        v141 = *v139;
        v140 = v139[1];
        v142 = v139[2];
        swift_bridgeObjectRetain_n();
        v143 = swift_isUniquelyReferenced_nonNull_native();
        v144 = *(_QWORD **)((char *)v47 + v131);
        *(_QWORD *)((char *)v47 + v131) = 0x8000000000000000;
        v146 = sub_24013EF5C(v141);
        v147 = v144[2];
        v148 = (v145 & 1) == 0;
        v149 = v147 + v148;
        if (__OFADD__(v147, v148))
          goto LABEL_206;
        v150 = v145;
        if (v144[3] >= v149)
        {
          if ((v143 & 1) != 0)
          {
            v153 = v144;
            if ((v145 & 1) != 0)
              goto LABEL_172;
          }
          else
          {
            sub_2400AFBA0();
            v153 = v144;
            if ((v150 & 1) != 0)
              goto LABEL_172;
          }
        }
        else
        {
          sub_2400AD330(v149, v143);
          v151 = sub_24013EF5C(v141);
          if ((v150 & 1) != (v152 & 1))
            goto LABEL_236;
          v146 = v151;
          v153 = v144;
          if ((v150 & 1) != 0)
          {
LABEL_172:
            v133 = (uint64_t *)(v153[7] + 24 * v146);
            swift_bridgeObjectRelease();
            *v133 = v141;
            v133[1] = v140;
            v133[2] = v142;
            goto LABEL_173;
          }
        }
        v153[(v146 >> 6) + 8] |= 1 << v146;
        *(_QWORD *)(v153[6] + 8 * v146) = v141;
        v154 = (uint64_t *)(v153[7] + 24 * v146);
        *v154 = v141;
        v154[1] = v140;
        v154[2] = v142;
        v155 = v153[2];
        v12 = __OFADD__(v155, 1);
        v156 = v155 + 1;
        if (v12)
          goto LABEL_207;
        v153[2] = v156;
LABEL_173:
        v47 = v171;
        *(_QWORD *)((char *)v171 + v131) = v153;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    __break(1u);
    goto LABEL_229;
  }
LABEL_235:
  __break(1u);
LABEL_236:
  sub_240154F70();
  __break(1u);
LABEL_237:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400A91F4(uint64_t a1, char a2, double a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  uint64_t v43;
  _BOOL8 v44;
  uint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char *v63;
  unint64_t v64;
  double *v65;
  _QWORD *v66;
  char v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  char *v84;
  size_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  size_t v89;
  unint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  int64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  float *v111;
  double v112;
  _QWORD *v113;
  uint64_t v114;
  double v115;
  char isUniquelyReferenced_nonNull_native;
  char v117;
  unint64_t v118;
  uint64_t v119;
  _BOOL8 v120;
  uint64_t v121;
  char v122;
  unint64_t v123;
  char v124;
  double v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  char v130;
  unint64_t v131;
  uint64_t v132;
  _BOOL8 v133;
  uint64_t v134;
  char v135;
  unint64_t v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  _QWORD *v145;
  char v146;
  unint64_t v147;
  uint64_t v148;
  _BOOL8 v149;
  uint64_t v150;
  char v151;
  unint64_t v152;
  char v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  unint64_t v164;
  unint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char v173;
  _QWORD *v174;
  char v175;
  unint64_t v176;
  uint64_t v177;
  _BOOL8 v178;
  uint64_t v179;
  char v180;
  unint64_t v181;
  char v182;
  _QWORD *v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t result;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  __int128 v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  void *v199;
  char *v200;
  void *v201;
  void *v202;
  _QWORD *v203;
  _QWORD *v204;
  _QWORD *v205;
  uint64_t v206;
  unint64_t v207;

  v8 = v4;
  v206 = v8;
  if ((a2 & 1) != 0)
  {
    v202 = *(void **)(v8 + 160);
    if (!v202)
    {
LABEL_265:
      __break(1u);
      goto LABEL_266;
    }
    v11 = *(_QWORD *)(v8 + 240);
    v10 = *(_QWORD *)(v8 + 248);
    v12 = v11 * v10;
    v196 = v11;
    if ((unsigned __int128)(v11 * (__int128)v10) >> 64 == (v11 * v10) >> 63)
    {
      v199 = *(void **)(v8 + 664);
      if (!v199)
      {
LABEL_266:
        __break(1u);
LABEL_267:
        __break(1u);
LABEL_268:
        __break(1u);
LABEL_269:
        __break(1u);
LABEL_270:
        __break(1u);
        goto LABEL_271;
      }
      if ((v12 & 0x8000000000000000) == 0)
      {
        v7 = a3;
        if (v12)
          bzero(v202, 4 * v12);
        v13 = *(_QWORD *)(v8 + 752);
        if ((v13 & 0x8000000000000000) == 0)
        {
          if (v13)
            bzero(v199, 4 * v13);
          v207 = MEMORY[0x24BEE4AF8];
          v6 = *(_QWORD *)(a1 + 24);
          if (!(v6 >> 62))
          {
            v8 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            if (v8)
              goto LABEL_13;
            goto LABEL_81;
          }
LABEL_80:
          swift_bridgeObjectRetain();
          v8 = sub_240154D30();
          if (v8)
          {
LABEL_13:
            v14 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
            if ((v6 & 0xC000000000000001) != 0)
            {
              v15 = 0;
              do
              {
                v16 = MEMORY[0x24267D4E0](v15, v6);
                v17 = __OFADD__(v15++, 1);
                if (v17)
                  goto LABEL_72;
                v18 = *(_QWORD *)(v206 + v14);
                v19 = *(_QWORD *)(v18 + 16);
                if (v19)
                {
                  v20 = 0;
                  v21 = (uint64_t *)(v18 + 32);
                  while (1)
                  {
                    v22 = *v21;
                    v21 += 2;
                    v23 = *(_QWORD *)(v16 + 56) == v22 ? *(_BYTE *)(v16 + 64) : 1;
                    if ((v23 & 1) == 0)
                      break;
                    if (v19 == ++v20)
                      goto LABEL_25;
                  }
                  sub_2400B11D4((double *)v16, v20, (uint64_t)v202, (uint64_t)v199, v196);
                }
                else
                {
LABEL_25:
                  v24 = swift_retain();
                  MEMORY[0x24267D0CC](v24);
                  if (*(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_2401547D8();
                  sub_240154814();
                  sub_2401547B4();
                }
                swift_unknownObjectRelease();
              }
              while (v15 != v8);
            }
            else
            {
              v3 = 0;
              v5 = v6 & 0xFFFFFFFFFFFFFF8;
              do
              {
                if (v3 >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
                  goto LABEL_73;
                v53 = *(_QWORD *)(v6 + 32 + 8 * v3);
                v54 = *(_QWORD *)(v206 + v14);
                v55 = *(_QWORD *)(v54 + 16);
                if (v55)
                {
                  v56 = 0;
                  v57 = (uint64_t *)(v54 + 32);
                  while (1)
                  {
                    v58 = *v57;
                    v57 += 2;
                    v59 = *(_QWORD *)(v53 + 56) == v58 ? *(_BYTE *)(v53 + 64) : 1;
                    if ((v59 & 1) == 0)
                      break;
                    if (v55 == ++v56)
                      goto LABEL_68;
                  }
                  v52 = (double *)swift_retain();
                  sub_2400B11D4(v52, v56, (uint64_t)v202, (uint64_t)v199, v196);
                }
                else
                {
LABEL_68:
                  v60 = swift_retain_n();
                  MEMORY[0x24267D0CC](v60);
                  if (*(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8)
                                                                                     + 0x18) >> 1)
                    sub_2401547D8();
                  sub_240154814();
                  sub_2401547B4();
                }
                ++v3;
                swift_release();
              }
              while (v3 != v8);
            }
          }
LABEL_81:
          swift_bridgeObjectRelease();
          sub_2400AA374(1.0, v7);
          if (v207 >> 62)
            goto LABEL_117;
          v61 = *(_QWORD *)((v207 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          for (; v61; v61 = sub_240154D30())
          {
            v62 = 0;
            v63 = (char *)(v206 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_unusedIndexes);
            while ((v207 & 0xC000000000000001) != 0)
            {
              v65 = (double *)MEMORY[0x24267D4E0](v62, v207);
              v17 = __OFADD__(v62++, 1);
              if (v17)
                goto LABEL_113;
LABEL_92:
              v66 = *(_QWORD **)v63;
              v67 = *(_BYTE *)(*(_QWORD *)v63 + 32);
              v68 = 1 << v67;
              v69 = *(_QWORD *)(*(_QWORD *)v63 + 56);
              if (v69)
              {
                v70 = 0;
              }
              else
              {
                v73 = v67 & 0x3F;
                if (v73 < 7)
                  goto LABEL_85;
                v69 = v66[8];
                if (v69)
                {
                  v70 = 1;
                }
                else
                {
                  if (v73 < 8)
                    goto LABEL_85;
                  v69 = v66[9];
                  if (v69)
                  {
                    v70 = 2;
                  }
                  else
                  {
                    v69 = v66[10];
                    if (!v69)
                    {
                      v74 = 0;
                      v75 = (unint64_t)(v68 + 63) >> 6;
                      if (v75 <= 4)
                        v75 = 4;
                      v76 = v75 - 4;
                      while (v76 != v74)
                      {
                        v69 = v66[v74++ + 11];
                        if (v69)
                        {
                          v70 = v74 + 3;
                          goto LABEL_94;
                        }
                      }
                      goto LABEL_85;
                    }
                    v70 = 3;
                  }
                }
              }
LABEL_94:
              v71 = __clz(__rbit64(v69));
              v72 = v71 + (v70 << 6);
              if (v72 != v68)
              {
                if (v72 < 0 || v72 >= v68)
                  goto LABEL_114;
                if (((*(_QWORD *)(*(_QWORD *)v63 + 56 + (((unint64_t)v72 >> 3) & 0xFFFFFFFFFFFFF8)) >> v71) & 1) == 0)
                  goto LABEL_115;
                v64 = *(_QWORD *)(v66[6] + 8 * v72);
                sub_2400B11D4(v65, v64, (uint64_t)v202, (uint64_t)v199, v196);
                sub_2400B0360(v64);
              }
LABEL_85:
              swift_release();
              if (v62 == v61)
                goto LABEL_118;
            }
            if (v62 >= *(_QWORD *)((v207 & 0xFFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_116;
            v65 = *(double **)(v207 + 32 + 8 * v62);
            swift_retain();
            v17 = __OFADD__(v62++, 1);
            if (!v17)
              goto LABEL_92;
LABEL_113:
            __break(1u);
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
LABEL_117:
            swift_bridgeObjectRetain();
          }
LABEL_118:
          swift_bridgeObjectRelease();
          v77 = (_QWORD *)v206;
          v78 = *(char **)(v206 + 328);
          if (!v78)
            goto LABEL_267;
          v79 = *(_QWORD *)(v206 + 408);
          v80 = *(_QWORD *)(v206 + 416);
          v81 = v79 * v80;
          if ((unsigned __int128)(v79 * (__int128)v80) >> 64 != (v79 * v80) >> 63)
            goto LABEL_257;
          v82 = *(char **)(v206 + 832);
          if (!v82)
            goto LABEL_268;
          if ((unsigned __int128)(*(uint64_t *)(v206 + 912) * (__int128)*(uint64_t *)(v206 + 920)) >> 64 != (uint64_t)(*(_QWORD *)(v206 + 912) * *(_QWORD *)(v206 + 920)) >> 63)
            goto LABEL_258;
          v83 = *(char **)(v206 + 496);
          if (!v83)
            goto LABEL_269;
          if ((unsigned __int128)(*(uint64_t *)(v206 + 576) * (__int128)*(uint64_t *)(v206 + 584)) >> 64 != (uint64_t)(*(_QWORD *)(v206 + 576) * *(_QWORD *)(v206 + 584)) >> 63)
            goto LABEL_259;
          v84 = *(char **)(v206 + 1000);
          if (!v84)
            goto LABEL_270;
          if ((unsigned __int128)(*(uint64_t *)(v206 + 1080) * (__int128)*(uint64_t *)(v206 + 1088)) >> 64 != (uint64_t)(*(_QWORD *)(v206 + 1080) * *(_QWORD *)(v206 + 1088)) >> 63)
            goto LABEL_260;
          if (v81 < 0)
            goto LABEL_274;
          v85 = 4 * v81;
          if (&v78[4 * v81] > v82 && &v82[v85] > v78)
            goto LABEL_274;
          memcpy(v78, v82, v85);
          v86 = *(_QWORD *)(v206 + 576);
          v87 = *(_QWORD *)(v206 + 584);
          v88 = v86 * v87;
          if ((unsigned __int128)(v86 * (__int128)v87) >> 64 != (v86 * v87) >> 63)
            goto LABEL_261;
          if (v88 < 0 || (v89 = 4 * v88, &v83[4 * v88] > v84) && &v84[v89] > v83)
          {
LABEL_274:
            result = sub_240154D60();
            __break(1u);
            return result;
          }
          memcpy(v83, v84, v89);
          espresso_plan_execute_sync();
          v189 = *(_QWORD *)(v206 + 1168);
          if (!v189)
          {
LABEL_271:
            __break(1u);
LABEL_272:
            sub_240154F70();
            __break(1u);
LABEL_273:
            sub_240154D00();
            __break(1u);
            goto LABEL_274;
          }
          swift_bridgeObjectRelease();
          if ((unsigned __int128)(*(uint64_t *)(v206 + 1248) * (__int128)*(uint64_t *)(v206 + 1256)) >> 64 != (uint64_t)(*(_QWORD *)(v206 + 1248) * *(_QWORD *)(v206 + 1256)) >> 63)
            goto LABEL_262;
          v90 = sub_240107918(MEMORY[0x24BEE4AF8]);
          v91 = *(_QWORD *)(v206 + 1256);
          if ((v91 & 0x8000000000000000) == 0)
          {
            v92 = (_QWORD *)v90;
            if (v91)
            {
              v93 = 0;
              v191 = *(_QWORD *)(v206 + 1256);
              v193 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRowMap;
              v195 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
              while (1)
              {
                if (v93 == v91)
                  goto LABEL_244;
                v94 = v77[156];
                v95 = v93 * v94;
                if ((unsigned __int128)(v93 * (__int128)v94) >> 64 != (v93 * v94) >> 63)
                  goto LABEL_245;
                v96 = *(_QWORD *)((char *)v77 + v195);
                if ((unint64_t)v93 >= *(_QWORD *)(v96 + 16))
                  goto LABEL_246;
                v97 = *(_QWORD *)(v96 + 16 * v93 + 32);
                if ((v97 & 0x8000000000000000) == 0)
                  break;
LABEL_140:
                if (++v93 == v91)
                  goto LABEL_203;
              }
              v17 = __OFADD__(v95, v94);
              v98 = v95 + v94;
              if (v17)
                goto LABEL_247;
              v99 = v98 - v95;
              if (v98 < v95)
                goto LABEL_248;
              v100 = (char *)MEMORY[0x24BEE4AF8];
              if (v98 != v95)
              {
                if (v99 > 0)
                {
                  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EF8);
                  v100 = (char *)swift_allocObject();
                  v101 = _swift_stdlib_malloc_size(v100);
                  v102 = v101 - 32;
                  if (v101 < 32)
                    v102 = v101 - 29;
                  *((_QWORD *)v100 + 2) = v99;
                  *((_QWORD *)v100 + 3) = 2 * (v102 >> 2);
                }
                v103 = v95 + v99;
                if (__OFADD__(v95, v99))
                  goto LABEL_251;
                if (v103 < v95)
                  goto LABEL_252;
                if (v103 == v95)
                {
                  v104 = 0;
                }
                else
                {
                  v104 = v99;
                  if (v99 < 0)
                    goto LABEL_274;
                  v105 = v100 + 32;
                  v106 = (char *)(v189 + 4 * v95);
                  if (v106 < &v100[4 * v99 + 32] && v105 < &v106[4 * v99])
                    goto LABEL_274;
                  memcpy(v105, v106, 4 * v99);
                }
                if (v104 != v99)
                  goto LABEL_253;
              }
              v197 = v97;
              v204 = v92;
              v108 = *((_QWORD *)v100 + 2);
              v109 = 0;
              if (v108)
              {
                v110 = 0;
                v111 = (float *)(v100 + 32);
                v112 = -INFINITY;
                v113 = (_QWORD *)MEMORY[0x24BEE4B00];
                while (1)
                {
                  v115 = exp(-v111[v110]);
                  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                  v118 = sub_24013EF5C(v110);
                  v119 = v113[2];
                  v120 = (v117 & 1) == 0;
                  v121 = v119 + v120;
                  if (__OFADD__(v119, v120))
                    break;
                  v122 = v117;
                  if (v113[3] >= v121)
                  {
                    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                      sub_2400AFA14();
                  }
                  else
                  {
                    sub_2400AD088(v121, isUniquelyReferenced_nonNull_native);
                    v123 = sub_24013EF5C(v110);
                    if ((v122 & 1) != (v124 & 1))
                      goto LABEL_272;
                    v118 = v123;
                  }
                  v125 = 1.0 / (v115 + 1.0);
                  if ((v122 & 1) != 0)
                  {
                    *(double *)(v113[7] + 8 * v118) = v125;
                  }
                  else
                  {
                    v113[(v118 >> 6) + 8] |= 1 << v118;
                    v126 = 8 * v118;
                    *(_QWORD *)(v113[6] + v126) = v110;
                    *(double *)(v113[7] + v126) = v125;
                    v127 = v113[2];
                    v17 = __OFADD__(v127, 1);
                    v128 = v127 + 1;
                    if (v17)
                      goto LABEL_240;
                    v113[2] = v128;
                  }
                  v114 = v110 + 1;
                  swift_bridgeObjectRelease();
                  if (v112 < v111[v110])
                  {
                    v112 = v111[v110];
                    v109 = v110;
                  }
                  ++v110;
                  if (v108 == v114)
                    goto LABEL_181;
                }
                __break(1u);
LABEL_240:
                __break(1u);
LABEL_241:
                __break(1u);
LABEL_242:
                __break(1u);
LABEL_243:
                __break(1u);
LABEL_244:
                __break(1u);
LABEL_245:
                __break(1u);
LABEL_246:
                __break(1u);
LABEL_247:
                __break(1u);
LABEL_248:
                __break(1u);
LABEL_249:
                __break(1u);
LABEL_250:
                __break(1u);
LABEL_251:
                __break(1u);
LABEL_252:
                __break(1u);
LABEL_253:
                __break(1u);
LABEL_254:
                __break(1u);
LABEL_255:
                __break(1u);
                goto LABEL_256;
              }
              v113 = (_QWORD *)MEMORY[0x24BEE4B00];
LABEL_181:
              swift_release();
              v129 = swift_isUniquelyReferenced_nonNull_native();
              v131 = sub_24013EF5C(v93);
              v132 = v204[2];
              v133 = (v130 & 1) == 0;
              v134 = v132 + v133;
              if (__OFADD__(v132, v133))
                goto LABEL_249;
              v135 = v130;
              if (v204[3] < v134)
              {
                sub_2400AD330(v134, v129);
                v136 = sub_24013EF5C(v93);
                v138 = v193;
                v139 = v197;
                if ((v135 & 1) != (v137 & 1))
                  goto LABEL_272;
                v131 = v136;
                v92 = v204;
                if ((v135 & 1) == 0)
                  goto LABEL_190;
LABEL_188:
                v140 = (uint64_t *)(v92[7] + 24 * v131);
                swift_bridgeObjectRelease();
                *v140 = v139;
                v140[1] = v109;
                v140[2] = (uint64_t)v113;
                goto LABEL_192;
              }
              v138 = v193;
              v139 = v197;
              if ((v129 & 1) != 0)
              {
                v92 = v204;
                if ((v130 & 1) != 0)
                  goto LABEL_188;
              }
              else
              {
                sub_2400AFBA0();
                v92 = v204;
                if ((v135 & 1) != 0)
                  goto LABEL_188;
              }
LABEL_190:
              v92[(v131 >> 6) + 8] |= 1 << v131;
              *(_QWORD *)(v92[6] + 8 * v131) = v93;
              v141 = (uint64_t *)(v92[7] + 24 * v131);
              *v141 = v139;
              v141[1] = v109;
              v141[2] = (uint64_t)v113;
              v142 = v92[2];
              v17 = __OFADD__(v142, 1);
              v143 = v142 + 1;
              if (v17)
                goto LABEL_254;
              v92[2] = v143;
LABEL_192:
              swift_bridgeObjectRelease();
              v144 = swift_isUniquelyReferenced_nonNull_native();
              v145 = *(_QWORD **)(v206 + v138);
              *(_QWORD *)(v206 + v138) = 0x8000000000000000;
              v147 = sub_24013EF5C(v139);
              v148 = v145[2];
              v149 = (v146 & 1) == 0;
              v150 = v148 + v149;
              if (__OFADD__(v148, v149))
                goto LABEL_250;
              v151 = v146;
              if (v145[3] < v150)
              {
                sub_2400ACDE4(v150, v144);
                v152 = sub_24013EF5C(v139);
                if ((v151 & 1) != (v153 & 1))
                  goto LABEL_272;
                v147 = v152;
                v154 = v145;
                if ((v151 & 1) == 0)
                  goto LABEL_199;
LABEL_138:
                *(_QWORD *)(v154[7] + 8 * v147) = v93;
LABEL_139:
                v77 = (_QWORD *)v206;
                *(_QWORD *)(v206 + v138) = v154;
                swift_bridgeObjectRelease();
                v91 = v191;
                goto LABEL_140;
              }
              if ((v144 & 1) != 0)
              {
                v154 = v145;
                if ((v146 & 1) != 0)
                  goto LABEL_138;
              }
              else
              {
                sub_2400AF888();
                v154 = v145;
                if ((v151 & 1) != 0)
                  goto LABEL_138;
              }
LABEL_199:
              v154[(v147 >> 6) + 8] |= 1 << v147;
              v155 = 8 * v147;
              *(_QWORD *)(v154[6] + v155) = v139;
              *(_QWORD *)(v154[7] + v155) = v93;
              v156 = v154[2];
              v17 = __OFADD__(v156, 1);
              v157 = v156 + 1;
              if (v17)
                goto LABEL_255;
              v154[2] = v157;
              goto LABEL_139;
            }
LABEL_203:
            v198 = (char *)(v92 + 8);
            v158 = 1 << *((_BYTE *)v92 + 32);
            v159 = -1;
            if (v158 < 64)
              v159 = ~(-1 << v158);
            v160 = v159 & v92[8];
            v161 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap;
            v201 = (void *)((unint64_t)(v158 + 63) >> 6);
            v205 = v92;
            swift_bridgeObjectRetain();
            v162 = 0;
            while (1)
            {
              if (v160)
              {
                v164 = __clz(__rbit64(v160));
                v160 &= v160 - 1;
                v165 = v164 | (v162 << 6);
              }
              else
              {
                v166 = v162 + 1;
                if (__OFADD__(v162, 1))
                  goto LABEL_243;
                if (v166 >= (uint64_t)v201)
                {
LABEL_237:
                  v3 = (unint64_t)v205;
                  swift_release();
                  return v3;
                }
                v167 = *(_QWORD *)&v198[8 * v166];
                ++v162;
                if (!v167)
                {
                  v162 = v166 + 1;
                  if (v166 + 1 >= (uint64_t)v201)
                    goto LABEL_237;
                  v167 = *(_QWORD *)&v198[8 * v162];
                  if (!v167)
                  {
                    v162 = v166 + 2;
                    if (v166 + 2 >= (uint64_t)v201)
                      goto LABEL_237;
                    v167 = *(_QWORD *)&v198[8 * v162];
                    if (!v167)
                    {
                      v162 = v166 + 3;
                      if (v166 + 3 >= (uint64_t)v201)
                        goto LABEL_237;
                      v167 = *(_QWORD *)&v198[8 * v162];
                      if (!v167)
                      {
                        v168 = v166 + 4;
                        if (v168 >= (uint64_t)v201)
                          goto LABEL_237;
                        v167 = *(_QWORD *)&v198[8 * v168];
                        if (!v167)
                        {
                          while (1)
                          {
                            v162 = v168 + 1;
                            if (__OFADD__(v168, 1))
                              break;
                            if (v162 >= (uint64_t)v201)
                              goto LABEL_237;
                            v167 = *(_QWORD *)&v198[8 * v162];
                            ++v168;
                            if (v167)
                              goto LABEL_225;
                          }
LABEL_256:
                          __break(1u);
LABEL_257:
                          __break(1u);
LABEL_258:
                          __break(1u);
LABEL_259:
                          __break(1u);
LABEL_260:
                          __break(1u);
LABEL_261:
                          __break(1u);
LABEL_262:
                          __break(1u);
                          break;
                        }
                        v162 = v168;
                      }
                    }
                  }
                }
LABEL_225:
                v160 = (v167 - 1) & v167;
                v165 = __clz(__rbit64(v167)) + (v162 << 6);
              }
              v169 = (uint64_t *)(v205[7] + 24 * v165);
              v171 = *v169;
              v170 = v169[1];
              v172 = v169[2];
              swift_bridgeObjectRetain_n();
              v173 = swift_isUniquelyReferenced_nonNull_native();
              v174 = *(_QWORD **)((char *)v77 + v161);
              *(_QWORD *)((char *)v77 + v161) = 0x8000000000000000;
              v176 = sub_24013EF5C(v171);
              v177 = v174[2];
              v178 = (v175 & 1) == 0;
              v179 = v177 + v178;
              if (__OFADD__(v177, v178))
                goto LABEL_241;
              v180 = v175;
              if (v174[3] >= v179)
              {
                if ((v173 & 1) != 0)
                {
                  v183 = v174;
                  if ((v175 & 1) != 0)
                    goto LABEL_206;
                }
                else
                {
                  sub_2400AFBA0();
                  v183 = v174;
                  if ((v180 & 1) != 0)
                    goto LABEL_206;
                }
              }
              else
              {
                sub_2400AD330(v179, v173);
                v181 = sub_24013EF5C(v171);
                if ((v180 & 1) != (v182 & 1))
                  goto LABEL_272;
                v176 = v181;
                v183 = v174;
                if ((v180 & 1) != 0)
                {
LABEL_206:
                  v163 = (uint64_t *)(v183[7] + 24 * v176);
                  swift_bridgeObjectRelease();
                  *v163 = v171;
                  v163[1] = v170;
                  v163[2] = v172;
                  goto LABEL_207;
                }
              }
              v183[(v176 >> 6) + 8] |= 1 << v176;
              *(_QWORD *)(v183[6] + 8 * v176) = v171;
              v184 = (uint64_t *)(v183[7] + 24 * v176);
              *v184 = v171;
              v184[1] = v170;
              v184[2] = v172;
              v185 = v183[2];
              v17 = __OFADD__(v185, 1);
              v186 = v185 + 1;
              if (v17)
                goto LABEL_242;
              v183[2] = v186;
LABEL_207:
              v77 = (_QWORD *)v206;
              *(_QWORD *)(v206 + v161) = v183;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
          __break(1u);
LABEL_264:
          __break(1u);
          goto LABEL_265;
        }
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_79;
  }
  v3 = sub_240107918(MEMORY[0x24BEE4AF8]);
  v5 = *(_QWORD *)(a1 + 24);
  if (v5 >> 62)
    goto LABEL_75;
  v25 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v25)
  {
LABEL_30:
    v26 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap;
    v200 = (char *)OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRowMap;
    v203 = (_QWORD *)v3;
    v27 = v5 & 0xC000000000000001;
    v28 = 4;
    v188 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_trackerIdRankMap;
    v190 = v25;
    while (1)
    {
      v29 = v28 - 4;
      if (v27)
      {
        v30 = MEMORY[0x24267D4E0](v28 - 4, v5);
        v31 = v28 - 3;
        if (__OFADD__(v29, 1))
          goto LABEL_71;
      }
      else
      {
        v30 = *(_QWORD *)(v5 + 8 * v28);
        swift_retain();
        v31 = v28 - 3;
        if (__OFADD__(v29, 1))
        {
LABEL_71:
          __break(1u);
LABEL_72:
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
LABEL_75:
          swift_bridgeObjectRetain_n();
          v25 = sub_240154D30();
          swift_bridgeObjectRelease();
          if (!v25)
            break;
          goto LABEL_30;
        }
      }
      if ((*(_BYTE *)(v30 + 64) & 1) != 0)
        goto LABEL_273;
      v32 = *(_QWORD *)(v8 + v26);
      if (*(_QWORD *)(v32 + 16))
      {
        v33 = *(_QWORD *)(v30 + 56);
        v34 = sub_24013EF5C(v33);
        if ((v35 & 1) != 0)
        {
          v36 = *(_QWORD *)&v200[v206];
          if (*(_QWORD *)(v36 + 16)
            && (v37 = *(_QWORD *)(v32 + 56) + 24 * v34,
                v194 = *(_OWORD *)v37,
                v3 = *(_QWORD *)(v37 + 16),
                v38 = sub_24013EF5C(v33),
                (v39 & 1) != 0))
          {
            v40 = *(_QWORD *)(*(_QWORD *)(v36 + 56) + 8 * v38);
            v192 = v3;
            swift_bridgeObjectRetain();
            v8 = swift_isUniquelyReferenced_nonNull_native();
            v42 = sub_24013EF5C(v40);
            v43 = v203[2];
            v44 = (v41 & 1) == 0;
            v45 = v43 + v44;
            if (__OFADD__(v43, v44))
              goto LABEL_74;
            v3 = (unint64_t)v203;
            v46 = v41;
            if (v203[3] >= v45)
            {
              if ((v8 & 1) == 0)
                sub_2400AFBA0();
            }
            else
            {
              sub_2400AD330(v45, v8);
              v47 = sub_24013EF5C(v40);
              if ((v46 & 1) != (v48 & 1))
                goto LABEL_272;
              v42 = v47;
            }
            v8 = v206;
            if ((v46 & 1) != 0)
            {
              v3 = v203[7] + 24 * v42;
              swift_bridgeObjectRelease();
              *(_OWORD *)v3 = v194;
              *(_QWORD *)(v3 + 16) = v192;
            }
            else
            {
              v203[(v42 >> 6) + 8] |= 1 << v42;
              *(_QWORD *)(v203[6] + 8 * v42) = v40;
              v49 = v203[7] + 24 * v42;
              *(_OWORD *)v49 = v194;
              *(_QWORD *)(v49 + 16) = v192;
              v50 = v203[2];
              v17 = __OFADD__(v50, 1);
              v51 = v50 + 1;
              if (v17)
                goto LABEL_264;
              v203[2] = v51;
            }
            swift_release();
            swift_bridgeObjectRelease();
            v26 = v188;
            v25 = v190;
            v27 = v5 & 0xC000000000000001;
          }
          else
          {
            swift_release();
            v8 = v206;
            v27 = v5 & 0xC000000000000001;
          }
        }
        else
        {
          swift_release();
          v8 = v206;
        }
      }
      else
      {
        swift_release();
      }
      ++v28;
      if (v31 == v25)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v203;
      }
    }
  }
  swift_bridgeObjectRelease();
  return v3;
}

void sub_2400AA374(double a1, double a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v16;
  uint64_t v17;

  v3 = v2[104];
  if (!v3)
    goto LABEL_32;
  if ((unsigned __int128)((uint64_t)v2[114] * (__int128)(uint64_t)v2[115]) >> 64 != (uint64_t)(v2[114] * v2[115]) >> 63)
    goto LABEL_30;
  v4 = v2[125];
  if (!v4)
  {
LABEL_33:
    __break(1u);
    return;
  }
  if ((unsigned __int128)((uint64_t)v2[135] * (__int128)(uint64_t)v2[136]) >> 64 != (uint64_t)(v2[135] * v2[136]) >> 63)
    goto LABEL_31;
  v5 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
  v6 = *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    v10 = 0;
    v11 = 0;
    while ((unint64_t)v11 < *(_QWORD *)(v6 + 16))
    {
      if (vabdd_f64(*(double *)(v6 + v10 * 8 + 40), a2) > a1)
      {
        sub_240084408(&v17, v11);
        v12 = v2[135];
        if ((unsigned __int128)(v11 * (__int128)v12) >> 64 != (v11 * v12) >> 63)
          goto LABEL_25;
        if (v12 < 0)
          goto LABEL_26;
        if (v12)
          bzero((void *)(v4 + 4 * v11 * v12), 4 * v12);
        v13 = v2[114];
        if ((unsigned __int128)(v11 * (__int128)v13) >> 64 != (v11 * v13) >> 63)
          goto LABEL_27;
        if (v13 < 0)
          goto LABEL_28;
        if (v13)
          bzero((void *)(v3 + 4 * v11 * v13), 4 * v13);
        v14 = *(_QWORD **)((char *)v2 + v5);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(_QWORD *)((char *)v2 + v5) = v14;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          v14 = sub_24014CDB8(v14);
        if ((unint64_t)v11 >= v14[2])
          goto LABEL_29;
        v16 = &v14[v10];
        v16[4] = -1;
        v16[5] = 0;
        *(_QWORD *)((char *)v2 + v5) = v14;
      }
      ++v11;
      v10 += 2;
      if (v7 == v11)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
}

void sub_2400AA55C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  size_t v7;

  v2 = v1[104];
  if (!v2)
    goto LABEL_14;
  v3 = v1[114];
  if ((unsigned __int128)(v3 * (__int128)(uint64_t)v1[115]) >> 64 != (v3 * v1[115]) >> 63)
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v4 = v1[125];
  if (!v4)
  {
LABEL_15:
    __break(1u);
    return;
  }
  if ((unsigned __int128)((uint64_t)v1[135] * (__int128)(uint64_t)v1[136]) >> 64 != (uint64_t)(v1[135] * v1[136]) >> 63)
    goto LABEL_11;
  v5 = a1 * v3;
  if ((unsigned __int128)(a1 * (__int128)v3) >> 64 != (a1 * v3) >> 63)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v3 < 0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v3)
  {
    v6 = 4 * v5;
    v7 = 4 * v3;
    bzero((void *)(v4 + 4 * v5), 4 * v3);
    bzero((void *)(v2 + v6), v7);
  }
}

uint64_t sub_2400AA618(uint64_t a1, char a2)
{
  return sub_2400AA904(a1, a2, &qword_256FB8510);
}

uint64_t sub_2400AA624(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  char v36;
  int64_t v37;
  uint64_t *v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8528);
  result = sub_240154D48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v36 = a2;
    v35 = v3;
    v8 = 0;
    v38 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v33 = -1 << v9;
    v34 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v37 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v16 = v15 | (v8 << 6);
      }
      else
      {
        v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v17 >= v37)
          goto LABEL_31;
        v18 = v38[v17];
        ++v8;
        if (!v18)
        {
          v8 = v17 + 1;
          if (v17 + 1 >= v37)
            goto LABEL_31;
          v18 = v38[v8];
          if (!v18)
          {
            v19 = v17 + 2;
            if (v19 >= v37)
            {
LABEL_31:
              if ((v36 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_38;
              }
              if (v34 >= 64)
                bzero(v38, 8 * v37);
              else
                *v38 = v33;
              v3 = v35;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v38[v19];
            if (!v18)
            {
              while (1)
              {
                v8 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_40;
                if (v8 >= v37)
                  goto LABEL_31;
                v18 = v38[v8];
                ++v19;
                if (v18)
                  goto LABEL_21;
              }
            }
            v8 = v19;
          }
        }
LABEL_21:
        v11 = (v18 - 1) & v18;
        v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      v20 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
      v21 = *(_QWORD *)(v5 + 56) + 32 * v16;
      v22 = *(_BYTE *)(v21 + 24);
      v23 = *(_QWORD *)(v21 + 16);
      v24 = *(_BYTE *)(v21 + 8);
      v25 = *(_QWORD *)v21;
      result = sub_240154FDC();
      v26 = -1 << *(_BYTE *)(v7 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v12 + 8 * v28);
        }
        while (v32 == -1);
        v13 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v13) = v20;
      v14 = *(_QWORD *)(v7 + 56) + 32 * v13;
      *(_QWORD *)v14 = v25;
      *(_BYTE *)(v14 + 8) = v24;
      *(_QWORD *)(v14 + 16) = v23;
      *(_BYTE *)(v14 + 24) = v22;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_2400AA8EC(uint64_t a1, char a2)
{
  return sub_2400AA904(a1, a2, &qword_256FB8520);
}

uint64_t sub_2400AA8F8(uint64_t a1, char a2)
{
  return sub_2400AA904(a1, a2, &qword_256FB8518);
}

uint64_t sub_2400AA904(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_240154D48();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v31 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v30 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v20 >= v30)
          goto LABEL_33;
        v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v30)
            goto LABEL_33;
          v21 = v31[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v6 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v9 >= v30)
                  goto LABEL_33;
                v21 = v31[v9];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v9 = v22;
          }
        }
LABEL_30:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v19);
      v28 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      sub_240154FE8();
      sub_240154FF4();
      result = sub_240155018();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_2400AABD0(uint64_t a1, char a2)
{
  return sub_2400AABF4(a1, a2, &qword_256FB8500);
}

uint64_t sub_2400AABDC(uint64_t a1, char a2)
{
  return sub_2400AA904(a1, a2, &qword_256FB8508);
}

uint64_t sub_2400AABE8(uint64_t a1, char a2)
{
  return sub_2400AABF4(a1, a2, &qword_256FB84F0);
}

uint64_t sub_2400AABF4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_240154D48();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v35 = a2;
    v9 = 0;
    v10 = (_QWORD *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v20 >= v14)
          goto LABEL_31;
        v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v14)
            goto LABEL_31;
          v21 = v10[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_38;
              }
              v34 = 1 << *(_BYTE *)(v6 + 32);
              if (v34 >= 64)
                bzero((void *)(v6 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v10 = -1 << v34;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_40;
                if (v9 >= v14)
                  goto LABEL_31;
                v21 = v10[v9];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v9 = v22;
          }
        }
LABEL_21:
        v13 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v23 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v19);
      v24 = (uint64_t *)(*(_QWORD *)(v6 + 56) + 16 * v19);
      v26 = *v24;
      v25 = v24[1];
      sub_240154FE8();
      sub_240154FF4();
      result = sub_240155018();
      v27 = -1 << *(_BYTE *)(v8 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v15 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v15 + 8 * v29);
        }
        while (v33 == -1);
        v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v16) = v23;
      v17 = (_QWORD *)(*(_QWORD *)(v8 + 56) + 16 * v16);
      *v17 = v26;
      v17[1] = v25;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v4 = v8;
  return result;
}

uint64_t sub_2400AAEC0(uint64_t a1, char a2)
{
  return sub_2400AA904(a1, a2, &qword_256FB84F8);
}

uint64_t sub_2400AAECC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84C8);
  result = sub_240154D48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_retain();
      result = sub_240154FDC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2400AB180(uint64_t a1, char a2)
{
  return sub_2400ABB6C(a1, a2, &qword_256FB8490);
}

uint64_t sub_2400AB18C(uint64_t a1, char a2)
{
  return sub_2400ABE50(a1, a2, &qword_256FB8488);
}

uint64_t sub_2400AB198(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  _QWORD *v37;
  uint64_t v38;
  int v39;

  v3 = v2;
  v5 = type metadata accessor for DKPersonGroup(0);
  v38 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84B8);
  v39 = a2;
  result = sub_240154D48();
  v10 = result;
  if (*(_QWORD *)(v8 + 16))
  {
    v35 = v3;
    v11 = 0;
    v12 = *(_QWORD *)(v8 + 64);
    v37 = (_QWORD *)(v8 + 64);
    v13 = 1 << *(_BYTE *)(v8 + 32);
    if (v13 < 64)
      v14 = ~(-1 << v13);
    else
      v14 = -1;
    v15 = v14 & v12;
    v36 = (unint64_t)(v13 + 63) >> 6;
    v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        v19 = v18 | (v11 << 6);
      }
      else
      {
        v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        result = (uint64_t)v37;
        if (v20 >= v36)
          goto LABEL_34;
        v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          v11 = v20 + 1;
          if (v20 + 1 >= v36)
            goto LABEL_34;
          v21 = v37[v11];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                result = swift_release();
                v3 = v35;
                goto LABEL_41;
              }
              v33 = 1 << *(_BYTE *)(v8 + 32);
              if (v33 >= 64)
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v37 = -1 << v33;
              v3 = v35;
              *(_QWORD *)(v8 + 16) = 0;
              break;
            }
            v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                v11 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_43;
                if (v11 >= v36)
                  goto LABEL_34;
                v21 = v37[v11];
                ++v22;
                if (v21)
                  goto LABEL_21;
              }
            }
            v11 = v22;
          }
        }
LABEL_21:
        v15 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      v23 = *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v19);
      v24 = *(_QWORD *)(v38 + 72);
      v25 = *(_QWORD *)(v8 + 56) + v24 * v19;
      if ((v39 & 1) != 0)
        sub_2400A0E74(v25, (uint64_t)v7, type metadata accessor for DKPersonGroup);
      else
        sub_240080084(v25, (uint64_t)v7, type metadata accessor for DKPersonGroup);
      result = sub_240154FDC();
      v26 = -1 << *(_BYTE *)(v10 + 32);
      v27 = result & ~v26;
      v28 = v27 >> 6;
      if (((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v27) & ~*(_QWORD *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v29 = 0;
        v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          v31 = v28 == v30;
          if (v28 == v30)
            v28 = 0;
          v29 |= v31;
          v32 = *(_QWORD *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(_QWORD *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_QWORD *)(*(_QWORD *)(v10 + 48) + 8 * v17) = v23;
      result = sub_2400A0E74((uint64_t)v7, *(_QWORD *)(v10 + 56) + v24 * v17, type metadata accessor for DKPersonGroup);
      ++*(_QWORD *)(v10 + 16);
    }
  }
  result = swift_release();
LABEL_41:
  *v3 = v10;
  return result;
}

uint64_t sub_2400AB4C8(uint64_t a1, int a2)
{
  return sub_2400AB4F0(a1, a2, type metadata accessor for DKPersonGroup, &qword_256FB84B0);
}

uint64_t sub_2400AB4DC(uint64_t a1, int a2)
{
  return sub_2400AB4F0(a1, a2, type metadata accessor for DKPersonGroupFilter.StampedPerson, &qword_256FB84A8);
}

uint64_t sub_2400AB4F0(uint64_t a1, int a2, uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t *v4;
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t result;
  int64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  int64_t v27;
  _QWORD *v28;
  unint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  char v39;
  unint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int64_t v45;
  _QWORD *v46;
  uint64_t i;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t (*v51)(_QWORD);

  v6 = v4;
  v51 = a3;
  v8 = a3(0);
  v48 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v50 = (uint64_t)&v44 - v9;
  v10 = sub_24015434C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v49 = a2;
  v15 = sub_240154D48();
  v16 = v15;
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_41;
  v17 = 1 << *(_BYTE *)(v14 + 32);
  v18 = *(_QWORD *)(v14 + 64);
  v46 = (_QWORD *)(v14 + 64);
  if (v17 < 64)
    v19 = ~(-1 << v17);
  else
    v19 = -1;
  v20 = v19 & v18;
  v44 = v4;
  v45 = (unint64_t)(v17 + 63) >> 6;
  v21 = v15 + 64;
  result = swift_retain();
  v23 = 0;
  for (i = v14; ; v14 = i)
  {
    if (v20)
    {
      v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v45)
      break;
    v28 = v46;
    v29 = v46[v27];
    ++v23;
    if (!v29)
    {
      v23 = v27 + 1;
      if (v27 + 1 >= v45)
        goto LABEL_34;
      v29 = v46[v23];
      if (!v29)
      {
        v30 = v27 + 2;
        if (v30 >= v45)
        {
LABEL_34:
          swift_release();
          v6 = v44;
          if ((v49 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v29 = v46[v30];
        if (!v29)
        {
          while (1)
          {
            v23 = v30 + 1;
            if (__OFADD__(v30, 1))
              goto LABEL_43;
            if (v23 >= v45)
              goto LABEL_34;
            v29 = v46[v23];
            ++v30;
            if (v29)
              goto LABEL_21;
          }
        }
        v23 = v30;
      }
    }
LABEL_21:
    v20 = (v29 - 1) & v29;
    v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    v31 = *(_QWORD *)(v11 + 72);
    v32 = *(_QWORD *)(v14 + 48) + v31 * v26;
    if ((v49 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 32))(v13, v32, v10);
      v33 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_2400A0E74(v33 + v34 * v26, v50, v51);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v13, v32, v10);
      v35 = *(_QWORD *)(v14 + 56);
      v34 = *(_QWORD *)(v48 + 72);
      sub_240080084(v35 + v34 * v26, v50, v51);
    }
    sub_2400B3490(&qword_256FB5A60, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_2401545BC();
    v36 = -1 << *(_BYTE *)(v16 + 32);
    v37 = result & ~v36;
    v38 = v37 >> 6;
    if (((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6))) != 0)
    {
      v24 = __clz(__rbit64((-1 << v37) & ~*(_QWORD *)(v21 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v39 = 0;
      v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v41 = v38 == v40;
        if (v38 == v40)
          v38 = 0;
        v39 |= v41;
        v42 = *(_QWORD *)(v21 + 8 * v38);
      }
      while (v42 == -1);
      v24 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(_QWORD *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(*(_QWORD *)(v16 + 48) + v31 * v24, v13, v10);
    result = sub_2400A0E74(v50, *(_QWORD *)(v16 + 56) + v34 * v24, v51);
    ++*(_QWORD *)(v16 + 16);
  }
  swift_release();
  v6 = v44;
  v28 = v46;
  if ((v49 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v43 = 1 << *(_BYTE *)(v14 + 32);
  if (v43 >= 64)
    bzero(v28, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v28 = -1 << v43;
  *(_QWORD *)(v14 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v6 = v16;
  return result;
}

unint64_t sub_2400AB8E8(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t result;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  __int128 v26[4];

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84A0);
  v6 = sub_240154D48();
  v7 = (_QWORD *)v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v25 = (_QWORD *)(v5 + 64);
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v5 + 64);
    v11 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 64;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_23;
        v19 = v25[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_23;
          v19 = v25[v14];
          if (!v19)
          {
            v20 = v18 + 2;
            if (v20 >= v11)
            {
LABEL_23:
              swift_release();
              v3 = v2;
              if ((a2 & 1) != 0)
              {
                v24 = 1 << *(_BYTE *)(v5 + 32);
                if (v24 > 63)
                  bzero(v25, ((unint64_t)(v24 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v25 = -1 << v24;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v19 = v25[v20];
            if (!v19)
            {
              while (1)
              {
                v14 = v20 + 1;
                if (__OFADD__(v20, 1))
                  goto LABEL_30;
                if (v14 >= v11)
                  goto LABEL_23;
                v19 = v25[v14];
                ++v20;
                if (v19)
                  goto LABEL_20;
              }
            }
            v14 = v20;
          }
        }
LABEL_20:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = 8 * v17;
      v22 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v21);
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v21);
      if ((a2 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_240154FE8();
      sub_2400B086C(v26, v22);
      sub_240155018();
      result = sub_240154AD8();
      *(_QWORD *)(v12 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      v15 = 8 * result;
      *(_QWORD *)(v7[6] + v15) = v22;
      *(_QWORD *)(v7[7] + v15) = v23;
      ++v7[2];
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2400ABB54(uint64_t a1, char a2)
{
  return sub_2400ABB6C(a1, a2, &qword_256FB8480);
}

uint64_t sub_2400ABB60(uint64_t a1, char a2)
{
  return sub_2400ABB6C(a1, a2, &qword_256FB8450);
}

uint64_t sub_2400ABB6C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  _QWORD *v31;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_240154D48();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v9 = 0;
    v31 = (_QWORD *)(v6 + 64);
    v10 = 1 << *(_BYTE *)(v6 + 32);
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v6 + 64);
    v30 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v18 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v19 = v18 | (v9 << 6);
      }
      else
      {
        v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = v6 + 64;
        if (v20 >= v30)
          goto LABEL_33;
        v21 = v31[v20];
        ++v9;
        if (!v21)
        {
          v9 = v20 + 1;
          if (v20 + 1 >= v30)
            goto LABEL_33;
          v21 = v31[v9];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v30)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_40;
              }
              v29 = 1 << *(_BYTE *)(v6 + 32);
              if (v29 >= 64)
                bzero(v31, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v31 = -1 << v29;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v21 = v31[v22];
            if (!v21)
            {
              while (1)
              {
                v9 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_42;
                if (v9 >= v30)
                  goto LABEL_33;
                v21 = v31[v9];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v9 = v22;
          }
        }
LABEL_30:
        v12 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      v27 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v19);
      v28 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v19);
      if ((a2 & 1) == 0)
        swift_retain();
      sub_240154FE8();
      sub_240154FF4();
      result = sub_240155018();
      v14 = -1 << *(_BYTE *)(v8 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v25 = v16 == v24;
          if (v16 == v24)
            v16 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v26 == -1);
        v17 = __clz(__rbit64(~v26)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v17) = v27;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v17) = v28;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v4 = v8;
  return result;
}

uint64_t sub_2400ABE38(uint64_t a1, char a2)
{
  return sub_2400ABE50(a1, a2, &qword_256FB8478);
}

uint64_t sub_2400ABE44(uint64_t a1, char a2)
{
  return sub_2400ABE50(a1, a2, &qword_256FB8448);
}

uint64_t sub_2400ABE50(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v4 = v3;
  v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  result = sub_240154D48();
  v8 = result;
  if (*(_QWORD *)(v6 + 16))
  {
    v32 = a2;
    v9 = 0;
    v10 = (_QWORD *)(v6 + 64);
    v11 = 1 << *(_BYTE *)(v6 + 32);
    if (v11 < 64)
      v12 = ~(-1 << v11);
    else
      v12 = -1;
    v13 = v12 & *(_QWORD *)(v6 + 64);
    v14 = (unint64_t)(v11 + 63) >> 6;
    v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        v17 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        v18 = v17 | (v9 << 6);
      }
      else
      {
        v19 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v14)
          goto LABEL_31;
        v20 = v10[v19];
        ++v9;
        if (!v20)
        {
          v9 = v19 + 1;
          if (v19 + 1 >= v14)
            goto LABEL_31;
          v20 = v10[v9];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v14)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                result = swift_release();
                v4 = v3;
                goto LABEL_38;
              }
              v31 = 1 << *(_BYTE *)(v6 + 32);
              if (v31 >= 64)
                bzero((void *)(v6 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v10 = -1 << v31;
              v4 = v3;
              *(_QWORD *)(v6 + 16) = 0;
              break;
            }
            v20 = v10[v21];
            if (!v20)
            {
              while (1)
              {
                v9 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v9 >= v14)
                  goto LABEL_31;
                v20 = v10[v9];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v9 = v21;
          }
        }
LABEL_21:
        v13 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v9 << 6);
      }
      v22 = *(_BYTE *)(*(_QWORD *)(v6 + 48) + v18);
      v23 = *(_QWORD *)(*(_QWORD *)(v6 + 56) + 8 * v18);
      sub_240154FE8();
      sub_240154FF4();
      result = sub_240155018();
      v24 = -1 << *(_BYTE *)(v8 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v15 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v29 = v26 == v28;
          if (v26 == v28)
            v26 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v15 + 8 * v26);
        }
        while (v30 == -1);
        v16 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(_QWORD *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_BYTE *)(*(_QWORD *)(v8 + 48) + v16) = v22;
      *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v16) = v23;
      ++*(_QWORD *)(v8 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v4 = v8;
  return result;
}

uint64_t sub_2400AC114(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t *v35;
  int64_t v36;
  uint64_t v37;
  char v38;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8498);
  v38 = a2;
  v6 = sub_240154D48();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
    goto LABEL_40;
  v8 = 1 << *(_BYTE *)(v5 + 32);
  v37 = v5 + 64;
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 64);
  v35 = v2;
  v36 = (unint64_t)(v8 + 63) >> 6;
  v11 = v6 + 64;
  result = swift_retain();
  v13 = 0;
  while (1)
  {
    if (v10)
    {
      v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36)
      break;
    v22 = (_QWORD *)(v5 + 64);
    v23 = *(_QWORD *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v36)
        goto LABEL_33;
      v23 = *(_QWORD *)(v37 + 8 * v13);
      if (!v23)
      {
        v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          v3 = v35;
          if ((v38 & 1) == 0)
            goto LABEL_40;
          goto LABEL_36;
        }
        v23 = *(_QWORD *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            v13 = v24 + 1;
            if (__OFADD__(v24, 1))
              goto LABEL_42;
            if (v13 >= v36)
              goto LABEL_33;
            v23 = *(_QWORD *)(v37 + 8 * v13);
            ++v24;
            if (v23)
              goto LABEL_30;
          }
        }
        v13 = v24;
      }
    }
LABEL_30:
    v10 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    v29 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v20);
    v31 = *v29;
    v30 = v29[1];
    v32 = *(void **)(*(_QWORD *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      v33 = v32;
    }
    sub_240154FE8();
    sub_2401546B8();
    result = sub_240155018();
    v14 = -1 << *(_BYTE *)(v7 + 32);
    v15 = result & ~v14;
    v16 = v15 >> 6;
    if (((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        v27 = v16 == v26;
        if (v16 == v26)
          v16 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(_QWORD *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    v18 = (_QWORD *)(*(_QWORD *)(v7 + 48) + 16 * v17);
    *v18 = v31;
    v18[1] = v30;
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17) = v32;
    ++*(_QWORD *)(v7 + 16);
  }
  swift_release();
  v3 = v35;
  v22 = (_QWORD *)(v5 + 64);
  if ((v38 & 1) == 0)
    goto LABEL_40;
LABEL_36:
  v34 = 1 << *(_BYTE *)(v5 + 32);
  if (v34 >= 64)
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v22 = -1 << v34;
  *(_QWORD *)(v5 + 16) = 0;
LABEL_40:
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2400AC420(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  unint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  int v37;
  int64_t v38;
  _QWORD *v39;
  uint64_t v40;

  v3 = v2;
  v5 = sub_240154310();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8460);
  result = sub_240154D48();
  v11 = result;
  if (*(_QWORD *)(v9 + 16))
  {
    v36 = v3;
    v12 = 0;
    v13 = *(_QWORD *)(v9 + 64);
    v39 = (_QWORD *)(v9 + 64);
    v14 = 1 << *(_BYTE *)(v9 + 32);
    if (v14 < 64)
      v15 = ~(-1 << v14);
    else
      v15 = -1;
    v16 = v15 & v13;
    v38 = (unint64_t)(v14 + 63) >> 6;
    v17 = result + 64;
    v37 = a2;
    v18 = 16;
    if ((a2 & 1) != 0)
      v18 = 32;
    v40 = v18;
    while (1)
    {
      if (v16)
      {
        v20 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        v21 = v20 | (v12 << 6);
      }
      else
      {
        v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        result = (uint64_t)v39;
        if (v22 >= v38)
          goto LABEL_33;
        v23 = v39[v22];
        ++v12;
        if (!v23)
        {
          v12 = v22 + 1;
          if (v22 + 1 >= v38)
            goto LABEL_33;
          v23 = v39[v12];
          if (!v23)
          {
            v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                result = swift_release();
                v3 = v36;
                goto LABEL_40;
              }
              v34 = 1 << *(_BYTE *)(v9 + 32);
              if (v34 >= 64)
                bzero(v39, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v39 = -1 << v34;
              v3 = v36;
              *(_QWORD *)(v9 + 16) = 0;
              break;
            }
            v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                v12 = v24 + 1;
                if (__OFADD__(v24, 1))
                  goto LABEL_42;
                if (v12 >= v38)
                  goto LABEL_33;
                v23 = v39[v12];
                ++v24;
                if (v23)
                  goto LABEL_23;
              }
            }
            v12 = v24;
          }
        }
LABEL_23:
        v16 = (v23 - 1) & v23;
        v21 = __clz(__rbit64(v23)) + (v12 << 6);
      }
      v25 = *(_QWORD *)(*(_QWORD *)(v9 + 48) + 8 * v21);
      v26 = *(_QWORD *)(v6 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + v40))(v8, *(_QWORD *)(v9 + 56) + v26 * v21, v5);
      result = sub_240154FDC();
      v27 = -1 << *(_BYTE *)(v11 + 32);
      v28 = result & ~v27;
      v29 = v28 >> 6;
      if (((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        v19 = __clz(__rbit64((-1 << v28) & ~*(_QWORD *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v30 = 0;
        v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          v32 = v29 == v31;
          if (v29 == v31)
            v29 = 0;
          v30 |= v32;
          v33 = *(_QWORD *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(_QWORD *)(v17 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v19) = v25;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 56) + v26 * v19, v8, v5);
      ++*(_QWORD *)(v11 + 16);
    }
  }
  result = swift_release();
LABEL_40:
  *v3 = v11;
  return result;
}

uint64_t sub_2400AC750(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t result;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  int64_t v22;
  _QWORD *v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  int64_t v38;
  _QWORD *v39;
  int v40;
  __int128 v41[2];

  v3 = v2;
  v5 = sub_24015434C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8458);
  v40 = a2;
  v10 = sub_240154D48();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
    goto LABEL_41;
  v12 = 1 << *(_BYTE *)(v9 + 32);
  v13 = *(_QWORD *)(v9 + 64);
  v39 = (_QWORD *)(v9 + 64);
  if (v12 < 64)
    v14 = ~(-1 << v12);
  else
    v14 = -1;
  v15 = v14 & v13;
  v37 = v2;
  v38 = (unint64_t)(v12 + 63) >> 6;
  v16 = v10 + 64;
  result = swift_retain();
  v18 = 0;
  while (1)
  {
    if (v15)
    {
      v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v21 = v20 | (v18 << 6);
      goto LABEL_22;
    }
    v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v38)
      break;
    v23 = v39;
    v24 = v39[v22];
    ++v18;
    if (!v24)
    {
      v18 = v22 + 1;
      if (v22 + 1 >= v38)
        goto LABEL_34;
      v24 = v39[v18];
      if (!v24)
      {
        v25 = v22 + 2;
        if (v25 >= v38)
        {
LABEL_34:
          swift_release();
          v3 = v37;
          if ((v40 & 1) == 0)
            goto LABEL_41;
          goto LABEL_37;
        }
        v24 = v39[v25];
        if (!v24)
        {
          while (1)
          {
            v18 = v25 + 1;
            if (__OFADD__(v25, 1))
              goto LABEL_43;
            if (v18 >= v38)
              goto LABEL_34;
            v24 = v39[v18];
            ++v25;
            if (v24)
              goto LABEL_21;
          }
        }
        v18 = v25;
      }
    }
LABEL_21:
    v15 = (v24 - 1) & v24;
    v21 = __clz(__rbit64(v24)) + (v18 << 6);
LABEL_22:
    v26 = *(_QWORD *)(v6 + 72);
    v27 = *(_QWORD *)(v9 + 48) + v26 * v21;
    if ((v40 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 32))(v8, v27, v5);
      sub_24007CC80((__int128 *)(*(_QWORD *)(v9 + 56) + 40 * v21), (uint64_t)v41);
    }
    else
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, v27, v5);
      sub_24008BA98(*(_QWORD *)(v9 + 56) + 40 * v21, (uint64_t)v41);
    }
    sub_2400B3490(&qword_256FB5A60, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_2401545BC();
    v28 = -1 << *(_BYTE *)(v11 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6))) != 0)
    {
      v19 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v16 + 8 * v30);
      }
      while (v34 == -1);
      v19 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v26 * v19, v8, v5);
    result = sub_24007CC80(v41, *(_QWORD *)(v11 + 56) + 40 * v19);
    ++*(_QWORD *)(v11 + 16);
  }
  swift_release();
  v3 = v37;
  v23 = v39;
  if ((v40 & 1) == 0)
    goto LABEL_41;
LABEL_37:
  v35 = 1 << *(_BYTE *)(v9 + 32);
  if (v35 >= 64)
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  else
    *v23 = -1 << v35;
  *(_QWORD *)(v9 + 16) = 0;
LABEL_41:
  result = swift_release();
  *v3 = v11;
  return result;
}

uint64_t sub_2400ACAFC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t *v34;
  __int128 v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8468);
  result = sub_240154D48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v34 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v9;
    v32 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v33)
          goto LABEL_33;
        v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v33)
            goto LABEL_33;
          v21 = v34[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero(v34, 8 * v33);
                else
                  *v34 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v21 = v34[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 32 * v19;
      v35 = *(_OWORD *)v28;
      v29 = *(_QWORD *)(v28 + 16);
      v30 = *(_QWORD *)(v28 + 24);
      if ((a2 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      result = sub_240154FDC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 32 * v16;
      *(_OWORD *)v17 = v35;
      *(_QWORD *)(v17 + 16) = v29;
      *(_QWORD *)(v17 + 24) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2400ACDE4(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84E0);
  result = sub_240154D48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_240154FDC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_2400AD088(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  char v35;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84D8);
  result = sub_240154D48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v35 = a2;
    v34 = v3;
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v32 = -1 << v10;
    v33 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v13 = (unint64_t)(v10 + 63) >> 6;
    v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v18 = v17 | (v8 << 6);
      }
      else
      {
        v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13)
          goto LABEL_31;
        v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          v8 = v19 + 1;
          if (v19 + 1 >= v13)
            goto LABEL_31;
          v20 = v9[v8];
          if (!v20)
          {
            v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                result = swift_release();
                v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64)
                bzero((void *)(v5 + 64), 8 * v13);
              else
                *v9 = v32;
              v3 = v34;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                v8 = v21 + 1;
                if (__OFADD__(v21, 1))
                  goto LABEL_40;
                if (v8 >= v13)
                  goto LABEL_31;
                v20 = v9[v8];
                ++v21;
                if (v20)
                  goto LABEL_21;
              }
            }
            v8 = v21;
          }
        }
LABEL_21:
        v12 = (v20 - 1) & v20;
        v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      v22 = 8 * v18;
      v23 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v22);
      v24 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v22);
      result = sub_240154FDC();
      v25 = -1 << *(_BYTE *)(v7 + 32);
      v26 = result & ~v25;
      v27 = v26 >> 6;
      if (((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v26) & ~*(_QWORD *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          v30 = v27 == v29;
          if (v27 == v29)
            v27 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(_QWORD *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      v16 = 8 * v15;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v16) = v23;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v16) = v24;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
LABEL_38:
  *v3 = v7;
  return result;
}

uint64_t sub_2400AD330(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t *v33;
  __int128 v34;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84E8);
  result = sub_240154D48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v33 = (uint64_t *)(v5 + 64);
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v30 = -1 << v9;
    v31 = v9;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        v19 = v18 | (v8 << 6);
      }
      else
      {
        v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        result = v5 + 64;
        if (v20 >= v32)
          goto LABEL_33;
        v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          v8 = v20 + 1;
          if (v20 + 1 >= v32)
            goto LABEL_33;
          v21 = v33[v8];
          if (!v21)
          {
            v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v31 >= 64)
                  bzero(v33, 8 * v32);
                else
                  *v33 = v30;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                v8 = v22 + 1;
                if (__OFADD__(v22, 1))
                  goto LABEL_41;
                if (v8 >= v32)
                  goto LABEL_33;
                v21 = v33[v8];
                ++v22;
                if (v21)
                  goto LABEL_30;
              }
            }
            v8 = v22;
          }
        }
LABEL_30:
        v11 = (v21 - 1) & v21;
        v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      v27 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v19);
      v28 = *(_QWORD *)(v5 + 56) + 24 * v19;
      v34 = *(_OWORD *)v28;
      v29 = *(_QWORD *)(v28 + 16);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_240154FDC();
      v13 = -1 << *(_BYTE *)(v7 + 32);
      v14 = result & ~v13;
      v15 = v14 >> 6;
      if (((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        v16 = __clz(__rbit64((-1 << v14) & ~*(_QWORD *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v25 = v15 == v24;
          if (v15 == v24)
            v15 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(_QWORD *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + 8 * v16) = v27;
      v17 = *(_QWORD *)(v7 + 56) + 24 * v16;
      *(_OWORD *)v17 = v34;
      *(_QWORD *)(v17 + 16) = v29;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2400AD5F8(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;

  v3 = v2;
  v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8470);
  result = sub_240154D48();
  v7 = result;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 0;
    v9 = (uint64_t *)(v5 + 64);
    v10 = 1 << *(_BYTE *)(v5 + 32);
    v31 = -1 << v10;
    v32 = v10;
    if (v10 < 64)
      v11 = ~(-1 << v10);
    else
      v11 = -1;
    v12 = v11 & *(_QWORD *)(v5 + 64);
    v33 = (unint64_t)(v10 + 63) >> 6;
    v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        v20 = v19 | (v8 << 6);
      }
      else
      {
        v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33)
          goto LABEL_33;
        v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          v8 = v21 + 1;
          if (v21 + 1 >= v33)
            goto LABEL_33;
          v22 = v9[v8];
          if (!v22)
          {
            v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((a2 & 1) != 0)
              {
                if (v32 >= 64)
                  bzero((void *)(v5 + 64), 8 * v33);
                else
                  *v9 = v31;
                *(_QWORD *)(v5 + 16) = 0;
              }
              break;
            }
            v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                v8 = v23 + 1;
                if (__OFADD__(v23, 1))
                  goto LABEL_41;
                if (v8 >= v33)
                  goto LABEL_33;
                v22 = v9[v8];
                ++v23;
                if (v22)
                  goto LABEL_30;
              }
            }
            v8 = v23;
          }
        }
LABEL_30:
        v12 = (v22 - 1) & v22;
        v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      v28 = 8 * v20;
      v29 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + v28);
      v30 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v28);
      if ((a2 & 1) == 0)
        swift_bridgeObjectRetain();
      result = sub_240154FDC();
      v14 = -1 << *(_BYTE *)(v7 + 32);
      v15 = result & ~v14;
      v16 = v15 >> 6;
      if (((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        v17 = __clz(__rbit64((-1 << v15) & ~*(_QWORD *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          v26 = v16 == v25;
          if (v16 == v25)
            v16 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(_QWORD *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      v18 = 8 * v17;
      *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v29;
      *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v30;
      ++*(_QWORD *)(v7 + 16);
    }
  }
  result = swift_release();
  *v3 = v7;
  return result;
}

uint64_t sub_2400AD8AC(uint64_t a1, int a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;
  int64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  _QWORD *v22;
  unint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  unint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  int64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;

  v4 = sub_24015434C();
  v42 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = v2;
  v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84C0);
  v8 = sub_240154D48();
  v9 = v8;
  if (!*(_QWORD *)(v7 + 16))
  {
    result = swift_release();
    v35 = v38;
LABEL_42:
    *v35 = v9;
    return result;
  }
  v10 = 1 << *(_BYTE *)(v7 + 32);
  v11 = *(_QWORD *)(v7 + 64);
  v40 = (_QWORD *)(v7 + 64);
  if (v10 < 64)
    v12 = ~(-1 << v10);
  else
    v12 = -1;
  v13 = v12 & v11;
  v39 = (unint64_t)(v10 + 63) >> 6;
  v14 = v8 + 64;
  result = swift_retain();
  v16 = 0;
  HIDWORD(v37) = a2;
  v17 = 16;
  if ((a2 & 1) != 0)
    v17 = 32;
  v41 = v17;
  while (1)
  {
    if (v13)
    {
      v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v20 = v19 | (v16 << 6);
      goto LABEL_24;
    }
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v21 >= v39)
    {
      swift_release();
      v35 = v38;
      v22 = v40;
      if ((v37 & 0x100000000) != 0)
      {
LABEL_37:
        v36 = 1 << *(_BYTE *)(v7 + 32);
        if (v36 >= 64)
          bzero(v22, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        else
          *v22 = -1 << v36;
        *(_QWORD *)(v7 + 16) = 0;
      }
LABEL_41:
      result = swift_release();
      goto LABEL_42;
    }
    v22 = v40;
    v23 = v40[v21];
    ++v16;
    if (!v23)
    {
      v16 = v21 + 1;
      if (v21 + 1 >= v39)
        goto LABEL_34;
      v23 = v40[v16];
      if (!v23)
        break;
    }
LABEL_23:
    v13 = (v23 - 1) & v23;
    v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_24:
    v25 = *(_QWORD *)(v42 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v42 + v41))(v6, *(_QWORD *)(v7 + 48) + v25 * v20, v4);
    v26 = v7;
    v27 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v20);
    sub_2400B3490(&qword_256FB5A60, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    result = sub_2401545BC();
    v28 = -1 << *(_BYTE *)(v9 + 32);
    v29 = result & ~v28;
    v30 = v29 >> 6;
    if (((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      v18 = __clz(__rbit64((-1 << v29) & ~*(_QWORD *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v31 = 0;
      v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        v33 = v30 == v32;
        if (v30 == v32)
          v30 = 0;
        v31 |= v33;
        v34 = *(_QWORD *)(v14 + 8 * v30);
      }
      while (v34 == -1);
      v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(_QWORD *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v42 + 32))(*(_QWORD *)(v9 + 48) + v25 * v18, v6, v4);
    *(_QWORD *)(*(_QWORD *)(v9 + 56) + 8 * v18) = v27;
    ++*(_QWORD *)(v9 + 16);
    v7 = v26;
  }
  v24 = v21 + 2;
  if (v24 >= v39)
  {
LABEL_34:
    swift_release();
    v35 = v38;
    if ((v37 & 0x100000000) != 0)
      goto LABEL_37;
    goto LABEL_41;
  }
  v23 = v40[v24];
  if (v23)
  {
    v16 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    v16 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v16 >= v39)
      goto LABEL_34;
    v23 = v40[v16];
    ++v24;
    if (v23)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

unint64_t sub_2400ADC4C(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, char a6, _QWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a7[(result >> 6) + 8] |= 1 << result;
  *(_QWORD *)(a7[6] + 8 * result) = a2;
  v7 = a7[7] + 32 * result;
  *(_QWORD *)v7 = a3;
  *(_BYTE *)(v7 + 8) = a4 & 1;
  *(_QWORD *)(v7 + 16) = a5;
  *(_BYTE *)(v7 + 24) = a6 & 1;
  v8 = a7[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a7[2] = v10;
  return result;
}

unint64_t sub_2400ADCB0(unint64_t result, char a2, _QWORD *a3, double a4, double a5)
{
  double *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a3[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a3[6] + result) = a2;
  v5 = (double *)(a3[7] + 16 * result);
  *v5 = a4;
  v5[1] = a5;
  v6 = a3[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a3[2] = v8;
  return result;
}

unint64_t sub_2400ADCF8(unint64_t result, char a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  a4[(result >> 6) + 8] |= 1 << result;
  *(_BYTE *)(a4[6] + result) = a2 & 1;
  *(_QWORD *)(a4[7] + 8 * result) = a3;
  v4 = a4[2];
  v5 = __OFADD__(v4, 1);
  v6 = v4 + 1;
  if (v5)
    __break(1u);
  else
    a4[2] = v6;
  return result;
}

uint64_t sub_2400ADD40(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_2400ADD58(a1, a2, a3, a4, type metadata accessor for DKPersonGroup);
}

uint64_t sub_2400ADD4C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_2400ADD58(a1, a2, a3, a4, type metadata accessor for DKPersonGroupFilter.StampedPerson);
}

uint64_t sub_2400ADD58(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v10 = a4[6];
  v11 = sub_24015434C();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v10 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a1, a2, v11);
  v12 = a4[7];
  v13 = a5(0);
  result = sub_2400A0E74(a3, v12 + *(_QWORD *)(*(_QWORD *)(v13 - 8) + 72) * a1, a5);
  v15 = a4[2];
  v16 = __OFADD__(v15, 1);
  v17 = v15 + 1;
  if (v16)
    __break(1u);
  else
    a4[2] = v17;
  return result;
}

unint64_t sub_2400ADE10(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v5;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  *(_QWORD *)(a5[7] + 8 * result) = a4;
  v6 = a5[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a5[2] = v8;
  return result;
}

uint64_t sub_2400ADE58(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  v7 = a4[7];
  v8 = sub_240154310();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * a1, a3, v8);
  v10 = a4[2];
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    a4[2] = v12;
  return result;
}

unint64_t sub_2400ADEE4(unint64_t result, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  a4[(result >> 6) + 8] |= 1 << result;
  v4 = 8 * result;
  *(_QWORD *)(a4[6] + v4) = a2;
  *(_QWORD *)(a4[7] + v4) = a3;
  v5 = a4[2];
  v6 = __OFADD__(v5, 1);
  v7 = v5 + 1;
  if (v6)
    __break(1u);
  else
    a4[2] = v7;
  return result;
}

uint64_t sub_2400ADF2C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_24015434C();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void *sub_2400ADFC4()
{
  return sub_2400AE198(&qword_256FB8510);
}

char *sub_2400ADFD0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  unint64_t v27;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8528);
  v2 = *v0;
  v3 = sub_240154D3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (char *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (char *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = (char *)memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v27 = __clz(__rbit64(v25));
    v12 = (v25 - 1) & v25;
    v15 = v27 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)v19;
    v21 = *(_BYTE *)(v19 + 8);
    v22 = *(_QWORD *)(v19 + 16);
    LOBYTE(v19) = *(_BYTE *)(v19 + 24);
    result = *(char **)(v4 + 48);
    *(_QWORD *)&result[v16] = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_QWORD *)v23 = v20;
    *(_BYTE *)(v23 + 8) = v21;
    *(_QWORD *)(v23 + 16) = v22;
    *(_BYTE *)(v23 + 24) = v19;
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AE180()
{
  return sub_2400AE198(&qword_256FB8520);
}

void *sub_2400AE18C()
{
  return sub_2400AE198(&qword_256FB8518);
}

void *sub_2400AE198(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_240154D3C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AE330()
{
  return sub_2400AE354(&qword_256FB8500);
}

void *sub_2400AE33C()
{
  return sub_2400AE198(&qword_256FB8508);
}

void *sub_2400AE348()
{
  return sub_2400AE354(&qword_256FB84F0);
}

void *sub_2400AE354(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  __int128 v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_240154D3C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v13 = (v19 - 1) & v19;
    v16 = v21 + (v10 << 6);
LABEL_12:
    v17 = *(_OWORD *)(*(_QWORD *)(v3 + 56) + 16 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_OWORD *)(*(_QWORD *)(v5 + 56) + 16 * v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AE4D8()
{
  return sub_2400AE198(&qword_256FB84F8);
}

void *sub_2400AE4E4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84C8);
  v2 = *v0;
  v3 = sub_240154D3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AE684()
{
  return sub_2400AED74(&qword_256FB8490);
}

void *sub_2400AE690()
{
  return sub_2400AEF24(&qword_256FB8488);
}

void *sub_2400AE69C()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v1 = v0;
  v2 = type metadata accessor for DKPersonGroup(0);
  v27 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84B8);
  v5 = *v0;
  v6 = sub_240154D3C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v7;
    return result;
  }
  v25 = v1;
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v26 = v5 + 64;
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v17 = v16 | (v11 << 6);
      goto LABEL_12;
    }
    v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v11;
    if (!v22)
    {
      v11 = v21 + 1;
      if (v21 + 1 >= v15)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v11);
      if (!v22)
        break;
    }
LABEL_25:
    v14 = (v22 - 1) & v22;
    v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_12:
    v18 = 8 * v17;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v17);
    v20 = *(_QWORD *)(v27 + 72) * v17;
    sub_240080084(*(_QWORD *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for DKPersonGroup);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v18) = v19;
    result = (void *)sub_2400A0E74((uint64_t)v4, *(_QWORD *)(v7 + 56) + v20, type metadata accessor for DKPersonGroup);
  }
  v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v11 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v11 >= v15)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v11);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2400AE8C8()
{
  return sub_2400AE8F0(type metadata accessor for DKPersonGroup, &qword_256FB84B0);
}

void *sub_2400AE8DC()
{
  return sub_2400AE8F0(type metadata accessor for DKPersonGroupFilter.StampedPerson, &qword_256FB84A8);
}

void *sub_2400AE8F0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  unint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t i;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  unint64_t v28;
  int64_t v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  int64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);
  uint64_t v42;
  uint64_t v43;

  v41 = a1;
  v4 = a1(0);
  v40 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v34 - v5;
  v38 = sub_24015434C();
  v6 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  v37 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v34 = v2;
  v8 = *v2;
  v9 = sub_240154D3C();
  v10 = *(_QWORD *)(v8 + 16);
  v43 = v9;
  if (!v10)
  {
    result = (void *)swift_release();
    v33 = v43;
    v32 = v34;
LABEL_25:
    *v32 = v33;
    return result;
  }
  v11 = v9;
  result = (void *)(v9 + 64);
  v13 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v8 || (unint64_t)result >= v8 + 64 + 8 * v13)
  {
    result = memmove(result, (const void *)(v8 + 64), 8 * v13);
    v11 = v43;
  }
  v14 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v8 + 16);
  v15 = 1 << *(_BYTE *)(v8 + 32);
  v42 = v8;
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(v8 + 64);
  v35 = v8 + 64;
  v36 = (unint64_t)(v15 + 63) >> 6;
  v19 = v37;
  v18 = v38;
  v20 = (uint64_t)v39;
  for (i = v43; ; result = (void *)sub_2400A0E74(v20, *(_QWORD *)(i + 56) + v28, v27))
  {
    if (v17)
    {
      v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v23 = v22 | (v14 << 6);
      v24 = v42;
      goto LABEL_9;
    }
    v29 = v14 + 1;
    v24 = v42;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v29 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v29);
    ++v14;
    if (!v30)
    {
      v14 = v29 + 1;
      if (v29 + 1 >= v36)
        goto LABEL_23;
      v30 = *(_QWORD *)(v35 + 8 * v14);
      if (!v30)
        break;
    }
LABEL_22:
    v17 = (v30 - 1) & v30;
    v23 = __clz(__rbit64(v30)) + (v14 << 6);
LABEL_9:
    v25 = *(_QWORD *)(v6 + 72) * v23;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v19, *(_QWORD *)(v24 + 48) + v25, v18);
    v26 = *(_QWORD *)(v24 + 56);
    v27 = v41;
    v28 = *(_QWORD *)(v40 + 72) * v23;
    sub_240080084(v26 + v28, v20, v41);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(i + 48) + v25, v19, v18);
  }
  v31 = v29 + 2;
  if (v31 >= v36)
  {
LABEL_23:
    result = (void *)swift_release();
    v32 = v34;
    v33 = v43;
    goto LABEL_25;
  }
  v30 = *(_QWORD *)(v35 + 8 * v31);
  if (v30)
  {
    v14 = v31;
    goto LABEL_22;
  }
  while (1)
  {
    v14 = v31 + 1;
    if (__OFADD__(v31, 1))
      break;
    if (v14 >= v36)
      goto LABEL_23;
    v30 = *(_QWORD *)(v35 + 8 * v14);
    ++v31;
    if (v30)
      goto LABEL_22;
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2400AEBB4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84A0);
  v2 = *v0;
  v3 = sub_240154D3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AED5C()
{
  return sub_2400AED74(&qword_256FB8480);
}

void *sub_2400AED68()
{
  return sub_2400AED74(&qword_256FB8450);
}

void *sub_2400AED74(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_240154D3C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v13 = (v19 - 1) & v19;
    v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
    result = (void *)swift_retain();
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AEF0C()
{
  return sub_2400AEF24(&qword_256FB8478);
}

void *sub_2400AEF18()
{
  return sub_2400AEF24(&qword_256FB8448);
}

void *sub_2400AEF24(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *result;
  uint64_t v7;
  unint64_t v8;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  v3 = *v1;
  v4 = sub_240154D3C();
  v5 = v4;
  if (!*(_QWORD *)(v3 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v2 = v5;
    return result;
  }
  result = (void *)(v4 + 64);
  v7 = v3 + 64;
  v8 = (unint64_t)((1 << *(_BYTE *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
    result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  v10 = 0;
  *(_QWORD *)(v5 + 16) = *(_QWORD *)(v3 + 16);
  v11 = 1 << *(_BYTE *)(v3 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & *(_QWORD *)(v3 + 64);
  v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      v10 = v18 + 1;
      if (v18 + 1 >= v14)
        goto LABEL_26;
      v19 = *(_QWORD *)(v7 + 8 * v10);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v13 = (v19 - 1) & v19;
    v16 = v21 + (v10 << 6);
LABEL_12:
    v17 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v16);
    *(_BYTE *)(*(_QWORD *)(v5 + 48) + v16) = *(_BYTE *)(*(_QWORD *)(v3 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v14)
    goto LABEL_26;
  v19 = *(_QWORD *)(v7 + 8 * v20);
  if (v19)
  {
    v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v10 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v10 >= v14)
      goto LABEL_26;
    v19 = *(_QWORD *)(v7 + 8 * v10);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2400AF0A8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  _QWORD *v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8498);
  v2 = *v0;
  v3 = sub_240154D3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      v9 = v22 + 1;
      if (v22 + 1 >= v13)
        goto LABEL_26;
      v23 = *(_QWORD *)(v6 + 8 * v9);
      if (!v23)
        break;
    }
LABEL_25:
    v12 = (v23 - 1) & v23;
    v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v18 = v17[1];
    v19 = 8 * v15;
    v20 = *(void **)(*(_QWORD *)(v2 + 56) + v19);
    v21 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v21 = *v17;
    v21[1] = v18;
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    result = v20;
  }
  v24 = v22 + 2;
  if (v24 >= v13)
    goto LABEL_26;
  v23 = *(_QWORD *)(v6 + 8 * v24);
  if (v23)
  {
    v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v23 = *(_QWORD *)(v6 + 8 * v9);
    ++v24;
    if (v23)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AF258()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_240154310();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8460);
  v24 = v0;
  v5 = *v0;
  v6 = sub_240154D3C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = 8 * v16;
    v18 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v16);
    v19 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 56) + v19, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 48) + v17) = v18;
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 56) + v19, v4, v1);
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AF478()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  unint64_t v10;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  __int128 v27[2];

  v1 = v0;
  v2 = sub_24015434C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8458);
  v6 = *v0;
  v7 = sub_240154D3C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_28:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10)
    result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  v26 = v6 + 64;
  v12 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v13 = 1 << *(_BYTE *)(v6 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v21);
    ++v12;
    if (!v22)
    {
      v12 = v21 + 1;
      if (v21 + 1 >= v16)
        goto LABEL_26;
      v22 = *(_QWORD *)(v26 + 8 * v12);
      if (!v22)
        break;
    }
LABEL_25:
    v15 = (v22 - 1) & v22;
    v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_12:
    v19 = *(_QWORD *)(v3 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v19, v2);
    v20 = 40 * v18;
    sub_24008BA98(*(_QWORD *)(v6 + 56) + v20, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v19, v5, v2);
    result = (void *)sub_24007CC80(v27, *(_QWORD *)(v8 + 56) + v20);
  }
  v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_26:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_28;
  }
  v22 = *(_QWORD *)(v26 + 8 * v23);
  if (v22)
  {
    v12 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v12 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v12 >= v16)
      goto LABEL_26;
    v22 = *(_QWORD *)(v26 + 8 * v12);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2400AF6B8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8468);
  v2 = *v0;
  v3 = sub_240154D3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      v9 = v24 + 1;
      if (v24 + 1 >= v13)
        goto LABEL_26;
      v25 = *(_QWORD *)(v6 + 8 * v9);
      if (!v25)
        break;
    }
LABEL_25:
    v12 = (v25 - 1) & v25;
    v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 32 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_QWORD *)(v19 + 24);
    v22 = *(_OWORD *)v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v23 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v23 = v22;
    *(_QWORD *)(v23 + 16) = v20;
    *(_QWORD *)(v23 + 24) = v21;
    swift_retain();
    swift_bridgeObjectRetain();
    result = (void *)swift_retain();
  }
  v26 = v24 + 2;
  if (v26 >= v13)
    goto LABEL_26;
  v25 = *(_QWORD *)(v6 + 8 * v26);
  if (v25)
  {
    v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v25 = *(_QWORD *)(v6 + 8 * v9);
    ++v26;
    if (v25)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AF888()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84E0);
  v2 = *v0;
  v3 = sub_240154D3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AFA14()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84D8);
  v2 = *v0;
  v3 = sub_240154D3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v21 = __clz(__rbit64(v19));
    v12 = (v19 - 1) & v19;
    v15 = v21 + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AFBA0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  int64_t v23;
  unint64_t v24;
  int64_t v25;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84E8);
  v2 = *v0;
  v3 = sub_240154D3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      v9 = v23 + 1;
      if (v23 + 1 >= v13)
        goto LABEL_26;
      v24 = *(_QWORD *)(v6 + 8 * v9);
      if (!v24)
        break;
    }
LABEL_25:
    v12 = (v24 - 1) & v24;
    v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    v18 = 24 * v15;
    v19 = *(_QWORD *)(v2 + 56) + v18;
    v20 = *(_QWORD *)(v19 + 16);
    v21 = *(_OWORD *)v19;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    v22 = *(_QWORD *)(v4 + 56) + v18;
    *(_OWORD *)v22 = v21;
    *(_QWORD *)(v22 + 16) = v20;
    result = (void *)swift_bridgeObjectRetain();
  }
  v25 = v23 + 2;
  if (v25 >= v13)
    goto LABEL_26;
  v24 = *(_QWORD *)(v6 + 8 * v25);
  if (v24)
  {
    v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v24 = *(_QWORD *)(v6 + 8 * v9);
    ++v25;
    if (v24)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AFD58()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8470);
  v2 = *v0;
  v3 = sub_240154D3C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 64);
  v6 = v2 + 64;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 64);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = *(_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 56) + v16) = v17;
    result = (void *)swift_bridgeObjectRetain();
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2400AFEF8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *result;
  unint64_t v9;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  int64_t v26;

  v1 = sub_24015434C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84C0);
  v24 = v0;
  v5 = *v0;
  v6 = sub_240154D3C();
  v7 = v6;
  if (!*(_QWORD *)(v5 + 16))
  {
LABEL_26:
    result = (void *)swift_release();
    *v24 = v7;
    return result;
  }
  result = (void *)(v6 + 64);
  v9 = (unint64_t)((1 << *(_BYTE *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9)
    result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  v11 = 0;
  *(_QWORD *)(v7 + 16) = *(_QWORD *)(v5 + 16);
  v12 = 1 << *(_BYTE *)(v5 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & *(_QWORD *)(v5 + 64);
  v25 = v5 + 64;
  v26 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      v11 = v20 + 1;
      if (v20 + 1 >= v26)
        goto LABEL_26;
      v21 = *(_QWORD *)(v25 + 8 * v11);
      if (!v21)
        break;
    }
LABEL_25:
    v14 = (v21 - 1) & v21;
    v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    v17 = *(_QWORD *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(_QWORD *)(v5 + 48) + v17, v1);
    v18 = 8 * v16;
    v19 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + v18);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(_QWORD *)(v7 + 48) + v17, v4, v1);
    *(_QWORD *)(*(_QWORD *)(v7 + 56) + v18) = v19;
  }
  v22 = v20 + 2;
  if (v22 >= v26)
    goto LABEL_26;
  v21 = *(_QWORD *)(v25 + 8 * v22);
  if (v21)
  {
    v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    v11 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v11 >= v26)
      goto LABEL_26;
    v21 = *(_QWORD *)(v25 + 8 * v11);
    ++v22;
    if (v21)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2400B011C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t *v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v3 = v2;
  v6 = sub_24015434C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_2400B3490(&qword_256FB5A60, 255, v11, MEMORY[0x24BDCEA88]);
  swift_bridgeObjectRetain();
  v29 = a1;
  v12 = sub_2401545BC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a2;
    v15 = ~v13;
    v16 = *(_QWORD *)(v7 + 72);
    v30 = v7;
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    while (1)
    {
      v18 = v16 * v14;
      v17(v9, *(_QWORD *)(v10 + 48) + v16 * v14, v6);
      sub_2400B3490((unint64_t *)&qword_256FB5A68, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v19 = sub_240154610();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        break;
      v14 = (v14 + 1) & v15;
      if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v20 = 1;
        a2 = v28;
        v7 = v30;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
      }
    }
    swift_bridgeObjectRelease();
    v21 = v27;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = *v21;
    v31 = *v21;
    *v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_2400F5D60();
      v23 = v31;
    }
    v24 = *(_QWORD *)(v23 + 48) + v18;
    v7 = v30;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v30 + 32))(v28, v24, v6);
    sub_2400B0468(v14);
    *v21 = v31;
    swift_bridgeObjectRelease();
    v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a2, v20, 1, v6);
}

uint64_t sub_2400B0360(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v2 = v1;
  v4 = *v2;
  v5 = sub_240154FDC();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(v4 + 48);
  if (*(_QWORD *)(v8 + 8 * v7) != a1)
  {
    v9 = ~v6;
    do
    {
      v7 = (v7 + 1) & v9;
      if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
        return 0;
    }
    while (*(_QWORD *)(v8 + 8 * v7) != a1);
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v11 = *v2;
  v14 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2400F5818();
    v11 = v14;
  }
  v12 = *(_QWORD *)(*(_QWORD *)(v11 + 48) + 8 * v7);
  sub_2400B06E8(v7);
  *v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

void sub_2400B0468(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;
  uint64_t *v24;
  void (*v25)(char *, unint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;

  v3 = sub_24015434C();
  v27 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v1;
  v7 = *v1 + 56;
  v8 = -1 << *(_BYTE *)(*v1 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(v7 + 8 * (v9 >> 6))) != 0)
  {
    v24 = v1;
    v10 = ~v8;
    swift_retain();
    v11 = sub_240154ACC();
    v26 = v7;
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v12 = (v11 + 1) & v10;
      v13 = *(_QWORD *)(v27 + 72);
      v25 = *(void (**)(char *, unint64_t, uint64_t))(v27 + 16);
      do
      {
        v14 = v13 * v9;
        v25(v5, *(_QWORD *)(v6 + 48) + v13 * v9, v3);
        sub_2400B3490(&qword_256FB5A60, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
        v15 = sub_2401545BC();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v5, v3);
        v16 = v15 & v10;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 < v12 || a1 < (uint64_t)v16)
            goto LABEL_6;
        }
        else if (v16 < v12 && a1 < (uint64_t)v16)
        {
          goto LABEL_6;
        }
        v19 = v13 * a1;
        if (v13 * a1 < v14 || *(_QWORD *)(v6 + 48) + v13 * a1 >= (unint64_t)(*(_QWORD *)(v6 + 48) + v14 + v13))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v19 == v14)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        v9 = (v9 + 1) & v10;
      }
      while (((*(_QWORD *)(v26 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    *(_QWORD *)(v26 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    swift_release();
    v1 = v24;
  }
  else
  {
    *(_QWORD *)(v7 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v20 = *v1;
  v21 = *(_QWORD *)(*v1 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v20 + 16) = v23;
    ++*(_DWORD *)(v20 + 36);
  }
}

unint64_t sub_2400B06E8(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_240154ACC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(_QWORD *)(v3 + 48);
        v11 = (_QWORD *)(v10 + 8 * v6);
        v12 = sub_240154FDC() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            v15 = (_QWORD *)(v10 + 8 * v2);
            if (v2 != v6 || (v2 = v6, v15 >= v11 + 1))
            {
              *v15 = *v11;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v16 = *(_QWORD *)(v3 + 16);
  v17 = __OFSUB__(v16, 1);
  v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2400B086C(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t result;
  uint64_t v21;
  int64_t v22;
  unint64_t v23;
  unint64_t i;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  _QWORD v29[3];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;

  v4 = sub_24015434C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *((_QWORD *)a1 + 8);
  v12 = a1[1];
  v31 = *a1;
  v32 = v12;
  v13 = a1[2];
  v14 = a1[3];
  v29[1] = a1;
  v33 = v13;
  v34 = v14;
  v35 = v11;
  v29[2] = sub_240155018();
  v30 = a2;
  v15 = a2 + 56;
  v16 = 1 << *(_BYTE *)(a2 + 32);
  v17 = -1;
  if (v16 < 64)
    v17 = ~(-1 << v16);
  v18 = v17 & *(_QWORD *)(a2 + 56);
  v19 = (unint64_t)(v16 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v21 = 0;
  v22 = 0;
  if (!v18)
    goto LABEL_5;
LABEL_4:
  v23 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (i = v23 | (v22 << 6); ; i = __clz(__rbit64(v26)) + (v22 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v10, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v5 + 72) * i, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
      goto LABEL_19;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_2400B3490(&qword_256FB5A60, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
    v28 = sub_2401545BC();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v21 ^= v28;
    if (v18)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v22++, 1))
      goto LABEL_21;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    if (!v26)
      break;
LABEL_14:
    v18 = (v26 - 1) & v26;
  }
  v27 = v22 + 1;
  if (v22 + 1 >= v19)
  {
LABEL_18:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
LABEL_19:
    swift_release();
    return sub_240154FF4();
  }
  v26 = *(_QWORD *)(v15 + 8 * v27);
  if (v26)
  {
    ++v22;
    goto LABEL_14;
  }
  while (1)
  {
    v22 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v22 >= v19)
      goto LABEL_18;
    v26 = *(_QWORD *)(v15 + 8 * v22);
    ++v27;
    if (v26)
      goto LABEL_14;
  }
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

char *sub_2400B0AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  void *v18;
  id v19;
  id v20;
  void (*v21)(char *, uint64_t);
  id v22;
  id v23;
  void *v24;
  char *v25;
  uint64_t context;
  int v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  int v37;
  id v38;
  uint64_t v39;
  _QWORD v40[3];
  char *v41;
  uint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;

  v43 = a4;
  v44 = a5;
  v42 = a3;
  v47 = *MEMORY[0x24BDAC8D0];
  v8 = sub_2401541D8();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = (char *)v40 - v14;
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)v40 - v16;
  swift_bridgeObjectRetain();
  v40[2] = a1;
  v18 = (void *)sub_240154628();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend((id)objc_opt_self(), sel_bundleWithIdentifier_, v18);

  if (!v19)
    __break(1u);
  v20 = objc_msgSend(v19, sel_bundleURL);
  sub_2401541C0();

  sub_2401541A8();
  v40[1] = a6;
  sub_2401541A8();
  v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v21(v12, v8);
  v22 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v41 = v17;
  v23 = v22;
  sub_2401541CC();
  v24 = (void *)sub_240154628();
  swift_bridgeObjectRelease();
  LOBYTE(v20) = objc_msgSend(v23, sel_fileExistsAtPath_, v24);

  if ((v20 & 1) == 0)
  {
    v45 = 0;
    v46 = 0xE000000000000000;
    sub_240154B38();
    sub_2401546D0();
    sub_2401546D0();
    sub_2401546D0();
    sub_2401546D0();
    sub_2401546D0();
    sub_2401546D0();
    v25 = v45;
    v31 = v46;
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v32 = v25;
    *(_QWORD *)(v32 + 8) = v31;
    *(_BYTE *)(v32 + 16) = 0;
    swift_willThrow();

    v21(v15, v8);
    v29 = v41;
    v30 = v8;
    goto LABEL_12;
  }
  v44 = v19;
  sub_2401541B4();
  v25 = v12;
  sub_2401541CC();
  v21(v12, v8);
  context = espresso_create_context();
  if (!context)
  {
    swift_bridgeObjectRelease();
    sub_240080040();
    swift_allocError();
    v34 = 0xD000000000000020;
    v35 = 0x8000000240163480;
LABEL_10:
    *(_QWORD *)v33 = v34;
    *(_QWORD *)(v33 + 8) = v35;
    *(_BYTE *)(v33 + 16) = 0;
    swift_willThrow();

LABEL_11:
    v21(v15, v8);
    v29 = v41;
    v30 = v8;
    goto LABEL_12;
  }
  v25 = (char *)context;
  if (!espresso_create_plan())
  {
    swift_bridgeObjectRelease();
    sub_240080040();
    swift_allocError();
    v35 = 0x80000002401634B0;
    v34 = 0xD00000000000001DLL;
    goto LABEL_10;
  }
  v45 = 0;
  LODWORD(v46) = 0;
  sub_2401546A0();
  swift_bridgeObjectRelease();
  v27 = espresso_plan_add_network();
  swift_release();
  if (!v27)
  {
    v37 = espresso_plan_build();
    v38 = v44;
    if (!v37)
    {

      v21(v15, v8);
      v21(v41, v8);
      return v25;
    }
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v39 = 0xD00000000000001DLL;
    *(_QWORD *)(v39 + 8) = 0x80000002401634F0;
    *(_BYTE *)(v39 + 16) = 0;
    swift_willThrow();

    goto LABEL_11;
  }
  sub_240080040();
  swift_allocError();
  *(_QWORD *)v28 = 0xD00000000000001ELL;
  *(_QWORD *)(v28 + 8) = 0x80000002401634D0;
  *(_BYTE *)(v28 + 16) = 0;
  swift_willThrow();

  v25 = (char *)v8;
  v21(v15, v8);
  v29 = v41;
  v30 = v8;
LABEL_12:
  v21(v29, v30);
  return v25;
}

uint64_t type metadata accessor for DKISSModel()
{
  uint64_t result;

  result = qword_256FB8030;
  if (!qword_256FB8030)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2400B10C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v8;
  uint64_t result;
  uint64_t v10;

  sub_2401546A0();
  v8 = espresso_network_bind_buffer();
  result = swift_release();
  if (v8)
  {
    sub_240154B38();
    swift_bridgeObjectRelease();
    sub_2401546D0();
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v10 = a7;
    *(_QWORD *)(v10 + 8) = a8;
    *(_BYTE *)(v10 + 16) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_2400B11D4(double *a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  CGFloat Width;
  CGFloat Height;
  double MidX;
  double MidY;
  int v18;
  float v19;
  float v20;
  float v21;
  float v22;
  float v23;
  float v24;
  float v25;
  float v26;
  uint64_t v27;
  uint64_t v28;
  float v29;
  unint64_t v30;
  uint64_t v31;
  float *v32;
  float v33;
  float v34;
  float v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  const double *v44;
  float32x4_t *v45;
  unint64_t v46;
  const double *v47;
  unsigned __int128 v48;
  const double *v49;
  unsigned __int128 v50;
  const double *v51;
  unsigned __int128 v52;
  unsigned __int128 v53;
  uint64_t v54;
  float v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  float v59;
  uint64_t v60;
  uint64_t v61;
  float v62;
  uint64_t v63;
  uint64_t v64;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  unint64_t v72;
  _OWORD *v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t result;
  int v85;
  uint64_t v86;
  CGRect v88;
  CGRect v89;

  v9 = (uint64_t)a1;
  v10 = a1[3];
  v11 = a1[4];
  v12 = a1[5];
  v13 = a1[6];
  v88.origin.x = v10;
  v88.origin.y = v11;
  v88.size.width = v12;
  v88.size.height = v13;
  Width = CGRectGetWidth(v88);
  v89.origin.x = v10;
  v89.origin.y = v11;
  v89.size.width = v12;
  v89.size.height = v13;
  Height = CGRectGetHeight(v89);
  MidX = CGRectGetMidX(*(CGRect *)(v9 + 24));
  MidY = CGRectGetMidY(*(CGRect *)(v9 + 24));
  v18 = *(unsigned __int8 *)(v9 + 88);
  v19 = *(double *)(v9 + 80);
  v20 = v19 * 0.318;
  v21 = *(double *)(v9 + 96);
  v22 = v21 * 0.318;
  v23 = 0.0;
  if (*(_BYTE *)(v9 + 104))
    *(float *)&v6 = 0.0;
  else
    *(float *)&v6 = v22;
  v24 = *(double *)(v9 + 112);
  v25 = v24 * 0.318;
  if (*(_BYTE *)(v9 + 120))
    v26 = 0.0;
  else
    v26 = v25;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EF8);
  v27 = swift_allocObject();
  v28 = v27;
  v85 = v18;
  if (v18)
    v29 = 0.0;
  else
    v29 = v20;
  *(_OWORD *)(v27 + 16) = xmmword_240155A50;
  *(float *)(v27 + 32) = v29;
  v30 = v27 + 32;
  *(_DWORD *)(v27 + 36) = v6;
  *(float *)(v27 + 40) = v26;
  v31 = sub_2401547FC();
  *(_OWORD *)(v31 + 32) = 0u;
  v32 = (float *)(v31 + 32);
  *(_QWORD *)(v31 + 16) = 51;
  *(_OWORD *)(v31 + 220) = 0u;
  *(_OWORD *)(v31 + 192) = 0u;
  *(_OWORD *)(v31 + 208) = 0u;
  *(_OWORD *)(v31 + 160) = 0u;
  *(_OWORD *)(v31 + 176) = 0u;
  *(_OWORD *)(v31 + 128) = 0u;
  *(_OWORD *)(v31 + 144) = 0u;
  *(_OWORD *)(v31 + 96) = 0u;
  *(_OWORD *)(v31 + 112) = 0u;
  *(_OWORD *)(v31 + 64) = 0u;
  *(_OWORD *)(v31 + 80) = 0u;
  *(_OWORD *)(v31 + 48) = 0u;
  if (*(_BYTE *)(v9 + 160))
  {
    v34 = 0.0;
  }
  else
  {
    v33 = *(double *)(v9 + 152);
    v34 = v33;
  }
  if (!*(_BYTE *)(v9 + 144))
  {
    v35 = *(double *)(v9 + 136);
    v23 = v35;
  }
  v36 = *(_QWORD *)(v9 + 128);
  if (v36)
  {
    v5 = *(_QWORD *)(v36 + 16);
    v37 = *(_QWORD *)(v5 + 16);
    if (v37)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      v38 = v37 - 1;
      v39 = 51;
      if (v37 - 1 < 0x33)
        v39 = v37 - 1;
      if (v39 <= 0xF)
        goto LABEL_32;
      if (v38 >= 0x33)
        v38 = 51;
      if ((unint64_t)v32 >= v5 + 24 * v38 + 40 || v5 + 32 >= v31 + 4 * v38 + 36)
      {
        v41 = v39 + 1;
        v42 = v41 & 7;
        if ((v41 & 7) == 0)
          v42 = 8;
        v43 = v41 - v42;
        v44 = (const double *)(v5 + 128);
        v45 = (float32x4_t *)(v31 + 48);
        v46 = v43;
        do
        {
          v47 = v44 - 12;
          v48 = (unsigned __int128)vld3q_f64(v47);
          v49 = v44 - 6;
          v50 = (unsigned __int128)vld3q_f64(v49);
          v51 = v44;
          v52 = (unsigned __int128)vld3q_f64(v51);
          v51 += 6;
          v53 = (unsigned __int128)vld3q_f64(v51);
          v45[-1] = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64((float64x2_t)v48), (float64x2_t)v50);
          *v45 = vcvt_hight_f32_f64((int32x2_t)vcvt_f32_f64((float64x2_t)v52), (float64x2_t)v53);
          v44 += 24;
          v45 += 2;
          v46 -= 8;
        }
        while (v46);
      }
      else
      {
LABEL_32:
        v43 = 0;
      }
      v54 = 24 * v43 + 32;
      do
      {
        if (v43 == 51)
        {
          __break(1u);
LABEL_76:
          __break(1u);
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
        v55 = *(double *)(v5 + v54);
        v32[v43] = v55;
        v54 += 24;
        ++v43;
      }
      while (v37 != v43);
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)(*(_QWORD *)(v36 + 16) + 16);
      if (v37)
      {
        v56 = swift_bridgeObjectRetain();
        v57 = 0;
        v58 = 40;
        do
        {
          if ((unint64_t)(v57 + 17) >= *(_QWORD *)(v31 + 16))
            goto LABEL_76;
          v59 = *(double *)(v56 + v58);
          *(float *)(v31 + 100 + 4 * v57) = v59;
          v58 += 24;
          ++v57;
        }
        while (v37 != v57);
        swift_bridgeObjectRelease();
        v5 = *(_QWORD *)(v36 + 16);
        v37 = *(_QWORD *)(v5 + 16);
        if (v37)
        {
          swift_bridgeObjectRetain();
          v60 = 0;
          v61 = 48;
          do
          {
            if ((unint64_t)(v60 + 34) >= *(_QWORD *)(v31 + 16))
              goto LABEL_77;
            v62 = *(double *)(v5 + v61);
            *(float *)(v31 + 168 + 4 * v60) = v62;
            v61 += 24;
            ++v60;
          }
          while (v37 != v60);
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_47;
        }
      }
    }
    else
    {
      swift_retain();
    }
    swift_release();
  }
LABEL_47:
  v63 = MEMORY[0x24BEE0D00];
  if ((*(_BYTE *)(v9 + 64) & 1) == 0)
  {
    v37 = a2;
    v5 = *(_QWORD *)(v9 + 56);
    v6 = *(_QWORD *)(v9 + 16);
    v9 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
    v36 = *(_QWORD *)(v86 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v86 + v9) = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_86;
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_51;
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC0);
  v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_240156510;
  *(_QWORD *)(v64 + 56) = v63;
  *(_QWORD *)(v64 + 32) = 0xD000000000000018;
  *(_QWORD *)(v64 + 40) = 0x80000002401633B0;
  sub_240154FD0();
  swift_bridgeObjectRelease();
  while (1)
  {
    *(float *)&v6 = sqrt(Width * Height);
    *(float *)&Height = MidX;
    *(float *)&Width = MidY;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC0);
    v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_240158CF0;
    *(_QWORD *)(v67 + 56) = v63;
    *(_QWORD *)(v67 + 32) = 0x203A737475706E69;
    *(_QWORD *)(v67 + 40) = 0xE800000000000000;
    v37 = MEMORY[0x24BEE14E8];
    *(_QWORD *)(v67 + 88) = MEMORY[0x24BEE14E8];
    *(_DWORD *)(v67 + 64) = v6;
    *(_QWORD *)(v67 + 120) = v37;
    *(_DWORD *)(v67 + 96) = LODWORD(Height);
    *(_QWORD *)(v67 + 152) = v37;
    *(_DWORD *)(v67 + 128) = LODWORD(Width);
    *(_QWORD *)(v67 + 184) = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB84D0);
    *(_QWORD *)(v67 + 160) = v28;
    *(_QWORD *)(v67 + 216) = v37;
    *(float *)(v67 + 192) = v34;
    *(_QWORD *)(v67 + 248) = v37;
    *(float *)(v67 + 224) = v23;
    swift_bridgeObjectRetain();
    sub_240154FD0();
    swift_bridgeObjectRelease();
    v36 = a2 * a5;
    if ((unsigned __int128)((uint64_t)a2 * (__int128)a5) >> 64 != (uint64_t)(a2 * a5) >> 63)
    {
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
LABEL_80:
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
      goto LABEL_85;
    }
    *(_DWORD *)(a3 + 4 * v36) = v6;
    if (__OFADD__(v36, 1))
      goto LABEL_79;
    *(_DWORD *)(a3 + 4 * (v36 + 1)) = LODWORD(Height);
    if (__OFADD__(v36, 2))
      goto LABEL_80;
    *(_DWORD *)(a3 + 4 * (v36 + 2)) = LODWORD(Width);
    if (__OFADD__(v36, 3))
      goto LABEL_81;
    v68 = (_QWORD *)(a3 + 4 * (v36 + 3));
    if (v85)
      v69 = &unk_2510621A8;
    else
      v69 = &unk_251062180;
    v70 = &unk_2510621C8;
    if (!v85)
      v70 = &unk_2510621A0;
    v71 = &unk_2510621A8;
    if (v85)
      v71 = &unk_2510621D0;
    if (v70 < v68 + 1 && v68 < v71)
      goto LABEL_89;
    *v68 = v69[4];
    swift_bridgeObjectRelease();
    if (__OFADD__(v36, 5))
      goto LABEL_82;
    v72 = a3 + 4 * (v36 + 5);
    if (v30 < v72 + 12 && v72 < v28 + 44)
      goto LABEL_89;
    *(_QWORD *)v72 = *(_QWORD *)v30;
    *(_DWORD *)(v72 + 8) = *(_DWORD *)(v30 + 8);
    swift_bridgeObjectRelease();
    if (__OFADD__(v36, 8))
      goto LABEL_83;
    *(float *)(a3 + 4 * (v36 + 8)) = v34;
    if (__OFADD__(v36, 9))
      goto LABEL_84;
    *(float *)(a3 + 4 * (v36 + 9)) = v23;
    if (!__OFADD__(v36, 10))
      break;
LABEL_85:
    __break(1u);
LABEL_86:
    v36 = (uint64_t)sub_24014CDB8((_QWORD *)v36);
    a2 = v37;
    if ((v37 & 0x8000000000000000) != 0)
      goto LABEL_87;
LABEL_51:
    if (*(_QWORD *)(v36 + 16) <= a2)
      goto LABEL_88;
    v66 = (_QWORD *)(v36 + 16 * a2);
    v66[4] = v5;
    v66[5] = v6;
    *(_QWORD *)(v86 + v9) = v36;
    v63 = MEMORY[0x24BEE0D00];
  }
  v73 = (_OWORD *)(a3 + 4 * (v36 + 10));
  if (v32 >= (float *)v73 + 51 || (unint64_t)v73 >= v31 + 236)
  {
    *v73 = *(_OWORD *)v32;
    v74 = *(_OWORD *)(v31 + 48);
    v75 = *(_OWORD *)(v31 + 64);
    v76 = *(_OWORD *)(v31 + 96);
    v73[3] = *(_OWORD *)(v31 + 80);
    v73[4] = v76;
    v73[1] = v74;
    v73[2] = v75;
    v77 = *(_OWORD *)(v31 + 112);
    v78 = *(_OWORD *)(v31 + 128);
    v79 = *(_OWORD *)(v31 + 160);
    v73[7] = *(_OWORD *)(v31 + 144);
    v73[8] = v79;
    v73[5] = v77;
    v73[6] = v78;
    v80 = *(_OWORD *)(v31 + 176);
    v81 = *(_OWORD *)(v31 + 192);
    v82 = *(_OWORD *)(v31 + 208);
    *(_OWORD *)((char *)v73 + 188) = *(_OWORD *)(v31 + 220);
    v73[10] = v81;
    v73[11] = v82;
    v73[9] = v80;
    result = swift_bridgeObjectRelease();
    *(_DWORD *)(a4 + 4 * a2) = 1065353216;
    return result;
  }
LABEL_89:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400B1910(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x4964656B63617274 && a2 == 0xE900000000000044;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365727574616566 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2400B1A0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D756E656D617266 && a2 == 0xE800000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701669236 && a2 == 0xE400000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736B63617274 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2400B1B48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D614E6F65646976 && a2 == 0xE900000000000065;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656D617266 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2400B1C3C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746365746564 && a2 == 0xEA0000000000736ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2400B1D28(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701669236 && a2 == 0xE400000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1952671090 && a2 == 0xE400000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4972656B63617274 && a2 == 0xE900000000000064 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002401613C0 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x77615965636166 && a2 == 0xE700000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6374695065636166 && a2 == 0xE900000000000068 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C6C6F5265636166 && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7079654B79646F62 && a2 == 0xED000073746E696FLL || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x676E696B61657073 && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x676E696B6F6F6CLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

uint64_t sub_2400B2144(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  char isUniquelyReferenced_nonNull_native;
  double *v17;
  uint64_t v18;
  int64_t v19;
  _OWORD *v20;
  uint64_t v21;
  unint64_t v22;
  double v23;
  unint64_t v24;
  float v25;
  _OWORD *v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t result;
  uint64_t v40;

  v13 = *(_QWORD *)(a1 + 16);
  v14 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections;
  v15 = *(_QWORD **)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKISSModel_networkDetections);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v6 + v14) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v15 = sub_24014CDB8(v15);
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_18;
LABEL_3:
  if (v15[2] <= a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v17 = (double *)&v15[2 * a2];
  *((_QWORD *)v17 + 4) = v13;
  v17[5] = a6;
  *(_QWORD *)(v6 + v14) = v15;
  v18 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(v18 + 16);
  v20 = (_OWORD *)MEMORY[0x24BEE4AF8];
  if (v19)
  {
    v40 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_2400E59F0(0, v19, 0);
    v21 = 0;
    v20 = (_OWORD *)v40;
    v22 = *(_QWORD *)(v40 + 16);
    do
    {
      v23 = *(double *)(v18 + 8 * v21 + 32);
      v24 = *(_QWORD *)(v40 + 24);
      if (v22 >= v24 >> 1)
        sub_2400E59F0(v24 > 1, v22 + 1, 1);
      ++v21;
      v25 = v23;
      *(_QWORD *)(v40 + 16) = v22 + 1;
      *(float *)(v40 + 4 * v22++ + 32) = v25;
    }
    while (v19 != v21);
    swift_bridgeObjectRelease();
  }
  if ((unsigned __int128)((uint64_t)a2 * (__int128)a5) >> 64 != (uint64_t)(a2 * a5) >> 63)
    goto LABEL_20;
  v26 = (_OWORD *)(a3 + 4 * a2 * a5);
  if (v20 + 2 >= (_OWORD *)((char *)v26 + 236) || v26 >= (_OWORD *)((char *)v20 + 268))
  {
    v28 = v20[2];
    v29 = v20[4];
    v26[1] = v20[3];
    v26[2] = v29;
    *v26 = v28;
    v30 = v20[5];
    v31 = v20[6];
    v32 = v20[8];
    v26[5] = v20[7];
    v26[6] = v32;
    v26[3] = v30;
    v26[4] = v31;
    v33 = v20[9];
    v34 = v20[10];
    v35 = v20[12];
    v26[9] = v20[11];
    v26[10] = v35;
    v26[7] = v33;
    v26[8] = v34;
    v36 = v20[13];
    v37 = v20[14];
    v38 = v20[15];
    *(_OWORD *)((char *)v26 + 220) = *(_OWORD *)((char *)v20 + 252);
    v26[12] = v37;
    v26[13] = v38;
    v26[11] = v36;
    result = swift_bridgeObjectRelease();
    *(_DWORD *)(a4 + 4 * a2) = 1065353216;
    return result;
  }
LABEL_21:
  result = sub_240154D60();
  __break(1u);
  return result;
}

uint64_t sub_2400B2374()
{
  return MEMORY[0x24BEE0948];
}

uint64_t sub_2400B2380@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 16);
  return result;
}

_QWORD *sub_2400B2390(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 16) = *result;
  return result;
}

uint64_t sub_2400B23A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  return swift_bridgeObjectRetain();
}

double sub_2400B23B4@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 24);
  *a2 = result;
  return result;
}

double sub_2400B23C4(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 24) = *a1;
  return result;
}

uint64_t sub_2400B23D8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400B23E8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2400B2418@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t keypath_set_8Tm_0(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 32) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

double sub_2400B245C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 16);
  *a2 = result;
  return result;
}

double sub_2400B246C(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 16) = *a1;
  return result;
}

uint64_t keypath_set_2Tm(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 24) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

__n128 sub_2400B24B0@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(*(_QWORD *)a1 + 24);
  v3 = *(_OWORD *)(*(_QWORD *)a1 + 40);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

__n128 sub_2400B24C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a2;
  result = *(__n128 *)a1;
  v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 24) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 40) = v4;
  return result;
}

uint64_t sub_2400B24D8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)result + 64);
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)result + 56);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400B24F0(uint64_t result, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *a2;
  *(_QWORD *)(v3 + 56) = *(_QWORD *)result;
  *(_BYTE *)(v3 + 64) = v2;
  return result;
}

uint64_t sub_2400B2508@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 72);
  return result;
}

_QWORD *sub_2400B2518(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 72) = *result;
  return result;
}

uint64_t sub_2400B2528@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)result + 88);
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)result + 80);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400B2540(uint64_t result, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *a2;
  *(_QWORD *)(v3 + 80) = *(_QWORD *)result;
  *(_BYTE *)(v3 + 88) = v2;
  return result;
}

uint64_t sub_2400B2558@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)result + 104);
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)result + 96);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400B2570(uint64_t result, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *a2;
  *(_QWORD *)(v3 + 96) = *(_QWORD *)result;
  *(_BYTE *)(v3 + 104) = v2;
  return result;
}

uint64_t sub_2400B2588@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)result + 120);
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)result + 112);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400B25A0(uint64_t result, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *a2;
  *(_QWORD *)(v3 + 112) = *(_QWORD *)result;
  *(_BYTE *)(v3 + 120) = v2;
  return result;
}

uint64_t sub_2400B25B8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 128);
  return swift_retain();
}

uint64_t sub_2400B25C8(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 128) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2400B25F8@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)result + 144);
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)result + 136);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400B2610(uint64_t result, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *a2;
  *(_QWORD *)(v3 + 136) = *(_QWORD *)result;
  *(_BYTE *)(v3 + 144) = v2;
  return result;
}

uint64_t sub_2400B2628@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)result + 160);
  *(_QWORD *)a2 = *(_QWORD *)(*(_QWORD *)result + 152);
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400B2640(uint64_t result, uint64_t *a2)
{
  char v2;
  uint64_t v3;

  v2 = *(_BYTE *)(result + 8);
  v3 = *a2;
  *(_QWORD *)(v3 + 152) = *(_QWORD *)result;
  *(_BYTE *)(v3 + 160) = v2;
  return result;
}

uint64_t method lookup function for DKISSTrackVector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKISSTrackVector.trackedID.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DKISSTrackVector.trackedID.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKISSTrackVector.__allocating_init(trackerID:features:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t method lookup function for DKISSFeatureVector()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKISSFeatureVector.framenum.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKISSFeatureVector.framenum.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKISSFeatureVector.framenum.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKISSFeatureVector.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKISSFeatureVector.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKISSFeatureVector.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKISSFeatureVector.tracks.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKISSFeatureVector.tracks.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKISSFeatureVector.tracks.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKISSFeatureVector.__allocating_init(framenum:time:tracks:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DKISSFeatureVector.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKISSFeatureVector.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t method lookup function for DKISSFeatureVectors()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKISSFeatureVectors.videoName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.videoName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKISSFeatureVectors.__allocating_init(videoName:frames:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t method lookup function for DKISSDetections()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKISSDetections.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of DKISSDetections.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKISSDetections.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKISSDetections.detections.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKISSDetections.detections.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKISSDetections.detections.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKISSDetections.__allocating_init(time:detections:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKISSDetections.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKISSDetections.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t method lookup function for DKISSDetection()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKISSDetection.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKISSDetection.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKISSDetection.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKISSDetection.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKISSDetection.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKISSDetection.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKISSDetection.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKISSDetection.trackerId.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 216))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.trackerId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKISSDetection.framesSinceLastUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKISSDetection.framesSinceLastUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKISSDetection.framesSinceLastUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKISSDetection.faceYaw.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKISSDetection.faceYaw.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 264))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.faceYaw.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKISSDetection.facePitch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKISSDetection.facePitch.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 288))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.facePitch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKISSDetection.faceRoll.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKISSDetection.faceRoll.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 312))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.faceRoll.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKISSDetection.bodyKeypoints.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKISSDetection.bodyKeypoints.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKISSDetection.bodyKeypoints.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKISSDetection.speaking.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKISSDetection.speaking.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 360))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.speaking.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKISSDetection.looking.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKISSDetection.looking.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 384))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKISSDetection.looking.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKISSDetection.__allocating_init(time:rect:trackerId:framesSinceLastUpdate:faceYaw:facePitch:faceRoll:bodyKeypoints:speaking:looking:)(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v7 + 400))(a1, a2 & 1, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKISSDetection.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKISSDetection.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t initializeBufferWithCopyOfBuffer for DKISSPrediction(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DKISSPrediction()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for DKISSPrediction(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for DKISSPrediction(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKISSPrediction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKISSPrediction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKISSPrediction()
{
  return &type metadata for DKISSPrediction;
}

uint64_t sub_2400B2C0C()
{
  return type metadata accessor for DKISSModel();
}

uint64_t sub_2400B2C14()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2401544C0();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t method lookup function for DKISSModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKISSModel.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 808))();
}

uint64_t dispatch thunk of DKISSModel.process(features:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of DKISSModel.process(detections:time:runSubjectSelection:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

ValueMetadata *type metadata accessor for NetworkDetection()
{
  return &type metadata for NetworkDetection;
}

uint64_t getEnumTagSinglePayload for DKISSDetection.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF7)
    goto LABEL_17;
  if (a2 + 9 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 9) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 9;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 9;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 9;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v8 = v6 - 10;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKISSDetection.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_2400B2E1C + 4 * byte_24015826F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_2400B2E50 + 4 * byte_24015826A[v4]))();
}

uint64_t sub_2400B2E50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B2E58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400B2E60);
  return result;
}

uint64_t sub_2400B2E6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400B2E74);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2400B2E78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B2E80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKISSDetection.CodingKeys()
{
  return &type metadata for DKISSDetection.CodingKeys;
}

ValueMetadata *type metadata accessor for DKISSDetections.CodingKeys()
{
  return &type metadata for DKISSDetections.CodingKeys;
}

ValueMetadata *type metadata accessor for DKISSFeatureVectors.CodingKeys()
{
  return &type metadata for DKISSFeatureVectors.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DKISSFeatureVector.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2400B2F0C + 4 * byte_240158279[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2400B2F40 + 4 * byte_240158274[v4]))();
}

uint64_t sub_2400B2F40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B2F48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400B2F50);
  return result;
}

uint64_t sub_2400B2F5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400B2F64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2400B2F68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B2F70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKISSFeatureVector.CodingKeys()
{
  return &type metadata for DKISSFeatureVector.CodingKeys;
}

uint64_t _s23IntelligentTrackingCore15DKISSDetectionsC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2400B2FD8 + 4 * byte_240158283[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2400B300C + 4 * byte_24015827E[v4]))();
}

uint64_t sub_2400B300C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B3014(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400B301CLL);
  return result;
}

uint64_t sub_2400B3028(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400B3030);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2400B3034(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B303C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKISSTrackVector.CodingKeys()
{
  return &type metadata for DKISSTrackVector.CodingKeys;
}

unint64_t sub_2400B305C()
{
  unint64_t result;

  result = qword_256FB83D0;
  if (!qword_256FB83D0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015884C, &type metadata for DKISSTrackVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB83D0);
  }
  return result;
}

unint64_t sub_2400B30A4()
{
  unint64_t result;

  result = qword_256FB83D8;
  if (!qword_256FB83D8)
  {
    result = MEMORY[0x24267E0BC](&unk_240158904, &type metadata for DKISSFeatureVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB83D8);
  }
  return result;
}

unint64_t sub_2400B30EC()
{
  unint64_t result;

  result = qword_256FB83E0;
  if (!qword_256FB83E0)
  {
    result = MEMORY[0x24267E0BC](&unk_2401589BC, &type metadata for DKISSFeatureVectors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB83E0);
  }
  return result;
}

unint64_t sub_2400B3134()
{
  unint64_t result;

  result = qword_256FB83E8;
  if (!qword_256FB83E8)
  {
    result = MEMORY[0x24267E0BC](&unk_240158A74, &type metadata for DKISSDetections.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB83E8);
  }
  return result;
}

unint64_t sub_2400B317C()
{
  unint64_t result;

  result = qword_256FB83F0;
  if (!qword_256FB83F0)
  {
    result = MEMORY[0x24267E0BC](&unk_240158B2C, &type metadata for DKISSDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB83F0);
  }
  return result;
}

unint64_t sub_2400B31C4()
{
  unint64_t result;

  result = qword_256FB83F8;
  if (!qword_256FB83F8)
  {
    result = MEMORY[0x24267E0BC](&unk_240158A9C, &type metadata for DKISSDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB83F8);
  }
  return result;
}

unint64_t sub_2400B320C()
{
  unint64_t result;

  result = qword_256FB8400;
  if (!qword_256FB8400)
  {
    result = MEMORY[0x24267E0BC](&unk_240158AC4, &type metadata for DKISSDetection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8400);
  }
  return result;
}

unint64_t sub_2400B3254()
{
  unint64_t result;

  result = qword_256FB8408;
  if (!qword_256FB8408)
  {
    result = MEMORY[0x24267E0BC](&unk_2401589E4, &type metadata for DKISSDetections.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8408);
  }
  return result;
}

unint64_t sub_2400B329C()
{
  unint64_t result;

  result = qword_256FB8410;
  if (!qword_256FB8410)
  {
    result = MEMORY[0x24267E0BC](&unk_240158A0C, &type metadata for DKISSDetections.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8410);
  }
  return result;
}

unint64_t sub_2400B32E4()
{
  unint64_t result;

  result = qword_256FB8418;
  if (!qword_256FB8418)
  {
    result = MEMORY[0x24267E0BC](&unk_24015892C, &type metadata for DKISSFeatureVectors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8418);
  }
  return result;
}

unint64_t sub_2400B332C()
{
  unint64_t result;

  result = qword_256FB8420;
  if (!qword_256FB8420)
  {
    result = MEMORY[0x24267E0BC](&unk_240158954, &type metadata for DKISSFeatureVectors.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8420);
  }
  return result;
}

unint64_t sub_2400B3374()
{
  unint64_t result;

  result = qword_256FB8428;
  if (!qword_256FB8428)
  {
    result = MEMORY[0x24267E0BC](&unk_240158874, &type metadata for DKISSFeatureVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8428);
  }
  return result;
}

unint64_t sub_2400B33BC()
{
  unint64_t result;

  result = qword_256FB8430;
  if (!qword_256FB8430)
  {
    result = MEMORY[0x24267E0BC](&unk_24015889C, &type metadata for DKISSFeatureVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8430);
  }
  return result;
}

unint64_t sub_2400B3404()
{
  unint64_t result;

  result = qword_256FB8438;
  if (!qword_256FB8438)
  {
    result = MEMORY[0x24267E0BC](&unk_2401587BC, &type metadata for DKISSTrackVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8438);
  }
  return result;
}

unint64_t sub_2400B344C()
{
  unint64_t result;

  result = qword_256FB8440;
  if (!qword_256FB8440)
  {
    result = MEMORY[0x24267E0BC](&unk_2401587E4, &type metadata for DKISSTrackVector.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8440);
  }
  return result;
}

uint64_t sub_2400B3490(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = a3(a2);
    result = MEMORY[0x24267E0BC](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of DKISSFeatureVectors.__allocating_init(from:)()
{
  return dispatch thunk of DKISSDetections.__allocating_init(from:)();
}

uint64_t dispatch thunk of DKISSTrackVector.__allocating_init(from:)()
{
  return dispatch thunk of DKISSDetections.__allocating_init(from:)();
}

uint64_t dispatch thunk of DKISSFeatureVectors.encode(to:)()
{
  return dispatch thunk of DKISSDetections.encode(to:)();
}

uint64_t dispatch thunk of DKISSTrackVector.encode(to:)()
{
  return dispatch thunk of DKISSDetections.encode(to:)();
}

double *DKAccelerationLimiter.__allocating_init(speed:maxAcceleration:maxDeceleration:profilesEnabled:time:)(char a1, uint64_t a2, double a3, double a4, double a5)
{
  double *v10;
  char *v11;
  uint64_t v12;

  v10 = (double *)swift_allocObject();
  sub_240154274();
  v10[2] = a4;
  v10[3] = a5;
  v10[4] = a3;
  v11 = (char *)v10 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime;
  v12 = sub_240154310();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a2, v12);
  *((_BYTE *)v10 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) = a1;
  *((_BYTE *)v10 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 1;
  return v10;
}

BOOL static DKAccelerationLimiter.Profile.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKAccelerationLimiter.Profile.hash(into:)()
{
  return sub_240154FF4();
}

uint64_t DKAccelerationLimiter.Profile.hashValue.getter()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

double *DKAccelerationLimiter.init(speed:maxAcceleration:maxDeceleration:profilesEnabled:time:)(char a1, uint64_t a2, double a3, double a4, double a5)
{
  double *v5;
  char *v11;
  uint64_t v12;

  sub_240154274();
  v5[2] = a4;
  v5[3] = a5;
  v5[4] = a3;
  v11 = (char *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime;
  v12 = sub_240154310();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a2, v12);
  *((_BYTE *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) = a1;
  *((_BYTE *)v5 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = 1;
  return v5;
}

double sub_2400B3764(uint64_t a1, double a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void (*v10)(char *, uint64_t, uint64_t);
  double v11;
  double v12;
  double v13;
  double v14;
  char *v15;
  double v16;
  double v17;
  void (*v18)(char *, uint64_t);
  double v19;
  double v20;
  double v21;
  double v22;
  double v23;
  double v24;
  double v25;
  double v26;
  double v27;
  uint64_t v29;

  v3 = v2;
  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) & 1) != 0)
  {
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v10(v9, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v6);
    sub_24015428C();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (v12 <= 0.0)
    {
LABEL_5:
      v13 = *(double *)(v2 + 16);
      goto LABEL_7;
    }
    if (*(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile))
    {
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) == 1)
        goto LABEL_5;
      v13 = *(double *)(v2 + 16) + *(double *)(v2 + 16);
    }
    else
    {
      v13 = *(double *)(v2 + 16) * 0.5;
    }
  }
  else
  {
    v13 = *(double *)(v2 + 16);
    v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  }
LABEL_7:
  v14 = *(double *)(v2 + 24);
  v15 = (char *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime);
  v10(v9, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime, v6);
  sub_24015428C();
  v17 = v16;
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v9, v6);
  v19 = *(double *)(v3 + 32);
  v20 = (a2 - v19) / v17;
  v21 = fabs(a2);
  v22 = fabs(v19);
  v23 = -v14;
  if (v20 > -v14)
    v23 = (a2 - v19) / v17;
  if (v14 >= v20)
    v24 = (a2 - v19) / v17;
  else
    v24 = v14;
  if (v20 > 0.0)
    v23 = v24;
  v25 = -v13;
  if (v20 > -v13)
    v25 = (a2 - v19) / v17;
  if (v13 >= v20)
    v26 = (a2 - v19) / v17;
  else
    v26 = v13;
  if (v20 > 0.0)
    v27 = v26;
  else
    v27 = v25;
  if (v22 >= v21)
    v27 = v23;
  *(double *)(v3 + 32) = v19 + v17 * v27;
  v18(v15, v6);
  v10(v15, a1, v6);
  return *(double *)(v3 + 32);
}

void sub_2400B3944(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  char *v7;
  double v8;
  double v9;
  char v10;
  uint64_t v11;

  v3 = sub_240154310();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1
    && ((*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))(v7, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v3, v5), sub_24015428C(), v9 = v8, (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3), v9 > 0.0))
  {
    v10 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile);
  }
  else
  {
    v10 = 1;
  }
  *a1 = v10;
}

_BYTE *sub_2400B3A2C(_BYTE *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profilesEnabled) == 1)
  {
    *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profile) = *result;
    v4 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout;
    v5 = sub_240154310();
    v6 = *(_QWORD *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    return (_BYTE *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v4, a2, v5);
  }
  return result;
}

uint64_t sub_2400B3AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v1 = sub_240154310();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240154274();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v2 + 40))(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v4, v1);
}

uint64_t DKAccelerationLimiter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v2);
  return v0;
}

uint64_t DKAccelerationLimiter.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_updateTime;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKAccelerationLimiter_profileTimeout, v2);
  return swift_deallocClassInstance();
}

unint64_t sub_2400B3C18()
{
  unint64_t result;

  result = qword_256FB8530;
  if (!qword_256FB8530)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKAccelerationLimiter.Profile, &type metadata for DKAccelerationLimiter.Profile);
    atomic_store(result, (unint64_t *)&qword_256FB8530);
  }
  return result;
}

uint64_t sub_2400B3C5C()
{
  return type metadata accessor for DKAccelerationLimiter();
}

uint64_t type metadata accessor for DKAccelerationLimiter()
{
  uint64_t result;

  result = qword_256FB8560;
  if (!qword_256FB8560)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2400B3CA0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKAccelerationLimiter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKAccelerationLimiter.__allocating_init(speed:maxAcceleration:maxDeceleration:profilesEnabled:time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of DKAccelerationLimiter.update(newSpeed:time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKAccelerationLimiter.getCurrentProfile(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKAccelerationLimiter.setProfile(profile:timeout:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKAccelerationLimiter.resetProfile()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t storeEnumTagSinglePayload for DKAccelerationLimiter.Profile(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2400B3DC4 + 4 * byte_240158D05[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2400B3DF8 + 4 * byte_240158D00[v4]))();
}

uint64_t sub_2400B3DF8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B3E00(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400B3E08);
  return result;
}

uint64_t sub_2400B3E14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400B3E1CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2400B3E20(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B3E28(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKAccelerationLimiter.Profile()
{
  return &type metadata for DKAccelerationLimiter.Profile;
}

uint64_t static DKImageUtil.extractFloatChannels(imageBuffer:reds:greens:blues:)(__CVBuffer *a1, char **a2, char **a3, char **a4)
{
  return sub_2400B4BDC(a1, a2, a3, a4);
}

BOOL static DKImageUtil.Errors.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKImageUtil.Errors.hash(into:)()
{
  return sub_240154FF4();
}

uint64_t DKImageUtil.Errors.hashValue.getter()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

char *static DKImageUtil.extractFloatChannels(imageBuffer:)(unsigned __int8 *__A, uint64_t a2, uint64_t a3)
{
  vDSP_Length *v3;
  uint64_t v4;
  float *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  const float *v9;
  const float *v10;
  vDSP_Length v11;
  char *v12;
  vDSP_Length v13;
  char *v14;
  vDSP_Length v15;
  char *v16;
  char *result;

  if ((a3 | a2) < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  v11 = a3 * a2;
  if ((unsigned __int128)(a3 * (__int128)a2) >> 64 != (a3 * a2) >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = __A;
  if (!__A)
  {
    __break(1u);
    goto LABEL_20;
  }
  if ((v11 - 0x2000000000000000) >> 62 == 3)
  {
    if ((v11 & 0x8000000000000000) == 0)
    {
      if (v11)
      {
        v8 = sub_2401547FC();
        *(_QWORD *)(v8 + 16) = v11;
        v10 = (const float *)(v8 + 32);
        vDSP_vfltu8(v6, 4, (float *)(v8 + 32), 1, v11);
        *(_QWORD *)(v8 + 16) = v11;
        swift_bridgeObjectRetain();
        v4 = sub_2401547FC();
        *(_QWORD *)(v4 + 16) = v11;
        v3 = (vDSP_Length *)(v4 + 16);
        v5 = (float *)(v4 + 32);
        vDSP_vfltu8(v6 + 1, 4, (float *)(v4 + 32), 1, v11);
        *(_QWORD *)(v4 + 16) = v11;
        swift_bridgeObjectRetain();
        v7 = sub_2401547FC();
        *(_QWORD *)(v7 + 16) = v11;
      }
      else
      {
        v4 = MEMORY[0x24BEE4AF8];
        v5 = (float *)(MEMORY[0x24BEE4AF8] + 32);
        vDSP_vfltu8(__A, 4, (float *)(MEMORY[0x24BEE4AF8] + 32), 1, 0);
        *(_QWORD *)(v4 + 16) = 0;
        v3 = (vDSP_Length *)(v4 + 16);
        swift_bridgeObjectRetain();
        vDSP_vfltu8(v6 + 1, 4, v5, 1, 0);
        *(_QWORD *)(v4 + 16) = 0;
        swift_bridgeObjectRetain();
        v8 = v4;
        v10 = v5;
        v7 = v4;
      }
      v9 = (const float *)(v7 + 32);
      vDSP_vfltu8(v6 + 2, 4, (float *)(v7 + 32), 1, v11);
      *(_QWORD *)(v7 + 16) = v11;
      v6 = *(unsigned __int8 **)(v8 + 16);
      swift_bridgeObjectRetain();
      v12 = (char *)v8;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_10;
      goto LABEL_18;
    }
LABEL_20:
    result = (char *)sub_240154CF4();
    __break(1u);
    return result;
  }
LABEL_17:
  __break(1u);
LABEL_18:
  v12 = sub_24014CD90(v8);
LABEL_10:
  vDSP_vsdiv(v10, 1, flt_2510624E8, (float *)v12 + 8, 1, (vDSP_Length)v6);
  swift_bridgeObjectRelease();
  v13 = *v3;
  v14 = (char *)v4;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v14 = sub_24014CD90(v4);
  vDSP_vsdiv(v5, 1, flt_251062510, (float *)v14 + 8, 1, v13);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v7 + 16);
  v16 = (char *)v7;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v16 = sub_24014CD90(v7);
  vDSP_vsdiv(v9, 1, flt_251062538, (float *)v16 + 8, 1, v15);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t static DKImageUtil.extractFloatChannels(imageBuffer:reds:greens:blues:order:)(const unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, char **a5, char **a6, char **a7, int a8)
{
  return sub_2400B48C4(a1, a2, a3, a5, a6, a7, a8);
}

CVPixelBufferRef static DKImageUtil.createCVPixelBuffer(from:context:)(uint64_t a1)
{
  id v1;
  id v2;
  CVPixelBufferRef v3;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF660]), sel_initWithCGImage_, a1);
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
  v3 = _s23IntelligentTrackingCore11DKImageUtilC19createCVPixelBuffer4from7contextSo11CVBufferRefaSgSo7CIImageC_So9CIContextCtFZ_0(v1, v2);

  return v3;
}

void static DKImageUtil.createCVPixelBuffer(width:height:format:buffer:)(size_t a1, size_t a2, OSType a3, CVPixelBufferRef *a4)
{
  uint64_t inited;
  uint64_t v9;
  const __CFDictionary *v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_QWORD *)(inited + 32) = sub_24015464C();
  *(_QWORD *)(inited + 40) = v9;
  *(_QWORD *)(inited + 48) = sub_240106084(MEMORY[0x24BEE4AF8]);
  sub_2401061A4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E8);
  v10 = (const __CFDictionary *)sub_240154544();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, a1, a2, a3, v10, a4);

}

CGImageRef static DKImageUtil.createCGImage(from:context:)(__CVBuffer *a1)
{
  CGImageRef v2[2];

  v2[1] = *(CGImageRef *)MEMORY[0x24BDAC8D0];
  v2[0] = 0;
  VTCreateCGImageFromCVPixelBuffer(a1, 0, v2);
  return v2[0];
}

CVPixelBufferRef static DKImageUtil.rotateCVPixelBufferBy90(buffer:clockwise:)(__CVBuffer *a1, char a2)
{
  size_t Height;
  size_t Width;
  uint64_t inited;
  uint64_t v7;
  const __CFDictionary *v8;
  CVPixelBufferRef v9;
  __CVBuffer *v10;
  const __CFString *v11;
  const void **v12;
  const void *v13;
  OpaqueVTPixelRotationSession *v14;
  VTPixelRotationSessionRef v16;
  CVPixelBufferRef pixelBufferOut[2];

  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  pixelBufferOut[0] = 0;
  Height = CVPixelBufferGetHeight(a1);
  Width = CVPixelBufferGetWidth(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_QWORD *)(inited + 32) = sub_24015464C();
  *(_QWORD *)(inited + 40) = v7;
  *(_QWORD *)(inited + 48) = sub_240106084(MEMORY[0x24BEE4AF8]);
  sub_2401061A4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E8);
  v8 = (const __CFDictionary *)sub_240154544();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, Height, Width, 0x42475241u, v8, pixelBufferOut);

  v9 = pixelBufferOut[0];
  if (pixelBufferOut[0])
  {
    v16 = 0;
    v10 = pixelBufferOut[0];
    VTPixelRotationSessionCreate(0, &v16);
    if (v16)
    {
      v11 = (const __CFString *)*MEMORY[0x24BDF9648];
      v12 = (const void **)MEMORY[0x24BDF9878];
      if ((a2 & 1) == 0)
        v12 = (const void **)MEMORY[0x24BDF9870];
      v13 = *v12;
      v14 = v16;
      VTSessionSetProperty(v14, v11, v13);
      VTPixelRotationSessionRotateImage(v14, a1, v10);
      VTPixelRotationSessionInvalidate(v14);

    }
    else
    {

      return 0;
    }
  }
  return v9;
}

CVPixelBufferRef static DKImageUtil.rotateCVPixelBuffer(buffer:cameraOrientation:cameraPort:)(__CVBuffer *a1, _BYTE *a2, _BYTE *a3)
{
  uint64_t v3;
  char v5;
  char v6;

  if (*a3 != 1)
  {
    switch(*a2)
    {
      case 1:
        v3 = 90;
        goto LABEL_15;
      case 2:
        v3 = -90;
        goto LABEL_15;
      case 3:
        v3 = 0;
        goto LABEL_15;
      case 4:
        v3 = 180;
LABEL_15:
        v5 = 0;
        v6 = 0;
        return _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(a1, v3, v5, v6);
      default:
        return 0;
    }
  }
  switch(*a2)
  {
    case 1:
      v3 = 90;
      break;
    case 2:
      v3 = -90;
      break;
    case 3:
      v3 = 0;
      v5 = 0;
      v6 = 1;
      return _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(a1, v3, v5, v6);
    case 4:
      v3 = 0;
      break;
    default:
      return 0;
  }
  v5 = 1;
  v6 = 0;
  return _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(a1, v3, v5, v6);
}

void static DKImageUtil.copyCVPixelBuffer(from:to:)(__CVBuffer *a1, __CVBuffer *a2)
{
  sub_2400B5594(a1, a2);
}

CVPixelBufferRef static DKImageUtil.copyCVPixelBuffer(_:)(__CVBuffer *a1)
{
  uint64_t v1;
  size_t Width;
  size_t Height;
  uint64_t inited;
  uint64_t v6;
  const __CFDictionary *v7;
  CVPixelBufferRef v8;
  __CVBuffer *v9;
  CVPixelBufferRef pixelBufferOut[2];

  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  pixelBufferOut[0] = 0;
  Width = CVPixelBufferGetWidth(a1);
  Height = CVPixelBufferGetHeight(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_QWORD *)(inited + 32) = sub_24015464C();
  *(_QWORD *)(inited + 40) = v6;
  *(_QWORD *)(inited + 48) = sub_240106084(MEMORY[0x24BEE4AF8]);
  sub_2401061A4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E8);
  v7 = (const __CFDictionary *)sub_240154544();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, Width, Height, 0x42475241u, v7, pixelBufferOut);

  v8 = pixelBufferOut[0];
  if (pixelBufferOut[0])
  {
    v9 = pixelBufferOut[0];
    sub_2400B5594(a1, v9);

    if (v1)
  }
  return v8;
}

uint64_t static DKImageUtil.sampleBufferFromPixelBufferAndTimestamp(time:buffer:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5;
  id v6;
  uint64_t v8;

  type metadata accessor for CMFormatDescription(0);
  v5 = a4;
  sub_24015452C();
  type metadata accessor for CMSampleBuffer(0);
  v6 = v5;
  sub_240154520();
  return v8;
}

uint64_t DKImageUtil.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DKImageUtil.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2400B48C4(const unsigned __int8 *a1, uint64_t a2, uint64_t a3, char **a4, char **a5, char **a6, int a7)
{
  const unsigned __int8 *v7;
  const float *v8;
  vDSP_Length v9;
  const float *v10;
  char **v11;
  char *v12;
  char *v13;
  char *v14;
  vDSP_Length v15;
  const unsigned __int8 *v17;
  char *v18;
  vDSP_Length v19;
  char *v20;
  vDSP_Length v21;
  char *v22;
  uint64_t result;
  _BYTE *v24;
  int v25;
  char **v26;
  char **v27;

  if ((a3 | a2) < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v15 = a3 * a2;
  if ((unsigned __int128)(a3 * (__int128)a2) >> 64 != (a3 * a2) >> 63)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = a1;
  if (!a1)
  {
    __break(1u);
    goto LABEL_27;
  }
  if ((v15 - 0x2000000000000000) >> 62 == 3)
  {
    if ((v15 & 0x8000000000000000) == 0)
    {
      v11 = a5;
      v26 = a4;
      v14 = *a4;
      v25 = a7;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v14 = sub_240077B80(0, *((_QWORD *)v14 + 2), 0, v14);
      v8 = (const float *)(v14 + 32);
      vDSP_vfltu8(v7, 4, (float *)v14 + 8, 1, v15);
      v13 = *v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v13 = sub_240077B80(0, *((_QWORD *)v13 + 2), 0, v13);
      v10 = (const float *)(v13 + 32);
      vDSP_vfltu8(v7 + 1, 4, (float *)v13 + 8, 1, v15);
      v27 = a6;
      v12 = *a6;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v12 = sub_240077B80(0, *((_QWORD *)v12 + 2), 0, v12);
      v17 = v7 + 2;
      v7 = (const unsigned __int8 *)(v12 + 32);
      vDSP_vfltu8(v17, 4, (float *)v12 + 8, 1, v15);
      v9 = *((_QWORD *)v14 + 2);
      swift_bridgeObjectRetain();
      v18 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
        goto LABEL_13;
      goto LABEL_25;
    }
LABEL_27:
    result = sub_240154CF4();
    __break(1u);
    return result;
  }
LABEL_24:
  __break(1u);
LABEL_25:
  v18 = sub_24014CD90((uint64_t)v14);
LABEL_13:
  vDSP_vsdiv(v8, 1, flt_251061B40, (float *)v18 + 8, 1, v9);
  *v26 = v18;
  swift_bridgeObjectRelease();
  v19 = *((_QWORD *)v13 + 2);
  swift_bridgeObjectRetain();
  v20 = v13;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v20 = sub_24014CD90((uint64_t)v13);
  vDSP_vsdiv(v10, 1, flt_251061B68, (float *)v20 + 8, 1, v19);
  *v11 = v20;
  swift_bridgeObjectRelease();
  v21 = *((_QWORD *)v12 + 2);
  swift_bridgeObjectRetain();
  v22 = v12;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v22 = sub_24014CD90((uint64_t)v12);
  vDSP_vsdiv((const float *)v7, 1, flt_251061B90, (float *)v22 + 8, 1, v21);
  *v27 = v22;
  result = swift_bridgeObjectRelease();
  if (v25)
  {
    if (v25 == 0x2000)
    {
      *v26 = v22;
      *v27 = v18;
    }
    else
    {
      sub_2400B5B48();
      swift_allocError();
      *v24 = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_2400B4BDC(__CVBuffer *a1, char **a2, char **a3, char **a4)
{
  _BYTE *v8;
  uint64_t result;
  const unsigned __int8 *BaseAddress;
  const unsigned __int8 *v11;
  size_t Height;
  uint64_t v13;
  size_t Width;
  uint64_t v15;
  _BYTE *v16;

  if (CVPixelBufferLockBaseAddress(a1, 1uLL))
  {
    sub_2400B5B48();
    swift_allocError();
    *v8 = 1;
    return swift_willThrow();
  }
  BaseAddress = (const unsigned __int8 *)CVPixelBufferGetBaseAddress(a1);
  if (!BaseAddress)
  {
    sub_2400B5B48();
    swift_allocError();
    *v16 = 2;
    swift_willThrow();
    return CVPixelBufferUnlockBaseAddress(a1, 1uLL);
  }
  v11 = BaseAddress;
  Height = CVPixelBufferGetHeight(a1);
  if ((Height & 0x8000000000000000) == 0)
  {
    v13 = Height;
    Width = CVPixelBufferGetWidth(a1);
    if ((Width & 0x8000000000000000) == 0)
    {
      v15 = Width;
      CVPixelBufferGetBytesPerRow(a1);
      sub_2400B48C4(v11, v13, v15, a2, a3, a4, 0x2000);
      return CVPixelBufferUnlockBaseAddress(a1, 1uLL);
    }
  }
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t _s23IntelligentTrackingCore11DKImageUtilC21pixelBufferToJpegFile6buffer3urlSSSgSo11CVBufferRefa_10Foundation3URLVSgtFZ_0(__CVBuffer *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  id v14;
  CGImageRef v15;
  uint64_t v16;
  CGImageRef imageOut[2];

  imageOut[1] = *(CGImageRef *)MEMORY[0x24BDAC8D0];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CB0);
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)imageOut - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)imageOut - v8;
  v10 = sub_2401541D8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)imageOut - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240076FB0(a2, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_240076FF8((uint64_t)v9);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
  imageOut[0] = 0;
  VTCreateCGImageFromCVPixelBuffer(a1, 0, imageOut);
  v15 = imageOut[0];

  if (!v15)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v13, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
  v16 = sub_2400768D0((uint64_t)v7, 80);

  sub_240076FF8((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v16;
}

void sub_2400B4F50(__CVBuffer *a1, __CVBuffer *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  const __CFString *v12;
  const void *v13;
  OpaqueVTPixelTransferSession *v14;
  const __CFString *v15;
  CGFloat v16;
  OpaqueVTPixelTransferSession *v17;
  CFDictionaryRef DictionaryRepresentation;
  VTPixelTransferSessionRef v19[2];
  CGRect v20;

  v19[1] = *(VTPixelTransferSessionRef *)MEMORY[0x24BDAC8D0];
  v19[0] = 0;
  VTPixelTransferSessionCreate(0, v19);
  if (v19[0])
  {
    v12 = (const __CFString *)*MEMORY[0x24BDF9668];
    if (*MEMORY[0x24BDF9668])
    {
      v13 = (const void *)*MEMORY[0x24BDBD270];
      v14 = v19[0];
      VTSessionSetProperty(v14, v12, v13);
      if (*MEMORY[0x24BDF9660])
      {
        VTSessionSetProperty(v14, (CFStringRef)*MEMORY[0x24BDF9660], (CFTypeRef)*MEMORY[0x24BDBD268]);
        VTSessionSetProperty(v14, (CFStringRef)*MEMORY[0x24BDF9680], (CFTypeRef)*MEMORY[0x24BDF98F0]);
        v15 = (const __CFString *)*MEMORY[0x24BDF9688];
        if (*MEMORY[0x24BDF9688])
        {
          v16 = (double)a3;
          v17 = v14;
          v20.origin.x = v16;
          v20.origin.y = (double)a4;
          v20.size.width = (double)a5;
          v20.size.height = (double)a6;
          DictionaryRepresentation = CGRectCreateDictionaryRepresentation(v20);
          VTSessionSetProperty(v17, v15, DictionaryRepresentation);

          VTPixelTransferSessionTransferImage(v17, a1, a2);
          VTPixelTransferSessionInvalidate(v17);

          return;
        }
LABEL_9:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_9;
  }
}

CVPixelBufferRef _s23IntelligentTrackingCore11DKImageUtilC19rotateCVPixelBuffer6buffer8rotation14horizontalFlip08verticalL0So11CVBufferRefaSgAJ_SiS2btFZ_0(CVPixelBufferRef pixelBuffer, uint64_t a2, char a3, char a4)
{
  size_t Height;
  size_t Width;
  uint64_t inited;
  uint64_t v11;
  const __CFDictionary *v12;
  CVPixelBufferRef v13;
  __CVBuffer *v14;
  VTPixelRotationSessionRef v15;
  const __CFString *v16;
  CFTypeRef *v17;
  OpaqueVTPixelRotationSession *v18;
  CFTypeRef *v19;
  VTPixelRotationSessionRef pixelRotationSessionOut;
  CVPixelBufferRef pixelBufferOut[2];

  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  pixelBufferOut[0] = 0;
  if (a2 == 90 || a2 == -90)
  {
    Height = CVPixelBufferGetHeight(pixelBuffer);
    Width = CVPixelBufferGetWidth(pixelBuffer);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E0);
  }
  else
  {
    Height = CVPixelBufferGetWidth(pixelBuffer);
    Width = CVPixelBufferGetHeight(pixelBuffer);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E0);
  }
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_QWORD *)(inited + 32) = sub_24015464C();
  *(_QWORD *)(inited + 40) = v11;
  *(_QWORD *)(inited + 48) = sub_240106084(MEMORY[0x24BEE4AF8]);
  sub_2401061A4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E8);
  v12 = (const __CFDictionary *)sub_240154544();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, Height, Width, 0x42475241u, v12, pixelBufferOut);

  v13 = pixelBufferOut[0];
  if (!pixelBufferOut[0])
    return v13;
  pixelRotationSessionOut = 0;
  v14 = pixelBufferOut[0];
  VTPixelRotationSessionCreate(0, &pixelRotationSessionOut);
  v15 = pixelRotationSessionOut;
  if (!pixelRotationSessionOut)
  {

    return 0;
  }
  if (a2 > 89)
  {
    if (a2 == 90)
    {
      v16 = (const __CFString *)*MEMORY[0x24BDF9648];
      v17 = (CFTypeRef *)MEMORY[0x24BDF9878];
      goto LABEL_18;
    }
    if (a2 == 180)
    {
      v16 = (const __CFString *)*MEMORY[0x24BDF9648];
      v17 = (CFTypeRef *)MEMORY[0x24BDF9868];
      goto LABEL_18;
    }
  }
  else
  {
    if (a2 == -90)
    {
      v16 = (const __CFString *)*MEMORY[0x24BDF9648];
      v17 = (CFTypeRef *)MEMORY[0x24BDF9870];
      goto LABEL_18;
    }
    if (!a2)
    {
      v16 = (const __CFString *)*MEMORY[0x24BDF9648];
      v17 = (CFTypeRef *)MEMORY[0x24BDF9860];
LABEL_18:
      VTSessionSetProperty(pixelRotationSessionOut, v16, *v17);
      goto LABEL_19;
    }
  }
  v18 = pixelRotationSessionOut;
LABEL_19:
  v19 = (CFTypeRef *)MEMORY[0x24BDBD270];
  if ((a3 & 1) != 0)
    VTSessionSetProperty(v15, (CFStringRef)*MEMORY[0x24BDF9638], (CFTypeRef)*MEMORY[0x24BDBD270]);
  if ((a4 & 1) != 0)
    VTSessionSetProperty(v15, (CFStringRef)*MEMORY[0x24BDF9640], *v19);
  VTPixelRotationSessionRotateImage(v15, pixelBuffer, v14);
  VTPixelRotationSessionInvalidate(v15);

  return v13;
}

CVPixelBufferRef _s23IntelligentTrackingCore11DKImageUtilC19createCVPixelBuffer4from7contextSo11CVBufferRefaSgSo7CIImageC_So9CIContextCtFZ_0(void *a1, void *a2)
{
  double Width;
  double Height;
  size_t v6;
  uint64_t inited;
  uint64_t v8;
  const __CFDictionary *v9;
  CVPixelBufferRef v10;
  CVPixelBufferRef pixelBufferOut[2];
  CGRect v13;
  CGRect v14;

  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  pixelBufferOut[0] = 0;
  objc_msgSend(a1, sel_extent);
  Width = CGRectGetWidth(v13);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  objc_msgSend(a1, sel_extent);
  Height = CGRectGetHeight(v14);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
  }
  if (Height >= 9.22337204e18)
    goto LABEL_15;
  v6 = (uint64_t)Height;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_QWORD *)(inited + 32) = sub_24015464C();
  *(_QWORD *)(inited + 40) = v8;
  *(_QWORD *)(inited + 48) = sub_240106084(MEMORY[0x24BEE4AF8]);
  sub_2401061A4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E8);
  v9 = (const __CFDictionary *)sub_240154544();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, (uint64_t)Width, v6, 0x42475241u, v9, pixelBufferOut);

  v10 = pixelBufferOut[0];
  if (pixelBufferOut[0])
    objc_msgSend(a2, sel_render_toCVPixelBuffer_, a1, pixelBufferOut[0]);
  return v10;
}

void sub_2400B5594(__CVBuffer *a1, __CVBuffer *a2)
{
  OpaqueVTPixelTransferSession *v4;
  uint64_t v5;
  VTPixelTransferSessionRef v6[2];

  v6[1] = *(VTPixelTransferSessionRef *)MEMORY[0x24BDAC8D0];
  v6[0] = 0;
  VTPixelTransferSessionCreate(0, v6);
  if (v6[0])
  {
    v4 = v6[0];
    VTPixelTransferSessionTransferImage(v4, a1, a2);
    VTPixelTransferSessionInvalidate(v4);

  }
  else
  {
    sub_240080040();
    swift_allocError();
    *(_QWORD *)v5 = 0xD000000000000023;
    *(_QWORD *)(v5 + 8) = 0x8000000240163600;
    *(_BYTE *)(v5 + 16) = 0;
    swift_willThrow();

  }
}

CVPixelBufferRef _s23IntelligentTrackingCore11DKImageUtilC19pixelBufferFromFile3urlSo11CVBufferRefaSg10Foundation3URLV_tFZ_0()
{
  CVPixelBufferRef v0;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  id v5;
  void *v6;
  id v7;
  double Width;
  double Height;
  size_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  const __CFDictionary *v14;
  id v15;
  __CVBuffer *v16;
  id v17;
  uint64_t v18;
  CVPixelBufferRef pixelBufferOut[2];
  CGRect v20;
  CGRect v21;

  pixelBufferOut[1] = *(CVPixelBufferRef *)MEMORY[0x24BDAC8D0];
  v2 = sub_2401541F0();
  v4 = v3;
  v5 = objc_allocWithZone(MEMORY[0x24BDBF660]);
  sub_2400B5B04(v2, v4);
  v6 = (void *)sub_240154238();
  v7 = objc_msgSend(v5, sel_initWithData_, v6);
  sub_240075D14(v2, v4);

  if (!v7)
  {
    sub_240075D14(v2, v4);
    return 0;
  }
  pixelBufferOut[0] = 0;
  objc_msgSend(v7, sel_extent);
  Width = CGRectGetWidth(v20);
  if ((~*(_QWORD *)&Width & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (Width <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (Width >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v7, sel_extent);
  Height = CGRectGetHeight(v21);
  if ((~*(_QWORD *)&Height & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (Height <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  if (Height >= 9.22337204e18)
    goto LABEL_20;
  v10 = (uint64_t)Height;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_240156510;
  *(_QWORD *)(inited + 32) = sub_24015464C();
  *(_QWORD *)(inited + 40) = v12;
  *(_QWORD *)(inited + 48) = sub_240106084(MEMORY[0x24BEE4AF8]);
  sub_2401061A4(inited);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB86E8);
  v13 = MEMORY[0x24BEE0D00];
  v14 = (const __CFDictionary *)sub_240154544();
  swift_bridgeObjectRelease();
  CVPixelBufferCreate(0, (uint64_t)Width, v10, 0x42475241u, v14, pixelBufferOut);

  v0 = pixelBufferOut[0];
  if (pixelBufferOut[0])
  {
    v15 = objc_allocWithZone(MEMORY[0x24BDBF648]);
    v16 = v0;
    v17 = objc_msgSend(v15, sel_init);
    objc_msgSend(v17, sel_render_toCVPixelBuffer_, v7, v16);
    sub_240075D14(v2, v4);

    return v0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC0);
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_240156510;
  *(_QWORD *)(v18 + 56) = v13;
  *(_QWORD *)(v18 + 32) = 0xD000000000000025;
  *(_QWORD *)(v18 + 40) = 0x80000002401635D0;
  sub_240154FD0();
  sub_240075D14(v2, v4);
  swift_bridgeObjectRelease();

  return 0;
}

unint64_t sub_2400B59C8()
{
  unint64_t result;

  result = qword_256FB86F0;
  if (!qword_256FB86F0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKImageUtil.Errors, &type metadata for DKImageUtil.Errors);
    atomic_store(result, (unint64_t *)&qword_256FB86F0);
  }
  return result;
}

uint64_t type metadata accessor for DKImageUtil()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKImageUtil()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for DKImageUtil.Errors(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2400B5A84 + 4 * byte_240158E0D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2400B5AB8 + 4 * byte_240158E08[v4]))();
}

uint64_t sub_2400B5AB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B5AC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400B5AC8);
  return result;
}

uint64_t sub_2400B5AD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400B5ADCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2400B5AE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400B5AE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKImageUtil.Errors()
{
  return &type metadata for DKImageUtil.Errors;
}

uint64_t sub_2400B5B04(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_2400B5B48()
{
  unint64_t result;

  result = qword_256FB8790;
  if (!qword_256FB8790)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKImageUtil.Errors, &type metadata for DKImageUtil.Errors);
    atomic_store(result, (unint64_t *)&qword_256FB8790);
  }
  return result;
}

void sub_2400B5B8C()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  char v9;
  double v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  int64_t v17;
  double v18;
  BOOL v19;

  v1 = 0;
  v2 = *(_QWORD *)(v0 + 16);
  v4 = v2 + 64;
  v3 = *(_QWORD *)(v2 + 64);
  v5 = -1;
  v6 = -1 << *(_BYTE *)(v2 + 32);
  if (-v6 < 64)
    v5 = ~(-1 << -(char)v6);
  v7 = v5 & v3;
  v8 = (unint64_t)(63 - v6) >> 6;
  v9 = 1;
  v10 = 0.0;
  if ((v5 & v3) == 0)
    goto LABEL_7;
LABEL_4:
  v11 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v12 = v11 | (v1 << 6);
  while (1)
  {
    v13 = *(_QWORD *)(*(_QWORD *)(v2 + 56) + 8 * v12);
    if (*(_BYTE *)(v13 + 33) == 1)
    {
      if (*(_BYTE *)(v13 + 32) == 1)
        v18 = atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56));
      else
        v18 = *(double *)(v13 + 40);
      v19 = v10 >= v18;
      if (v10 < v18)
        v10 = v18;
      v9 &= v19;
      if (v7)
        goto LABEL_4;
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    v14 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v14 >= v8)
      goto LABEL_28;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    v16 = v1 + 1;
    if (!v15)
    {
      v16 = v1 + 2;
      if (v1 + 2 >= v8)
        goto LABEL_28;
      v15 = *(_QWORD *)(v4 + 8 * v16);
      if (!v15)
      {
        v16 = v1 + 3;
        if (v1 + 3 >= v8)
          goto LABEL_28;
        v15 = *(_QWORD *)(v4 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v7 = (v15 - 1) & v15;
    v12 = __clz(__rbit64(v15)) + (v16 << 6);
    v1 = v16;
  }
  v17 = v1 + 4;
  if (v1 + 4 >= v8)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    sub_24008FD1C();
    return;
  }
  v15 = *(_QWORD *)(v4 + 8 * v17);
  if (v15)
  {
    v16 = v1 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v8)
      goto LABEL_28;
    v15 = *(_QWORD *)(v4 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_20;
  }
LABEL_30:
  __break(1u);
}

void sub_2400B5D98(double a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  double v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  char v23;
  double v24;

  v6 = 0;
  v7 = *(_QWORD *)(v3 + 16);
  v9 = v7 + 64;
  v8 = *(_QWORD *)(v7 + 64);
  v10 = -1;
  v11 = -1 << *(_BYTE *)(v7 + 32);
  if (-v11 < 64)
    v10 = ~(-1 << -(char)v11);
  v12 = v10 & v8;
  v13 = (unint64_t)(63 - v11) >> 6;
  v14 = 4;
  v15 = 0.0;
  if ((v10 & v8) == 0)
    goto LABEL_7;
LABEL_4:
  v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v17 = v16 | (v6 << 6);
  while (1)
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17);
    if (*(_BYTE *)(v18 + 33) == 1)
    {
      v23 = *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17);
      if (*(_BYTE *)(v18 + 32) == 1)
        v24 = atan2(*(long double *)(v18 + 48), *(long double *)(v18 + 56));
      else
        v24 = *(double *)(v18 + 40);
      if (v15 < v24)
      {
        v15 = v24;
        v14 = v23;
      }
      if (v12)
        goto LABEL_4;
    }
    else if (v12)
    {
      goto LABEL_4;
    }
LABEL_7:
    v19 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return;
    }
    if (v19 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v9 + 8 * v19);
    v21 = v6 + 1;
    if (!v20)
    {
      v21 = v6 + 2;
      if (v6 + 2 >= v13)
        goto LABEL_28;
      v20 = *(_QWORD *)(v9 + 8 * v21);
      if (!v20)
      {
        v21 = v6 + 3;
        if (v6 + 3 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v9 + 8 * v21);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v12 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v21 << 6);
    v6 = v21;
  }
  v22 = v6 + 4;
  if (v6 + 4 < v13)
  {
    v20 = *(_QWORD *)(v9 + 8 * v22);
    if (!v20)
    {
      while (1)
      {
        v21 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_34;
        if (v21 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v9 + 8 * v21);
        ++v22;
        if (v20)
          goto LABEL_20;
      }
    }
    v21 = v6 + 4;
    goto LABEL_20;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  sub_24008FD1C();
  if (v14 == 4 || (a2 & 1) == 0 && v15 <= a1)
  {
    *(_OWORD *)a3 = xmmword_240158F00;
  }
  else
  {
    *(_BYTE *)a3 = v14;
    *(double *)(a3 + 8) = v15;
  }
}

void sub_2400B5F90(double a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  char v14;
  double v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  int64_t v22;
  char v23;
  double v24;

  v6 = 0;
  v7 = *(_QWORD *)(v3 + 16);
  v9 = v7 + 64;
  v8 = *(_QWORD *)(v7 + 64);
  v10 = -1;
  v11 = -1 << *(_BYTE *)(v7 + 32);
  if (-v11 < 64)
    v10 = ~(-1 << -(char)v11);
  v12 = v10 & v8;
  v13 = (unint64_t)(63 - v11) >> 6;
  v14 = 3;
  v15 = 0.0;
  if ((v10 & v8) == 0)
    goto LABEL_7;
LABEL_4:
  v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  v17 = v16 | (v6 << 6);
  while (1)
  {
    v18 = *(_QWORD *)(*(_QWORD *)(v7 + 56) + 8 * v17);
    if (*(_BYTE *)(v18 + 33) == 1)
    {
      v23 = *(_BYTE *)(*(_QWORD *)(v7 + 48) + v17);
      if (*(_BYTE *)(v18 + 32) == 1)
        v24 = atan2(*(long double *)(v18 + 48), *(long double *)(v18 + 56));
      else
        v24 = *(double *)(v18 + 40);
      if (v15 < v24)
      {
        v15 = v24;
        v14 = v23;
      }
      if (v12)
        goto LABEL_4;
    }
    else if (v12)
    {
      goto LABEL_4;
    }
LABEL_7:
    v19 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return;
    }
    if (v19 >= v13)
      goto LABEL_28;
    v20 = *(_QWORD *)(v9 + 8 * v19);
    v21 = v6 + 1;
    if (!v20)
    {
      v21 = v6 + 2;
      if (v6 + 2 >= v13)
        goto LABEL_28;
      v20 = *(_QWORD *)(v9 + 8 * v21);
      if (!v20)
      {
        v21 = v6 + 3;
        if (v6 + 3 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v9 + 8 * v21);
        if (!v20)
          break;
      }
    }
LABEL_20:
    v12 = (v20 - 1) & v20;
    v17 = __clz(__rbit64(v20)) + (v21 << 6);
    v6 = v21;
  }
  v22 = v6 + 4;
  if (v6 + 4 < v13)
  {
    v20 = *(_QWORD *)(v9 + 8 * v22);
    if (!v20)
    {
      while (1)
      {
        v21 = v22 + 1;
        if (__OFADD__(v22, 1))
          goto LABEL_34;
        if (v21 >= v13)
          goto LABEL_28;
        v20 = *(_QWORD *)(v9 + 8 * v21);
        ++v22;
        if (v20)
          goto LABEL_20;
      }
    }
    v21 = v6 + 4;
    goto LABEL_20;
  }
LABEL_28:
  swift_bridgeObjectRetain();
  sub_24008FD1C();
  if (v14 == 3 || (a2 & 1) == 0 && v15 <= a1)
  {
    *(_OWORD *)a3 = xmmword_240158F10;
  }
  else
  {
    *(_BYTE *)a3 = v14;
    *(double *)(a3 + 8) = v15;
  }
}

void sub_2400B6184(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 32) = a1;
}

void sub_2400B618C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 40) = a1;
}

double sub_2400B6194()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void sub_2400B619C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 48) = a1;
}

uint64_t sub_2400B61A4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 80);
}

uint64_t sub_2400B61AC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

double sub_2400B61B4()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

void sub_2400B61BC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 88) = a1;
}

uint64_t (*sub_2400B61C4())()
{
  return nullsub_1;
}

double sub_2400B61D4()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

void sub_2400B61DC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 96) = a1;
}

double sub_2400B61E4()
{
  uint64_t v0;

  return *(double *)(v0 + 104);
}

void sub_2400B61EC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 104) = a1;
}

uint64_t (*sub_2400B61F4())()
{
  return nullsub_1;
}

uint64_t sub_2400B6204()
{
  return swift_retain();
}

uint64_t sub_2400B620C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 112) = a1;
  return swift_release();
}

uint64_t sub_2400B621C()
{
  return swift_retain();
}

uint64_t sub_2400B6224(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  return swift_release();
}

uint64_t (*sub_2400B6234())()
{
  return nullsub_1;
}

uint64_t sub_2400B6244()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 136);
}

uint64_t sub_2400B624C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 136) = result;
  return result;
}

double sub_2400B6254()
{
  uint64_t v0;

  return *(double *)(v0 + 144);
}

void sub_2400B625C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 144) = a1;
}

uint64_t (*sub_2400B6264())()
{
  return nullsub_1;
}

uint64_t sub_2400B6274()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 152);
}

uint64_t sub_2400B627C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 152) = result;
  return result;
}

double sub_2400B6284()
{
  uint64_t v0;

  return *(double *)(v0 + 160);
}

void sub_2400B628C(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 160) = a1;
}

uint64_t (*sub_2400B6294())()
{
  return nullsub_1;
}

double sub_2400B62A4()
{
  uint64_t v0;

  return *(double *)(v0 + 168);
}

void sub_2400B62AC(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 168) = a1;
}

uint64_t (*sub_2400B62B4())()
{
  return nullsub_1;
}

uint64_t DKTrackerConfiguration.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  DKTrackerConfiguration.init()();
  return v0;
}

uint64_t DKTrackerConfiguration.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  char isUniquelyReferenced_nonNull_native;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_OWORD *)(v0 + 88) = xmmword_240158F20;
  *(_QWORD *)(v0 + 104) = 0x3FD0000000000000;
  *(_OWORD *)(v0 + 16) = xmmword_240158F30;
  *(_OWORD *)(v0 + 32) = xmmword_240158F40;
  *(_OWORD *)(v0 + 48) = xmmword_240158F50;
  *(_QWORD *)(v0 + 64) = 0x4000000000000000;
  *(_OWORD *)(v0 + 72) = xmmword_240158F60;
  type metadata accessor for DKConstantAccelerationFilter.Configuration();
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 56) = xmmword_240158F70;
  *(_OWORD *)(v1 + 16) = xmmword_240158F80;
  *(_BYTE *)(v1 + 32) = 0;
  v2 = MEMORY[0x24BEE4B00];
  v3 = MEMORY[0x24BEE4B08];
  *(_QWORD *)(v1 + 40) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v1 + 48) = v3;
  v4 = (_QWORD *)sub_2400727D0((uint64_t)&unk_251061C68);
  swift_retain();
  swift_release();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = v4[5];
  v4[5] = 0x8000000000000000;
  sub_240071EF0(0xC000000000000000, 0, 0x4000000000000000, 0, 1, isUniquelyReferenced_nonNull_native);
  v4[5] = v17;
  swift_bridgeObjectRelease();
  v6 = swift_isUniquelyReferenced_nonNull_native();
  v18 = v4[5];
  v4[5] = 0x8000000000000000;
  sub_240071EF0(0xBFF0000000000000, 0, 0x3FF0000000000000, 0, 2, v6);
  v4[5] = v18;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 112) = v4;
  v4[8] = 0xBFF0000000000000;
  v4[7] = *(_QWORD *)(v0 + 104);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 56) = xmmword_240158F70;
  *(_OWORD *)(v7 + 16) = xmmword_240158F80;
  *(_BYTE *)(v7 + 32) = 0;
  *(_QWORD *)(v7 + 40) = v2;
  *(_QWORD *)(v7 + 48) = v3;
  v8 = sub_2400727D0((uint64_t)&unk_251061C90);
  swift_retain();
  swift_release();
  v9 = swift_isUniquelyReferenced_nonNull_native();
  v19 = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0x8000000000000000;
  sub_240071EF0(0xC000000000000000, 0, 0x4000000000000000, 0, 1, v9);
  *(_QWORD *)(v8 + 40) = v19;
  swift_bridgeObjectRelease();
  v10 = swift_isUniquelyReferenced_nonNull_native();
  v20 = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0x8000000000000000;
  sub_240071EF0(0xBFF7BC89CF95B8D0, 0, 0x3FF7BC89CF95B8D0, 0, 0, v10);
  *(_QWORD *)(v8 + 40) = v20;
  swift_bridgeObjectRelease();
  v11 = swift_isUniquelyReferenced_nonNull_native();
  v21 = *(_QWORD *)(v8 + 40);
  *(_QWORD *)(v8 + 40) = 0x8000000000000000;
  sub_240071EF0(0xBFF0000000000000, 0, 0x3FF0000000000000, 0, 2, v11);
  *(_QWORD *)(v8 + 40) = v21;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 120) = v8;
  *(_OWORD *)(v8 + 56) = xmmword_240158F90;
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 56) = xmmword_240158F70;
  *(_OWORD *)(v12 + 16) = xmmword_240158F80;
  *(_BYTE *)(v12 + 32) = 0;
  *(_QWORD *)(v12 + 48) = v3;
  v13 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v12 + 40) = 0x8000000000000000;
  sub_240071EF0(0x3FB999999999999ALL, 0, 0x4024000000000000, 0, 0, v13);
  swift_bridgeObjectRelease();
  v14 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v12 + 40) = 0x8000000000000000;
  sub_240071EF0(0xBFF0000000000000, 0, 0x3FF0000000000000, 0, 1, v14);
  swift_bridgeObjectRelease();
  v15 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v12 + 40) = 0x8000000000000000;
  sub_240071EF0(0xBFF0000000000000, 0, 0x3FF0000000000000, 0, 2, v15);
  *(_QWORD *)(v12 + 40) = v2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 128) = v12;
  *(_OWORD *)(v12 + 56) = xmmword_240158F90;
  *(_BYTE *)(v0 + 136) = 0;
  *(_QWORD *)(v0 + 144) = 0x4014000000000000;
  *(_QWORD *)(v0 + 152) = 5;
  *(_OWORD *)(v0 + 160) = xmmword_240158FA0;
  return v0;
}

uint64_t DKTrackerConfiguration.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_2400B8C64(a1);
  swift_release();
  return v2;
}

uint64_t DKTrackerConfiguration.init(configuration:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_2400B8C64(a1);
  swift_release();
  return v1;
}

uint64_t DKTrackerConfiguration.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t DKTrackerBase.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&qword_256FC4858, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400B6810()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_256FC4860);
}

uint64_t sub_2400B6820(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_256FC4860) = result;
  return result;
}

uint64_t (*sub_2400B6830())()
{
  return nullsub_1;
}

double sub_2400B6848@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + qword_256FC4868 + 8);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + qword_256FC4868);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400B6868(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = v1 + qword_256FC4868;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400B6888())()
{
  return nullsub_1;
}

uint64_t sub_2400B68A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_256FC4870);
}

uint64_t sub_2400B68B0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_256FC4870) = result;
  return result;
}

uint64_t (*sub_2400B68C0())()
{
  return nullsub_1;
}

uint64_t sub_2400B68D8@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&qword_256FC4878, (uint64_t (*)(_QWORD))MEMORY[0x24BEE78D8], a1);
}

uint64_t sub_2400B68EC(uint64_t a1)
{
  return sub_2400B6A88(a1, &qword_256FC4878, (uint64_t (*)(_QWORD))MEMORY[0x24BEE78D8]);
}

uint64_t (*sub_2400B6900())()
{
  return nullsub_1;
}

uint64_t sub_2400B6918()
{
  sub_2400B8D40();
  return swift_retain();
}

uint64_t sub_2400B692C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_256FC4880) = a1;
  return swift_release();
}

uint64_t (*sub_2400B6944())()
{
  return nullsub_1;
}

uint64_t sub_2400B695C()
{
  sub_2400B8D50();
  return swift_retain();
}

uint64_t sub_2400B6970(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_256FC4888) = a1;
  return swift_release();
}

uint64_t (*sub_2400B6988())()
{
  return nullsub_1;
}

uint64_t sub_2400B69A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), uint64_t (*a6)(char *))
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  a5(0);
  MEMORY[0x24BDAC7A8]();
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_2400B6A20@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&qword_256FC4890, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400B6A34@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *a1;
  v6 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
}

uint64_t sub_2400B6A74(uint64_t a1)
{
  return sub_2400B6A88(a1, &qword_256FC4890, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_2400B6A88(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  v5 = v3 + *a2;
  v6 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(v5, a1, v6);
}

uint64_t (*sub_2400B6AC8())()
{
  return nullsub_1;
}

uint64_t sub_2400B6AE0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + qword_256FC4898);
}

uint64_t sub_2400B6AF0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_256FC4898) = result;
  return result;
}

uint64_t (*sub_2400B6B00())()
{
  return nullsub_1;
}

uint64_t sub_2400B6B18()
{
  sub_2400B8D60();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400B6B2C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + qword_256FC48A0) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400B6B44())()
{
  return nullsub_1;
}

uint64_t sub_2400B6B5C(uint64_t a1)
{
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v2 = sub_240154A30();
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - v4;
  (*(void (**)(char *, uint64_t, double))(v6 + 16))((char *)&v8 - v4, a1, v3);
  return sub_2400B6C28((uint64_t)v5);
}

uint64_t sub_2400B6BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 200);
  v4 = sub_240154A30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_2400B6C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 200);
  v4 = sub_240154A30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*sub_2400B6C70())()
{
  return nullsub_1;
}

uint64_t sub_2400B6C88()
{
  sub_2400B8D70();
  return swift_retain();
}

uint64_t sub_2400B6C9C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 208)) = a1;
  return swift_release();
}

uint64_t (*sub_2400B6CB4())()
{
  return nullsub_1;
}

uint64_t sub_2400B6CCC()
{
  sub_2400B80A4();
  return swift_retain();
}

uint64_t sub_2400B6CE0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 216)) = a1;
  return swift_release();
}

uint64_t (*sub_2400B6CF8())()
{
  return nullsub_1;
}

uint64_t sub_2400B6D10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240071030(a1, (uint64_t)v4);
  return sub_2400B6D9C((uint64_t)v4);
}

uint64_t sub_2400B6D88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240071030(v1 + *(_QWORD *)(*(_QWORD *)v1 + 224), a1);
}

uint64_t sub_2400B6D9C(uint64_t a1)
{
  uint64_t v1;

  return sub_2400A0E30(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 224));
}

uint64_t (*sub_2400B6DAC())()
{
  return nullsub_1;
}

uint64_t sub_2400B6DC4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2400B8D80(a1, (uint64_t)v4);
  return sub_2400B6E54((uint64_t)v4);
}

uint64_t sub_2400B6E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2400B8D80(v1 + *(_QWORD *)(*(_QWORD *)v1 + 232), a1);
}

uint64_t sub_2400B6E54(uint64_t a1)
{
  uint64_t v1;

  return sub_24009C218(a1, v1 + *(_QWORD *)(*(_QWORD *)v1 + 232), &qword_256FB65E8);
}

uint64_t sub_2400B6E7C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 240));
}

uint64_t sub_2400B6E8C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 240)) = result;
  return result;
}

uint64_t (*sub_2400B6E9C())()
{
  return nullsub_1;
}

uint64_t DKTrackerBase.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;

  v12 = swift_allocObject();
  DKTrackerBase.init(time:configuration:uuid:trackerId:anstId:camera:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

char *DKTrackerBase.init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char *v6;
  char *v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double v31;
  double v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v7 = v6;
  v39 = a6;
  v40 = a5;
  v43 = a1;
  v11 = *(_QWORD *)v6;
  v12 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = sub_240154310();
  v15 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = &v6[qword_256FC4868];
  *(_QWORD *)v18 = -1;
  *((_QWORD *)v18 + 1) = 0;
  *(_QWORD *)&v6[qword_256FC4870] = -1;
  sub_2401544B4();
  v19 = qword_256FC4880;
  type metadata accessor for DKBoundingBoxFilter();
  swift_allocObject();
  *(_QWORD *)&v6[v19] = DKBoundingBoxFilter.init(alpha:)(0.9);
  sub_240154274();
  v6[qword_256FC4898] = 0;
  v20 = qword_256FC48A0;
  v21 = *(_QWORD *)(v11 + 80);
  sub_240154A30();
  *(_QWORD *)&v7[v20] = sub_240154538();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(&v7[*(_QWORD *)(*(_QWORD *)v7 + 200)], 1, 1, v21);
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 216)] = 0;
  v22 = &v7[*(_QWORD *)(*(_QWORD *)v7 + 232)];
  v23 = type metadata accessor for DKPersonGroupFilter.Track(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
  v7[*(_QWORD *)(*(_QWORD *)v7 + 240)] = 0;
  *(_QWORD *)&v7[qword_256FC4888] = a2;
  *(_QWORD *)&v7[qword_256FC4860] = a4;
  v24 = &v7[qword_256FC4858];
  v25 = sub_24015434C();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v41 = a3;
  v28 = a3;
  v29 = v39;
  v27(v24, v28, v25);
  *(_QWORD *)&v7[qword_256FC4870] = v40;
  v30 = sub_240071030(v29, (uint64_t)&v7[*(_QWORD *)(*(_QWORD *)v7 + 224)]);
  v31 = (*(double (**)(uint64_t))(*a2 + 240))(v30);
  v32 = (*(double (**)(void))(*a2 + 264))();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8798);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 208)] = sub_2400B80B4(MEMORY[0x24BEE4AF8], v31, v32);
  if (((*(uint64_t (**)(void))(*a2 + 600))() & 1) != 0)
  {
    v33 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    v34 = v43;
    v40 = v15;
    v35 = v42;
    v33(v17, v43, v42);
    sub_240071030(v29, (uint64_t)v14);
    type metadata accessor for DKSphericalMotionFilter(0);
    swift_allocObject();
    v36 = sub_240116BE0((uint64_t)v17, a2, (uint64_t)v14);
    swift_release();
    sub_240070B3C(v29);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v41, v25);
    (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v34, v35);
    *(_QWORD *)&v7[*(_QWORD *)(*(_QWORD *)v7 + 216)] = v36;
    swift_release();
  }
  else
  {
    swift_release();
    sub_240070B3C(v29);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v41, v25);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v43, v42);
  }
  return v7;
}

BOOL sub_2400B72FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  uint64_t v4;
  char *v5;
  int v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = sub_240154310();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x24BDAC7A8](v1);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(unsigned __int8 *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 240));
  (*(void (**)(char *, uint64_t, uint64_t, double))(v2 + 16))(v5, v0 + qword_256FC4890, v1, v3);
  sub_24015428C();
  v8 = v7;
  v9 = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  v10 = 360;
  if (v6)
    v10 = 384;
  return (*(double (**)(uint64_t))(**(_QWORD **)(v0 + qword_256FC4888) + v10))(v9) < v8;
}

BOOL sub_2400B73E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = sub_240154A30();
  v2 = swift_bridgeObjectRetain();
  v3 = MEMORY[0x24267D168](v2, v1);
  v4 = swift_bridgeObjectRelease();
  return v3 >= (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v0 + qword_256FC4888) + 432))(v4);
}

uint64_t sub_2400B7460@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 88) - 8)
                                                              + 56))(a1, 1, 1);
}

uint64_t sub_2400B7480()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400B7490(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  v5 = sub_240154A30();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v19 - v8;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16))((char *)&v19 - v8, a2, v5, v7);
  v10 = sub_240154844();
  sub_24015482C();
  v11 = swift_bridgeObjectRetain();
  v12 = MEMORY[0x24267D168](v11, v5);
  v13 = swift_bridgeObjectRelease();
  result = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v3 + qword_256FC4888) + 408))(v13);
  if (result < v12)
  {
    v15 = MEMORY[0x24BEE12E8];
    do
    {
      MEMORY[0x24267E0BC](v15, v10);
      sub_240154928();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      v16 = swift_bridgeObjectRetain();
      v17 = MEMORY[0x24267D168](v16, v5);
      v18 = swift_bridgeObjectRelease();
      result = (*(uint64_t (**)(uint64_t))(**(_QWORD **)(v3 + qword_256FC4888) + 408))(v18);
    }
    while (result < v17);
  }
  return result;
}

uint64_t sub_2400B7610(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t result;
  _QWORD *v13;

  v2 = v1;
  v4 = a1[2];
  swift_retain();
  if (v4)
    v5 = a1;
  else
    v5 = &unk_251062540;
  sub_24008FBE4((uint64_t)v5);
  swift_release();
  swift_retain();
  sub_2400B5B8C();
  v7 = v6;
  v9 = v8;
  v11 = v10;
  result = swift_release();
  if ((v11 & 1) == 0)
  {
    v13 = (_QWORD *)(v2 + qword_256FC4868);
    *v13 = v7;
    v13[1] = v9;
  }
  return result;
}

uint64_t sub_2400B76C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240071030(a1, (uint64_t)v5);
  result = sub_2400A0E30((uint64_t)v5, v1 + *(_QWORD *)(*(_QWORD *)v1 + 224));
  v7 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 216));
  if (v7)
  {
    v8 = v7 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_camera;
    swift_retain();
    sub_240070B3C(v8);
    sub_240071030(a1, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_2400B7784(char *a1, void (*a2)(char *, _QWORD, uint64_t, uint64_t))
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  double v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  char *v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  CGFloat v34;
  CGFloat v35;
  CGFloat v36;
  CGFloat v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, _QWORD, uint64_t, uint64_t);
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)(uint64_t, uint64_t);
  char v64;
  unsigned __int8 *v65;
  double v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  void (*v79)(uint64_t, uint64_t);
  char *v80;
  unsigned __int8 *v81;
  void (*v82)(char *, char *, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  void (*v89)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;

  v3 = v2;
  v88 = a1;
  v89 = a2;
  v4 = *v2;
  v5 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v8);
  v87 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_240154310();
  v90 = *(_QWORD *)(v10 - 8);
  v91 = v10;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v85 = v4;
  v86 = (char *)&v78 - v14;
  v15 = *(_QWORD *)(v4 + 80);
  v16 = sub_240154A30();
  v17 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v19 = (char *)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v78 - v21;
  v23 = *(_QWORD *)(v15 - 8);
  v25 = MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void (*)(char *, _QWORD, uint64_t, uint64_t), uint64_t, double))(v17 + 16))(v22, v89, v16, v25);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v22, 1, v15) == 1)
  {
    v28 = *(void (**)(char *, uint64_t))(v17 + 8);
    v28(v22, v16);
    *((_BYTE *)v3 + qword_256FC4898) = 0;
    v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v19, 1, 1, v15);
    sub_2400B7490(v29, (uint64_t)v19);
    return ((uint64_t (*)(char *, uint64_t))v28)(v19, v16);
  }
  else
  {
    v80 = v12;
    v81 = (unsigned __int8 *)v7;
    v83 = v17;
    v84 = v16;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v27, v22, v15);
    *((_BYTE *)v3 + qword_256FC4898) = 1;
    v31 = v19;
    v32 = *(_QWORD *)(v85 + 104);
    v33 = *(void (**)(uint64_t, uint64_t))(v32 + 64);
    swift_retain();
    v79 = v33;
    v34 = ((double (*)(uint64_t, uint64_t))v33)(v15, v32);
    sub_240147D8C(v34, v35, v36, v37);
    swift_release();
    v38 = (_QWORD *)(*(uint64_t (**)(uint64_t, uint64_t))(v32 + 88))(v15, v32);
    sub_2400B7610(v38);
    swift_bridgeObjectRelease();
    v40 = v90;
    v39 = v91;
    v41 = v86;
    v78 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
    v78(v86, v88, v91);
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 40))((uint64_t)v3 + qword_256FC4890, v41, v39);
    v82 = *(void (**)(char *, char *, uint64_t))(v23 + 16);
    v82(v31, v27, v15);
    v85 = v23;
    v89 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56);
    v89(v31, 0, 1, v15);
    v42 = (char *)v3 + *(_QWORD *)(*v3 + 200);
    v43 = sub_240154A30();
    v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 40);
    v86 = v31;
    v44(v42, v31, v43);
    v45 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 136))(v15, v32);
    LOBYTE(v41) = v46;
    v47 = (char *)v3 + qword_256FC4858;
    v48 = type metadata accessor for DKPersonGroupFilter.Track(0);
    v49 = (uint64_t)v87;
    v50 = &v87[*(int *)(v48 + 20)];
    v51 = sub_24015434C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v50, v47, v51);
    v52 = *(_QWORD *)((char *)v3 + qword_256FC4868);
    *(_QWORD *)v49 = v45;
    *(_BYTE *)(v49 + 8) = v41 & 1;
    *(_QWORD *)(v49 + *(int *)(v48 + 24)) = v52;
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v49, 0, 1, v48);
    sub_24009C218(v49, (uint64_t)v3 + *(_QWORD *)(*v3 + 232), &qword_256FB65E8);
    v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 112))(v15, v32);
    v54 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v89;
    if ((v55 & 1) != 0)
      v56 = -1;
    else
      v56 = v53;
    *(_QWORD *)((char *)v3 + qword_256FC4870) = v56;
    v57 = *(char **)((char *)v3 + *(_QWORD *)(*v3 + 216));
    if (v57)
    {
      v58 = v80;
      v59 = v91;
      v78(v80, v88, v91);
      type metadata accessor for DKSphericalMotionFilter.Measurement(0);
      v60 = swift_allocObject();
      v61 = v60 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_rect;
      *(_OWORD *)v61 = 0u;
      *(_OWORD *)(v61 + 16) = 0u;
      *(_BYTE *)(v61 + 32) = 1;
      v62 = v60 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_distance;
      (*(void (**)(uint64_t, char *, uint64_t))(v90 + 32))(v60 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v58, v59);
      v63 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 160);
      v87 = v57;
      swift_retain();
      *(_QWORD *)v62 = v63(v15, v32);
      *(_BYTE *)(v62 + 8) = v64 & 1;
      v65 = v81;
      sub_240071030((uint64_t)v3 + *(_QWORD *)(*v3 + 224), (uint64_t)v81);
      LODWORD(v63) = *v65;
      sub_240070B3C((uint64_t)v65);
      v88 = v27;
      v79(v15, v32);
      v70 = v67;
      v71 = v68;
      v72 = v69;
      v73 = (_DWORD)v63 == 1;
      v75 = v90;
      v74 = v91;
      if (v73)
        v66 = 1.0 - v66 - CGRectGetWidth(*(CGRect *)&v66);
      *(double *)v61 = v66;
      *(_QWORD *)(v61 + 8) = v70;
      *(_QWORD *)(v61 + 16) = v71;
      *(_QWORD *)(v61 + 24) = v72;
      *(_BYTE *)(v61 + 32) = 0;
      sub_240115C48(v60);
      swift_setDeallocating();
      (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v60 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter11Measurement_time, v74);
      swift_deallocClassInstance();
      swift_release();
      v27 = v88;
      v54 = (uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v89;
    }
    v76 = (uint64_t)v86;
    v82(v86, v27, v15);
    v77 = v54(v76, 0, 1, v15);
    sub_2400B7490(v77, v76);
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v76, v84);
    return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v27, v15);
  }
}

uint64_t sub_2400B7DC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v4;

  if (((*(uint64_t (**)(void))(*(_QWORD *)v1 + 624))() & 1) != 0)
    return sub_2400B8D80(v1 + *(_QWORD *)(*(_QWORD *)v1 + 232), a1);
  v4 = type metadata accessor for DKPersonGroupFilter.Track(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, 1, 1, v4);
}

uint64_t DKTrackerBase.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = v0 + qword_256FC4858;
  v2 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_256FC4878;
  v4 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  v5 = v0 + qword_256FC4890;
  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  v7 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 200);
  v8 = sub_240154A30();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  swift_release();
  swift_release();
  sub_240070B3C(v0 + *(_QWORD *)(*(_QWORD *)v0 + 224));
  sub_2400B8DC8(v0 + *(_QWORD *)(*(_QWORD *)v0 + 232));
  return v0;
}

uint64_t DKTrackerBase.__deallocating_deinit()
{
  DKTrackerBase.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2400B7F8C@<X0>(uint64_t a1@<X8>)
{
  return DKTrackerBase.uuid.getter(a1);
}

uint64_t sub_2400B7FAC()
{
  return sub_2400B6810();
}

uint64_t sub_2400B7FCC(uint64_t a1)
{
  return sub_2400B6820(a1);
}

void (*sub_2400B7FEC(_QWORD *a1))(_QWORD *a1)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_2400B6830();
  return sub_240095B40;
}

BOOL sub_2400B8034()
{
  return sub_2400B72FC();
}

uint64_t sub_2400B8058()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 624))() & 1;
}

uint64_t sub_2400B8084(uint64_t a1)
{
  return sub_2400B76C4(a1);
}

uint64_t sub_2400B80A4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 216));
}

uint64_t sub_2400B80B4(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  __int128 v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  _QWORD *v43;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + 16) = sub_2401075D4(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v4 + 24) = 0x3FE0000000000000;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    return v4;
  v11 = 1.0 / (double)v10;
  v12 = (uint64_t *)(a1 + 32);
  v13 = sub_240154310();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v41 = v13;
  v39 = xmmword_240157220;
  while (1)
  {
    v16 = *v12++;
    v15 = v16;
    v17 = v41;
    v18 = (uint64_t)v42;
    v19 = v40;
    v40((uint64_t)v42, 1, 1, v41);
    type metadata accessor for DKSmoothingFilter();
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 48) = v39;
    v21 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    v19(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v17);
    v22 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
    *(_QWORD *)v22 = 0;
    *(_BYTE *)(v22 + 8) = 1;
    v23 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 1;
    *(_BYTE *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
    *(double *)(v20 + 16) = a2;
    *(double *)(v20 + 24) = a3;
    *(_WORD *)(v20 + 32) = 256;
    *(double *)(v20 + 40) = v11;
    sub_24009C218(v18, v21, &qword_256FB4CC8);
    *(_QWORD *)v22 = 0;
    *(_BYTE *)(v22 + 8) = 1;
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = *(_QWORD **)(v4 + 16);
    v25 = v43;
    *(_QWORD *)(v4 + 16) = 0x8000000000000000;
    v27 = sub_24013EF5C(v16);
    v28 = v25[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v25[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_2400AE4E4();
    }
    else
    {
      sub_2400AAECC(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_24013EF5C(v15);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_17;
      v27 = v32;
    }
    v34 = v43;
    if ((v31 & 1) != 0)
    {
      v14 = v43[7];
      swift_release();
      *(_QWORD *)(v14 + 8 * v27) = v20;
    }
    else
    {
      v43[(v27 >> 6) + 8] |= 1 << v27;
      *(_QWORD *)(v34[6] + 8 * v27) = v15;
      *(_QWORD *)(v34[7] + 8 * v27) = v20;
      v35 = v34[2];
      v36 = __OFADD__(v35, 1);
      v37 = v35 + 1;
      if (v36)
        goto LABEL_16;
      v34[2] = v37;
    }
    *(_QWORD *)(v4 + 16) = v34;
    swift_bridgeObjectRelease();
    if (!--v10)
      return v4;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_2400B8394(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  __int128 v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  _QWORD *v43;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + 16) = sub_2401076E4(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v4 + 24) = 0x3FE0000000000000;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    return v4;
  v11 = 1.0 / (double)v10;
  v12 = (unsigned __int8 *)(a1 + 32);
  v13 = sub_240154310();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v41 = v13;
  v39 = xmmword_240157220;
  while (1)
  {
    v16 = *v12++;
    v15 = v16;
    v17 = v41;
    v18 = (uint64_t)v42;
    v19 = v40;
    v40((uint64_t)v42, 1, 1, v41);
    type metadata accessor for DKSmoothingFilter();
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 48) = v39;
    v21 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    v19(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v17);
    v22 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
    *(_QWORD *)v22 = 0;
    *(_BYTE *)(v22 + 8) = 1;
    v23 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 1;
    *(_BYTE *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
    *(double *)(v20 + 16) = a2;
    *(double *)(v20 + 24) = a3;
    *(_WORD *)(v20 + 32) = 256;
    *(double *)(v20 + 40) = v11;
    sub_24009C218(v18, v21, &qword_256FB4CC8);
    *(_QWORD *)v22 = 0;
    *(_BYTE *)(v22 + 8) = 1;
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = *(_QWORD **)(v4 + 16);
    v25 = v43;
    *(_QWORD *)(v4 + 16) = 0x8000000000000000;
    v27 = sub_24013F0E0(v16);
    v28 = v25[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v25[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v34 = v43;
        if ((v26 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2400AE684();
        v34 = v43;
        if ((v31 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2400AB180(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_24013F0E0(v15);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_19;
      v27 = v32;
      v34 = v43;
      if ((v31 & 1) != 0)
      {
LABEL_3:
        v14 = v34[7];
        swift_release();
        *(_QWORD *)(v14 + 8 * v27) = v20;
        goto LABEL_4;
      }
    }
    v34[(v27 >> 6) + 8] |= 1 << v27;
    *(_BYTE *)(v34[6] + v27) = v15;
    *(_QWORD *)(v34[7] + 8 * v27) = v20;
    v35 = v34[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_18;
    v34[2] = v37;
LABEL_4:
    *(_QWORD *)(v4 + 16) = v34;
    swift_bridgeObjectRelease();
    if (!--v10)
      return v4;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_2400B8684(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  __int128 v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  _QWORD *v43;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + 16) = sub_24010770C(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v4 + 24) = 0x3FE0000000000000;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    return v4;
  v11 = 1.0 / (double)v10;
  v12 = (unsigned __int8 *)(a1 + 32);
  v13 = sub_240154310();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v41 = v13;
  v39 = xmmword_240157220;
  while (1)
  {
    v16 = *v12++;
    v15 = v16;
    v17 = v41;
    v18 = (uint64_t)v42;
    v19 = v40;
    v40((uint64_t)v42, 1, 1, v41);
    type metadata accessor for DKSmoothingFilter();
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 48) = v39;
    v21 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    v19(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v17);
    v22 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
    *(_QWORD *)v22 = 0;
    *(_BYTE *)(v22 + 8) = 1;
    v23 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 1;
    *(_BYTE *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
    *(double *)(v20 + 16) = a2;
    *(double *)(v20 + 24) = a3;
    *(_WORD *)(v20 + 32) = 256;
    *(double *)(v20 + 40) = v11;
    sub_24009C218(v18, v21, &qword_256FB4CC8);
    *(_QWORD *)v22 = 0;
    *(_BYTE *)(v22 + 8) = 1;
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = *(_QWORD **)(v4 + 16);
    v25 = v43;
    *(_QWORD *)(v4 + 16) = 0x8000000000000000;
    v27 = sub_24013F0E0(v16);
    v28 = v25[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v25[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v34 = v43;
        if ((v26 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2400AED68();
        v34 = v43;
        if ((v31 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2400ABB60(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_24013F0E0(v15);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_19;
      v27 = v32;
      v34 = v43;
      if ((v31 & 1) != 0)
      {
LABEL_3:
        v14 = v34[7];
        swift_release();
        *(_QWORD *)(v14 + 8 * v27) = v20;
        goto LABEL_4;
      }
    }
    v34[(v27 >> 6) + 8] |= 1 << v27;
    *(_BYTE *)(v34[6] + v27) = v15;
    *(_QWORD *)(v34[7] + 8 * v27) = v20;
    v35 = v34[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_18;
    v34[2] = v37;
LABEL_4:
    *(_QWORD *)(v4 + 16) = v34;
    swift_bridgeObjectRelease();
    if (!--v10)
      return v4;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_2400B8974(uint64_t a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t result;
  __int128 v39;
  void (*v40)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  _QWORD *v43;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v8);
  v42 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + 16) = sub_2401076F8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v4 + 24) = 0x3FE0000000000000;
  *(double *)(v4 + 32) = a2;
  *(double *)(v4 + 40) = a3;
  v10 = *(_QWORD *)(a1 + 16);
  if (!v10)
    return v4;
  v11 = 1.0 / (double)v10;
  v12 = (unsigned __int8 *)(a1 + 32);
  v13 = sub_240154310();
  v40 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v41 = v13;
  v39 = xmmword_240157220;
  while (1)
  {
    v16 = *v12++;
    v15 = v16;
    v17 = v41;
    v18 = (uint64_t)v42;
    v19 = v40;
    v40((uint64_t)v42, 1, 1, v41);
    type metadata accessor for DKSmoothingFilter();
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 48) = v39;
    v21 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    v19(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated, 1, 1, v17);
    v22 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
    *(_QWORD *)v22 = 0;
    *(_BYTE *)(v22 + 8) = 1;
    v23 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 1;
    *(_BYTE *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
    *(double *)(v20 + 16) = a2;
    *(double *)(v20 + 24) = a3;
    *(_WORD *)(v20 + 32) = 256;
    *(double *)(v20 + 40) = v11;
    sub_24009C218(v18, v21, &qword_256FB4CC8);
    *(_QWORD *)v22 = 0;
    *(_BYTE *)(v22 + 8) = 1;
    *(_QWORD *)v23 = 0;
    *(_BYTE *)(v23 + 8) = 1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = *(_QWORD **)(v4 + 16);
    v25 = v43;
    *(_QWORD *)(v4 + 16) = 0x8000000000000000;
    v27 = sub_24013F0E0(v16);
    v28 = v25[2];
    v29 = (v26 & 1) == 0;
    v30 = v28 + v29;
    if (__OFADD__(v28, v29))
      break;
    v31 = v26;
    if (v25[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v34 = v43;
        if ((v26 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_2400AED5C();
        v34 = v43;
        if ((v31 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_2400ABB54(v30, isUniquelyReferenced_nonNull_native);
      v32 = sub_24013F0E0(v15);
      if ((v31 & 1) != (v33 & 1))
        goto LABEL_19;
      v27 = v32;
      v34 = v43;
      if ((v31 & 1) != 0)
      {
LABEL_3:
        v14 = v34[7];
        swift_release();
        *(_QWORD *)(v14 + 8 * v27) = v20;
        goto LABEL_4;
      }
    }
    v34[(v27 >> 6) + 8] |= 1 << v27;
    *(_BYTE *)(v34[6] + v27) = v15;
    *(_QWORD *)(v34[7] + 8 * v27) = v20;
    v35 = v34[2];
    v36 = __OFADD__(v35, 1);
    v37 = v35 + 1;
    if (v36)
      goto LABEL_18;
    v34[2] = v37;
LABEL_4:
    *(_QWORD *)(v4 + 16) = v34;
    swift_bridgeObjectRelease();
    if (!--v10)
      return v4;
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  result = sub_240154F70();
  __break(1u);
  return result;
}

uint64_t sub_2400B8C64(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v1 + 24) = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(v1 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v1 + 40) = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v1 + 48) = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(v1 + 56) = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(v1 + 64) = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(v1 + 72) = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(v1 + 88) = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(v1 + 96) = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(v1 + 104) = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(v1 + 112) = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(v1 + 120) = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(v1 + 128) = *(_QWORD *)(a1 + 128);
  *(_BYTE *)(v1 + 136) = *(_BYTE *)(a1 + 136);
  *(_QWORD *)(v1 + 144) = *(_QWORD *)(a1 + 144);
  *(_QWORD *)(v1 + 152) = *(_QWORD *)(a1 + 152);
  *(_QWORD *)(v1 + 160) = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(v1 + 168) = *(_QWORD *)(a1 + 168);
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_2400B8D40()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_256FC4880);
}

uint64_t sub_2400B8D50()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_256FC4888);
}

uint64_t sub_2400B8D60()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_256FC48A0);
}

uint64_t sub_2400B8D70()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 208));
}

uint64_t sub_2400B8D80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400B8DC8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_2400B8E08@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 16);
  *a2 = result;
  return result;
}

double sub_2400B8E18(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 16) = *a1;
  return result;
}

double sub_2400B8E28@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 24);
  *a2 = result;
  return result;
}

double sub_2400B8E38(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 24) = *a1;
  return result;
}

double sub_2400B8E48@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 32);
  *a2 = result;
  return result;
}

double sub_2400B8E58(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 32) = *a1;
  return result;
}

double sub_2400B8E68@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 40);
  *a2 = result;
  return result;
}

double sub_2400B8E78(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 40) = *a1;
  return result;
}

double sub_2400B8E88@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 48);
  *a2 = result;
  return result;
}

double sub_2400B8E98(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 48) = *a1;
  return result;
}

double sub_2400B8EA8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 56);
  *a2 = result;
  return result;
}

double sub_2400B8EB8(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 56) = *a1;
  return result;
}

double sub_2400B8EC8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 64);
  *a2 = result;
  return result;
}

double sub_2400B8ED8(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 64) = *a1;
  return result;
}

uint64_t sub_2400B8EE8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 72);
  return result;
}

_QWORD *sub_2400B8EF8(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 72) = *result;
  return result;
}

uint64_t sub_2400B8F08@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 80);
  return result;
}

_QWORD *sub_2400B8F18(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 80) = *result;
  return result;
}

double sub_2400B8F28@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 88);
  *a2 = result;
  return result;
}

double sub_2400B8F38(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 88) = *a1;
  return result;
}

double sub_2400B8F48@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 96);
  *a2 = result;
  return result;
}

double sub_2400B8F58(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 96) = *a1;
  return result;
}

double sub_2400B8F68@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 104);
  *a2 = result;
  return result;
}

double sub_2400B8F78(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 104) = *a1;
  return result;
}

uint64_t sub_2400B8F88@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 112);
  return swift_retain();
}

uint64_t sub_2400B8F98(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 112) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2400B8FC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 120);
  return swift_retain();
}

uint64_t sub_2400B8FD8(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 120) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2400B9008@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)a1 + 128);
  return swift_retain();
}

uint64_t sub_2400B9018(_QWORD *a1, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 128) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2400B9048@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 136);
  return result;
}

_BYTE *sub_2400B9058(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(*(_QWORD *)a2 + 136) = *result;
  return result;
}

double sub_2400B9068@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 144);
  *a2 = result;
  return result;
}

double sub_2400B9078(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 144) = *a1;
  return result;
}

uint64_t sub_2400B9088@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*(_QWORD *)result + 152);
  return result;
}

_QWORD *sub_2400B9098(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(*(_QWORD *)a2 + 152) = *result;
  return result;
}

double sub_2400B90A8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 160);
  *a2 = result;
  return result;
}

double sub_2400B90B8(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 160) = *a1;
  return result;
}

double sub_2400B90C8@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result;

  result = *(double *)(*(_QWORD *)a1 + 168);
  *a2 = result;
  return result;
}

double sub_2400B90D8(double *a1, uint64_t a2)
{
  double result;

  result = *a1;
  *(double *)(*(_QWORD *)a2 + 168) = *a1;
  return result;
}

uint64_t sub_2400B90E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2400B6810();
  *a1 = result;
  return result;
}

uint64_t sub_2400B9110(uint64_t *a1)
{
  return sub_2400B6820(*a1);
}

uint64_t sub_2400B9134()
{
  return 40;
}

__n128 sub_2400B9140(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

double sub_2400B9154@<D0>(uint64_t a1@<X8>)
{
  double result;
  _QWORD v3[2];

  sub_2400B6848((uint64_t)v3);
  result = *(double *)&v3[1];
  *(_QWORD *)a1 = v3[0];
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400B9194(_QWORD *a1)
{
  uint64_t v1;
  _QWORD v3[2];

  v1 = a1[1];
  v3[0] = *a1;
  v3[1] = v1;
  return sub_2400B6868((uint64_t)v3);
}

uint64_t sub_2400B91D0()
{
  return 40;
}

__n128 sub_2400B91DC(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B91F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_2400B68A0();
  *a1 = result;
  return result;
}

uint64_t sub_2400B9218(uint64_t *a1)
{
  return sub_2400B68B0(*a1);
}

uint64_t sub_2400B923C()
{
  return 40;
}

__n128 sub_2400B9248(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B925C@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B68D8(a1);
}

uint64_t sub_2400B927C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2400B69A0(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BEE78D8], (uint64_t (*)(char *))sub_2400B68EC);
}

uint64_t sub_2400B92A0()
{
  return 40;
}

__n128 sub_2400B92AC(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B92C0@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_53Tm(sub_2400B8D40, a1);
}

uint64_t sub_2400B92CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, sub_2400B692C);
}

uint64_t sub_2400B92D8()
{
  return 40;
}

__n128 sub_2400B92E4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B92F8@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_53Tm(sub_2400B8D50, a1);
}

uint64_t sub_2400B9304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, sub_2400B6970);
}

uint64_t sub_2400B9310()
{
  return 40;
}

__n128 sub_2400B931C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B9330@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A20(a1);
}

uint64_t sub_2400B9350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2400B69A0(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x24BDCE900], (uint64_t (*)(char *))sub_2400B6A74);
}

uint64_t sub_2400B9374()
{
  return 40;
}

__n128 sub_2400B9380(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B9394@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400B6AE0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2400B93C0(unsigned __int8 *a1)
{
  return sub_2400B6AF0(*a1);
}

uint64_t sub_2400B93E4()
{
  return 40;
}

__n128 sub_2400B93F0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B9404@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_2400B8D60();
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400B942C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return sub_2400B6B2C(v0);
}

uint64_t sub_2400B9454()
{
  return 40;
}

__n128 sub_2400B9460(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B9474@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6BE0(a1);
}

uint64_t sub_2400B9498()
{
  return 40;
}

__n128 sub_2400B94A4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B94B8@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_53Tm(sub_2400B8D70, a1);
}

uint64_t keypath_get_53Tm@<X0>(uint64_t (*a1)(void)@<X3>, _QWORD *a2@<X8>)
{
  *a2 = a1();
  return swift_retain();
}

uint64_t sub_2400B94EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_54Tm(a1, a2, a3, a4, sub_2400B6C9C);
}

uint64_t keypath_set_54Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_retain();
  return a5(v6);
}

uint64_t sub_2400B9524()
{
  return 40;
}

__n128 sub_2400B9530(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B9544@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_2400B80A4();
  return swift_retain();
}

uint64_t sub_2400B956C()
{
  uint64_t v0;

  v0 = swift_retain();
  return sub_2400B6CE0(v0);
}

uint64_t sub_2400B9594()
{
  return 40;
}

__n128 sub_2400B95A0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B95B4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6D88(a1);
}

uint64_t sub_2400B95D8()
{
  return 40;
}

__n128 sub_2400B95E4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B95F8@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6E40(a1);
}

uint64_t sub_2400B961C()
{
  return 40;
}

__n128 sub_2400B9628(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_2400B963C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400B6E7C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2400B9668(unsigned __int8 *a1)
{
  return sub_2400B6E8C(*a1);
}

uint64_t sub_2400B968C()
{
  return 40;
}

__n128 sub_2400B9698(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t type metadata accessor for DKTrackerConfiguration()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKTrackerConfiguration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityAlpha.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityAlpha.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityAlpha.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityBeta.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityBeta.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.updateIdentityBeta.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardIdentityMatch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardIdentityMatch.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardIdentityMatch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardTrackerIdMatch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardTrackerIdMatch.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rewardTrackerIdMatch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxAssociationDistance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxAssociationDistance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxAssociationDistance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.expirationTimeout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.expirationTimeout.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.expirationTimeout.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.selectedSubjectExpirationTimeout.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.selectedSubjectExpirationTimeout.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.selectedSubjectExpirationTimeout.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.historyLenght.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.historyLenght.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.historyLenght.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.activationTheshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.activationTheshold.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.activationTheshold.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rectSizeAlpha.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rectSizeAlpha.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.rectSizeAlpha.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.uncertaintyInflation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.uncertaintyInflation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.uncertaintyInflation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxPredictionDuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxPredictionDuration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxPredictionDuration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.azimuth.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.azimuth.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.azimuth.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.elevation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.elevation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.elevation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.distance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.distance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.distance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.enable3DTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.enable3DTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.enable3DTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxDistanceToInitialize.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxDistanceToInitialize.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxDistanceToInitialize.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxNumberOfTrackers.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.maxNumberOfTrackers.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.recognitionThreshold.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.recognitionThreshold.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.recognitionThreshold.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.penaltyIdentityMismatch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.penaltyIdentityMismatch.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.penaltyIdentityMismatch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 720))();
}

uint64_t dispatch thunk of DKTrackerConfiguration.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 728))();
}

uint64_t dispatch thunk of DKTracker.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DKTracker.trackerId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DKTracker.trackerId.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DKTracker.trackerId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of DKTracker.isExpired(currentTime:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of DKTracker.isActivated()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of DKTracker.update(camera:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

void sub_2400B99E4()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_24015434C();
  if (v0 <= 0x3F)
  {
    sub_2401544C0();
    if (v1 <= 0x3F)
    {
      sub_240154310();
      if (v2 <= 0x3F)
      {
        sub_240154A30();
        if (v3 <= 0x3F)
        {
          type metadata accessor for DKCamera();
          if (v4 <= 0x3F)
          {
            sub_2400B9DF0();
            if (v5 <= 0x3F)
              swift_initClassMetadata2();
          }
        }
      }
    }
  }
}

void type metadata accessor for DKTrackerBase()
{
  JUMPOUT(0x24267E050);
}

uint64_t method lookup function for DKTrackerBase()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKTrackerBase.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKTrackerBase.trackerId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKTrackerBase.trackerId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKTrackerBase.identity.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKTrackerBase.identity.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKTrackerBase.identity.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKTrackerBase.anstId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKTrackerBase.anstId.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKTrackerBase.anstId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKTrackerBase.logger.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKTrackerBase.logger.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKTrackerBase.logger.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKTrackerBase.rectFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKTrackerBase.rectFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKTrackerBase.rectFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKTrackerBase.configuration.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKTrackerBase.configuration.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKTrackerBase.configuration.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKTrackerBase.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKTrackerBase.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKTrackerBase.lastUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKTrackerBase.isUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKTrackerBase.isUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKTrackerBase.isUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKTrackerBase.history.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKTrackerBase.history.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKTrackerBase.history.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKTrackerBase.lastObservation.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKTrackerBase.lastObservation.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKTrackerBase.lastObservation.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKTrackerBase.identityFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of DKTrackerBase.identityFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of DKTrackerBase.identityFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of DKTrackerBase.poseTracker.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of DKTrackerBase.poseTracker.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKTrackerBase.poseTracker.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKTrackerBase.camera.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of DKTrackerBase.camera.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of DKTrackerBase.camera.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of DKTrackerBase.group.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of DKTrackerBase.group.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of DKTrackerBase.group.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of DKTrackerBase.isSelected.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of DKTrackerBase.isSelected.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of DKTrackerBase.isSelected.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of DKTrackerBase.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 608))();
}

uint64_t dispatch thunk of DKTrackerBase.isExpired(currentTime:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of DKTrackerBase.isActivated()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of DKTrackerBase.getState(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of DKTrackerBase.getHistory()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of DKTrackerBase.updateIdentity(identityConfidences:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of DKTrackerBase.update(camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of DKTrackerBase.update(currentTime:observation:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of DKTrackerBase.getLastObservation()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of DKTrackerBase.getGroupTrack()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of DKTrackerBase.setSelected(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

void sub_2400B9DF0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_256FB8B40)
  {
    type metadata accessor for DKPersonGroupFilter.Track(255);
    v0 = sub_240154A30();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_256FB8B40);
  }
}

void sub_2400B9E48(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2400B9E80()
{
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

void sub_2400B9F34(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2400B9F6C()
{
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

void sub_2400BA000(uint64_t a1, char a2)
{
  sub_240154FE8();
  __asm { BR              X10 }
}

uint64_t sub_2400BA044()
{
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

void sub_2400BA10C(uint64_t a1, char a2)
{
  sub_240154FE8();
  __asm { BR              X10 }
}

uint64_t sub_2400BA150()
{
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

id DKObservationMetadata.__allocating_init(time:observations:image:standPosition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  objc_class *v4;
  id v9;

  v9 = objc_allocWithZone(v4);
  return DKObservationMetadata.init(time:observations:image:standPosition:)(a1, a2, a3, a4);
}

uint64_t DKFaceObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  char v23;
  char v24;
  uint64_t v25;

  v23 = a5 & 1;
  v24 = a7 & 1;
  v25 = swift_allocObject();
  DKFaceObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:)(a1, a2, a3, a4, v23, a6, v24, a8, a9, a10, a11, a12, a13 & 1, a14, a15 & 1, a16, a17 & 1, a18, a19 & 1);
  return v25;
}

uint64_t DKBodyObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13)
{
  char v23;
  char v24;
  uint64_t v25;

  v23 = a5 & 1;
  v24 = a7 & 1;
  v25 = swift_allocObject();
  DKBodyObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(a1, a2, a3, a4, v23, a6, v24, a8, a9, a10, a11, a12, a13 & 1);
  return v25;
}

BOOL static DKFaceDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_2400BA438()
{
  qword_256FC48A8 = 0x3FD0C152382D7365;
}

void sub_2400BA454()
{
  qword_256FC48B0 = 0x3FE0C152382D7365;
}

_BYTE *sub_2400BA470@<X0>(_BYTE *result@<X0>, char *a2@<X8>, double a3@<D0>)
{
  char v5;
  double v6;

  if (*result == 1)
  {
    if (qword_256FB3FD8 != -1)
      result = (_BYTE *)swift_once();
    if (*(double *)&qword_256FC48B0 >= a3)
    {
      if (-*(double *)&qword_256FC48B0 > a3)
      {
LABEL_10:
        v5 = 2;
        goto LABEL_18;
      }
      goto LABEL_13;
    }
LABEL_12:
    v5 = 1;
    goto LABEL_18;
  }
  if (qword_256FB3FD8 != -1)
    result = (_BYTE *)swift_once();
  if (*(double *)&qword_256FC48B0 < a3)
    goto LABEL_10;
  if (-*(double *)&qword_256FC48B0 > a3)
    goto LABEL_12;
LABEL_13:
  v6 = fabs(a3);
  if (qword_256FB3FD0 != -1)
    result = (_BYTE *)swift_once();
  if (v6 >= *(double *)&qword_256FC48A8)
    v5 = 0;
  else
    v5 = 3;
LABEL_18:
  *a2 = v5;
  return result;
}

uint64_t DKFaceDirection.hash(into:)()
{
  return sub_240154FF4();
}

uint64_t sub_2400BA5A4()
{
  sub_2400C2980();
  return sub_240155048();
}

uint64_t sub_2400BA5CC()
{
  sub_2400C2980();
  return sub_240155054();
}

uint64_t sub_2400BA5F4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400BA624 + 4 * byte_24015914E[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_2400BA624()
{
  return 1952867692;
}

uint64_t sub_2400BA634()
{
  return 0x7468676972;
}

uint64_t sub_2400BA648()
{
  return 0x6172656D6163;
}

uint64_t sub_2400BA65C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400C656C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400BA680()
{
  sub_2400C293C();
  return sub_240155048();
}

uint64_t sub_2400BA6A8()
{
  sub_2400C293C();
  return sub_240155054();
}

uint64_t sub_2400BA6D0()
{
  sub_2400C2A08();
  return sub_240155048();
}

uint64_t sub_2400BA6F8()
{
  sub_2400C2A08();
  return sub_240155054();
}

uint64_t sub_2400BA720()
{
  sub_2400C29C4();
  return sub_240155048();
}

uint64_t sub_2400BA748()
{
  sub_2400C29C4();
  return sub_240155054();
}

uint64_t sub_2400BA770()
{
  sub_2400C2A4C();
  return sub_240155048();
}

uint64_t sub_2400BA798()
{
  sub_2400C2A4C();
  return sub_240155054();
}

void DKFaceDirection.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8B48);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8B50);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8B58);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8B60);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8B68);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C293C();
  sub_240155030();
  __asm { BR              X9 }
}

uint64_t sub_2400BA978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_2400C2A4C();
  sub_240154E20();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t DKFaceDirection.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8B98);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8BA0);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8BA8);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8BB0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8BB8);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2400C293C();
  v15 = v28;
  sub_240155024();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_240154E08();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_240154BC8();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v19 = &type metadata for DKFaceDirection;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_2400BAF34@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKFaceDirection.init(from:)(a1, a2);
}

void sub_2400BAF48(_QWORD *a1)
{
  DKFaceDirection.encode(to:)(a1);
}

uint64_t sub_2400BAF5C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E69746567646946;
  if (*v0 != 1)
    v1 = 0x676E696B6C6157;
  if (*v0)
    return v1;
  else
    return 0x616E6F6974617453;
}

uint64_t sub_2400BAFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400C6704(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400BAFE4()
{
  sub_2400C2A90();
  return sub_240155048();
}

uint64_t sub_2400BB00C()
{
  sub_2400C2A90();
  return sub_240155054();
}

uint64_t sub_2400BB034()
{
  sub_2400C2B18();
  return sub_240155048();
}

uint64_t sub_2400BB05C()
{
  sub_2400C2B18();
  return sub_240155054();
}

uint64_t sub_2400BB084()
{
  sub_2400C2B5C();
  return sub_240155048();
}

uint64_t sub_2400BB0AC()
{
  sub_2400C2B5C();
  return sub_240155054();
}

uint64_t sub_2400BB0D4()
{
  sub_2400C2AD4();
  return sub_240155048();
}

uint64_t sub_2400BB0FC()
{
  sub_2400C2AD4();
  return sub_240155054();
}

uint64_t DKMotionClassification.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8BC0);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8BC8);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8BD0);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8BD8);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C2A90();
  sub_240155030();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_2400C2B18();
      sub_240154E20();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_2400C2AD4();
      v16 = v21;
      sub_240154E20();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_2400C2B5C();
    sub_240154E20();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t DKMotionClassification.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C00);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C08);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C10);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C18);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C2A90();
  v13 = v41;
  sub_240155024();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_240154E08();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_240154BC8();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v25 = &type metadata for DKMotionClassification;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_2400C2B18();
      v20 = v9;
      sub_240154D90();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_2400C2AD4();
      v28 = v15;
      sub_240154D90();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_2400C2B5C();
    sub_240154D90();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_2400BB7D0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DKMotionClassification.init(from:)(a1, a2);
}

uint64_t sub_2400BB7E4(_QWORD *a1)
{
  return DKMotionClassification.encode(to:)(a1);
}

uint64_t sub_2400BB7F8()
{
  sub_2400C2C6C();
  return sub_240155048();
}

uint64_t sub_2400BB820()
{
  sub_2400C2C6C();
  return sub_240155054();
}

uint64_t sub_2400BB848()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400BB870 + 4 * byte_24015915A[*v0]))(1701011782, 0xE400000000000000);
}

uint64_t sub_2400BB870()
{
  return 2036625218;
}

uint64_t sub_2400BB87C()
{
  return 1684955464;
}

uint64_t sub_2400BB888()
{
  return 0x7463656A624FLL;
}

uint64_t sub_2400BB89C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400C6870(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400BB8C0()
{
  sub_2400C2BA0();
  return sub_240155048();
}

uint64_t sub_2400BB8E8()
{
  sub_2400C2BA0();
  return sub_240155054();
}

uint64_t sub_2400BB910()
{
  sub_2400C2CB0();
  return sub_240155048();
}

uint64_t sub_2400BB938()
{
  sub_2400C2CB0();
  return sub_240155054();
}

uint64_t sub_2400BB960()
{
  sub_2400C2C28();
  return sub_240155048();
}

uint64_t sub_2400BB988()
{
  sub_2400C2C28();
  return sub_240155054();
}

uint64_t sub_2400BB9B0()
{
  sub_2400C2BE4();
  return sub_240155048();
}

uint64_t sub_2400BB9D8()
{
  sub_2400C2BE4();
  return sub_240155054();
}

void DKObservationType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C20);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C28);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C30);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C38);
  MEMORY[0x24BDAC7A8](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C40);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C2BA0();
  sub_240155030();
  __asm { BR              X9 }
}

uint64_t sub_2400BBBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_2400C2CB0();
  sub_240154E20();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t DKObservationType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C70);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C78);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C80);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x24BDAC7A8](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C88);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C90);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_2400C2BA0();
  v15 = v28;
  sub_240155024();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_240154E08();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_240154BC8();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v19 = &type metadata for DKObservationType;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x24BEE26D0], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_2400BC174@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKObservationType.init(from:)(a1, a2);
}

void sub_2400BC188(_QWORD *a1)
{
  DKObservationType.encode(to:)(a1);
}

uint64_t DKObservationGroup.groupId.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DKObservationGroup.groupId.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*DKObservationGroup.groupId.modify())()
{
  return nullsub_1;
}

uint64_t DKObservationGroup.face.getter()
{
  return swift_retain();
}

uint64_t DKObservationGroup.face.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*DKObservationGroup.face.modify())()
{
  return nullsub_1;
}

uint64_t DKObservationGroup.body.getter()
{
  return swift_retain();
}

uint64_t DKObservationGroup.body.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_release();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*DKObservationGroup.body.modify())()
{
  return nullsub_1;
}

uint64_t DKObservationGroup.hands.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DKObservationGroup.hands.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  return result;
}

uint64_t (*DKObservationGroup.hands.modify())()
{
  return nullsub_1;
}

uint64_t DKObservationGroup.init(groupId:face:body:hands:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t result;

  swift_retain();
  swift_retain();
  v10 = sub_240091370(a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  result = swift_release_n();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = v10;
  return result;
}

uint64_t sub_2400BC310()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400BC340 + 4 * byte_240159166[*v0]))(0x644970756F7267, 0xE700000000000000);
}

uint64_t sub_2400BC340()
{
  return 1701011814;
}

uint64_t sub_2400BC350()
{
  return 2036625250;
}

uint64_t sub_2400BC360()
{
  return 0x73646E6168;
}

uint64_t sub_2400BC374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400C69F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400BC398()
{
  sub_2400C2CF4();
  return sub_240155048();
}

uint64_t sub_2400BC3C0()
{
  sub_2400C2CF4();
  return sub_240155054();
}

uint64_t DKObservationGroup.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8C98);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1[1];
  v13 = v1[2];
  v14 = v8;
  v12 = v1[3];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C2CF4();
  sub_240155030();
  LOBYTE(v16) = 0;
  sub_240154E74();
  if (!v2)
  {
    v9 = v12;
    v10 = v13;
    v16 = v14;
    v15 = 1;
    type metadata accessor for DKFaceObservation(0);
    sub_2400707A8(&qword_256FB6700, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
    sub_240154E50();
    v16 = v10;
    v15 = 2;
    type metadata accessor for DKBodyObservation(0);
    sub_2400707A8(&qword_256FB6718, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
    sub_240154E50();
    v16 = v9;
    v15 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CA8);
    sub_2400C2D60();
    sub_240154E80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DKObservationGroup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  char v16;
  uint64_t v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CC0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C2CF4();
  sub_240155024();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    LOBYTE(v17) = 0;
    v9 = sub_240154DF0();
    type metadata accessor for DKFaceObservation(0);
    v16 = 1;
    sub_2400707A8(&qword_256FB6808, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
    sub_240154DCC();
    v11 = v17;
    type metadata accessor for DKBodyObservation(0);
    v16 = 2;
    sub_2400707A8(&qword_256FB6818, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
    swift_retain();
    sub_240154DCC();
    v15 = a2;
    v12 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CA8);
    v16 = 3;
    sub_2400C2DF8();
    swift_retain();
    sub_240154DFC();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v13 = v17;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_release();
    v14 = v15;
    *v15 = v9;
    v14[1] = v11;
    v14[2] = v12;
    v14[3] = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_2400BC8B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DKObservationGroup.init(from:)(a1, a2);
}

uint64_t sub_2400BC8CC(_QWORD *a1)
{
  return DKObservationGroup.encode(to:)(a1);
}

uint64_t sub_2400BC8E0@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400BC8F4(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400BC908())()
{
  return nullsub_1;
}

uint64_t sub_2400BC920@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400BC934(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400BC948())()
{
  return nullsub_1;
}

double sub_2400BC960()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
}

_QWORD *sub_2400BC96C(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2400BC978())()
{
  return nullsub_1;
}

uint64_t sub_2400BC990()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400BC9A0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400BC9B8())()
{
  return nullsub_1;
}

uint64_t sub_2400BC9D0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
}

uint64_t sub_2400BC9E8(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BCA04())()
{
  return nullsub_1;
}

uint64_t sub_2400BCA1C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
}

uint64_t sub_2400BCA34(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BCA50())()
{
  return nullsub_1;
}

uint64_t sub_2400BCA68()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
}

uint64_t sub_2400BCA80(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BCA9C())()
{
  return nullsub_1;
}

uint64_t sub_2400BCAB4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
}

uint64_t sub_2400BCACC(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BCAE8())()
{
  return nullsub_1;
}

uint64_t sub_2400BCB00()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
}

uint64_t sub_2400BCB18(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BCB34())()
{
  return nullsub_1;
}

uint64_t sub_2400BCB4C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
}

uint64_t sub_2400BCB64(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BCB80())()
{
  return nullsub_1;
}

uint64_t sub_2400BCB98(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400BCBC4 + 4 * byte_24015916A[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400BCBC4()
{
  return 1684632949;
}

uint64_t sub_2400BCBD0()
{
  return 1952671090;
}

unint64_t sub_2400BCBDC()
{
  return 0xD000000000000013;
}

uint64_t sub_2400BCBF8()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400BCC14()
{
  return 0x644970756F7267;
}

uint64_t sub_2400BCC2C()
{
  return 7823737;
}

uint64_t sub_2400BCC3C()
{
  return 0x6863746970;
}

uint64_t sub_2400BCC50()
{
  return 0x65636E6174736964;
}

uint64_t sub_2400BCC68()
{
  return 0x7463656A624F7369;
}

uint64_t sub_2400BCC88()
{
  return 1819045746;
}

uint64_t sub_2400BCC94(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400BCCC0 + 4 * byte_240159175[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400BCCC0()
{
  return 1684632949;
}

uint64_t sub_2400BCCCC()
{
  return 1952671090;
}

unint64_t sub_2400BCCD8()
{
  return 0xD000000000000013;
}

uint64_t sub_2400BCCF4()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400BCD10()
{
  return 0x644970756F7267;
}

uint64_t sub_2400BCD28()
{
  return 7823737;
}

uint64_t sub_2400BCD38()
{
  return 0x6863746970;
}

uint64_t sub_2400BCD4C()
{
  return 0x65636E6174736964;
}

uint64_t sub_2400BCD64()
{
  return 0x7463656A624F7369;
}

uint64_t sub_2400BCD84()
{
  return 1819045746;
}

uint64_t sub_2400BCD90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2400BCB98(*a1);
  v5 = v4;
  if (v3 == sub_2400BCB98(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2400BCE18()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_240154FE8();
  sub_2400BCB98(v1);
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400BCE78()
{
  unsigned __int8 *v0;

  sub_2400BCB98(*v0);
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2400BCEB8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_240154FE8();
  sub_2400BCB98(v1);
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400BCF14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400C6B80();
  *a1 = result;
  return result;
}

uint64_t sub_2400BCF40@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2400BCB98(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2400BCF68()
{
  unsigned __int8 *v0;

  return sub_2400BCC94(*v0);
}

uint64_t sub_2400BCF70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400C6B80();
  *a1 = result;
  return result;
}

void sub_2400BCF94(_BYTE *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_2400BCFA0()
{
  sub_2400C2F00();
  return sub_240155048();
}

uint64_t sub_2400BCFC8()
{
  sub_2400C2F00();
  return sub_240155054();
}

uint64_t DKFaceObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13, uint64_t a14, char a15, uint64_t a16, char a17, uint64_t a18, char a19)
{
  uint64_t v19;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  double *v38;

  v26 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  v27 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  v28 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
  v29 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
  v30 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
  v31 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  *(_BYTE *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType) = 0;
  v32 = v19 + v31;
  *(_QWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
  *(_QWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
  v33 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
  *(_QWORD *)v33 = 0;
  *(_BYTE *)(v33 + 8) = 1;
  v34 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time;
  v35 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v34, a1, v35);
  v36 = v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid;
  v37 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v36, a2, v37);
  v38 = (double *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
  *v38 = a9;
  v38[1] = a10;
  v38[2] = a11;
  v38[3] = a12;
  *(_QWORD *)(v19 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = a3;
  *(_QWORD *)v26 = a4;
  *(_BYTE *)(v26 + 8) = a5 & 1;
  *(_QWORD *)v27 = a6;
  *(_BYTE *)(v27 + 8) = a7 & 1;
  *(_QWORD *)v28 = a8;
  *(_BYTE *)(v28 + 8) = a13 & 1;
  *(_QWORD *)v29 = a14;
  *(_BYTE *)(v29 + 8) = a15 & 1;
  *(_QWORD *)v30 = a16;
  *(_BYTE *)(v30 + 8) = a17 & 1;
  *(_QWORD *)v32 = a18;
  *(_BYTE *)(v32 + 8) = a19 & 1;
  return v19;
}

uint64_t DKFaceObservation.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid;
  v4 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t DKFaceObservation.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid;
  v4 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2400BD364(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v2 = sub_24015434C();
  v23 = *(_QWORD *)(v2 - 8);
  v24 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v22 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CD8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C2F00();
  sub_240155030();
  v12 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v25 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, v4);
  LOBYTE(v27) = 0;
  sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v13 = v26;
  sub_240154E80();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v13)
  {
    v14 = v12;
    v15 = v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid;
    v17 = v22;
    v16 = v23;
    v18 = v24;
    (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v22, v15, v24);
    LOBYTE(v27) = 1;
    sub_2400707A8(&qword_256FB8CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v18);
    v20 = *(_OWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect + 16);
    v27 = *(_OWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    v28 = v20;
    v29 = 2;
    type metadata accessor for CGRect(0);
    sub_2400707A8(&qword_256FB67A8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_240154E80();
    *(_QWORD *)&v27 = *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences);
    v29 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CF0);
    sub_2400C2F44(&qword_256FB8CF8, (uint64_t (*)(void))sub_2400C2FAC, MEMORY[0x24BEE12A0]);
    sub_240154E80();
    LOBYTE(v27) = 4;
    sub_240154E44();
    LOBYTE(v27) = 5;
    sub_240154E44();
    LOBYTE(v27) = 6;
    sub_240154E38();
    LOBYTE(v27) = 7;
    sub_240154E38();
    LOBYTE(v27) = 8;
    sub_240154E38();
    LOBYTE(v27) = 9;
    sub_240154E38();
    LOBYTE(v27) = 10;
    sub_240154E5C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t DKFaceObservation.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKFaceObservation.init(from:));
}

uint64_t DKFaceObservation.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;
  uint64_t v29;
  uint64_t *v30;
  char v31;
  uint64_t v32;
  uint64_t *v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  char v37;
  uint64_t v38;
  uint64_t *v39;
  char v40;
  uint64_t v41;
  uint64_t *v42;
  char v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  char v69;

  v3 = sub_24015434C();
  v53 = *(_QWORD *)(v3 - 8);
  v54 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v56 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = sub_240154310();
  v55 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v58 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D08);
  v59 = *(_QWORD *)(v61 - 8);
  MEMORY[0x24BDAC7A8](v61);
  v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  *(_QWORD *)v8 = 0;
  v52 = (uint64_t *)v8;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  *(_QWORD *)v9 = 0;
  v51 = (uint64_t *)v9;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v11 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  v13 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  *(_QWORD *)v13 = 0;
  *(_BYTE *)(v13 + 8) = 1;
  v50 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_isObjectType) = 0;
  v62 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_crop) = 0;
  v63 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint;
  v64 = a1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprint) = 0;
  v66 = v1;
  v14 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_faceprintConfidence;
  *(_QWORD *)v14 = 0;
  *(_BYTE *)(v14 + 8) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C2F00();
  v60 = v7;
  v15 = v65;
  sub_240155024();
  if (v15)
  {
    v19 = (uint64_t)v64;
    v45 = v66;
    v20 = v63;
    swift_release();

    type metadata accessor for DKFaceObservation(0);
    swift_deallocPartialClassInstance();
    v46 = v19;
  }
  else
  {
    v16 = v56;
    v65 = (uint64_t *)v10;
    v49 = (uint64_t *)v11;
    v48 = (uint64_t *)v12;
    v47 = (uint64_t *)v13;
    LOBYTE(v67) = 0;
    sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v17 = v57;
    v18 = v58;
    sub_240154DFC();
    v22 = v66;
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v66 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, v18, v17);
    LOBYTE(v67) = 1;
    sub_2400707A8(&qword_256FB8D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v23 = v54;
    sub_240154DFC();
    (*(void (**)(uint64_t, char *, uint64_t))(v53 + 32))(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, v16, v23);
    type metadata accessor for CGRect(0);
    v69 = 2;
    sub_2400707A8(&qword_256FB6880, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    v24 = (_OWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
    v25 = v68;
    *v24 = v67;
    v24[1] = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CF0);
    v69 = 3;
    sub_2400C2F44(&qword_256FB8D18, (uint64_t (*)(void))sub_2400C2FF0, MEMORY[0x24BEE12D0]);
    sub_240154DFC();
    *(_QWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = v67;
    LOBYTE(v67) = 4;
    v26 = sub_240154DC0();
    v27 = v52;
    *v52 = v26;
    *((_BYTE *)v27 + 8) = v28 & 1;
    LOBYTE(v67) = 5;
    v29 = sub_240154DC0();
    v30 = v51;
    *v51 = v29;
    *((_BYTE *)v30 + 8) = v31 & 1;
    LOBYTE(v67) = 6;
    v32 = sub_240154DB4();
    v33 = v65;
    *v65 = v32;
    *((_BYTE *)v33 + 8) = v34 & 1;
    LOBYTE(v67) = 7;
    v35 = sub_240154DB4();
    v36 = v49;
    *v49 = v35;
    *((_BYTE *)v36 + 8) = v37 & 1;
    LOBYTE(v67) = 8;
    v38 = sub_240154DB4();
    v39 = v48;
    *v48 = v38;
    *((_BYTE *)v39 + 8) = v40 & 1;
    LOBYTE(v67) = 9;
    v41 = sub_240154DB4();
    v42 = v47;
    *v47 = v41;
    *((_BYTE *)v42 + 8) = v43 & 1;
    LOBYTE(v67) = 10;
    v44 = sub_240154DD8();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v61);
    v45 = v66;
    *(_BYTE *)(v66 + v50) = v44 & 1;
    v46 = (uint64_t)v64;
  }
  __swift_destroy_boxed_opaque_existential_1(v46);
  return v45;
}

uint64_t sub_2400BDEEC@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400BDF00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400BDF14())()
{
  return nullsub_1;
}

double sub_2400BDF30(uint64_t a1, uint64_t a2)
{
  return sub_2400C2270(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
}

void sub_2400BDF3C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_2400C2294(a3, a4, a5, a6, a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect);
}

uint64_t (*sub_2400BDF48())()
{
  return nullsub_1;
}

uint64_t sub_2400BDF64()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400BDF78(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400BDF94())()
{
  return nullsub_1;
}

uint64_t sub_2400BDFB0()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
}

uint64_t sub_2400BDFCC(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BDFEC())()
{
  return nullsub_1;
}

uint64_t sub_2400BE008()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
}

uint64_t sub_2400BE024(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BE044())()
{
  return nullsub_1;
}

uint64_t sub_2400BE060()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
}

uint64_t sub_2400BE07C(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BE09C())()
{
  return nullsub_1;
}

uint64_t sub_2400BE0B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKFaceObservation, (uint64_t (*)(uint64_t))DKFaceObservation.init(from:), a2);
}

uint64_t sub_2400BE0DC(_QWORD *a1)
{
  return sub_2400BD364(a1);
}

uint64_t sub_2400BE0FC@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400BE110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400BE124())()
{
  return nullsub_1;
}

uint64_t sub_2400BE140@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKFaceObservation(0);
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400BE180@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400BE194(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400BE1A8())()
{
  return nullsub_1;
}

uint64_t sub_2400BE1C0@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400BE1D4(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400BE1E8())()
{
  return nullsub_1;
}

double sub_2400BE200()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
}

_QWORD *sub_2400BE20C(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2400BE218())()
{
  return nullsub_1;
}

uint64_t sub_2400BE230()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400BE240(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400BE258())()
{
  return nullsub_1;
}

uint64_t sub_2400BE270()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
}

uint64_t sub_2400BE288(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BE2A4())()
{
  return nullsub_1;
}

uint64_t sub_2400BE2BC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
}

uint64_t sub_2400BE2D4(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BE2F0())()
{
  return nullsub_1;
}

uint64_t sub_2400BE308()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
}

uint64_t sub_2400BE320(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BE33C())()
{
  return nullsub_1;
}

uint64_t sub_2400BE354(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400BE380 + 4 * byte_240159180[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400BE380()
{
  return 1684632949;
}

uint64_t sub_2400BE38C()
{
  return 1952671090;
}

unint64_t sub_2400BE398()
{
  return 0xD000000000000013;
}

uint64_t sub_2400BE3B4()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400BE3D0()
{
  return 0x644970756F7267;
}

uint64_t sub_2400BE3E8()
{
  return 0x65636E6174736964;
}

uint64_t sub_2400BE400(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2400CCDC8(*a1, *a2);
}

void sub_2400BE40C()
{
  char *v0;

  sub_2400BA10C(0, *v0);
}

void sub_2400BE428(uint64_t a1)
{
  char *v1;

  sub_2400B9F34(a1, *v1);
}

void sub_2400BE440(uint64_t a1)
{
  char *v1;

  sub_2400BA10C(a1, *v1);
}

uint64_t sub_2400BE458@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400C6BC8();
  *a1 = result;
  return result;
}

uint64_t sub_2400BE48C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2400BE354(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2400BE4B4()
{
  unsigned __int8 *v0;

  return sub_2400BF5DC(*v0);
}

uint64_t sub_2400BE4CC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400C6BC8();
  *a1 = result;
  return result;
}

void sub_2400BE4F8(_BYTE *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_2400BE504()
{
  sub_2400C3034();
  return sub_240155048();
}

uint64_t sub_2400BE52C()
{
  sub_2400C3034();
  return sub_240155054();
}

uint64_t DKBodyObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13)
{
  uint64_t v13;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double *v30;

  v22 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  v23 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  *(_QWORD *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
  *(_QWORD *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
  v24 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprintConfidence;
  *(_QWORD *)v24 = 0;
  *(_BYTE *)(v24 + 8) = 1;
  v25 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  v26 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time;
  v27 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v26, a1, v27);
  v28 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid;
  v29 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a2, v29);
  v30 = (double *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
  *v30 = a9;
  v30[1] = a10;
  v30[2] = a11;
  v30[3] = a12;
  *(_QWORD *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = a3;
  *(_QWORD *)v22 = a4;
  *(_BYTE *)(v22 + 8) = a5 & 1;
  *(_QWORD *)v23 = a6;
  *(_BYTE *)(v23 + 8) = a7 & 1;
  *(_QWORD *)v25 = a8;
  *(_BYTE *)(v25 + 8) = a13 & 1;
  return v13;
}

uint64_t DKBodyObservation.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid;
  v4 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t DKBodyObservation.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid;
  v4 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2400BE820(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char v27;

  v2 = sub_24015434C();
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v20 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D28);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C3034();
  v12 = v23;
  sub_240155030();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, v4);
  LOBYTE(v25) = 0;
  sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v13 = v24;
  sub_240154E80();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v13)
  {
    v15 = v20;
    v14 = v21;
    v16 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v22);
    LOBYTE(v25) = 1;
    sub_2400707A8(&qword_256FB8CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
    v18 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect + 16);
    v25 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
    v26 = v18;
    v27 = 2;
    type metadata accessor for CGRect(0);
    sub_2400707A8(&qword_256FB67A8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_240154E80();
    *(_QWORD *)&v25 = *(_QWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences);
    v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CF0);
    sub_2400C2F44(&qword_256FB8CF8, (uint64_t (*)(void))sub_2400C2FAC, MEMORY[0x24BEE12A0]);
    sub_240154E80();
    LOBYTE(v25) = 4;
    sub_240154E44();
    LOBYTE(v25) = 5;
    sub_240154E44();
    LOBYTE(v25) = 6;
    sub_240154E38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t DKBodyObservation.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKBodyObservation.init(from:));
}

uint64_t DKBodyObservation.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(void);
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  uint64_t *v29;
  char v30;
  uint64_t v31;
  char v32;
  char v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  char v54;

  v2 = v1;
  v43 = sub_24015434C();
  v40 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = sub_240154310();
  v41 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v44 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D38);
  v6 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v48 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_crop) = 0;
  v49 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint;
  v50 = a1;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprint) = 0;
  v11 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_torsoprintConfidence;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  v12 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  *(_QWORD *)v12 = 0;
  *(_BYTE *)(v12 + 8) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C3034();
  v45 = v8;
  v13 = v51;
  sub_240155024();
  if (v13)
  {
    v23 = v49;
    v22 = (uint64_t)v50;
    swift_release();

    type metadata accessor for DKBodyObservation(0);
    swift_deallocPartialClassInstance();
    v35 = v22;
  }
  else
  {
    v15 = v42;
    v14 = v43;
    v38 = (uint64_t *)v10;
    v39 = (uint64_t *)v9;
    v37 = (uint64_t *)v12;
    v51 = v6;
    LOBYTE(v52) = 0;
    sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v16 = v45;
    v17 = v46;
    sub_240154DFC();
    v18 = *(void (**)(void))(v41 + 32);
    v36 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time;
    v18();
    LOBYTE(v52) = 1;
    sub_2400707A8(&qword_256FB8D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_240154DFC();
    (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, v15, v14);
    type metadata accessor for CGRect(0);
    v54 = 2;
    sub_2400707A8(&qword_256FB6880, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    v19 = (_OWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
    v20 = v53;
    *v19 = v52;
    v19[1] = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CF0);
    v54 = 3;
    sub_2400C2F44(&qword_256FB8D18, (uint64_t (*)(void))sub_2400C2FF0, MEMORY[0x24BEE12D0]);
    sub_240154DFC();
    v21 = v51;
    *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = v52;
    LOBYTE(v52) = 4;
    v25 = sub_240154DC0();
    v26 = v39;
    *v39 = v25;
    *((_BYTE *)v26 + 8) = v27 & 1;
    LOBYTE(v52) = 5;
    v28 = sub_240154DC0();
    v29 = v38;
    *v38 = v28;
    *((_BYTE *)v29 + 8) = v30 & 1;
    LOBYTE(v52) = 6;
    v31 = sub_240154DB4();
    v33 = v32;
    (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v17);
    v34 = v37;
    *v37 = v31;
    *((_BYTE *)v34 + 8) = v33 & 1;
    v35 = (uint64_t)v50;
  }
  __swift_destroy_boxed_opaque_existential_1(v35);
  return v2;
}

uint64_t sub_2400BF174@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400BF188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400BF19C())()
{
  return nullsub_1;
}

double sub_2400BF1B8(uint64_t a1, uint64_t a2)
{
  return sub_2400C2270(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
}

void sub_2400BF1C4(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_2400C2294(a3, a4, a5, a6, a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect);
}

uint64_t (*sub_2400BF1D0())()
{
  return nullsub_1;
}

uint64_t sub_2400BF1EC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400BF200(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400BF21C())()
{
  return nullsub_1;
}

uint64_t sub_2400BF238()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
}

uint64_t sub_2400BF254(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BF274())()
{
  return nullsub_1;
}

uint64_t sub_2400BF290()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
}

uint64_t sub_2400BF2AC(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BF2CC())()
{
  return nullsub_1;
}

uint64_t sub_2400BF2E8()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
}

uint64_t sub_2400BF304(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BF324())()
{
  return nullsub_1;
}

uint64_t sub_2400BF340@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKBodyObservation, (uint64_t (*)(uint64_t))DKBodyObservation.init(from:), a2);
}

uint64_t sub_2400BF364(_QWORD *a1)
{
  return sub_2400BE820(a1);
}

uint64_t sub_2400BF384@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400BF398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400BF3AC())()
{
  return nullsub_1;
}

uint64_t sub_2400BF3C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKBodyObservation(0);
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400BF408@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400BF41C(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400BF430())()
{
  return nullsub_1;
}

uint64_t sub_2400BF448@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400BF45C(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400BF470())()
{
  return nullsub_1;
}

double sub_2400BF488()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
}

_QWORD *sub_2400BF494(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2400BF4A0())()
{
  return nullsub_1;
}

uint64_t sub_2400BF4B8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400BF4C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400BF4E0())()
{
  return nullsub_1;
}

uint64_t sub_2400BF4F8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId);
}

uint64_t sub_2400BF510(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BF52C())()
{
  return nullsub_1;
}

uint64_t sub_2400BF544()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId);
}

uint64_t sub_2400BF55C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BF578())()
{
  return nullsub_1;
}

uint64_t sub_2400BF590()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance);
}

uint64_t sub_2400BF5A8(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400BF5C4())()
{
  return nullsub_1;
}

uint64_t sub_2400BF5DC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400BF608 + 4 * byte_240159187[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400BF608()
{
  return 1684632949;
}

uint64_t sub_2400BF614()
{
  return 1952671090;
}

unint64_t sub_2400BF620()
{
  return 0xD000000000000013;
}

uint64_t sub_2400BF63C()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400BF658()
{
  return 0x644970756F7267;
}

uint64_t sub_2400BF670()
{
  return 0x65636E6174736964;
}

uint64_t sub_2400BF688@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400C6BC8();
  *a1 = result;
  return result;
}

uint64_t sub_2400BF6BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400C6BC8();
  *a1 = result;
  return result;
}

uint64_t sub_2400BF6E8()
{
  sub_2400C3078();
  return sub_240155048();
}

uint64_t sub_2400BF710()
{
  sub_2400C3078();
  return sub_240155054();
}

uint64_t DKObjectObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;

  v21 = swift_allocObject();
  v22 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  v23 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_crop) = 0;
  v24 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  v25 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time;
  v26 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a1, v26);
  v27 = v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid;
  v28 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a2, v28);
  v29 = (double *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
  *v29 = a9;
  v29[1] = a10;
  v29[2] = a11;
  v29[3] = a12;
  *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = a3;
  *(_QWORD *)v22 = a4;
  *(_BYTE *)(v22 + 8) = a5 & 1;
  *(_QWORD *)v23 = a6;
  *(_BYTE *)(v23 + 8) = a7 & 1;
  *(_QWORD *)v24 = a8;
  *(_BYTE *)(v24 + 8) = a13 & 1;
  return v21;
}

uint64_t DKObjectObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, char a13)
{
  uint64_t v13;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double *v29;

  v22 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  v23 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(_QWORD *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_crop) = 0;
  v24 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  v25 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time;
  v26 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a1, v26);
  v27 = v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid;
  v28 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a2, v28);
  v29 = (double *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
  *v29 = a9;
  v29[1] = a10;
  v29[2] = a11;
  v29[3] = a12;
  *(_QWORD *)(v13 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = a3;
  *(_QWORD *)v22 = a4;
  *(_BYTE *)(v22 + 8) = a5 & 1;
  *(_QWORD *)v23 = a6;
  *(_BYTE *)(v23 + 8) = a7 & 1;
  *(_QWORD *)v24 = a8;
  *(_BYTE *)(v24 + 8) = a13 & 1;
  return v13;
}

uint64_t DKObjectObservation.deinit()
{
  return sub_2400C16EC(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid);
}

uint64_t DKObjectObservation.__deallocating_deinit()
{
  return sub_2400C17A8(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid);
}

uint64_t sub_2400BFA5C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char v27;

  v2 = sub_24015434C();
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v20 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D40);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C3078();
  v12 = v23;
  sub_240155030();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, v4);
  LOBYTE(v25) = 0;
  sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v13 = v24;
  sub_240154E80();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v13)
  {
    v15 = v20;
    v14 = v21;
    v16 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, v22);
    LOBYTE(v25) = 1;
    sub_2400707A8(&qword_256FB8CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
    v18 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect + 16);
    v25 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
    v26 = v18;
    v27 = 2;
    type metadata accessor for CGRect(0);
    sub_2400707A8(&qword_256FB67A8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_240154E80();
    *(_QWORD *)&v25 = *(_QWORD *)(v12
                                + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences);
    v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CF0);
    sub_2400C2F44(&qword_256FB8CF8, (uint64_t (*)(void))sub_2400C2FAC, MEMORY[0x24BEE12A0]);
    sub_240154E80();
    LOBYTE(v25) = 4;
    sub_240154E44();
    LOBYTE(v25) = 5;
    sub_240154E44();
    LOBYTE(v25) = 6;
    sub_240154E38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t DKObjectObservation.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKObjectObservation.init(from:));
}

uint64_t DKObjectObservation.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  char v49;

  v39 = sub_24015434C();
  v36 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  v37 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = sub_240154310();
  v38 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v42 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D50);
  v5 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  *(_QWORD *)v8 = 0;
  *(_BYTE *)(v8 + 8) = 1;
  v9 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v43 = OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_crop;
  v44 = a1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_crop) = 0;
  v46 = v1;
  v10 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C3078();
  v11 = v45;
  sub_240155024();
  if (v11)
  {
    v14 = (uint64_t)v44;
    v32 = v46;
    swift_release();
    type metadata accessor for DKObjectObservation(0);
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1(v14);
  }
  else
  {
    v34 = (uint64_t *)v9;
    v35 = (uint64_t *)v8;
    v33 = (uint64_t *)v10;
    v12 = v39;
    v45 = v5;
    LOBYTE(v47) = 0;
    sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v13 = v40;
    sub_240154DFC();
    v16 = v46;
    v17 = (char *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time);
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, v42, v13);
    LOBYTE(v47) = 1;
    sub_2400707A8(&qword_256FB8D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v18 = v37;
    sub_240154DFC();
    v42 = v17;
    (*(void (**)(uint64_t, char *, uint64_t))(v36 + 32))(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, v18, v12);
    type metadata accessor for CGRect(0);
    v49 = 2;
    sub_2400707A8(&qword_256FB6880, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    v19 = v41;
    sub_240154DFC();
    v20 = (_OWORD *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
    v21 = v48;
    *v20 = v47;
    v20[1] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CF0);
    v49 = 3;
    sub_2400C2F44(&qword_256FB8D18, (uint64_t (*)(void))sub_2400C2FF0, MEMORY[0x24BEE12D0]);
    sub_240154DFC();
    v22 = v45;
    *(_QWORD *)(v16 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = v47;
    LOBYTE(v47) = 4;
    v23 = sub_240154DC0();
    v24 = v35;
    *v35 = v23;
    *((_BYTE *)v24 + 8) = v25 & 1;
    LOBYTE(v47) = 5;
    v26 = sub_240154DC0();
    v27 = v34;
    *v34 = v26;
    *((_BYTE *)v27 + 8) = v28 & 1;
    LOBYTE(v47) = 6;
    v29 = sub_240154DB4();
    LOBYTE(v13) = v30;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v19);
    v31 = v33;
    *v33 = v29;
    *((_BYTE *)v31 + 8) = v13 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
    return v46;
  }
  return v32;
}

uint64_t sub_2400C03B8@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400C03CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400C03E0())()
{
  return nullsub_1;
}

double sub_2400C03FC(uint64_t a1, uint64_t a2)
{
  return sub_2400C2270(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
}

void sub_2400C0408(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_2400C2294(a3, a4, a5, a6, a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect);
}

uint64_t (*sub_2400C0414())()
{
  return nullsub_1;
}

uint64_t sub_2400C0430()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C0444(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400C0460())()
{
  return nullsub_1;
}

uint64_t sub_2400C047C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId);
}

uint64_t sub_2400C0498(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C04B8())()
{
  return nullsub_1;
}

uint64_t sub_2400C04D4()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId);
}

uint64_t sub_2400C04F0(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C0510())()
{
  return nullsub_1;
}

uint64_t sub_2400C052C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance);
}

uint64_t sub_2400C0548(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C0568())()
{
  return nullsub_1;
}

uint64_t sub_2400C0584@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKObjectObservation, (uint64_t (*)(uint64_t))DKObjectObservation.init(from:), a2);
}

uint64_t sub_2400C05A8(_QWORD *a1)
{
  return sub_2400BFA5C(a1);
}

uint64_t sub_2400C05C8@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400C05DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400C05F0())()
{
  return nullsub_1;
}

uint64_t sub_2400C060C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKObjectObservation(0);
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400C064C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x646E61487466654CLL;
  if (*v0 != 1)
    v1 = 0x6E61487468676952;
  if (*v0)
    return v1;
  else
    return 0x6E776F6E6B6E55;
}

uint64_t sub_2400C06AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400C6C0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400C06D0()
{
  sub_2400C30D0();
  return sub_240155048();
}

uint64_t sub_2400C06F8()
{
  sub_2400C30D0();
  return sub_240155054();
}

uint64_t sub_2400C0720()
{
  sub_2400C3158();
  return sub_240155048();
}

uint64_t sub_2400C0748()
{
  sub_2400C3158();
  return sub_240155054();
}

uint64_t sub_2400C0770()
{
  sub_2400C3114();
  return sub_240155048();
}

uint64_t sub_2400C0798()
{
  sub_2400C3114();
  return sub_240155054();
}

uint64_t sub_2400C07C0()
{
  sub_2400C319C();
  return sub_240155048();
}

uint64_t sub_2400C07E8()
{
  sub_2400C319C();
  return sub_240155054();
}

uint64_t DKHandObservation.Chirality.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D58);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v21 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D60);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D68);
  v9 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D70);
  v24 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C30D0();
  sub_240155030();
  if (v15)
  {
    if (v15 == 1)
    {
      v26 = 1;
      sub_2400C3158();
      sub_240154E20();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    }
    else
    {
      v27 = 2;
      sub_2400C3114();
      v16 = v21;
      sub_240154E20();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v23);
    }
  }
  else
  {
    v25 = 0;
    sub_2400C319C();
    sub_240154E20();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v14, v12);
}

uint64_t DKHandObservation.Chirality.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  char *v39;
  char *v40;
  _QWORD *v41;
  char v42;
  char v43;
  char v44;

  v38 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8D98);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x24BDAC7A8](v37);
  v40 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8DA0);
  v35 = *(_QWORD *)(v4 - 8);
  v36 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v39 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8DA8);
  v6 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8DB0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C30D0();
  v13 = v41;
  sub_240155024();
  if (v13)
    goto LABEL_7;
  v31 = v6;
  v32 = v10;
  v14 = v39;
  v15 = v40;
  v41 = a1;
  v16 = v12;
  v17 = sub_240154E08();
  v18 = v9;
  if (*(_QWORD *)(v17 + 16) != 1)
  {
    v23 = sub_240154BC8();
    swift_allocError();
    v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v25 = &type metadata for DKHandObservation.Chirality;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x24BEE26D0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    a1 = v41;
LABEL_7:
    v26 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v26);
  }
  v19 = *(unsigned __int8 *)(v17 + 32);
  if (*(_BYTE *)(v17 + 32))
  {
    if (v19 == 1)
    {
      v43 = 1;
      sub_2400C3158();
      v20 = v9;
      sub_240154D90();
      v21 = v38;
      v22 = v32;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v14, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v20);
    }
    else
    {
      v44 = 2;
      sub_2400C3114();
      v28 = v15;
      sub_240154D90();
      v21 = v38;
      v29 = v32;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v28, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    }
  }
  else
  {
    v42 = 0;
    sub_2400C319C();
    sub_240154D90();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v9);
    v21 = v38;
  }
  *v21 = v19;
  v26 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v26);
}

uint64_t sub_2400C0EBC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return DKHandObservation.Chirality.init(from:)(a1, a2);
}

uint64_t sub_2400C0ED0(_QWORD *a1)
{
  return DKHandObservation.Chirality.encode(to:)(a1);
}

uint64_t sub_2400C0EE4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400C0EF8(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400C0F0C())()
{
  return nullsub_1;
}

uint64_t sub_2400C0F24@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400C0F38(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400C0F4C())()
{
  return nullsub_1;
}

double sub_2400C0F64()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
}

double sub_2400C0F70(_QWORD *a1)
{
  uint64_t v1;

  return *(double *)(v1 + *a1);
}

_QWORD *sub_2400C0F84(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect, a1, a2, a3, a4);
}

_QWORD *sub_2400C0F90(_QWORD *result, double a2, double a3, double a4, double a5)
{
  uint64_t v5;
  double *v6;

  v6 = (double *)(v5 + *result);
  *v6 = a2;
  v6[1] = a3;
  v6[2] = a4;
  v6[3] = a5;
  return result;
}

uint64_t (*sub_2400C0FA4())()
{
  return nullsub_1;
}

uint64_t sub_2400C0FBC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C0FCC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400C0FE4())()
{
  return nullsub_1;
}

uint64_t sub_2400C0FFC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
}

uint64_t sub_2400C1014(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C1030())()
{
  return nullsub_1;
}

uint64_t sub_2400C1048()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
}

uint64_t sub_2400C1060(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C107C())()
{
  return nullsub_1;
}

void sub_2400C1094(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
}

_BYTE *sub_2400C10A8(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = *result;
  return result;
}

uint64_t (*sub_2400C10BC())()
{
  return nullsub_1;
}

uint64_t sub_2400C10D4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance);
}

uint64_t sub_2400C10EC(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C1108())()
{
  return nullsub_1;
}

uint64_t sub_2400C1120(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400C114C + 4 * byte_24015918E[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400C114C()
{
  return 1684632949;
}

uint64_t sub_2400C1158()
{
  return 1952671090;
}

unint64_t sub_2400C1164()
{
  return 0xD000000000000013;
}

uint64_t sub_2400C1180()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400C119C()
{
  return 0x644970756F7267;
}

uint64_t sub_2400C11B4()
{
  return 0x74696C6172696863;
}

uint64_t sub_2400C11D4()
{
  return 0x65636E6174736964;
}

uint64_t sub_2400C11EC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400C1218 + 4 * byte_240159196[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400C1218()
{
  return 1684632949;
}

uint64_t sub_2400C1224()
{
  return 1952671090;
}

unint64_t sub_2400C1230()
{
  return 0xD000000000000013;
}

uint64_t sub_2400C124C()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400C1268()
{
  return 0x644970756F7267;
}

uint64_t sub_2400C1280()
{
  return 0x74696C6172696863;
}

uint64_t sub_2400C12A0()
{
  return 0x65636E6174736964;
}

void sub_2400C12B8(char *a1)
{
  sub_2400CCECC(*a1);
}

void sub_2400C12C4()
{
  char *v0;

  sub_2400BA000(0, *v0);
}

void sub_2400C12D0(uint64_t a1)
{
  char *v1;

  sub_2400B9E48(a1, *v1);
}

void sub_2400C12D8(uint64_t a1)
{
  char *v1;

  sub_2400BA000(a1, *v1);
}

uint64_t sub_2400C12E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400C6D6C();
  *a1 = result;
  return result;
}

uint64_t sub_2400C130C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2400C1120(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2400C1334()
{
  unsigned __int8 *v0;

  return sub_2400C11EC(*v0);
}

uint64_t sub_2400C133C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400C6D6C();
  *a1 = result;
  return result;
}

uint64_t sub_2400C1360()
{
  sub_2400C31E0();
  return sub_240155048();
}

uint64_t sub_2400C1388()
{
  sub_2400C31E0();
  return sub_240155054();
}

uint64_t DKHandObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:chirality:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, char *a8, double a9, double a10, double a11, double a12, uint64_t a13, char a14)
{
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;

  v23 = swift_allocObject();
  v24 = *a8;
  v25 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  v26 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
  v27 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  v28 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time;
  v29 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a1, v29);
  v30 = v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid;
  v31 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v30, a2, v31);
  v32 = (double *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
  *v32 = a9;
  v32[1] = a10;
  v32[2] = a11;
  v32[3] = a12;
  *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = a3;
  *(_QWORD *)v25 = a4;
  *(_BYTE *)(v25 + 8) = a5 & 1;
  *(_QWORD *)v26 = a6;
  *(_BYTE *)(v26 + 8) = a7 & 1;
  *(_BYTE *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = v24;
  *(_QWORD *)v27 = a13;
  *(_BYTE *)(v27 + 8) = a14 & 1;
  return v23;
}

uint64_t DKHandObservation.init(time:uuid:rect:identityConfidences:trackerId:groupId:chirality:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7, char *a8, double a9, double a10, double a11, double a12, uint64_t a13, char a14)
{
  uint64_t v14;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  double *v31;

  v23 = *a8;
  v24 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  v25 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
  v26 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  v27 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time;
  v28 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a1, v28);
  v29 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid;
  v30 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v29, a2, v30);
  v31 = (double *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
  *v31 = a9;
  v31[1] = a10;
  v31[2] = a11;
  v31[3] = a12;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = a3;
  *(_QWORD *)v24 = a4;
  *(_BYTE *)(v24 + 8) = a5 & 1;
  *(_QWORD *)v25 = a6;
  *(_BYTE *)(v25 + 8) = a7 & 1;
  *(_BYTE *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = v23;
  *(_QWORD *)v26 = a13;
  *(_BYTE *)(v26 + 8) = a14 & 1;
  return v14;
}

uint64_t DKHandObservation.deinit()
{
  return sub_2400C16EC(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid);
}

uint64_t sub_2400C16EC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = v2 + *a1;
  v5 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v2 + *a2;
  v7 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t DKHandObservation.__deallocating_deinit()
{
  return sub_2400C17A8(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid);
}

uint64_t sub_2400C17A8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = v2 + *a1;
  v5 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v2 + *a2;
  v7 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2400C184C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  char v27;

  v2 = sub_24015434C();
  v21 = *(_QWORD *)(v2 - 8);
  v22 = v2;
  MEMORY[0x24BDAC7A8](v2);
  v20 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8DB8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C31E0();
  v12 = v23;
  sub_240155030();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, v4);
  LOBYTE(v25) = 0;
  sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v13 = v24;
  sub_240154E80();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (!v13)
  {
    v15 = v20;
    v14 = v21;
    v16 = v22;
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, v22);
    LOBYTE(v25) = 1;
    sub_2400707A8(&qword_256FB8CE8, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v15, v16);
    v18 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect + 16);
    v25 = *(_OWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
    v26 = v18;
    v27 = 2;
    type metadata accessor for CGRect(0);
    sub_2400707A8(&qword_256FB67A8, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    sub_240154E80();
    *(_QWORD *)&v25 = *(_QWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences);
    v27 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CF0);
    sub_2400C2F44(&qword_256FB8CF8, (uint64_t (*)(void))sub_2400C2FAC, MEMORY[0x24BEE12A0]);
    sub_240154E80();
    LOBYTE(v25) = 4;
    sub_240154E44();
    LOBYTE(v25) = 5;
    sub_240154E44();
    LOBYTE(v25) = *(_BYTE *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
    v27 = 6;
    sub_2400C3224();
    sub_240154E80();
    LOBYTE(v25) = 7;
    sub_240154E38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t DKHandObservation.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKHandObservation.init(from:));
}

uint64_t DKHandObservation.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  __int128 v21;
  uint64_t v22;
  uint64_t *v23;
  char v24;
  uint64_t v25;
  uint64_t *v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  __int128 v49;
  __int128 v50;
  char v51;

  v3 = sub_24015434C();
  v39 = *(_QWORD *)(v3 - 8);
  v40 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v38 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = sub_240154310();
  v37 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v42 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8DD0);
  v6 = *(_QWORD *)(v44 - 8);
  MEMORY[0x24BDAC7A8](v44);
  v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  *(_QWORD *)v9 = 0;
  *(_BYTE *)(v9 + 8) = 1;
  v10 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(_QWORD *)v10 = 0;
  *(_BYTE *)(v10 + 8) = 1;
  v45 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop;
  v46 = a1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_crop) = 0;
  v47 = v1;
  v11 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400C31E0();
  v43 = v8;
  v12 = v48;
  sub_240155024();
  if (v12)
  {
    v29 = (uint64_t)v46;
    v19 = v47;
    swift_release();
    type metadata accessor for DKHandObservation(0);
    swift_deallocPartialClassInstance();
  }
  else
  {
    v13 = v38;
    v14 = v39;
    v48 = (uint64_t *)v9;
    v34 = (uint64_t *)v11;
    v35 = (uint64_t *)v10;
    v36 = v6;
    v15 = v40;
    LOBYTE(v49) = 0;
    sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v16 = v41;
    sub_240154DFC();
    v18 = v47;
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v47 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, v42, v16);
    LOBYTE(v49) = 1;
    sub_2400707A8(&qword_256FB8D10, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    sub_240154DFC();
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, v13, v15);
    type metadata accessor for CGRect(0);
    v51 = 2;
    sub_2400707A8(&qword_256FB6880, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    v19 = v18;
    v20 = (_OWORD *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
    v21 = v50;
    *v20 = v49;
    v20[1] = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB8CF0);
    v51 = 3;
    sub_2400C2F44(&qword_256FB8D18, (uint64_t (*)(void))sub_2400C2FF0, MEMORY[0x24BEE12D0]);
    sub_240154DFC();
    *(_QWORD *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = v49;
    LOBYTE(v49) = 4;
    v22 = sub_240154DC0();
    v23 = v48;
    *v48 = v22;
    *((_BYTE *)v23 + 8) = v24 & 1;
    LOBYTE(v49) = 5;
    v25 = sub_240154DC0();
    v26 = v35;
    *v35 = v25;
    *((_BYTE *)v26 + 8) = v27 & 1;
    v51 = 6;
    sub_2400C3268();
    sub_240154DFC();
    *(_BYTE *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = v49;
    LOBYTE(v49) = 7;
    v28 = sub_240154DB4();
    v29 = (uint64_t)v46;
    v30 = v28;
    LOBYTE(v13) = v31;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v43, v44);
    v32 = v34;
    *v34 = v30;
    *((_BYTE *)v32 + 8) = v13 & 1;
  }
  __swift_destroy_boxed_opaque_existential_1(v29);
  return v19;
}

uint64_t sub_2400C2220@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400C2234(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400C2248())()
{
  return nullsub_1;
}

double sub_2400C2264(uint64_t a1, uint64_t a2)
{
  return sub_2400C2270(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
}

double sub_2400C2270(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;

  return *(double *)(*v3 + *a3);
}

void sub_2400C2288(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_2400C2294(a3, a4, a5, a6, a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect);
}

void sub_2400C2294(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, _QWORD *a7)
{
  _QWORD *v7;
  double *v8;

  v8 = (double *)(*v7 + *a7);
  *v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  v8[3] = a4;
}

uint64_t (*sub_2400C22AC())()
{
  return nullsub_1;
}

uint64_t sub_2400C22C8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C22DC(uint64_t a1)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400C22F8())()
{
  return nullsub_1;
}

uint64_t sub_2400C2314()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
}

uint64_t sub_2400C2330(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C2350())()
{
  return nullsub_1;
}

uint64_t sub_2400C236C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
}

uint64_t sub_2400C2388(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C23A8())()
{
  return nullsub_1;
}

uint64_t sub_2400C23C4()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance);
}

uint64_t sub_2400C23E0(uint64_t result, char a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C2400())()
{
  return nullsub_1;
}

uint64_t sub_2400C241C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKHandObservation, (uint64_t (*)(uint64_t))DKHandObservation.init(from:), a2);
}

uint64_t sub_2400C2440(_QWORD *a1)
{
  return sub_2400C184C(a1);
}

uint64_t sub_2400C2460@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400C2474@<X0>(_QWORD *a1@<X2>, uint64_t (*a2)(_QWORD)@<X3>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;

  v5 = *v3 + *a1;
  v6 = a2(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a3, v5, v6);
}

uint64_t sub_2400C24B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t sub_2400C24CC(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t (*a5)(_QWORD))
{
  _QWORD *v5;
  uint64_t v7;
  uint64_t v8;

  v7 = *v5 + *a4;
  v8 = a5(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v7, a1, v8);
}

uint64_t (*sub_2400C2510())()
{
  return nullsub_1;
}

uint64_t sub_2400C252C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKHandObservation(0);
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400C256C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), _QWORD *a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v9 = a5(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)&v14 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v14 - v11, a1, v9);
  return (*(uint64_t (**)(_QWORD, char *, uint64_t))(v10 + 40))(*a2 + *a6, v12, v9);
}

uint64_t sub_2400C2608@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400C261C(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400C2630())()
{
  return nullsub_1;
}

uint64_t sub_2400C2648()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C2658(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400C2670())()
{
  return nullsub_1;
}

void *sub_2400C2688()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image);
  v2 = v1;
  return v1;
}

void sub_2400C26B4(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image) = a1;

}

uint64_t (*sub_2400C26C8())()
{
  return nullsub_1;
}

uint64_t sub_2400C26E0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C26F4(_QWORD *a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition) = *a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400C270C())()
{
  return nullsub_1;
}

uint64_t sub_2400C2724()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize);
}

uint64_t sub_2400C273C(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = v3 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize;
  *(_QWORD *)v4 = result;
  *(_QWORD *)(v4 + 8) = a2;
  *(_BYTE *)(v4 + 16) = a3 & 1;
  return result;
}

uint64_t (*sub_2400C2758())()
{
  return nullsub_1;
}

uint64_t sub_2400C2770()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_2400C27A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID);
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400C27C4())()
{
  return nullsub_1;
}

uint64_t sub_2400C27DC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency);
}

uint64_t sub_2400C27F4(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400C2810())()
{
  return nullsub_1;
}

id DKObservationMetadata.init(time:observations:image:standPosition:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  objc_super v19;

  v8 = *a4;
  v9 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image;
  v10 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition;
  v11 = &v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize];
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 1;
  v12 = &v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  v13 = &v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = &v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
  v15 = sub_240154310();
  v16 = *(_QWORD *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  *(_QWORD *)&v4[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations] = a2;
  *(_QWORD *)&v4[v9] = a3;
  *(_QWORD *)&v4[v10] = v8;
  v19.receiver = v4;
  v19.super_class = (Class)type metadata accessor for DKObservationMetadata(0);
  v17 = objc_msgSendSuper2(&v19, sel_init);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return v17;
}

unint64_t sub_2400C293C()
{
  unint64_t result;

  result = qword_256FB8B70;
  if (!qword_256FB8B70)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AE4C, &type metadata for DKFaceDirection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8B70);
  }
  return result;
}

unint64_t sub_2400C2980()
{
  unint64_t result;

  result = qword_256FB8B78;
  if (!qword_256FB8B78)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ADFC, &type metadata for DKFaceDirection.CameraCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8B78);
  }
  return result;
}

unint64_t sub_2400C29C4()
{
  unint64_t result;

  result = qword_256FB8B80;
  if (!qword_256FB8B80)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ADAC, &type metadata for DKFaceDirection.RightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8B80);
  }
  return result;
}

unint64_t sub_2400C2A08()
{
  unint64_t result;

  result = qword_256FB8B88;
  if (!qword_256FB8B88)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AD5C, &type metadata for DKFaceDirection.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8B88);
  }
  return result;
}

unint64_t sub_2400C2A4C()
{
  unint64_t result;

  result = qword_256FB8B90;
  if (!qword_256FB8B90)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AD0C, &type metadata for DKFaceDirection.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8B90);
  }
  return result;
}

unint64_t sub_2400C2A90()
{
  unint64_t result;

  result = qword_256FB8BE0;
  if (!qword_256FB8BE0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ACBC, &type metadata for DKMotionClassification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8BE0);
  }
  return result;
}

unint64_t sub_2400C2AD4()
{
  unint64_t result;

  result = qword_256FB8BE8;
  if (!qword_256FB8BE8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AC6C, &type metadata for DKMotionClassification.WalkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8BE8);
  }
  return result;
}

unint64_t sub_2400C2B18()
{
  unint64_t result;

  result = qword_256FB8BF0;
  if (!qword_256FB8BF0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AC1C, &type metadata for DKMotionClassification.FidgetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8BF0);
  }
  return result;
}

unint64_t sub_2400C2B5C()
{
  unint64_t result;

  result = qword_256FB8BF8;
  if (!qword_256FB8BF8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015ABCC, &type metadata for DKMotionClassification.StationaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8BF8);
  }
  return result;
}

unint64_t sub_2400C2BA0()
{
  unint64_t result;

  result = qword_256FB8C48;
  if (!qword_256FB8C48)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AB7C, &type metadata for DKObservationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8C48);
  }
  return result;
}

unint64_t sub_2400C2BE4()
{
  unint64_t result;

  result = qword_256FB8C50;
  if (!qword_256FB8C50)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AB2C, &type metadata for DKObservationType.ObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8C50);
  }
  return result;
}

unint64_t sub_2400C2C28()
{
  unint64_t result;

  result = qword_256FB8C58;
  if (!qword_256FB8C58)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AADC, &type metadata for DKObservationType.HandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8C58);
  }
  return result;
}

unint64_t sub_2400C2C6C()
{
  unint64_t result;

  result = qword_256FB8C60;
  if (!qword_256FB8C60)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AA8C, &type metadata for DKObservationType.BodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8C60);
  }
  return result;
}

unint64_t sub_2400C2CB0()
{
  unint64_t result;

  result = qword_256FB8C68;
  if (!qword_256FB8C68)
  {
    result = MEMORY[0x24267E0BC](&unk_24015AA3C, &type metadata for DKObservationType.FaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8C68);
  }
  return result;
}

unint64_t sub_2400C2CF4()
{
  unint64_t result;

  result = qword_256FB8CA0;
  if (!qword_256FB8CA0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A9EC, &type metadata for DKObservationGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8CA0);
  }
  return result;
}

uint64_t type metadata accessor for DKFaceObservation(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FB8E58);
}

uint64_t type metadata accessor for DKBodyObservation(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FB90D0);
}

unint64_t sub_2400C2D60()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB8CB0;
  if (!qword_256FB8CB0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB8CA8);
    v2 = sub_2400C2E7C(&qword_256FB8CB8, &qword_256FB6730, (uint64_t)&protocol conformance descriptor for DKHandObservation, MEMORY[0x24BEE4AA8]);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12A0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB8CB0);
  }
  return result;
}

uint64_t type metadata accessor for DKHandObservation(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FB9480);
}

unint64_t sub_2400C2DF8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;

  result = qword_256FB8CC8;
  if (!qword_256FB8CC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB8CA8);
    v2 = sub_2400C2E7C(&qword_256FB8CD0, &qword_256FB6828, (uint64_t)&protocol conformance descriptor for DKHandObservation, MEMORY[0x24BEE4AC0]);
    result = MEMORY[0x24267E0BC](MEMORY[0x24BEE12D0], v1, &v2);
    atomic_store(result, (unint64_t *)&qword_256FB8CC8);
  }
  return result;
}

uint64_t sub_2400C2E7C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB4EA8);
    v10 = sub_2400707A8(a2, type metadata accessor for DKHandObservation, a3);
    result = MEMORY[0x24267E0BC](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2400C2F00()
{
  unint64_t result;

  result = qword_256FB8CE0;
  if (!qword_256FB8CE0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A99C, &type metadata for DKFaceObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8CE0);
  }
  return result;
}

uint64_t sub_2400C2F44(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FB8CF0);
    v8 = a2();
    result = MEMORY[0x24267E0BC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2400C2FAC()
{
  unint64_t result;

  result = qword_256FB8D00;
  if (!qword_256FB8D00)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIdentityConfidence, &type metadata for DKIdentityConfidence);
    atomic_store(result, (unint64_t *)&qword_256FB8D00);
  }
  return result;
}

unint64_t sub_2400C2FF0()
{
  unint64_t result;

  result = qword_256FB8D20;
  if (!qword_256FB8D20)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKIdentityConfidence, &type metadata for DKIdentityConfidence);
    atomic_store(result, (unint64_t *)&qword_256FB8D20);
  }
  return result;
}

unint64_t sub_2400C3034()
{
  unint64_t result;

  result = qword_256FB8D30;
  if (!qword_256FB8D30)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A94C, &type metadata for DKBodyObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8D30);
  }
  return result;
}

unint64_t sub_2400C3078()
{
  unint64_t result;

  result = qword_256FB8D48;
  if (!qword_256FB8D48)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A8FC, &type metadata for DKObjectObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8D48);
  }
  return result;
}

uint64_t type metadata accessor for DKObjectObservation(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FB92C8);
}

unint64_t sub_2400C30D0()
{
  unint64_t result;

  result = qword_256FB8D78;
  if (!qword_256FB8D78)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A8AC, &type metadata for DKHandObservation.Chirality.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8D78);
  }
  return result;
}

unint64_t sub_2400C3114()
{
  unint64_t result;

  result = qword_256FB8D80;
  if (!qword_256FB8D80)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A85C, &type metadata for DKHandObservation.Chirality.RightHandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8D80);
  }
  return result;
}

unint64_t sub_2400C3158()
{
  unint64_t result;

  result = qword_256FB8D88;
  if (!qword_256FB8D88)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A80C, &type metadata for DKHandObservation.Chirality.LeftHandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8D88);
  }
  return result;
}

unint64_t sub_2400C319C()
{
  unint64_t result;

  result = qword_256FB8D90;
  if (!qword_256FB8D90)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A7BC, &type metadata for DKHandObservation.Chirality.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8D90);
  }
  return result;
}

unint64_t sub_2400C31E0()
{
  unint64_t result;

  result = qword_256FB8DC0;
  if (!qword_256FB8DC0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A76C, &type metadata for DKHandObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB8DC0);
  }
  return result;
}

unint64_t sub_2400C3224()
{
  unint64_t result;

  result = qword_256FB8DC8;
  if (!qword_256FB8DC8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKHandObservation.Chirality, &type metadata for DKHandObservation.Chirality);
    atomic_store(result, (unint64_t *)&qword_256FB8DC8);
  }
  return result;
}

unint64_t sub_2400C3268()
{
  unint64_t result;

  result = qword_256FB8DD8;
  if (!qword_256FB8DD8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKHandObservation.Chirality, &type metadata for DKHandObservation.Chirality);
    atomic_store(result, (unint64_t *)&qword_256FB8DD8);
  }
  return result;
}

uint64_t type metadata accessor for DKObservationMetadata(uint64_t a1)
{
  return sub_240072AC4(a1, (uint64_t *)&unk_256FB9658);
}

id DKObservationMetadata.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void DKObservationMetadata.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id DKObservationMetadata.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DKObservationMetadata(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_2400C3370()
{
  unint64_t result;

  result = qword_256FB8DE0;
  if (!qword_256FB8DE0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKFaceDirection, &type metadata for DKFaceDirection);
    atomic_store(result, (unint64_t *)&qword_256FB8DE0);
  }
  return result;
}

unint64_t sub_2400C33B8()
{
  unint64_t result;

  result = qword_256FB8DE8;
  if (!qword_256FB8DE8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKMotionClassification, &type metadata for DKMotionClassification);
    atomic_store(result, (unint64_t *)&qword_256FB8DE8);
  }
  return result;
}

unint64_t sub_2400C3400()
{
  unint64_t result;

  result = qword_256FB8DF0;
  if (!qword_256FB8DF0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKObservationType, &type metadata for DKObservationType);
    atomic_store(result, (unint64_t *)&qword_256FB8DF0);
  }
  return result;
}

uint64_t sub_2400C3444(_QWORD *a1)
{
  uint64_t result;

  a1[2] = sub_2400707A8(&qword_256FB6808, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
  a1[3] = sub_2400707A8(&qword_256FB6700, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
  result = sub_2400707A8(&qword_256FB8DF8, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_2400C34BC(_QWORD *a1)
{
  uint64_t result;

  a1[2] = sub_2400707A8(&qword_256FB6818, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
  a1[3] = sub_2400707A8(&qword_256FB6718, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
  result = sub_2400707A8(&qword_256FB8E00, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_2400C3534(_QWORD *a1)
{
  uint64_t result;

  a1[2] = sub_2400707A8(&qword_256FB8E08, type metadata accessor for DKObjectObservation, (uint64_t)&protocol conformance descriptor for DKObjectObservation);
  a1[3] = sub_2400707A8(&qword_256FB8E10, type metadata accessor for DKObjectObservation, (uint64_t)&protocol conformance descriptor for DKObjectObservation);
  result = sub_2400707A8(&qword_256FB8E18, type metadata accessor for DKObjectObservation, (uint64_t)&protocol conformance descriptor for DKObjectObservation);
  a1[4] = result;
  return result;
}

unint64_t sub_2400C35B0()
{
  unint64_t result;

  result = qword_256FB8E20;
  if (!qword_256FB8E20)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKHandObservation.Chirality, &type metadata for DKHandObservation.Chirality);
    atomic_store(result, (unint64_t *)&qword_256FB8E20);
  }
  return result;
}

uint64_t sub_2400C35F4(_QWORD *a1)
{
  uint64_t result;

  a1[2] = sub_2400707A8(&qword_256FB6828, type metadata accessor for DKHandObservation, (uint64_t)&protocol conformance descriptor for DKHandObservation);
  a1[3] = sub_2400707A8(&qword_256FB6730, type metadata accessor for DKHandObservation, (uint64_t)&protocol conformance descriptor for DKHandObservation);
  result = sub_2400707A8(&qword_256FB8E28, type metadata accessor for DKHandObservation, (uint64_t)&protocol conformance descriptor for DKHandObservation);
  a1[4] = result;
  return result;
}

uint64_t sub_2400C366C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400C3680(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_time);
}

uint64_t sub_2400C36A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_2400C36B8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_uuid);
}

__n128 sub_2400C36DC@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400C36F8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect).n128_u64[0];
  return result;
}

uint64_t sub_2400C3704@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C371C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences);
}

_QWORD *sub_2400C3728@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C374C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId);
}

_QWORD *sub_2400C3758@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C377C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_groupId);
}

_QWORD *sub_2400C3788@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C37AC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_yaw);
}

_QWORD *sub_2400C37B8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C37DC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_pitch);
}

_QWORD *sub_2400C37E8@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C380C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_roll);
}

_QWORD *sub_2400C3818@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C383C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_distance);
}

uint64_t sub_2400C3848@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400C385C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_time);
}

uint64_t sub_2400C3880@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_2400C3894(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_uuid);
}

__n128 sub_2400C38B8@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400C38D4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect).n128_u64[0];
  return result;
}

uint64_t sub_2400C38E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C38F8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences);
}

_QWORD *sub_2400C3904@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3928(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId);
}

_QWORD *sub_2400C3934@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3958(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_groupId);
}

_QWORD *sub_2400C3964@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3988(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_distance);
}

uint64_t sub_2400C3994@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400C39A8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_time);
}

uint64_t sub_2400C39CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_2400C39E0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_uuid);
}

__n128 sub_2400C3A04@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400C3A20(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_rect).n128_u64[0];
  return result;
}

uint64_t sub_2400C3A2C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C3A44(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_identityConfidences);
}

_QWORD *sub_2400C3A50@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3A74(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_trackerId);
}

_QWORD *sub_2400C3A80@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3AA4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_groupId);
}

_QWORD *sub_2400C3AB0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3AD4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore19DKObjectObservation_distance);
}

uint64_t sub_2400C3AE0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t sub_2400C3AF4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_time);
}

uint64_t sub_2400C3B18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a2);
}

uint64_t sub_2400C3B2C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_uuid);
}

__n128 sub_2400C3B50@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400C3B6C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect).n128_u64[0];
  return result;
}

__n128 keypath_set_4Tm(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _OWORD *v5;
  __n128 result;
  __int128 v7;

  v5 = (_OWORD *)(*a2 + *a5);
  result = *(__n128 *)a1;
  v7 = *(_OWORD *)(a1 + 16);
  *v5 = *(_OWORD *)a1;
  v5[1] = v7;
  return result;
}

uint64_t sub_2400C3B90@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C3BA8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences);
}

_QWORD *sub_2400C3BB4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3BD8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId);
}

_QWORD *sub_2400C3BE4@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3C08(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_groupId);
}

_QWORD *sub_2400C3C14@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality);
  return result;
}

_BYTE *sub_2400C3C2C(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_chirality) = *result;
  return result;
}

_QWORD *sub_2400C3C44@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3C68(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_distance);
}

uint64_t sub_2400C3C74@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_0(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a2);
}

uint64_t keypath_getTm_0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t (*a3)(_QWORD)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  v5 = *a1 + *a2;
  v6 = a3(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a4, v5, v6);
}

uint64_t sub_2400C3CCC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400C256C(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time);
}

uint64_t sub_2400C3CF0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C3D08(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations);
}

id sub_2400C3D14@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image);
  *a2 = v2;
  return v2;
}

void sub_2400C3D2C(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_image) = *a1;
  v3 = v2;

}

uint64_t sub_2400C3D68@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C3D80(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition) = *a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

__n128 sub_2400C3DB8@<Q0>(_QWORD *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 *v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = (__n128 *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize);
  v3 = v2[1].n128_u8[0];
  result = *v2;
  *a2 = *v2;
  a2[1].n128_u8[0] = v3;
  return result;
}

__n128 sub_2400C3DDC(__n128 *a1, _QWORD *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  v3 = *a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_imageSize;
  result = *a1;
  *(__n128 *)v3 = *a1;
  *(_BYTE *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_2400C3E00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID);
  v3 = v2[1];
  *a2 = *v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400C3E1C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID);
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_2400C3E58@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400C3E7C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency);
}

ValueMetadata *type metadata accessor for DKFaceDirection()
{
  return &type metadata for DKFaceDirection;
}

ValueMetadata *type metadata accessor for DKMotionClassification()
{
  return &type metadata for DKMotionClassification;
}

ValueMetadata *type metadata accessor for DKObservationType()
{
  return &type metadata for DKObservationType;
}

uint64_t destroy for DKObservationGroup()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for DKObservationGroup(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DKObservationGroup(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DKObservationGroup(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKObservationGroup(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DKObservationGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DKObservationGroup()
{
  return &type metadata for DKObservationGroup;
}

uint64_t dispatch thunk of DKObservation.uuid.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of DKObservation.uuid.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of DKObservation.uuid.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of DKObservation.rect.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of DKObservation.rect.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of DKObservation.rect.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of DKObservation.identityConfidences.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of DKObservation.identityConfidences.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of DKObservation.identityConfidences.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 104))();
}

uint64_t dispatch thunk of DKObservation.trackerId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of DKObservation.trackerId.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 120))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObservation.trackerId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of DKObservation.groupId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of DKObservation.groupId.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 144))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObservation.groupId.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of DKObservation.distance.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of DKObservation.distance.setter(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, _QWORD))(a4 + 168))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObservation.distance.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t sub_2400C419C()
{
  return type metadata accessor for DKFaceObservation(0);
}

uint64_t sub_2400C41A4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = sub_24015434C();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for DKFaceObservation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKFaceObservation.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKFaceObservation.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKFaceObservation.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKFaceObservation.uuid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKFaceObservation.uuid.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKFaceObservation.uuid.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKFaceObservation.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKFaceObservation.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKFaceObservation.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKFaceObservation.identityConfidences.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKFaceObservation.identityConfidences.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKFaceObservation.identityConfidences.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKFaceObservation.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKFaceObservation.trackerId.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 296))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.trackerId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKFaceObservation.groupId.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 320))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.groupId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKFaceObservation.yaw.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKFaceObservation.yaw.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 344))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.yaw.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKFaceObservation.pitch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKFaceObservation.pitch.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 368))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.pitch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKFaceObservation.roll.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKFaceObservation.roll.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 392))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.roll.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKFaceObservation.distance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKFaceObservation.distance.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 416))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.distance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKFaceObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:yaw:pitch:roll:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v7 + 528))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKFaceObservation.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of DKFaceObservation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 544))();
}

uint64_t sub_2400C4508()
{
  return type metadata accessor for DKBodyObservation(0);
}

uint64_t sub_2400C4510()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = sub_24015434C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKBodyObservation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKBodyObservation.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKBodyObservation.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKBodyObservation.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKBodyObservation.uuid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKBodyObservation.uuid.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKBodyObservation.uuid.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKBodyObservation.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKBodyObservation.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKBodyObservation.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKBodyObservation.identityConfidences.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKBodyObservation.identityConfidences.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKBodyObservation.identityConfidences.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKBodyObservation.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKBodyObservation.trackerId.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 264))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKBodyObservation.trackerId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKBodyObservation.groupId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKBodyObservation.groupId.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 288))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKBodyObservation.groupId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKBodyObservation.distance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKBodyObservation.distance.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 384))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKBodyObservation.distance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKBodyObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v7 + 400))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKBodyObservation.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKBodyObservation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t sub_2400C4784()
{
  return type metadata accessor for DKObjectObservation(0);
}

uint64_t sub_2400C478C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = sub_24015434C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKObjectObservation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKObjectObservation.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKObjectObservation.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKObjectObservation.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKObjectObservation.uuid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKObjectObservation.uuid.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKObjectObservation.uuid.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKObjectObservation.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKObjectObservation.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKObjectObservation.identityConfidences.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKObjectObservation.identityConfidences.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKObjectObservation.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKObjectObservation.trackerId.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 248))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObjectObservation.groupId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKObjectObservation.groupId.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 272))(a1, a2 & 1);
}

uint64_t _s23IntelligentTrackingCore17DKFaceObservationC7groupIdSiSgvgTj_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKObjectObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v7 + 336))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKObjectObservation.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKObjectObservation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 352))();
}

uint64_t sub_2400C49B4()
{
  return type metadata accessor for DKHandObservation(0);
}

uint64_t sub_2400C49BC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = sub_24015434C();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKHandObservation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKHandObservation.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKHandObservation.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKHandObservation.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKHandObservation.uuid.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKHandObservation.uuid.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKHandObservation.uuid.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKHandObservation.rect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKHandObservation.rect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKHandObservation.rect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKHandObservation.identityConfidences.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKHandObservation.identityConfidences.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKHandObservation.identityConfidences.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKHandObservation.trackerId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKHandObservation.trackerId.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 256))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKHandObservation.trackerId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKHandObservation.groupId.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKHandObservation.groupId.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 280))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKHandObservation.groupId.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKHandObservation.chirality.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKHandObservation.chirality.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKHandObservation.chirality.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKHandObservation.distance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKHandObservation.distance.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 352))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKHandObservation.distance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKHandObservation.__allocating_init(time:uuid:rect:identityConfidences:trackerId:groupId:chirality:distance:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  uint64_t v7;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(v7 + 368))(a1, a2, a3, a4, a5 & 1, a6, a7 & 1);
}

uint64_t dispatch thunk of DKHandObservation.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKHandObservation.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 384))();
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality()
{
  return &type metadata for DKHandObservation.Chirality;
}

uint64_t sub_2400C4CF4()
{
  return type metadata accessor for DKObservationMetadata(0);
}

uint64_t sub_2400C4CFC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKObservationMetadata()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKObservationMetadata.time.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of DKObservationMetadata.time.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of DKObservationMetadata.time.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of DKObservationMetadata.observations.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of DKObservationMetadata.observations.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of DKObservationMetadata.observations.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of DKObservationMetadata.image.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of DKObservationMetadata.image.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of DKObservationMetadata.image.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of DKObservationMetadata.standPosition.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of DKObservationMetadata.standPosition.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of DKObservationMetadata.standPosition.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of DKObservationMetadata.imageSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of DKObservationMetadata.imageSize.setter(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))((*MEMORY[0x24BEE4EA0] & *v3) + 0xF0))(a1, a2, a3 & 1);
}

uint64_t dispatch thunk of DKObservationMetadata.imageSize.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of DKObservationMetadata.appID.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of DKObservationMetadata.appID.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of DKObservationMetadata.appID.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x110))();
}

uint64_t dispatch thunk of DKObservationMetadata.latency.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of DKObservationMetadata.latency.setter(uint64_t a1, char a2)
{
  _QWORD *v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))((*MEMORY[0x24BEE4EA0] & *v2) + 0x120))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKObservationMetadata.latency.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of DKObservationMetadata.__allocating_init(time:observations:image:standPosition:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t storeEnumTagSinglePayload for DKHandObservation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2400C508C + 4 * byte_2401591A3[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2400C50C0 + 4 * byte_24015919E[v4]))();
}

uint64_t sub_2400C50C0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C50C8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400C50D0);
  return result;
}

uint64_t sub_2400C50DC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400C50E4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2400C50E8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C50F0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKHandObservation.CodingKeys()
{
  return &type metadata for DKHandObservation.CodingKeys;
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality.CodingKeys()
{
  return &type metadata for DKHandObservation.Chirality.CodingKeys;
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality.UnknownCodingKeys()
{
  return &type metadata for DKHandObservation.Chirality.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality.LeftHandCodingKeys()
{
  return &type metadata for DKHandObservation.Chirality.LeftHandCodingKeys;
}

ValueMetadata *type metadata accessor for DKHandObservation.Chirality.RightHandCodingKeys()
{
  return &type metadata for DKHandObservation.Chirality.RightHandCodingKeys;
}

ValueMetadata *type metadata accessor for DKObjectObservation.CodingKeys()
{
  return &type metadata for DKObjectObservation.CodingKeys;
}

uint64_t _s23IntelligentTrackingCore19DKObjectObservationC10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2400C51B0 + 4 * byte_2401591AD[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2400C51E4 + 4 * byte_2401591A8[v4]))();
}

uint64_t sub_2400C51E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C51EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400C51F4);
  return result;
}

uint64_t sub_2400C5200(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400C5208);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2400C520C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C5214(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKBodyObservation.CodingKeys()
{
  return &type metadata for DKBodyObservation.CodingKeys;
}

uint64_t getEnumTagSinglePayload for DKFaceObservation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF6)
    goto LABEL_17;
  if (a2 + 10 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 10) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 10;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 10;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 10;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v8 = v6 - 11;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKFaceObservation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_2400C530C + 4 * byte_2401591B7[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2400C5340 + 4 * byte_2401591B2[v4]))();
}

uint64_t sub_2400C5340(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C5348(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400C5350);
  return result;
}

uint64_t sub_2400C535C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400C5364);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_2400C5368(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C5370(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKFaceObservation.CodingKeys()
{
  return &type metadata for DKFaceObservation.CodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationGroup.CodingKeys()
{
  return &type metadata for DKObservationGroup.CodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.CodingKeys()
{
  return &type metadata for DKObservationType.CodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.FaceCodingKeys()
{
  return &type metadata for DKObservationType.FaceCodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.BodyCodingKeys()
{
  return &type metadata for DKObservationType.BodyCodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.HandCodingKeys()
{
  return &type metadata for DKObservationType.HandCodingKeys;
}

ValueMetadata *type metadata accessor for DKObservationType.ObjectCodingKeys()
{
  return &type metadata for DKObservationType.ObjectCodingKeys;
}

uint64_t _s23IntelligentTrackingCore17DKHandObservationC9ChiralityOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2400C5438 + 4 * byte_2401591C1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2400C546C + 4 * byte_2401591BC[v4]))();
}

uint64_t sub_2400C546C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C5474(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400C547CLL);
  return result;
}

uint64_t sub_2400C5488(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400C5490);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2400C5494(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C549C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKMotionClassification.CodingKeys()
{
  return &type metadata for DKMotionClassification.CodingKeys;
}

ValueMetadata *type metadata accessor for DKMotionClassification.StationaryCodingKeys()
{
  return &type metadata for DKMotionClassification.StationaryCodingKeys;
}

ValueMetadata *type metadata accessor for DKMotionClassification.FidgetingCodingKeys()
{
  return &type metadata for DKMotionClassification.FidgetingCodingKeys;
}

ValueMetadata *type metadata accessor for DKMotionClassification.WalkingCodingKeys()
{
  return &type metadata for DKMotionClassification.WalkingCodingKeys;
}

uint64_t _s23IntelligentTrackingCore17DKObservationTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2400C5534 + 4 * byte_2401591CB[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2400C5568 + 4 * byte_2401591C6[v4]))();
}

uint64_t sub_2400C5568(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C5570(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400C5578);
  return result;
}

uint64_t sub_2400C5584(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400C558CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2400C5590(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400C5598(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKFaceDirection.CodingKeys()
{
  return &type metadata for DKFaceDirection.CodingKeys;
}

ValueMetadata *type metadata accessor for DKFaceDirection.UnknownCodingKeys()
{
  return &type metadata for DKFaceDirection.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for DKFaceDirection.LeftCodingKeys()
{
  return &type metadata for DKFaceDirection.LeftCodingKeys;
}

ValueMetadata *type metadata accessor for DKFaceDirection.RightCodingKeys()
{
  return &type metadata for DKFaceDirection.RightCodingKeys;
}

ValueMetadata *type metadata accessor for DKFaceDirection.CameraCodingKeys()
{
  return &type metadata for DKFaceDirection.CameraCodingKeys;
}

unint64_t sub_2400C55F8()
{
  unint64_t result;

  result = qword_256FB9668;
  if (!qword_256FB9668)
  {
    result = MEMORY[0x24267E0BC](&unk_240159D84, &type metadata for DKFaceDirection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9668);
  }
  return result;
}

unint64_t sub_2400C5640()
{
  unint64_t result;

  result = qword_256FB9670;
  if (!qword_256FB9670)
  {
    result = MEMORY[0x24267E0BC](&unk_240159F2C, &type metadata for DKMotionClassification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9670);
  }
  return result;
}

unint64_t sub_2400C5688()
{
  unint64_t result;

  result = qword_256FB9678;
  if (!qword_256FB9678)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A124, &type metadata for DKObservationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9678);
  }
  return result;
}

unint64_t sub_2400C56D0()
{
  unint64_t result;

  result = qword_256FB9680;
  if (!qword_256FB9680)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A1DC, &type metadata for DKObservationGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9680);
  }
  return result;
}

unint64_t sub_2400C5718()
{
  unint64_t result;

  result = qword_256FB9688;
  if (!qword_256FB9688)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A2CC, &type metadata for DKFaceObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9688);
  }
  return result;
}

unint64_t sub_2400C5760()
{
  unint64_t result;

  result = qword_256FB9690;
  if (!qword_256FB9690)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A3BC, &type metadata for DKBodyObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9690);
  }
  return result;
}

unint64_t sub_2400C57A8()
{
  unint64_t result;

  result = qword_256FB9698;
  if (!qword_256FB9698)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A4AC, &type metadata for DKObjectObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9698);
  }
  return result;
}

unint64_t sub_2400C57F0()
{
  unint64_t result;

  result = qword_256FB96A0;
  if (!qword_256FB96A0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A654, &type metadata for DKHandObservation.Chirality.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96A0);
  }
  return result;
}

unint64_t sub_2400C5838()
{
  unint64_t result;

  result = qword_256FB96A8;
  if (!qword_256FB96A8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A744, &type metadata for DKHandObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96A8);
  }
  return result;
}

unint64_t sub_2400C5880()
{
  unint64_t result;

  result = qword_256FB96B0;
  if (!qword_256FB96B0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A67C, &type metadata for DKHandObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96B0);
  }
  return result;
}

unint64_t sub_2400C58C8()
{
  unint64_t result;

  result = qword_256FB96B8;
  if (!qword_256FB96B8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A6A4, &type metadata for DKHandObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96B8);
  }
  return result;
}

unint64_t sub_2400C5910()
{
  unint64_t result;

  result = qword_256FB96C0;
  if (!qword_256FB96C0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A574, &type metadata for DKHandObservation.Chirality.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96C0);
  }
  return result;
}

unint64_t sub_2400C5958()
{
  unint64_t result;

  result = qword_256FB96C8;
  if (!qword_256FB96C8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A59C, &type metadata for DKHandObservation.Chirality.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96C8);
  }
  return result;
}

unint64_t sub_2400C59A0()
{
  unint64_t result;

  result = qword_256FB96D0;
  if (!qword_256FB96D0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A524, &type metadata for DKHandObservation.Chirality.LeftHandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96D0);
  }
  return result;
}

unint64_t sub_2400C59E8()
{
  unint64_t result;

  result = qword_256FB96D8;
  if (!qword_256FB96D8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A54C, &type metadata for DKHandObservation.Chirality.LeftHandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96D8);
  }
  return result;
}

unint64_t sub_2400C5A30()
{
  unint64_t result;

  result = qword_256FB96E0;
  if (!qword_256FB96E0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A4D4, &type metadata for DKHandObservation.Chirality.RightHandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96E0);
  }
  return result;
}

unint64_t sub_2400C5A78()
{
  unint64_t result;

  result = qword_256FB96E8;
  if (!qword_256FB96E8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A4FC, &type metadata for DKHandObservation.Chirality.RightHandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96E8);
  }
  return result;
}

unint64_t sub_2400C5AC0()
{
  unint64_t result;

  result = qword_256FB96F0;
  if (!qword_256FB96F0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A5C4, &type metadata for DKHandObservation.Chirality.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96F0);
  }
  return result;
}

unint64_t sub_2400C5B08()
{
  unint64_t result;

  result = qword_256FB96F8;
  if (!qword_256FB96F8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A5EC, &type metadata for DKHandObservation.Chirality.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB96F8);
  }
  return result;
}

unint64_t sub_2400C5B50()
{
  unint64_t result;

  result = qword_256FB9700;
  if (!qword_256FB9700)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A3E4, &type metadata for DKObjectObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9700);
  }
  return result;
}

unint64_t sub_2400C5B98()
{
  unint64_t result;

  result = qword_256FB9708;
  if (!qword_256FB9708)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A40C, &type metadata for DKObjectObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9708);
  }
  return result;
}

unint64_t sub_2400C5BE0()
{
  unint64_t result;

  result = qword_256FB9710;
  if (!qword_256FB9710)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A2F4, &type metadata for DKBodyObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9710);
  }
  return result;
}

unint64_t sub_2400C5C28()
{
  unint64_t result;

  result = qword_256FB9718;
  if (!qword_256FB9718)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A31C, &type metadata for DKBodyObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9718);
  }
  return result;
}

unint64_t sub_2400C5C70()
{
  unint64_t result;

  result = qword_256FB9720;
  if (!qword_256FB9720)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A204, &type metadata for DKFaceObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9720);
  }
  return result;
}

unint64_t sub_2400C5CB8()
{
  unint64_t result;

  result = qword_256FB9728;
  if (!qword_256FB9728)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A22C, &type metadata for DKFaceObservation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9728);
  }
  return result;
}

unint64_t sub_2400C5D00()
{
  unint64_t result;

  result = qword_256FB9730;
  if (!qword_256FB9730)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A14C, &type metadata for DKObservationGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9730);
  }
  return result;
}

unint64_t sub_2400C5D48()
{
  unint64_t result;

  result = qword_256FB9738;
  if (!qword_256FB9738)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A174, &type metadata for DKObservationGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9738);
  }
  return result;
}

unint64_t sub_2400C5D90()
{
  unint64_t result;

  result = qword_256FB9740;
  if (!qword_256FB9740)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A044, &type metadata for DKObservationType.FaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9740);
  }
  return result;
}

unint64_t sub_2400C5DD8()
{
  unint64_t result;

  result = qword_256FB9748;
  if (!qword_256FB9748)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A06C, &type metadata for DKObservationType.FaceCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9748);
  }
  return result;
}

unint64_t sub_2400C5E20()
{
  unint64_t result;

  result = qword_256FB9750;
  if (!qword_256FB9750)
  {
    result = MEMORY[0x24267E0BC](&unk_240159FF4, &type metadata for DKObservationType.BodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9750);
  }
  return result;
}

unint64_t sub_2400C5E68()
{
  unint64_t result;

  result = qword_256FB9758;
  if (!qword_256FB9758)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A01C, &type metadata for DKObservationType.BodyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9758);
  }
  return result;
}

unint64_t sub_2400C5EB0()
{
  unint64_t result;

  result = qword_256FB9760;
  if (!qword_256FB9760)
  {
    result = MEMORY[0x24267E0BC](&unk_240159FA4, &type metadata for DKObservationType.HandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9760);
  }
  return result;
}

unint64_t sub_2400C5EF8()
{
  unint64_t result;

  result = qword_256FB9768;
  if (!qword_256FB9768)
  {
    result = MEMORY[0x24267E0BC](&unk_240159FCC, &type metadata for DKObservationType.HandCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9768);
  }
  return result;
}

unint64_t sub_2400C5F40()
{
  unint64_t result;

  result = qword_256FB9770;
  if (!qword_256FB9770)
  {
    result = MEMORY[0x24267E0BC](&unk_240159F54, &type metadata for DKObservationType.ObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9770);
  }
  return result;
}

unint64_t sub_2400C5F88()
{
  unint64_t result;

  result = qword_256FB9778;
  if (!qword_256FB9778)
  {
    result = MEMORY[0x24267E0BC](&unk_240159F7C, &type metadata for DKObservationType.ObjectCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9778);
  }
  return result;
}

unint64_t sub_2400C5FD0()
{
  unint64_t result;

  result = qword_256FB9780;
  if (!qword_256FB9780)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A094, &type metadata for DKObservationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9780);
  }
  return result;
}

unint64_t sub_2400C6018()
{
  unint64_t result;

  result = qword_256FB9788;
  if (!qword_256FB9788)
  {
    result = MEMORY[0x24267E0BC](&unk_24015A0BC, &type metadata for DKObservationType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9788);
  }
  return result;
}

unint64_t sub_2400C6060()
{
  unint64_t result;

  result = qword_256FB9790;
  if (!qword_256FB9790)
  {
    result = MEMORY[0x24267E0BC](&unk_240159E4C, &type metadata for DKMotionClassification.StationaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9790);
  }
  return result;
}

unint64_t sub_2400C60A8()
{
  unint64_t result;

  result = qword_256FB9798;
  if (!qword_256FB9798)
  {
    result = MEMORY[0x24267E0BC](&unk_240159E74, &type metadata for DKMotionClassification.StationaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9798);
  }
  return result;
}

unint64_t sub_2400C60F0()
{
  unint64_t result;

  result = qword_256FB97A0;
  if (!qword_256FB97A0)
  {
    result = MEMORY[0x24267E0BC](&unk_240159DFC, &type metadata for DKMotionClassification.FidgetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97A0);
  }
  return result;
}

unint64_t sub_2400C6138()
{
  unint64_t result;

  result = qword_256FB97A8;
  if (!qword_256FB97A8)
  {
    result = MEMORY[0x24267E0BC](&unk_240159E24, &type metadata for DKMotionClassification.FidgetingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97A8);
  }
  return result;
}

unint64_t sub_2400C6180()
{
  unint64_t result;

  result = qword_256FB97B0;
  if (!qword_256FB97B0)
  {
    result = MEMORY[0x24267E0BC](&unk_240159DAC, &type metadata for DKMotionClassification.WalkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97B0);
  }
  return result;
}

unint64_t sub_2400C61C8()
{
  unint64_t result;

  result = qword_256FB97B8;
  if (!qword_256FB97B8)
  {
    result = MEMORY[0x24267E0BC](&unk_240159DD4, &type metadata for DKMotionClassification.WalkingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97B8);
  }
  return result;
}

unint64_t sub_2400C6210()
{
  unint64_t result;

  result = qword_256FB97C0;
  if (!qword_256FB97C0)
  {
    result = MEMORY[0x24267E0BC](&unk_240159E9C, &type metadata for DKMotionClassification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97C0);
  }
  return result;
}

unint64_t sub_2400C6258()
{
  unint64_t result;

  result = qword_256FB97C8;
  if (!qword_256FB97C8)
  {
    result = MEMORY[0x24267E0BC](&unk_240159EC4, &type metadata for DKMotionClassification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97C8);
  }
  return result;
}

unint64_t sub_2400C62A0()
{
  unint64_t result;

  result = qword_256FB97D0;
  if (!qword_256FB97D0)
  {
    result = MEMORY[0x24267E0BC](&unk_240159CA4, &type metadata for DKFaceDirection.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97D0);
  }
  return result;
}

unint64_t sub_2400C62E8()
{
  unint64_t result;

  result = qword_256FB97D8;
  if (!qword_256FB97D8)
  {
    result = MEMORY[0x24267E0BC](&unk_240159CCC, &type metadata for DKFaceDirection.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97D8);
  }
  return result;
}

unint64_t sub_2400C6330()
{
  unint64_t result;

  result = qword_256FB97E0;
  if (!qword_256FB97E0)
  {
    result = MEMORY[0x24267E0BC](&unk_240159C54, &type metadata for DKFaceDirection.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97E0);
  }
  return result;
}

unint64_t sub_2400C6378()
{
  unint64_t result;

  result = qword_256FB97E8;
  if (!qword_256FB97E8)
  {
    result = MEMORY[0x24267E0BC](&unk_240159C7C, &type metadata for DKFaceDirection.LeftCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97E8);
  }
  return result;
}

unint64_t sub_2400C63C0()
{
  unint64_t result;

  result = qword_256FB97F0;
  if (!qword_256FB97F0)
  {
    result = MEMORY[0x24267E0BC](&unk_240159C04, &type metadata for DKFaceDirection.RightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97F0);
  }
  return result;
}

unint64_t sub_2400C6408()
{
  unint64_t result;

  result = qword_256FB97F8;
  if (!qword_256FB97F8)
  {
    result = MEMORY[0x24267E0BC](&unk_240159C2C, &type metadata for DKFaceDirection.RightCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB97F8);
  }
  return result;
}

unint64_t sub_2400C6450()
{
  unint64_t result;

  result = qword_256FB9800;
  if (!qword_256FB9800)
  {
    result = MEMORY[0x24267E0BC](&unk_240159BB4, &type metadata for DKFaceDirection.CameraCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9800);
  }
  return result;
}

unint64_t sub_2400C6498()
{
  unint64_t result;

  result = qword_256FB9808;
  if (!qword_256FB9808)
  {
    result = MEMORY[0x24267E0BC](&unk_240159BDC, &type metadata for DKFaceDirection.CameraCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9808);
  }
  return result;
}

unint64_t sub_2400C64E0()
{
  unint64_t result;

  result = qword_256FB9810;
  if (!qword_256FB9810)
  {
    result = MEMORY[0x24267E0BC](&unk_240159CF4, &type metadata for DKFaceDirection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9810);
  }
  return result;
}

unint64_t sub_2400C6528()
{
  unint64_t result;

  result = qword_256FB9818;
  if (!qword_256FB9818)
  {
    result = MEMORY[0x24267E0BC](&unk_240159D1C, &type metadata for DKFaceDirection.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FB9818);
  }
  return result;
}

uint64_t sub_2400C656C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1952867692 && a2 == 0xE400000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7468676972 && a2 == 0xE500000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6172656D6163 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2400C6704(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x616E6F6974617453 && a2 == 0xEA00000000007972;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E69746567646946 && a2 == 0xE900000000000067 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E696B6C6157 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2400C6870(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701011782 && a2 == 0xE400000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 2036625218 && a2 == 0xE400000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684955464 && a2 == 0xE400000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7463656A624FLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2400C69F0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x644970756F7267 && a2 == 0xE700000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701011814 && a2 == 0xE400000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 2036625250 && a2 == 0xE400000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73646E6168 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_2400C6B80()
{
  unint64_t v0;

  v0 = sub_240154D84();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

uint64_t sub_2400C6BC8()
{
  unint64_t v0;

  v0 = sub_240154D84();
  swift_bridgeObjectRelease();
  if (v0 >= 7)
    return 7;
  else
    return v0;
}

uint64_t sub_2400C6C0C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E55 && a2 == 0xE700000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E61487466654CLL && a2 == 0xE800000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E61487468676952 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_2400C6D6C()
{
  unint64_t v0;

  v0 = sub_240154D84();
  swift_bridgeObjectRelease();
  if (v0 >= 8)
    return 8;
  else
    return v0;
}

uint64_t sub_2400C6DFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v1[3] = swift_task_alloc();
  v2 = type metadata accessor for DKCamera();
  v1[4] = v2;
  v1[5] = *(_QWORD *)(v2 - 8);
  v1[6] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4430);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2400C6EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  double v26;
  uint64_t v27;
  unint64_t v28;
  _QWORD *v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  double v36;
  double v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  double v45;
  uint64_t v46;
  int v47;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 16);
  v5 = *(void **)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore16DKPreprocessTask_lastMetadata);
  v6 = *(_QWORD *)(v4 + 48);
  v7 = v5;
  swift_retain();
  swift_retain();
  sub_2400A09FC(v1);
  swift_release();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v1, 0, 1, v2);
  sub_24009C218(v1, v6 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, &qword_256FB4430);
  swift_release();
  if (!v5)
    goto LABEL_33;
  v8 = *(_QWORD *)(v0 + 56);
  v9 = *(_QWORD *)(v0 + 32);
  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v4 + 48);
  sub_24008BA50(v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_camera, v8);
  v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  v13 = *(_QWORD *)(v0 + 56);
  if (v12 == 1)
  {

    sub_240070BD4(v13, &qword_256FB4430);
LABEL_33:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
  }
  v14 = *(_QWORD *)(v0 + 24);
  sub_240070AF8(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 48));
  v15 = &v7[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_time];
  v16 = sub_240154310();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v14, v15, v16);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v18(v14, 0, 1, v16);
  v19 = v11 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_observationTime;
  v20 = v7;
  sub_24009C218(v14, v19, &qword_256FB4CC8);
  v21 = OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition;
  *(_QWORD *)(*(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_standPosition) = *(_QWORD *)&v20[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_standPosition];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = &v20[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID];
  if (*(_QWORD *)&v20[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID + 8])
  {
    v23 = *(_QWORD *)v22;
    v24 = *(_QWORD *)&v20[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_appID + 8];
  }
  else
  {
    v23 = 0;
    v24 = 0xE000000000000000;
  }
  v25 = (_QWORD *)(*(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_appID);
  *v25 = v23;
  v25[1] = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if ((v20[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency + 8] & 1) == 0)
  {
    v26 = *(double *)&v20[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_latency];
    swift_retain();
    sub_240150414(v26);
    swift_release();
  }
  if (*((_QWORD *)v22 + 1))
  {
    v27 = *(_QWORD *)v22;
    v28 = *((_QWORD *)v22 + 1);
  }
  else
  {
    v27 = 0;
    v28 = 0xE000000000000000;
  }
  v29 = (_QWORD *)(*(_QWORD *)(v4 + 40)
                 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_appID);
  *v29 = v27;
  v29[1] = v28;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  v31 = *(_QWORD *)&v20[v21];
  v32 = *(_QWORD *)(v4 + 40);
  if (!v31
    || (v33 = OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition,
        *(_QWORD *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_localHomePosition)))
  {
    v34 = v18;
LABEL_28:
    v42 = *(_QWORD *)(v0 + 48);
    v43 = *(_QWORD *)(v0 + 24);
    v44 = *(_QWORD *)(*(_QWORD *)&v20[OBJC_IVAR____TtC23IntelligentTrackingCore21DKObservationMetadata_observations]
                    + 16);
    v34(v43, 1, 1, v16);
    if (v44)
      v45 = 1.0;
    else
      v45 = 0.0;
    swift_retain();
    swift_retain();
    sub_240148324(0, 1, v43, v45);
    swift_release();
    swift_release();
    sub_240070BD4(v43, &qword_256FB4CC8);
    v46 = sub_24008C168();

    sub_240070B3C(v42);
    v47 = *(unsigned __int8 *)(v46 + 16);
    swift_release();
    if (v47 == 1)
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 24))(*(_QWORD *)(v4 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime, *(_QWORD *)(v4 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v16);
    goto LABEL_33;
  }
  if (**(_BYTE **)(v0 + 48) == 1)
  {
    if (*(_QWORD *)(v31 + 16))
    {
      v35 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 32) + 80);
      if (*(_QWORD *)(v35 + 16) >= 2uLL)
      {
        v36 = *(double *)(v31 + 32);
        v37 = *(double *)(v35 + 40);
LABEL_27:
        v34 = v18;
        __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
        v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = xmmword_240155A50;
        *(double *)(v41 + 32) = v36;
        *(double *)(v41 + 40) = v37;
        *(_QWORD *)(v41 + 48) = 0;
        *(_QWORD *)(v32 + v33) = v41;
        goto LABEL_28;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_36;
  }
  v38 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 32);
  v39 = *(_QWORD *)(v31 + 16);
  if (*(_BYTE *)(v38 + 88) == 1)
  {
    if (!v39)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v40 = *(_QWORD *)(v38 + 80);
    if (*(_QWORD *)(v40 + 16) < 2uLL)
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    v36 = *(double *)(v31 + 32) + 3.14159265;
LABEL_26:
    v37 = -*(double *)(v40 + 40);
    goto LABEL_27;
  }
  if (!v39)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v40 = *(_QWORD *)(v38 + 80);
  if (*(_QWORD *)(v40 + 16) >= 2uLL)
  {
    v36 = *(double *)(v31 + 32);
    goto LABEL_26;
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_2400C73DC()
{
  uint64_t v0;

}

uint64_t sub_2400C73EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2400C7470()
{
  return type metadata accessor for DKPreprocessTask();
}

uint64_t type metadata accessor for DKPreprocessTask()
{
  uint64_t result;

  result = qword_256FB9848;
  if (!qword_256FB9848)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2400C74B4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_2400C74F4(unint64_t a1, unint64_t a2, double a3)
{
  return sub_2400C7578(a1, a2, (uint64_t)sub_240091164, (uint64_t (*)(BOOL, uint64_t, uint64_t, unint64_t))sub_240078190, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_rect, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_identityConfidences, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKFaceObservation_trackerId, a3);
}

uint64_t sub_2400C7520(unint64_t a1, unint64_t a2, double a3)
{
  return sub_2400C7578(a1, a2, (uint64_t)sub_240091180, (uint64_t (*)(BOOL, uint64_t, uint64_t, unint64_t))sub_2400781A4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_rect, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_identityConfidences, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKBodyObservation_trackerId, a3);
}

uint64_t sub_2400C754C(unint64_t a1, unint64_t a2, double a3)
{
  return sub_2400C7578(a1, a2, (uint64_t)sub_24009119C, (uint64_t (*)(BOOL, uint64_t, uint64_t, unint64_t))sub_2400782E8, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_rect, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_identityConfidences, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKHandObservation_trackerId, a3);
}

uint64_t sub_2400C7578(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t (*a4)(BOOL, uint64_t, uint64_t, unint64_t), _QWORD *a5, _QWORD *a6, _QWORD *a7, double a8)
{
  unint64_t v8;
  unint64_t v9;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  double v25;
  double v26;
  unint64_t v27;
  double *v28;
  CGFloat *v29;
  CGFloat v30;
  CGFloat v31;
  double Width;
  double v33;
  double Height;
  double v35;
  double v36;
  double MidY;
  double v38;
  uint64_t v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  double *v44;
  uint64_t v45;
  double v46;
  double *v47;
  double v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  unint64_t v56;
  double *v57;
  double v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t (*v102)(unint64_t);
  unint64_t v103;
  unint64_t v108;
  uint64_t v109;
  double MidX;
  double v111;
  double v112;
  unint64_t v113;
  CGFloat v114;
  CGFloat v115;
  _QWORD *v116;
  unint64_t v118;
  unint64_t v119;
  unint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  CGRect v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;

  v122 = MEMORY[0x24BEE4B08];
  v123 = MEMORY[0x24BEE4B08];
  if (a1 >> 62)
    goto LABEL_152;
  v12 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v9 = 0;
  v108 = a2;
  v109 = v12;
  v102 = (uint64_t (*)(unint64_t))a3;
  v103 = a2 >> 62;
  v113 = 0;
  if (v12)
  {
    if (a2 >> 62)
      goto LABEL_156;
    v13 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_6;
  }
  v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_62:
  v121 = v14;
  swift_bridgeObjectRetain_n();
  sub_2400C914C((uint64_t *)&v121);
  if (v113)
    goto LABEL_162;
  swift_bridgeObjectRelease_n();
  v53 = (uint64_t)v121;
  v54 = v121[2];
  if (!v54)
  {
    swift_release();
    v9 = MEMORY[0x24BEE4AF8];
    v74 = v109;
    if (!v109)
      goto LABEL_118;
    goto LABEL_99;
  }
  a2 = 0;
  v55 = v121 + 4;
  v119 = v108 & 0xC000000000000001;
  v113 = v108 + 32;
  v9 = MEMORY[0x24BEE4AF8];
  v116 = v121 + 4;
  do
  {
    if (a2 >= *(_QWORD *)(v53 + 16))
      goto LABEL_142;
    v57 = (double *)&v55[3 * a2];
    v58 = v57[2];
    if (v58 < a8)
    {
      v60 = *(_QWORD *)v57;
      v59 = *((_QWORD *)v57 + 1);
      a3 = v123;
      if (*(_QWORD *)(v123 + 16))
      {
        v61 = sub_240154FDC();
        v62 = -1 << *(_BYTE *)(a3 + 32);
        v63 = v61 & ~v62;
        if (((*(_QWORD *)(a3 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFF8)) >> v63) & 1) != 0)
        {
          v64 = *(_QWORD *)(a3 + 48);
          if (*(_QWORD *)(v64 + 8 * v63) == v60)
            goto LABEL_66;
          v65 = ~v62;
          while (1)
          {
            v63 = (v63 + 1) & v65;
            if (((*(_QWORD *)(a3 + 56 + ((v63 >> 3) & 0xFFFFFFFFFFFFF8)) >> v63) & 1) == 0)
              break;
            if (*(_QWORD *)(v64 + 8 * v63) == v60)
              goto LABEL_66;
          }
        }
      }
      a3 = v122;
      if (*(_QWORD *)(v122 + 16))
      {
        v66 = sub_240154FDC();
        v67 = -1 << *(_BYTE *)(a3 + 32);
        v68 = v66 & ~v67;
        if (((*(_QWORD *)(a3 + 56 + ((v68 >> 3) & 0xFFFFFFFFFFFFF8)) >> v68) & 1) != 0)
        {
          v69 = *(_QWORD *)(a3 + 48);
          if (*(_QWORD *)(v69 + 8 * v68) == v59)
            goto LABEL_66;
          v70 = ~v67;
          while (1)
          {
            v68 = (v68 + 1) & v70;
            if (((*(_QWORD *)(a3 + 56 + ((v68 >> 3) & 0xFFFFFFFFFFFFF8)) >> v68) & 1) == 0)
              break;
            if (*(_QWORD *)(v69 + 8 * v68) == v59)
              goto LABEL_66;
          }
        }
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        a3 = MEMORY[0x24267D4E0](v60, a1);
        if (!v119)
        {
LABEL_87:
          if ((v59 & 0x8000000000000000) != 0)
            goto LABEL_150;
          if (v59 >= *(_QWORD *)((v108 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_151;
          v71 = *(_QWORD *)(v113 + 8 * v59);
          swift_retain();
          goto LABEL_90;
        }
      }
      else
      {
        if ((v60 & 0x8000000000000000) != 0)
          goto LABEL_148;
        if (v60 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_149;
        a3 = *(_QWORD *)(a1 + 32 + 8 * v60);
        swift_retain();
        if (!v119)
          goto LABEL_87;
      }
      v71 = MEMORY[0x24267D4E0](v59, v108);
LABEL_90:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = a4(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
      v73 = *(_QWORD *)(v9 + 16);
      v72 = *(_QWORD *)(v9 + 24);
      if (v73 >= v72 >> 1)
        v9 = a4(v72 > 1, v73 + 1, 1, v9);
      *(_QWORD *)(v9 + 16) = v73 + 1;
      v56 = v9 + 24 * v73;
      *(_QWORD *)(v56 + 32) = a3;
      *(_QWORD *)(v56 + 40) = v71;
      *(double *)(v56 + 48) = v58;
      sub_240084408((uint64_t *)&v121, v60);
      a3 = (uint64_t)&v122;
      sub_240084408((uint64_t *)&v121, v59);
      v55 = v116;
    }
LABEL_66:
    ++a2;
  }
  while (a2 != v54);
  swift_release();
  v74 = v109;
  if (v109)
  {
LABEL_99:
    v75 = 0;
    a2 = a1 + 32;
    v76 = v74 & ~(v74 >> 63);
    do
    {
      if (v75 == v76)
        goto LABEL_143;
      a3 = v123;
      if (*(_QWORD *)(v123 + 16))
      {
        v78 = sub_240154FDC();
        v79 = -1 << *(_BYTE *)(a3 + 32);
        v80 = v78 & ~v79;
        if (((*(_QWORD *)(a3 + 56 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) != 0)
        {
          v81 = *(_QWORD *)(a3 + 48);
          if (*(_QWORD *)(v81 + 8 * v80) == v75)
            goto LABEL_101;
          v82 = ~v79;
          while (1)
          {
            v80 = (v80 + 1) & v82;
            if (((*(_QWORD *)(a3 + 56 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) == 0)
              break;
            if (*(_QWORD *)(v81 + 8 * v80) == v75)
              goto LABEL_101;
          }
        }
      }
      if ((a1 & 0xC000000000000001) != 0)
      {
        v83 = MEMORY[0x24267D4E0](v75, a1);
      }
      else
      {
        if (v75 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_145;
        v83 = *(_QWORD *)(a2 + 8 * v75);
        swift_retain();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = a4(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
      v85 = *(_QWORD *)(v9 + 16);
      v84 = *(_QWORD *)(v9 + 24);
      if (v85 >= v84 >> 1)
        v9 = a4(v84 > 1, v85 + 1, 1, v9);
      *(_QWORD *)(v9 + 16) = v85 + 1;
      v77 = (_QWORD *)(v9 + 24 * v85);
      v77[5] = 0;
      v77[6] = 0;
      v77[4] = v83;
      a3 = (uint64_t)&v123;
      sub_240084408((uint64_t *)&v121, v75);
LABEL_101:
      ++v75;
    }
    while (v75 != v109);
  }
LABEL_118:
  swift_bridgeObjectRelease();
  if (!v103)
  {
    a3 = v108;
    v86 = *(_QWORD *)((v108 & 0xFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_120;
  }
  while (2)
  {
    a3 = v108;
    swift_bridgeObjectRetain();
    v86 = sub_240154D30();
    swift_bridgeObjectRelease();
    if (v86 < 0)
    {
      __break(1u);
LABEL_156:
      if ((a2 & 0x8000000000000000) != 0)
        v8 = a2;
      else
        v8 = a2 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v13 = sub_240154D30();
      swift_bridgeObjectRelease();
      if (v13 < 0)
      {
        __break(1u);
        goto LABEL_161;
      }
      v12 = v109;
LABEL_6:
      v8 = 0;
      v118 = a2 & 0xC000000000000001;
      v120 = a1 & 0xC000000000000001;
      v14 = (_QWORD *)MEMORY[0x24BEE4AF8];
      while (1)
      {
        if (v8 == v12)
        {
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
          goto LABEL_147;
        }
        if (v13)
          break;
LABEL_7:
        ++v8;
        v12 = v109;
        if (v8 == v109)
          goto LABEL_62;
      }
      if (v120 || v8 < *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        a3 = 0;
        while (1)
        {
          if (v120)
          {
            v15 = MEMORY[0x24267D4E0](v8, a1);
            if (!v118)
              goto LABEL_17;
          }
          else
          {
            v15 = *(_QWORD *)(a1 + 32 + 8 * v8);
            swift_retain();
            if (!v118)
            {
LABEL_17:
              v16 = *(_QWORD *)(a2 + 8 * a3 + 32);
              swift_retain();
              goto LABEL_18;
            }
          }
          v16 = MEMORY[0x24267D4E0](a3, a2);
LABEL_18:
          v17 = *(_QWORD **)(v15 + qword_256FC4880);
          v18 = v17[2];
          if (*(_BYTE *)(v18 + 33) == 1)
          {
            v19 = *(_BYTE *)(v18 + 32) == 1
                ? atan2(*(long double *)(v18 + 48), *(long double *)(v18 + 56))
                : *(double *)(v18 + 40);
            v20 = v17[3];
            if (*(_BYTE *)(v20 + 33) == 1)
            {
              v21 = (*(_BYTE *)(v20 + 32) & 1) != 0
                  ? atan2(*(long double *)(v20 + 48), *(long double *)(v20 + 56))
                  : *(double *)(v20 + 40);
              v22 = v17[4];
              if (*(_BYTE *)(v22 + 33) == 1)
              {
                v23 = (*(_BYTE *)(v22 + 32) & 1) != 0
                    ? atan2(*(long double *)(v22 + 48), *(long double *)(v22 + 56))
                    : *(double *)(v22 + 40);
                v24 = v17[5];
                if (*(_BYTE *)(v24 + 33) == 1)
                {
                  if ((*(_BYTE *)(v24 + 32) & 1) != 0)
                    v25 = atan2(*(long double *)(v24 + 48), *(long double *)(v24 + 56));
                  else
                    v25 = *(double *)(v24 + 40);
                  v29 = (CGFloat *)(v16 + *a5);
                  v30 = *v29;
                  v31 = v29[2];
                  v114 = v29[1];
                  v115 = v29[3];
                  v124.origin.x = v19 - v23 * 0.5;
                  v124.origin.y = v21 - v25 * 0.5;
                  v124.size.width = v23;
                  v124.size.height = v25;
                  Width = CGRectGetWidth(v124);
                  v125.origin.x = v30;
                  v125.origin.y = v114;
                  v125.size.width = v31;
                  v125.size.height = v115;
                  v33 = CGRectGetWidth(v125);
                  if (v33 >= Width)
                    v33 = Width;
                  v112 = v33;
                  v126.origin.x = v19 - v23 * 0.5;
                  v126.origin.y = v21 - v25 * 0.5;
                  v126.size.width = v23;
                  v126.size.height = v25;
                  Height = CGRectGetHeight(v126);
                  v127.origin.x = v30;
                  v127.origin.y = v114;
                  v127.size.width = v31;
                  v127.size.height = v115;
                  v35 = CGRectGetHeight(v127);
                  if (v35 >= Height)
                    v35 = Height;
                  v111 = v35;
                  v128.origin.x = v19 - v23 * 0.5;
                  v128.origin.y = v21 - v25 * 0.5;
                  v128.size.width = v23;
                  v128.size.height = v25;
                  MidX = CGRectGetMidX(v128);
                  v129.origin.x = v30;
                  v129.origin.y = v114;
                  v129.size.width = v31;
                  v129.size.height = v115;
                  v36 = CGRectGetMidX(v129);
                  v130.origin.x = v19 - v23 * 0.5;
                  v130.origin.y = v21 - v25 * 0.5;
                  v130.size.width = v23;
                  v130.size.height = v25;
                  MidY = CGRectGetMidY(v130);
                  v131.origin.x = v30;
                  v131.origin.y = v114;
                  v131.size.width = v31;
                  v131.size.height = v115;
                  v38 = CGRectGetMidY(v131);
                  v39 = qword_256FC4888;
                  v40 = *(double *)(*(_QWORD *)(v15 + qword_256FC4888) + 48);
                  a2 = *(_QWORD *)(v16 + *a6);
                  v121 = (_QWORD *)a2;
                  swift_bridgeObjectRetain_n();
                  sub_2400E7104((uint64_t *)&v121);
                  if (v113)
                  {
LABEL_161:
                    swift_release();
                    __break(1u);
LABEL_162:
                    swift_release();
                    __break(1u);
LABEL_163:
                    v12 = v8;
                    goto LABEL_3;
                  }
                  v41 = fmax(v112, 0.01);
                  v42 = fmax(v111, 0.01);
                  v26 = sqrt((MidX - v36) / v41 * ((MidX - v36) / v41) + (MidY - v38) / v42 * ((MidY - v38) / v42))
                      / v40;
                  v43 = v121[2];
                  if (v43)
                  {
                    v44 = (double *)&v121[2 * v43];
                    v45 = *((_QWORD *)v44 + 2);
                    v46 = v44[3];
                    swift_bridgeObjectRelease();
                    swift_release();
                    v47 = *(double **)(v15 + v39);
                    v48 = v47[20];
                    if (v48 < v46)
                    {
                      a2 = v108;
                      if (v48 < *(double *)(v15 + qword_256FC4868 + 8) && v45 != -1)
                      {
                        v49 = *(_QWORD *)(v15 + qword_256FC4868);
                        if (v49 != -1)
                        {
                          if (v49 == v45)
                            v26 = v26 - v47[4];
                          else
                            v26 = v26 + v47[21];
                        }
                      }
                      goto LABEL_55;
                    }
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    swift_release();
                  }
                  a2 = v108;
LABEL_55:
                  v50 = v16 + *a7;
                  if ((*(_BYTE *)(v50 + 8) & 1) != 0
                    || (v51 = *(_QWORD *)v50, v51 == -1)
                    || *(_QWORD *)(v15 + qword_256FC4860) != v51)
                  {
                    swift_release();
                    swift_release();
                  }
                  else
                  {
                    v52 = *(double *)(*(_QWORD *)(v15 + v39) + 40);
                    swift_release();
                    swift_release();
                    v26 = v26 - v52;
                  }
                  goto LABEL_34;
                }
              }
            }
          }
          swift_release();
          swift_release();
          v26 = 1.79769313e308;
LABEL_34:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v14 = sub_240078184(0, v14[2] + 1, 1, v14);
          v9 = v14[2];
          v27 = v14[3];
          if (v9 >= v27 >> 1)
            v14 = sub_240078184((_QWORD *)(v27 > 1), v9 + 1, 1, v14);
          v28 = (double *)&v14[3 * v9];
          *((_QWORD *)v28 + 4) = v8;
          *((_QWORD *)v28 + 5) = a3;
          v14[2] = v9 + 1;
          v28[6] = v26;
          if (v13 == ++a3)
            goto LABEL_7;
        }
      }
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
LABEL_149:
      __break(1u);
LABEL_150:
      __break(1u);
LABEL_151:
      __break(1u);
LABEL_152:
      swift_bridgeObjectRetain();
      v8 = sub_240154D30();
      swift_bridgeObjectRelease();
      if ((v8 & 0x8000000000000000) != 0)
      {
        __break(1u);
        continue;
      }
      goto LABEL_163;
    }
    break;
  }
LABEL_120:
  if (v86)
  {
    v87 = 0;
    v88 = a3 & 0xC000000000000001;
    a2 = a3 & 0xFFFFFFFFFFFFFF8;
    v89 = a3 + 32;
    do
    {
      if (v87 == v86)
        goto LABEL_144;
      a3 = v122;
      if (*(_QWORD *)(v122 + 16))
      {
        v91 = sub_240154FDC();
        v92 = -1 << *(_BYTE *)(a3 + 32);
        v93 = v91 & ~v92;
        if (((*(_QWORD *)(a3 + 56 + ((v93 >> 3) & 0xFFFFFFFFFFFFF8)) >> v93) & 1) != 0)
        {
          v94 = *(_QWORD *)(a3 + 48);
          if (*(_QWORD *)(v94 + 8 * v93) == v87)
            goto LABEL_123;
          v95 = ~v92;
          while (1)
          {
            v93 = (v93 + 1) & v95;
            if (((*(_QWORD *)(a3 + 56 + ((v93 >> 3) & 0xFFFFFFFFFFFFF8)) >> v93) & 1) == 0)
              break;
            if (*(_QWORD *)(v94 + 8 * v93) == v87)
              goto LABEL_123;
          }
        }
      }
      if (v88)
      {
        v96 = MEMORY[0x24267D4E0](v87, v108);
      }
      else
      {
        if (v87 >= *(_QWORD *)(a2 + 16))
          goto LABEL_146;
        v96 = *(_QWORD *)(v89 + 8 * v87);
        swift_retain();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v9 = a4(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
      v98 = *(_QWORD *)(v9 + 16);
      v97 = *(_QWORD *)(v9 + 24);
      if (v98 >= v97 >> 1)
        v9 = a4(v97 > 1, v98 + 1, 1, v9);
      *(_QWORD *)(v9 + 16) = v98 + 1;
      v90 = (_QWORD *)(v9 + 24 * v98);
      v90[4] = 0;
      v90[5] = v96;
      v90[6] = 0;
      a3 = (uint64_t)&v122;
      sub_240084408((uint64_t *)&v121, v87);
LABEL_123:
      ++v87;
    }
    while (v87 != v86);
  }
  v99 = v102(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v99;
}

uint64_t static DKTrackerUtils.greedyAssociation<A, B>(left:right:threshold:costFunction:)(uint64_t a1, uint64_t a2, double (*a3)(char *, char *), double a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t TupleTypeMetadata3;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t i;
  uint64_t v33;
  uint64_t v34;
  double v35;
  unint64_t v36;
  unint64_t v37;
  double *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  double v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t result;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118[2];
  uint64_t v119;
  uint64_t v120;

  v112 = a1;
  v113 = a2;
  v11 = sub_240154A30();
  v12 = sub_240154A30();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x24BDAC7A8](TupleTypeMetadata3);
  v15 = (char *)&v100 - v14;
  v110 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v109 = (char *)&v100 - v17;
  v108 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v107 = (char *)&v100 - v19;
  v117 = a7;
  v115 = *(_QWORD *)(a7 - 8);
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v100 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v114 = *(_QWORD *)(a6 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)&v100 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v119 = MEMORY[0x24BEE4B08];
  v120 = MEMORY[0x24BEE4B08];
  v118[1] = sub_240154538();
  v116 = a6;
  v26 = MEMORY[0x24267D168](v112, a6);
  if (v26 < 0)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  v102 = v15;
  v111 = v26;
  v104 = v12;
  v105 = v11;
  v103 = TupleTypeMetadata3;
  if (!v26)
  {
    v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_16:
    v118[0] = (uint64_t)v30;
    swift_bridgeObjectRetain_n();
    sub_2400C914C(v118);
    swift_bridgeObjectRelease_n();
    v39 = v118[0];
    v40 = *(_QWORD *)(v118[0] + 16);
    if (v40)
    {
      v41 = 0;
      v42 = v118[0] + 32;
      v101 = v118[0];
      do
      {
        if (v41 >= *(_QWORD *)(v39 + 16))
          goto LABEL_63;
        v51 = v42 + 24 * v41;
        v52 = *(double *)(v51 + 16);
        if (v52 < a4)
        {
          v53 = *(_QWORD *)v51;
          v54 = *(_QWORD *)(v51 + 8);
          v55 = v120;
          if (*(_QWORD *)(v120 + 16))
          {
            v56 = sub_240154FDC();
            v57 = -1 << *(_BYTE *)(v55 + 32);
            v58 = v56 & ~v57;
            if (((*(_QWORD *)(v55 + 56 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) != 0)
            {
              v59 = *(_QWORD *)(v55 + 48);
              if (*(_QWORD *)(v59 + 8 * v58) == v53)
                goto LABEL_19;
              v60 = ~v57;
              while (1)
              {
                v58 = (v58 + 1) & v60;
                if (((*(_QWORD *)(v55 + 56 + ((v58 >> 3) & 0xFFFFFFFFFFFFF8)) >> v58) & 1) == 0)
                  break;
                if (*(_QWORD *)(v59 + 8 * v58) == v53)
                  goto LABEL_19;
              }
            }
          }
          v61 = v119;
          if (*(_QWORD *)(v119 + 16))
          {
            v62 = sub_240154FDC();
            v63 = -1 << *(_BYTE *)(v61 + 32);
            v64 = v62 & ~v63;
            if (((*(_QWORD *)(v61 + 56 + ((v64 >> 3) & 0xFFFFFFFFFFFFF8)) >> v64) & 1) != 0)
            {
              v65 = *(_QWORD *)(v61 + 48);
              if (*(_QWORD *)(v65 + 8 * v64) == v54)
                goto LABEL_19;
              v66 = ~v63;
              while (1)
              {
                v64 = (v64 + 1) & v66;
                if (((*(_QWORD *)(v61 + 56 + ((v64 >> 3) & 0xFFFFFFFFFFFFF8)) >> v64) & 1) == 0)
                  break;
                if (*(_QWORD *)(v65 + 8 * v64) == v54)
                  goto LABEL_19;
              }
            }
          }
          v43 = v107;
          v44 = v116;
          sub_240154850();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v43, 0, 1, v44);
          v106 = v53;
          v45 = v109;
          v46 = v117;
          sub_240154850();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v45, 0, 1, v46);
          v47 = v54;
          v48 = v102;
          v49 = &v102[*(int *)(v103 + 48)];
          v50 = *(int *)(v103 + 64);
          (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v102, v43, v105);
          (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v49, v45, v104);
          *(double *)&v48[v50] = v52;
          sub_240154844();
          sub_24015482C();
          sub_240084408(v118, v106);
          sub_240084408(v118, v47);
          v39 = v101;
        }
LABEL_19:
        ++v41;
      }
      while (v41 != v40);
    }
    swift_release();
    v68 = v104;
    v67 = v105;
    v69 = v103;
    v70 = v102;
    if (v111)
    {
      v71 = 0;
      v72 = v111 & ~(v111 >> 63);
      v73 = v107;
      v74 = v109;
      do
      {
        if (v71 == v72)
          goto LABEL_64;
        v78 = v120;
        if (*(_QWORD *)(v120 + 16))
        {
          v79 = sub_240154FDC();
          v80 = -1 << *(_BYTE *)(v78 + 32);
          v81 = v79 & ~v80;
          if (((*(_QWORD *)(v78 + 56 + ((v81 >> 3) & 0xFFFFFFFFFFFFF8)) >> v81) & 1) != 0)
          {
            v82 = *(_QWORD *)(v78 + 48);
            if (*(_QWORD *)(v82 + 8 * v81) == v71)
              goto LABEL_39;
            v83 = ~v80;
            while (1)
            {
              v81 = (v81 + 1) & v83;
              if (((*(_QWORD *)(v78 + 56 + ((v81 >> 3) & 0xFFFFFFFFFFFFF8)) >> v81) & 1) == 0)
                break;
              if (*(_QWORD *)(v82 + 8 * v81) == v71)
                goto LABEL_39;
            }
          }
        }
        v75 = v116;
        sub_240154850();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v114 + 56))(v73, 0, 1, v75);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v115 + 56))(v74, 1, 1, v117);
        v76 = &v70[*(int *)(v69 + 48)];
        v77 = *(int *)(v69 + 64);
        (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v70, v73, v67);
        (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v76, v74, v68);
        *(_QWORD *)&v70[v77] = 0;
        sub_240154844();
        sub_24015482C();
        sub_240084408(v118, v71);
LABEL_39:
        ++v71;
      }
      while (v71 != v111);
    }
    swift_bridgeObjectRelease();
    v84 = MEMORY[0x24267D168](v113, v117);
    if (v84 < 0)
    {
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    v85 = v84;
    if (!v84)
    {
LABEL_61:
      swift_getTupleTypeMetadata3();
      v98 = sub_240154C88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v98;
    }
    v86 = 0;
    v87 = v107;
    v88 = v109;
    while (1)
    {
      if (v86 == v85)
        goto LABEL_65;
      v92 = v119;
      if (*(_QWORD *)(v119 + 16))
      {
        v93 = sub_240154FDC();
        v94 = -1 << *(_BYTE *)(v92 + 32);
        v95 = v93 & ~v94;
        if (((*(_QWORD *)(v92 + 56 + ((v95 >> 3) & 0xFFFFFFFFFFFFF8)) >> v95) & 1) != 0)
        {
          v96 = *(_QWORD *)(v92 + 48);
          if (*(_QWORD *)(v96 + 8 * v95) == v86)
            goto LABEL_52;
          v97 = ~v94;
          while (1)
          {
            v95 = (v95 + 1) & v97;
            if (((*(_QWORD *)(v92 + 56 + ((v95 >> 3) & 0xFFFFFFFFFFFFF8)) >> v95) & 1) == 0)
              break;
            if (*(_QWORD *)(v96 + 8 * v95) == v86)
              goto LABEL_52;
          }
        }
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v114 + 56))(v87, 1, 1, v116);
      v89 = v117;
      sub_240154850();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v115 + 56))(v88, 0, 1, v89);
      v90 = &v70[*(int *)(v69 + 48)];
      v91 = *(int *)(v69 + 64);
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v70, v87, v67);
      (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v90, v88, v68);
      *(_QWORD *)&v70[v91] = 0;
      sub_240154844();
      sub_24015482C();
      sub_240084408(v118, v86);
LABEL_52:
      if (++v86 == v85)
        goto LABEL_61;
    }
  }
  v27 = MEMORY[0x24267D168](v113, v117);
  if ((v27 & 0x8000000000000000) == 0)
  {
    v28 = v27;
    v29 = 0;
    v30 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v31 = v111;
    while (v29 != v31)
    {
      if (v28)
      {
        for (i = 0; i != v28; ++i)
        {
          v33 = v116;
          sub_240154850();
          v34 = v117;
          sub_240154850();
          v35 = a3(v25, v22);
          (*(void (**)(char *, uint64_t))(v115 + 8))(v22, v34);
          (*(void (**)(char *, uint64_t))(v114 + 8))(v25, v33);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v30 = sub_240078184(0, v30[2] + 1, 1, v30);
          v37 = v30[2];
          v36 = v30[3];
          if (v37 >= v36 >> 1)
            v30 = sub_240078184((_QWORD *)(v36 > 1), v37 + 1, 1, v30);
          v38 = (double *)&v30[3 * v37];
          *((_QWORD *)v38 + 4) = v29;
          *((_QWORD *)v38 + 5) = i;
          v30[2] = v37 + 1;
          v38[6] = v35;
        }
      }
      ++v29;
      v31 = v111;
      if (v29 == v111)
        goto LABEL_16;
    }
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
LABEL_68:
  __break(1u);
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t DKTrackerUtils.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DKTrackerUtils.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_2400C8B4C()
{
  uint64_t v0;
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB9BC0);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_24015AED0;
  *(_QWORD *)(v0 + 32) = CGColorCreateGenericRGB(1.0, 0.0, 0.0, 1.0);
  *(_QWORD *)(v0 + 40) = CGColorCreateGenericRGB(0.0, 1.0, 0.0, 1.0);
  *(_QWORD *)(v0 + 48) = CGColorCreateGenericRGB(0.0, 0.0, 1.0, 1.0);
  *(_QWORD *)(v0 + 56) = CGColorCreateGenericRGB(1.0, 1.0, 0.0, 1.0);
  *(_QWORD *)(v0 + 64) = CGColorCreateGenericRGB(0.5, 0.0, 0.5, 1.0);
  *(_QWORD *)(v0 + 72) = CGColorCreateGenericRGB(1.0, 0.5, 0.0, 1.0);
  *(_QWORD *)(v0 + 80) = CGColorCreateGenericRGB(0.0, 1.0, 1.0, 1.0);
  *(_QWORD *)(v0 + 88) = CGColorCreateGenericRGB(1.0, 0.0, 1.0, 1.0);
  result = sub_2401547B4();
  qword_256FB9990 = v0;
  return result;
}

uint64_t static DKRandomColorGenerator.predefinedColors.getter()
{
  if (qword_256FB3FE0 != -1)
    swift_once();
  return swift_bridgeObjectRetain();
}

uint64_t DKUUIDToNumberConversion.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_2401063E8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 24) = 0;
  return v0;
}

uint64_t DKRandomColorGenerator.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  type metadata accessor for DKUUIDToNumberConversion();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_2401063E8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t DKRandomColorGenerator.init()()
{
  uint64_t v0;
  uint64_t v1;

  type metadata accessor for DKUUIDToNumberConversion();
  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = sub_2401063E8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

id sub_2400C8D88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  if (qword_256FB3FE0 != -1)
    swift_once();
  if ((unint64_t)qword_256FB9990 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_240154D30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((qword_256FB9990 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = sub_2400C8ECC(a1, a2, v4);
  if ((qword_256FB9990 & 0xC000000000000001) != 0)
LABEL_13:
    JUMPOUT(0x24267D4E0);
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v5 >= *(_QWORD *)((qword_256FB9990 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  return *(id *)(qword_256FB9990 + 8 * v5 + 32);
}

uint64_t DKRandomColorGenerator.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t DKRandomColorGenerator.__deallocating_deinit()
{
  return sub_24008FBB0((void (*)(_QWORD))MEMORY[0x24BEE4EF8]);
}

uint64_t DKUUIDToNumberConversion.init()()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = sub_2401063E8(MEMORY[0x24BEE4AF8]);
  *(_QWORD *)(v0 + 24) = 0;
  return v0;
}

uint64_t sub_2400C8ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v4 = v3;
  v8 = sub_24015434C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v3 + 16);
  if (*(_QWORD *)(v12 + 16))
  {
    swift_bridgeObjectRetain();
    v13 = sub_24013F178(a1);
    if ((v14 & 1) != 0)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      return v15;
    }
    swift_bridgeObjectRelease();
  }
  swift_retain();
  v16 = sub_2400C9BA4(a2, v4);
  swift_release();
  v17 = sub_240096944((uint64_t)v16);
  result = swift_bridgeObjectRelease();
  if (a3)
  {
    v34 = a1;
    v35 = v9;
    v36 = v8;
    v19 = 0;
    v20 = v17 + 56;
    if (a3 <= 1)
      v21 = 1;
    else
      v21 = a3;
    while (1)
    {
      v22 = *(_QWORD *)(v4 + 24);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
        break;
      if (v24 == 0x8000000000000000 && a3 == -1)
        goto LABEL_27;
      v15 = v24 % a3;
      *(_QWORD *)(v4 + 24) = v24 % a3;
      if (!*(_QWORD *)(v17 + 16))
        goto LABEL_23;
      result = sub_240154FDC();
      v26 = -1 << *(_BYTE *)(v17 + 32);
      v27 = result & ~v26;
      if (((*(_QWORD *)(v20 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
        goto LABEL_23;
      v28 = *(_QWORD *)(v17 + 48);
      if (*(_QWORD *)(v28 + 8 * v27) != v15)
      {
        v29 = ~v26;
        while (1)
        {
          v27 = (v27 + 1) & v29;
          if (((*(_QWORD *)(v20 + ((v27 >> 3) & 0xFFFFFFFFFFFFF8)) >> v27) & 1) == 0)
            break;
          if (*(_QWORD *)(v28 + 8 * v27) == v15)
            goto LABEL_10;
        }
LABEL_23:
        swift_bridgeObjectRelease();
        v30 = v35;
        v31 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v11, v34, v36);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v37 = *(_QWORD *)(v4 + 16);
        *(_QWORD *)(v4 + 16) = 0x8000000000000000;
        sub_240072680(v15, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
        *(_QWORD *)(v4 + 16) = v37;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
        return v15;
      }
LABEL_10:
      if (++v19 == v21)
      {
        swift_bridgeObjectRelease();
        return 0;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t DKUUIDToNumberConversion.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKUUIDToNumberConversion.__deallocating_deinit()
{
  return sub_24008FBB0((void (*)(_QWORD))MEMORY[0x24BEE4BC0]);
}

uint64_t sub_2400C914C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_24013571C(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_2400C91D4(v5);
  *a1 = v2;
  return result;
}

uint64_t type metadata accessor for DKUUIDToNumberConversion()
{
  return objc_opt_self();
}

uint64_t sub_2400C91D4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  double v15;
  double v16;
  double *v17;
  double v18;
  double v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  __int128 *v30;
  double v31;
  uint64_t v32;
  double *v33;
  __int128 v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  BOOL v50;
  unint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  char v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  unint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t i;
  double v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  char *v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  unint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *__dst;

  v3 = a1[1];
  result = sub_240154EB0();
  if (result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v86 = *a1;
      v87 = *a1 + 16;
      v88 = -1;
      for (i = 1; i != v3; ++i)
      {
        v90 = *(double *)(v86 + 24 * i + 16);
        v91 = v88;
        v92 = v87;
        do
        {
          if (v90 >= *(double *)v92)
            break;
          if (!v86)
            goto LABEL_141;
          v93 = *(_OWORD *)(v92 + 8);
          *(_OWORD *)(v92 + 8) = *(_OWORD *)(v92 - 16);
          *(_QWORD *)(v92 + 24) = *(_QWORD *)v92;
          *(_OWORD *)(v92 - 16) = v93;
          *(double *)v92 = v90;
          v92 -= 24;
        }
        while (!__CFADD__(v91++, 1));
        v87 += 24;
        --v88;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v103 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    __dst = (char *)(MEMORY[0x24BEE4AF8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
      v12 = (char *)MEMORY[0x24BEE4AF8];
LABEL_103:
      v95 = v12;
      v105 = v9;
      if (v13 >= 2)
      {
        v96 = *v103;
        do
        {
          v97 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v96)
            goto LABEL_145;
          v98 = v95;
          v99 = *(_QWORD *)&v95[16 * v97 + 32];
          v100 = *(_QWORD *)&v95[16 * v13 + 24];
          sub_2400C98E8((char *)(v96 + 24 * v99), (char *)(v96 + 24 * *(_QWORD *)&v95[16 * v13 + 16]), v96 + 24 * v100, __dst);
          if (v1)
            break;
          if (v100 < v99)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v98 = sub_2401356E0((uint64_t)v98);
          if (v97 >= *((_QWORD *)v98 + 2))
            goto LABEL_134;
          v101 = &v98[16 * v97 + 32];
          *(_QWORD *)v101 = v99;
          *((_QWORD *)v101 + 1) = v100;
          v102 = *((_QWORD *)v98 + 2);
          if (v13 > v102)
            goto LABEL_135;
          memmove(&v98[16 * v13 + 16], &v98[16 * v13 + 32], 16 * (v102 - v13));
          v95 = v98;
          *((_QWORD *)v98 + 2) = v102 - 1;
          v13 = v102 - 1;
        }
        while (v102 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v105 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    v105 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v7 = v5 >> 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB9BC8);
    v8 = sub_2401547FC();
    *(_QWORD *)(v8 + 16) = v7;
    v105 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v104 = *a1 + 64;
  v12 = (char *)MEMORY[0x24BEE4AF8];
  v106 = v6;
  v107 = v3;
  v108 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(double *)(v11 + 24 * v10 + 16);
      v16 = *(double *)(v11 + 24 * v14 + 16);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v104 + 24 * v14);
        v18 = v15;
        while (1)
        {
          v19 = v18;
          v18 = *v17;
          if (v15 < v16 == *v17 >= v19)
            break;
          ++v10;
          v17 += 3;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v20 = 24 * v10;
          v21 = 24 * v14;
          v22 = v10;
          v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11)
                goto LABEL_144;
              v24 = v11 + v21;
              v25 = v11 + v20;
              v26 = *(_QWORD *)(v11 + v21 + 16);
              v27 = *(_OWORD *)(v11 + v21);
              v28 = *(_QWORD *)(v11 + v20 - 8);
              *(_OWORD *)v24 = *(_OWORD *)(v11 + v20 - 24);
              *(_QWORD *)(v24 + 16) = v28;
              *(_OWORD *)(v25 - 24) = v27;
              *(_QWORD *)(v25 - 8) = v26;
            }
            ++v23;
            v20 -= 24;
            v21 += 24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= v6)
      goto LABEL_46;
    v29 = v14 + v6;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v29 >= v3)
      v29 = v3;
    if (v29 < v14)
      break;
    if (v10 != v29)
    {
      v30 = (__int128 *)(v11 + 24 * v10);
      do
      {
        v31 = *(double *)(v11 + 24 * v10 + 16);
        v32 = v14;
        v33 = (double *)v30;
        do
        {
          if (v31 >= *(v33 - 1))
            break;
          if (!v11)
            goto LABEL_142;
          v34 = *(_OWORD *)v33;
          *(_OWORD *)v33 = *(_OWORD *)(v33 - 3);
          v33[2] = *(v33 - 1);
          *(v33 - 1) = v31;
          *(_OWORD *)(v33 - 3) = v34;
          v33 -= 3;
          ++v32;
        }
        while (v10 != v32);
        ++v10;
        v30 = (__int128 *)((char *)v30 + 24);
      }
      while (v10 != v29);
      v10 = v29;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_240135220(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v36 = *((_QWORD *)v12 + 2);
    v35 = *((_QWORD *)v12 + 3);
    v13 = v36 + 1;
    v11 = v108;
    if (v36 >= v35 >> 1)
    {
      v85 = sub_240135220((char *)(v35 > 1), v36 + 1, 1, v12);
      v11 = v108;
      v12 = v85;
    }
    *((_QWORD *)v12 + 2) = v13;
    v37 = v12 + 32;
    v38 = &v12[16 * v36 + 32];
    *(_QWORD *)v38 = v14;
    *((_QWORD *)v38 + 1) = v10;
    if (v36)
    {
      while (1)
      {
        v39 = v13 - 1;
        if (v13 >= 4)
        {
          v44 = &v37[16 * v13];
          v45 = *((_QWORD *)v44 - 8);
          v46 = *((_QWORD *)v44 - 7);
          v50 = __OFSUB__(v46, v45);
          v47 = v46 - v45;
          if (v50)
            goto LABEL_120;
          v49 = *((_QWORD *)v44 - 6);
          v48 = *((_QWORD *)v44 - 5);
          v50 = __OFSUB__(v48, v49);
          v42 = v48 - v49;
          v43 = v50;
          if (v50)
            goto LABEL_121;
          v51 = v13 - 2;
          v52 = &v37[16 * v13 - 32];
          v54 = *(_QWORD *)v52;
          v53 = *((_QWORD *)v52 + 1);
          v50 = __OFSUB__(v53, v54);
          v55 = v53 - v54;
          if (v50)
            goto LABEL_123;
          v50 = __OFADD__(v42, v55);
          v56 = v42 + v55;
          if (v50)
            goto LABEL_126;
          if (v56 >= v47)
          {
            v74 = &v37[16 * v39];
            v76 = *(_QWORD *)v74;
            v75 = *((_QWORD *)v74 + 1);
            v50 = __OFSUB__(v75, v76);
            v77 = v75 - v76;
            if (v50)
              goto LABEL_130;
            v67 = v42 < v77;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v68 = *((_QWORD *)v12 + 4);
            v69 = *((_QWORD *)v12 + 5);
            v50 = __OFSUB__(v69, v68);
            v61 = v69 - v68;
            v62 = v50;
            goto LABEL_77;
          }
          v41 = *((_QWORD *)v12 + 4);
          v40 = *((_QWORD *)v12 + 5);
          v50 = __OFSUB__(v40, v41);
          v42 = v40 - v41;
          v43 = v50;
        }
        if ((v43 & 1) != 0)
          goto LABEL_122;
        v51 = v13 - 2;
        v57 = &v37[16 * v13 - 32];
        v59 = *(_QWORD *)v57;
        v58 = *((_QWORD *)v57 + 1);
        v60 = __OFSUB__(v58, v59);
        v61 = v58 - v59;
        v62 = v60;
        if (v60)
          goto LABEL_125;
        v63 = &v37[16 * v39];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        v50 = __OFSUB__(v64, v65);
        v66 = v64 - v65;
        if (v50)
          goto LABEL_128;
        if (__OFADD__(v61, v66))
          goto LABEL_129;
        if (v61 + v66 >= v42)
        {
          v67 = v42 < v66;
LABEL_83:
          if (v67)
            v39 = v51;
          goto LABEL_85;
        }
LABEL_77:
        if ((v62 & 1) != 0)
          goto LABEL_124;
        v70 = &v37[16 * v39];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v50 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v50)
          goto LABEL_127;
        if (v73 < v61)
          goto LABEL_15;
LABEL_85:
        v78 = v39 - 1;
        if (v39 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v79 = v12;
        v80 = &v37[16 * v78];
        v81 = *(_QWORD *)v80;
        v82 = &v37[16 * v39];
        v83 = *((_QWORD *)v82 + 1);
        sub_2400C98E8((char *)(v11 + 24 * *(_QWORD *)v80), (char *)(v11 + 24 * *(_QWORD *)v82), v11 + 24 * v83, __dst);
        if (v1)
          goto LABEL_93;
        if (v83 < v81)
          goto LABEL_117;
        if (v39 > *((_QWORD *)v79 + 2))
          goto LABEL_118;
        *(_QWORD *)v80 = v81;
        *(_QWORD *)&v37[16 * v78 + 8] = v83;
        v84 = *((_QWORD *)v79 + 2);
        if (v39 >= v84)
          goto LABEL_119;
        v12 = v79;
        v13 = v84 - 1;
        memmove(&v37[16 * v39], v82 + 16, 16 * (v84 - 1 - v39));
        *((_QWORD *)v79 + 2) = v84 - 1;
        v11 = v108;
        if (v84 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v106;
    v3 = v107;
    if (v10 >= v107)
    {
      v9 = v105;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = sub_240154CF4();
  __break(1u);
  return result;
}

uint64_t sub_2400C98E8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  __int128 v16;
  char *v17;
  unint64_t v18;
  char *v19;
  char *v20;
  __int128 v21;
  __int128 v22;
  uint64_t result;
  char *v24;
  char *v25;
  char *v26;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 24;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v26 = __src;
  v25 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst)
        memmove(__dst, a2, 24 * v11);
      v17 = &v4[24 * v11];
      v24 = v17;
      v26 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        v18 = a3 - 24;
        do
        {
          v19 = (char *)(v18 + 24);
          if (*((double *)v17 - 1) >= *((double *)v6 - 1))
          {
            v24 = v17 - 24;
            if (v19 < v17 || v18 >= (unint64_t)v17 || v19 != v17)
            {
              v22 = *(_OWORD *)(v17 - 24);
              *(_QWORD *)(v18 + 16) = *((_QWORD *)v17 - 1);
              *(_OWORD *)v18 = v22;
            }
            v20 = v6;
            v17 -= 24;
            if (v6 <= v7)
              break;
          }
          else
          {
            v20 = v6 - 24;
            if (v19 != v6 || v18 >= (unint64_t)v6)
            {
              v21 = *(_OWORD *)v20;
              *(_QWORD *)(v18 + 16) = *((_QWORD *)v6 - 1);
              *(_OWORD *)v18 = v21;
            }
            v26 = v6 - 24;
            if (v20 <= v7)
              break;
          }
          v18 -= 24;
          v6 = v20;
        }
        while (v17 > v4);
      }
LABEL_40:
      sub_2401353C0(&v26, &v25, &v24);
      return 1;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst)
      memmove(__dst, __src, 24 * v9);
    v12 = &v4[24 * v9];
    v24 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      v13 = v4;
      while (1)
      {
        if (*((double *)v6 + 2) >= *((double *)v13 + 2))
        {
          v4 = v13 + 24;
          v15 = v13;
          v14 = v6;
          if (v7 == v13)
          {
            v13 += 24;
            if (v7 < v4)
              goto LABEL_18;
          }
          else
          {
            v13 += 24;
          }
        }
        else
        {
          v14 = v6 + 24;
          v15 = v6;
          if (v7 == v6 && v7 < v14)
            goto LABEL_18;
        }
        v16 = *(_OWORD *)v15;
        *((_QWORD *)v7 + 2) = *((_QWORD *)v15 + 2);
        *(_OWORD *)v7 = v16;
LABEL_18:
        v7 += 24;
        if (v13 < v12)
        {
          v6 = v14;
          if ((unint64_t)v14 < a3)
            continue;
        }
        v25 = v4;
        v26 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  result = sub_240154D60();
  __break(1u);
  return result;
}

_QWORD *sub_2400C9BA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  _QWORD *v32;

  v28 = a2;
  v4 = sub_24015434C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v27[0] = a1;
    v27[1] = v2;
    v12 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v30 = *(_QWORD *)(v5 + 72);
    v31 = v13;
    swift_bridgeObjectRetain();
    v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v14 = v28;
    while (1)
    {
      v31(v10, v12, v4);
      v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v15(v10, 0, 1, v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
        goto LABEL_17;
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      v16 = *(_QWORD *)(v14 + 16);
      if (*(_QWORD *)(v16 + 16))
      {
        swift_bridgeObjectRetain();
        v17 = sub_24013F178((uint64_t)v7);
        if ((v18 & 1) != 0)
        {
          v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v29 = v19;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            v32 = sub_240078BFC(0, v32[2] + 1, 1, v32);
          v22 = v32[2];
          v21 = v32[3];
          if (v22 >= v21 >> 1)
            v32 = sub_240078BFC((_QWORD *)(v21 > 1), v22 + 1, 1, v32);
          v23 = v32;
          v32[2] = v22 + 1;
          v24 = &v23[v22];
          v14 = v28;
          v24[4] = v29;
          goto LABEL_5;
        }
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
LABEL_5:
      v12 += v30;
      if (!--v11)
      {
        v15(v10, 1, 1, v4);
        goto LABEL_17;
      }
    }
  }
  v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  swift_bridgeObjectRetain();
  v32 = (_QWORD *)MEMORY[0x24BEE4AF8];
  v25(v10, 1, 1, v4);
LABEL_17:
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_2400C9E30(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  char v61;
  void (*v62)(char *, uint64_t);
  int isUniquelyReferenced_nonNull_native;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  BOOL v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  long double v78;
  long double v79;
  double v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  double v84;
  unint64_t v85;
  unint64_t v86;
  double *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  double v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  void (*v118)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  void (*v136)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void (*v151)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t result;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  unint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  _QWORD *v192;
  void (*v193)(char *, uint64_t, uint64_t, uint64_t);
  char *v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(char *, char *, uint64_t);
  int v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;

  v176 = a3;
  v7 = type metadata accessor for DKPersonGroupFilter.Track(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v159 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v159 - v12;
  v14 = sub_24015434C();
  v200 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v159 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v199 = (char *)&v159 - v18;
  MEMORY[0x24BDAC7A8](v19);
  v201 = (char *)&v159 - v20;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB5DE8);
  MEMORY[0x24BDAC7A8](v21);
  v194 = (char *)&v159 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4ED0);
  v171 = *(_QWORD *)(v172 - 8);
  MEMORY[0x24BDAC7A8](v172);
  v160 = (uint64_t)&v159 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v24);
  v169 = (uint64_t)&v159 - v25;
  MEMORY[0x24BDAC7A8](v26);
  v170 = (uint64_t)&v159 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB65E8);
  MEMORY[0x24BDAC7A8](v28);
  v159 = (uint64_t)&v159 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v30);
  v161 = (uint64_t)&v159 - v31;
  MEMORY[0x24BDAC7A8](v32);
  v163 = (char *)&v159 - v33;
  MEMORY[0x24BDAC7A8](v34);
  v162 = (uint64_t)&v159 - v35;
  MEMORY[0x24BDAC7A8](v36);
  v165 = (char *)&v159 - v37;
  MEMORY[0x24BDAC7A8](v38);
  v164 = (char *)&v159 - v39;
  v203 = MEMORY[0x24BEE4B08];
  v204 = MEMORY[0x24BEE4B08];
  v168 = a1;
  v40 = *(_QWORD *)(a1 + 16);
  v166 = a2;
  v187 = v7;
  v167 = v8;
  v173 = v40;
  if (v40)
  {
    v186 = 0;
    v185 = *(_QWORD *)(a2 + 16);
    v41 = (_QWORD *)MEMORY[0x24BEE4AF8];
    v177 = xmmword_240155A40;
    v175 = v10;
    v174 = v13;
    while (!v185)
    {
LABEL_3:
      ++v186;
      a2 = v166;
      v8 = v167;
      if (v186 == v173)
        goto LABEL_51;
    }
    v42 = 0;
    v43 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v184 = *(_QWORD *)(v8 + 72);
    v44 = v168 + v43 + v184 * v186;
    v183 = a2 + v43;
    v45 = *(int *)(v7 + 20);
    v178 = v44;
    v182 = v44 + v45;
    a2 = v200;
    v8 = *(_QWORD *)(v200 + 72);
    v46 = *(unsigned __int8 *)(v200 + 80);
    v181 = (v46 + 32) & ~v46;
    v180 = v181 + 2 * v8;
    v179 = v46 | 7;
    while (1)
    {
      v191 = v42 + 1;
      v192 = v41;
      v190 = v42;
      v47 = v183 + v42 * v184;
      __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4ED8);
      v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = v177;
      v188 = v48;
      v49 = v48 + v181;
      v50 = *(void (**)(uint64_t, uint64_t, uint64_t))(a2 + 16);
      v50(v48 + v181, v182, v14);
      v195 = v49;
      v51 = *(int *)(v7 + 20);
      v189 = v47;
      v50(v49 + v8, v47 + v51, v14);
      v196 = sub_2400CBD1C(&qword_256FB5A60, MEMORY[0x24BDCEA88]);
      v52 = sub_2401548D4();
      v53 = 0;
      v54 = 0;
      v55 = v194;
      while (1)
      {
        v56 = v53;
        v50((uint64_t)v55, v195 + v54 * v8, v14);
        v193 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(a2 + 56);
        v193(v55, 0, 1, v14);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(a2 + 48))(v55, 1, v14) == 1)
          break;
        v198 = v56;
        v197 = *(void (**)(char *, char *, uint64_t))(a2 + 32);
        v197(v201, v55, v14);
        swift_bridgeObjectRetain();
        v57 = sub_2401545BC();
        v58 = -1 << *(_BYTE *)(v52 + 32);
        v59 = v57 & ~v58;
        if (((*(_QWORD *)(v52 + 56 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) != 0)
        {
          v60 = ~v58;
          while (1)
          {
            v50((uint64_t)v16, *(_QWORD *)(v52 + 48) + v59 * v8, v14);
            sub_2400CBD1C((unint64_t *)&qword_256FB5A68, MEMORY[0x24BDCEA98]);
            v61 = sub_240154610();
            v62 = *(void (**)(char *, uint64_t))(a2 + 8);
            v62(v16, v14);
            if ((v61 & 1) != 0)
              break;
            v59 = (v59 + 1) & v60;
            a2 = v200;
            if (((*(_QWORD *)(v52 + 56 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) == 0)
              goto LABEL_14;
          }
          swift_bridgeObjectRelease();
          v62(v201, v14);
        }
        else
        {
LABEL_14:
          swift_bridgeObjectRelease();
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v50((uint64_t)v199, (uint64_t)v201, v14);
          v202 = (char *)v52;
          if (*(_QWORD *)(v52 + 24) <= *(_QWORD *)(v52 + 16))
          {
            if (isUniquelyReferenced_nonNull_native)
              sub_2400F4A08();
            else
              sub_2400F6978();
            v64 = (uint64_t)v202;
            v65 = sub_2401545BC();
            v66 = -1 << *(_BYTE *)(v64 + 32);
            v59 = v65 & ~v66;
            if (((*(_QWORD *)(v64 + 56 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) != 0)
            {
              v67 = ~v66;
              do
              {
                v50((uint64_t)v16, *(_QWORD *)(v64 + 48) + v59 * v8, v14);
                sub_2400CBD1C((unint64_t *)&qword_256FB5A68, MEMORY[0x24BDCEA98]);
                v68 = sub_240154610();
                (*(void (**)(char *, uint64_t))(a2 + 8))(v16, v14);
                if ((v68 & 1) != 0)
                  goto LABEL_115;
                v59 = (v59 + 1) & v67;
              }
              while (((*(_QWORD *)(v64 + 56 + ((v59 >> 3) & 0xFFFFFFFFFFFFF8)) >> v59) & 1) != 0);
            }
          }
          else if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_2400F5D60();
          }
          v52 = (uint64_t)v202;
          *(_QWORD *)&v202[((v59 >> 3) & 0xFFFFFFFFFFFFFF8) + 56] |= 1 << v59;
          v197((char *)(*(_QWORD *)(v52 + 48) + v59 * v8), v199, v14);
          v69 = *(_QWORD *)(v52 + 16);
          v70 = __OFADD__(v69, 1);
          v71 = v69 + 1;
          if (v70)
          {
            __break(1u);
            goto LABEL_50;
          }
          *(_QWORD *)(v52 + 16) = v71;
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(a2 + 8))(v201, v14);
        }
        v53 = 1;
        v54 = 1;
        a2 = v200;
        v55 = v194;
        if ((v198 & 1) != 0)
        {
          v193(v194, 1, 1, v14);
          break;
        }
      }
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v72 = *(_QWORD *)(v176 + 48);
      if (!*(_QWORD *)(v72 + 16))
        goto LABEL_34;
      swift_bridgeObjectRetain();
      v73 = sub_24013F1E4(v52);
      if ((v74 & 1) == 0)
        break;
      v75 = *(_QWORD *)(*(_QWORD *)(v72 + 56) + 8 * v73);
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(_BYTE *)(v75 + 33) & 1) == 0)
      {
        swift_release();
        goto LABEL_35;
      }
      v7 = v187;
      v76 = (uint64_t)v175;
      v77 = (uint64_t)v174;
      v41 = v192;
      if ((*(_BYTE *)(v75 + 32) & 1) != 0)
      {
        v78 = *(double *)(v75 + 48);
        v79 = *(double *)(v75 + 56);
        swift_release();
        v80 = atan2(v78, v79);
      }
      else
      {
        v80 = *(double *)(v75 + 40);
        swift_release();
      }
LABEL_36:
      v81 = *(_QWORD *)(v178 + *(int *)(v7 + 24));
      sub_2400CBC9C(v178, v77);
      sub_2400CBC9C(v189, v76);
      if (v81 == -1)
      {
        sub_2400CBCE0(v76);
        sub_2400CBCE0(v77);
        v84 = 0.0;
      }
      else
      {
        v82 = *(_QWORD *)(v77 + *(int *)(v7 + 24));
        sub_2400CBCE0(v77);
        v83 = *(_QWORD *)(v76 + *(int *)(v7 + 24));
        sub_2400CBCE0(v76);
        if (v82 == v83)
          v84 = 0.75;
        else
          v84 = 0.0;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v41 = sub_240078184(0, v41[2] + 1, 1, v41);
      v86 = v41[2];
      v85 = v41[3];
      if (v86 >= v85 >> 1)
        v41 = sub_240078184((_QWORD *)(v85 > 1), v86 + 1, 1, v41);
      v41[2] = v86 + 1;
      v87 = (double *)&v41[3 * v86];
      v88 = v190;
      *((_QWORD *)v87 + 4) = v186;
      *((_QWORD *)v87 + 5) = v88;
      v87[6] = 1.0 - (v80 + v84);
      v42 = v191;
      if (v191 == v185)
        goto LABEL_3;
    }
    swift_bridgeObjectRelease();
LABEL_34:
    swift_bridgeObjectRelease();
LABEL_35:
    v80 = 0.0;
    v7 = v187;
    v76 = (uint64_t)v175;
    v77 = (uint64_t)v174;
    v41 = v192;
    goto LABEL_36;
  }
LABEL_50:
  v41 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_51:
  v202 = (char *)v41;
  swift_bridgeObjectRetain_n();
  sub_2400C914C((uint64_t *)&v202);
  swift_bridgeObjectRelease_n();
  v89 = (uint64_t)v202;
  v90 = *((_QWORD *)v202 + 2);
  if (!v90)
  {
    swift_release();
    v93 = MEMORY[0x24BEE4AF8];
LABEL_80:
    v125 = v187;
    if (v173)
    {
      v126 = 0;
      v127 = (uint64_t)v163;
      v128 = v169;
      while (1)
      {
        v129 = v204;
        if (!*(_QWORD *)(v204 + 16))
          goto LABEL_91;
        v130 = sub_240154FDC();
        v131 = -1 << *(_BYTE *)(v129 + 32);
        v132 = v130 & ~v131;
        if (((*(_QWORD *)(v129 + 56 + ((v132 >> 3) & 0xFFFFFFFFFFFFF8)) >> v132) & 1) == 0)
          goto LABEL_91;
        v133 = *(_QWORD *)(v129 + 48);
        if (*(_QWORD *)(v133 + 8 * v132) != v126)
          break;
LABEL_83:
        if (++v126 == v173)
          goto LABEL_95;
      }
      v134 = ~v131;
      while (1)
      {
        v132 = (v132 + 1) & v134;
        if (((*(_QWORD *)(v129 + 56 + ((v132 >> 3) & 0xFFFFFFFFFFFFF8)) >> v132) & 1) == 0)
          break;
        if (*(_QWORD *)(v133 + 8 * v132) == v126)
          goto LABEL_83;
      }
LABEL_91:
      v135 = v162;
      sub_2400CBC9C(v168+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v126, v162);
      v136 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
      v136(v135, 0, 1, v125);
      v136(v127, 1, 1, v125);
      v137 = v128 + *(int *)(v172 + 48);
      v138 = *(int *)(v172 + 64);
      sub_24007CD50(v135, v128, &qword_256FB65E8);
      sub_24007CD50(v127, v137, &qword_256FB65E8);
      *(_QWORD *)(v128 + v138) = 0;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v93 = sub_2400782FC(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
      v140 = *(_QWORD *)(v93 + 16);
      v139 = *(_QWORD *)(v93 + 24);
      if (v140 >= v139 >> 1)
        v93 = sub_2400782FC(v139 > 1, v140 + 1, 1, v93);
      *(_QWORD *)(v93 + 16) = v140 + 1;
      sub_24007CD50(v169, v93+ ((*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80))+ *(_QWORD *)(v171 + 72) * v140, &qword_256FB4ED0);
      sub_240084408((uint64_t *)&v202, v126);
      goto LABEL_83;
    }
LABEL_95:
    swift_bridgeObjectRelease();
    v141 = *(_QWORD *)(a2 + 16);
    if (!v141)
    {
LABEL_110:
      v157 = sub_2400911B8(v93);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v157;
    }
    v142 = 0;
    v143 = (uint64_t)v165;
    v144 = v170;
    while (1)
    {
      v145 = v203;
      if (!*(_QWORD *)(v203 + 16))
        goto LABEL_106;
      v146 = sub_240154FDC();
      v147 = -1 << *(_BYTE *)(v145 + 32);
      v148 = v146 & ~v147;
      if (((*(_QWORD *)(v145 + 56 + ((v148 >> 3) & 0xFFFFFFFFFFFFF8)) >> v148) & 1) == 0)
        goto LABEL_106;
      v149 = *(_QWORD *)(v145 + 48);
      if (*(_QWORD *)(v149 + 8 * v148) != v142)
        break;
LABEL_98:
      if (++v142 == v141)
        goto LABEL_110;
    }
    v150 = ~v147;
    while (1)
    {
      v148 = (v148 + 1) & v150;
      if (((*(_QWORD *)(v145 + 56 + ((v148 >> 3) & 0xFFFFFFFFFFFFF8)) >> v148) & 1) == 0)
        break;
      if (*(_QWORD *)(v149 + 8 * v148) == v142)
        goto LABEL_98;
    }
LABEL_106:
    v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v152 = (uint64_t)v164;
    v151(v164, 1, 1, v125);
    sub_2400CBC9C(a2+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v142, v143);
    v151((char *)v143, 0, 1, v125);
    v153 = v144 + *(int *)(v172 + 48);
    v154 = *(int *)(v172 + 64);
    sub_24007CD50(v152, v144, &qword_256FB65E8);
    sub_24007CD50(v143, v153, &qword_256FB65E8);
    *(_QWORD *)(v144 + v154) = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v93 = sub_2400782FC(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
    v156 = *(_QWORD *)(v93 + 16);
    v155 = *(_QWORD *)(v93 + 24);
    if (v156 >= v155 >> 1)
      v93 = sub_2400782FC(v155 > 1, v156 + 1, 1, v93);
    *(_QWORD *)(v93 + 16) = v156 + 1;
    sub_24007CD50(v170, v93+ ((*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80))+ *(_QWORD *)(v171 + 72) * v156, &qword_256FB4ED0);
    sub_240084408((uint64_t *)&v202, v142);
    v125 = v187;
    goto LABEL_98;
  }
  v91 = 0;
  v92 = v202 + 32;
  v93 = MEMORY[0x24BEE4AF8];
  v200 = *((_QWORD *)v202 + 2);
  v201 = v202;
  while (v91 < *(_QWORD *)(v89 + 16))
  {
    v94 = &v92[24 * v91];
    v95 = *((double *)v94 + 2);
    if (v95 < a4)
    {
      v96 = *(_QWORD *)v94;
      v97 = *((_QWORD *)v94 + 1);
      v98 = v204;
      if (*(_QWORD *)(v204 + 16))
      {
        v99 = sub_240154FDC();
        v100 = -1 << *(_BYTE *)(v98 + 32);
        v101 = v99 & ~v100;
        if (((*(_QWORD *)(v98 + 56 + ((v101 >> 3) & 0xFFFFFFFFFFFFF8)) >> v101) & 1) != 0)
        {
          v102 = *(_QWORD *)(v98 + 48);
          if (*(_QWORD *)(v102 + 8 * v101) == v96)
            goto LABEL_54;
          v103 = ~v100;
          while (1)
          {
            v101 = (v101 + 1) & v103;
            if (((*(_QWORD *)(v98 + 56 + ((v101 >> 3) & 0xFFFFFFFFFFFFF8)) >> v101) & 1) == 0)
              break;
            if (*(_QWORD *)(v102 + 8 * v101) == v96)
              goto LABEL_54;
          }
        }
      }
      v104 = v203;
      if (!*(_QWORD *)(v203 + 16))
        goto LABEL_71;
      v105 = sub_240154FDC();
      v106 = -1 << *(_BYTE *)(v104 + 32);
      v107 = v105 & ~v106;
      if (((*(_QWORD *)(v104 + 56 + ((v107 >> 3) & 0xFFFFFFFFFFFFF8)) >> v107) & 1) == 0)
        goto LABEL_71;
      v108 = *(_QWORD *)(v104 + 48);
      if (*(_QWORD *)(v108 + 8 * v107) != v97)
      {
        v109 = ~v106;
        while (1)
        {
          v107 = (v107 + 1) & v109;
          if (((*(_QWORD *)(v104 + 56 + ((v107 >> 3) & 0xFFFFFFFFFFFFF8)) >> v107) & 1) == 0)
            break;
          if (*(_QWORD *)(v108 + 8 * v107) == v97)
            goto LABEL_54;
        }
LABEL_71:
        if (v96 >= v173)
          goto LABEL_112;
        v110 = v92;
        v111 = v167;
        v112 = (*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
        v113 = *(_QWORD *)(v167 + 72);
        v114 = v96;
        v115 = v168 + v112 + v113 * v96;
        v116 = v97;
        v117 = v161;
        sub_2400CBC9C(v115, v161);
        v118 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v111 + 56);
        v118(v117, 0, 1, v187);
        if ((v116 & 0x8000000000000000) != 0)
          goto LABEL_113;
        if (v116 >= *(_QWORD *)(v166 + 16))
          goto LABEL_114;
        v119 = v159;
        sub_2400CBC9C(v166 + v112 + v113 * v116, v159);
        v118(v119, 0, 1, v187);
        v120 = v160;
        v121 = v160 + *(int *)(v172 + 48);
        v122 = *(int *)(v172 + 64);
        sub_24007CD50(v161, v160, &qword_256FB65E8);
        sub_24007CD50(v119, v121, &qword_256FB65E8);
        *(double *)(v120 + v122) = v95;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v93 = sub_2400782FC(0, *(_QWORD *)(v93 + 16) + 1, 1, v93);
        v92 = v110;
        v124 = *(_QWORD *)(v93 + 16);
        v123 = *(_QWORD *)(v93 + 24);
        if (v124 >= v123 >> 1)
          v93 = sub_2400782FC(v123 > 1, v124 + 1, 1, v93);
        *(_QWORD *)(v93 + 16) = v124 + 1;
        sub_24007CD50(v160, v93+ ((*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80))+ *(_QWORD *)(v171 + 72) * v124, &qword_256FB4ED0);
        sub_240084408((uint64_t *)&v202, v114);
        sub_240084408((uint64_t *)&v202, v116);
        v90 = v200;
        v89 = (uint64_t)v201;
      }
    }
LABEL_54:
    if (++v91 == v90)
    {
      swift_release();
      a2 = v166;
      v8 = v167;
      goto LABEL_80;
    }
  }
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
LABEL_114:
  __break(1u);
LABEL_115:
  sub_240154F64();
  __break(1u);
  swift_release();
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_2400CB040(unint64_t a1, unint64_t a2, uint64_t a3, double a4)
{
  _QWORD *v4;
  __n128 v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CGFloat v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat v23;
  CGFloat y;
  CGFloat width;
  CGFloat v26;
  double v27;
  double v28;
  CGFloat v29;
  CGFloat v30;
  CGFloat v31;
  double v32;
  double v33;
  CGFloat v34;
  CGFloat v35;
  double v36;
  double v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  CGFloat v41;
  double v42;
  double v43;
  double v44;
  double v45;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v47;
  unint64_t v48;
  double *v49;
  uint64_t v50;
  unint64_t v51;
  double v52;
  double *v53;
  uint64_t v54;
  double v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v101;
  uint64_t v102;
  double v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;
  CGFloat v114;
  CGFloat v115;
  CGFloat height;
  double v117;
  double v118;
  uint64_t v119;
  CGFloat x;
  unint64_t v121;
  _QWORD *v122;
  uint64_t v123;
  uint64_t v124;
  CGRect v125;
  CGRect v126;
  CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  CGRect v134;
  CGRect v135;
  CGRect v136;

  v110 = a3;
  v103 = a4;
  v108 = sub_240154310();
  v109 = *(_QWORD **)(v108 - 8);
  v7.n128_f64[0] = MEMORY[0x24BDAC7A8](v108);
  v9 = (unint64_t)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v123 = MEMORY[0x24BEE4B08];
  v124 = MEMORY[0x24BEE4B08];
  v106 = a1;
  if (a1 >> 62)
    goto LABEL_122;
  v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  v111 = a2;
  v104 = v10;
  v101 = a2 >> 62;
  if (v10)
  {
    if (!(a2 >> 62))
    {
      v11 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_6;
    }
    goto LABEL_126;
  }
  v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_33:
  v122 = v13;
  swift_bridgeObjectRetain_n();
  sub_2400C914C((uint64_t *)&v122);
  swift_bridgeObjectRelease_n();
  a2 = (unint64_t)v122;
  v50 = v122[2];
  if (v50)
  {
    v51 = 0;
    *(_QWORD *)&v52 = v122 + 4;
    v121 = v106 & 0xC000000000000001;
    *(_QWORD *)&v118 = v106 + 32;
    v119 = v106 & 0xFFFFFFFFFFFFFF8;
    *(_QWORD *)&x = v111 & 0xC000000000000001;
    *(_QWORD *)&v115 = v111 + 32;
    *(_QWORD *)&height = v111 & 0xFFFFFFFFFFFFFF8;
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    *(_QWORD *)&v117 = v122 + 4;
    while (1)
    {
      if (v51 >= *(_QWORD *)(a2 + 16))
        goto LABEL_112;
      v54 = *(_QWORD *)&v52 + 24 * v51;
      v55 = *(double *)(v54 + 16);
      if (v55 >= v103)
        goto LABEL_36;
      v56 = *(_QWORD *)v54;
      v9 = *(_QWORD *)(v54 + 8);
      v57 = v124;
      if (*(_QWORD *)(v124 + 16))
      {
        v58 = sub_240154FDC();
        v59 = -1 << *(_BYTE *)(v57 + 32);
        v60 = v58 & ~v59;
        if (((*(_QWORD *)(v57 + 56 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) != 0)
        {
          v61 = *(_QWORD *)(v57 + 48);
          if (*(_QWORD *)(v61 + 8 * v60) == v56)
            goto LABEL_36;
          v62 = ~v59;
          while (1)
          {
            v60 = (v60 + 1) & v62;
            if (((*(_QWORD *)(v57 + 56 + ((v60 >> 3) & 0xFFFFFFFFFFFFF8)) >> v60) & 1) == 0)
              break;
            if (*(_QWORD *)(v61 + 8 * v60) == v56)
              goto LABEL_36;
          }
        }
      }
      v63 = v123;
      if (!*(_QWORD *)(v123 + 16))
        goto LABEL_53;
      v64 = sub_240154FDC();
      v65 = -1 << *(_BYTE *)(v63 + 32);
      v66 = v64 & ~v65;
      if (((*(_QWORD *)(v63 + 56 + ((v66 >> 3) & 0xFFFFFFFFFFFFF8)) >> v66) & 1) == 0)
        goto LABEL_53;
      v67 = *(_QWORD *)(v63 + 48);
      if (*(_QWORD *)(v67 + 8 * v66) != v9)
      {
        v68 = ~v65;
        while (1)
        {
          v66 = (v66 + 1) & v68;
          if (((*(_QWORD *)(v63 + 56 + ((v66 >> 3) & 0xFFFFFFFFFFFFF8)) >> v66) & 1) == 0)
            break;
          if (*(_QWORD *)(v67 + 8 * v66) == v9)
            goto LABEL_36;
        }
LABEL_53:
        if (*(double *)&v121 == 0.0)
        {
          if ((v56 & 0x8000000000000000) != 0)
            goto LABEL_118;
          if (v56 >= *(_QWORD *)(v119 + 16))
            goto LABEL_119;
          v69 = *(_QWORD *)(*(_QWORD *)&v118 + 8 * v56);
          swift_retain();
          if (x == 0.0)
          {
LABEL_57:
            if ((v9 & 0x8000000000000000) != 0)
              goto LABEL_120;
            if (v9 >= *(_QWORD *)(*(_QWORD *)&height + 16))
              goto LABEL_121;
            v70 = *(_QWORD *)(*(_QWORD *)&v115 + 8 * v9);
            swift_retain();
            goto LABEL_60;
          }
        }
        else
        {
          v69 = MEMORY[0x24267D4E0](v56, v106);
          if (x == 0.0)
            goto LABEL_57;
        }
        v70 = MEMORY[0x24267D4E0](v9, v111);
LABEL_60:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v4 = sub_240078BE8(0, v4[2] + 1, 1, v4);
        v72 = v4[2];
        v71 = v4[3];
        if (v72 >= v71 >> 1)
          v4 = sub_240078BE8((_QWORD *)(v71 > 1), v72 + 1, 1, v4);
        v4[2] = v72 + 1;
        v53 = (double *)&v4[3 * v72];
        *((_QWORD *)v53 + 4) = v69;
        *((_QWORD *)v53 + 5) = v70;
        v53[6] = v55;
        sub_240084408((uint64_t *)&v122, v56);
        sub_240084408((uint64_t *)&v122, v9);
        v52 = v117;
      }
LABEL_36:
      if (++v51 == v50)
      {
        swift_release();
        goto LABEL_68;
      }
    }
  }
  swift_release();
  v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
LABEL_68:
  if (v104)
  {
    v73 = 0;
    v74 = v106 & 0xC000000000000001;
    a2 = v106 & 0xFFFFFFFFFFFFFF8;
    v9 = v106 + 32;
    v75 = v104 & ~(v104 >> 63);
    do
    {
      if (v73 == v75)
        goto LABEL_113;
      v77 = v124;
      if (*(_QWORD *)(v124 + 16))
      {
        v78 = sub_240154FDC();
        v79 = -1 << *(_BYTE *)(v77 + 32);
        v80 = v78 & ~v79;
        if (((*(_QWORD *)(v77 + 56 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) != 0)
        {
          v81 = *(_QWORD *)(v77 + 48);
          if (*(_QWORD *)(v81 + 8 * v80) == v73)
            goto LABEL_71;
          v82 = ~v79;
          while (1)
          {
            v80 = (v80 + 1) & v82;
            if (((*(_QWORD *)(v77 + 56 + ((v80 >> 3) & 0xFFFFFFFFFFFFF8)) >> v80) & 1) == 0)
              break;
            if (*(_QWORD *)(v81 + 8 * v80) == v73)
              goto LABEL_71;
          }
        }
      }
      if (v74)
      {
        v83 = MEMORY[0x24267D4E0](v73, v106);
      }
      else
      {
        if (v73 >= *(_QWORD *)(a2 + 16))
          goto LABEL_115;
        v83 = *(_QWORD *)(v9 + 8 * v73);
        swift_retain();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_240078BE8(0, v4[2] + 1, 1, v4);
      v85 = v4[2];
      v84 = v4[3];
      if (v85 >= v84 >> 1)
        v4 = sub_240078BE8((_QWORD *)(v84 > 1), v85 + 1, 1, v4);
      v4[2] = v85 + 1;
      v76 = &v4[3 * v85];
      v76[5] = 0;
      v76[6] = 0;
      v76[4] = v83;
      sub_240084408((uint64_t *)&v122, v73);
LABEL_71:
      ++v73;
    }
    while (v73 != v104);
  }
  swift_bridgeObjectRelease();
  if (v101)
  {
    while (1)
    {
      v86 = v111;
      swift_bridgeObjectRetain();
      v87 = sub_240154D30();
      swift_bridgeObjectRelease();
      if ((v87 & 0x8000000000000000) == 0)
        break;
      __break(1u);
LABEL_126:
      swift_bridgeObjectRetain();
      v11 = sub_240154D30();
      swift_bridgeObjectRelease();
      if (v11 < 0)
      {
        __break(1u);
        swift_release();
        swift_release();
        __break(1u);
      }
      v10 = v104;
LABEL_6:
      v12 = 0;
      v113 = v106 & 0xC000000000000001;
      v102 = v106 & 0xFFFFFFFFFFFFFF8;
      v107 = a2 & 0xC000000000000001;
      v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
      v105 = v106 + 32;
      v4 = v109;
      v14 = v108;
      while (v12 != v10)
      {
        if (v11)
        {
          if (!v113 && v12 >= *(_QWORD *)(v102 + 16))
            goto LABEL_117;
          v15 = 0;
          v112 = v12;
          do
          {
            if (v113)
            {
              v16 = MEMORY[0x24267D4E0](v7);
            }
            else
            {
              v16 = *(_QWORD *)(v105 + 8 * v12);
              swift_retain();
            }
            if (v107)
            {
              v17 = MEMORY[0x24267D4E0](v15, a2);
            }
            else
            {
              v17 = *(_QWORD *)(a2 + 8 * v15 + 32);
              swift_retain();
            }
            v18 = *(_QWORD *)(v17 + OBJC_IVAR____TtC23IntelligentTrackingCore15DKPersonTracker_personPoseFilter);
            ((void (*)(unint64_t, uint64_t, uint64_t))v4[2])(v9, *(_QWORD *)(v110 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v14);
            swift_retain();
            sub_2400D6A60(v9);
            v19 = *(_QWORD *)(v18 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
            swift_retain();
            swift_release();
            ((void (*)(unint64_t, uint64_t))v4[1])(v9, v14);
            if (v19)
            {
              v125.origin.x = *(CGFloat *)(v16 + 24);
              v119 = *(uint64_t *)(v16 + 32);
              *(_QWORD *)&v125.origin.y = v119;
              x = v125.origin.x;
              v20 = *(double *)(v16 + 48);
              v121 = *(unint64_t *)(v16 + 40);
              *(_QWORD *)&v125.size.width = v121;
              v21 = *(double *)(v19 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect + 8);
              v22 = *(double *)(v19
                              + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect
                              + 16);
              v135.size.height = *(CGFloat *)(v19
                                            + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect
                                            + 24);
              v115 = *(double *)(v19 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect);
              v135.origin.x = v115;
              height = v135.size.height;
              v125.size.height = v20;
              v135.origin.y = v21;
              v135.size.width = v22;
              v126 = CGRectIntersection(v125, v135);
              v23 = v126.origin.x;
              y = v126.origin.y;
              width = v126.size.width;
              v26 = v126.size.height;
              v27 = CGRectGetWidth(v126);
              v127.origin.x = v23;
              v127.origin.y = y;
              v127.size.width = width;
              v127.size.height = v26;
              v28 = v27 * CGRectGetHeight(v127);
              v118 = v28;
              v30 = *(double *)&v119;
              v29 = x;
              v128.origin.x = x;
              *(_QWORD *)&v128.origin.y = v119;
              v31 = *(double *)&v121;
              *(_QWORD *)&v128.size.width = v121;
              v114 = v20;
              v128.size.height = v20;
              v32 = CGRectGetWidth(v128);
              v129.origin.x = v29;
              v129.origin.y = v30;
              v129.size.width = v31;
              v129.size.height = v20;
              v33 = v32 * CGRectGetHeight(v129);
              v35 = v115;
              v34 = height;
              v130.origin.x = v115;
              v130.origin.y = v21;
              v130.size.width = v22;
              v130.size.height = height;
              v36 = CGRectGetWidth(v130);
              v131.origin.x = v35;
              v131.origin.y = v21;
              v131.size.width = v22;
              v131.size.height = v34;
              v37 = v33 + v36 * CGRectGetHeight(v131) - v28;
              if (v37 <= 2.22044605e-16)
                v37 = 2.22044605e-16;
              v117 = v37;
              *(_QWORD *)&v132.origin.y = v119;
              v132.origin.x = x;
              *(_QWORD *)&v132.size.width = v121;
              v132.size.height = v114;
              v136.origin.x = v35;
              v136.origin.y = v21;
              v136.size.width = v22;
              v136.size.height = v34;
              v133 = CGRectUnion(v132, v136);
              v38 = v133.origin.x;
              v39 = v133.origin.y;
              v40 = v133.size.width;
              v41 = v133.size.height;
              v42 = CGRectGetWidth(v133);
              v134.origin.x = v38;
              v134.origin.y = v39;
              v134.size.width = v40;
              v134.size.height = v41;
              v43 = CGRectGetHeight(v134);
              swift_release();
              swift_release();
              swift_release();
              v44 = v42 * v43;
              if (v42 * v43 <= 2.22044605e-16)
                v44 = 2.22044605e-16;
              v45 = (v44 - v117) / v44 - v118 / v117 + 1.0;
            }
            else
            {
              swift_release();
              swift_release();
              v45 = 1.0;
            }
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            a2 = v111;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              v13 = sub_240078184(0, v13[2] + 1, 1, v13);
            v48 = v13[2];
            v47 = v13[3];
            if (v48 >= v47 >> 1)
              v13 = sub_240078184((_QWORD *)(v47 > 1), v48 + 1, 1, v13);
            v49 = (double *)&v13[3 * v48];
            v12 = v112;
            *((_QWORD *)v49 + 4) = v112;
            *((_QWORD *)v49 + 5) = v15;
            v13[2] = v48 + 1;
            v49[6] = v45;
            ++v15;
          }
          while (v11 != v15);
        }
        ++v12;
        v10 = v104;
        if (v12 == v104)
          goto LABEL_33;
      }
      __break(1u);
LABEL_112:
      __break(1u);
LABEL_113:
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
LABEL_117:
      __break(1u);
LABEL_118:
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      __break(1u);
LABEL_122:
      swift_bridgeObjectRetain();
      v10 = sub_240154D30();
      swift_bridgeObjectRelease();
      if ((v10 & 0x8000000000000000) == 0)
        goto LABEL_3;
      __break(1u);
    }
  }
  else
  {
    v86 = v111;
    v87 = *(_QWORD *)((v111 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v87)
  {
    v88 = 0;
    a2 = v86 & 0xC000000000000001;
    v9 = v86 & 0xFFFFFFFFFFFFFF8;
    do
    {
      if (v88 == v87)
        goto LABEL_114;
      v90 = v123;
      if (*(_QWORD *)(v123 + 16))
      {
        v91 = sub_240154FDC();
        v92 = -1 << *(_BYTE *)(v90 + 32);
        v93 = v91 & ~v92;
        if (((*(_QWORD *)(v90 + 56 + ((v93 >> 3) & 0xFFFFFFFFFFFFF8)) >> v93) & 1) != 0)
        {
          v94 = *(_QWORD *)(v90 + 48);
          if (*(_QWORD *)(v94 + 8 * v93) == v88)
            goto LABEL_93;
          v95 = ~v92;
          while (1)
          {
            v93 = (v93 + 1) & v95;
            if (((*(_QWORD *)(v90 + 56 + ((v93 >> 3) & 0xFFFFFFFFFFFFF8)) >> v93) & 1) == 0)
              break;
            if (*(_QWORD *)(v94 + 8 * v93) == v88)
              goto LABEL_93;
          }
        }
      }
      if (a2)
      {
        v96 = MEMORY[0x24267D4E0](v88, v111);
      }
      else
      {
        if (v88 >= *(_QWORD *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_116;
        v96 = *(_QWORD *)(v86 + 32 + 8 * v88);
        swift_retain();
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v4 = sub_240078BE8(0, v4[2] + 1, 1, v4);
      v98 = v4[2];
      v97 = v4[3];
      if (v98 >= v97 >> 1)
        v4 = sub_240078BE8((_QWORD *)(v97 > 1), v98 + 1, 1, v4);
      v4[2] = v98 + 1;
      v89 = &v4[3 * v98];
      v89[4] = 0;
      v89[5] = v96;
      v89[6] = 0;
      sub_240084408((uint64_t *)&v122, v88);
LABEL_93:
      ++v88;
    }
    while (v88 != v87);
  }
  v99 = sub_240091790((uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v99;
}

uint64_t type metadata accessor for DKTrackerUtils()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKTrackerUtils()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for DKRandomColorGenerator()
{
  return objc_opt_self();
}

uint64_t method lookup function for DKRandomColorGenerator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKRandomColorGenerator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of DKRandomColorGenerator.getColor(uuid:currentUUIDs:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t method lookup function for DKUUIDToNumberConversion()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKUUIDToNumberConversion.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of DKUUIDToNumberConversion.getInt(uuid:currentUUIDs:range:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t sub_2400CBC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKPersonGroupFilter.Track(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400CBCE0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DKPersonGroupFilter.Track(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2400CBD1C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_24015434C();
    result = MEMORY[0x24267E0BC](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2400CBD5C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  v1[2] = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v1[3] = swift_task_alloc();
  v1[4] = swift_task_alloc();
  v2 = sub_240154310();
  v1[5] = v2;
  v1[6] = *(_QWORD *)(v2 - 8);
  v1[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2400CBDF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 16);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKFlip180Task_flip180Issued) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + 48);
    v2 = *(_QWORD *)(v0 + 56);
    v5 = *(_QWORD *)(v0 + 32);
    v4 = *(_QWORD *)(v0 + 40);
    *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore13DKFlip180Task_flip180Issued) = 1;
    if (*(_BYTE *)(*(_QWORD *)(v1 + 40)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_flipClockwise))
      v6 = 3.14159265;
    else
      v6 = -3.14159265;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_240155A50;
    *(double *)(v7 + 32) = v6;
    *(_QWORD *)(v7 + 40) = 0;
    *(_QWORD *)(v7 + 48) = 0;
    v8 = *(_QWORD *)(v1 + 48);
    v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
    v9(v2, v8 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v4);
    type metadata accessor for DKIntelligentTrackingCommand(0);
    v10 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_time, v2, v4);
    v11 = v10 + OBJC_IVAR____TtC23IntelligentTrackingCore28DKIntelligentTrackingCommand_command;
    *(_QWORD *)v11 = v7;
    *(_QWORD *)(v11 + 8) = 0x3FF0000000000000;
    *(_WORD *)(v11 + 16) = 16641;
    *(_QWORD *)(v8 + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_command) = v10;
    swift_release();
    v12 = *(_QWORD *)(v1 + 40);
    v9(v5, *(_QWORD *)(v1 + 48) + OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v3 + 56))(v5, 0, 1, v4);
    sub_24008FCD4(v5, v12 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime);
    v1 = *(_QWORD *)(v0 + 16);
  }
  v13 = *(_QWORD *)(v0 + 40);
  v14 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 24);
  sub_24008BFDC(*(_QWORD *)(v1 + 40)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, v15);
  LODWORD(v13) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v15, 1, v13);
  sub_240077EAC(v15);
  if ((_DWORD)v13 == 1)
  {
    v16 = *(_QWORD *)(v0 + 40);
    v17 = *(_QWORD *)(v0 + 48);
    v18 = *(_QWORD *)(v0 + 32);
    v19 = *(_QWORD *)(v1 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v18, *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48)+ OBJC_IVAR____TtC23IntelligentTrackingCore26DKIntelligentTrackingState_time, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v17 + 56))(v18, 0, 1, v16);
    sub_24008FCD4(v18, v19 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(1);
}

uint64_t sub_2400CC068()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore25DKIntelligentTrackingTask_logger;
  v2 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2400CC0DC()
{
  return type metadata accessor for DKFlip180Task();
}

uint64_t type metadata accessor for DKFlip180Task()
{
  uint64_t result;

  result = qword_256FB9BF8;
  if (!qword_256FB9BF8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2400CC120()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_2400CC164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = v0 + qword_256FC4858;
  v2 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  v3 = v0 + qword_256FC4878;
  v4 = sub_2401544C0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  v5 = v0 + qword_256FC4890;
  v6 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_2400800C8(v0 + *(_QWORD *)(*(_QWORD *)v0 + 224), (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_240070BD4(v0 + *(_QWORD *)(*(_QWORD *)v0 + 232), &qword_256FB65E8);
  return v0;
}

uint64_t DKObjectTrackerConfiguration.__allocating_init()()
{
  swift_allocObject();
  return DKTrackerConfiguration.init()();
}

uint64_t DKObjectTrackerConfiguration.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_2400B8C64(a1);
  swift_release();
  return v2;
}

uint64_t DKObjectTrackerConfiguration.init(configuration:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_2400B8C64(a1);
  swift_release();
  return v1;
}

uint64_t DKObjectTrackerConfiguration.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t DKObjectTrackerConfiguration.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2400CC3AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, _QWORD, uint64_t, int *);
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, _QWORD, uint64_t, int *);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61[2];
  _BYTE v62[40];
  _QWORD v63[4];
  char v64;

  v2 = v1;
  v60 = a1;
  v3 = sub_24015434C();
  v55 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v58 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_240154310();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v57 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v56 = (char *)&v50 - v9;
  MEMORY[0x24BDAC7A8](v10);
  v54 = (char *)&v50 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v50 - v13;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v15);
  v59 = (uint64_t)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v50 - v18;
  v20 = (int *)type metadata accessor for DKMotion3();
  v21 = *((_QWORD *)v20 - 1);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v50 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2401478A8((uint64_t)v62);
  sub_24008BADC((uint64_t)v62, (uint64_t)v63);
  v24 = 0;
  if ((v64 & 1) == 0)
  {
    v53 = v3;
    v25 = *(double *)v63;
    v26 = *(double *)&v63[1];
    v27 = *(double *)&v63[2];
    v28 = *(double *)&v63[3];
    v29 = *(_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 216));
    if (!v29)
      goto LABEL_5;
    swift_retain();
    swift_retain();
    v51 = v6;
    v30 = v60;
    sub_240071824(v60);
    swift_release();
    swift_retain();
    sub_240071824(v30);
    swift_release();
    swift_retain();
    sub_240071824(v30);
    swift_release();
    v31 = v30;
    v6 = v51;
    sub_2401161D8(v31);
    v32 = *(_QWORD *)(v29 + OBJC_IVAR____TtC23IntelligentTrackingCore23DKSphericalMotionFilter_lastState);
    swift_retain();
    swift_release();
    if (v32)
    {
      sub_240080084(v32 + OBJC_IVAR____TtCC23IntelligentTrackingCore23DKSphericalMotionFilter5State_motion, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
      swift_release();
      v33 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v21 + 56);
      v34 = v19;
      v35 = 0;
    }
    else
    {
LABEL_5:
      v33 = *(void (**)(uint64_t, _QWORD, uint64_t, int *))(v21 + 56);
      v34 = v19;
      v35 = 1;
    }
    v52 = v33;
    v33((uint64_t)v34, v35, 1, v20);
    v36 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v36(v14, v60, v5);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v21 + 48))(v19, 1, v20) == 1)
    {
      v37 = v54;
      v36(v54, (uint64_t)v14, v5);
      v36(v23, (uint64_t)v37, v5);
      *(_QWORD *)&v23[v20[5]] = &unk_251061B98;
      *(_QWORD *)&v23[v20[6]] = &unk_251061BD0;
      v38 = *(void (**)(char *, uint64_t))(v6 + 8);
      v38(v37, v5);
      *(_QWORD *)&v23[v20[7]] = &unk_251061C08;
      v38(v14, v5);
      sub_240070BD4((uint64_t)v19, &qword_256FB4438);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v14, v5);
      sub_2400A4FB4((uint64_t)v19, (uint64_t)v23);
    }
    v40 = (uint64_t)v57;
    v39 = (uint64_t)v58;
    v41 = (uint64_t)v56;
    v42 = v55;
    v36(v56, v60, v5);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v39, v2 + qword_256FC4858, v53);
    v43 = *(_QWORD *)(v2 + qword_256FC4868 + 8);
    v61[0] = *(_QWORD *)(v2 + qword_256FC4868);
    v60 = *(_QWORD *)(v2 + qword_256FC4870);
    v61[1] = v43;
    v44 = *(_QWORD *)(v2 + qword_256FC4860);
    v45 = v59;
    sub_240080084((uint64_t)v23, v59, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
    v52(v45, 0, 1, v20);
    v36((char *)v40, v2 + qword_256FC4890, v5);
    v46 = *(_QWORD *)(v2 + qword_256FC48A0);
    v47 = *(_QWORD *)(v46 + 16);
    if (v47)
    {
      v48 = *(_QWORD *)(v46 + 8 * v47 + 24);
      swift_retain();
    }
    else
    {
      v48 = 0;
    }
    type metadata accessor for DKObjectTrackerState(0);
    swift_allocObject();
    v24 = DKObjectTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(v41, v39, v61, v60, v44, -1, v59, v40, v25, v26, v27, v28, 0, v48);
    sub_2400800C8((uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  }
  return v24;
}

uint64_t DKObjectTracker.__allocating_init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v24 = a6;
  v25 = a2;
  v26 = a4;
  v27 = a5;
  v23 = a1;
  v8 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_24015434C();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_240154310();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a3, v11);
  v19 = v24;
  sub_240080084(v24, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v20 = sub_24014EA48(v18, v25, v14, v26, v27, v10);
  sub_2400800C8(v19, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(a3, v11);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v23, v15);
  return v20;
}

uint64_t DKObjectTracker.init(time:configuration:uuid:trackerId:anstId:camera:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a5;
  v25 = a2;
  v26 = a4;
  v24 = a1;
  v9 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_24015434C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_240154310();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v20, a1, v16, v18);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  sub_240080084(a6, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v21 = sub_24014EA48(v20, v25, v15, v26, v27, v11);
  sub_2400800C8(a6, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a3, v12);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v24, v16);
  return v21;
}

uint64_t DKObjectTracker.deinit()
{
  return sub_2400CC164();
}

uint64_t DKObjectTracker.__deallocating_deinit()
{
  sub_2400CC164();
  return swift_deallocClassInstance();
}

uint64_t sub_2400CCC80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_2400CC3AC(a1);
  *a2 = result;
  return result;
}

uint64_t type metadata accessor for DKObjectTrackerConfiguration()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DKObjectTracker()
{
  uint64_t result;

  result = qword_256FBA080;
  if (!qword_256FBA080)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_2400CCD00()
{
  return swift_initClassMetadata2();
}

uint64_t sub_2400CCD34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = DKLog.Category.rawValue.getter();
  v2 = v1;
  if (v0 == DKLog.Category.rawValue.getter() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2400CCDCC(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 1936158572;
    else
      v3 = 0x6D614E6567616D69;
    if (v2 == 1)
      v4 = 0xE400000000000000;
    else
      v4 = 0xE900000000000065;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 1936158572;
      else
        v6 = 0x6D614E6567616D69;
      if (v5 == 1)
        v7 = 0xE400000000000000;
      else
        v7 = 0xE900000000000065;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE400000000000000;
    v3 = 1701669236;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE400000000000000;
  if (v3 != 1701669236)
  {
LABEL_21:
    v8 = sub_240154EF8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_2400CCECC(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2400CCF0C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2400CCFC8 + 4 * byte_24015B008[a2]))(1684632949);
}

uint64_t sub_2400CCFC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 1684632949 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

void sub_2400CD0E4(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2400CD124(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2400CD1C0 + 4 * byte_24015B017[a2]))(1684632949);
}

uint64_t sub_2400CD1C0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == 1684632949 && v1 == v2)
    v3 = 1;
  else
    v3 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_2400CD2B4(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1635017060;
  else
    v3 = 0x6570795461746164;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1635017060;
  else
    v5 = 0x6570795461746164;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2400CD350(char *a1, char *a2)
{
  return sub_2400CD2B4(*a1, *a2);
}

uint64_t sub_2400CD35C()
{
  sub_240154FE8();
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400CD3D4()
{
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2400CD428()
{
  sub_240154FE8();
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400CD49C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_240154D84();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_2400CD4F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1635017060;
  if (!*v1)
    v2 = 0x6570795461746164;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2400CD530()
{
  _BYTE *v0;

  if (*v0)
    return 1635017060;
  else
    return 0x6570795461746164;
}

uint64_t sub_2400CD564@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_240154D84();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_2400CD5C4()
{
  sub_2400CDA88();
  return sub_240155048();
}

uint64_t sub_2400CD5EC()
{
  sub_2400CDA88();
  return sub_240155054();
}

unint64_t sub_2400CD614@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_2400CF8F0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_2400CD63C()
{
  sub_2400D1518();
  return sub_240154778();
}

uint64_t sub_2400CD698()
{
  sub_2400D1518();
  return sub_24015476C();
}

uint64_t DKLogCodable.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA370);
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400CDA88();
  sub_240155024();
  if (!v1)
  {
    sub_2400CDACC();
    sub_240154DFC();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_2400CD820()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for DKFaceObservation(0);
  *(_BYTE *)(v5 - 65) = 1;
  sub_2400707A8(&qword_256FB6808, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
  sub_240154DFC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if (!v1)
    *v0 = *(_QWORD *)(v5 - 88);
  JUMPOUT(0x2400CD7D8);
}

void sub_2400CD898()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for DKBodyObservation(0);
  *(_BYTE *)(v5 - 65) = 1;
  sub_2400707A8(&qword_256FB6818, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
  sub_240154DFC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if (!v1)
    *v0 = *(_QWORD *)(v5 - 88) | 0x2000000000000000;
  JUMPOUT(0x2400CD7D8);
}

void sub_2400CD914()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for DKObjectObservation(0);
  *(_BYTE *)(v5 - 65) = 1;
  sub_2400707A8(&qword_256FB8E08, type metadata accessor for DKObjectObservation, (uint64_t)&protocol conformance descriptor for DKObjectObservation);
  sub_240154DFC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if (!v1)
    *v0 = *(_QWORD *)(v5 - 88) | 0x4000000000000000;
  JUMPOUT(0x2400CD7D8);
}

void sub_2400CD990()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for DKHandObservation(0);
  *(_BYTE *)(v5 - 65) = 1;
  sub_2400707A8(&qword_256FB6828, type metadata accessor for DKHandObservation, (uint64_t)&protocol conformance descriptor for DKHandObservation);
  sub_240154DFC();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
  if (!v1)
    *v0 = *(_QWORD *)(v5 - 88) | 0x6000000000000000;
  JUMPOUT(0x2400CD7D8);
}

void sub_2400CDA0C()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for DKIntelligentTrackingState(0);
  *(_BYTE *)(v5 - 65) = 1;
  sub_2400707A8(&qword_256FB6698, type metadata accessor for DKIntelligentTrackingState, (uint64_t)&protocol conformance descriptor for DKIntelligentTrackingState);
  sub_240154DFC();
  if (!v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v2);
    *v0 = *(_QWORD *)(v5 - 88) | 0x8000000000000000;
    JUMPOUT(0x2400CD7D8);
  }
  JUMPOUT(0x2400CD7C8);
}

unint64_t sub_2400CDA88()
{
  unint64_t result;

  result = qword_256FBA378;
  if (!qword_256FBA378)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B660, &type metadata for DKLogCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA378);
  }
  return result;
}

unint64_t sub_2400CDACC()
{
  unint64_t result;

  result = qword_256FBA380;
  if (!qword_256FBA380)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B638, &type metadata for DKLogCodable.DataType);
    atomic_store(result, (unint64_t *)&qword_256FBA380);
  }
  return result;
}

void DKLogCodable.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA388);
  MEMORY[0x24BDAC7A8](v3);
  v4 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400CDA88();
  sub_240155030();
  __asm { BR              X10 }
}

uint64_t sub_2400CDBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 88) = 0;
  *(_BYTE *)(v5 - 65) = 0;
  sub_2400CDEDC();
  swift_retain();
  sub_240154E80();
  if (!v2)
  {
    *(_QWORD *)(v5 - 88) = v3;
    *(_BYTE *)(v5 - 65) = 1;
    type metadata accessor for DKFaceObservation(0);
    sub_2400707A8(&qword_256FB6700, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
    sub_240154E80();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v0);
  return swift_release();
}

unint64_t sub_2400CDEDC()
{
  unint64_t result;

  result = qword_256FBA390;
  if (!qword_256FBA390)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B610, &type metadata for DKLogCodable.DataType);
    atomic_store(result, (unint64_t *)&qword_256FBA390);
  }
  return result;
}

uint64_t sub_2400CDF20(_QWORD *a1)
{
  return DKLogCodable.init(from:)(a1);
}

void sub_2400CDF34(_QWORD *a1)
{
  DKLogCodable.encode(to:)(a1);
}

uint64_t sub_2400CDF48@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, a1);
}

uint64_t sub_2400CDF54(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time);
}

uint64_t (*sub_2400CDF60())()
{
  return nullsub_1;
}

uint64_t sub_2400CDF78()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400CDF88(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400CDFA0())()
{
  return nullsub_1;
}

uint64_t sub_2400CDFB8()
{
  return sub_2400CE5B8(&OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
}

uint64_t sub_2400CDFC4(uint64_t a1, uint64_t a2)
{
  return sub_2400CE5F8(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
}

uint64_t (*sub_2400CDFD0())()
{
  return nullsub_1;
}

void *sub_2400CDFE8()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image);
  v2 = v1;
  return v1;
}

void sub_2400CE014(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = a1;

}

uint64_t (*sub_2400CE028())()
{
  return nullsub_1;
}

uint64_t DKKeyframe.__allocating_init(time:)(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = swift_allocObject();
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs) = MEMORY[0x24BEE4AF8];
  v3 = (_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = 0;
  v4 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  v5 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a1, v5);
  return v2;
}

uint64_t DKKeyframe.init(time:)(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs) = MEMORY[0x24BEE4AF8];
  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
  *v3 = 0;
  v3[1] = 0;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = 0;
  v4 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  v5 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v4, a1, v5);
  return v1;
}

uint64_t DKKeyframe.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t DKKeyframe.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2400CE258(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2400CCDCC(*a1, *a2);
}

uint64_t sub_2400CE264()
{
  sub_240154FE8();
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400CE2F8()
{
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2400CE368()
{
  sub_240154FE8();
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400CE3F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400CF900();
  *a1 = result;
  return result;
}

void sub_2400CE424(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE400000000000000;
  v5 = 1936158572;
  if (v2 != 1)
  {
    v5 = 0x6D614E6567616D69;
    v4 = 0xE900000000000065;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701669236;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2400CE478()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1936158572;
  if (*v0 != 1)
    v1 = 0x6D614E6567616D69;
  if (*v0)
    return v1;
  else
    return 1701669236;
}

uint64_t sub_2400CE4C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400CF900();
  *a1 = result;
  return result;
}

uint64_t sub_2400CE4EC()
{
  sub_2400D00A8();
  return sub_240155048();
}

uint64_t sub_2400CE514()
{
  sub_2400D00A8();
  return sub_240155054();
}

uint64_t sub_2400CE53C@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, a1);
}

uint64_t sub_2400CE548(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time);
}

uint64_t (*sub_2400CE554())()
{
  return nullsub_1;
}

uint64_t sub_2400CE56C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400CE57C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400CE594())()
{
  return nullsub_1;
}

uint64_t sub_2400CE5AC()
{
  return sub_2400CE5B8(&OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
}

uint64_t sub_2400CE5B8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_2400CE5EC(uint64_t a1, uint64_t a2)
{
  return sub_2400CE5F8(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
}

uint64_t sub_2400CE5F8(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v3 + *a3);
  *v4 = a1;
  v4[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2400CE610())()
{
  return nullsub_1;
}

uint64_t DKKeyframeStorage.__allocating_init(time:imageName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x24BEE4AF8];
  v7 = (_QWORD *)(v6 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
  v8 = v6 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  v9 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a1, v9);
  *v7 = a2;
  v7[1] = a3;
  return v6;
}

uint64_t DKKeyframeStorage.init(time:imageName:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x24BEE4AF8];
  v7 = (_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
  *v7 = 0;
  v7[1] = 0;
  v8 = v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  v9 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8, a1, v9);
  *v7 = a2;
  v7[1] = a3;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t DKKeyframeStorage.__allocating_init(keyframe:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKKeyframeStorage.init(keyframe:)(a1);
  return v2;
}

uint64_t DKKeyframeStorage.init(keyframe:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x24BEE4AF8];
  v4 = (_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
  *v4 = 0;
  v4[1] = 0;
  v5 = a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time;
  v6 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  v7 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v6, v5, v7);
  v8 = swift_bridgeObjectRetain();
  v9 = _s23IntelligentTrackingCore17DKKeyframeStorageC7convert4logsSayAA12DKLogCodableOGSayAA10DKLoggable_pG_tFZ_0(v8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v9;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
  v10 = *(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName + 8);
  swift_bridgeObjectRetain();
  swift_release();
  *v4 = v11;
  v4[1] = v10;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2400CE880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  CVPixelBufferRef v20;
  __CVBuffer *v21;
  id v22;
  CGImageRef v23;
  void *v24;
  _QWORD v26[2];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  CGImageRef imageOut[3];

  v26[1] = a1;
  imageOut[2] = *(CGImageRef *)MEMORY[0x24BDAC8D0];
  v27 = sub_24015449C();
  v26[0] = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v3 = (char *)v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2401541D8();
  v28 = *(_QWORD *)(v4 - 8);
  v29 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_240154310();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v11, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v7, v9);
  type metadata accessor for DKKeyframe(0);
  v12 = swift_allocObject();
  v13 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs;
  v14 = (_QWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
  *v14 = 0;
  v14[1] = 0;
  v15 = OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image;
  *(_QWORD *)(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = 0;
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v12 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, v11, v7);
  v16 = swift_bridgeObjectRetain();
  v17 = _s23IntelligentTrackingCore17DKKeyframeStorageC7convert11codableLogsSayAA10DKLoggable_pGSayAA12DKLogCodableOG_tFZ_0(v16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v12 + v13) = v17;
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName + 8);
  if (v18)
  {
    v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
    imageOut[0] = (CGImageRef)0x2F6567616D69;
    imageOut[1] = (CGImageRef)0xE600000000000000;
    swift_bridgeObjectRetain();
    sub_2401546D0();
    sub_2401546D0();
    sub_240154484();
    sub_24015419C();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26[0] + 8))(v3, v27);
    v20 = _s23IntelligentTrackingCore11DKImageUtilC19pixelBufferFromFile3urlSo11CVBufferRefaSg10Foundation3URLV_tFZ_0();
    if (v20)
    {
      v21 = v20;
      swift_bridgeObjectRelease();
      *v14 = v19;
      v14[1] = v18;
      v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BDBF648]), sel_init);
      imageOut[0] = 0;
      VTCreateCGImageFromCVPixelBuffer(v21, 0, imageOut);
      v23 = imageOut[0];

      v24 = *(void **)(v12 + v15);
      *(_QWORD *)(v12 + v15) = v23;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v29);
      swift_bridgeObjectRelease();
    }
  }
  return v12;
}

uint64_t DKKeyframeStorage.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t DKKeyframeStorage.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_2400CEC44(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[4];
  char v14;
  char v15;
  char v16;

  v2 = sub_240154310();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA398);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400D00A8();
  v10 = v13[1];
  sub_240155030();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v2);
  v16 = 0;
  sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v11 = v13[2];
  sub_240154E80();
  if (v11)
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v13[3] = *(_QWORD *)(v10 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs);
    v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA3A8);
    sub_2400D0144(&qword_256FBA3B0, (uint64_t (*)(void))sub_2400D00EC, MEMORY[0x24BEE12A0]);
    sub_240154E80();
    v14 = 2;
    swift_bridgeObjectRetain();
    sub_240154E2C();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return swift_bridgeObjectRelease();
  }
}

uint64_t DKKeyframeStorage.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  DKKeyframeStorage.init(from:)(a1);
  return v2;
}

uint64_t DKKeyframeStorage.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  char v32;
  char v33;
  char v34;

  v3 = v1;
  v5 = sub_240154310();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v25 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA3C0);
  v8 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs) = MEMORY[0x24BEE4AF8];
  v12 = (uint64_t *)(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
  *v12 = 0;
  v12[1] = 0;
  v28 = v12;
  v29 = v11;
  v13 = a1[3];
  v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v13);
  sub_2400D00A8();
  v26 = v10;
  sub_240155024();
  if (v2)
  {
    v17 = (uint64_t)v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for DKKeyframeStorage(0);
    swift_deallocPartialClassInstance();
    v23 = v17;
  }
  else
  {
    v34 = 0;
    sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v15 = v25;
    v14 = v26;
    v16 = v27;
    sub_240154DFC();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(v3 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, v15, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA3A8);
    v33 = 1;
    sub_2400D0144(&qword_256FBA3C8, (uint64_t (*)(void))sub_2400D01AC, MEMORY[0x24BEE12D0]);
    sub_240154DFC();
    *(_QWORD *)(v3 + v29) = v31;
    swift_bridgeObjectRelease();
    v32 = 2;
    v19 = sub_240154DA8();
    v21 = v20;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v14, v16);
    v22 = v28;
    *v28 = v19;
    v22[1] = v21;
    swift_bridgeObjectRelease();
    v23 = (uint64_t)v30;
  }
  __swift_destroy_boxed_opaque_existential_1(v23);
  return v3;
}

uint64_t sub_2400CF1C8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  type metadata accessor for DKKeyframeStorage(0);
  v5 = swift_allocObject();
  result = DKKeyframeStorage.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_2400CF220(_QWORD *a1)
{
  return sub_2400CEC44(a1);
}

uint64_t DKLoggerMetafile.startTime.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24008BFDC(v1, a1);
}

uint64_t DKLoggerMetafile.startTime.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_24008FCD4(a1, v1);
}

uint64_t (*DKLoggerMetafile.startTime.modify())()
{
  return nullsub_1;
}

uint64_t DKLoggerMetafile.keyframes.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DKLoggerMetafile(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DKLoggerMetafile.keyframes.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DKLoggerMetafile(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DKLoggerMetafile.keyframes.modify())()
{
  type metadata accessor for DKLoggerMetafile(0);
  return nullsub_1;
}

uint64_t DKLoggerMetafile.video.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for DKLoggerMetafile(0) + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t DKLoggerMetafile.video.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for DKLoggerMetafile(0) + 24));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*DKLoggerMetafile.video.modify())()
{
  type metadata accessor for DKLoggerMetafile(0);
  return nullsub_1;
}

uint64_t sub_2400CF3B4()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656D61726679656BLL;
  if (*v0 != 1)
    v1 = 0x6F65646976;
  if (*v0)
    return v1;
  else
    return 0x6D69547472617473;
}

uint64_t sub_2400CF410@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400D155C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400CF434()
{
  sub_2400D0204();
  return sub_240155048();
}

uint64_t sub_2400CF45C()
{
  sub_2400D0204();
  return sub_240155054();
}

uint64_t DKLoggerMetafile.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA3D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400D0204();
  sub_240155030();
  v8[15] = 0;
  sub_240154310();
  sub_2400707A8(&qword_256FB66E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  sub_240154E50();
  if (!v1)
  {
    type metadata accessor for DKLoggerMetafile(0);
    v8[14] = 1;
    sub_240154E2C();
    v8[13] = 2;
    sub_240154E2C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKLoggerMetafile.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  char v30;
  char v31;
  char v32;

  v24 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v3);
  v26 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA3E8);
  v25 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DKLoggerMetafile(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_240154310();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v11 = (uint64_t *)&v9[*(int *)(v7 + 20)];
  *v11 = 0;
  v11[1] = 0;
  v12 = &v9[*(int *)(v7 + 24)];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400D0204();
  v27 = v6;
  v13 = v29;
  sub_240155024();
  if (!v13)
  {
    v29 = v12;
    v32 = 0;
    sub_2400707A8(&qword_256FB67F0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v15 = (uint64_t)v26;
    v14 = v27;
    sub_240154DCC();
    sub_24008FCD4(v15, (uint64_t)v9);
    v31 = 1;
    v16 = sub_240154DA8();
    v18 = v17;
    swift_bridgeObjectRelease();
    *v11 = v16;
    v11[1] = v18;
    v30 = 2;
    v20 = sub_240154DA8();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v28);
    v23 = (uint64_t *)v29;
    swift_bridgeObjectRelease();
    *v23 = v20;
    v23[1] = v22;
    sub_2400D0284((uint64_t)v9, v24);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_2400D0248((uint64_t)v9);
}

uint64_t sub_2400CF8C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKLoggerMetafile.init(from:)(a1, a2);
}

uint64_t sub_2400CF8DC(_QWORD *a1)
{
  return DKLoggerMetafile.encode(to:)(a1);
}

unint64_t sub_2400CF8F0(unint64_t result)
{
  if (result >= 5)
    return 5;
  return result;
}

uint64_t sub_2400CF900()
{
  unint64_t v0;

  v0 = sub_240154D84();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

_QWORD *_s23IntelligentTrackingCore17DKKeyframeStorageC7convert4logsSayAA12DKLogCodableOGSayAA10DKLoggable_pG_tFZ_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v14;
  _BYTE v15[40];
  _BYTE v16[40];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  v3 = (_QWORD *)MEMORY[0x24BEE4AF8];
  do
  {
    sub_24008BA98(v2, (uint64_t)v16);
    sub_24008BA98((uint64_t)v16, (uint64_t)v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4EE8);
    type metadata accessor for DKFaceObservation(0);
    if (swift_dynamicCast())
    {
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_240078D08(0, v3[2] + 1, 1, v3);
      v5 = v3[2];
      v4 = v3[3];
      if (v5 >= v4 >> 1)
        v3 = sub_240078D08((_QWORD *)(v4 > 1), v5 + 1, 1, v3);
      v3[2] = v5 + 1;
      v3[v5 + 4] = v14;
    }
    else
    {
      sub_24008BA98((uint64_t)v16, (uint64_t)v15);
      type metadata accessor for DKBodyObservation(0);
      if (swift_dynamicCast())
      {
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v3 = sub_240078D08(0, v3[2] + 1, 1, v3);
        v7 = v3[2];
        v6 = v3[3];
        v8 = v7 + 1;
        if (v7 >= v6 >> 1)
          v3 = sub_240078D08((_QWORD *)(v6 > 1), v7 + 1, 1, v3);
        v9 = v14 | 0x2000000000000000;
      }
      else
      {
        sub_24008BA98((uint64_t)v16, (uint64_t)v15);
        type metadata accessor for DKObjectObservation(0);
        if (swift_dynamicCast())
        {
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v3 = sub_240078D08(0, v3[2] + 1, 1, v3);
          v7 = v3[2];
          v10 = v3[3];
          v8 = v7 + 1;
          if (v7 >= v10 >> 1)
            v3 = sub_240078D08((_QWORD *)(v10 > 1), v7 + 1, 1, v3);
          v9 = v14 | 0x4000000000000000;
        }
        else
        {
          sub_24008BA98((uint64_t)v16, (uint64_t)v15);
          type metadata accessor for DKHandObservation(0);
          if (swift_dynamicCast())
          {
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v3 = sub_240078D08(0, v3[2] + 1, 1, v3);
            v7 = v3[2];
            v11 = v3[3];
            v8 = v7 + 1;
            if (v7 >= v11 >> 1)
              v3 = sub_240078D08((_QWORD *)(v11 > 1), v7 + 1, 1, v3);
            v9 = v14 | 0x6000000000000000;
          }
          else
          {
            sub_24008BA98((uint64_t)v16, (uint64_t)v15);
            type metadata accessor for DKIntelligentTrackingState(0);
            if ((swift_dynamicCast() & 1) == 0)
              goto LABEL_35;
            swift_retain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v3 = sub_240078D08(0, v3[2] + 1, 1, v3);
            v7 = v3[2];
            v12 = v3[3];
            v8 = v7 + 1;
            if (v7 >= v12 >> 1)
              v3 = sub_240078D08((_QWORD *)(v12 > 1), v7 + 1, 1, v3);
            v9 = v14 | 0x8000000000000000;
          }
        }
      }
      v3[2] = v8;
      v3[v7 + 4] = v9;
    }
    swift_release();
LABEL_35:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    v2 += 40;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t type metadata accessor for DKKeyframe(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBA418);
}

uint64_t _s23IntelligentTrackingCore17DKKeyframeStorageC7convert11codableLogsSayAA10DKLoggable_pGSayAA12DKLogCodableOG_tFZ_0(uint64_t a1)
{
  if (*(_QWORD *)(a1 + 16))
  {
    swift_bridgeObjectRetain();
    __asm { BR              X9 }
  }
  return MEMORY[0x24BEE4AF8];
}

unint64_t sub_2400D00A8()
{
  unint64_t result;

  result = qword_256FBA3A0;
  if (!qword_256FBA3A0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B5C0, &type metadata for DKKeyframeStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA3A0);
  }
  return result;
}

unint64_t sub_2400D00EC()
{
  unint64_t result;

  result = qword_256FBA3B8;
  if (!qword_256FBA3B8)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKLogCodable, &type metadata for DKLogCodable);
    atomic_store(result, (unint64_t *)&qword_256FBA3B8);
  }
  return result;
}

uint64_t type metadata accessor for DKKeyframeStorage(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBA540);
}

uint64_t sub_2400D0144(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_256FBA3A8);
    v8 = a2();
    result = MEMORY[0x24267E0BC](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2400D01AC()
{
  unint64_t result;

  result = qword_256FBA3D0;
  if (!qword_256FBA3D0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKLogCodable, &type metadata for DKLogCodable);
    atomic_store(result, (unint64_t *)&qword_256FBA3D0);
  }
  return result;
}

uint64_t type metadata accessor for DKLoggerMetafile(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBA698);
}

unint64_t sub_2400D0204()
{
  unint64_t result;

  result = qword_256FBA3E0;
  if (!qword_256FBA3E0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B570, &type metadata for DKLoggerMetafile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA3E0);
  }
  return result;
}

uint64_t sub_2400D0248(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DKLoggerMetafile(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2400D0284(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DKLoggerMetafile(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2400D02C8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time, a2);
}

uint64_t sub_2400D02D4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_time);
}

uint64_t sub_2400D02F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400D0308(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_logs);
}

uint64_t sub_2400D0314@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName, a2);
}

uint64_t sub_2400D0320(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_imageName);
}

id sub_2400D032C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = *(void **)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image);
  *a2 = v2;
  return v2;
}

void sub_2400D0344(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore10DKKeyframe_image) = *a1;
  v3 = v2;

}

uint64_t sub_2400D0380@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time, a2);
}

uint64_t sub_2400D038C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_time);
}

uint64_t sub_2400D03A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400D03C0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_8Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_logs);
}

uint64_t sub_2400D03CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_3Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName, a2);
}

uint64_t keypath_get_3Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + *a2);
  v4 = v3[1];
  *a3 = *v3;
  a3[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2400D03F0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_4Tm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore17DKKeyframeStorage_imageName);
}

uint64_t keypath_set_4Tm_0(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of DKLoggable.time.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DKLoggable.time.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DKLoggable.time.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

_QWORD *initializeBufferWithCopyOfBuffer for DKLogCodable(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for DKLogCodable()
{
  return swift_release();
}

_QWORD *assignWithCopy for DKLogCodable(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for DKLogCodable(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKLogCodable(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7C && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 124);
  v3 = (((*(_QWORD *)a1 >> 57) >> 4) | (8 * ((*(_QWORD *)a1 >> 57) & 8 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7B)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for DKLogCodable(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7B)
  {
    *(_QWORD *)result = a2 - 124;
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7C)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 3) & 0xF | (16 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_2400D05B4(_QWORD *a1)
{
  return *a1 >> 61;
}

_QWORD *sub_2400D05C0(_QWORD *result)
{
  *result &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_2400D05D0(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 61);
  return result;
}

ValueMetadata *type metadata accessor for DKLogCodable()
{
  return &type metadata for DKLogCodable;
}

uint64_t sub_2400D05F4()
{
  return type metadata accessor for DKKeyframe(0);
}

uint64_t sub_2400D05FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKKeyframe()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKKeyframe.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKKeyframe.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKKeyframe.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKKeyframe.logs.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKKeyframe.logs.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKKeyframe.logs.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKKeyframe.imageName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKKeyframe.imageName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKKeyframe.imageName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKKeyframe.image.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKKeyframe.image.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKKeyframe.image.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKKeyframe.__allocating_init(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_2400D072C()
{
  return type metadata accessor for DKKeyframeStorage(0);
}

uint64_t sub_2400D0734()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKKeyframeStorage()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKKeyframeStorage.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of DKKeyframeStorage.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of DKKeyframeStorage.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of DKKeyframeStorage.logs.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of DKKeyframeStorage.logs.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKKeyframeStorage.logs.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKKeyframeStorage.imageName.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKKeyframeStorage.imageName.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKKeyframeStorage.imageName.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKKeyframeStorage.__allocating_init(time:imageName:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of DKKeyframeStorage.__allocating_init(keyframe:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t dispatch thunk of DKKeyframeStorage.getKeyframe(logFolder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKKeyframeStorage.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKKeyframeStorage.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t *initializeBufferWithCopyOfBuffer for DKLoggerMetafile(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_240154310();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = *(int *)(a3 + 24);
    v13 = (uint64_t *)((char *)a1 + v11);
    v14 = (uint64_t *)((char *)a2 + v11);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    v16 = (uint64_t *)((char *)a1 + v12);
    v17 = (uint64_t *)((char *)a2 + v12);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for DKLoggerMetafile(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_240154310();
  v3 = *(_QWORD *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2))
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for DKLoggerMetafile(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = *(int *)(a3 + 24);
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  v16 = *((_QWORD *)v15 + 1);
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *((_QWORD *)v14 + 1) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for DKLoggerMetafile(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;

  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *((_QWORD *)v13 + 1) = *((_QWORD *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(int *)(a3 + 24);
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_QWORD *)v16 = *(_QWORD *)v17;
  *((_QWORD *)v16 + 1) = *((_QWORD *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for DKLoggerMetafile(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *assignWithTake for DKLoggerMetafile(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(char *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  v12 = *(int *)(a3 + 20);
  v13 = &a1[v12];
  v14 = &a2[v12];
  v16 = *(_QWORD *)v14;
  v15 = *((_QWORD *)v14 + 1);
  *(_QWORD *)v13 = v16;
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v17 = *(int *)(a3 + 24);
  v18 = &a1[v17];
  v19 = &a2[v17];
  v21 = *(_QWORD *)v19;
  v20 = *((_QWORD *)v19 + 1);
  *(_QWORD *)v18 = v21;
  *((_QWORD *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DKLoggerMetafile()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2400D0E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for DKLoggerMetafile()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_2400D0EDC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

void sub_2400D0F5C()
{
  unint64_t v0;

  sub_2400A15A8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for DKLoggerMetafile.CodingKeys()
{
  return &type metadata for DKLoggerMetafile.CodingKeys;
}

uint64_t _s23IntelligentTrackingCore16DKLoggerMetafileV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2400D1030 + 4 * byte_24015B032[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2400D1064 + 4 * byte_24015B02D[v4]))();
}

uint64_t sub_2400D1064(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D106C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400D1074);
  return result;
}

uint64_t sub_2400D1080(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400D1088);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2400D108C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D1094(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKKeyframeStorage.CodingKeys()
{
  return &type metadata for DKKeyframeStorage.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DKLogCodable.DataType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_2400D10FC + 4 * byte_24015B03C[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2400D1130 + 4 * byte_24015B037[v4]))();
}

uint64_t sub_2400D1130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D1138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400D1140);
  return result;
}

uint64_t sub_2400D114C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400D1154);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2400D1158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D1160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKLogCodable.DataType()
{
  return &type metadata for DKLogCodable.DataType;
}

uint64_t storeEnumTagSinglePayload for DKLogCodable.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2400D11C8 + 4 * byte_24015B046[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2400D11FC + 4 * byte_24015B041[v4]))();
}

uint64_t sub_2400D11FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D1204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400D120CLL);
  return result;
}

uint64_t sub_2400D1218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400D1220);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2400D1224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D122C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKLogCodable.CodingKeys()
{
  return &type metadata for DKLogCodable.CodingKeys;
}

unint64_t sub_2400D124C()
{
  unint64_t result;

  result = qword_256FBA6D8;
  if (!qword_256FBA6D8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B300, &type metadata for DKLogCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA6D8);
  }
  return result;
}

unint64_t sub_2400D1294()
{
  unint64_t result;

  result = qword_256FBA6E0;
  if (!qword_256FBA6E0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B3A0, &type metadata for DKLogCodable.DataType);
    atomic_store(result, (unint64_t *)&qword_256FBA6E0);
  }
  return result;
}

unint64_t sub_2400D12DC()
{
  unint64_t result;

  result = qword_256FBA6E8;
  if (!qword_256FBA6E8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B490, &type metadata for DKKeyframeStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA6E8);
  }
  return result;
}

unint64_t sub_2400D1324()
{
  unint64_t result;

  result = qword_256FBA6F0;
  if (!qword_256FBA6F0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B548, &type metadata for DKLoggerMetafile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA6F0);
  }
  return result;
}

unint64_t sub_2400D136C()
{
  unint64_t result;

  result = qword_256FBA6F8;
  if (!qword_256FBA6F8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B4B8, &type metadata for DKLoggerMetafile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA6F8);
  }
  return result;
}

unint64_t sub_2400D13B4()
{
  unint64_t result;

  result = qword_256FBA700;
  if (!qword_256FBA700)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B4E0, &type metadata for DKLoggerMetafile.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA700);
  }
  return result;
}

unint64_t sub_2400D13FC()
{
  unint64_t result;

  result = qword_256FBA708;
  if (!qword_256FBA708)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B3C8, &type metadata for DKKeyframeStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA708);
  }
  return result;
}

unint64_t sub_2400D1444()
{
  unint64_t result;

  result = qword_256FBA710;
  if (!qword_256FBA710)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B3F0, &type metadata for DKKeyframeStorage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA710);
  }
  return result;
}

unint64_t sub_2400D148C()
{
  unint64_t result;

  result = qword_256FBA718;
  if (!qword_256FBA718)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B238, &type metadata for DKLogCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA718);
  }
  return result;
}

unint64_t sub_2400D14D4()
{
  unint64_t result;

  result = qword_256FBA720;
  if (!qword_256FBA720)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B260, &type metadata for DKLogCodable.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA720);
  }
  return result;
}

unint64_t sub_2400D1518()
{
  unint64_t result;

  result = qword_256FBA728;
  if (!qword_256FBA728)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B328, &type metadata for DKLogCodable.DataType);
    atomic_store(result, (unint64_t *)&qword_256FBA728);
  }
  return result;
}

uint64_t sub_2400D155C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D69547472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D61726679656BLL && a2 == 0xE900000000000073 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F65646976 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

BOOL static DKTrackingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKTrackingMode.hash(into:)()
{
  return sub_240154FF4();
}

uint64_t sub_2400D16F8()
{
  sub_2400D1FEC();
  return sub_240155048();
}

uint64_t sub_2400D1720()
{
  sub_2400D1FEC();
  return sub_240155054();
}

uint64_t sub_2400D1748()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400D1778 + 4 * byte_24015B6B0[*v0]))(0x6E776F6E6B6E75, 0xE700000000000000);
}

uint64_t sub_2400D1778()
{
  return 0x70757472617473;
}

uint64_t sub_2400D178C()
{
  return 0x65766973736170;
}

uint64_t sub_2400D17A0()
{
  return 0x657669746361;
}

uint64_t sub_2400D17B4()
{
  return 0x686372616573;
}

uint64_t sub_2400D17C8()
{
  return 0x6F546E7275746572;
}

uint64_t sub_2400D17E8()
{
  return 0x30383170696C66;
}

uint64_t sub_2400D17FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400D4738(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400D1820()
{
  sub_2400D1EDC();
  return sub_240155048();
}

uint64_t sub_2400D1848()
{
  sub_2400D1EDC();
  return sub_240155054();
}

uint64_t sub_2400D1870()
{
  sub_2400D1F20();
  return sub_240155048();
}

uint64_t sub_2400D1898()
{
  sub_2400D1F20();
  return sub_240155054();
}

uint64_t sub_2400D18C0()
{
  sub_2400D2030();
  return sub_240155048();
}

uint64_t sub_2400D18E8()
{
  sub_2400D2030();
  return sub_240155054();
}

uint64_t sub_2400D1910()
{
  sub_2400D1F64();
  return sub_240155048();
}

uint64_t sub_2400D1938()
{
  sub_2400D1F64();
  return sub_240155054();
}

uint64_t sub_2400D1960()
{
  sub_2400D1FA8();
  return sub_240155048();
}

uint64_t sub_2400D1988()
{
  sub_2400D1FA8();
  return sub_240155054();
}

uint64_t sub_2400D19B0()
{
  sub_2400D2074();
  return sub_240155048();
}

uint64_t sub_2400D19D8()
{
  sub_2400D2074();
  return sub_240155054();
}

uint64_t sub_2400D1A00()
{
  sub_2400D20B8();
  return sub_240155048();
}

uint64_t sub_2400D1A28()
{
  sub_2400D20B8();
  return sub_240155054();
}

void DKTrackingMode.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[22];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA730);
  v17[16] = *(_QWORD *)(v3 - 8);
  v17[17] = v3;
  MEMORY[0x24BDAC7A8](v3);
  v17[15] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA738);
  v17[13] = *(_QWORD *)(v5 - 8);
  v17[14] = v5;
  MEMORY[0x24BDAC7A8](v5);
  v17[12] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA740);
  v17[10] = *(_QWORD *)(v7 - 8);
  v17[11] = v7;
  MEMORY[0x24BDAC7A8](v7);
  v17[9] = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA748);
  v17[7] = *(_QWORD *)(v9 - 8);
  v17[8] = v9;
  MEMORY[0x24BDAC7A8](v9);
  v17[6] = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA750);
  v17[4] = *(_QWORD *)(v11 - 8);
  v17[5] = v11;
  MEMORY[0x24BDAC7A8](v11);
  v17[3] = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA758);
  v17[1] = *(_QWORD *)(v13 - 8);
  v17[2] = v13;
  MEMORY[0x24BDAC7A8](v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA760);
  MEMORY[0x24BDAC7A8](v14);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA768);
  v17[19] = *(_QWORD *)(v15 - 8);
  v17[20] = v15;
  MEMORY[0x24BDAC7A8](v15);
  v16 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400D1EDC();
  sub_240155030();
  __asm { BR              X9 }
}

uint64_t sub_2400D1CC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v4 - 71) = 0;
  sub_2400D20B8();
  v5 = *(_QWORD *)(v4 - 96);
  sub_240154E20();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 104) + 8))(v1, v5);
}

unint64_t sub_2400D1EDC()
{
  unint64_t result;

  result = qword_256FBA770;
  if (!qword_256FBA770)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BEDC, &type metadata for DKTrackingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA770);
  }
  return result;
}

unint64_t sub_2400D1F20()
{
  unint64_t result;

  result = qword_256FBA778;
  if (!qword_256FBA778)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BE8C, &type metadata for DKTrackingMode.Flip180CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA778);
  }
  return result;
}

unint64_t sub_2400D1F64()
{
  unint64_t result;

  result = qword_256FBA780;
  if (!qword_256FBA780)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BE3C, &type metadata for DKTrackingMode.ReturnToBaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA780);
  }
  return result;
}

unint64_t sub_2400D1FA8()
{
  unint64_t result;

  result = qword_256FBA788;
  if (!qword_256FBA788)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BDEC, &type metadata for DKTrackingMode.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA788);
  }
  return result;
}

unint64_t sub_2400D1FEC()
{
  unint64_t result;

  result = qword_256FBA790;
  if (!qword_256FBA790)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BD9C, &type metadata for DKTrackingMode.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA790);
  }
  return result;
}

unint64_t sub_2400D2030()
{
  unint64_t result;

  result = qword_256FBA798;
  if (!qword_256FBA798)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BD4C, &type metadata for DKTrackingMode.PassiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA798);
  }
  return result;
}

unint64_t sub_2400D2074()
{
  unint64_t result;

  result = qword_256FBA7A0;
  if (!qword_256FBA7A0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BCFC, &type metadata for DKTrackingMode.StartupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA7A0);
  }
  return result;
}

unint64_t sub_2400D20B8()
{
  unint64_t result;

  result = qword_256FBA7A8;
  if (!qword_256FBA7A8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BCAC, &type metadata for DKTrackingMode.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA7A8);
  }
  return result;
}

uint64_t DKTrackingMode.hashValue.getter()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t DKTrackingMode.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;

  v50 = a2;
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA7B0);
  v41 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  v49 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA7B8);
  v38 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  v45 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA7C0);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v48 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA7C8);
  v36 = *(_QWORD *)(v7 - 8);
  v37 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v46 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA7D0);
  v34 = *(_QWORD *)(v9 - 8);
  v35 = v9;
  MEMORY[0x24BDAC7A8](v9);
  v47 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA7D8);
  v32 = *(_QWORD *)(v11 - 8);
  v33 = v11;
  MEMORY[0x24BDAC7A8](v11);
  v44 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA7E0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA7E8);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = a1[3];
  v51 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v21);
  sub_2400D1EDC();
  v22 = v52;
  sub_240155024();
  if (!v22)
  {
    v30[2] = v16;
    v30[0] = v14;
    v30[1] = v13;
    v52 = v18;
    v31 = v17;
    v23 = v20;
    v24 = sub_240154E08();
    if (*(_QWORD *)(v24 + 16) == 1)
      __asm { BR              X9 }
    v25 = sub_240154BC8();
    swift_allocError();
    v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_256FB6960);
    *v27 = &type metadata for DKTrackingMode;
    v28 = v31;
    sub_240154D9C();
    sub_240154BBC();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v25 - 8) + 104))(v27, *MEMORY[0x24BEE26D0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v23, v28);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
}

void sub_2400D2570()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 - 70) = 1;
  sub_2400D2074();
  v4 = *(_QWORD *)(v3 - 160);
  v5 = *(_QWORD *)(v3 - 264);
  sub_240154D90();
  if (!v2)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v3 - 256) + 8))(v4, *(_QWORD *)(v3 - 248));
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v5);
    JUMPOUT(0x2400D27F4);
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x2400D2540);
}

unint64_t sub_2400D2800()
{
  unint64_t result;

  result = qword_256FBA7F0;
  if (!qword_256FBA7F0)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKTrackingMode, &type metadata for DKTrackingMode);
    atomic_store(result, (unint64_t *)&qword_256FBA7F0);
  }
  return result;
}

uint64_t sub_2400D2844@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return DKTrackingMode.init(from:)(a1, a2);
}

void sub_2400D2858(_QWORD *a1)
{
  DKTrackingMode.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for DKTrackingMode()
{
  return &type metadata for DKTrackingMode;
}

uint64_t sub_2400D2880(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  char *v9;
  unint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  char *v17;
  unint64_t v18;
  unint64_t v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  unint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  unint64_t v33;
  unint64_t v34;
  char *v35;
  unint64_t v36;
  unint64_t v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  char *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  char *v47;
  unint64_t v48;
  unint64_t v49;
  char *v50;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  unint64_t v54;
  unint64_t v55;
  char *v56;
  unint64_t v57;
  unint64_t v58;
  char *v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  unint64_t v63;
  unint64_t v64;
  char *v65;
  unint64_t v66;
  char *v67;
  char v68;
  uint64_t v69;

  v2 = v1;
  *(_QWORD *)(v1 + 16) = a1;
  swift_retain();
  v4 = sub_240077F00(0, 1, 1, MEMORY[0x24BEE4AF8]);
  v6 = *((_QWORD *)v4 + 2);
  v5 = *((_QWORD *)v4 + 3);
  v7 = v5 >> 1;
  v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    v4 = sub_240077F00((char *)(v5 > 1), v6 + 1, 1, v4);
    v5 = *((_QWORD *)v4 + 3);
    v7 = v5 >> 1;
  }
  *((_QWORD *)v4 + 2) = v8;
  v9 = &v4[3 * v6];
  *((_WORD *)v9 + 16) = 256;
  v9[34] = 4;
  v10 = v6 + 2;
  if (v7 < (uint64_t)(v6 + 2))
    v4 = sub_240077F00((char *)(v5 > 1), v6 + 2, 1, v4);
  *((_QWORD *)v4 + 2) = v10;
  v11 = &v4[3 * v8];
  *((_WORD *)v11 + 16) = 256;
  v11[34] = 8;
  v12 = *((_QWORD *)v4 + 3);
  v13 = v6 + 3;
  if ((uint64_t)(v6 + 3) > (uint64_t)(v12 >> 1))
    v4 = sub_240077F00((char *)(v12 > 1), v6 + 3, 1, v4);
  *((_QWORD *)v4 + 2) = v13;
  v14 = &v4[3 * v10];
  *((_WORD *)v14 + 16) = 513;
  v14[34] = 1;
  v15 = *((_QWORD *)v4 + 3);
  v16 = v6 + 4;
  if ((uint64_t)(v6 + 4) > (uint64_t)(v15 >> 1))
    v4 = sub_240077F00((char *)(v15 > 1), v6 + 4, 1, v4);
  *((_QWORD *)v4 + 2) = v16;
  v17 = &v4[3 * v13];
  *((_WORD *)v17 + 16) = 769;
  v17[34] = 3;
  v18 = *((_QWORD *)v4 + 3);
  v19 = v6 + 5;
  if ((uint64_t)(v6 + 5) > (uint64_t)(v18 >> 1))
    v4 = sub_240077F00((char *)(v18 > 1), v6 + 5, 1, v4);
  *((_QWORD *)v4 + 2) = v19;
  v20 = &v4[3 * v16];
  *((_WORD *)v20 + 16) = 1025;
  v20[34] = 10;
  v21 = *((_QWORD *)v4 + 3);
  v22 = v6 + 6;
  if ((uint64_t)(v6 + 6) > (uint64_t)(v21 >> 1))
    v4 = sub_240077F00((char *)(v21 > 1), v6 + 6, 1, v4);
  *((_QWORD *)v4 + 2) = v22;
  v23 = &v4[3 * v19];
  *((_WORD *)v23 + 16) = 1026;
  v23[34] = 10;
  v24 = *((_QWORD *)v4 + 3);
  v25 = v6 + 7;
  if ((uint64_t)(v6 + 7) > (uint64_t)(v24 >> 1))
    v4 = sub_240077F00((char *)(v24 > 1), v6 + 7, 1, v4);
  *((_QWORD *)v4 + 2) = v25;
  v26 = &v4[3 * v22];
  *((_WORD *)v26 + 16) = 1026;
  v26[34] = 2;
  v27 = *((_QWORD *)v4 + 3);
  v28 = v6 + 8;
  if ((uint64_t)(v6 + 8) > (uint64_t)(v27 >> 1))
    v4 = sub_240077F00((char *)(v27 > 1), v6 + 8, 1, v4);
  *((_QWORD *)v4 + 2) = v28;
  v29 = &v4[3 * v25];
  *((_WORD *)v29 + 16) = 516;
  v29[34] = 1;
  v30 = *((_QWORD *)v4 + 3);
  v31 = v6 + 9;
  if ((uint64_t)(v6 + 9) > (uint64_t)(v30 >> 1))
    v4 = sub_240077F00((char *)(v30 > 1), v6 + 9, 1, v4);
  *((_QWORD *)v4 + 2) = v31;
  v32 = &v4[3 * v28];
  *((_WORD *)v32 + 16) = 260;
  v32[34] = 4;
  v33 = *((_QWORD *)v4 + 3);
  v34 = v6 + 10;
  if ((uint64_t)(v6 + 10) > (uint64_t)(v33 >> 1))
    v4 = sub_240077F00((char *)(v33 > 1), v6 + 10, 1, v4);
  *((_QWORD *)v4 + 2) = v34;
  v35 = &v4[3 * v31];
  *((_WORD *)v35 + 16) = 260;
  v35[34] = 9;
  v36 = *((_QWORD *)v4 + 3);
  v37 = v6 + 11;
  if ((uint64_t)(v6 + 11) > (uint64_t)(v36 >> 1))
    v4 = sub_240077F00((char *)(v36 > 1), v6 + 11, 1, v4);
  *((_QWORD *)v4 + 2) = v37;
  v38 = &v4[3 * v34];
  *((_WORD *)v38 + 16) = 515;
  v38[34] = 1;
  v39 = *((_QWORD *)v4 + 3);
  v40 = v6 + 12;
  if ((uint64_t)(v6 + 12) > (uint64_t)(v39 >> 1))
    v4 = sub_240077F00((char *)(v39 > 1), v6 + 12, 1, v4);
  *((_QWORD *)v4 + 2) = v40;
  v41 = &v4[3 * v37];
  *((_WORD *)v41 + 16) = 259;
  v41[34] = 5;
  v42 = *((_QWORD *)v4 + 3);
  v43 = v6 + 13;
  if ((uint64_t)(v6 + 13) > (uint64_t)(v42 >> 1))
    v4 = sub_240077F00((char *)(v42 > 1), v6 + 13, 1, v4);
  *((_QWORD *)v4 + 2) = v43;
  v44 = &v4[3 * v40];
  *((_WORD *)v44 + 16) = 259;
  v44[34] = 6;
  v45 = *((_QWORD *)v4 + 3);
  v46 = v6 + 14;
  if ((uint64_t)(v6 + 14) > (uint64_t)(v45 >> 1))
    v4 = sub_240077F00((char *)(v45 > 1), v6 + 14, 1, v4);
  *((_QWORD *)v4 + 2) = v46;
  v47 = &v4[3 * v43];
  *((_WORD *)v47 + 16) = 1281;
  v47[34] = 11;
  v48 = *((_QWORD *)v4 + 3);
  v49 = v6 + 15;
  if ((uint64_t)(v6 + 15) > (uint64_t)(v48 >> 1))
    v4 = sub_240077F00((char *)(v48 > 1), v6 + 15, 1, v4);
  *((_QWORD *)v4 + 2) = v49;
  v50 = &v4[3 * v46];
  *((_WORD *)v50 + 16) = 1282;
  v50[34] = 11;
  v51 = *((_QWORD *)v4 + 3);
  v52 = v6 + 16;
  if ((uint64_t)(v6 + 16) > (uint64_t)(v51 >> 1))
    v4 = sub_240077F00((char *)(v51 > 1), v6 + 16, 1, v4);
  *((_QWORD *)v4 + 2) = v52;
  v53 = &v4[3 * v49];
  *((_WORD *)v53 + 16) = 261;
  v53[34] = 4;
  v54 = *((_QWORD *)v4 + 3);
  v55 = v6 + 17;
  if ((uint64_t)(v6 + 17) > (uint64_t)(v54 >> 1))
    v4 = sub_240077F00((char *)(v54 > 1), v6 + 17, 1, v4);
  *((_QWORD *)v4 + 2) = v55;
  v56 = &v4[3 * v52];
  *((_WORD *)v56 + 16) = 261;
  v56[34] = 12;
  v57 = *((_QWORD *)v4 + 3);
  v58 = v6 + 18;
  if ((uint64_t)(v6 + 18) > (uint64_t)(v57 >> 1))
    v4 = sub_240077F00((char *)(v57 > 1), v6 + 18, 1, v4);
  *((_QWORD *)v4 + 2) = v58;
  v59 = &v4[3 * v55];
  *((_WORD *)v59 + 16) = 1;
  v59[34] = 7;
  v60 = *((_QWORD *)v4 + 3);
  v61 = v6 + 19;
  if ((uint64_t)(v6 + 19) > (uint64_t)(v60 >> 1))
    v4 = sub_240077F00((char *)(v60 > 1), v6 + 19, 1, v4);
  *((_QWORD *)v4 + 2) = v61;
  v62 = &v4[3 * v58];
  *((_WORD *)v62 + 16) = 2;
  v62[34] = 7;
  v63 = *((_QWORD *)v4 + 3);
  v64 = v6 + 20;
  if ((uint64_t)(v6 + 20) > (uint64_t)(v63 >> 1))
    v4 = sub_240077F00((char *)(v63 > 1), v6 + 20, 1, v4);
  *((_QWORD *)v4 + 2) = v64;
  v65 = &v4[3 * v61];
  *((_WORD *)v65 + 16) = 256;
  v65[34] = 4;
  v66 = *((_QWORD *)v4 + 3);
  if ((uint64_t)(v6 + 21) > (uint64_t)(v66 >> 1))
    v4 = sub_240077F00((char *)(v66 > 1), v6 + 21, 1, v4);
  *((_QWORD *)v4 + 2) = v6 + 21;
  v67 = &v4[3 * v64];
  *((_WORD *)v67 + 16) = 256;
  v67[34] = 8;
  v68 = *(_BYTE *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_config)
                 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_256FBA980);
  swift_allocObject();
  v69 = sub_24006FC28((v68 & 1) == 0, (uint64_t)v4);
  swift_release();
  *(_QWORD *)(v2 + 24) = v69;
  return v2;
}

uint64_t sub_2400D2F54(char *a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  int64_t v30;
  int64_t v31;
  char *v32;
  char *v33;
  char *i;
  char v35;
  unint64_t v36;
  unint64_t v37;
  int64_t v38;
  unint64_t v39;
  int64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  double v55;
  double v56;
  void (*v57)(char *, uint64_t);
  int64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  char v63;
  double v64;
  double v65;
  uint64_t v66;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(uint64_t, uint64_t, uint64_t);
  char *v72;
  double v73;
  double v74;
  unsigned int (*v75)(char *, uint64_t, uint64_t);
  int64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  char *v83;
  double v84;
  double v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  double v91;
  double v92;
  void (*v93)(char *, uint64_t);
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  double v97;
  double v98;
  os_log_type_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  int v105;
  uint64_t v106;
  void *v107;
  void *v108;
  int64_t v109;
  uint64_t v110;
  void *v111;
  char v112;
  uint64_t v113;
  unint64_t v114;
  os_log_type_t v115;
  uint64_t v116;
  void *v117;
  int v118;
  char *v120;
  char *v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  int64_t v131;
  char v132;
  uint64_t v133;
  unint64_t v134;
  char v135[17];

  v128 = a1;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v127 = (char *)&v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v125 = (uint64_t)&v120 - v6;
  v7 = MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v120 - v8;
  MEMORY[0x24BDAC7A8](v7);
  v122 = (char *)&v120 - v10;
  v11 = sub_240154310();
  v12 = *(_QWORD *)(v11 - 8);
  v129 = v11;
  v130 = v12;
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x24BDAC7A8](v13);
  v124 = (char *)&v120 - v17;
  v18 = MEMORY[0x24BDAC7A8](v16);
  v123 = (char *)&v120 - v19;
  v20 = MEMORY[0x24BDAC7A8](v18);
  v121 = (char *)&v120 - v21;
  v22 = MEMORY[0x24BDAC7A8](v20);
  v120 = (char *)&v120 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v126 = (char *)&v120 - v24;
  v131 = v1;
  v25 = *(_QWORD *)(*(_QWORD *)(v1 + 16)
                  + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_signals);
  v26 = v25 + 56;
  v27 = 1 << *(_BYTE *)(v25 + 32);
  v28 = -1;
  if (v27 < 64)
    v28 = ~(-1 << v27);
  v29 = v28 & *(_QWORD *)(v25 + 56);
  v30 = (unint64_t)(v27 + 63) >> 6;
  swift_bridgeObjectRetain();
  v31 = 0;
  v32 = (char *)MEMORY[0x24BEE4AF8];
  v33 = v15;
  for (i = v9; ; v9 = i)
  {
    if (v29)
    {
      v36 = __clz(__rbit64(v29));
      v29 &= v29 - 1;
      v37 = v36 | (v31 << 6);
      goto LABEL_22;
    }
    v38 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
      __break(1u);
      goto LABEL_110;
    }
    if (v38 >= v30)
      goto LABEL_57;
    v39 = *(_QWORD *)(v26 + 8 * v38);
    ++v31;
    if (!v39)
    {
      v31 = v38 + 1;
      if (v38 + 1 >= v30)
        goto LABEL_57;
      v39 = *(_QWORD *)(v26 + 8 * v31);
      if (!v39)
      {
        v31 = v38 + 2;
        if (v38 + 2 >= v30)
          goto LABEL_57;
        v39 = *(_QWORD *)(v26 + 8 * v31);
        if (!v39)
          break;
      }
    }
LABEL_21:
    v29 = (v39 - 1) & v39;
    v37 = __clz(__rbit64(v39)) + (v31 << 6);
LABEL_22:
    v41 = *(_QWORD *)(*(_QWORD *)(v25 + 48) + 8 * v37);
    switch(v41)
    {
      case 0:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v43 = *((_QWORD *)v32 + 2);
        v42 = *((_QWORD *)v32 + 3);
        v44 = v43 + 1;
        if (v43 >= v42 >> 1)
          v32 = sub_240078024((char *)(v42 > 1), v43 + 1, 1, v32);
        v35 = 4;
        break;
      case 1:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v43 = *((_QWORD *)v32 + 2);
        v48 = *((_QWORD *)v32 + 3);
        v44 = v43 + 1;
        if (v43 >= v48 >> 1)
          v32 = sub_240078024((char *)(v48 > 1), v43 + 1, 1, v32);
        v35 = 3;
        break;
      case 2:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v43 = *((_QWORD *)v32 + 2);
        v46 = *((_QWORD *)v32 + 3);
        v44 = v43 + 1;
        if (v43 >= v46 >> 1)
          v32 = sub_240078024((char *)(v46 > 1), v43 + 1, 1, v32);
        v35 = 10;
        break;
      case 3:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v43 = *((_QWORD *)v32 + 2);
        v47 = *((_QWORD *)v32 + 3);
        v44 = v43 + 1;
        if (v43 >= v47 >> 1)
          v32 = sub_240078024((char *)(v47 > 1), v43 + 1, 1, v32);
        v35 = 11;
        break;
      case 4:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v43 = *((_QWORD *)v32 + 2);
        v45 = *((_QWORD *)v32 + 3);
        v44 = v43 + 1;
        if (v43 >= v45 >> 1)
          v32 = sub_240078024((char *)(v45 > 1), v43 + 1, 1, v32);
        v35 = 6;
        break;
      case 5:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v43 = *((_QWORD *)v32 + 2);
        v49 = *((_QWORD *)v32 + 3);
        v44 = v43 + 1;
        if (v43 >= v49 >> 1)
          v32 = sub_240078024((char *)(v49 > 1), v43 + 1, 1, v32);
        v35 = 9;
        break;
      case 6:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
        v43 = *((_QWORD *)v32 + 2);
        v50 = *((_QWORD *)v32 + 3);
        v44 = v43 + 1;
        if (v43 >= v50 >> 1)
          v32 = sub_240078024((char *)(v50 > 1), v43 + 1, 1, v32);
        v35 = 7;
        break;
      default:
        v133 = v41;
        sub_240154F28();
        __break(1u);
        JUMPOUT(0x2400D3E14);
    }
    *((_QWORD *)v32 + 2) = v44;
    v32[v43 + 32] = v35;
    v15 = v33;
  }
  v40 = v38 + 3;
  if (v40 < v30)
  {
    v39 = *(_QWORD *)(v26 + 8 * v40);
    if (!v39)
    {
      while (1)
      {
        v31 = v40 + 1;
        if (__OFADD__(v40, 1))
          break;
        if (v31 >= v30)
          goto LABEL_57;
        v39 = *(_QWORD *)(v26 + 8 * v31);
        ++v40;
        if (v39)
          goto LABEL_21;
      }
LABEL_110:
      __break(1u);
LABEL_111:
      v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
LABEL_59:
      v58 = v31;
      v60 = *((_QWORD *)v32 + 2);
      v59 = *((_QWORD *)v32 + 3);
      v61 = v60 + 1;
      v62 = v130;
      if (v60 >= v59 >> 1)
        v32 = sub_240078024((char *)(v59 > 1), v60 + 1, 1, v32);
      v63 = 2;
LABEL_67:
      *((_QWORD *)v32 + 2) = v61;
      v32[v60 + 32] = v63;
      v66 = (uint64_t)v127;
      v69 = (uint64_t)v122;
      goto LABEL_69;
    }
    v31 = v40;
    goto LABEL_21;
  }
LABEL_57:
  swift_release();
  v51 = v129;
  v52 = v130;
  v53 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
  v53(v126, &v128[OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_time], v129);
  v31 = v131;
  v54 = v120;
  v53(v120, (char *)(*(_QWORD *)(v131 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime), v51);
  sub_24015428C();
  v56 = v55;
  v57 = *(void (**)(char *, uint64_t))(v52 + 8);
  v57(v54, v51);
  v128 = (char *)v57;
  if (v56 > 3.0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_111;
    goto LABEL_59;
  }
  v53(v54, (char *)(*(_QWORD *)(v31 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSubjectSeenTime), v51);
  sub_24015428C();
  v65 = v64;
  v57(v54, v51);
  v66 = (uint64_t)v127;
  if (v65 < 1.0)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v62 = v130;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
    v58 = v131;
    v60 = *((_QWORD *)v32 + 2);
    v68 = *((_QWORD *)v32 + 3);
    v61 = v60 + 1;
    v63 = 1;
    if (v60 >= v68 >> 1)
      v32 = sub_240078024((char *)(v68 > 1), v60 + 1, 1, v32);
    goto LABEL_67;
  }
  v69 = (uint64_t)v122;
  v62 = v130;
  v58 = v131;
LABEL_69:
  sub_24008BFDC(*(_QWORD *)(v58 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime, v69);
  v70 = v129;
  v71 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48);
  if (v71(v69, 1, v129) == 1)
  {
    v72 = v121;
    sub_240154280();
    sub_240077EAC(v69);
  }
  else
  {
    v72 = v121;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v121, v69, v70);
  }
  sub_24015428C();
  v74 = v73;
  ((void (*)(char *, uint64_t))v128)(v72, v70);
  if (v74 <= 5.0)
  {
    v75 = (unsigned int (*)(char *, uint64_t, uint64_t))v71;
    v82 = v131;
    v79 = v129;
  }
  else
  {
    v75 = (unsigned int (*)(char *, uint64_t, uint64_t))v71;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
    v76 = v131;
    v78 = *((_QWORD *)v32 + 2);
    v77 = *((_QWORD *)v32 + 3);
    v79 = v129;
    if (v78 >= v77 >> 1)
      v32 = sub_240078024((char *)(v77 > 1), v78 + 1, 1, v32);
    *((_QWORD *)v32 + 2) = v78 + 1;
    v32[v78 + 32] = 8;
    v80 = *(_QWORD *)(v76 + 16)
        + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastStartupCommandTime;
    swift_retain();
    sub_240077EAC(v80);
    v62 = v130;
    v81 = v80;
    v82 = v131;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56))(v81, 1, 1, v79);
    swift_release();
    v66 = (uint64_t)v127;
  }
  sub_24008BFDC(*(_QWORD *)(v82 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime, (uint64_t)v9);
  if (v75(v9, 1, v79) == 1)
  {
    v83 = v123;
    sub_240154280();
    sub_240077EAC((uint64_t)v9);
  }
  else
  {
    v83 = v123;
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v123, v9, v79);
  }
  sub_24015428C();
  v85 = v84;
  ((void (*)(char *, uint64_t))v128)(v83, v79);
  if (v85 > 5.0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
    v87 = *((_QWORD *)v32 + 2);
    v86 = *((_QWORD *)v32 + 3);
    if (v87 >= v86 >> 1)
      v32 = sub_240078024((char *)(v86 > 1), v87 + 1, 1, v32);
    *((_QWORD *)v32 + 2) = v87 + 1;
    v32[v87 + 32] = 9;
    v88 = *(_QWORD *)(v82 + 16)
        + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastReturnToBaseCommandTime;
    swift_retain();
    sub_240077EAC(v88);
    v62 = v130;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56))(v88, 1, 1, v79);
    swift_release();
    v66 = (uint64_t)v127;
  }
  v89 = v125;
  sub_24008BFDC(*(_QWORD *)(v82 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime, v125);
  if (v75((char *)v89, 1, v79) == 1)
  {
    v90 = v124;
    sub_240154280();
    sub_240077EAC(v89);
  }
  else
  {
    v90 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v124, v89, v79);
  }
  sub_24015428C();
  v92 = v91;
  v93 = (void (*)(char *, uint64_t))v128;
  ((void (*)(char *, uint64_t))v128)(v90, v79);
  if (v92 > 60.0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
    v95 = *((_QWORD *)v32 + 2);
    v94 = *((_QWORD *)v32 + 3);
    if (v95 >= v94 >> 1)
      v32 = sub_240078024((char *)(v94 > 1), v95 + 1, 1, v32);
    *((_QWORD *)v32 + 2) = v95 + 1;
    v32[v95 + 32] = 6;
    v96 = *(_QWORD *)(v82 + 16)
        + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastSearchCommandTime;
    swift_retain();
    sub_240077EAC(v96);
    v62 = v130;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v130 + 56))(v96, 1, 1, v79);
    swift_release();
    v66 = (uint64_t)v127;
  }
  sub_24008BFDC(*(_QWORD *)(v82 + 16)+ OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime, v66);
  if (v75((char *)v66, 1, v79) == 1)
  {
    sub_240154280();
    sub_240077EAC(v66);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v15, v66, v79);
  }
  sub_24015428C();
  v98 = v97;
  v93(v15, v79);
  if (v98 > 5.0)
  {
    LOBYTE(v133) = 8;
    v99 = sub_240154964();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(&v133, 0xD000000000000012, 0x8000000240163D70, v99);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v32 = sub_240078024(0, *((_QWORD *)v32 + 2) + 1, 1, v32);
    v101 = *((_QWORD *)v32 + 2);
    v100 = *((_QWORD *)v32 + 3);
    if (v101 >= v100 >> 1)
      v32 = sub_240078024((char *)(v100 > 1), v101 + 1, 1, v32);
    *((_QWORD *)v32 + 2) = v101 + 1;
    v32[v101 + 32] = 12;
    v102 = *(_QWORD *)(v82 + 16)
         + OBJC_IVAR____TtC23IntelligentTrackingCore34DKIntelligentTrackingInternalState_lastFlip180CommandTime;
    swift_retain();
    sub_240077EAC(v102);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v102, 1, 1, v79);
    swift_release();
  }
  v103 = *(_QWORD *)(v82 + 24);
  v104 = *(void **)(v103 + 32);
  swift_retain();
  objc_msgSend(v104, sel_lock);
  v105 = *(unsigned __int8 *)(v103 + 16);
  objc_msgSend(v104, sel_unlock);
  swift_release();
  v106 = *(_QWORD *)(v82 + 24);
  v107 = *(void **)(v106 + 32);
  swift_retain();
  objc_msgSend(v107, sel_lock);
  LOBYTE(v104) = sub_2400A4404(v106, (uint64_t)v32);
  v108 = v107;
  v109 = v131;
  objc_msgSend(v108, sel_unlock);
  swift_release();
  swift_bridgeObjectRelease();
  if ((v104 & 1) != 0)
  {
    v135[0] = 8;
    v133 = 0;
    v134 = 0xE000000000000000;
    sub_240154B38();
    sub_2401546D0();
    v110 = *(_QWORD *)(v109 + 24);
    v111 = *(void **)(v110 + 32);
    swift_retain();
    objc_msgSend(v111, sel_lock);
    v112 = *(_BYTE *)(v110 + 16);
    objc_msgSend(v111, sel_unlock);
    swift_release();
    v132 = v112;
    sub_240154C94();
    v113 = v133;
    v114 = v134;
    v115 = sub_240154964();
    _s23IntelligentTrackingCore5DKLogC3log8category7message5levelyAC8CategoryO_SSSo03os_E7_type_tatFZ_0(v135, v113, v114, v115);
    swift_bridgeObjectRelease();
  }
  v116 = *(_QWORD *)(v109 + 24);
  v117 = *(void **)(v116 + 32);
  swift_retain();
  objc_msgSend(v117, sel_lock);
  v118 = *(unsigned __int8 *)(v116 + 16);
  objc_msgSend(v117, sel_unlock);
  swift_release();
  v93(v126, v79);
  return v105 | (v118 << 8);
}

uint64_t sub_2400D3E30()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DKIntelligentTrackingFSM()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for DKIntelligentTrackingFSM.Event(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF4)
    goto LABEL_17;
  if (a2 + 12 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 12) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 12;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 12;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 12;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v8 = v6 - 13;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingFSM.Event(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_2400D3F58 + 4 * byte_24015B6CA[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_2400D3F8C + 4 * byte_24015B6C5[v4]))();
}

uint64_t sub_2400D3F8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D3F94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400D3F9CLL);
  return result;
}

uint64_t sub_2400D3FA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400D3FB0);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_2400D3FB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D3FBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingFSM.Event()
{
  return &type metadata for DKIntelligentTrackingFSM.Event;
}

uint64_t storeEnumTagSinglePayload for DKIntelligentTrackingFSM.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_2400D4024 + 4 * byte_24015B6D4[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2400D4058 + 4 * byte_24015B6CF[v4]))();
}

uint64_t sub_2400D4058(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D4060(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400D4068);
  return result;
}

uint64_t sub_2400D4074(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400D407CLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2400D4080(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D4088(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKIntelligentTrackingFSM.State()
{
  return &type metadata for DKIntelligentTrackingFSM.State;
}

uint64_t _s23IntelligentTrackingCore14DKTrackingModeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_2400D40F0 + 4 * byte_24015B6DE[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_2400D4124 + 4 * byte_24015B6D9[v4]))();
}

uint64_t sub_2400D4124(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D412C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400D4134);
  return result;
}

uint64_t sub_2400D4140(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400D4148);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_2400D414C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D4154(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKTrackingMode.CodingKeys()
{
  return &type metadata for DKTrackingMode.CodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.UnknownCodingKeys()
{
  return &type metadata for DKTrackingMode.UnknownCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.StartupCodingKeys()
{
  return &type metadata for DKTrackingMode.StartupCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.PassiveCodingKeys()
{
  return &type metadata for DKTrackingMode.PassiveCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.ActiveCodingKeys()
{
  return &type metadata for DKTrackingMode.ActiveCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.SearchCodingKeys()
{
  return &type metadata for DKTrackingMode.SearchCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.ReturnToBaseCodingKeys()
{
  return &type metadata for DKTrackingMode.ReturnToBaseCodingKeys;
}

ValueMetadata *type metadata accessor for DKTrackingMode.Flip180CodingKeys()
{
  return &type metadata for DKTrackingMode.Flip180CodingKeys;
}

unint64_t sub_2400D41E4()
{
  unint64_t result;

  result = qword_256FBA8E8;
  if (!qword_256FBA8E8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BBB4, &type metadata for DKTrackingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA8E8);
  }
  return result;
}

unint64_t sub_2400D422C()
{
  unint64_t result;

  result = qword_256FBA8F0;
  if (!qword_256FBA8F0)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BC1C, &type metadata for DKIntelligentTrackingFSM.State);
    atomic_store(result, (unint64_t *)&qword_256FBA8F0);
  }
  return result;
}

unint64_t sub_2400D4274()
{
  unint64_t result;

  result = qword_256FBA8F8;
  if (!qword_256FBA8F8)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BC84, &type metadata for DKIntelligentTrackingFSM.Event);
    atomic_store(result, (unint64_t *)&qword_256FBA8F8);
  }
  return result;
}

unint64_t sub_2400D42BC()
{
  unint64_t result;

  result = qword_256FBA900;
  if (!qword_256FBA900)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BAD4, &type metadata for DKTrackingMode.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA900);
  }
  return result;
}

unint64_t sub_2400D4304()
{
  unint64_t result;

  result = qword_256FBA908;
  if (!qword_256FBA908)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BAFC, &type metadata for DKTrackingMode.UnknownCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA908);
  }
  return result;
}

unint64_t sub_2400D434C()
{
  unint64_t result;

  result = qword_256FBA910;
  if (!qword_256FBA910)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BA84, &type metadata for DKTrackingMode.StartupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA910);
  }
  return result;
}

unint64_t sub_2400D4394()
{
  unint64_t result;

  result = qword_256FBA918;
  if (!qword_256FBA918)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BAAC, &type metadata for DKTrackingMode.StartupCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA918);
  }
  return result;
}

unint64_t sub_2400D43DC()
{
  unint64_t result;

  result = qword_256FBA920;
  if (!qword_256FBA920)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BA34, &type metadata for DKTrackingMode.PassiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA920);
  }
  return result;
}

unint64_t sub_2400D4424()
{
  unint64_t result;

  result = qword_256FBA928;
  if (!qword_256FBA928)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BA5C, &type metadata for DKTrackingMode.PassiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA928);
  }
  return result;
}

unint64_t sub_2400D446C()
{
  unint64_t result;

  result = qword_256FBA930;
  if (!qword_256FBA930)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B9E4, &type metadata for DKTrackingMode.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA930);
  }
  return result;
}

unint64_t sub_2400D44B4()
{
  unint64_t result;

  result = qword_256FBA938;
  if (!qword_256FBA938)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BA0C, &type metadata for DKTrackingMode.ActiveCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA938);
  }
  return result;
}

unint64_t sub_2400D44FC()
{
  unint64_t result;

  result = qword_256FBA940;
  if (!qword_256FBA940)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B994, &type metadata for DKTrackingMode.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA940);
  }
  return result;
}

unint64_t sub_2400D4544()
{
  unint64_t result;

  result = qword_256FBA948;
  if (!qword_256FBA948)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B9BC, &type metadata for DKTrackingMode.SearchCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA948);
  }
  return result;
}

unint64_t sub_2400D458C()
{
  unint64_t result;

  result = qword_256FBA950;
  if (!qword_256FBA950)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B944, &type metadata for DKTrackingMode.ReturnToBaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA950);
  }
  return result;
}

unint64_t sub_2400D45D4()
{
  unint64_t result;

  result = qword_256FBA958;
  if (!qword_256FBA958)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B96C, &type metadata for DKTrackingMode.ReturnToBaseCodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA958);
  }
  return result;
}

unint64_t sub_2400D461C()
{
  unint64_t result;

  result = qword_256FBA960;
  if (!qword_256FBA960)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B8F4, &type metadata for DKTrackingMode.Flip180CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA960);
  }
  return result;
}

unint64_t sub_2400D4664()
{
  unint64_t result;

  result = qword_256FBA968;
  if (!qword_256FBA968)
  {
    result = MEMORY[0x24267E0BC](&unk_24015B91C, &type metadata for DKTrackingMode.Flip180CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA968);
  }
  return result;
}

unint64_t sub_2400D46AC()
{
  unint64_t result;

  result = qword_256FBA970;
  if (!qword_256FBA970)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BB24, &type metadata for DKTrackingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA970);
  }
  return result;
}

unint64_t sub_2400D46F4()
{
  unint64_t result;

  result = qword_256FBA978;
  if (!qword_256FBA978)
  {
    result = MEMORY[0x24267E0BC](&unk_24015BB4C, &type metadata for DKTrackingMode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_256FBA978);
  }
  return result;
}

uint64_t sub_2400D4738(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000;
  if (v2 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x70757472617473 && a2 == 0xE700000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65766973736170 && a2 == 0xE700000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x657669746361 && a2 == 0xE600000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x686372616573 && a2 == 0xE600000000000000 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6F546E7275746572 && a2 == 0xEC00000065736142 || (sub_240154EF8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x30383170696C66 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v6 = sub_240154EF8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

BOOL static DKPersonMotionFilter.SearchDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t DKPersonMotionFilter.SearchDirection.hash(into:)()
{
  return sub_240154FF4();
}

uint64_t DKPersonMotionFilter.SearchDirection.hashValue.getter()
{
  sub_240154FE8();
  sub_240154FF4();
  return sub_240155018();
}

uint64_t sub_2400D4AA4@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time, a1);
}

uint64_t sub_2400D4AB0(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time);
}

uint64_t (*sub_2400D4ABC())()
{
  return nullsub_1;
}

__n128 sub_2400D4AD4@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_2400D4AF4(uint64_t a1)
{
  uint64_t v1;

  return sub_24008BADC(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect);
}

uint64_t (*sub_2400D4B04())()
{
  return nullsub_1;
}

__n128 sub_2400D4B1C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_2400D4B3C(uint64_t a1)
{
  uint64_t v1;

  return sub_24008BADC(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect);
}

uint64_t (*sub_2400D4B4C())()
{
  return nullsub_1;
}

uint64_t sub_2400D4B64()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw);
}

uint64_t sub_2400D4B7C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400D4B98())()
{
  return nullsub_1;
}

uint64_t sub_2400D4BB0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch);
}

uint64_t sub_2400D4BC8(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400D4BE4())()
{
  return nullsub_1;
}

uint64_t sub_2400D4BFC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll);
}

uint64_t sub_2400D4C14(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400D4C30())()
{
  return nullsub_1;
}

uint64_t sub_2400D4C48()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance);
}

uint64_t sub_2400D4C60(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400D4C7C())()
{
  return nullsub_1;
}

uint64_t DKPersonMotionFilter.Measurement.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t DKPersonMotionFilter.Measurement.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time;
  v2 = sub_240154310();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_2400D4D28@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated, a1);
}

uint64_t sub_2400D4D34(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated);
}

uint64_t (*sub_2400D4D40())()
{
  return nullsub_1;
}

uint64_t sub_2400D4D58@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, a1);
}

uint64_t sub_2400D4D64(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated);
}

uint64_t (*sub_2400D4D70())()
{
  return nullsub_1;
}

uint64_t sub_2400D4D88@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, a1);
}

uint64_t sub_2400D4D94(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated);
}

uint64_t (*sub_2400D4DA0())()
{
  return nullsub_1;
}

uint64_t sub_2400D4DB8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate);
}

uint64_t sub_2400D4DC8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400D4DD8())()
{
  return nullsub_1;
}

uint64_t sub_2400D4DF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240080084(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, a1, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t sub_2400D4E1C(uint64_t a1)
{
  uint64_t v1;

  return sub_240072CAC(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t (*sub_2400D4E44())()
{
  return nullsub_1;
}

double sub_2400D4E5C()
{
  return sub_2400C0F70(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
}

_QWORD *sub_2400D4E68(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect, a1, a2, a3, a4);
}

uint64_t (*sub_2400D4E74())()
{
  return nullsub_1;
}

double sub_2400D4E8C()
{
  return sub_2400C0F70(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect);
}

_QWORD *sub_2400D4E98(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect, a1, a2, a3, a4);
}

uint64_t (*sub_2400D4EA4())()
{
  return nullsub_1;
}

uint64_t sub_2400D4EBC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw);
}

uint64_t sub_2400D4ED4(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400D4EF0())()
{
  return nullsub_1;
}

uint64_t sub_2400D4F08()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch);
}

uint64_t sub_2400D4F20(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400D4F3C())()
{
  return nullsub_1;
}

uint64_t sub_2400D4F54()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll);
}

uint64_t sub_2400D4F6C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400D4F88())()
{
  return nullsub_1;
}

uint64_t sub_2400D4FA0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v14;

  v10 = a5(0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v14 - v11;
  sub_240080084(a1, (uint64_t)&v14 - v11, a5);
  return sub_240072CAC((uint64_t)v12, *a2 + *a6, a5);
}

uint64_t sub_2400D5034@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240080084(v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, a1, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t sub_2400D5060(uint64_t a1)
{
  uint64_t v1;

  return sub_240072CAC(a1, v1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t (*sub_2400D5088())()
{
  return nullsub_1;
}

uint64_t sub_2400D50A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, double a9, double a10, double a11, double a12, double a13, double a14, double a15, double a16, char a17, uint64_t a18, char a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t);
  double *v38;
  double *v39;

  v32 = v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw;
  v33 = v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch;
  v34 = v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll;
  v35 = v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated;
  v36 = sub_240154310();
  v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 32);
  v37(v35, a1, v36);
  v37(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, a2, v36);
  v37(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, a3, v36);
  *(_QWORD *)(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate) = a4;
  sub_2400A4FB4(a5, v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion);
  v38 = (double *)(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
  *v38 = a9;
  v38[1] = a10;
  v38[2] = a11;
  v38[3] = a12;
  v39 = (double *)(v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect);
  *v39 = a13;
  v39[1] = a14;
  v39[2] = a15;
  v39[3] = a16;
  *(_QWORD *)v32 = a6;
  *(_BYTE *)(v32 + 8) = a7 & 1;
  *(_QWORD *)v33 = a8;
  *(_BYTE *)(v33 + 8) = a17 & 1;
  *(_QWORD *)v34 = a18;
  *(_BYTE *)(v34 + 8) = a19 & 1;
  sub_2400A4FB4(a20, v20 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera);
  return v20;
}

uint64_t DKPersonMotionFilter.State.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, v2);
  v3(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, v2);
  sub_2400800C8(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  sub_2400800C8(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  return v0;
}

uint64_t DKPersonMotionFilter.State.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  v1 = v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, v2);
  v3(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, v2);
  sub_2400800C8(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  sub_2400800C8(v0 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
  return swift_deallocClassInstance();
}

uint64_t DKPersonMotionFilter.configuration.getter()
{
  return swift_retain();
}

uint64_t sub_2400D53DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_240080084(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, a1, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
}

uint64_t sub_2400D5408(uint64_t a1)
{
  uint64_t v1;

  return sub_240072CAC(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
}

uint64_t (*sub_2400D5430())()
{
  return nullsub_1;
}

uint64_t sub_2400D5448()
{
  return swift_retain();
}

uint64_t sub_2400D5458(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D5470())()
{
  return nullsub_1;
}

uint64_t sub_2400D5488()
{
  return swift_retain();
}

uint64_t sub_2400D5498(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D54B0())()
{
  return nullsub_1;
}

uint64_t sub_2400D54C8()
{
  return swift_retain();
}

uint64_t sub_2400D54D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D54F0())()
{
  return nullsub_1;
}

uint64_t sub_2400D5508()
{
  return swift_retain();
}

uint64_t sub_2400D5518(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D5530())()
{
  return nullsub_1;
}

uint64_t sub_2400D5548()
{
  return swift_retain();
}

uint64_t sub_2400D5558(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D5570())()
{
  return nullsub_1;
}

uint64_t sub_2400D5588()
{
  return swift_retain();
}

uint64_t sub_2400D5598(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D55B0())()
{
  return nullsub_1;
}

uint64_t sub_2400D55C8()
{
  return swift_retain();
}

uint64_t sub_2400D55D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D55F0())()
{
  return nullsub_1;
}

uint64_t sub_2400D5608()
{
  return swift_retain();
}

uint64_t sub_2400D5618(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D5630())()
{
  return nullsub_1;
}

uint64_t sub_2400D5648()
{
  return swift_retain();
}

uint64_t sub_2400D5658(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D5670())()
{
  return nullsub_1;
}

uint64_t sub_2400D5688()
{
  return swift_retain();
}

uint64_t sub_2400D5698(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D56B0())()
{
  return nullsub_1;
}

uint64_t sub_2400D56C8()
{
  return swift_retain();
}

uint64_t sub_2400D56D8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D56F0())()
{
  return nullsub_1;
}

uint64_t sub_2400D5708()
{
  return swift_retain();
}

uint64_t sub_2400D5718(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter) = a1;
  return swift_release();
}

uint64_t (*sub_2400D5730())()
{
  return nullsub_1;
}

uint64_t sub_2400D5748()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge);
}

uint64_t sub_2400D5758(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = result;
  return result;
}

uint64_t (*sub_2400D5768())()
{
  return nullsub_1;
}

uint64_t sub_2400D5780()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge);
}

uint64_t sub_2400D5790(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = result;
  return result;
}

uint64_t (*sub_2400D57A0())()
{
  return nullsub_1;
}

uint64_t sub_2400D57B8()
{
  return swift_retain();
}

uint64_t sub_2400D57C8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = a1;
  return swift_release();
}

uint64_t (*sub_2400D57E0())()
{
  return nullsub_1;
}

uint64_t sub_2400D57F8@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, a1);
}

uint64_t sub_2400D5804(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated);
}

uint64_t (*sub_2400D5810())()
{
  return nullsub_1;
}

uint64_t sub_2400D5828@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, a1);
}

uint64_t sub_2400D5834(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated);
}

uint64_t (*sub_2400D5840())()
{
  return nullsub_1;
}

uint64_t sub_2400D5858@<X0>(uint64_t a1@<X8>)
{
  return sub_24009C038(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, a1);
}

uint64_t sub_2400D5864(uint64_t a1)
{
  return sub_24009C084(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated);
}

uint64_t (*sub_2400D5870())()
{
  return nullsub_1;
}

uint64_t sub_2400D5888()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate);
}

uint64_t sub_2400D5898(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400D58A8())()
{
  return nullsub_1;
}

__n128 sub_2400D58C0@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect + 32);
  result = *(__n128 *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
  v4 = *(_OWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect + 16);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t sub_2400D58E0(uint64_t a1)
{
  uint64_t v1;

  return sub_24008BADC(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
}

uint64_t (*sub_2400D58F0())()
{
  return nullsub_1;
}

uint64_t DKPersonMotionFilter.__allocating_init(currentTime:configuration:camera:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;

  swift_allocObject();
  v6 = sub_2400D84AC(a1, a2, a3);
  swift_release();
  return v6;
}

uint64_t DKPersonMotionFilter.init(currentTime:configuration:camera:)(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  v3 = sub_2400D84AC(a1, a2, a3);
  swift_release();
  return v3;
}

BOOL sub_2400D5998(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  CGFloat v13;
  double v14;
  double v15;
  double v16;
  CGRect *v20;
  BOOL v21;
  uint64_t v23;

  v4 = sub_240154310();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
  if (!v9)
    return 1;
  v10 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect);
  v11 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 8);
  v12 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 16);
  v13 = *(double *)(v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect + 24);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v5 + 16))(v8, v9 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated, v4, v6);
  swift_retain();
  sub_24015428C();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v16 = sub_240076208(v15 * *(double *)(*(_QWORD *)(v2 + 16) + 96), v10, v11, v12, v13);
  v20 = (CGRect *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect);
  if ((*(_BYTE *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect + 32) & 1) != 0)
  {
    v20 = (CGRect *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect);
    if ((*(_BYTE *)(a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect + 32) & 1) != 0)
    {
      swift_release();
      return 1;
    }
  }
  v21 = CGRectIntersectsRect(*(CGRect *)&v16, *v20);
  swift_release();
  return v21;
}

uint64_t sub_2400D5B08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
  sub_2400800C8(v3, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  return sub_240080084(a1, v3, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
}

uint64_t sub_2400D5B5C(void (*a1)(char *, double))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, double);
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  double *v21;
  char v22;
  CGFloat *v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  CGFloat v27;
  double v28;
  double v29;
  CGFloat v30;
  double v31;
  CGFloat v32;
  double v33;
  CGFloat v34;
  uint64_t v35;
  CGFloat v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  double v40;
  uint64_t v41;
  uint64_t v42;
  double v43;
  uint64_t v44;
  double v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  double v50;
  void (*v51)(char *, uint64_t, uint64_t, uint64_t);
  CGFloat v52;
  CGFloat v53;
  CGFloat v54;
  double v55;
  CGFloat v56;
  char *v57;
  void (*v58)(uint64_t, char *, uint64_t);
  CGFloat v59;
  BOOL v60;
  uint64_t v61;
  uint64_t v62;
  CGFloat *v63;
  CGFloat v64;
  CGFloat v65;
  CGFloat v66;
  double v67;
  double v68;
  double v69;
  CGFloat v70;
  CGFloat v71;
  CGFloat v72;
  CGFloat v73;
  void (*v74)(char *, double);
  uint64_t v75;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double distance;
  char *v81;
  uint64_t v82;
  double MidX;
  uint64_t v84;
  double MidY;
  uint64_t v86;
  CGFloat v87;
  double v88;
  void (*v89)(char *, uint64_t, uint64_t, uint64_t);
  BOOL v90;
  CGFloat v91;
  double v92;
  CGFloat v93;
  CGFloat v94;
  CGFloat v95;
  void (*v96)(uint64_t, char *, uint64_t);
  CGFloat MinX;
  uint64_t v98;
  CGFloat *v99;
  CGFloat v100;
  CGFloat v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(uint64_t, uint64_t, uint64_t, uint64_t);
  double v105;
  uint64_t v106;
  uint64_t v107;
  double v108;
  uint64_t v109;
  uint64_t v110;
  double v111;
  char *v112;
  double v113;
  CGFloat v114;
  CGFloat v115;
  CGFloat v116;
  CGFloat v117;
  CGFloat v118;
  void (*v119)(char *, double);
  uint64_t v120;
  uint64_t v121;
  uint64_t (*v122)(char *, uint64_t);
  _QWORD *v123;
  char *v124;
  Swift::tuple_worldRect___C_CGRect_distance_Double v125;
  _BYTE v126[48];
  __C::CGRect v127;
  CGRect v128;
  CGRect v129;
  CGRect v130;
  CGRect v131;
  CGRect v132;
  CGRect v133;
  __C::CGRect v134;
  CGRect v135;
  CGRect v136;
  CGRect v137;
  CGRect v138;
  CGRect v139;
  CGRect v140;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_240154310();
  v11 = *(_QWORD **)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (void (*)(char *, double))v11[2];
  v124 = (char *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time;
  v15(v14, v12);
  sub_2400D6A60((uint64_t)v14);
  v122 = (uint64_t (*)(char *, uint64_t))v11[1];
  result = v122(v14, v10);
  v17 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate;
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate);
  v19 = __OFADD__(v18, 1);
  v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
    return result;
  }
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate) = v20;
  v21 = (double *)((char *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect);
  v22 = *((_BYTE *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect + 32);
  v121 = (uint64_t)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect;
  if ((v22 & 1) == 0)
  {
    v66 = *v21;
    v67 = v21[1];
    v69 = v21[2];
    v68 = v21[3];
    v118 = v66;
    v70 = v66;
    v114 = v66;
    v117 = v67;
    v71 = v67;
    v113 = v67;
    v116 = v69;
    v72 = v69;
    v115 = v68;
    v73 = v68;
    v123 = v11;
    v74 = v15;
    v120 = v17;
    sub_240080084(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    v119 = a1;
    v75 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance);
    v134.origin.x = v70;
    v134.origin.y = v71;
    v134.size.width = v72;
    v134.size.height = v73;
    DKCamera.cameraToWorld(rect:distance:)(&v125, v134, *(Swift::Double_optional *)(&v75 - 1));
    x = v125.worldRect.origin.x;
    y = v125.worldRect.origin.y;
    width = v125.worldRect.size.width;
    height = v125.worldRect.size.height;
    distance = v125.distance;
    sub_2400800C8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    v81 = v124;
    ((void (*)(char *, char *, uint64_t))v15)(v14, v124, v10);
    type metadata accessor for DKConstantAccelerationFilter.Measurement(0);
    swift_allocObject();
    swift_retain();
    v82 = DKConstantAccelerationFilter.Measurement.init(time:)(v14);
    v135.origin.x = x;
    v135.origin.y = y;
    v135.size.width = width;
    v135.size.height = height;
    MidX = CGRectGetMidX(v135);
    sub_24013CC30(0, MidX, 0.01);
    sub_24013D400(v82);
    swift_release();
    swift_release();
    ((void (*)(char *, char *, uint64_t))v15)(v14, v81, v10);
    swift_allocObject();
    swift_retain();
    v84 = DKConstantAccelerationFilter.Measurement.init(time:)(v14);
    v136.origin.x = x;
    v136.origin.y = y;
    v136.size.width = width;
    v136.size.height = height;
    MidY = CGRectGetMidY(v136);
    sub_24013CC30(0, MidY, 0.01);
    sub_24013D400(v84);
    swift_release();
    v15 = v74;
    swift_release();
    ((void (*)(char *, char *, uint64_t))v74)(v14, v81, v10);
    swift_allocObject();
    swift_retain();
    v86 = DKConstantAccelerationFilter.Measurement.init(time:)(v14);
    v87 = v73;
    sub_24013CC30(0, distance, 0.01);
    sub_24013D400(v86);
    swift_release();
    swift_release();
    swift_retain();
    v137.origin.x = x;
    v137.origin.y = y;
    v137.size.width = width;
    v137.size.height = height;
    v88 = CGRectGetWidth(v137);
    v89 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v123[7];
    v90 = 1;
    v89(v6, 1, 1, v10);
    sub_240148324(0, 1, (uint64_t)v6, v88);
    swift_release();
    sub_240077EAC((uint64_t)v6);
    swift_retain();
    v138.origin.x = x;
    v138.origin.y = y;
    v138.size.width = width;
    v138.size.height = height;
    v91 = CGRectGetHeight(v138);
    v89(v6, 1, 1, v10);
    v11 = v123;
    v92 = v91;
    v93 = v72;
    v94 = v113;
    v95 = v114;
    sub_240148324(0, 1, (uint64_t)v6, v92);
    swift_release();
    sub_240077EAC((uint64_t)v6);
    ((void (*)(char *, char *, uint64_t))v15)(v14, v81, v10);
    v96 = (void (*)(uint64_t, char *, uint64_t))v11[5];
    v96(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, v14, v10);
    ((void (*)(char *, char *, uint64_t))v15)(v14, v81, v10);
    v96(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, v14, v10);
    *(_QWORD *)(v2 + v120) = 0;
    v139.origin.x = v95;
    v139.origin.y = v94;
    v139.size.width = v93;
    v139.size.height = v87;
    MinX = CGRectGetMinX(v139);
    v98 = *(_QWORD *)(v2 + 16);
    if (MinX >= *(double *)(v98 + 248))
    {
      v140.origin.x = v95;
      v140.origin.y = v94;
      v140.size.width = v93;
      v140.size.height = v87;
      v90 = 1.0 - *(double *)(v98 + 248) < CGRectGetMaxX(v140);
    }
    *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = v90;
    *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = 0;
    v62 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect;
    v99 = (CGFloat *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
    v100 = v117;
    *v99 = v118;
    v99[1] = v100;
    v101 = v115;
    v99[2] = v116;
    v99[3] = v101;
    a1 = v119;
    goto LABEL_10;
  }
  v23 = (CGFloat *)((char *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect);
  if ((*((_BYTE *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect + 32) & 1) == 0)
  {
    v24 = v23[2];
    v114 = v23[3];
    v113 = v24;
    v25 = *v23;
    v26 = v23[1];
    v27 = *v23;
    v120 = v17;
    v28 = sub_2400D7F10(v27, v26, v24, v114);
    v30 = v29;
    v32 = v31;
    v34 = v33;
    sub_240080084(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    v35 = *(_QWORD *)((char *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance);
    v118 = v28;
    v127.origin.x = v28;
    v117 = v30;
    v127.origin.y = v30;
    v116 = v32;
    v127.size.width = v32;
    v115 = v34;
    v127.size.height = v34;
    DKCamera.cameraToWorld(rect:distance:)(&v125, v127, *(Swift::Double_optional *)(&v35 - 1));
    v36 = v125.worldRect.origin.x;
    v37 = v125.worldRect.origin.y;
    v38 = v125.worldRect.size.width;
    v39 = v125.worldRect.size.height;
    v40 = v125.distance;
    sub_2400800C8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
    ((void (*)(char *, char *, uint64_t))v15)(v14, v124, v10);
    type metadata accessor for DKConstantAccelerationFilter.Measurement(0);
    swift_allocObject();
    swift_retain();
    v41 = DKConstantAccelerationFilter.Measurement.init(time:)(v14);
    v119 = v15;
    v42 = v41;
    v128.origin.x = v36;
    v128.origin.y = v37;
    v128.size.width = v38;
    v128.size.height = v39;
    v43 = CGRectGetMidX(v128);
    sub_24013CC30(0, v43, 0.01);
    sub_24013D400(v42);
    swift_release();
    swift_release();
    ((void (*)(char *, char *, uint64_t))v119)(v14, v124, v10);
    swift_allocObject();
    swift_retain();
    v44 = DKConstantAccelerationFilter.Measurement.init(time:)(v14);
    v129.origin.x = v36;
    v129.origin.y = v37;
    v129.size.width = v38;
    v129.size.height = v39;
    v45 = CGRectGetMidY(v129);
    sub_24013CC30(0, v45, 0.01);
    sub_24013D400(v44);
    swift_release();
    swift_release();
    v123 = v11;
    v112 = v6;
    v46 = v124;
    ((void (*)(char *, char *, uint64_t))v119)(v14, v124, v10);
    swift_allocObject();
    swift_retain();
    v47 = DKConstantAccelerationFilter.Measurement.init(time:)(v14);
    sub_24013CC30(0, v40, 0.01);
    sub_24013D400(v47);
    swift_release();
    swift_release();
    ((void (*)(char *, char *, uint64_t))v119)(v14, v46, v10);
    swift_allocObject();
    swift_retain();
    v48 = DKConstantAccelerationFilter.Measurement.init(time:)(v14);
    sub_24013CC30(1uLL, 0.0, 0.001);
    sub_24013D400(v48);
    swift_release();
    v15 = v119;
    swift_release();
    v6 = v112;
    ((void (*)(char *, char *, uint64_t))v15)(v14, v46, v10);
    swift_allocObject();
    swift_retain();
    v49 = DKConstantAccelerationFilter.Measurement.init(time:)(v14);
    sub_24013CC30(2uLL, 0.0, 0.001);
    sub_24013D400(v49);
    swift_release();
    swift_release();
    swift_retain();
    v130.origin.x = v36;
    v130.origin.y = v37;
    v130.size.width = v38;
    v130.size.height = v39;
    v50 = CGRectGetWidth(v130);
    v51 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v123[7];
    v51(v6, 1, 1, v10);
    sub_240148324(0, 1, (uint64_t)v6, v50);
    swift_release();
    sub_240077EAC((uint64_t)v6);
    swift_retain();
    v131.origin.x = v36;
    v131.origin.y = v37;
    v52 = v25;
    v53 = v113;
    v131.size.width = v38;
    v131.size.height = v39;
    v54 = CGRectGetHeight(v131);
    v51(v6, 1, 1, v10);
    v11 = v123;
    v55 = v54;
    v56 = v114;
    sub_240148324(0, 1, (uint64_t)v6, v55);
    swift_release();
    sub_240077EAC((uint64_t)v6);
    v57 = v124;
    ((void (*)(char *, char *, uint64_t))v15)(v14, v124, v10);
    v58 = (void (*)(uint64_t, char *, uint64_t))v11[5];
    v58(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, v14, v10);
    ((void (*)(char *, char *, uint64_t))v15)(v14, v57, v10);
    v58(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, v14, v10);
    *(_QWORD *)(v2 + v120) = 0;
    v132.origin.x = v52;
    v132.origin.y = v26;
    v132.size.width = v53;
    v132.size.height = v56;
    v59 = CGRectGetMinX(v132);
    v60 = 1;
    v61 = *(_QWORD *)(v2 + 16);
    if (v59 >= *(double *)(v61 + 248))
    {
      v133.origin.x = v52;
      v133.origin.y = v26;
      v133.size.width = v53;
      v133.size.height = v56;
      v60 = 1.0 - *(double *)(v61 + 248) < CGRectGetMaxX(v133);
    }
    *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = v60;
    *(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = 0;
    v62 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect;
    v63 = (CGFloat *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
    v64 = v117;
    *v63 = v118;
    v63[1] = v64;
    v65 = v115;
    v63[2] = v116;
    v63[3] = v65;
LABEL_10:
    *(_BYTE *)(v2 + v62 + 32) = 0;
  }
  if ((*((_BYTE *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw + 8) & 1) != 0)
  {
    v102 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter);
    *(_BYTE *)(v102 + 33) = 0;
    v103 = v102 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    swift_retain();
    sub_240077EAC(v103);
    v104 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11[7];
    v104(v103, 1, 1, v10);
    swift_release();
  }
  else
  {
    v105 = *(double *)((char *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw);
    v104 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11[7];
    v104((uint64_t)v6, 1, 1, v10);
    swift_retain();
    sub_240148324(0, 1, (uint64_t)v6, v105);
    swift_release();
    sub_240077EAC((uint64_t)v6);
  }
  if ((*((_BYTE *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch + 8) & 1) != 0)
  {
    v106 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter);
    *(_BYTE *)(v106 + 33) = 0;
    v107 = v106 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    swift_retain();
    sub_240077EAC(v107);
    v104(v107, 1, 1, v10);
    swift_release();
  }
  else
  {
    v108 = *(double *)((char *)a1
                     + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch);
    v104((uint64_t)v6, 1, 1, v10);
    swift_retain();
    sub_240148324(0, 1, (uint64_t)v6, v108);
    swift_release();
    sub_240077EAC((uint64_t)v6);
  }
  if ((*((_BYTE *)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll + 8) & 1) != 0)
  {
    v109 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter);
    *(_BYTE *)(v109 + 33) = 0;
    v110 = v109 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
    swift_retain();
    sub_240077EAC(v110);
    v104(v110, 1, 1, v10);
    swift_release();
  }
  else
  {
    v111 = *(double *)((char *)a1
                     + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll);
    v104((uint64_t)v6, 1, 1, v10);
    swift_retain();
    sub_240148324(0, 1, (uint64_t)v6, v111);
    swift_release();
    sub_240077EAC((uint64_t)v6);
  }
  sub_24008BADC(v121, (uint64_t)v126);
  sub_24008BADC((uint64_t)a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect, (uint64_t)&v125);
  sub_2400D7954((uint64_t)v126, (uint64_t)&v125);
  ((void (*)(char *, char *, uint64_t))v15)(v14, v124, v10);
  sub_2400D6EFC((uint64_t)v14);
  return v122(v14, v10);
}

BOOL sub_2400D6918(double a1, double a2, double a3, double a4)
{
  return sub_2400D6940((double (*)(void))MEMORY[0x24BDBF010], (double (*)(double, double, double, double))MEMORY[0x24BDBEFF0], a1, a2, a3, a4);
}

BOOL sub_2400D692C(double a1, double a2, double a3, double a4)
{
  return sub_2400D6940((double (*)(void))MEMORY[0x24BDBF018], (double (*)(double, double, double, double))MEMORY[0x24BDBEFF8], a1, a2, a3, a4);
}

BOOL sub_2400D6940(double (*a1)(void), double (*a2)(double, double, double, double), double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  double v12;
  uint64_t v13;

  v12 = a1();
  v13 = *(_QWORD *)(v6 + 16);
  return v12 < *(double *)(v13 + 248) || 1.0 - *(double *)(v13 + 248) < a2(a3, a4, a5, a6);
}

uint64_t sub_2400D69C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  float64x2_t v8;

  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
  v4 = v3 + *(int *)(type metadata accessor for DKCamera() + 32);
  result = type metadata accessor for DKMotion3();
  v6 = *(_QWORD *)(v4 + *(int *)(result + 20));
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    if (v7 != 1)
    {
      v8 = vmulq_n_f64(*(float64x2_t *)(v3 + 8), 1.0 - (*(double *)(*(_QWORD *)(v1 + 16) + 248) + *(double *)(*(_QWORD *)(v1 + 16) + 248)));
      __asm { FMOV            V2.2D, #-0.5 }
      *(float64x2_t *)a1 = vaddq_f64(*(float64x2_t *)(v6 + 32), vmulq_f64(v8, _Q2));
      *(float64x2_t *)(a1 + 16) = v8;
      *(_BYTE *)(a1 + 32) = 0;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2400D6A60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double *v6;
  uint64_t v7;
  uint64_t v8;
  double *v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  double v16;
  double v17;
  CGFloat *v18;
  double v19;
  double v20;
  CGFloat v21;
  CGFloat v22;
  CGFloat Width;
  double v24;
  double v25;
  CGFloat MidX;
  CGFloat MidY;
  double v28;
  double v29;
  double v30;
  long double v31;
  long double v32;
  double v33;
  double v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  double v38;
  double v39;
  double v40;
  double v41;
  double v42;
  uint64_t v43;
  double v44;
  uint64_t v45;
  uint64_t v46;
  double v47;
  uint64_t v48;
  uint64_t result;
  double v50;
  double v51;
  CGRect v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;

  v2 = v1;
  v4 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (double *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v7);
  v9 = (double *)((char *)&v50 - v8);
  v10 = sub_240154310();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v1 + 16);
  if (*(_BYTE *)(v15 + 240) != 1)
    goto LABEL_16;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v14, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, v10, v12);
  sub_24015428C();
  v17 = v16;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (*(double *)(v15 + 104) >= v17)
    goto LABEL_16;
  v18 = (CGFloat *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect);
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect + 32) & 1) != 0)
    goto LABEL_16;
  v20 = v18[2];
  v19 = v18[3];
  v22 = *v18;
  v21 = v18[1];
  sub_240080084(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  sub_240080084((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v52.origin.x = v22;
  v52.origin.y = v21;
  v52.size.width = v20;
  v52.size.height = v19;
  Width = CGRectGetWidth(v52);
  v24 = 10.0;
  if (Width >= 1.0e-10)
  {
    v25 = v6[3] * 0.115;
    v53.origin.x = v22;
    v53.origin.y = v21;
    v53.size.width = v20;
    v53.size.height = v19;
    v24 = v25 / CGRectGetWidth(v53);
  }
  v51 = v24;
  sub_2400800C8((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v54.origin.x = v22;
  v54.origin.y = v21;
  v54.size.width = v20;
  v54.size.height = v19;
  MidX = CGRectGetMidX(v54);
  v55.origin.x = v22;
  v55.origin.y = v21;
  v55.size.width = v20;
  v55.size.height = v19;
  MidY = CGRectGetMidY(v55);
  sub_24007DCF8(5, MidX, MidY);
  v29 = v28;
  v32 = v9[3];
  v31 = v9[4];
  v50 = atan2(v30 + -0.5, v31);
  v33 = v9[1];
  v34 = v9[2];
  v35 = (char *)v9 + *(int *)(v4 + 32);
  v36 = *(_QWORD *)&v35[*(int *)(type metadata accessor for DKMotion3() + 20)];
  v37 = *(_QWORD *)(v36 + 16);
  if (!v37)
  {
    __break(1u);
    goto LABEL_18;
  }
  v38 = atan2(-(v29 + -0.5), v32);
  if (v37 == 1)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v39 = v51 * (v20 * v33) / v32;
  v40 = v51 * (v19 * v34) / v31;
  v41 = v38 + v39 * -0.5 + *(double *)(v36 + 32);
  v42 = v50 + v40 * -0.5 + *(double *)(v36 + 40);
  sub_2400800C8((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  if ((*(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) & 1) != 0)
  {
    v43 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter);
    swift_retain();
    v56.origin.x = v41;
    v56.origin.y = v42;
    v56.size.width = v39;
    v56.size.height = v40;
    v44 = CGRectGetMidX(v56);
    v45 = *(_QWORD *)(v43 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
    if (*(uint64_t *)(v45 + 16) < 1 || *(uint64_t *)(v45 + 24) < 1)
      goto LABEL_19;
    **(double **)(v45 + 32) = v44;
    sub_24013E288();
    swift_release();
  }
  if (*(_BYTE *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) != 1)
  {
LABEL_16:
    swift_retain();
    sub_240071824(a1);
    swift_release();
    swift_retain();
    sub_240071824(a1);
    swift_release();
    swift_retain();
    sub_240071824(a1);
    swift_release();
    return sub_2400D6EFC(a1);
  }
  v46 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter);
  swift_retain();
  v57.origin.x = v41;
  v57.origin.y = v42;
  v57.size.width = v39;
  v57.size.height = v40;
  v47 = CGRectGetMidY(v57);
  v48 = *(_QWORD *)(v46 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(uint64_t *)(v48 + 16) >= 1 && *(uint64_t *)(v48 + 24) >= 1)
  {
    **(double **)(v48 + 32) = v47;
    sub_24013E288();
    swift_release();
    goto LABEL_16;
  }
LABEL_19:
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t sub_2400D6EFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t, uint64_t, double);
  char v24;
  void (*v25)(char *, uint64_t);
  char v26;
  char v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  double v31;
  uint64_t result;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  double v37;
  double i;
  double j;
  uint64_t v40;
  double v41;
  double k;
  uint64_t v43;
  Swift::Double v44;
  uint64_t v45;
  double x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double v50;
  double v51;
  double v52;
  double v53;
  CGFloat v54;
  BOOL v55;
  double v56;
  CGFloat v57;
  uint64_t v58;
  double v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  double v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char v85;
  double v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  int v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  Swift::Double v100;
  double v101;
  CGFloat v102;
  __int128 v103;
  CGFloat v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  __C::CGRect v119;
  __C::CGRect v120;
  CGRect v121;
  CGRect v122;
  CGRect v123;

  v2 = v1;
  v108 = a1;
  v117 = type metadata accessor for DKMotion3();
  MEMORY[0x24BDAC7A8](v117);
  v109 = (uint64_t)&v99 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v110 = (char *)&v99 - v5;
  v118 = type metadata accessor for DKCamera();
  MEMORY[0x24BDAC7A8](v118);
  v112 = (uint64_t)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_240154310();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v111 = (char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v115 = (uint64_t)&v99 - v11;
  MEMORY[0x24BDAC7A8](v12);
  v114 = (uint64_t)&v99 - v13;
  MEMORY[0x24BDAC7A8](v14);
  v113 = (uint64_t)&v99 - v15;
  MEMORY[0x24BDAC7A8](v16);
  v18 = (char *)&v99 - v17;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v99 - v21;
  v116 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter;
  v23 = *(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16);
  v23((char *)&v99 - v21, *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v7, v20);
  swift_retain();
  sub_240154274();
  sub_2400D9144();
  v24 = sub_240154610();
  v107 = v8;
  v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v18, v7);
  v25(v22, v7);
  swift_release();
  if ((v24 & 1) != 0)
    goto LABEL_11;
  v106 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter;
  ((void (*)(char *, uint64_t, uint64_t))v23)(v22, *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v7);
  swift_retain();
  sub_240154274();
  v26 = sub_240154610();
  v25(v18, v7);
  v25(v22, v7);
  swift_release();
  if ((v26 & 1) != 0)
    goto LABEL_11;
  v105 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter;
  ((void (*)(char *, uint64_t, uint64_t))v23)(v22, *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter)+ OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_lastUpdateTime, v7);
  swift_retain();
  sub_240154274();
  v27 = sub_240154610();
  v25(v18, v7);
  v25(v22, v7);
  swift_release();
  if ((v27 & 1) != 0)
    goto LABEL_11;
  v28 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter);
  if (*(_BYTE *)(v28 + 33) != 1)
    goto LABEL_11;
  v29 = *(_BYTE *)(v28 + 32) == 1
      ? atan2(*(long double *)(v28 + 48), *(long double *)(v28 + 56))
      : *(double *)(v28 + 40);
  v30 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter);
  if (*(_BYTE *)(v30 + 33) != 1)
  {
LABEL_11:
    *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = 0;
    return swift_release();
  }
  if (*(_BYTE *)(v30 + 32) == 1)
    v31 = atan2(*(long double *)(v30 + 48), *(long double *)(v30 + 56));
  else
    v31 = *(double *)(v30 + 40);
  v33 = *(_QWORD *)(*(_QWORD *)(v2 + v116) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
  if (*(uint64_t *)(v33 + 16) >= 1 && *(uint64_t *)(v33 + 24) >= 1)
  {
    v34 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera;
    v35 = *(_QWORD *)(v2
                    + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera
                    + *(int *)(v118 + 32)
                    + *(int *)(v117 + 20));
    v36 = *(_QWORD *)(v35 + 16);
    if (v36)
    {
      v37 = **(double **)(v33 + 32);
      for (i = *(double *)(v35 + 32); i + 3.14159265 < v37; v37 = v37 + -6.28318531)
        ;
      for (j = i + -3.14159265; v37 < j; v37 = v37 + 6.28318531)
        ;
      v40 = *(_QWORD *)(*(_QWORD *)(v2 + v106) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
      if (*(uint64_t *)(v40 + 16) < 1 || *(uint64_t *)(v40 + 24) < 1)
        goto LABEL_60;
      if (v36 >= 2)
      {
        v41 = **(double **)(v40 + 32);
        for (k = *(double *)(v35 + 40); k + 3.14159265 < v41; v41 = v41 + -6.28318531)
          ;
        for (; v41 < k + -3.14159265; v41 = v41 + 6.28318531)
          ;
        v43 = *(_QWORD *)(*(_QWORD *)(v2 + v105) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
        if (*(uint64_t *)(v43 + 16) >= 1 && *(uint64_t *)(v43 + 24) >= 1)
        {
          v44 = **(double **)(v43 + 32);
          v45 = v112;
          sub_240080084(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, v112, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
          v119.origin.x = v37 - v29 * 0.5;
          v119.origin.y = v41 - v31 * 0.5;
          v119.size.width = v29;
          v119.size.height = v31;
          v100 = v44;
          v120 = DKCamera.worldToCamera(rect:distance:clampToBorders:)(v119, v44, 1);
          x = v120.origin.x;
          y = v120.origin.y;
          width = v120.size.width;
          height = v120.size.height;
          sub_2400800C8(v45, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
          v104 = x;
          v52 = sub_2400D8110(x, y, width, height);
          v53 = v51;
          v102 = v54;
          v55 = *(_BYTE *)v34 == 1;
          v101 = v50;
          if (v55)
          {
            v121.origin.x = v104;
            v56 = 1.0 - v104;
            *(double *)&v103 = v51;
            v57 = v50;
            v121.origin.y = y;
            v121.size.width = width;
            v121.size.height = height;
            v104 = v56 - CGRectGetWidth(v121);
            v122.origin.x = v52;
            v122.origin.y = v57;
            v53 = *(double *)&v103;
            *(_QWORD *)&v122.size.width = v103;
            v122.size.height = v102;
            v52 = 1.0 - v52 - CGRectGetWidth(v122);
          }
          ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v113, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, v7);
          ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v114, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, v7);
          ((void (*)(uint64_t, uint64_t, uint64_t))v23)(v115, v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, v7);
          v58 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate);
          ((void (*)(char *, uint64_t, uint64_t))v23)(v111, v108, v7);
          v123.origin.x = v104;
          v123.origin.y = y;
          v123.size.width = width;
          v123.size.height = height;
          v59 = v41 - CGRectGetHeight(v123) * *(double *)(v34 + 16) * *(double *)(*(_QWORD *)(v2 + 16) + 256);
          v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4440);
          v60 = swift_allocObject();
          v103 = xmmword_240155A50;
          *(_OWORD *)(v60 + 16) = xmmword_240155A50;
          *(double *)(v60 + 32) = v37;
          *(double *)(v60 + 40) = v59;
          v61 = *(_QWORD *)(v2 + v116);
          *(Swift::Double *)(v60 + 48) = v100;
          v62 = *(_QWORD **)(v61 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
          v63 = v62[2];
          if (v63 >= 2 && (uint64_t)v62[3] >= 1)
          {
            v64 = *(_QWORD **)(*(_QWORD *)(v2 + v106) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
            v65 = v64[2];
            if (v65 > 1 && (uint64_t)v64[3] >= 1)
            {
              v106 = v58;
              v116 = v34;
              v66 = *(_QWORD **)(*(_QWORD *)(v2 + v105) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_x);
              v67 = v66[2];
              if (v67 > 1 && (uint64_t)v66[3] >= 1)
              {
                v68 = v60;
                v69 = v53;
                v70 = v62[4];
                v71 = *(_QWORD *)(v70 + 8);
                v72 = v64[4];
                v73 = *(_QWORD *)(v72 + 8);
                v74 = v66[4];
                v75 = *(_QWORD *)(v74 + 8);
                v76 = swift_allocObject();
                *(_OWORD *)(v76 + 16) = v103;
                *(_QWORD *)(v76 + 32) = v71;
                *(_QWORD *)(v76 + 40) = v73;
                *(_QWORD *)(v76 + 48) = v75;
                if ((unint64_t)v63 > 2 && (unint64_t)v65 > 2 && (unint64_t)v67 > 2)
                {
                  v77 = v76;
                  v78 = *(_QWORD *)(v70 + 16);
                  v79 = *(_QWORD *)(v72 + 16);
                  v80 = *(_QWORD *)(v74 + 16);
                  v81 = swift_allocObject();
                  *(_OWORD *)(v81 + 16) = v103;
                  *(_QWORD *)(v81 + 32) = v78;
                  *(_QWORD *)(v81 + 40) = v79;
                  *(_QWORD *)(v81 + 48) = v80;
                  v82 = (uint64_t)v110;
                  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v110, v111, v7);
                  v83 = v117;
                  *(_QWORD *)(v82 + *(int *)(v117 + 20)) = v68;
                  *(_QWORD *)(v82 + *(int *)(v83 + 24)) = v77;
                  *(_QWORD *)(v82 + *(int *)(v83 + 28)) = v81;
                  v84 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter);
                  v85 = *(_BYTE *)(v84 + 33);
                  if ((v85 & 1) != 0)
                  {
                    v86 = v69;
                    if (*(_BYTE *)(v84 + 32) == 1)
                      v87 = atan2(*(long double *)(v84 + 48), *(long double *)(v84 + 56));
                    else
                      v87 = *(_QWORD *)(v84 + 40);
                  }
                  else
                  {
                    v87 = 0;
                    v86 = v69;
                  }
                  v88 = v85 ^ 1;
                  v89 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter);
                  v90 = *(unsigned __int8 *)(v89 + 33);
                  if (v90 == 1)
                  {
                    if (*(_BYTE *)(v89 + 32) == 1)
                      v91 = atan2(*(long double *)(v89 + 48), *(long double *)(v89 + 56));
                    else
                      v91 = *(_QWORD *)(v89 + 40);
                  }
                  else
                  {
                    v91 = 0;
                  }
                  v92 = v90 ^ 1;
                  v93 = *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter);
                  v94 = *(unsigned __int8 *)(v93 + 33);
                  if (v94 == 1)
                  {
                    if (*(_BYTE *)(v93 + 32) == 1)
                      v95 = atan2(*(long double *)(v93 + 48), *(long double *)(v93 + 56));
                    else
                      v95 = *(_QWORD *)(v93 + 40);
                  }
                  else
                  {
                    v95 = 0;
                  }
                  v96 = v112;
                  sub_240080084(v116, v112, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
                  v97 = v109;
                  sub_2400A4FB4(v96 + *(int *)(v118 + 32), v109);
                  type metadata accessor for DKPersonMotionFilter.State(0);
                  v98 = swift_allocObject();
                  sub_2400D50A0(v113, v114, v115, v106, v82, v87, v88, v91, v104, y, width, height, v52, v101, v86, v102, v92, v95, v94 ^ 1,
                    v97);
                  *(_QWORD *)(v2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = v98;
                  return swift_release();
                }
              }
            }
          }
        }
        goto LABEL_60;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
LABEL_60:
  result = sub_240154D00();
  __break(1u);
  return result;
}

uint64_t sub_2400D7934(uint64_t a1)
{
  sub_2400D6A60(a1);
  return swift_retain();
}

uint64_t sub_2400D7954(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  CGFloat v9;
  CGFloat v10;
  CGFloat v11;
  CGFloat v12;
  double *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  double v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  double v24;
  uint64_t v25;
  char v26;
  CGFloat v27;
  CGFloat v28;
  CGFloat v29;
  CGFloat v30;
  double *v31;
  double v32;
  double v33;
  double v34;
  double v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  CGFloat v39;
  CGFloat v40;
  CGFloat Height;
  CGFloat Width;
  CGFloat v43;
  unint64_t v44;
  CGFloat v45;
  CGFloat v46;
  CGFloat v47;
  unint64_t v48;
  _QWORD v49[4];
  char v50;
  _QWORD v51[4];
  char v52;
  CGRect v53;
  CGRect v54;
  CGRect v55;
  CGRect v56;
  CGRect v57;
  CGRect v58;
  CGRect v59;
  CGRect v60;
  CGRect v61;
  CGRect v62;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24008BADC(a1, (uint64_t)v51);
  if ((v52 & 1) != 0
    || (v9 = *(double *)v51,
        v10 = *(double *)&v51[1],
        v11 = *(double *)&v51[2],
        v12 = *(double *)&v51[3],
        sub_24008BADC(a2, (uint64_t)v49),
        (v50 & 1) != 0))
  {
    v13 = *(double **)(v3 + 16);
    v14 = v13[28];
    v15 = *((_QWORD *)v13 + 25);
    v16 = sub_240154310();
    v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
    v17(v8, 1, 1, v16);
    swift_retain();
    sub_240148324(v15, 0, (uint64_t)v8, v14);
    swift_release();
    sub_240077EAC((uint64_t)v8);
    v18 = v13[29];
    v19 = *((_QWORD *)v13 + 25);
    v17(v8, 1, 1, v16);
    swift_retain();
    sub_240148324(v19, 0, (uint64_t)v8, v18);
    swift_release();
    sub_240077EAC((uint64_t)v8);
    v20 = v13[26];
    v21 = *((_QWORD *)v13 + 25);
    v17(v8, 1, 1, v16);
    swift_retain();
    sub_240148324(v21, 0, (uint64_t)v8, v20);
    swift_release();
    sub_240077EAC((uint64_t)v8);
    v22 = v13[27];
    v23 = *((_QWORD *)v13 + 25);
    v17(v8, 1, 1, v16);
    swift_retain();
    v24 = v22;
    v25 = v23;
    v26 = 0;
LABEL_7:
    sub_240148324(v25, v26, (uint64_t)v8, v24);
    swift_release();
    return sub_240077EAC((uint64_t)v8);
  }
  v27 = *(double *)v49;
  v28 = *(double *)&v49[1];
  v29 = *(double *)&v49[2];
  v30 = *(double *)&v49[3];
  v53.origin.x = v9;
  v53.origin.y = v10;
  v53.size.width = v11;
  v53.size.height = v12;
  Width = CGRectGetWidth(v53);
  v54.origin.x = v27;
  v54.origin.y = v28;
  v54.size.width = v29;
  v54.size.height = v30;
  Width = Width / CGRectGetWidth(v54);
  v55.origin.x = v9;
  v55.origin.y = v10;
  v55.size.width = v11;
  v55.size.height = v12;
  Height = CGRectGetHeight(v55);
  v56.origin.x = v27;
  v56.origin.y = v28;
  v56.size.width = v29;
  v56.size.height = v30;
  v40 = CGRectGetHeight(v56);
  v57.origin.x = v9;
  v57.origin.y = v10;
  v57.size.width = v11;
  v57.size.height = v12;
  CGRectGetMinX(v57);
  v58.origin.x = v27;
  v58.origin.y = v28;
  v58.size.width = v29;
  v58.size.height = v30;
  CGRectGetMinX(v58);
  v59.origin.x = v27;
  v59.origin.y = v28;
  v59.size.width = v29;
  v59.size.height = v30;
  CGRectGetWidth(v59);
  v39 = v9;
  v60.origin.x = v9;
  v60.origin.y = v10;
  v60.size.width = v11;
  v60.size.height = v12;
  CGRectGetMinY(v60);
  v61.origin.x = v27;
  v61.origin.y = v28;
  v61.size.width = v29;
  v61.size.height = v30;
  CGRectGetMinY(v61);
  v62.origin.x = v27;
  v62.origin.y = v28;
  v62.size.width = v29;
  v62.size.height = v30;
  CGRectGetHeight(v62);
  if (Width >= 1.0e-10 && Height / v40 >= 1.0e-10)
  {
    v31 = *(double **)(v3 + 16);
    v32 = v31[28];
    v33 = v31[29];
    v35 = v31[26];
    v34 = v31[27];
    v36 = sub_240154310();
    v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56);
    v37(v8, 1, 1, v36);
    swift_retain();
    sub_240148324(0, 1, (uint64_t)v8, v32);
    swift_release();
    sub_240077EAC((uint64_t)v8);
    v37(v8, 1, 1, v36);
    swift_retain();
    sub_240148324(0, 1, (uint64_t)v8, v33);
    swift_release();
    sub_240077EAC((uint64_t)v8);
    v37(v8, 1, 1, v36);
    swift_retain();
    sub_240148324(0, 1, (uint64_t)v8, v35);
    swift_release();
    sub_240077EAC((uint64_t)v8);
    v37(v8, 1, 1, v36);
    swift_retain();
    v24 = v34;
    v25 = 0;
    v26 = 1;
    goto LABEL_7;
  }
  v43 = 0.0;
  v44 = 0xE000000000000000;
  sub_240154B38();
  v47 = v43;
  v48 = v44;
  sub_2401546D0();
  sub_2401546D0();
  v43 = v39;
  v44 = *(_QWORD *)&v10;
  v45 = v11;
  v46 = v12;
  type metadata accessor for CGRect(0);
  sub_240154C94();
  sub_2401546D0();
  v43 = v27;
  v44 = *(_QWORD *)&v28;
  v45 = v29;
  v46 = v30;
  sub_240154C94();
  result = sub_240154D00();
  __break(1u);
  return result;
}

double sub_2400D7F10(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  double MinX;
  double v15;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;

  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter);
  if (*(_BYTE *)(v9 + 33) == 1 && *(_BYTE *)(v9 + 32) == 1)
    atan2(*(long double *)(v9 + 48), *(long double *)(v9 + 56));
  v10 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter);
  if (*(_BYTE *)(v10 + 33) == 1 && *(_BYTE *)(v10 + 32) == 1)
    atan2(*(long double *)(v10 + 48), *(long double *)(v10 + 56));
  v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter);
  if (*(_BYTE *)(v11 + 33) == 1)
  {
    if (*(_BYTE *)(v11 + 32) == 1)
      v12 = atan2(*(long double *)(v11 + 48), *(long double *)(v11 + 56));
    else
      v12 = *(double *)(v11 + 40);
  }
  else
  {
    v12 = *(double *)(*(_QWORD *)(v4 + 16) + 208);
  }
  v13 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter);
  if (*(_BYTE *)(v13 + 33) == 1 && *(_BYTE *)(v13 + 32) == 1)
    atan2(*(long double *)(v13 + 48), *(long double *)(v13 + 56));
  v17.origin.x = a1;
  v17.origin.y = a2;
  v17.size.width = a3;
  v17.size.height = a4;
  MinX = CGRectGetMinX(v17);
  v18.origin.x = a1;
  v18.origin.y = a2;
  v18.size.width = a3;
  v18.size.height = a4;
  v15 = MinX + v12 * CGRectGetWidth(v18);
  v19.origin.x = a1;
  v19.origin.y = a2;
  v19.size.width = a3;
  v19.size.height = a4;
  CGRectGetMinY(v19);
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  CGRectGetHeight(v20);
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  CGRectGetWidth(v21);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  CGRectGetHeight(v22);
  return v15;
}

double sub_2400D8110(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  uint64_t v4;
  uint64_t v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  double MinX;
  double v17;
  double v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v9 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter);
  if (*(_BYTE *)(v9 + 33) == 1)
  {
    if (*(_BYTE *)(v9 + 32) == 1)
      v10 = atan2(*(long double *)(v9 + 48), *(long double *)(v9 + 56));
    else
      v10 = *(double *)(v9 + 40);
  }
  else
  {
    v10 = *(double *)(*(_QWORD *)(v4 + 16) + 224);
  }
  v11 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter);
  v18 = v10;
  if (*(_BYTE *)(v11 + 33) == 1 && *(_BYTE *)(v11 + 32) == 1)
    atan2(*(long double *)(v11 + 48), *(long double *)(v11 + 56));
  v12 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter);
  if (*(_BYTE *)(v12 + 33) == 1)
  {
    if (*(_BYTE *)(v12 + 32) == 1)
      v13 = atan2(*(long double *)(v12 + 48), *(long double *)(v12 + 56));
    else
      v13 = *(double *)(v12 + 40);
  }
  else
  {
    v13 = *(double *)(*(_QWORD *)(v4 + 16) + 208);
  }
  v14 = *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter);
  if (*(_BYTE *)(v14 + 33) == 1 && *(_BYTE *)(v14 + 32) == 1)
    atan2(*(long double *)(v14 + 48), *(long double *)(v14 + 56));
  v19.origin.x = a1;
  v19.origin.y = a2;
  v19.size.width = a3;
  v19.size.height = a4;
  MinX = CGRectGetMinX(v19);
  v20.origin.x = a1;
  v20.origin.y = a2;
  v20.size.width = a3;
  v20.size.height = a4;
  v17 = MinX - v13 * CGRectGetWidth(v20) / v18;
  v21.origin.x = a1;
  v21.origin.y = a2;
  v21.size.width = a3;
  v21.size.height = a4;
  CGRectGetMinY(v21);
  v22.origin.x = a1;
  v22.origin.y = a2;
  v22.size.width = a3;
  v22.size.height = a4;
  CGRectGetHeight(v22);
  v23.origin.x = a1;
  v23.origin.y = a2;
  v23.size.width = a3;
  v23.size.height = a4;
  CGRectGetWidth(v23);
  v24.origin.x = a1;
  v24.origin.y = a2;
  v24.size.width = a3;
  v24.size.height = a4;
  CGRectGetHeight(v24);
  return v17;
}

uint64_t DKPersonMotionFilter.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);

  swift_release();
  sub_2400800C8(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, v2);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, v2);
  return v0;
}

uint64_t DKPersonMotionFilter.__deallocating_deinit()
{
  DKPersonMotionFilter.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_2400D84AC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  BOOL v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t result;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;

  v4 = v3;
  v100 = a1;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4CC8);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_BYTE *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = 0;
  *(_BYTE *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = 0;
  sub_240154274();
  sub_240154274();
  sub_240154274();
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate) = 0;
  v10 = v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect;
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_BYTE *)(v10 + 32) = 1;
  *(_QWORD *)(v4 + 16) = a2;
  v99 = a3;
  sub_240080084(a3, v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
  v11 = a2[14];
  type metadata accessor for DKConstantAccelerationFilter(0);
  *(_QWORD *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v11;
  swift_retain_n();
  swift_retain();
  sub_240141688(v11, 3);
  v13 = v12;
  swift_release();
  v103 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter) = v13;
  v14 = a2[15];
  *(_QWORD *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v14;
  v15 = swift_retain_n();
  sub_240141688(v15, 3);
  v17 = v16;
  swift_release();
  v102 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter) = v17;
  v18 = a2[16];
  v104 = a2;
  *(_QWORD *)(swift_allocObject()
            + OBJC_IVAR____TtC23IntelligentTrackingCore28DKConstantAccelerationFilter_caConfiguration) = v18;
  v19 = swift_retain_n();
  sub_240141688(v19, 3);
  v21 = v20;
  swift_release();
  v101 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter) = v21;
  v22 = a2[11];
  v23 = sub_240154310();
  v98 = *(_QWORD *)(v23 - 8);
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v98 + 56);
  v25 = (uint64_t)v9;
  v24(v9, 1, 1, v23);
  type metadata accessor for DKSmoothingFilter();
  v26 = swift_allocObject();
  *(_BYTE *)(v26 + 33) = 0;
  *(_QWORD *)(v26 + 40) = 0;
  *(_QWORD *)(v26 + 48) = 0;
  *(_QWORD *)(v26 + 56) = 0x3FF0000000000000;
  v27 = v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v24((char *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v23);
  v28 = v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v28 = 0;
  *(_BYTE *)(v28 + 8) = 1;
  v29 = v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  *(_BYTE *)(v26 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v26 + 16) = v22;
  *(_QWORD *)(v26 + 24) = v22;
  *(_BYTE *)(v26 + 32) = 0;
  sub_24008FCD4((uint64_t)v9, v27);
  *(_QWORD *)v28 = 0;
  *(_BYTE *)(v28 + 8) = 1;
  *(_QWORD *)v29 = 0;
  *(_BYTE *)(v29 + 8) = 1;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter) = v26;
  v30 = v104;
  v31 = v104[11];
  v24((char *)v25, 1, 1, v23);
  v32 = swift_allocObject();
  *(_BYTE *)(v32 + 33) = 0;
  *(_QWORD *)(v32 + 40) = 0;
  *(_QWORD *)(v32 + 48) = 0;
  *(_QWORD *)(v32 + 56) = 0x3FF0000000000000;
  v33 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v24((char *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v23);
  v34 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v34 = 0;
  *(_BYTE *)(v34 + 8) = 1;
  v35 = v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v35 = 0;
  *(_BYTE *)(v35 + 8) = 1;
  *(_BYTE *)(v32 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v32 + 16) = v31;
  *(_QWORD *)(v32 + 24) = v31;
  *(_BYTE *)(v32 + 32) = 0;
  sub_24008FCD4(v25, v33);
  *(_QWORD *)v34 = 0;
  *(_BYTE *)(v34 + 8) = 1;
  *(_QWORD *)v35 = 0;
  *(_BYTE *)(v35 + 8) = 1;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter) = v32;
  v36 = v30[22];
  v37 = v25;
  v24((char *)v25, 1, 1, v23);
  v38 = swift_allocObject();
  *(_BYTE *)(v38 + 33) = 0;
  *(_QWORD *)(v38 + 40) = 0;
  *(_QWORD *)(v38 + 48) = 0;
  *(_QWORD *)(v38 + 56) = 0x3FF0000000000000;
  v39 = v38 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v24((char *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v23);
  v40 = v38 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v40 = 0;
  *(_BYTE *)(v40 + 8) = 1;
  v41 = v38 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v41 = 0;
  *(_BYTE *)(v41 + 8) = 1;
  *(_BYTE *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v38 + 16) = v36;
  *(_QWORD *)(v38 + 24) = v36;
  *(_BYTE *)(v38 + 32) = 1;
  sub_24008FCD4(v25, v39);
  *(_QWORD *)v40 = 0;
  *(_BYTE *)(v40 + 8) = 1;
  *(_QWORD *)v41 = 0;
  *(_BYTE *)(v41 + 8) = 1;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter) = v38;
  v42 = v104;
  v43 = v104[22];
  v24((char *)v37, 1, 1, v23);
  v44 = swift_allocObject();
  *(_BYTE *)(v44 + 33) = 0;
  *(_QWORD *)(v44 + 40) = 0;
  *(_QWORD *)(v44 + 48) = 0;
  *(_QWORD *)(v44 + 56) = 0x3FF0000000000000;
  v45 = v44 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v24((char *)(v44 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v23);
  v46 = v44 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v46 = 0;
  *(_BYTE *)(v46 + 8) = 1;
  v47 = v44 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v47 = 0;
  *(_BYTE *)(v47 + 8) = 1;
  *(_BYTE *)(v44 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v44 + 16) = v43;
  *(_QWORD *)(v44 + 24) = v43;
  *(_BYTE *)(v44 + 32) = 1;
  sub_24008FCD4(v37, v45);
  *(_QWORD *)v46 = 0;
  *(_BYTE *)(v46 + 8) = 1;
  *(_QWORD *)v47 = 0;
  *(_BYTE *)(v47 + 8) = 1;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter) = v44;
  v48 = v42[22];
  v49 = v23;
  v24((char *)v37, 1, 1, v23);
  v50 = swift_allocObject();
  *(_BYTE *)(v50 + 33) = 0;
  *(_QWORD *)(v50 + 40) = 0;
  *(_QWORD *)(v50 + 48) = 0;
  *(_QWORD *)(v50 + 56) = 0x3FF0000000000000;
  v51 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v24((char *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v23);
  v52 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v52 = 0;
  *(_BYTE *)(v52 + 8) = 1;
  v53 = v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v53 = 0;
  *(_BYTE *)(v53 + 8) = 1;
  *(_BYTE *)(v50 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v50 + 16) = v48;
  *(_QWORD *)(v50 + 24) = v48;
  *(_BYTE *)(v50 + 32) = 1;
  sub_24008FCD4(v37, v51);
  *(_QWORD *)v52 = 0;
  *(_BYTE *)(v52 + 8) = 1;
  *(_QWORD *)v53 = 0;
  *(_BYTE *)(v53 + 8) = 1;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter) = v50;
  v54 = v104;
  v55 = v104[24];
  v24((char *)v37, 1, 1, v49);
  v56 = swift_allocObject();
  *(_BYTE *)(v56 + 33) = 0;
  *(_QWORD *)(v56 + 40) = 0;
  *(_QWORD *)(v56 + 48) = 0;
  *(_QWORD *)(v56 + 56) = 0x3FF0000000000000;
  v57 = v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v24((char *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v49);
  v58 = v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v58 = 0;
  *(_BYTE *)(v58 + 8) = 1;
  v59 = v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v59 = 0;
  *(_BYTE *)(v59 + 8) = 1;
  *(_BYTE *)(v56 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v56 + 16) = v55;
  *(_QWORD *)(v56 + 24) = v55;
  *(_BYTE *)(v56 + 32) = 0;
  sub_24008FCD4(v37, v57);
  *(_QWORD *)v58 = 0;
  *(_BYTE *)(v58 + 8) = 1;
  *(_QWORD *)v59 = 0;
  *(_BYTE *)(v59 + 8) = 1;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter) = v56;
  v60 = v54[24];
  v24((char *)v37, 1, 1, v49);
  v61 = swift_allocObject();
  *(_BYTE *)(v61 + 33) = 0;
  *(_QWORD *)(v61 + 40) = 0;
  *(_QWORD *)(v61 + 48) = 0;
  *(_QWORD *)(v61 + 56) = 0x3FF0000000000000;
  v62 = v61 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v24((char *)(v61 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v49);
  v63 = v61 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v63 = 0;
  *(_BYTE *)(v63 + 8) = 1;
  v64 = v61 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v64 = 0;
  *(_BYTE *)(v64 + 8) = 1;
  *(_BYTE *)(v61 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v61 + 16) = v60;
  *(_QWORD *)(v61 + 24) = v60;
  *(_BYTE *)(v61 + 32) = 0;
  sub_24008FCD4(v37, v62);
  *(_QWORD *)v63 = 0;
  *(_BYTE *)(v63 + 8) = 1;
  *(_QWORD *)v64 = 0;
  *(_BYTE *)(v64 + 8) = 1;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter) = v61;
  v65 = v54[24];
  v24((char *)v37, 1, 1, v49);
  v66 = swift_allocObject();
  *(_BYTE *)(v66 + 33) = 0;
  *(_QWORD *)(v66 + 40) = 0;
  *(_QWORD *)(v66 + 48) = 0;
  *(_QWORD *)(v66 + 56) = 0x3FF0000000000000;
  v67 = v66 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v24((char *)(v66 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v49);
  v68 = v66 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v68 = 0;
  *(_BYTE *)(v68 + 8) = 1;
  v69 = v66 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v69 = 0;
  *(_BYTE *)(v69 + 8) = 1;
  *(_BYTE *)(v66 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v66 + 16) = v65;
  *(_QWORD *)(v66 + 24) = v65;
  *(_BYTE *)(v66 + 32) = 0;
  sub_24008FCD4(v37, v67);
  *(_QWORD *)v68 = 0;
  *(_BYTE *)(v68 + 8) = 1;
  *(_QWORD *)v69 = 0;
  *(_BYTE *)(v69 + 8) = 1;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter) = v66;
  v70 = v104[24];
  v24((char *)v37, 1, 1, v49);
  v71 = swift_allocObject();
  *(_BYTE *)(v71 + 33) = 0;
  *(_QWORD *)(v71 + 40) = 0;
  *(_QWORD *)(v71 + 48) = 0;
  *(_QWORD *)(v71 + 56) = 0x3FF0000000000000;
  v72 = v71 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated;
  v24((char *)(v71 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lastUpdated), 1, 1, v49);
  v73 = v71 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_lowThreshold;
  *(_QWORD *)v73 = 0;
  *(_BYTE *)(v73 + 8) = 1;
  v74 = v71 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_highThreshold;
  *(_QWORD *)v74 = 0;
  *(_BYTE *)(v74 + 8) = 1;
  *(_BYTE *)(v71 + OBJC_IVAR____TtC23IntelligentTrackingCore17DKSmoothingFilter_BOOLeanValue) = 0;
  *(_QWORD *)(v71 + 16) = v70;
  *(_QWORD *)(v71 + 24) = v70;
  *(_BYTE *)(v71 + 32) = 0;
  sub_24008FCD4(v37, v72);
  *(_QWORD *)v73 = 0;
  *(_BYTE *)(v73 + 8) = 1;
  *(_QWORD *)v74 = 0;
  *(_QWORD *)(v4 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter) = v71;
  v75 = *(_QWORD *)(v4 + v103);
  *(_BYTE *)(v74 + 8) = 1;
  v76 = *(_QWORD **)(v75 + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  v77 = v76[2];
  if (v77 < 1)
    goto LABEL_38;
  v78 = v76[3];
  if (v78 <= 0)
    goto LABEL_38;
  v79 = (_QWORD *)v76[4];
  *v79 = 0x3FB999999999999ALL;
  if ((unint64_t)v77 < 2 || v78 == 1)
    goto LABEL_38;
  if (__OFADD__(v77, 1))
  {
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  v79[v77 + 1] = 0x3F847AE147AE147BLL;
  if ((unint64_t)v77 < 3 || (unint64_t)v78 <= 2)
    goto LABEL_38;
  if (v77 + 0x4000000000000000 < 0)
    goto LABEL_30;
  v80 = 2 * v77;
  v81 = __OFADD__(v80, 2);
  v82 = v80 + 2;
  if (v81)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v79[v82] = 0x3F847AE147AE147BLL;
  v83 = *(_QWORD **)(*(_QWORD *)(v4 + v102) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  v84 = v83[2];
  if (v84 < 1)
    goto LABEL_38;
  v85 = v83[3];
  if (v85 <= 0)
    goto LABEL_38;
  v86 = (_QWORD *)v83[4];
  *v86 = 0x3FB999999999999ALL;
  if ((unint64_t)v84 < 2 || v85 == 1)
    goto LABEL_38;
  if (__OFADD__(v84, 1))
    goto LABEL_32;
  v86[v84 + 1] = 0x3F847AE147AE147BLL;
  if ((unint64_t)v84 < 3 || (unint64_t)v85 <= 2)
    goto LABEL_38;
  if (v84 + 0x4000000000000000 < 0)
    goto LABEL_33;
  v87 = 2 * v84;
  v81 = __OFADD__(v87, 2);
  v88 = v87 + 2;
  if (v81)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  v86[v88] = 0x3F847AE147AE147BLL;
  v89 = *(_QWORD **)(*(_QWORD *)(v4 + v101) + OBJC_IVAR____TtC23IntelligentTrackingCore14DKKalmanFilter_Q);
  v90 = v89[2];
  if (v90 < 1)
    goto LABEL_38;
  v91 = v89[3];
  if (v91 <= 0)
    goto LABEL_38;
  v92 = (_QWORD *)v89[4];
  *v92 = 0x3FB999999999999ALL;
  if ((unint64_t)v90 < 2 || v91 == 1)
    goto LABEL_38;
  if (__OFADD__(v90, 1))
    goto LABEL_35;
  v92[v90 + 1] = 0x3F847AE147AE147BLL;
  if ((unint64_t)v90 < 3 || (unint64_t)v91 <= 2)
    goto LABEL_38;
  if (v90 + 0x4000000000000000 >= 0)
  {
    v93 = 2 * v90;
    v81 = __OFADD__(v93, 2);
    v94 = v93 + 2;
    if (!v81)
    {
      v92[v94] = 0x3F847AE147AE147BLL;
      v95 = v100;
      sub_2400D6EFC(v100);
      sub_2400800C8(v99, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
      (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v95, v49);
      return v4;
    }
    goto LABEL_37;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_240154D00();
  __break(1u);
  return result;
}

unint64_t sub_2400D9144()
{
  unint64_t result;
  uint64_t v1;

  result = qword_256FBA988;
  if (!qword_256FBA988)
  {
    v1 = sub_240154310();
    result = MEMORY[0x24267E0BC](MEMORY[0x24BDCE958], v1);
    atomic_store(result, (unint64_t *)&qword_256FBA988);
  }
  return result;
}

uint64_t type metadata accessor for DKPersonMotionFilter.State(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBAEF8);
}

unint64_t sub_2400D91A4()
{
  unint64_t result;

  result = qword_256FBA990;
  if (!qword_256FBA990)
  {
    result = MEMORY[0x24267E0BC](&protocol conformance descriptor for DKPersonMotionFilter.SearchDirection, &type metadata for DKPersonMotionFilter.SearchDirection);
    atomic_store(result, (unint64_t *)&qword_256FBA990);
  }
  return result;
}

uint64_t sub_2400D91E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time, a2);
}

uint64_t sub_2400D91F4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_time);
}

double sub_2400D9210@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = keypath_get_25Tm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect, a2).n128_u64[0];
  return result;
}

double sub_2400D921C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_26Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRect).n128_u64[0];
  return result;
}

double sub_2400D9228@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = keypath_get_25Tm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect, a2).n128_u64[0];
  return result;
}

double sub_2400D9234(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_26Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_bodyRect).n128_u64[0];
  return result;
}

_QWORD *sub_2400D9240@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400D9264(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceYaw);
}

_QWORD *sub_2400D9270@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400D9294(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_facePitch);
}

_QWORD *sub_2400D92A0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400D92C4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_faceRoll);
}

_QWORD *sub_2400D92D0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400D92F4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter11Measurement_distance);
}

uint64_t sub_2400D9300@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated, a2);
}

uint64_t sub_2400D930C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastUpdated);
}

uint64_t sub_2400D9328@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated, a2);
}

uint64_t sub_2400D9334(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastFaceUpdated);
}

uint64_t sub_2400D9350@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated, a2);
}

uint64_t sub_2400D935C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_lastBodyUpdated);
}

_QWORD *sub_2400D9378@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result
                  + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate);
  return result;
}

_QWORD *sub_2400D9390(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_framesSinceLastUpdate) = *result;
  return result;
}

uint64_t sub_2400D93A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240080084(*a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion, a2, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t sub_2400D93D8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400D4FA0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_motion);
}

__n128 sub_2400D93FC@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400D9418(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRect).n128_u64[0];
  return result;
}

__n128 sub_2400D9424@<Q0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v4;

  v2 = *a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect;
  result = *(__n128 *)v2;
  v4 = *(_OWORD *)(v2 + 16);
  *a2 = *(_OWORD *)v2;
  a2[1] = v4;
  return result;
}

double sub_2400D9440(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_4Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_bodyRect).n128_u64[0];
  return result;
}

_QWORD *sub_2400D944C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400D9470(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceYaw);
}

_QWORD *sub_2400D947C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400D94A0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_facePitch);
}

_QWORD *sub_2400D94AC@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll;
  v3 = *(_QWORD *)v2;
  LOBYTE(v2) = *(_BYTE *)(v2 + 8);
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v2;
  return result;
}

uint64_t sub_2400D94D0(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_44Tm(a1, a2, a3, a4, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_faceRoll);
}

uint64_t sub_2400D94DC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240080084(*a1 + OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera, a2, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3);
}

uint64_t sub_2400D950C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400D4FA0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for DKMotion3, &OBJC_IVAR____TtCC23IntelligentTrackingCore20DKPersonMotionFilter5State_camera);
}

uint64_t sub_2400D9530@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_240080084(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera, a2, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera);
}

uint64_t sub_2400D9560(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400D4FA0(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for DKCamera, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_camera);
}

uint64_t sub_2400D9584@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter);
  return swift_retain();
}

uint64_t sub_2400D959C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_azimuthFilter);
}

uint64_t sub_2400D95A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter);
  return swift_retain();
}

uint64_t sub_2400D95C0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_elevationFilter);
}

uint64_t sub_2400D95CC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter);
  return swift_retain();
}

uint64_t sub_2400D95E4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_distanceFilter);
}

uint64_t sub_2400D95F0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter);
  return swift_retain();
}

uint64_t sub_2400D9608(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceWidthFilter);
}

uint64_t sub_2400D9614@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter);
  return swift_retain();
}

uint64_t sub_2400D962C(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceHeightFilter);
}

uint64_t sub_2400D9638@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter);
  return swift_retain();
}

uint64_t sub_2400D9650(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceYawFilter);
}

uint64_t sub_2400D965C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter);
  return swift_retain();
}

uint64_t sub_2400D9674(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_facePitchFilter);
}

uint64_t sub_2400D9680@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter);
  return swift_retain();
}

uint64_t sub_2400D9698(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_faceRollFilter);
}

uint64_t sub_2400D96A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter);
  return swift_retain();
}

uint64_t sub_2400D96BC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleXFilter);
}

uint64_t sub_2400D96C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter);
  return swift_retain();
}

uint64_t sub_2400D96E0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceScaleYFilter);
}

uint64_t sub_2400D96EC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter);
  return swift_retain();
}

uint64_t sub_2400D9704(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetXFilter);
}

uint64_t sub_2400D9710@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter);
  return swift_retain();
}

uint64_t sub_2400D9728(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stubFaceOffsetYFilter);
}

uint64_t keypath_set_38Tm(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  *(_QWORD *)(*a2 + *a5) = *a1;
  swift_retain();
  return swift_release();
}

_QWORD *sub_2400D9768@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge);
  return result;
}

_BYTE *sub_2400D9780(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToHorizontalEdge) = *result;
  return result;
}

_QWORD *sub_2400D9798@<X0>(_QWORD *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge);
  return result;
}

_BYTE *sub_2400D97B0(_BYTE *result, _QWORD *a2)
{
  *(_BYTE *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_stickToVerticalEdge) = *result;
  return result;
}

uint64_t sub_2400D97C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*a1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState);
  return swift_retain();
}

uint64_t sub_2400D97E0(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastState) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_2400D9818@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated, a2);
}

uint64_t sub_2400D9824(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdated);
}

uint64_t sub_2400D9840@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated, a2);
}

uint64_t sub_2400D984C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastFaceUpdated);
}

uint64_t sub_2400D9868@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated, a2);
}

uint64_t sub_2400D9874(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_24009BF8C(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastBodyUpdated);
}

_QWORD *sub_2400D9890@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(*result + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate);
  return result;
}

_QWORD *sub_2400D98A8(_QWORD *result, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_framesSinceLastUpdate) = *result;
  return result;
}

double sub_2400D98C0@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  double result;

  *(_QWORD *)&result = keypath_get_25Tm(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect, a2).n128_u64[0];
  return result;
}

double sub_2400D98CC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  double result;

  *(_QWORD *)&result = keypath_set_26Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKPersonMotionFilter_lastUpdateRect).n128_u64[0];
  return result;
}

uint64_t sub_2400D98D8()
{
  return type metadata accessor for DKPersonMotionFilter(0);
}

uint64_t type metadata accessor for DKPersonMotionFilter(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBA9C0);
}

uint64_t sub_2400D98F4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for DKCamera();
  if (v1 <= 0x3F)
  {
    result = sub_240154310();
    if (v2 <= 0x3F)
      return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for DKPersonMotionFilter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKPersonMotionFilter.camera.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.camera.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.azimuthFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.azimuthFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.azimuthFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.elevationFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.elevationFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.elevationFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.distanceFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.distanceFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.distanceFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceWidthFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceWidthFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceWidthFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceHeightFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceHeightFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceHeightFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceYawFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceYawFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceYawFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.facePitchFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.facePitchFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 432))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.facePitchFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 440))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceRollFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceRollFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 456))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.faceRollFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 464))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleXFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 472))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleXFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 480))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleXFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleYFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleYFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceScaleYFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetXFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetXFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetXFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetYFilter.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetYFilter.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stubFaceOffsetYFilter.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToHorizontalEdge.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToHorizontalEdge.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToHorizontalEdge.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToVerticalEdge.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToVerticalEdge.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.stickToVerticalEdge.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastState.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastState.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastState.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastFaceUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastFaceUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastFaceUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastBodyUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastBodyUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastBodyUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.framesSinceLastUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.framesSinceLastUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.framesSinceLastUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdateRect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdateRect.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  char v7;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 744);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKPersonMotionFilter.lastUpdateRect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.__allocating_init(currentTime:configuration:camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 760))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.isValid(currentTime:measurement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 768))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.update(camera:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.update(measurement:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.isSubjectLeavingFromHorizontalEdge(rect:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.isSubjectLeavingFromVerticalEdge(rect:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.getSearchMargins()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.predict(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.updateState(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.getState(time:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.updateStubFace(faceRect:bodyRect:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t (*v5)(_OWORD *, _OWORD *);
  __int128 v6;
  __int128 v7;
  _OWORD v9[2];
  char v10;
  _OWORD v11[2];
  char v12;

  v3 = *(_BYTE *)(a1 + 32);
  v4 = *(_BYTE *)(a2 + 32);
  v5 = *(uint64_t (**)(_OWORD *, _OWORD *))(*(_QWORD *)v2 + 840);
  v6 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v6;
  v12 = v3;
  v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  v10 = v4;
  return v5(v11, v9);
}

uint64_t dispatch thunk of DKPersonMotionFilter.getStubFaceRect(bodyRect:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.getStubBodyRect(faceRect:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t storeEnumTagSinglePayload for DKPersonMotionFilter.SearchDirection(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2400D9E14 + 4 * byte_24015BF45[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2400D9E48 + 4 * byte_24015BF40[v4]))();
}

uint64_t sub_2400D9E48(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D9E50(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2400D9E58);
  return result;
}

uint64_t sub_2400D9E64(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2400D9E6CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2400D9E70(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2400D9E78(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DKPersonMotionFilter.SearchDirection()
{
  return &type metadata for DKPersonMotionFilter.SearchDirection;
}

uint64_t sub_2400D9E94()
{
  return type metadata accessor for DKPersonMotionFilter.Measurement(0);
}

uint64_t type metadata accessor for DKPersonMotionFilter.Measurement(uint64_t a1)
{
  return sub_240072AC4(a1, qword_256FBAD70);
}

uint64_t sub_2400D9EB0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DKPersonMotionFilter.Measurement()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.time.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.time.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.time.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRect.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  char v7;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 168);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.bodyRect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.bodyRect.setter(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*v3)(_OWORD *);
  __int128 v4;
  _OWORD v6[2];
  char v7;

  v2 = *(_BYTE *)(a1 + 32);
  v3 = *(uint64_t (**)(_OWORD *))(*(_QWORD *)v1 + 192);
  v4 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v4;
  v7 = v2;
  return v3(v6);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.bodyRect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceYaw.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceYaw.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 216))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceYaw.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.facePitch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.facePitch.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 240))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.facePitch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRoll.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRoll.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 264))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.faceRoll.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.distance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.Measurement.distance.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 288))(a1, a2 & 1);
}

uint64_t sub_2400DA10C()
{
  return type metadata accessor for DKPersonMotionFilter.State(0);
}

uint64_t sub_2400DA114()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_240154310();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for DKMotion3();
    if (v2 <= 0x3F)
    {
      result = swift_updateClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t method lookup function for DKPersonMotionFilter.State()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastFaceUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastFaceUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastFaceUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastBodyUpdated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastBodyUpdated.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.lastBodyUpdated.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.framesSinceLastUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.framesSinceLastUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.framesSinceLastUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.motion.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.motion.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.motion.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.bodyRect.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.bodyRect.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 320))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.bodyRect.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceYaw.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceYaw.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 344))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceYaw.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.facePitch.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.facePitch.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 368))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.facePitch.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRoll.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRoll.setter(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)v2 + 392))(a1, a2 & 1);
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.faceRoll.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.camera.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 408))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.camera.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 416))();
}

uint64_t dispatch thunk of DKPersonMotionFilter.State.camera.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 424))();
}

IntelligentTrackingCore::DKIdentityConfidence __swiftcall DKIdentityConfidence.init(id:confidence:)(Swift::Int id, Swift::Double confidence)
{
  uint64_t v2;
  IntelligentTrackingCore::DKIdentityConfidence result;

  *(_QWORD *)v2 = id;
  *(Swift::Double *)(v2 + 8) = confidence;
  result.confidence = confidence;
  result.id = id;
  return result;
}

uint64_t Array<A>.max()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v7 = a1;
  swift_bridgeObjectRetain();
  sub_2400E7104(&v7);
  v3 = *(_QWORD *)(v7 + 16);
  if (v3)
  {
    v4 = v7 + 16 * v3;
    v5 = *(_QWORD *)(v4 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a2 + 8) = v5;
    result = swift_release();
  }
  else
  {
    result = swift_release();
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0;
  }
  *(_BYTE *)(a2 + 16) = v3 == 0;
  return result;
}

uint64_t DKObjectTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14)
{
  return sub_2400DCDC0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, uint64_t, uint64_t))DKObjectTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:));
}

uint64_t DKIdentityConfidence.id.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t DKIdentityConfidence.id.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*DKIdentityConfidence.id.modify())()
{
  return nullsub_1;
}

double DKIdentityConfidence.confidence.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void DKIdentityConfidence.confidence.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*DKIdentityConfidence.confidence.modify())()
{
  return nullsub_1;
}

uint64_t DKIdentityConfidence.hash(into:)()
{
  sub_240154FF4();
  return sub_24015500C();
}

BOOL static DKIdentityConfidence.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

uint64_t sub_2400DA534()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E656469666E6F63;
  else
    return 25705;
}

uint64_t sub_2400DA568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2400EB048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2400DA58C()
{
  sub_2400E716C();
  return sub_240155048();
}

uint64_t sub_2400DA5B4()
{
  sub_2400E716C();
  return sub_240155054();
}

uint64_t DKIdentityConfidence.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB0D8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E716C();
  sub_240155030();
  v8[15] = 0;
  sub_240154E74();
  if (!v1)
  {
    v8[14] = 1;
    sub_240154E68();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DKIdentityConfidence.hashValue.getter()
{
  sub_240154FE8();
  sub_240154FF4();
  sub_24015500C();
  return sub_240155018();
}

uint64_t DKIdentityConfidence.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB0E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E716C();
  sub_240155024();
  if (!v2)
  {
    v13[15] = 0;
    v9 = sub_240154DF0();
    v13[14] = 1;
    sub_240154DE4();
    v11 = v10;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_2400DA8B8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return DKIdentityConfidence.init(from:)(a1, a2);
}

uint64_t sub_2400DA8CC(_QWORD *a1)
{
  return DKIdentityConfidence.encode(to:)(a1);
}

uint64_t sub_2400DA8E4()
{
  sub_240154FF4();
  return sub_24015500C();
}

uint64_t sub_2400DA920()
{
  sub_240154FE8();
  sub_240154FF4();
  sub_24015500C();
  return sub_240155018();
}

BOOL sub_2400DA978(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)a1 == *(_QWORD *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

uint64_t sub_2400DA9A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DA9B8(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DA9CC())()
{
  return nullsub_1;
}

uint64_t sub_2400DA9E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400DA9F8(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400DAA0C())()
{
  return nullsub_1;
}

double sub_2400DAA24()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
}

_QWORD *sub_2400DAA30(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2400DAA3C())()
{
  return nullsub_1;
}

double sub_2400DAA54@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity + 8);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400DAA74(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400DAA94())()
{
  return nullsub_1;
}

uint64_t sub_2400DAAAC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId);
}

uint64_t sub_2400DAABC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400DAACC())()
{
  return nullsub_1;
}

uint64_t sub_2400DAAE4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId);
}

uint64_t sub_2400DAAF4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400DAB04())()
{
  return nullsub_1;
}

uint64_t sub_2400DAB1C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId);
}

uint64_t sub_2400DAB2C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400DAB3C())()
{
  return nullsub_1;
}

uint64_t sub_2400DAB54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2400E71B0(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion, a1);
}

uint64_t sub_2400DAB68(uint64_t a1)
{
  uint64_t v1;

  return sub_2400E71F8(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
}

uint64_t (*sub_2400DAB78())()
{
  return nullsub_1;
}

uint64_t sub_2400DAB90@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DABA4(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DABB8())()
{
  return nullsub_1;
}

uint64_t sub_2400DABD0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400DABE0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400DABF0())()
{
  return nullsub_1;
}

uint64_t sub_2400DAC08()
{
  return swift_retain();
}

uint64_t sub_2400DAC18(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation) = a1;
  return swift_release();
}

uint64_t (*sub_2400DAC30())()
{
  return nullsub_1;
}

uint64_t sub_2400DAC48()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw);
}

uint64_t sub_2400DAC60(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400DAC7C())()
{
  return nullsub_1;
}

uint64_t sub_2400DAC94()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch);
}

uint64_t sub_2400DACAC(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400DACC8())()
{
  return nullsub_1;
}

uint64_t sub_2400DACE0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll);
}

uint64_t sub_2400DACF8(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll;
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_2400DAD14())()
{
  return nullsub_1;
}

uint64_t sub_2400DAD2C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400DAD58 + 4 * byte_24015C0C0[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400DAD58()
{
  return 1684632949;
}

uint64_t sub_2400DAD64()
{
  return 1952671090;
}

uint64_t sub_2400DAD70()
{
  return 0x797469746E656469;
}

uint64_t sub_2400DAD88()
{
  return 0x644974736E61;
}

uint64_t sub_2400DAD9C()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400DADB8()
{
  return 0x644970756F7267;
}

uint64_t sub_2400DADD0()
{
  return 0x6E6F69746F6DLL;
}

uint64_t sub_2400DADE4()
{
  return 0x616470557473616CLL;
}

unint64_t sub_2400DAE04()
{
  return 0xD000000000000015;
}

uint64_t sub_2400DAE20()
{
  return 0x6573624F7473616CLL;
}

uint64_t sub_2400DAE44()
{
  return 0x77615965636166;
}

uint64_t sub_2400DAE5C()
{
  return 0x6374695065636166;
}

uint64_t sub_2400DAE7C()
{
  return 0x6C6C6F5265636166;
}

uint64_t sub_2400DAE94(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400DAEC0 + 4 * byte_24015C0CE[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400DAEC0()
{
  return 1684632949;
}

uint64_t sub_2400DAECC()
{
  return 1952671090;
}

uint64_t sub_2400DAED8()
{
  return 0x797469746E656469;
}

uint64_t sub_2400DAEF0()
{
  return 0x644974736E61;
}

uint64_t sub_2400DAF04()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400DAF20()
{
  return 0x644970756F7267;
}

uint64_t sub_2400DAF38()
{
  return 0x6E6F69746F6DLL;
}

uint64_t sub_2400DAF4C()
{
  return 0x616470557473616CLL;
}

unint64_t sub_2400DAF6C()
{
  return 0xD000000000000015;
}

uint64_t sub_2400DAF88()
{
  return 0x6573624F7473616CLL;
}

uint64_t sub_2400DAFAC()
{
  return 0x77615965636166;
}

uint64_t sub_2400DAFC4()
{
  return 0x6374695065636166;
}

uint64_t sub_2400DAFE4()
{
  return 0x6C6C6F5265636166;
}

uint64_t sub_2400DAFFC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400E003C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_2400DAD2C);
}

uint64_t sub_2400DB008(uint64_t a1, uint64_t a2)
{
  return sub_2400E00D4(a1, a2, (void (*)(uint64_t))sub_2400DAD2C);
}

uint64_t sub_2400DB014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400E0144(a1, a2, a3, (void (*)(_QWORD))sub_2400DAD2C);
}

uint64_t sub_2400DB020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400E0190(a1, a2, a3, (void (*)(uint64_t))sub_2400DAD2C);
}

uint64_t sub_2400DB02C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB12C();
  *a1 = result;
  return result;
}

uint64_t sub_2400DB058@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2400DAD2C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2400DB080()
{
  unsigned __int8 *v0;

  return sub_2400DAE94(*v0);
}

uint64_t sub_2400DB088@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB12C();
  *a1 = result;
  return result;
}

void sub_2400DB0AC(_BYTE *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_2400DB0B8()
{
  sub_2400E7280();
  return sub_240155048();
}

uint64_t sub_2400DB0E0()
{
  sub_2400E7280();
  return sub_240155054();
}

uint64_t DKFaceTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20)
{
  uint64_t v27;

  v27 = swift_allocObject();
  DKFaceTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16 & 1, a17, a18 & 1, a19,
    a20 & 1);
  return v27;
}

uint64_t DKFaceTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:faceYaw:facePitch:faceRoll:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, char a18, uint64_t a19, char a20)
{
  uint64_t v20;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  double *v38;
  _QWORD *v39;
  uint64_t v42;

  v42 = *a3;
  v26 = a3[1];
  v27 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion;
  v28 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
  v29 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation;
  *(_QWORD *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation) = 0;
  v30 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw;
  *(_QWORD *)v30 = 0;
  *(_BYTE *)(v30 + 8) = 1;
  v31 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch;
  *(_QWORD *)v31 = 0;
  *(_BYTE *)(v31 + 8) = 1;
  v32 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll;
  *(_QWORD *)v32 = 0;
  *(_BYTE *)(v32 + 8) = 1;
  v33 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time;
  v34 = sub_240154310();
  v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 32);
  v35(v33, a1, v34);
  v36 = v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid;
  v37 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v36, a2, v37);
  v38 = (double *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
  *v38 = a9;
  v38[1] = a10;
  v38[2] = a11;
  v38[3] = a12;
  v39 = (_QWORD *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
  *v39 = v42;
  v39[1] = v26;
  *(_QWORD *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = a4;
  *(_QWORD *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = a5;
  *(_QWORD *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = a6;
  sub_2400E71F8(a7, v27);
  v35(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, a8, v34);
  *(_QWORD *)(v20 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = a13;
  *(_QWORD *)(v20 + v29) = a14;
  swift_release();
  *(_QWORD *)v30 = a15;
  *(_BYTE *)(v30 + 8) = a16 & 1;
  *(_QWORD *)v31 = a17;
  *(_BYTE *)(v31 + 8) = a18 & 1;
  *(_QWORD *)v32 = a19;
  *(_BYTE *)(v32 + 8) = a20 & 1;
  return v20;
}

uint64_t DKFaceTrackerState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_2400E7240(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, v2);
  swift_release();
  return v0;
}

uint64_t DKFaceTrackerState.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_2400E7240(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2400DB5F8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _QWORD v30[2];
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  char v41;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_24015434C();
  v35 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v34 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_240154310();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v30 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB0F0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7280();
  v15 = v11;
  sub_240155030();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v10, v38 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, v5);
  LOBYTE(v39) = 0;
  v17 = sub_2400B3490(&qword_256FB66E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v37 = v14;
  v18 = v36;
  sub_240154E80();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v37, v15);
  }
  else
  {
    v30[1] = v17;
    v36 = v16;
    v20 = (uint64_t)v32;
    v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    v21(v10, v5);
    v22 = v38;
    v23 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, v38 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, v33);
    LOBYTE(v39) = 1;
    sub_2400B3490(&qword_256FB8CE8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    v30[0] = v5;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v23);
    v24 = *(_OWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect + 16);
    v39 = *(_OWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
    v40 = v24;
    v41 = 2;
    type metadata accessor for CGRect(0);
    sub_2400B3490(&qword_256FB67A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    v25 = (void (*)(char *, uint64_t, uint64_t))v15;
    sub_240154E80();
    v26 = *(_QWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity + 8);
    *(_QWORD *)&v39 = *(_QWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
    *((_QWORD *)&v39 + 1) = v26;
    v41 = 3;
    sub_2400C2FAC();
    sub_240154E80();
    LOBYTE(v39) = 4;
    sub_240154E74();
    LOBYTE(v39) = 5;
    sub_240154E74();
    LOBYTE(v39) = 6;
    sub_240154E74();
    sub_2400E71B0(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion, v20);
    LOBYTE(v39) = 7;
    v35 = type metadata accessor for DKMotion3();
    sub_2400B3490(&qword_256FB50A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    sub_240154E50();
    sub_2400E7240(v20);
    v27 = v31;
    v28 = v30[0];
    v36(v31, v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, v30[0]);
    LOBYTE(v39) = 8;
    v36 = v25;
    sub_240154E80();
    v21(v27, v28);
    LOBYTE(v39) = 9;
    sub_240154E74();
    *(_QWORD *)&v39 = *(_QWORD *)(v22 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation);
    v41 = 10;
    type metadata accessor for DKFaceObservation(0);
    sub_2400B3490(&qword_256FB6700, 255, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
    sub_240154E50();
    LOBYTE(v39) = 11;
    sub_240154E38();
    LOBYTE(v39) = 12;
    sub_240154E38();
    v29 = v37;
    LOBYTE(v39) = 13;
    sub_240154E38();
    return (*(uint64_t (**)(char *, void (*)(char *, uint64_t, uint64_t)))(v12 + 8))(v29, v25);
  }
}

uint64_t DKFaceTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKFaceTrackerState.init(from:));
}

uint64_t DKFaceTrackerState.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  char v36;
  uint64_t v37;
  uint64_t *v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t *v45;
  uint64_t *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(uint64_t, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  char v65;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v3);
  v48 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24015434C();
  v49 = *(_QWORD *)(v5 - 8);
  v50 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v52 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_240154310();
  v51 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v56 = (void (*)(uint64_t, char *, uint64_t))((char *)&v43 - v9);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB100);
  v53 = *(_QWORD *)(v57 - 8);
  MEMORY[0x24BDAC7A8](v57);
  v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion;
  v13 = type metadata accessor for DKMotion3();
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v61 = v12;
  v14(v12, 1, 1, v13);
  v58 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation;
  v59 = a1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastObservation) = 0;
  v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceYaw;
  *(_QWORD *)v15 = 0;
  *(_BYTE *)(v15 + 8) = 1;
  v16 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_facePitch;
  *(_QWORD *)v16 = 0;
  *(_BYTE *)(v16 + 8) = 1;
  v62 = v1;
  v17 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_faceRoll;
  *(_QWORD *)v17 = 0;
  *(_BYTE *)(v17 + 8) = 1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7280();
  v55 = v11;
  v18 = v60;
  sub_240155024();
  if (v18)
  {
    v19 = v62;
    sub_2400E7240(v61);
    v26 = (uint64_t)v59;
    swift_release();
    type metadata accessor for DKFaceTrackerState(0);
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1(v26);
  }
  else
  {
    v20 = v52;
    v60 = v13;
    v46 = (uint64_t *)v15;
    v45 = (uint64_t *)v16;
    v44 = (uint64_t *)v17;
    LOBYTE(v63) = 0;
    v21 = sub_2400B3490(&qword_256FB67F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v22 = v54;
    sub_240154DFC();
    v43 = v21;
    v23 = v62;
    v24 = *(void (**)(uint64_t, char *, uint64_t))(v51 + 32);
    v24(v62 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, (char *)v56, v22);
    LOBYTE(v63) = 1;
    sub_2400B3490(&qword_256FB8D10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v25 = v50;
    sub_240154DFC();
    v56 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v49 + 32))(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, v20, v25);
    type metadata accessor for CGRect(0);
    v65 = 2;
    sub_2400B3490(&qword_256FB6880, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    v28 = (_OWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
    v29 = v64;
    *v28 = v63;
    v28[1] = v29;
    v65 = 3;
    sub_2400C2FF0();
    sub_240154DFC();
    v30 = *((_QWORD *)&v63 + 1);
    v31 = (_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity);
    *v31 = v63;
    v31[1] = v30;
    LOBYTE(v63) = 4;
    *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = sub_240154DF0();
    LOBYTE(v63) = 5;
    *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = sub_240154DF0();
    LOBYTE(v63) = 6;
    *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = sub_240154DF0();
    LOBYTE(v63) = 7;
    sub_2400B3490(&qword_256FB50D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    v32 = (uint64_t)v48;
    sub_240154DCC();
    sub_2400E71F8(v32, v61);
    LOBYTE(v63) = 8;
    v33 = v47;
    sub_240154DFC();
    v56(v62 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, v33, v54);
    LOBYTE(v63) = 9;
    *(_QWORD *)(v62 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = sub_240154DF0();
    type metadata accessor for DKFaceObservation(0);
    v65 = 10;
    sub_2400B3490(&qword_256FB6808, 255, type metadata accessor for DKFaceObservation, (uint64_t)&protocol conformance descriptor for DKFaceObservation);
    sub_240154DCC();
    *(_QWORD *)(v62 + v58) = v63;
    swift_release();
    LOBYTE(v63) = 11;
    v34 = sub_240154DB4();
    v35 = v46;
    *v46 = v34;
    *((_BYTE *)v35 + 8) = v36 & 1;
    LOBYTE(v63) = 12;
    v37 = sub_240154DB4();
    v38 = v45;
    *v45 = v37;
    *((_BYTE *)v38 + 8) = v39 & 1;
    LOBYTE(v63) = 13;
    v40 = sub_240154DB4();
    LOBYTE(v23) = v41;
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v57);
    v42 = v44;
    *v44 = v40;
    *((_BYTE *)v42 + 8) = v23 & 1;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
    return v62;
  }
  return v19;
}

uint64_t sub_2400DC528@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400DC53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400DC550())()
{
  return nullsub_1;
}

double sub_2400DC56C(uint64_t a1, uint64_t a2)
{
  return sub_2400C2270(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
}

void sub_2400DC578(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_2400C2294(a3, a4, a5, a6, a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_rect);
}

uint64_t (*sub_2400DC584())()
{
  return nullsub_1;
}

double sub_2400DC5A0@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  double result;

  v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400DC5C4(uint64_t a1)
{
  _QWORD *v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400DC5E8())()
{
  return nullsub_1;
}

uint64_t sub_2400DC604()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId);
}

uint64_t sub_2400DC618(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400DC62C())()
{
  return nullsub_1;
}

uint64_t sub_2400DC648()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId);
}

uint64_t sub_2400DC65C(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400DC670())()
{
  return nullsub_1;
}

uint64_t sub_2400DC68C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId);
}

uint64_t sub_2400DC6A0(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400DC6B4())()
{
  return nullsub_1;
}

uint64_t sub_2400DC6D0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2400E71B0(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion, a1);
}

uint64_t sub_2400DC6E8(uint64_t a1)
{
  _QWORD *v1;

  return sub_2400E71F8(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_motion);
}

uint64_t (*sub_2400DC6FC())()
{
  return nullsub_1;
}

uint64_t sub_2400DC718@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DC72C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DC740())()
{
  return nullsub_1;
}

uint64_t sub_2400DC75C()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400DC770(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400DC784())()
{
  return nullsub_1;
}

uint64_t sub_2400DC7A0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKFaceTrackerState, (uint64_t (*)(uint64_t))DKFaceTrackerState.init(from:), a2);
}

uint64_t sub_2400DC7C4(_QWORD *a1)
{
  return sub_2400DB5F8(a1);
}

uint64_t sub_2400DC7E4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DC7F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKFaceTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DC80C())()
{
  return nullsub_1;
}

uint64_t sub_2400DC828@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKFaceTrackerState(0);
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400DC868@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DC87C(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DC890())()
{
  return nullsub_1;
}

uint64_t sub_2400DC8A8@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400DC8BC(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400DC8D0())()
{
  return nullsub_1;
}

double sub_2400DC8E8()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
}

_QWORD *sub_2400DC8F4(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2400DC900())()
{
  return nullsub_1;
}

double sub_2400DC918@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity + 8);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400DC938(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400DC958())()
{
  return nullsub_1;
}

uint64_t sub_2400DC970()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId);
}

uint64_t sub_2400DC980(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400DC990())()
{
  return nullsub_1;
}

uint64_t sub_2400DC9A8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId);
}

uint64_t sub_2400DC9B8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400DC9C8())()
{
  return nullsub_1;
}

uint64_t sub_2400DC9E0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId);
}

uint64_t sub_2400DC9F0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400DCA00())()
{
  return nullsub_1;
}

uint64_t sub_2400DCA18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2400E71B0(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion, a1);
}

uint64_t sub_2400DCA2C(uint64_t a1)
{
  uint64_t v1;

  return sub_2400E71F8(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
}

uint64_t (*sub_2400DCA3C())()
{
  return nullsub_1;
}

uint64_t sub_2400DCA54@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DCA68(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DCA7C())()
{
  return nullsub_1;
}

uint64_t sub_2400DCA94()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400DCAA4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400DCAB4())()
{
  return nullsub_1;
}

uint64_t sub_2400DCACC()
{
  return swift_retain();
}

uint64_t sub_2400DCADC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation) = a1;
  return swift_release();
}

uint64_t (*sub_2400DCAF4())()
{
  return nullsub_1;
}

uint64_t sub_2400DCB10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_2400DE498(*a1);
  v5 = v4;
  if (v3 == sub_2400DE498(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2400DCB9C()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_240154FE8();
  sub_2400DE498(v1);
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400DCC00()
{
  unsigned __int8 *v0;

  sub_2400DE498(*v0);
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2400DCC44()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_240154FE8();
  sub_2400DE498(v1);
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400DCCA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB174();
  *a1 = result;
  return result;
}

uint64_t sub_2400DCCD4@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2400DE498(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2400DCCFC()
{
  unsigned __int8 *v0;

  return sub_2400DE5B0(*v0);
}

uint64_t sub_2400DCD14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB174();
  *a1 = result;
  return result;
}

uint64_t sub_2400DCD40()
{
  sub_2400E72D8();
  return sub_240155048();
}

uint64_t sub_2400DCD68()
{
  sub_2400E72D8();
  return sub_240155054();
}

uint64_t DKBodyTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14)
{
  return sub_2400DCDC0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, uint64_t, uint64_t))DKBodyTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:));
}

uint64_t sub_2400DCDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, void (*a15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double, double, double, uint64_t, uint64_t))
{
  uint64_t v25;

  v25 = swift_allocObject();
  a15(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
  return v25;
}

uint64_t DKBodyTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  double *v32;
  _QWORD *v33;

  v22 = *a3;
  v23 = a3[1];
  v24 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion;
  v25 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation) = 0;
  v27 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time;
  v28 = sub_240154310();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
  v29(v27, a1, v28);
  v30 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid;
  v31 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v30, a2, v31);
  v32 = (double *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
  *v32 = a9;
  v32[1] = a10;
  v32[2] = a11;
  v32[3] = a12;
  v33 = (_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
  *v33 = v22;
  v33[1] = v23;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = a4;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = a5;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = a6;
  sub_2400E71F8(a7, v24);
  v29(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, a8, v28);
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = a13;
  *(_QWORD *)(v14 + v26) = a14;
  swift_release();
  return v14;
}

uint64_t DKBodyTrackerState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_2400E7240(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, v2);
  swift_release();
  return v0;
}

uint64_t DKBodyTrackerState.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_2400E7240(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2400DD1BC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  char v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v2);
  v33 = (uint64_t)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24015434C();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v31 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB108);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E72D8();
  sub_240155030();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v11, v39 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, v6);
  LOBYTE(v40) = 0;
  v17 = sub_2400B3490(&qword_256FB66E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v38 = v12;
  v18 = v37;
  sub_240154E80();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v38);
  }
  else
  {
    v31[1] = v17;
    v37 = v16;
    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20(v11, v6);
    v21 = v39;
    v23 = v34;
    v22 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v39 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, v35);
    LOBYTE(v40) = 1;
    sub_2400B3490(&qword_256FB8CE8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    v31[0] = v20;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v36, v22);
    v24 = *(_OWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect + 16);
    v40 = *(_OWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
    v41 = v24;
    v42 = 2;
    type metadata accessor for CGRect(0);
    v25 = v38;
    sub_2400B3490(&qword_256FB67A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    v26 = v25;
    sub_240154E80();
    v27 = v13;
    v28 = *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity + 8);
    *(_QWORD *)&v40 = *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
    *((_QWORD *)&v40 + 1) = v28;
    v42 = 3;
    sub_2400C2FAC();
    sub_240154E80();
    LOBYTE(v40) = 4;
    sub_240154E74();
    LOBYTE(v40) = 5;
    sub_240154E74();
    LOBYTE(v40) = 6;
    sub_240154E74();
    v29 = v33;
    sub_2400E71B0(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion, v33);
    LOBYTE(v40) = 7;
    type metadata accessor for DKMotion3();
    sub_2400B3490(&qword_256FB50A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    sub_240154E50();
    sub_2400E7240(v29);
    v30 = v32;
    v37(v32, v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, v6);
    LOBYTE(v40) = 8;
    sub_240154E80();
    ((void (*)(char *, uint64_t))v31[0])(v30, v6);
    LOBYTE(v40) = 9;
    sub_240154E74();
    *(_QWORD *)&v40 = *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation);
    v42 = 10;
    type metadata accessor for DKBodyObservation(0);
    sub_2400B3490(&qword_256FB6718, 255, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
    sub_240154E50();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, v26);
  }
}

uint64_t DKBodyTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKBodyTrackerState.init(from:));
}

uint64_t DKBodyTrackerState.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  char v56;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24015434C();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_240154310();
  v7 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v45 = (char *)v37 - v11;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB118);
  v12 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion;
  v16 = type metadata accessor for DKMotion3();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v53 = v15;
  v17(v15, 1, 1, v16);
  v49 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation;
  v50 = a1;
  v52 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastObservation) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E72D8();
  v47 = v14;
  v18 = v51;
  sub_240155024();
  if (v18)
  {
    v19 = v52;
    sub_2400E7240(v53);
    v28 = (uint64_t)v50;
    swift_release();
    type metadata accessor for DKBodyTrackerState(0);
    swift_deallocPartialClassInstance();
    v29 = v28;
  }
  else
  {
    v20 = v44;
    v38 = v9;
    v39 = v16;
    v51 = v12;
    v40 = v7;
    LOBYTE(v54) = 0;
    v21 = sub_2400B3490(&qword_256FB67F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v22 = v45;
    v23 = v46;
    sub_240154DFC();
    v37[1] = v21;
    v24 = v52;
    v25 = (char *)(v52 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time);
    v26 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
    v26(v52 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, v22, v23);
    LOBYTE(v54) = 1;
    sub_2400B3490(&qword_256FB8D10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v27 = v43;
    sub_240154DFC();
    v37[0] = v26;
    v45 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, v20, v27);
    type metadata accessor for CGRect(0);
    v56 = 2;
    sub_2400B3490(&qword_256FB6880, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    v31 = (_OWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
    v32 = v55;
    *v31 = v54;
    v31[1] = v32;
    v56 = 3;
    sub_2400C2FF0();
    sub_240154DFC();
    v33 = *((_QWORD *)&v54 + 1);
    v34 = (_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity);
    *v34 = v54;
    v34[1] = v33;
    LOBYTE(v54) = 4;
    *(_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = sub_240154DF0();
    LOBYTE(v54) = 5;
    *(_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = sub_240154DF0();
    LOBYTE(v54) = 6;
    *(_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = sub_240154DF0();
    LOBYTE(v54) = 7;
    sub_2400B3490(&qword_256FB50D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    v35 = (uint64_t)v41;
    sub_240154DCC();
    sub_2400E71F8(v35, v53);
    LOBYTE(v54) = 8;
    v36 = v38;
    sub_240154DFC();
    ((void (*)(uint64_t, char *, uint64_t))v37[0])(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, v36, v23);
    LOBYTE(v54) = 9;
    *(_QWORD *)(v52 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = sub_240154DF0();
    type metadata accessor for DKBodyObservation(0);
    v56 = 10;
    sub_2400B3490(&qword_256FB6818, 255, type metadata accessor for DKBodyObservation, (uint64_t)&protocol conformance descriptor for DKBodyObservation);
    sub_240154DCC();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v48);
    v19 = v52;
    *(_QWORD *)(v52 + v49) = v54;
    swift_release();
    v29 = (uint64_t)v50;
  }
  __swift_destroy_boxed_opaque_existential_1(v29);
  return v19;
}

uint64_t sub_2400DDEB4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400DDEC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400DDEDC())()
{
  return nullsub_1;
}

double sub_2400DDEF8(uint64_t a1, uint64_t a2)
{
  return sub_2400C2270(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
}

void sub_2400DDF04(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_2400C2294(a3, a4, a5, a6, a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_rect);
}

uint64_t (*sub_2400DDF10())()
{
  return nullsub_1;
}

double sub_2400DDF2C@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  double result;

  v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400DDF50(uint64_t a1)
{
  _QWORD *v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400DDF74())()
{
  return nullsub_1;
}

uint64_t sub_2400DDF90()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId);
}

uint64_t sub_2400DDFA4(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400DDFB8())()
{
  return nullsub_1;
}

uint64_t sub_2400DDFD4()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId);
}

uint64_t sub_2400DDFE8(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400DDFFC())()
{
  return nullsub_1;
}

uint64_t sub_2400DE018()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId);
}

uint64_t sub_2400DE02C(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400DE040())()
{
  return nullsub_1;
}

uint64_t sub_2400DE05C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2400E71B0(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion, a1);
}

uint64_t sub_2400DE074(uint64_t a1)
{
  _QWORD *v1;

  return sub_2400E71F8(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_motion);
}

uint64_t (*sub_2400DE088())()
{
  return nullsub_1;
}

uint64_t sub_2400DE0A4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DE0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DE0CC())()
{
  return nullsub_1;
}

uint64_t sub_2400DE0E8()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400DE0FC(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400DE110())()
{
  return nullsub_1;
}

uint64_t sub_2400DE12C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKBodyTrackerState, (uint64_t (*)(uint64_t))DKBodyTrackerState.init(from:), a2);
}

uint64_t sub_2400DE150(_QWORD *a1)
{
  return sub_2400DD1BC(a1);
}

uint64_t sub_2400DE170@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DE184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKBodyTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DE198())()
{
  return nullsub_1;
}

uint64_t sub_2400DE1B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKBodyTrackerState(0);
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400DE1F4@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DE208(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DE21C())()
{
  return nullsub_1;
}

uint64_t sub_2400DE234@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400DE248(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400DE25C())()
{
  return nullsub_1;
}

double sub_2400DE274()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
}

_QWORD *sub_2400DE280(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2400DE28C())()
{
  return nullsub_1;
}

double sub_2400DE2A4@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity + 8);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400DE2C4(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400DE2E4())()
{
  return nullsub_1;
}

uint64_t sub_2400DE2FC()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId);
}

uint64_t sub_2400DE30C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400DE31C())()
{
  return nullsub_1;
}

uint64_t sub_2400DE334()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId);
}

uint64_t sub_2400DE344(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400DE354())()
{
  return nullsub_1;
}

uint64_t sub_2400DE36C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId);
}

uint64_t sub_2400DE37C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400DE38C())()
{
  return nullsub_1;
}

uint64_t sub_2400DE3A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2400E71B0(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion, a1);
}

uint64_t sub_2400DE3B8(uint64_t a1)
{
  uint64_t v1;

  return sub_2400E71F8(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
}

uint64_t (*sub_2400DE3C8())()
{
  return nullsub_1;
}

uint64_t sub_2400DE3E0@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DE3F4(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DE408())()
{
  return nullsub_1;
}

uint64_t sub_2400DE420()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400DE430(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400DE440())()
{
  return nullsub_1;
}

uint64_t sub_2400DE458()
{
  return swift_retain();
}

uint64_t sub_2400DE468(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation) = a1;
  return swift_release();
}

uint64_t (*sub_2400DE480())()
{
  return nullsub_1;
}

uint64_t sub_2400DE498(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400DE4C4 + 4 * byte_24015C0DC[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400DE4C4()
{
  return 1684632949;
}

uint64_t sub_2400DE4D0()
{
  return 1952671090;
}

uint64_t sub_2400DE4DC()
{
  return 0x797469746E656469;
}

uint64_t sub_2400DE4F4()
{
  return 0x644974736E61;
}

uint64_t sub_2400DE508()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400DE524()
{
  return 0x644970756F7267;
}

uint64_t sub_2400DE53C()
{
  return 0x6E6F69746F6DLL;
}

unint64_t sub_2400DE550()
{
  return 0xD000000000000015;
}

uint64_t sub_2400DE56C()
{
  return 0x6573624F7473616CLL;
}

uint64_t sub_2400DE590()
{
  return 0x616470557473616CLL;
}

uint64_t sub_2400DE5B0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400DE5DC + 4 * byte_24015C0E7[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400DE5DC()
{
  return 1684632949;
}

uint64_t sub_2400DE5E8()
{
  return 1952671090;
}

uint64_t sub_2400DE5F4()
{
  return 0x797469746E656469;
}

uint64_t sub_2400DE60C()
{
  return 0x644974736E61;
}

uint64_t sub_2400DE620()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400DE63C()
{
  return 0x644970756F7267;
}

uint64_t sub_2400DE654()
{
  return 0x6E6F69746F6DLL;
}

unint64_t sub_2400DE668()
{
  return 0xD000000000000015;
}

uint64_t sub_2400DE684()
{
  return 0x6573624F7473616CLL;
}

uint64_t sub_2400DE6A8()
{
  return 0x616470557473616CLL;
}

uint64_t sub_2400DE6C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB174();
  *a1 = result;
  return result;
}

uint64_t sub_2400DE6FC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB174();
  *a1 = result;
  return result;
}

uint64_t sub_2400DE728()
{
  sub_2400E7330();
  return sub_240155048();
}

uint64_t sub_2400DE750()
{
  sub_2400E7330();
  return sub_240155054();
}

uint64_t DKObjectTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14)
{
  uint64_t v14;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  double *v32;
  _QWORD *v33;

  v22 = *a3;
  v23 = a3[1];
  v24 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion;
  v25 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation) = 0;
  v27 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time;
  v28 = sub_240154310();
  v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
  v29(v27, a1, v28);
  v30 = v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid;
  v31 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v30, a2, v31);
  v32 = (double *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
  *v32 = a9;
  v32[1] = a10;
  v32[2] = a11;
  v32[3] = a12;
  v33 = (_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
  *v33 = v22;
  v33[1] = v23;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = a4;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = a5;
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = a6;
  sub_2400E71F8(a7, v24);
  v29(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, a8, v28);
  *(_QWORD *)(v14 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = a13;
  *(_QWORD *)(v14 + v26) = a14;
  swift_release();
  return v14;
}

uint64_t DKObjectTrackerState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_2400E7240(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, v2);
  swift_release();
  return v0;
}

uint64_t DKObjectTrackerState.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_2400E7240(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2400DEAA4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  char v42;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v2);
  v33 = (uint64_t)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_24015434C();
  v34 = *(_QWORD *)(v4 - 8);
  v35 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v36 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_240154310();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v32 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v31 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB120);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7330();
  sub_240155030();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  v16(v11, v39 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, v6);
  LOBYTE(v40) = 0;
  v17 = sub_2400B3490(&qword_256FB66E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v38 = v12;
  v18 = v37;
  sub_240154E80();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v38);
  }
  else
  {
    v31[1] = v17;
    v37 = v16;
    v20 = *(void (**)(char *, uint64_t))(v7 + 8);
    v20(v11, v6);
    v21 = v39;
    v23 = v34;
    v22 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v36, v39 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, v35);
    LOBYTE(v40) = 1;
    sub_2400B3490(&qword_256FB8CE8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    v31[0] = v20;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v36, v22);
    v24 = *(_OWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect + 16);
    v40 = *(_OWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
    v41 = v24;
    v42 = 2;
    type metadata accessor for CGRect(0);
    v25 = v38;
    sub_2400B3490(&qword_256FB67A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    v26 = v25;
    sub_240154E80();
    v27 = v13;
    v28 = *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity + 8);
    *(_QWORD *)&v40 = *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
    *((_QWORD *)&v40 + 1) = v28;
    v42 = 3;
    sub_2400C2FAC();
    sub_240154E80();
    LOBYTE(v40) = 4;
    sub_240154E74();
    LOBYTE(v40) = 5;
    sub_240154E74();
    LOBYTE(v40) = 6;
    sub_240154E74();
    v29 = v33;
    sub_2400E71B0(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion, v33);
    LOBYTE(v40) = 7;
    type metadata accessor for DKMotion3();
    sub_2400B3490(&qword_256FB50A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    sub_240154E50();
    sub_2400E7240(v29);
    v30 = v32;
    v37(v32, v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, v6);
    LOBYTE(v40) = 8;
    sub_240154E80();
    ((void (*)(char *, uint64_t))v31[0])(v30, v6);
    LOBYTE(v40) = 9;
    sub_240154E74();
    *(_QWORD *)&v40 = *(_QWORD *)(v21 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation);
    v42 = 10;
    type metadata accessor for DKObjectObservation(0);
    sub_2400B3490(&qword_256FB8E10, 255, type metadata accessor for DKObjectObservation, (uint64_t)&protocol conformance descriptor for DKObjectObservation);
    sub_240154E50();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, v26);
  }
}

uint64_t DKObjectTrackerState.__allocating_init(from:)(uint64_t a1)
{
  return sub_24009D5A8(a1, (void (*)(uint64_t))DKObjectTrackerState.init(from:));
}

uint64_t DKObjectTrackerState.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(uint64_t, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  char v56;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v3);
  v41 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_24015434C();
  v42 = *(_QWORD *)(v5 - 8);
  v43 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v44 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = sub_240154310();
  v7 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v45 = (char *)v37 - v11;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB130);
  v12 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion;
  v16 = type metadata accessor for DKMotion3();
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v53 = v15;
  v17(v15, 1, 1, v16);
  v49 = OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation;
  v50 = a1;
  v52 = v1;
  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastObservation) = 0;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7330();
  v47 = v14;
  v18 = v51;
  sub_240155024();
  if (v18)
  {
    v19 = v52;
    sub_2400E7240(v53);
    v28 = (uint64_t)v50;
    swift_release();
    type metadata accessor for DKObjectTrackerState(0);
    swift_deallocPartialClassInstance();
    v29 = v28;
  }
  else
  {
    v20 = v44;
    v38 = v9;
    v39 = v16;
    v51 = v12;
    v40 = v7;
    LOBYTE(v54) = 0;
    v21 = sub_2400B3490(&qword_256FB67F0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE960]);
    v22 = v45;
    v23 = v46;
    sub_240154DFC();
    v37[1] = v21;
    v24 = v52;
    v25 = (char *)(v52 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time);
    v26 = *(void (**)(uint64_t, char *, uint64_t))(v40 + 32);
    v26(v52 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, v22, v23);
    LOBYTE(v54) = 1;
    sub_2400B3490(&qword_256FB8D10, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEAA8]);
    v27 = v43;
    sub_240154DFC();
    v37[0] = v26;
    v45 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, v20, v27);
    type metadata accessor for CGRect(0);
    v56 = 2;
    sub_2400B3490(&qword_256FB6880, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD838]);
    sub_240154DFC();
    v31 = (_OWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
    v32 = v55;
    *v31 = v54;
    v31[1] = v32;
    v56 = 3;
    sub_2400C2FF0();
    sub_240154DFC();
    v33 = *((_QWORD *)&v54 + 1);
    v34 = (_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity);
    *v34 = v54;
    v34[1] = v33;
    LOBYTE(v54) = 4;
    *(_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = sub_240154DF0();
    LOBYTE(v54) = 5;
    *(_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = sub_240154DF0();
    LOBYTE(v54) = 6;
    *(_QWORD *)(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = sub_240154DF0();
    LOBYTE(v54) = 7;
    sub_2400B3490(&qword_256FB50D8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    v35 = (uint64_t)v41;
    sub_240154DCC();
    sub_2400E71F8(v35, v53);
    LOBYTE(v54) = 8;
    v36 = v38;
    sub_240154DFC();
    ((void (*)(uint64_t, char *, uint64_t))v37[0])(v24 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, v36, v23);
    LOBYTE(v54) = 9;
    *(_QWORD *)(v52 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = sub_240154DF0();
    type metadata accessor for DKObjectObservation(0);
    v56 = 10;
    sub_2400B3490(&qword_256FB8E08, 255, type metadata accessor for DKObjectObservation, (uint64_t)&protocol conformance descriptor for DKObjectObservation);
    sub_240154DCC();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v48);
    v19 = v52;
    *(_QWORD *)(v52 + v49) = v54;
    swift_release();
    v29 = (uint64_t)v50;
  }
  __swift_destroy_boxed_opaque_existential_1(v29);
  return v19;
}

uint64_t sub_2400DF79C@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400DF7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400DF7C4())()
{
  return nullsub_1;
}

double sub_2400DF7E0(uint64_t a1, uint64_t a2)
{
  return sub_2400C2270(a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
}

void sub_2400DF7EC(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  sub_2400C2294(a3, a4, a5, a6, a1, a2, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_rect);
}

uint64_t (*sub_2400DF7F8())()
{
  return nullsub_1;
}

double sub_2400DF814@<D0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  double result;

  v2 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity;
  result = *(double *)(v2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)v2;
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400DF838(uint64_t a1)
{
  _QWORD *v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400DF85C())()
{
  return nullsub_1;
}

uint64_t sub_2400DF878()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId);
}

uint64_t sub_2400DF88C(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400DF8A0())()
{
  return nullsub_1;
}

uint64_t sub_2400DF8BC()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId);
}

uint64_t sub_2400DF8D0(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400DF8E4())()
{
  return nullsub_1;
}

uint64_t sub_2400DF900()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId);
}

uint64_t sub_2400DF914(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400DF928())()
{
  return nullsub_1;
}

uint64_t sub_2400DF944@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_2400E71B0(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion, a1);
}

uint64_t sub_2400DF95C(uint64_t a1)
{
  _QWORD *v1;

  return sub_2400E71F8(a1, *v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_motion);
}

uint64_t (*sub_2400DF970())()
{
  return nullsub_1;
}

uint64_t sub_2400DF98C@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DF9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DF9B4())()
{
  return nullsub_1;
}

uint64_t sub_2400DF9D0()
{
  _QWORD *v0;

  return *(_QWORD *)(*v0 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400DF9E4(uint64_t result)
{
  _QWORD *v1;

  *(_QWORD *)(*v1 + OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400DF9F8())()
{
  return nullsub_1;
}

uint64_t sub_2400DFA14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24009D96C(a1, (void (*)(_QWORD))type metadata accessor for DKObjectTrackerState, (uint64_t (*)(uint64_t))DKObjectTrackerState.init(from:), a2);
}

uint64_t sub_2400DFA38(_QWORD *a1)
{
  return sub_2400DEAA4(a1);
}

uint64_t sub_2400DFA58@<X0>(uint64_t a1@<X8>)
{
  return sub_2400C2474(&OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DFA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400C24CC(a1, a2, a3, &OBJC_IVAR____TtC23IntelligentTrackingCore20DKObjectTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DFA80())()
{
  return nullsub_1;
}

uint64_t sub_2400DFA9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DKObjectTrackerState(0);
  result = sub_240154B50();
  *a1 = result;
  return result;
}

uint64_t sub_2400DFADC@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DFAF0(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DFB04())()
{
  return nullsub_1;
}

uint64_t sub_2400DFB1C@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58], a1);
}

uint64_t sub_2400DFB30(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, (uint64_t (*)(_QWORD))MEMORY[0x24BDCEA58]);
}

uint64_t (*sub_2400DFB44())()
{
  return nullsub_1;
}

double sub_2400DFB5C()
{
  return sub_2400C0F70(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
}

_QWORD *sub_2400DFB68(double a1, double a2, double a3, double a4)
{
  return sub_2400C0F90(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect, a1, a2, a3, a4);
}

uint64_t (*sub_2400DFB74())()
{
  return nullsub_1;
}

double sub_2400DFB8C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;

  result = *(double *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity + 8);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
  *(double *)(a1 + 8) = result;
  return result;
}

double sub_2400DFBAC(uint64_t a1)
{
  uint64_t v1;
  double result;
  uint64_t v3;

  result = *(double *)(a1 + 8);
  v3 = v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity;
  *(_QWORD *)v3 = *(_QWORD *)a1;
  *(double *)(v3 + 8) = result;
  return result;
}

uint64_t (*sub_2400DFBCC())()
{
  return nullsub_1;
}

uint64_t sub_2400DFBE4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId);
}

uint64_t sub_2400DFBF4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = result;
  return result;
}

uint64_t (*sub_2400DFC04())()
{
  return nullsub_1;
}

uint64_t sub_2400DFC1C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId);
}

uint64_t sub_2400DFC2C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = result;
  return result;
}

uint64_t (*sub_2400DFC3C())()
{
  return nullsub_1;
}

uint64_t sub_2400DFC54()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId);
}

uint64_t sub_2400DFC64(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = result;
  return result;
}

uint64_t (*sub_2400DFC74())()
{
  return nullsub_1;
}

uint64_t sub_2400DFC8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2400E71B0(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion, a1);
}

uint64_t sub_2400DFCA0(uint64_t a1)
{
  uint64_t v1;

  return sub_2400E71F8(a1, v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
}

uint64_t (*sub_2400DFCB0())()
{
  return nullsub_1;
}

uint64_t sub_2400DFCC8@<X0>(uint64_t a1@<X8>)
{
  return sub_2400B6A34(&OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900], a1);
}

uint64_t sub_2400DFCDC(uint64_t a1)
{
  return sub_2400B6A88(a1, &OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, (uint64_t (*)(_QWORD))MEMORY[0x24BDCE900]);
}

uint64_t (*sub_2400DFCF0())()
{
  return nullsub_1;
}

uint64_t sub_2400DFD08()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate);
}

uint64_t sub_2400DFD18(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = result;
  return result;
}

uint64_t (*sub_2400DFD28())()
{
  return nullsub_1;
}

uint64_t sub_2400DFD40()
{
  return swift_retain();
}

uint64_t sub_2400DFD50(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation) = a1;
  return swift_release();
}

uint64_t (*sub_2400DFD68())()
{
  return nullsub_1;
}

void sub_2400DFD80(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality);
}

_BYTE *sub_2400DFD94(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality) = *result;
  return result;
}

uint64_t (*sub_2400DFDA8())()
{
  return nullsub_1;
}

uint64_t sub_2400DFDC0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400DFDEC + 4 * byte_24015C0F2[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400DFDEC()
{
  return 1684632949;
}

uint64_t sub_2400DFDF8()
{
  return 1952671090;
}

uint64_t sub_2400DFE04()
{
  return 0x797469746E656469;
}

uint64_t sub_2400DFE1C()
{
  return 0x644974736E61;
}

uint64_t sub_2400DFE30()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400DFE4C()
{
  return 0x644970756F7267;
}

uint64_t sub_2400DFE64()
{
  return 0x6E6F69746F6DLL;
}

uint64_t sub_2400DFE78()
{
  return 0x616470557473616CLL;
}

unint64_t sub_2400DFE98()
{
  return 0xD000000000000015;
}

uint64_t sub_2400DFEB4()
{
  return 0x6573624F7473616CLL;
}

uint64_t sub_2400DFED8()
{
  return 0x74696C6172696863;
}

uint64_t sub_2400DFEF8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2400DFF24 + 4 * byte_24015C0FE[a1]))(1701669236, 0xE400000000000000);
}

uint64_t sub_2400DFF24()
{
  return 1684632949;
}

uint64_t sub_2400DFF30()
{
  return 1952671090;
}

uint64_t sub_2400DFF3C()
{
  return 0x797469746E656469;
}

uint64_t sub_2400DFF54()
{
  return 0x644974736E61;
}

uint64_t sub_2400DFF68()
{
  return 0x4972656B63617274;
}

uint64_t sub_2400DFF84()
{
  return 0x644970756F7267;
}

uint64_t sub_2400DFF9C()
{
  return 0x6E6F69746F6DLL;
}

uint64_t sub_2400DFFB0()
{
  return 0x616470557473616CLL;
}

unint64_t sub_2400DFFD0()
{
  return 0xD000000000000015;
}

uint64_t sub_2400DFFEC()
{
  return 0x6573624F7473616CLL;
}

uint64_t sub_2400E0010()
{
  return 0x74696C6172696863;
}

uint64_t sub_2400E0030(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_2400E003C(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_2400DFDC0);
}

uint64_t sub_2400E003C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v6 = *a2;
  v7 = a5(*a1);
  v9 = v8;
  if (v7 == a5(v6) && v9 == v10)
    v12 = 1;
  else
    v12 = sub_240154EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_2400E00C8(uint64_t a1, uint64_t a2)
{
  return sub_2400E00D4(a1, a2, (void (*)(uint64_t))sub_2400DFDC0);
}

uint64_t sub_2400E00D4(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  unsigned __int8 *v3;
  uint64_t v5;

  v5 = *v3;
  sub_240154FE8();
  a3(v5);
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400E0138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400E0144(a1, a2, a3, (void (*)(_QWORD))sub_2400DFDC0);
}

uint64_t sub_2400E0144(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  unsigned __int8 *v4;

  a4(*v4);
  sub_2401546B8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2400E0184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2400E0190(a1, a2, a3, (void (*)(uint64_t))sub_2400DFDC0);
}

uint64_t sub_2400E0190(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  unsigned __int8 *v4;
  uint64_t v6;

  v6 = *v4;
  sub_240154FE8();
  a4(v6);
  sub_2401546B8();
  swift_bridgeObjectRelease();
  return sub_240155018();
}

uint64_t sub_2400E01F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB1B8();
  *a1 = result;
  return result;
}

uint64_t sub_2400E021C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_2400DFDC0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_2400E0244()
{
  unsigned __int8 *v0;

  return sub_2400DFEF8(*v0);
}

uint64_t sub_2400E024C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2400EB1B8();
  *a1 = result;
  return result;
}

void sub_2400E0270(_BYTE *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_2400E027C()
{
  sub_2400E7388();
  return sub_240155048();
}

uint64_t sub_2400E02A4()
{
  sub_2400E7388();
  return sub_240155054();
}

uint64_t DKHandTrackerState.__allocating_init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v27;

  v27 = swift_allocObject();
  DKHandTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
  return v27;
}

uint64_t DKHandTrackerState.init(time:uuid:rect:identity:anstId:trackerId:groupId:motion:lastUpdated:framesSinceLastUpdate:lastObservation:chirality:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  double *v33;
  _QWORD *v34;
  char v40;

  v22 = *a3;
  v23 = a3[1];
  v40 = *a15;
  v24 = v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion;
  v25 = type metadata accessor for DKMotion3();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 1, 1, v25);
  v26 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation) = 0;
  v27 = OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality;
  *(_BYTE *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality) = 0;
  v28 = v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time;
  v29 = sub_240154310();
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32);
  v30(v28, a1, v29);
  v31 = v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid;
  v32 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v31, a2, v32);
  v33 = (double *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
  *v33 = a9;
  v33[1] = a10;
  v33[2] = a11;
  v33[3] = a12;
  v34 = (_QWORD *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
  *v34 = v22;
  v34[1] = v23;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_anstId) = a4;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_trackerId) = a5;
  *(_QWORD *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_groupId) = a6;
  sub_2400E71F8(a7, v24);
  v30(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, a8, v29);
  *(_QWORD *)(v15 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_framesSinceLastUpdate) = a13;
  *(_QWORD *)(v15 + v26) = a14;
  swift_release();
  *(_BYTE *)(v15 + v27) = v40;
  return v15;
}

uint64_t DKHandTrackerState.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_2400E7240(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, v2);
  swift_release();
  return v0;
}

uint64_t DKHandTrackerState.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;

  v1 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time;
  v2 = sub_240154310();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(v1, v2);
  v4 = v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid;
  v5 = sub_24015434C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  sub_2400E7240(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion);
  v3(v0 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, v2);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_2400E06FC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t);
  uint64_t (*v19)(char *, uint64_t);
  char *v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  char *v28;
  char *v29;
  _QWORD v30[2];
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  void (*v36)(char *, uint64_t, uint64_t);
  char *v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  char v41;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FB4438);
  MEMORY[0x24BDAC7A8](v2);
  v32 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_24015434C();
  v35 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v34 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_240154310();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v31 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v30 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_256FBB138);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2400E7388();
  v15 = v11;
  sub_240155030();
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v16(v10, v38 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_time, v5);
  LOBYTE(v39) = 0;
  v17 = sub_2400B3490(&qword_256FB66E0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCE900], MEMORY[0x24BDCE920]);
  v37 = v14;
  v18 = v36;
  sub_240154E80();
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v5);
    v19 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    v20 = v37;
  }
  else
  {
    v30[1] = v17;
    v36 = v16;
    v21 = (uint64_t)v32;
    v22 = *(void (**)(char *, uint64_t))(v6 + 8);
    v22(v10, v5);
    v23 = v38;
    v24 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, v38 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_uuid, v33);
    LOBYTE(v39) = 1;
    sub_2400B3490(&qword_256FB8CE8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA70]);
    sub_240154E80();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v24);
    v26 = *(_OWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect + 16);
    v39 = *(_OWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_rect);
    v40 = v26;
    v41 = 2;
    type metadata accessor for CGRect(0);
    sub_2400B3490(&qword_256FB67A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x24BDBD828]);
    v35 = v15;
    sub_240154E80();
    v27 = *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity + 8);
    *(_QWORD *)&v39 = *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_identity);
    *((_QWORD *)&v39 + 1) = v27;
    v41 = 3;
    sub_2400C2FAC();
    sub_240154E80();
    LOBYTE(v39) = 4;
    sub_240154E74();
    LOBYTE(v39) = 5;
    sub_240154E74();
    LOBYTE(v39) = 6;
    sub_240154E74();
    sub_2400E71B0(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_motion, v21);
    LOBYTE(v39) = 7;
    v34 = (char *)type metadata accessor for DKMotion3();
    sub_2400B3490(&qword_256FB50A0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DKMotion3, (uint64_t)&protocol conformance descriptor for DKMotion3);
    sub_240154E50();
    sub_2400E7240(v21);
    v28 = v31;
    v36(v31, v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastUpdated, v5);
    LOBYTE(v39) = 8;
    sub_240154E80();
    v22(v28, v5);
    LOBYTE(v39) = 9;
    sub_240154E74();
    *(_QWORD *)&v39 = *(_QWORD *)(v23 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_lastObservation);
    v41 = 10;
    type metadata accessor for DKHandObservation(0);
    sub_2400B3490(&qword_256FB6730, 255, type metadata accessor for DKHandObservation, (uint64_t)&protocol conformance descriptor for DKHandObservation);
    sub_240154E50();
    LOBYTE(v39) = *(_BYTE *)(v38 + OBJC_IVAR____TtC23IntelligentTrackingCore18DKHandTrackerState_chirality);
    v41 = 11;
    sub_2400C3224();
    v15 = v35;
    v29 = v37;
    sub_240154E80();
    v19 = *(uint64_t (**)(char *, uint64_t))(v12 + 8);
    v20 = v29;
  }
  return v19(v20, v15);
}

